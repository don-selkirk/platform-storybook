"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[364],{"./libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>UiActionButtonsNewComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),action_button_size_enum=__webpack_require__("./libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts");let UiActionButtonsNewComponent=class UiActionButtonsNewComponent{constructor(){this.actionButtons=[],this.UiButtonSizeEnum=action_button_size_enum.J}ngOnInit(){}};UiActionButtonsNewComponent.ctorParameters=()=>[],UiActionButtonsNewComponent.propDecorators={actionButtons:[{type:core.Input}]},UiActionButtonsNewComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-action-buttons-new",template:'<div class="d-flex flex-row-reverse gap-2">\n    <ng-container *ngFor="let btn of actionButtons">\n        <ui-button\n            *ngIf="btn.type !== \'btn-seperator\'"\n            [id]="btn.id"\n            [text]="btn.text"\n            [tooltipText]="btn.tooltipText"\n            [type]="btn.type"\n            [size]="btn.size"\n            [icon]="btn.icon"\n            [disabled]="btn.disabled"\n            [clicked]="btn.clicked"\n            [inversed]="btn.inversed"\n            >\n            \x3c!-- TODO: prefix/suffix not working as expected\n                [iconLocation]="btn.iconLocation"\n            --\x3e\n        </ui-button>\n        <div class="btn-seperator" *ngIf="btn.type === \'btn-seperator\'"></div>\n    </ng-container>\n\n</div>\n',styles:[".btn-seperator {\n  border-right: 1px solid #d2d6da;\n  margin: 5px;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiActionButtonsNewComponent)},"./libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiButtonSizeEnum;__webpack_require__.d(__webpack_exports__,{J:()=>UiButtonSizeEnum}),function(UiButtonSizeEnum){UiButtonSizeEnum.SMALL="btn-sm",UiButtonSizeEnum.MEDIUM="btn-md"}(UiButtonSizeEnum||(UiButtonSizeEnum={}))},"./libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>UiPageHeaderService});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_angular_router__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js");let UiPageHeaderService=class UiPageHeaderService{constructor(_router){this._router=_router,this.breadcrumbString="",this.backButtonText="COMMON.BACK",this.breadcrumbs=[],this.routeSegments=[],this.hideOnRoute=!0,this.keepActionButtonsOnRoute=!1,this.subject=new rxjs__WEBPACK_IMPORTED_MODULE_0__.B,this.showPageHeader$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.B,this._showPageHeader=!1,this._pageTitle="",this._pageTitleParams={},this._pageSubTitle="",this._pageSubTitleParams={},this._backToButtonText="",this._showBackButton=!1,this._showBreadcrumb=!1,this._defaultMaxActionButtons=2,this._maxActionButtons=this._defaultMaxActionButtons,this._actionDropdowns=[],this._actionButtons=[],this._pills=[],this._status=[],this._subNavs=[],this._tabsets=[],this._showDropdowns=!1,this._dropdowns=[],this._showSubNav=!1,this._showTabSets=!1,this._feedbackText="",this._feedbackTextParams={},this._feedbackIcon="",this._feedbackIconColor="",this._router.events.subscribe((evt=>{var _a,_b;if(evt instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__.wF){!0===this.hideOnRoute&&(this.showPageHeader=!1,this.subNavs=[],this.showSubNav=!1,this.pageSubTitle="");(null===(_b=null===(_a=this._router.getCurrentNavigation().extras)||void 0===_a?void 0:_a.state)||void 0===_b?void 0:_b.keepTabsets)||(this.tabsets=[],this.showTabsets=!1),this.keepActionButtonsOnRoute||(this.actionButtons=[],this.maxActionButtons=this._defaultMaxActionButtons),this.pills=[],this.dropdowns=[],this.backToButtonText="",this.backButtonText="COMMON.BACK",this.showBackButton=!1,this.feedbackText="",this.feedbackIcon="",this.feedbackIconColor=""}evt instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__.Z&&(this.breadcrumbString=evt.url)}))}set pageTitle(value){setTimeout((()=>{this._pageTitle=value}))}get pageTitle(){return this._pageTitle}set pageTitleParams(value){setTimeout((()=>{this._pageTitleParams=value}))}get pageTitleParams(){return this._pageTitleParams}set pageSubTitle(value){setTimeout((()=>{this._pageSubTitle=value}))}get pageSubTitle(){return this._pageSubTitle}set pageSubTitleParams(value){setTimeout((()=>{this._pageSubTitleParams=value}))}get pageSubTitleParams(){return this._pageSubTitleParams}set backToButtonText(value){setTimeout((()=>{this._backToButtonText=value}))}get backToButtonText(){return this._backToButtonText}set showBackButton(value){setTimeout((()=>{this._showBackButton=value}))}get showBackButton(){return this._showBackButton}set showBreadcrumb(value){setTimeout((()=>{this._showBreadcrumb=value}))}get showBreadcrumb(){return this._showBreadcrumb}set status(values){this._status=values}get status(){return this._status}set pills(values){this._pills=values}get pills(){return this._pills}set dropdowns(value){setTimeout((()=>{this._dropdowns=value}))}get dropdowns(){return this._dropdowns}set showDropdowns(value){setTimeout((()=>{this._showDropdowns=value}))}get showDropdowns(){return this._showDropdowns}set showSubNav(value){setTimeout((()=>{this._showSubNav=value}))}get showSubNav(){return this._showSubNav}set subNavs(values){setTimeout((()=>{this._subNavs=values}))}get subNavs(){return this._subNavs}set showTabsets(value){setTimeout((()=>{this._showTabSets=value}))}get showTabsets(){return this._showTabSets}set tabsets(values){this._tabsets=values}get tabsets(){return this._tabsets}set feedbackText(value){setTimeout((()=>{this._feedbackText=value}))}get feedbackText(){return this._feedbackText}set feedbackTextParams(value){setTimeout((()=>{this._feedbackTextParams=value}))}get feedbackTextParams(){return this._feedbackTextParams}set feedbackIcon(value){setTimeout((()=>{this._feedbackIcon=value}))}get feedbackIcon(){return this._feedbackIcon}set feedbackIconColor(value){setTimeout((()=>{this._feedbackIconColor=value}))}get feedbackIconColor(){return this._feedbackIconColor}set maxActionButtons(value){this._maxActionButtons=value}get maxActionButtons(){return this._maxActionButtons}get actionDropdowns(){return this._actionDropdowns}set actionButtons(values){setTimeout((()=>{-1!==this.maxActionButtons?(this._actionButtons=values.slice(0,this.maxActionButtons).reverse(),this._actionDropdowns=values.slice(this.maxActionButtons,values.length)):this._actionButtons=values.reverse()}))}get actionButtons(){return this._actionButtons}set showPageHeader(value){setTimeout((()=>{this._showPageHeader=value}))}get showPageHeader(){return this._showPageHeader}};UiPageHeaderService.ctorParameters=()=>[{type:_angular_router__WEBPACK_IMPORTED_MODULE_1__.Ix}],UiPageHeaderService=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injectable)({providedIn:"root"}),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Sn)("design:paramtypes",[_angular_router__WEBPACK_IMPORTED_MODULE_1__.Ix])],UiPageHeaderService)},"./libs/ui/src/lib/modules/layout2/components/page-header/page-header.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>page_header_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs"),page_header_service=__webpack_require__("./libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts");let UiPageHeaderComponent=class UiPageHeaderComponent{constructor(pageHeaderService,activatedRoute,_location,_router){this.pageHeaderService=pageHeaderService,this.activatedRoute=activatedRoute,this._location=_location,this._router=_router}ngOnInit(){}goBack(){this._location.back()}navigate(link){this._router.navigate([link],{relativeTo:this.activatedRoute.firstChild})}onActionButtonClick(e){void 0!==e.clicked&&e.clicked(e)}};UiPageHeaderComponent.ctorParameters=()=>[{type:page_header_service.I},{type:router.nX},{type:common.aZ},{type:router.Ix}],UiPageHeaderComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-page-header",template:'<div *ngIf="\n    (pageHeaderService !== undefined && pageHeaderService.showPageHeader === true)\n    && (pageHeaderService.pageTitle !== \'\'\n    || pageHeaderService.pageSubTitle !== \'\'\n    || pageHeaderService.showBackButton === true\n    || pageHeaderService.pills.length !== 0\n    || pageHeaderService.status.length !== 0\n    || pageHeaderService.dropdowns.length !== 0\n    || pageHeaderService.tabsets.length !== 0\n    || pageHeaderService.subNavs.length !== 0 && pageHeaderService.showSubNav === true\n    || pageHeaderService.feedbackText !== \'\'\n    || pageHeaderService.actionButtons.length !== 0\n    || pageHeaderService.actionDropdowns.length !== 0\n    )"\n    class="ms-4 me-4"\n    >\n\n    <div *ngIf="\n        pageHeaderService.pageTitle !== \'\'\n        || pageHeaderService.pageSubTitle !== \'\'\n        || pageHeaderService.showBackButton === true\n        || pageHeaderService.pills.length !== 0\n        || pageHeaderService.status.length !== 0\n        || pageHeaderService.dropdowns.length !== 0\n        || pageHeaderService.feedbackText !== \'\'\n        || pageHeaderService.actionButtons.length !== 0\n        || pageHeaderService.actionDropdowns.length !== 0"\n        class="row w-100"\n        style="min-height: 85px"\n    >\n\n        \x3c!-- Left Side --\x3e\n        <div class="col-6 d-flex flex-column justify-content-center mt-3 mb-3" >\n            \x3c!-- Back Button / Breadcrumb --\x3e\n            <div *ngIf="pageHeaderService.showBackButton === true || pageHeaderService.showBreadcrumb === true">\n                \x3c!-- Back button --\x3e\n                <button\n                    *ngIf="pageHeaderService.showBackButton === true"\n                    type="button"\n                    class="btn btn-link m-0 p-0"\n                    (click)="goBack()">\n                    <i class="bi bi-chevron-left me-1"></i>\n                    <span *ngIf="pageHeaderService.backToButtonText === \'\'">{{pageHeaderService.backButtonText | translate}}</span>\n                    <span *ngIf="pageHeaderService.backToButtonText !== \'\'">Back to {{pageHeaderService.backToButtonText | translate}}</span>\n                </button>\n                \x3c!-- Breadcrumbs --\x3e\n                <nav class="mt-2"\n                    *ngIf="pageHeaderService.showBreadcrumb === true\n                    && pageHeaderService.breadcrumbString !== \'\'"\n                    aria-label="breadcrumb">\n                    <ol class="breadcrumb">\n                        <li class="breadcrumb-item"><a href="#">{{pageHeaderService.breadcrumbString | translate}}</a></li>\n                        \x3c!-- Keep for future implemetation of Breadcrumbs --\x3e\n                        \x3c!-- <li *ngFor="let item of pageHeaderService.breadcrumbs" class="breadcrumb-item"><a [routerLink]="item.link">{{item.title | translate}}</a></li> --\x3e\n                        \x3c!-- <li class="breadcrumb-item"><a href="#">Library</a></li>\n                        <li class="breadcrumb-item active" aria-current="page">Data</li> --\x3e\n                    </ol>\n                </nav>\n            </div>\n\n            \x3c!-- Page Title --\x3e\n            <h2 *ngIf="pageHeaderService.pageTitle !== \'\'" class="pb-2 pt-2">{{pageHeaderService.pageTitle | translate: pageHeaderService.pageTitleParams}}</h2>\n\n            \x3c!-- Description / Subtitle --\x3e\n            <small *ngIf="pageHeaderService.pageSubTitle !== \'\'" class="">{{pageHeaderService.pageSubTitle | translate: pageHeaderService.pageSubTitleParams}}</small>\n\n            \x3c!-- Pills --\x3e\n            <div *ngIf="pageHeaderService.pills.length !== 0" class="d-flex mt-3 mb-2">\n                <span *ngFor="let item of pageHeaderService.pills" class="badge rounded-pill noHover me-1" [ngClass]="item.type!">{{item.label | translate}}</span>\n            </div>\n\n            \x3c!-- Status --\x3e\n            <div *ngIf="pageHeaderService.status.length !== 0" class="d-flex gap-10 mt-2 mb-3">\n                <span *ngFor="let item of pageHeaderService.status" class="dot sm" [ngClass]="item.type!">\n                    <span class="dot-text sm">{{item.label! | translate}}</span>\n                </span>\n            </div>\n\n            \x3c!-- Dropdowns --\x3e\n            <div *ngIf="pageHeaderService.showDropdowns === true && pageHeaderService.dropdowns.length !== 0" class="d-flex gap-10 mt-3 mb-1">\n                \x3c!-- <ui-drop-down *ngFor="let item of pageHeaderService.dropdowns" [config]="item"></ui-drop-down> --\x3e\n            </div>\n        </div>\n\n        \x3c!-- Right Side --\x3e\n        <div class="col-6 mt-3 mb-3 d-flex align-items-center justify-content-end ">\n            \x3c!-- Action Buttons --\x3e\n            <div class="d-flex justify-content-between align-items-end flex-column gap-10">\n                \x3c!-- Feedback --\x3e\n                <div *ngIf="pageHeaderService.feedbackText !== \'\'" class="d-flex justify-content-end align-items-center">\n                    <i *ngIf="pageHeaderService.feedbackIcon !== \'\'" class="bi default me-1" [ngClass]="[pageHeaderService.feedbackIcon, pageHeaderService.feedbackIconColor]"></i>\n                    <span class="small">{{pageHeaderService.feedbackText | translate: pageHeaderService.feedbackTextParams}}</span>\n                </div>\n                \x3c!-- Action Buttons and More Action Dropdown --\x3e\n                <div *ngIf="pageHeaderService.actionDropdowns.length !== 0 || pageHeaderService.actionButtons.length !== 0" class="d-flex justify-content-end gap-10">\n                    \x3c!-- More Dropdown --\x3e\n                    <ng-container *ngIf="pageHeaderService.actionDropdowns.length !== 0">\n                        <div ngbDropdown  placement="bottom-end">\n                            <button\n                            type="button"\n                            class="btn btn-outline-primary btn-md actions"\n                            container="body"\n                            id="dotButton"\n                            ngbDropdownToggle\n                            >\n                                <i class="bi bi-three-dots-vertical"></i>\n                            </button>\n                            <div ngbDropdownMenu aria-labelledby="dropdownBasic1">\n                                <button [id]="item.id" *ngFor="let item of pageHeaderService.actionDropdowns; let i = index;" ngbDropdownItem (click)="onActionButtonClick(item)" [disabled]="item.disabled!">\n                                    <ng-container>{{item.text | translate}}</ng-container>\n                                </button>\n                            </div>\n                        </div>\n                    </ng-container>\n                    \x3c!-- Action Buttons --\x3e                     \n                    <ui-action-buttons-new [actionButtons]="pageHeaderService.actionButtons"></ui-action-buttons-new>   \n                </div>\n            </div>\n        </div>\n    </div>\n\n    \x3c!-- Sub Nav Buttons --\x3e\n    <div class="row pt-3" *ngIf="pageHeaderService.showSubNav && pageHeaderService.subNavs.length !== 0">\n        <div class="col-12">\n            <div class="d-flex flex-wrap mb-2">\n                <button\n                    (click)="navigate(item.routerLink!)"\n                    [routerLinkActive]="[\'active\']"\n                    *ngFor="let item of pageHeaderService.subNavs"\n                    type="button"\n                    class="btn btn-sm me-2 mb-1"\n                    [ngClass]="item.type!">\n                    <ng-container *ngIf="item.labelParams === undefined">{{item.label | translate}}</ng-container>\n                    <ng-container *ngIf="item.labelParams !== undefined">{{item.label | translate: item.labelParams}}</ng-container>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    \x3c!-- Tabset --\x3e\n    <div *ngIf="pageHeaderService.showTabsets === true && pageHeaderService.tabsets.length !== 0" class="row mt-2">\n        <div class="col-12">\n            <ul ngbNav #nav="ngbNav" [(activeId)]="active" class="nav-tabs">\n                <li *ngFor="let item of pageHeaderService.tabsets; let i = index;" [ngbNavItem]="i">\n                    <ng-container *ngIf="item.labelParams === undefined"><a ngbNavLink [routerLink]="item.routerLink" [state]="{ keepTabsets: true }" routerLinkActive #rla="routerLinkActive" [class.active]="rla.isActive">{{item.label | translate}}</a></ng-container>\n                    <ng-container *ngIf="item.labelParams !== undefined"><a ngbNavLink [routerLink]="item.routerLink" [state]="{ keepTabsets: true }" routerLinkActive #rla="routerLinkActive" [class.active]="rla.isActive">{{item.label | translate: item.labelParams}}</a></ng-container>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n',styles:[".breadcrumb {\n  margin-bottom: 0.3rem;\n}\n\n.row {\n  --bs-gutter-x: 0rem;\n}\n\n.actions.dropdown-toggle::after {\n  display: none;\n}\n\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\n  margin: 0;\n}\n\n.nav-tabs {\n  border-bottom: 0px;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[page_header_service.I,router.nX,common.aZ,router.Ix])],UiPageHeaderComponent);var http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),testing=__webpack_require__("./node_modules/@angular/router/fesm2020/testing.mjs"),action_buttons_component=__webpack_require__("./libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");const page_header_component_stories={title:"Layout/PageHeader",component:UiPageHeaderComponent,decorators:[(0,client.moduleMetadata)({declarations:[action_buttons_component.z],imports:[testing.c,ngx_translate_core.h.forRoot({loader:{provide:ngx_translate_core.Wr,useClass:ngx_translate_core.dx}})],providers:[http.JV]})]},Primary=(args=>({props:args})).bind({});Primary.args={}}}]);