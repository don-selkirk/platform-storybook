"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[9380],{"./libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiAlertLayoutEnum;__webpack_require__.d(__webpack_exports__,{C:()=>UiAlertLayoutEnum}),function(UiAlertLayoutEnum){UiAlertLayoutEnum.STACKED="actionsStacked",UiAlertLayoutEnum.INLINE="actionsInline"}(UiAlertLayoutEnum||(UiAlertLayoutEnum={}))},"./libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiAlertTypeEnum;__webpack_require__.d(__webpack_exports__,{q:()=>UiAlertTypeEnum}),function(UiAlertTypeEnum){UiAlertTypeEnum.success="success",UiAlertTypeEnum.danger="danger",UiAlertTypeEnum.warning="warning",UiAlertTypeEnum.neutral="neutral",UiAlertTypeEnum.info="info"}(UiAlertTypeEnum||(UiAlertTypeEnum={}))},"./libs/ui/src/lib/services/toast-notification/enums/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiToastTypesEnum;__webpack_require__.d(__webpack_exports__,{O:()=>UiToastTypesEnum}),function(UiToastTypesEnum){UiToastTypesEnum.info="info",UiToastTypesEnum.success="success",UiToastTypesEnum.warning="warning",UiToastTypesEnum.danger="danger"}(UiToastTypesEnum||(UiToastTypesEnum={}))},"./libs/ui/src/lib/services/toast-notification/toast.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>UiToastService});var tslib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),_enums__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/ui/src/lib/services/toast-notification/enums/index.ts");let UiToastService=class UiToastService{constructor(){this._toastsSubject=new rxjs__WEBPACK_IMPORTED_MODULE_1__.t([])}get toasts$(){return this._toastsSubject.asObservable()}show(text,type=_enums__WEBPACK_IMPORTED_MODULE_0__.O.info,options={},toastId){const temp={id:toastId||this.generateId(),text,type,options};this._toastsSubject.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.s)(1)).subscribe((toasts=>{toasts.push(temp),this._toastsSubject.next(toasts)}))}remove(toast){this._toastsSubject.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.s)(1)).subscribe((toasts=>{this._toastsSubject.next(toasts.filter((t=>t.id!==toast.id)))}))}clear(){this._toastsSubject.next([])}generateId(){return(new Date).getTime().toString()}};UiToastService=(0,tslib__WEBPACK_IMPORTED_MODULE_3__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable)({providedIn:"root"})],UiToastService)},"./libs/ui/src/lib/services/toast-notification/toast-container/toasts-container.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>toasts_container_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),toast_service=__webpack_require__("./libs/ui/src/lib/services/toast-notification/toast.service.ts"),enums=__webpack_require__("./libs/ui/src/lib/services/toast-notification/enums/index.ts"),alert_type_enum=__webpack_require__("./libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts"),alert_layout_enum=__webpack_require__("./libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts");let UiToastsContainerComponent=class UiToastsContainerComponent{constructor(_toastService){this._toastService=_toastService,this.sticky=!0,this.toastTypes=enums.O,this.UiAlertLayoutEnum=alert_layout_enum.C,this.toasts$=this._toastService.toasts$}ngOnInit(){this.toasts$.subscribe((toasts=>{toasts.forEach((toast=>{!0!==toast.options.autoHide&&void 0!==toast.options.autoHide||setTimeout((()=>{this.onHidden(toast)}),5e3)}))}))}mapType(type){switch(type){case enums.O.info:return alert_type_enum.q.info;case enums.O.success:return alert_type_enum.q.success;case enums.O.warning:return alert_type_enum.q.warning;case enums.O.danger:return alert_type_enum.q.danger;default:return alert_type_enum.q.info}}onHidden(toast){this._toastService.remove(toast)}onCloseClick(toast){this._toastService.remove(toast)}};UiToastsContainerComponent.ctorParameters=()=>[{type:toast_service.p}],UiToastsContainerComponent.propDecorators={sticky:[{type:core.HostBinding,args:["class.ngb-toasts"]}]},UiToastsContainerComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-toasts-container",template:'<ng-container *ngFor="let toast of toasts$ | async">\n    <ui-alert\n        (hidden)="onHidden(toast)"\n        [id]="\'toast-id-\' + toast.id"\n        [text]="toast.text"\n        [type]="mapType(toast.type)"\n        [dismissible]="toast.options.autoHide === false"\n        [layout]="UiAlertLayoutEnum.STACKED"\n    >\n    </ui-alert>\n</ng-container>',styles:[":host {\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1200;\n}\n\n.alert .alert-container {\n  max-width: 400px;\n}\n\n.toast, .alert .alert-container {\n  box-sizing: border-box;\n  color: #2a2b2c;\n  font-size: 14px;\n  width: 400px;\n  word-break: break-word;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border: 1px solid #0aa4c2;\n  background-color: #ceedf3;\n}\n\n.toast.toast-info, .alert .toast-info.alert-container {\n  border: 1px solid #0aa4c2;\n  background-color: #ceedf3;\n}\n\n.toast.toast-info .type-icon, .alert .toast-info.alert-container .type-icon {\n  color: #0aa4c2;\n  font-size: 20px;\n}\n\n.toast.toast-success, .alert .toast-success.alert-container {\n  border-color: #50955b;\n  background-color: #dceade;\n}\n\n.toast.toast-success .type-icon, .alert .toast-success.alert-container .type-icon {\n  color: #50955b;\n  font-size: 20px;\n}\n\n.toast.toast-warning, .alert .toast-warning.alert-container {\n  border-color: #cc8800;\n  background-color: #ffeecc;\n}\n\n.toast.toast-warning .type-icon, .alert .toast-warning.alert-container .type-icon {\n  color: #cc8800;\n  font-size: 20px;\n}\n\n.toast.toast-danger, .alert .toast-danger.alert-container {\n  border-color: #b3223a;\n  background-color: #f9d4db;\n}\n\n.toast.toast-danger .type-icon, .alert .toast-danger.alert-container .type-icon {\n  color: #b3223a;\n  font-size: 20px;\n}\n\n.toast .text-message, .alert .alert-container .text-message {\n  margin: 0 1rem 0 1rem;\n}\n\n.toast .btn-close, .alert .alert-container .btn-close {\n  color: #2a2b2c;\n  margin-left: 1rem;\n  position: absolute;\n  right: 0;\n  top: 0.5rem;\n}\n\n.toast .btn-close:focus, .alert .alert-container .btn-close:focus {\n  outline: none;\n  box-shadow: none;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[toast_service.p])],UiToastsContainerComponent);const toasts_container_component_stories={title:"Components/ToastsContainer",component:UiToastsContainerComponent,decorators:[(0,client.moduleMetadata)({imports:[]})]},Primary=(args=>({props:args})).bind({});Primary.args={}}}]);