(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[494],{"./apps/acp-ui/src/app/shared/constants/common.const.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Y3:()=>REGEX_CONST});const REGEX_CONST=Object.freeze({DOMAIN:/^(?:[a-zA-Z0-9-]*[a-zA-Z0-9]\.){1,}[a-zA-Z]{2,6}$/i,GUID:/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i,PASSWORD:/^[^\d]*\d[^\d]*[A-Z][^A-Z]*[a-z][^a-z]*[^\w\d\s:][^\w\d\s:]*([^\s]){5,99}$/,DUNS_NUMBER:/^[0-9]{9,9}$/,ALPHANUMERIC_CHARACTER:/^[a-zA-Z0-9\s\-]+$/,IM_CUSTOM_CHARACTERS:/^[a-zA-Z0-9$.’+§\s-]+$/,URL:/^((https?):\/\/)?([a-z0-9-]+\.)+[a-z]{2,6}(:[0-9]{1,5})?(\/.*)?$/,LOOSE_MATCH_URL:/^[A-Za-z][A-Za-z\d.+-]*:\/*.+$/,ALPHANUMERIC_NO_SPACE_CHARACTER:/^[a-zA-Z0-9]?[-a-zA-Z0-9]{0,498}[a-zA-Z0-9]?$/,REMOVE_HTML_TAGS:/(<([^>]+)>)/gi,EMAIL:/^[a-zA-Z0-9]+([-_+.][a-zA-Z0-9]+)*@[a-zA-Z0-9]+([-_+.][a-zA-Z0-9]+)*\.[a-zA-Z0-9]+$/});Object.freeze(5e3),Object.freeze({PAGE_SIZE:10,MAX_PAGE_SIZE:1e3}),Object.freeze({YEAR_MONTH_DAY:"yyyy/MM/dd",YEAR_MONTH_DAY_HOUR_MIN:"yyyy-MM-dd HH:mm"}),Object.freeze({INACTIVE_CONTACTS:"Inactive Contacts",UNRELATED_DOMAINS:"Unrelated Domains"}),Object.freeze({INACTIVE_CONTACTS:1,UNRELATED_DOMAINS:2})},"./libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{d:()=>UiActionButtonsComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts");let UiActionButtonsComponent=class UiActionButtonsComponent{constructor(){this.showClearButton=!0,this.showSetButton=!0}ngOnInit(){}};UiActionButtonsComponent.ctorParameters=()=>[],UiActionButtonsComponent.propDecorators={id:[{type:core.Input}],showClearButton:[{type:core.Input}],showSetButton:[{type:core.Input}],form:[{type:core.Input}]},UiActionButtonsComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-action-buttons",template:'<div *ngIf="form !== undefined">\n    \x3c!-- View Mode --\x3e\n    <button [id]="id + \'_EditButton\'" *ngIf="!form.editMode" class="btn btn-primary ms-3" (click)="form.onEditBtnClick($event)">{{ \'COMMON.EDIT\' | translate }}</button>\n\n    \x3c!-- Edit Mode --\x3e\n    <button [id]="id + \'_SetButton\'" *ngIf="form.editMode && showSetButton" class="btn btn-link me-2" (click)="form.onSetPayloadBtnClick($event)" >\n        Set\n    </button>\n    <button [id]="id + \'_ClearButton\'" *ngIf="form.editMode && showClearButton" class="btn btn-link me-2" (click)="form.onClearBtnClick($event)" >\n        {{ \'COMMON.CLEAR\' | translate }}\n    </button>\n    <div *ngIf="form.editMode && (showSetButton || showClearButton)" class="vr  ms-3 me-3"></div>\n    <button [id]="id + \'_SaveButton\'" *ngIf="form.editMode" class="btn btn-primary ms-3 me-2" (click)="form.onSaveBtnClick($event)" [disabled]="form.form.invalid">\n        {{ \'COMMON.SAVE\' | translate }}\n    </button>\n    <button [id]="id + \'_CancelButton\'" *ngIf="form.editMode" class="btn btn-link" (click)="form.onCancelBtnClick($event)">{{ \'COMMON.CANCEL\' | translate }}</button>\n</div>',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiActionButtonsComponent)},"./libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{j:()=>UiCheckboxComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),form_control_base_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts");let UiCheckboxComponent=class UiCheckboxComponent extends form_control_base_component.I{constructor(){super(...arguments),this.inline=!1,this.showPointer=!0}};UiCheckboxComponent.propDecorators={options:[{type:core.Input}],inline:[{type:core.Input}],showPointer:[{type:core.Input}]},UiCheckboxComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-checkbox",template:'\n\n<div *ngIf="form !== undefined" class="pt-1">\n\n    <div class="form-check " [ngClass]="{ \'form-check-inline\': inline === true }">\n         <input\n            [id]="id + \'_Checkbox\'"\n            [name]="formControlName"\n            type="checkbox"\n            class="form-check-input"\n            [ngModel]="value"\n            [placeholder]="placeholder"\n            [disabled]="disabled"\n            (ngModelChange)="onChange($event)"\n            [ngClass]="{\'pointer\' : !disabled && showPointer}"\n        />\n\n        <label\n            [id]="id + \'_Label\'"\n            [for]="id + \'_Checkbox\'"\n            class="form-check-label d-inline-block"\n            [ngClass]="{\'pointer\' : !disabled && showPointer}"\n            >\n            {{label}}\n            <span [id]="id + \'_RequiredAsterisk\'" *ngIf="form.controls[formControlName].hasValidator(Validators.requiredTrue)">*</span>\n        </label>\n        <i *ngIf="showInfoIcon && infoText !== \'\'" class="bi bi-question-circle-fill d-inline-block" placement="top" [ngbTooltip]="infoText"></i>\n\n    </div>\n\n    <div class="error-text d-inline-block ps-1" style="margin-top: 0px;" *ngIf="form.controls[formControlName].invalid && showErrorValidation">\n        <div *ngIf="form.controls[formControlName].errors">\n            <div [id]="id + \'_RequiredTrueErrorText\'" *ngIf="form.controls[formControlName].errors.requiredTrue">\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\n            </div>\n            <div [id]="id + \'_RequiredErrorText\'" *ngIf="form.controls[formControlName].errors.required">\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\n            </div>\n        </div>\n    </div>\n    <div [id]="id + \'_HelpText\'" *ngIf="showHelpText && helpText !== \'\'" id="" class="help-text">{{helpText}}</div>\n\n</div>\n',styles:[".form-check-inline {\n  width: max-content;\n  margin-right: 0.5rem;\n}"]})],UiCheckboxComponent)},"./libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Y:()=>UiDatePickerPlusComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2020/ng-bootstrap.mjs");let UiDatePickerPlusComponent=class UiDatePickerPlusComponent{constructor(_calendar){this._calendar=_calendar,this.footerTemplate=!1,this.displayMonths=2,this.dateSelectionChange=new core.EventEmitter,this.navigation="select",this.showWeekNumbers=!1,this.outsideDays="hidden",this.hoveredDate=null,this.weekdays=common.cH.Abbreviated}set fromDate(date){this._fromDate=new ng_bootstrap.gj(date.year,date.month,date.day)}get fromDate(){return{day:this._fromDate.day,month:this._fromDate.month,year:this._fromDate.year}}set toDate(date){this._toDate=new ng_bootstrap.gj(date.year,date.month,date.day)}get toDate(){return{day:this._toDate.day,month:this._toDate.month,year:this._toDate.year}}ngOnInit(){1===this.displayMonths&&(this.toDate=new ng_bootstrap.gj(null,null,null),this.maxDays=1),void 0===this.fromDate||this.fromDate.year,this.fromDate.month,null===this.fromDate.day?this._fromDate=this._calendar.getToday():this._fromDate=new ng_bootstrap.gj(this.fromDate.year,this.fromDate.month,this.fromDate.day),2===this.displayMonths&&(void 0===this.toDate||null===this.toDate||this.toDate.year,this.toDate.month,null===this.toDate.day)?this._toDate=this._calendar.getNext(this._calendar.getToday(),"d",10):this._toDate=new ng_bootstrap.gj(this.toDate.year,this.toDate.month,this.toDate.day),this.dateSelectionChange.emit({fromDate:this.fromDate,toDate:this.toDate})}onDateSelection(date){this._fromDate&&(this._fromDate.year,this._fromDate.month,null!==this._fromDate.day)||this._toDate?!this._fromDate||(this._fromDate.year,this._fromDate.month,null===this._fromDate.day)||this._toDate&&(this._toDate.year,this._toDate.month,null!==this._toDate.day)||!date.after(this._fromDate)?(this._fromDate=new ng_bootstrap.gj(date.year,date.month,date.day),this._toDate=new ng_bootstrap.gj(null,null,null)):2===this.displayMonths?this._toDate=new ng_bootstrap.gj(date.year,date.month,date.day):(this._fromDate=new ng_bootstrap.gj(date.year,date.month,date.day),this._toDate=new ng_bootstrap.gj(null,null,null)):(this._fromDate=new ng_bootstrap.gj(date.year,date.month,date.day),this._toDate=new ng_bootstrap.gj(null,null,null)),this.dateSelectionChange.emit({fromDate:this.fromDate,toDate:this.toDate})}getFromDate(){return this._fromDate}getToDate(){return this._toDate}formatDateString(date){if(null!=date){return date.year+"-"+(date.month<=9?"0"+date.month:date.month)+"-"+(date.day<=9?"0"+date.day:date.day)}}isHovered(date){return this._fromDate&&!this._toDate&&this.hoveredDate&&date.after(this._fromDate)&&date.before(this.hoveredDate)}isInside(date){return this._toDate&&date.after(this._fromDate)&&date.before(this._toDate)}isRange(date){return date.equals(this._fromDate)||this._toDate&&date.equals(this._toDate)||this.isInside(date)||this.isHovered(date)}clear(){this._fromDate=new ng_bootstrap.gj(null,null,null),this._toDate=new ng_bootstrap.gj(null,null,null),this.dateSelectionChange.emit({fromDate:this.fromDate,toDate:this.toDate})}};UiDatePickerPlusComponent.ctorParameters=()=>[{type:ng_bootstrap.iF}],UiDatePickerPlusComponent.propDecorators={footerTemplate:[{type:core.Input}],displayMonths:[{type:core.Input}],fromDate:[{type:core.Input}],toDate:[{type:core.Input}],dateSelectionChange:[{type:core.Output}]},UiDatePickerPlusComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-date-picker-plus-component",template:'    <ngb-datepicker\n        #datePicker\n        [ngClass]="{ ranged: displayMonths === 2 }"\n        (dateSelect)="onDateSelection($event)"\n        [displayMonths]="displayMonths"\n        [navigation]="navigation"\n        [showWeekNumbers]="showWeekNumbers"\n        [weekdays]="weekdays"\n        [outsideDays]="outsideDays"\n        [footerTemplate]="footerTemplate" \n        [dayTemplate]="dayTemplate"\n        strictMode=\'true\'\n    >\n        <ng-template #footerTemplate [ngIf]="footerTemplate">\n            <hr />\n            <div class="footer-controls">\n                <button class="btn btn-link btn-sm" (click)="clear()">Clear</button>\n                <button class="btn btn-link btn-sm">Apply</button>\n            </div>\n        </ng-template>\n    </ngb-datepicker>\n\n    <ng-template #dayTemplate let-date let-focused="focused">\n        <span\n            class="ngb-dp-day"\n            [class.focused]="focused"\n            [class.range]="isRange(date)"\n            [class.faded]="isHovered(date) || isInside(date)"\n            (mouseenter)="hoveredDate = date"\n            (mouseleave)="hoveredDate = null"\n        >\n            {{ date.day }}\n        </span>\n    </ng-template>\n',styles:[".footer-controls {\n  gap: 0.375rem;\n  display: flex;\n  justify-content: flex-end;\n  padding: 0px 16px 8px 16px;\n  margin-top: -8px;\n}\n\n:host ::ng-deep ngb-datepicker {\n  min-width: 15rem;\n  width: 15rem;\n  border-color: #d2d6da;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-month {\n  width: 15rem;\n  padding: 8px;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-weekday {\n  color: #7e8083;\n  font-style: normal;\n  line-height: 1.31rem;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-month:last-child .ngb-dp-week {\n  padding-right: 0;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-month + .ngb-dp-month .ngb-dp-month-name,\n:host ::ng-deep ngb-datepicker .ngb-dp-month + .ngb-dp-month .ngb-dp-week {\n  padding-left: 0;\n}\n\n:host ::ng-deep ngb-datepicker.ranged {\n  width: 30rem;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-months {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-month {\n  width: 18.75rem;\n  padding: 8px;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-weekday {\n  color: #7e8083;\n  font-style: normal;\n  line-height: 1.31rem;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-week {\n  justify-content: space-between;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-month + .ngb-dp-month .ngb-dp-month-name,\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-month + .ngb-dp-month .ngb-dp-week {\n  padding-left: 0;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day {\n  font-size: 14px;\n  height: 1.9rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day.focused {\n  background-color: #00857C;\n  color: #fff;\n  width: 2rem;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day.focused:hover {\n  color: #fff;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day.range {\n  background-color: #00857C;\n  color: #fff;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day.range:hover {\n  border: 1px solid #00857C;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day.faded {\n  background-color: #cce7e5 !important;\n  color: #000;\n  width: 2.5rem;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day.faded:hover {\n  border: 1px solid #00857C;\n  background-color: #cce7e5;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-day :hover {\n  border: 1px solid #00857C;\n}\n\n:host ::ng-deep ngb-datepicker.ranged ngb-datepicker-navigation-select {\n  padding: 0px 4px 0px 4px;\n  gap: 8px;\n  display: flex;\n}\n\n:host ::ng-deep ngb-datepicker.ranged ngb-datepicker-navigation-select .form-select {\n  width: 12rem;\n}\n\n:host ::ng-deep ngb-datepicker.ranged .ngb-dp-navigation-chevron {\n  border-style: solid;\n  border-width: 0.1em 0.1em 0 0;\n  display: inline-block;\n  width: 0.75em;\n  height: 0.75em;\n  color: #2a2b2c;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-weekdays {\n  margin-bottom: 8px;\n  padding-top: 8px;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-month-name {\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  padding: 8px;\n  gap: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 2.5rem;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-header {\n  background-color: #fff;\n  padding: 8px 8px 0px 8px;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-content .ngb-dp-month-name,\n:host ::ng-deep ngb-datepicker .ngb-dp-content .ngb-dp-week {\n  background-color: #fff;\n}\n\n:host ::ng-deep ngb-datepicker ngb-datepicker-navigation-select {\n  padding: 0px 4px 0px 4px;\n  display: flex;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-navigation-chevron {\n  border-style: solid;\n  border-width: 0.1em 0.1em 0 0;\n  display: inline-block;\n  width: 0.75em;\n  height: 0.75em;\n  color: #2a2b2c;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-month:first-child .ngb-dp-week {\n  padding-left: 0;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-months {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-day {\n  font-size: 14px;\n  width: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-day.range {\n  background-color: #00857C;\n  color: #fff;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-day.range.faded {\n  background-color: #fff;\n  color: #000;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-day .focused {\n  background-color: #00857C;\n  color: #fff;\n  z-index: 4;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-day.range:hover {\n  border: 1px solid #00857C;\n}\n\n:host ::ng-deep ngb-datepicker .ngb-dp-day :hover {\n  border: 1px solid #00857C;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[ng_bootstrap.iF])],UiDatePickerPlusComponent)},"./libs/ui/src/lib/modules/form-controls/form-controls.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>UiFormControlsModule});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2020/ng-bootstrap.mjs"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js"),ngx_quill=__webpack_require__("./node_modules/ngx-quill/fesm2020/ngx-quill.mjs"),lib_esmodule=__webpack_require__("./node_modules/ng-click-outside/lib_esmodule/index.js"),angular_flex_layout=__webpack_require__("./node_modules/@angular/flex-layout/fesm2020/angular-flex-layout.mjs");let UiTruncatePipe=class UiTruncatePipe{transform(value,args){if(!value)return"";let limit=20;if(args.length>0){const parsedLimit=parseInt(args[0],10);isNaN(parsedLimit)||(limit=parsedLimit)}const trail=args.length>1?String(args[1]):"...";return value.length>limit?value.substring(0,limit)+trail:value}};UiTruncatePipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"truncate"})],UiTruncatePipe);let UiMonthNamePipe=class UiMonthNamePipe{constructor(_i18n){this._i18n=_i18n}transform(value){return value&&"number"==typeof value?this._i18n.getMonthFullName(value):""}};UiMonthNamePipe.ctorParameters=()=>[{type:ng_bootstrap.G7}],UiMonthNamePipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"monthNamePipe"}),(0,tslib_es6.Sn)("design:paramtypes",[ng_bootstrap.G7])],UiMonthNamePipe);var action_buttons_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.ts"),checkbox_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.ts");var UiDatepickerComponent_1;let UiDatepickerComponent=UiDatepickerComponent_1=class UiDatepickerComponent{constructor(_calendar,_dateAdapter){this._calendar=_calendar,this._dateAdapter=_dateAdapter,this.placeholder="mm/dd/yyyy",this.placement="bottom-left top-left",this.requiredDate=!1,this.showIcon=!1,this.disabled=!1,this.touched=!1,this.onChange=({value})=>{},this.onTouched=()=>{},this.onValidationChange=()=>{}}ngOnInit(){}ngOnChanges(changes){(changes.minDate&&!changes.minDate.isFirstChange()||changes.maxDate&&!changes.maxDate.isFirstChange()||changes.requiredDate&&!changes.requiredDate.isFirstChange())&&(this.touched=!0,this.onValidationChange()),this.setDatepickerLimits()}writeValue(data){this.dpModel=this.extractDpModelValue(data);const ngbDate=this._dateAdapter.fromModel(this.dpModel);this.setDateString(ngbDate),this.startDate=ngbDate}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}validate(control){if(this.formField=control,this.dpModel&&!this.isValidDate(this.dpModel))throw new Error("Invalid Date type");let error=null;return error=this.validateRequiredDate(this.dpModel),this.touched&&(error=error||this.validateDate(this.dpModel,"min"),error=error||this.validateDate(this.dpModel,"max")),error}registerOnValidatorChange(fn){this.onValidationChange=fn}onDateSelect(date){const formattedDate=this._dateAdapter.toModel(date);this.markAsTouched(),this.startDate=date,this.setDateString(date),this.onChange({value:formattedDate})}onTodayClick(){const today=this._calendar.getToday();this.dpModel=this._dateAdapter.toModel(today),this.onDateSelect(today)}markAsTouched(){this.touched||(this.onTouched(),this.touched=!0)}clearValue(){this.dpModel=null,this.onDateSelect(null)}navigateByMonth(datepicker,number){const{state,calendar}=datepicker;datepicker.navigateTo(calendar.getNext(state.firstDate,"m",number))}navigateByYear(datepicker,number){const{state,calendar}=datepicker;datepicker.navigateTo(calendar.getNext(state.firstDate,"y",number))}extractDpModelValue(data){let value=null;return data&&(value=data.hasOwnProperty("value")?data.value:data,"string"==typeof value&&(value=new Date(value))),value}isValidDate(date){let valid=!1;return date instanceof Date&&"function"==typeof date.getMonth&&(valid=!0),valid}validateRequiredDate(date){let error=null;return this.requiredDate&&!date&&(error={requiredDate:!0}),error}validateDate(date,prefix){const limitDate=this[prefix+"Date"];if(!limitDate||!date)return null;if(!this.isValidDate(limitDate))throw new Error("Invalid Date type");let valid=null;const copiedLimit=new Date(limitDate.getTime()),copiedDate=new Date(date.getTime());return copiedLimit.setHours(0,0,0,0),copiedDate.setHours(0,0,0,0),"min"===prefix&&copiedLimit>copiedDate?valid={minDate:{min:this.minDate}}:"max"===prefix&&copiedLimit<copiedDate&&(valid={maxDate:{max:this.maxDate}}),valid}setDatepickerLimits(){this.dpMinDate=this._dateAdapter.fromModel(this.minDate),this.dpMaxDate=this._dateAdapter.fromModel(this.maxDate)}setDateString(date){let formattedDate;formattedDate=date?("0"+date.month).slice(-2)+"/"+("0"+date.day).slice(-2)+"/"+date.year:this.placeholder,this.dateString=formattedDate}};UiDatepickerComponent.ctorParameters=()=>[{type:ng_bootstrap.iF},{type:ng_bootstrap.dn}],UiDatepickerComponent.propDecorators={placeholder:[{type:core.Input}],placement:[{type:core.Input}],minDate:[{type:core.Input}],maxDate:[{type:core.Input}],requiredDate:[{type:core.Input}],showIcon:[{type:core.Input}]},UiDatepickerComponent=UiDatepickerComponent_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-datepicker",template:' <div class="input-group">\n    \n    \x3c!-- <i *ngIf="!disabled && dpModel" class="bi bi-x clear-icon" (click)="clearValue()"></i>     --\x3e\n    <input\n        class="form-control"\n        [ngClass]="{\n            \'is-invalid\': formField !== undefined && formField.invalid && (formField.touched || formField.dirty)\n        }"\n        autocomplete="off"\n        [placeholder]="placeholder"\n        [readonly]="!showIcon"\n        [disabled]="disabled"\n        [value]="dateString"\n        [ngbPopover]="datepickerContent"\n        #popover="ngbPopover"\n        popoverClass="custom-popover"\n        container="body"\n        [placement]="placement"\n        autoClose="outside"\n        (blur)="onTouched()"\n        (keydown.backspace)="!disabled && clearValue()">  \n    \n    <span class="input-group-text"> \n        <i class="bi bi-calendar3" aria-hidden="true"></i>\n    </span>\n    \x3c!-- <button\n        *ngIf="showIcon && !disabled"\n        class="btn btn-outline-secondary pointer"\n        type="button"\n        [ngbPopover]="datepickerContent"\n        #popover="ngbPopover"\n        popoverClass="custom-popover"\n        container="body"\n        [placement]="placement"\n        (blur)="onTouched()"\n        autoClose="outside">\n        <i class="fa fa-calendar"></i>\n    </button> --\x3e\n</div>\n\n<ng-template #datepickerContent>\n    <ngb-datepicker\n        #d\n        name="dp"\n        class="custom-datepicker"\n        navigation="none"\n        [dayTemplate]="dayTemplate"\n        [footerTemplate]="footerTemplate"\n        [disabled]="disabled"\n        [minDate]="dpMinDate"\n        [maxDate]="dpMaxDate"\n        [(ngModel)]="dpModel"\n        [startDate]="startDate"\n        (dateSelect)="onDateSelect($event); popover.close()">\n        <ng-template ngbDatepickerContent>\n            <div *ngFor="let month of d.state.months">\n                <div class="text-primary px-1 py-2 fw-bold text-center">\n                    <i class="bi bi-chevron-double-left float-start px-1" role="button" (click)="navigateByYear(d, -1)"></i>\n                    <i class="bi bi-chevron-left float-start px-1" role="button" (click)="navigateByMonth(d, -1)"></i>\n                    {{month.month | monthNamePipe}} {{ month.year }}\n                    <i class="bi bi-chevron-double-right float-end px-1" role="button" (click)="navigateByYear(d, 1)"></i>\n                    <i class="bi bi-chevron-right float-end px-1" role="button" (click)="navigateByMonth(d, 1)"></i>\n                </div>\n                <ngb-datepicker-month class="custom-datepicker-month" [month]="month"></ngb-datepicker-month>\n            </div>\n        </ng-template>\n    </ngb-datepicker>\n</ng-template>\n\n<ng-template\n    #dayTemplate\n    let-date\n    let-currentMonth="currentMonth"\n    let-selected="selected"\n    let-disabled="disabled">\n    <span class="custom-day"\n        [class.selected-day]="selected"\n        [class.disabled-day]="disabled"\n        [class.another-month]="!disabled && date.month !== currentMonth">\n        {{ date.day }}\n    </span>\n</ng-template>\n\n<ng-template #footerTemplate>\n    <div class="footer-container">\n        <span class="custom-footer" (click)="onTodayClick(); popover.close()">\n            Today\n        </span>\n    </div>\n</ng-template>\n',encapsulation:core.ViewEncapsulation.None,providers:[{provide:fesm2020_forms.NG_VALUE_ACCESSOR,multi:!0,useExisting:UiDatepickerComponent_1},{provide:fesm2020_forms.NG_VALIDATORS,multi:!0,useExisting:UiDatepickerComponent_1},{provide:ng_bootstrap.dn,useClass:ng_bootstrap.Ae}],styles:[".form-control[readonly] {\n  background-color: #fff;\n}\n.form-control[readonly]:disabled {\n  background-color: #edeff0;\n}\n.clear-icon {\n  border: 0;\n  color: #a8abae;\n  cursor: pointer;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  position: absolute;\n  right: 40px;\n  top: 7px;\n  vertical-align: middle;\n  z-index: 3;\n}\n.clear-icon:hover {\n  visibility: visible;\n}\n.datepicker-input:hover + .clear-icon {\n  visibility: visible;\n}\n.datepicker-input:focus + .clear-icon {\n  visibility: visible;\n}\n.custom-popover {\n  border-color: #dbdee1;\n  border-radius: 2px;\n  border: 0;\n  box-shadow: 0px 9px 12px rgba(0, 0, 0, 0.14), 0px 3px 16px rgba(0, 0, 0, 0.12), 0px 5px 6px rgba(0, 0, 0, 0.2);\n}\n.custom-popover .arrow {\n  display: none;\n}\n.custom-popover .popover-body {\n  padding: 0;\n}\n.custom-datepicker {\n  border: 0;\n  border-radius: 0;\n}\n.custom-datepicker .ngb-dp-header {\n  background-color: #fff;\n}\n.custom-datepicker .ngb-dp-weekday {\n  color: #00857C;\n}\n.custom-datepicker .ngb-dp-content .ng-star-inserted .custom-datepicker-month {\n  border-bottom: 1px solid #dbdee1;\n  border-top: 1px solid #dbdee1;\n  padding: 0 0.5rem;\n}\n.custom-datepicker .ngb-dp-content .ng-star-inserted .custom-datepicker-month .ngb-dp-weekdays {\n  background-color: #fff;\n  border-bottom: 0;\n  padding: 0.1rem 0;\n}\n.custom-datepicker .ngb-dp-content .ng-star-inserted .custom-datepicker-month .ngb-dp-weekdays .ngb-dp-weekday {\n  color: #2a2b2c;\n  font-style: normal;\n  font-weight: normal;\n}\n.custom-day {\n  border-radius: 0.25rem;\n  border: 0.1rem;\n  box-sizing: border-box;\n  color: #2a2b2c;\n  display: inline-block;\n  padding: 0.185rem 0.25rem;\n  text-align: center;\n  width: 2rem;\n}\n.custom-day:hover {\n  background-color: #edeff0;\n}\n.selected-day {\n  border: 0.1rem solid #00857C;\n  background-color: #fff;\n}\n.disabled-day {\n  color: #dbdee1;\n}\n.another-month {\n  color: #a8abae;\n}\n.footer-container {\n  padding: 0.5rem;\n  text-align: center;\n}\n.footer-container .custom-footer {\n  color: #00857C;\n  cursor: pointer;\n  display: inline-block;\n}\n.inner-addon {\n  position: relative;\n}\n/* style icon */\n.inner-addon .bi-calendar3 {\n  position: absolute;\n  padding: 10px;\n  pointer-events: none;\n}\n/* align icon */\n.left-addon .bi {\n  left: 5px;\n}\n.right-addon .bi {\n  right: 5px;\n}\n/* add padding  */\n.left-addon input {\n  padding-left: 40px;\n}\n.right-addon input {\n  padding-right: 40px;\n}\n.was-validated .form-control:valid .right-addon .bi, .was-validated .acp-form-control:valid .right-addon .bi, .form-control.is-valid .right-addon .bi, .ng-valid .right-addon .bi, .ng-invalid .right-addon .bi, .is-valid.acp-form-control .right-addon .bi, .acp-form-control.ng-valid.ng-touched .right-addon .bi, .acp-form-control.ng-valid.ng-dirty .right-addon .bi {\n  right: 30px;\n}\n.was-validated .form-control:valid .right-addon .bi.clear-icon, .was-validated .acp-form-control:valid .right-addon .bi.clear-icon, .form-control.is-valid .right-addon .bi.clear-icon, .ng-valid .right-addon .bi.clear-icon, .ng-invalid .right-addon .bi.clear-icon, .is-valid.acp-form-control .right-addon .bi.clear-icon, .acp-form-control.ng-valid.ng-touched .right-addon .bi.clear-icon, .acp-form-control.ng-valid.ng-dirty .right-addon .bi.clear-icon {\n  right: 65px;\n}\n.input-group .inner-addon {\n  position: relative;\n  flex: 1 1 auto;\n  width: 1%;\n  min-width: 0;\n}\n.input-group .inner-addon input {\n  margin-left: -1px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.input-group > .form-control, .input-group > .acp-form-control, .input-group > .form-select {\n  position: relative;\n  flex: 1 1 auto;\n  width: 1%;\n  min-width: 0;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[ng_bootstrap.iF,ng_bootstrap.dn])],UiDatepickerComponent);var ui_date_picker_plus_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.ts"),dropdown_plus_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts"),form_base_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts"),form_control_base_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts"),multi_pill_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/pills/components/multi-pill/multi-pill.component.ts"),pill_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts"),progress_indicator_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts");var quill=__webpack_require__("./node_modules/quill/dist/quill.js"),sanitize_html=__webpack_require__("./node_modules/sanitize-html/index.js"),sanitize_html_default=__webpack_require__.n(sanitize_html);const Quill=quill,Clipboard=Quill.import("modules/clipboard"),Delta=Quill.import("delta");class UiPasteClipboard extends Clipboard{onPaste(e){if(e.defaultPrevented||!this.quill.isEnabled())return;const range=this.quill.getSelection();let delta=(new Delta).retain(range.index);if(e&&e.clipboardData&&e.clipboardData.types&&e.clipboardData.getData){const text=(e.originalEvent||e).clipboardData.getData("text/html")||(e.originalEvent||e).clipboardData.getData("text/plain"),newEl=document.createElement("div");newEl.id="paste-"+this.quill.id,newEl.innerHTML=text,newEl.querySelectorAll("span").forEach((el=>{let newHtml=el.innerHTML;"underline"!==el.style.textDecoration&&"underline"!==el.style.textDecorationLine||(newHtml="<u>"+newHtml+"</u>"),"700"===el.style.fontWeight&&(newHtml="<strong>"+newHtml+"</strong>"),"italic"===el.style.fontStyle&&(newHtml="<em>"+newHtml+"</em>"),el.outerHTML=newHtml}));const unsanitizedText=sanitize_html_default()(newEl.innerHTML,{allowedTags:["i","em","strong","u","a","small","p","h4","h5","sup","sub","ol","ul","li","br"],transformTags:{h1:"h4",h2:"h4",h3:"h5"},allowedAttributes:{a:["href","target: blank"]},allowedClasses:[]});newEl.remove();const cleanedText=this.convert(unsanitizedText);return e.stopPropagation(),e.preventDefault(),delta=delta.concat(cleanedText).delete(range.length),this.quill.updateContents(delta,Quill.sources.USER),this.quill.setSelection(delta.length()-range.length,Quill.sources.SILENT),!1}}}const rich_text_editor_component_Quill=quill;let UiRichTextEditorComponent=class UiRichTextEditorComponent extends form_control_base_component.I{ngOnInit(){this.modules={toolbar:!1},rich_text_editor_component_Quill.register("modules/clipboard",UiPasteClipboard)}};UiRichTextEditorComponent.propDecorators={editor:[{type:core.ViewChild,args:["editor"]}]},UiRichTextEditorComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-rich-text-editor-old",template:'<div *ngIf="form !== undefined">\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\n    <label [id]="id + \'_Label\'" for="formControlName">\n        {{ label }}\n        \x3c!-- Required Asterix --\x3e\n        <span [id]="id + \'_RequiredAsterisk\'" *ngIf="form.controls[formControlName].hasValidator(Validators.required)">*</span>\n    </label>\n    <i\n        [id]="id + \'_InfoIcon\'"\n        *ngIf="showInfoIcon && infoText !== \'\'"\n        class="bi bi-question-circle-fill"\n        placement="top"\n        [ngbTooltip]="infoText"\n    ></i>\n\n    <div class="input-group">\n        \x3c!-- Prefix Icon --\x3e\n        <span *ngIf="prefixIcon !== \'\'" class="input-group-text">\n            <i [id]="id + \'_PrefixIcon\'" class="bi" aria-hidden="true" [ngClass]="prefixIcon"></i>\n        </span>\n\n        \x3c!-- Prefix Text --\x3e\n        <span [id]="id + \'_PrefixText\'" *ngIf="prefixText !== \'\'" class="input-group-text"> </span>\n        <div class="rich-text-editor-container">\n        <ui-rich-text-editor-toolbar-old [editor]="editor"></ui-rich-text-editor-toolbar-old>\n        <quill-editor\n            #editor\n            id="editor"\n            label="edit"\n            [ngClass]="{\n                \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\n                \'is-valid\': form.controls[formControlName].valid && showSuccessValidation\n            }"\n            (input)="onChange($event.target.value)"\n            [value]="d"\n            [disabled]="false"\n            [placeholder]="\'COMMON.TEXT_EDITOR.TYPE_IMPORTANT_INFO_HERE\' | translate"\n            [modules]="modules"\n        >\n        </quill-editor>\n    </div>\n        \x3c!-- Suffix Icon --\x3e\n        <span [id]="id + \'_SuffixIcon\'" *ngIf="suffixIcon !== \'\'" class="input-group-text">\n            <i class="bi" aria-hidden="true" [ngClass]="suffixIcon"></i>\n        </span>\n\n        \x3c!-- Suffix Text --\x3e\n        <span [id]="id + \'_SuffixText\'" *ngIf="suffixText !== \'\'" class="input-group-text">\n            {{ suffixText }}\n        </span>\n    </div>\n\n    <div class="feedback">\n        \x3c!-- Success Feedback Text --\x3e\n        <div [id]="id + \'_SuccessText\'" class="success-text" *ngIf="form.controls[formControlName].valid && showSuccessValidation">\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\n        </div>\n\n        \x3c!-- Error Feedback Text --\x3e\n        <div class="error-text" *ngIf="form.controls[formControlName].invalid && showErrorValidation">\n            <div [id]="id + \'_RequiredErrorText\'" *ngIf="form.controls[formControlName].errors.required">\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\n            </div>\n        </div>\n\n        \x3c!-- Help Text --\x3e\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\n        <div *ngIf="!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)">\n            <div [id]="id + \'_HelpText\'" *ngIf="showHelpText && helpText !== \'\'" class="help-text">{{ helpText }}</div>\n        </div>\n    </div>\n</div>\n',styles:[""]})],UiRichTextEditorComponent);var rich_text_editor_toolbar_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts"),tags_input_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.ts"),text_area_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/text-area/text-area.component.ts"),text_input_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/text-input/text-input.component.ts"),dropdown_multi_select_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.ts");let UiDropdownOldFormControlsComponent=class UiDropdownOldFormControlsComponent extends form_control_base_component.I{constructor(){super(...arguments),this.type="input",this.w100=!0,this.tooltipText="",this._firstClick=!0}onValueFocus(e){this.showTooltip(e)}onOptionFocus(e){this.showTooltip(e)}showTooltip(e){const ele=e.target.getElementsByClassName("text-truncate")[0];ele.scrollWidth>ele.offsetWidth?this.tooltipText=e.target.innerText:this.tooltipText=""}writeValue(value){null===value?(this._firstClick=!0,this.options.length>0&&(this.value=this.options[0])):this.value=this.options.find((option=>option.value===value))||this.options[0]}changeSelectedOption(option){this._firstClick&&(this._firstClick=!1),this.value=option,this.valueChange.emit(option)}};UiDropdownOldFormControlsComponent.propDecorators={textInput:[{type:core.ViewChild,args:["textInput"]}],button:[{type:core.ViewChild,args:["button"]}],type:[{type:core.Input}],options:[{type:core.Input}],w100:[{type:core.Input}]},UiDropdownOldFormControlsComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-dropdown-old",template:'<div *ngIf="form !== undefined">\n    \x3c!-- Label --\x3e\n    <label [id]="id + \'_Label\'" for="formControlName">\n        {{ label }}\n        \x3c!-- Required Asterix --\x3e\n        <span [id]="id + \'_RequiredAsterisk\'" *ngIf="form.controls[formControlName].hasValidator(Validators.required)">*</span>\n    </label>\n\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\n    <i\n        [id]="id + \'_InfoIcon\'"\n        *ngIf="showInfoIcon && infoText !== \'\'"\n        class="bi bi-question-circle-fill"\n        placement="top"\n        [ngbTooltip]="infoText"\n    ></i>\n\n    \x3c!-- ngb dropdown --\x3e\n    <div [id]="id + \'_Dropdown\'" ngbDropdown>\n        <i\n            *ngIf="type === \'input\'"\n            class="fa fa-caret-down"\n            [ngClass]="{ \'text-muted\': disabled === true }"\n            style="position: absolute; top: 10px; right: 13px"\n            aria-hidden="true"\n        ></i>\n        <input\n            [id]="id + \'_TriggerInput\'"\n            #textInput\n            *ngIf="type === \'input\'"\n            autocomplete="off"\n            type="text"\n            readonly\n            class="form-control dropdown-toggl"\n            ngbDropdownToggle\n            [value]="value.label"\n            [disabled]="disabled"\n            [ngClass]="{ pointer: disabled === false }"\n        />\n        <button\n            [id]="id + \'_TriggerButton\'"\n            #button\n            *ngIf="type === \'button\' || type === \'button-outline\'"\n            type="button"\n            class="btn form-control dropdown-old-trigger"\n            [ngClass]="{ \'btn-outline-primary\': type === \'button-outline\', \'btn-primary\': type === \'button\', \'w-100\': w100 === true }"\n            ngbDropdownToggle\n            [disabled]="disabled"\n            (mouseenter)="onValueFocus($event)"\n        >\n            <span\n                class="text-truncate"\n                [ngbTooltip]="tooltipText"\n                [tooltipClass]="\'tooltip-sm\'"\n            >\n            {{ value.label }}\n            </span>\n\n        </button>\n        <div ngbDropdownMenu [ngClass]="{ \'w-100\': w100 === true || type === \'input\' }">\n            <button\n                [id]="id + \'_Option_\' + i"\n                ngbDropdownItem\n                *ngFor="let option of options; let i = index"\n                [ngClass]="{ \'d-none\': option === value || option.disabled === true }"\n                (click)="changeSelectedOption(option)"\n                class="dropdown-old-option-label"\n                (mouseenter)="onOptionFocus($event)"\n            >\n                <span\n                    class="text-truncate"\n                    [ngbTooltip]="tooltipText"\n                    [tooltipClass]="\'tooltip-sm\'"\n                >\n                    {{ option.label }}\n                </span>\n            </button>\n        </div>\n    </div>\n\n    <div class="feedback">\n        \x3c!-- Success Feedback Text --\x3e\n        <div [id]="id + \'_SuccessText\'" class="success-text" *ngIf="form.controls[formControlName].valid && showSuccessValidation">\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\n        </div>\n\n        \x3c!-- Error Feedback Text --\x3e\n        <div class="error-text" *ngIf="form.controls[formControlName].invalid && showErrorValidation">\n            <div [id]="id + \'_RequiredErrorText\'" *ngIf="form.controls[formControlName].errors.required">\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\n            </div>\n        </div>\n\n        \x3c!-- Help Text --\x3e\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\n        <div *ngIf="!(form.controls[formControlName].invalid && showErrorValidation)">\n            <div [id]="id + \'_HelpText\'" *ngIf="showHelpText && helpText !== \'\'" class="help-text">{{ helpText }}</div>\n        </div>\n    </div>\n</div>\n',styles:[".dropdown-toggle {\n  text-align: left;\n  position: relative;\n}\n.dropdown-toggle::after {\n  /* keeping old CSS for reference\n  float: right;\n  margin-top: 10px;\n  */\n  position: absolute;\n  right: 0.5rem;\n  top: 1rem;\n}\n.dropdown-toggle.dropdown-old-trigger {\n  padding-top: 0.625rem;\n  padding-bottom: 0.25rem;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n}\n.dropdown-toggle.dropdown-old-trigger .text-truncate {\n  max-width: 100%;\n  padding-right: 0.625rem;\n  display: inline-block;\n  line-height: 1;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n.dropdown-menu .dropdown-old-option-label .text-truncate {\n  max-width: 100%;\n  display: inline-block;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}"]})],UiDropdownOldFormControlsComponent);let UiFormControlsModule=class UiFormControlsModule{};UiFormControlsModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[action_buttons_component.d,checkbox_component.j,UiDatepickerComponent,ui_date_picker_plus_component.Y,UiDropdownOldFormControlsComponent,dropdown_plus_component.Z,form_base_component.h,form_control_base_component.I,UiMonthNamePipe,multi_pill_component.K,pill_component.t,progress_indicator_component.g,UiRichTextEditorComponent,rich_text_editor_toolbar_component.B,tags_input_component.T,text_area_component.S,text_input_component.$,UiTruncatePipe,dropdown_multi_select_component.F],imports:[lib_esmodule.s,common.MD,angular_flex_layout.YF,fesm2020_forms.FormsModule,ng_bootstrap.UN,ngx_quill.Qs,fesm2020_forms.ReactiveFormsModule,ngx_translate_core.h],exports:[action_buttons_component.d,checkbox_component.j,UiDatepickerComponent,ui_date_picker_plus_component.Y,UiDropdownOldFormControlsComponent,dropdown_plus_component.Z,multi_pill_component.K,pill_component.t,progress_indicator_component.g,UiRichTextEditorComponent,rich_text_editor_toolbar_component.B,tags_input_component.T,text_area_component.S,text_input_component.$,UiTruncatePipe,dropdown_multi_select_component.F]})],UiFormControlsModule)},"./libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{t:()=>UiPillComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),pill_color_enum=__webpack_require__("./libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts"),pill_size_enum=__webpack_require__("./libs/ui/src/lib/modules/form-controls/pills/enums/pill-size.enum.ts");let UiPillComponent=class UiPillComponent{constructor(){this.xButtonClick=new core.EventEmitter,this.color=pill_color_enum.E.neutral,this.size=pill_size_enum.C.md,this.hasCloseButton=!1,this.noHover=!0,this.isTooltipDisabled=!0}ngOnInit(){this.generatedId="pill-inner-"+this.id}ngAfterViewInit(){setTimeout((()=>{this.checkColumnWidth()}),100)}checkColumnWidth(){this.pill&&this.pill.nativeElement.firstChild.offsetWidth>=this.pill.nativeElement.firstChild.scrollWidth?this.isTooltipDisabled=!0:this.isTooltipDisabled=!1}onResize(){this.checkColumnWidth()}onCloseClick(){this.pill.nativeElement.remove(),this.xButtonClick.emit(this)}};UiPillComponent.ctorParameters=()=>[],UiPillComponent.propDecorators={pill:[{type:core.ViewChild,args:["pill"]}],xButtonClick:[{type:core.Output}],pillText:[{type:core.Input}],color:[{type:core.Input}],size:[{type:core.Input}],hasCloseButton:[{type:core.Input}],noHover:[{type:core.Input}],icon:[{type:core.Input}],value:[{type:core.Input}],id:[{type:core.Input}],isAggregated:[{type:core.Input}],onResize:[{type:core.HostListener,args:["window:resize"]}]},UiPillComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-pill",template:'<span class="pill">\n    <span\n        #pill\n        class="badge {{ color }} rounded-pill {{ size }} float-start"\n        [ngClass]="{ noHover: noHover === true }"\n        *ngIf="pillText !== undefined || null"\n        [id]="id"\n        [ngbTooltip]="pillText"\n        [disableTooltip]="isTooltipDisabled"\n    >\n        <span class="pill-inner" [id]="generatedId">\n            <i *ngIf="icon !== undefined" class="bi {{ icon }}"></i>\n            <span class="pill-text">{{ pillText }}</span>\n        </span>\n        <i *ngIf="hasCloseButton === true" class="bi bi-x-lg" (click)="onCloseClick()"></i>\n    </span>\n</span>\n',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiPillComponent)},"./libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";var UiPillColorEnum;__webpack_require__.d(__webpack_exports__,{E:()=>UiPillColorEnum}),function(UiPillColorEnum){UiPillColorEnum.neutral="badge-neutral",UiPillColorEnum.category1="badge-category-1",UiPillColorEnum.category2="badge-category-2",UiPillColorEnum.category3="badge-category-3",UiPillColorEnum.category4="badge-category-4",UiPillColorEnum.category5="badge-category-5",UiPillColorEnum.category6="badge-category-6",UiPillColorEnum.success="badge-success",UiPillColorEnum.warning="badge-warning",UiPillColorEnum.danger="badge-danger",UiPillColorEnum.info="badge-info",UiPillColorEnum.extreme="badge-extreme"}(UiPillColorEnum||(UiPillColorEnum={}))},"./libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{g:()=>UiProgressIndicatorComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let UiProgressIndicatorComponent=class UiProgressIndicatorComponent{constructor(){this.steps=new Array}ngOnInit(){this.stepSetup()}stepSetup(){if(this.steps.length>6)throw console.error("Progress Indicator can only have up to 6 steps"),this.steps=this.steps.slice(0,6),new Error("Progress Indicator can only have up to 6 steps");this.steps.forEach(((step,index)=>{if(!step.title)throw console.error(`Title is required for step ${index+1}`),new Error(`Title is required for step ${index+1}`);step.stepStatus=0===index?"current":"incomplete"}))}setNextStep(){const currentIndex=this.steps.findIndex((step=>"current"===step.stepStatus));currentIndex>=0&&(this.steps[currentIndex].stepStatus="complete",currentIndex!==this.steps.length-1&&(this.steps[currentIndex+1].stepStatus="current"))}setPreviousStep(){for(let i=0;i<this.steps.length;i++){if("current"===this.steps[i].stepStatus&&0!==i){this.steps[i].stepStatus="incomplete",this.steps[i-1].stepStatus="current";break}if("complete"===this.steps[i].stepStatus&&i===this.steps.length-1){this.steps[i].stepStatus="current";break}}}setLastStepComplete(){"current"===this.steps[this.steps.length-1].stepStatus&&(this.steps[this.steps.length-1].stepStatus="complete")}};UiProgressIndicatorComponent.propDecorators={progressIndicator:[{type:core.ViewChild,args:["progress"]}],steps:[{type:core.Input}]},UiProgressIndicatorComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-progress-indicator",template:'<div class="progress-indicator ms-4">\n    <div class="progress-border">\n        <div class="progress-indicator-step" *ngFor="let step of steps; let i = index" #progress>\n            <div *ngIf="step.title" class="progress-step {{ step.stepStatus }}">\n                <div class="progress-main">\n                    <div class="step-row">\n                        <span class="icon">\n                            <i [ngClass]="{\n                                    \'bi bi-check-circle-fill\': step.stepStatus === \'complete\',\n                                    \'bi bi-circle\': step.stepStatus === \'incomplete\',\n                                    \'bi bi-circle-half\': step.stepStatus === \'current\'\n                                }"></i></span>\n                        <div class="progress-title">{{ i + 1 }}. {{ step.title }}</div>\n                    </div>\n                    <div class="progress-description">\n                        {{ step.description }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',styles:[""]})],UiProgressIndicatorComponent)},"./libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{B:()=>UiRichTextEditorToolbarComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),form_base_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");class UiButtonObject{constructor(){this.selected=!1,this.onClick=e=>{},this.handleChange=e=>{}}}var common_const=__webpack_require__("./apps/acp-ui/src/app/shared/constants/common.const.ts");let UiRichTextEditorToolbarComponent=class UiRichTextEditorToolbarComponent extends form_base_component.h{constructor(_translateService){super(),this._translateService=_translateService,this.urlPattern=common_const.Y3.URL,this.buttons={bold:new UiButtonObject,italic:new UiButtonObject,underline:new UiButtonObject,sub:new UiButtonObject,super:new UiButtonObject,ordered:new UiButtonObject,bullet:new UiButtonObject,link:new UiButtonObject,clearFormatting:new UiButtonObject},this.sizeList=[{label:this._translateService.instant("COMMON.TEXT_EDITOR.SMALL"),value:"small",selected:!1},{label:this._translateService.instant("COMMON.TEXT_EDITOR.NORMAL"),value:!1,selected:!0},{label:this._translateService.instant("COMMON.TEXT_EDITOR.HEADER"),value:"4",selected:!1},{label:this._translateService.instant("COMMON.TEXT_EDITOR.SUBHEADER"),value:"5",selected:!1}],this.selectedSize=this.sizeList[1].label}onChange(e){if(this.editor.quillEditor.getSelection())switch(e){case"small":!1===this.sizeList[0].selected?(this.sizeList[0].selected=!0,this.editor.quillEditor.format("size",e)):(this.editor.quillEditor.format("size",!1),this.sizeList[0].selected=!1);break;case!1:this.editor.quillEditor.format("header",!1),!0===this.sizeList[1].selected?(this.sizeList[1].selected=!0,this.editor.quillEditor.format("size",e)):this.editor.quillEditor.format("size",!1);break;case"4":!1===this.sizeList[2].selected?(this.sizeList[2].selected=!0,this.editor.quillEditor.format("header",e)):(this.editor.quillEditor.format("header",!1),this.sizeList[2].selected=!1);break;case"5":!1===this.sizeList[3].selected?(this.sizeList[3].selected=!0,this.editor.quillEditor.format("header",e)):(this.editor.quillEditor.format("header",!1),this.sizeList[3].selected=!1)}}changeDropdownItem(selectedLabel){this.selectedSize=selectedLabel;const index=this.sizeList.findIndex((x=>x.label===selectedLabel)),item=this.sizeList[index].value;this.onChange(item)}ngOnInit(){this.formControls={link:{value:"",validators:[]}},this.createForm(this.formControls),this.editMode=!0,this.onSaveBtnClick=this.submitLink,this.buttons.bold.onClick=e=>{!1===this.buttons.bold.selected?(this.buttons.bold.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.bold.selected=!1)},this.buttons.italic.onClick=e=>{!1===this.buttons.italic.selected?(this.buttons.italic.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.italic.selected=!1)},this.buttons.underline.onClick=e=>{!1===this.buttons.underline.selected?(this.buttons.underline.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.underline.selected=!1)},this.buttons.sub.onClick=e=>{!1===this.buttons.sub.selected?(this.buttons.sub.selected=!0,this.editor.quillEditor.format("script",e)):(this.editor.quillEditor.format("script",!1),this.buttons.sub.selected=!1)},this.buttons.super.onClick=e=>{!1===this.buttons.super.selected?(this.buttons.super.selected=!0,this.editor.quillEditor.format("script",e)):(this.editor.quillEditor.format("script",!1),this.buttons.super.selected=!1)},this.buttons.ordered.onClick=e=>{!1===this.buttons.ordered.selected?(this.buttons.ordered.selected=!0,this.editor.quillEditor.format("list",e)):(this.editor.quillEditor.format("list",!1),this.buttons.ordered.selected=!1)},this.buttons.bullet.onClick=e=>{!1===this.buttons.bullet.selected?(this.buttons.bullet.selected=!0,this.editor.quillEditor.format("list",e)):(this.editor.quillEditor.format("list",!1),this.buttons.bullet.selected=!1)}}populateLinkInput(){const selection=this.editor.quillEditor.getSelection(!0);this.linkText=this.editor.quillEditor.getText(selection.index,selection.length),this.urlPattern.test(this.linkText)?this.form.controls.link.setValue(this.linkText):this.form.controls.link.setValue("")}editLink(){const range=this.editor.quillEditor.getSelection(),selection=this.editor.quillEditor.getSelection(!0);this.linkText=this.editor.quillEditor.getText(selection.index,selection.length);const format=this.editor.quillEditor.getFormat(range.index,range.length);range&&format.link&&this.form.controls.link.setValue(format.link)}submitLink(){if(this.form.get("link").value){const link=this.submitForm(),selection=this.editor.quillEditor.getSelection(!0),text=this.editor.quillEditor.getText(selection.index,selection.length);this.editor.quillEditor.deleteText(selection.index,selection.length),this.linkURL=link.link,this.editor.quillEditor.insertText(selection.index,text,"link",this.linkURL)}this.form.controls.link.enable(),this.popover.close(),this.onClearBtnClick()}ngAfterViewInit(){setTimeout((()=>{this.editor.quillEditor.on("selection-change",(e=>this.onSelectionChanged(e)))}),500)}onSelectionChanged($event){const bounds=this.editor.quillEditor.getSelection($event);bounds&&(this.format=this.editor.quillEditor.getFormat($event.range),this.buttons.bold.selected=!!this.format.bold,this.buttons.italic.selected=!!this.format.italic,this.buttons.underline.selected=!!this.format.underline,this.buttons.sub.selected="sub"===this.format.script,this.buttons.super.selected="super"===this.format.script,this.buttons.ordered.selected="ordered"===this.format.list,this.buttons.bullet.selected="bullet"===this.format.list,this.buttons.link.selected=!!this.format.link,this.format.link&&(this.popover.open(),this.editLink()),this.buttons.clearFormatting.onClick=()=>{this.editor.quillEditor.removeFormat(bounds.index,bounds.length)}),"small"===this.format.size?(this.sizeList[0].selected=!0,this.selectedSize=this.sizeList[0].label):this.sizeList[0].selected=!1,!1===this.format.size?(this.sizeList[1].selected=!0,this.selectedSize=this.sizeList[1].label):this.sizeList[1].selected=!1,4===this.format.header?(this.sizeList[2].selected=!0,this.selectedSize=this.sizeList[2].label):this.sizeList[2].selected=!1,5===this.format.header?(this.sizeList[3].selected=!0,this.selectedSize=this.sizeList[3].label):this.sizeList[3].selected=!1}};UiRichTextEditorToolbarComponent.ctorParameters=()=>[{type:ngx_translate_core.c$}],UiRichTextEditorToolbarComponent.propDecorators={dropdownComp:[{type:core.ViewChild,args:["dropdown"]}],popover:[{type:core.ViewChild,args:["popover",{static:!1}]}],editor:[{type:core.Input}]},UiRichTextEditorToolbarComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-rich-text-editor-toolbar-old",template:'<div class="toolbar">\n    <div>\n        <div ngbDropdown class="d-inline-block size-dropdown" placement="bottom-start" #dropdown="ngbDropdown">\n            <button type="button" class="acp-form-control small btn-select size-dropdown" id="dropdownBasic1" ngbDropdownToggle>\n                <span> {{ selectedSize }} <i class="bi bi-chevron-expand"></i></span>\n            </button>\n            <div ngbDropdownMenu aria-labelledby="dropdownBasic1">\n                <button\n                    ngbDropdownItem\n                    *ngFor="let size of sizeList"\n                    value="{{ size.value }}"\n                    (click)="this.changeDropdownItem(size.label)"\n                >\n                    {{ size.label }}\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="text-editor-toolbar-buttons">\n    <div class="button-group-1">\n        <button\n            value="bold"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.BOLD\' | translate"\n            class="btn btn-link btn-md toolbarButton"\n            [ngClass]="{ selected: buttons.bold.selected }"\n            (click)="buttons.bold.onClick(\'bold\')"\n        >\n            <i class="bi bi-type-bold"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.ITALIC\' | translate"\n            [ngClass]="{ selected: buttons.italic.selected }"\n            (click)="buttons.italic.onClick(\'italic\')"\n        >\n            <i class="bi bi-type-italic"></i>\n        </button>\n\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.UNDERLINE\' | translate"\n            [ngClass]="{ selected: buttons.underline.selected }"\n            (click)="buttons.underline.onClick(\'underline\')"\n        >\n            <i class="bi bi-type-underline"></i>\n        </button>\n\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.SUBSCRIPT\' | translate"\n            value="sub"\n            [ngClass]="{ selected: buttons.sub.selected }"\n            (click)="buttons.sub.onClick(\'sub\')"\n        >\n            <i class="bi bi-subscript"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.SUPERSCRIPT\' | translate"\n            value="super"\n            [ngClass]="{ selected: buttons.super.selected }"\n            (click)="buttons.super.onClick(\'super\')"\n        >\n            <i class="bi bi-superscript"></i>\n        </button>\n    </div>\n\n    <div class="button-group-2">\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.ORDERED_LIST\' | translate"\n            value="ordered"\n            [ngClass]="{ selected: buttons.ordered.selected }"\n            (click)="buttons.ordered.onClick(\'ordered\')"\n        >\n            <i class="bi bi-list-ol"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.BULLET_LIST\' | translate"\n            value="bullet"\n            [ngClass]="{ selected: buttons.bullet.selected }"\n            (click)="buttons.bullet.onClick(\'bullet\')"\n        >\n            <i class="bi bi-list-ul"></i>\n        </button>\n    \n    <div [ngbTooltip]="\'COMMON.TEXT_EDITOR.LINK\' | translate" placement="top">\n        <button\n            id="popover"\n            class="btn btn-link btn-md toolbarButton"\n            placement="bottom"\n            value="link"\n            [ngClass]="{ selected: buttons.link.selected }"\n            data-toggle="popover"\n            [ngbPopover]="popContent"\n            #popover="ngbPopover"\n            [autoClose]="\'outside\'"\n            popoverClass="popover-class"\n            (click)="populateLinkInput()"\n        >\n            <i class="bi bi-link-45deg"></i>\n        </button>\n    </div>\n    <button\n        class="btn btn-link btn-md toolbarButton"\n        [ngbTooltip]="\'COMMON.TEXT_EDITOR.CLEAR_FORMATTING\' | translate"\n        value="false"\n        [ngClass]="{ selected: buttons.clearFormatting.selected }"\n        (click)="buttons.clearFormatting.onClick(\'false\')"\n    >\n        <i class="bi bi-eraser-fill"></i>\n    </button>\n</div>\n</div>\n\n    <div class="body link-pop">\n        <ng-template #popContent class="popstyle">\n            <form [formGroup]="form">\n                <div class="row popover-row">\n                    <p class="col-auto link-text">{{ \'COMMON.ENTER_LINK\' | translate }}</p>\n                    <div class="col-auto pop-url">\n                        <input class="url form-control" id="link" formControlName="link" form="form" value="{{ linkText }}" />\n                    </div>\n                    <div class="col-auto pop-button">\n                        <button type="button" class="btn btn-link btn-sm col-2" (click)="submitLink()">\n                            {{ \'COMMON.SAVE\' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </ng-template>\n    </div>\n</div>\n',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[ngx_translate_core.c$])],UiRichTextEditorToolbarComponent)},"./libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{T:()=>UiTagsInputComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var UiTagsInputComponent_1,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),merge=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/merge.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");let UiTagsInputComponent=UiTagsInputComponent_1=class UiTagsInputComponent{constructor(){this.maxLength=null,this.minLength=null,this.optionItems=[],this.optionItemsLimit=10,this.searchPlaceholder="Search...",this.emptyStatePlaceholder="",this.enableFreeTextAdding=!0,this.enableMultipleSelect=!1,this.api={keyField:"id",labelField:"text"},this.validateItemCallback=null,this.itemsChanged=new core.EventEmitter,this.disabled=!1,this.isFocus=!1,this.touched=!1,this.selectedItems=[],this.selectedItemsBackup=[],this.optionItemsBackup=[],this.typeaheadModel={},this.focus$=new Subject.B,this.click$=new Subject.B,this._defaultColorClass="bg-primary",this._customErrorKey="",this.onTouched=()=>{},this.onChange=quantity=>{},this.onClick=$event=>{this.enableMultipleSelect&&this.click$.next($event.target.value)},this.typeaheadSearch=text$=>{const debouncedText$=text$.pipe((0,debounceTime.B)(200),(0,distinctUntilChanged.F)()),clicksWithClosedPopup$=this.enableMultipleSelect?this.click$:this.click$.pipe((0,filter.p)((()=>!this.instance.isPopupOpen()))),inputFocus$=this.focus$.pipe((0,tap.M)((()=>{this.isFocus=!0,this.markAsTouched()})));return(0,merge.h)(debouncedText$,inputFocus$,clicksWithClosedPopup$).pipe((0,tap.M)((term=>{""===term&&this.hasCustomValidationError(term)})),(0,map.T)((term=>{let options=this.optionItems.filter((v=>!this.disabled&&v&&v[this.api.labelField]&&(!term||v[this.api.labelField].toLowerCase().indexOf(term.toLowerCase())>-1)&&!this.selectedItems.some((s=>s[this.api.keyField]===v[this.api.keyField]))));return this.optionItemsLimit&&(options=options.slice(0,this.optionItemsLimit)),options})))},this.typeaheadFormatter=result=>result[this.api.labelField]}ngOnInit(){}writeValue(value){this.selectedItems=[],null!==value&&value.forEach((item=>{this.selectItem(item)}))}registerOnChange(onChange){this.onChange=onChange}registerOnTouched(onTouched){this.onTouched=onTouched}markAsTouched(){this.touched||(this.onTouched(),this.touched=!0)}setDisabledState(disabled){this.disabled=disabled,disabled||(this.optionItemsBackup=JSON.parse(JSON.stringify(this.optionItems)))}validate(control){const min=this.minLength,max=this.maxLength;return this.formField=control,null!==min&&this.selectedItems.length<min?{minLength:{min}}:null!==max&&this.selectedItems.length>max?{maxLength:{max}}:!this.enableFreeTextAdding&&"string"==typeof this.typeaheadModel&&this.typeaheadModel.length>0?{valid:!1}:void 0}onModelChange(){this.enableFreeTextAdding||this.formField.updateValueAndValidity()}selectItem(item){item&&(item.disabled=item.disabled||!1,item.colorClass=item.colorClass||this._defaultColorClass,this.selectedItems.push(item))}removeItem(item){this.disabled||item.disabled||(item.disabled=!1,this.selectedItems=this.selectedItems.filter((selectedItem=>selectedItem!==item)),this.markAsTouched(),this.itemsChanged.emit(this.selectedItems),this.onChange(this.selectedItems))}onTypeaheadSelectItem($event){if(this.disabled||!$event.item)return;$event.preventDefault();const key=this.api.keyField,label=this.api.labelField;this.selectedItems.push({[key]:$event.item[key],[label]:$event.item[label],disabled:"boolean"==typeof $event.item.disabled&&$event.item.disabled,colorClass:$event.item.colorClass||this._defaultColorClass}),this.itemsChanged.emit(this.selectedItems),this.onChange(this.selectedItems),this.markAsTouched(),this.typeaheadModel={},this.onModelChange()}onTypeaheadEnterPress($event){if(this.disabled||!this.enableFreeTextAdding)return;const text=$event.target.value;if(this.hasCustomValidationError(text))return;if(!text||!text.trim())return;if(this.selectedItems.some((s=>text.toLowerCase()===s[this.api.labelField].toLowerCase())))return;const newId=this.getNextAvailableItemId(this.optionItems,this.selectedItems),key=this.api.keyField,label=this.api.labelField;this.selectedItems.push({[key]:newId,[label]:text,disabled:!1,colorClass:this._defaultColorClass}),this.itemsChanged.emit(this.selectedItems),this.onChange(this.selectedItems),this.markAsTouched(),this.typeaheadModel={},this.onModelChange()}typeaheadOnBlur(){this.isFocus=!1}hasCustomValidationError(inputTagText){if("function"==typeof this.validateItemCallback){const customError=this.validateItemCallback(inputTagText);if(customError)return this._customErrorKey=Object.keys(customError)[0],this.formField.setErrors(customError),!0;this.formField.setErrors({[this._customErrorKey]:null}),this.formField.updateValueAndValidity()}return!1}getNextAvailableItemId(optionItems,selectedItems){return optionItems.length||Math.max(...selectedItems.map((item=>item.id)))+1}};UiTagsInputComponent.ctorParameters=()=>[],UiTagsInputComponent.propDecorators={maxLength:[{type:core.Input}],minLength:[{type:core.Input}],optionItems:[{type:core.Input}],optionItemsLimit:[{type:core.Input}],searchPlaceholder:[{type:core.Input}],emptyStatePlaceholder:[{type:core.Input}],enableFreeTextAdding:[{type:core.Input}],enableMultipleSelect:[{type:core.Input}],api:[{type:core.Input}],typeaheadContainer:[{type:core.Input}],validateItemCallback:[{type:core.Input}],itemsChanged:[{type:core.Output}],instance:[{type:core.ViewChild,args:["instance",{static:!0}]}]},UiTagsInputComponent=UiTagsInputComponent_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-tags-input",template:'<div\n    #container\n    (click)="$event.stopPropagation()"\n    [ngClass]="{\n        \'disabled\': disabled,\n        \'is-invalid\': !disabled && formField !== undefined && formField.invalid && (formField.touched || formField.dirty),\n        \'is-valid\': !disabled && formField !== undefined && !formField.pristine && formField.valid,\n        \'container-focus\': !disabled && isFocus\n    }"\n    class="tag-container disable-select form-control"\n    >\n    <div\n        [openDelay]="600"\n        [closeDelay]="500"\n        placement="top"\n        [ngbTooltip]="item[api.labelField]"\n        *ngFor="let item of selectedItems"\n        [ngClass]="item.colorClass"\n        class="badge pe-1 ps-1 disable-select">\n        <span>{{item[api.labelField] | truncate:[20, \'...\']}}</span>\n        <span *ngIf="!disabled && !item.disabled" class="ps-1 pointer" (click)="$event.stopPropagation(); removeItem(item)">\n            <i class="bi bi-x-circle-fill"></i>\n        </span>\n    </div>\n    <input\n        *ngIf="!disabled"\n        type="text"\n        class="form-control"\n        [container]="typeaheadContainer"\n        [placeholder]="searchPlaceholder"\n        [(ngModel)]="typeaheadModel"\n        (ngModelChange)="onModelChange()"\n        [ngbTypeahead]="typeaheadSearch"\n        [inputFormatter]="typeaheadFormatter"\n        [resultFormatter]="typeaheadFormatter"\n        (focus)="focus$.next($any($event).target.value)"\n        (click)="onClick($event)"\n        (blur)="typeaheadOnBlur($event)"\n        (selectItem)="onTypeaheadSelectItem($event)"\n        (keydown.enter)="onTypeaheadEnterPress($event)"/>\n    \x3c!-- Empty state placeholder --\x3e\n    <input *ngIf="disabled && selectedItems.length === 0" class="form-control" [placeholder]="emptyStatePlaceholder" disabled/>\n</div>\n',providers:[{provide:fesm2020_forms.NG_VALUE_ACCESSOR,multi:!0,useExisting:UiTagsInputComponent_1},{provide:fesm2020_forms.NG_VALIDATORS,multi:!0,useExisting:UiTagsInputComponent_1}],styles:[".grid-item {\n  flex-grow: 1;\n  min-width: 10%;\n}\n\n.dropdown-toggle::after {\n  display: none;\n}\n\n.dropdown-menu {\n  width: 100%;\n  padding-left: 0.025em;\n}\n\n.badge {\n  align-items: center;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  height: 24px;\n  place-content: center;\n}\n\n.tag-container {\n  align-items: center;\n  background-color: #fff;\n  border-radius: 5px;\n  border: 1px solid #dbdee1;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row wrap;\n  gap: 0.25rem;\n  place-content: center flex-start;\n}\n\n.tag-container.disabled {\n  background-color: #edeff0;\n  opacity: 1;\n}\n\n.tag-container:invalid, .tag-container.is-invalid {\n  border-color: #E02A49;\n  padding-right: calc(1.5em + 0.75rem);\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23ff4d4f' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23ff4d4f' stroke='none'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\n}\n\n.tag-container:invalid.container-focus, .tag-container.is-invalid.container-focus {\n  border-color: #E02A49;\n  box-shadow: 0px 0px 0px 3px rgba(224, 42, 73, 0.2);\n}\n\n.tag-container:valid, .tag-container.is-valid {\n  border-color: #50955b;\n  padding-right: calc(1.5em + 0.75rem);\n  background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2350955b' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\");\n  background-repeat: no-repeat;\n  background-position: right 10px top 10px;\n  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\n}\n\n.tag-container:valid.container-focus, .tag-container.is-valid.container-focus {\n  border-color: #50955b;\n  box-shadow: 0px 0px 0px 3px rgba(80, 149, 91, 0.2);\n}\n\n.tag-container input {\n  border: none;\n  box-shadow: none;\n  outline: none;\n  background-color: transparent;\n  padding: 0 6px;\n  margin: 0;\n  flex: 1;\n  width: auto;\n  max-width: inherit;\n}\n\n.bs-tooltip-top .arrow,\n.bs-tooltip-auto[x-placement^=top] .arrow {\n  bottom: 2px;\n}\n\n.tooltip-inner {\n  max-width: 200px;\n  padding: 0.25rem 0.5rem;\n  color: #fff;\n  text-align: center;\n  background-color: #000;\n  border-radius: 0.25rem;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiTagsInputComponent)},"./libs/ui/src/lib/modules/form-controls/text-area/text-area.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{S:()=>UiTextAreaComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),form_control_base_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts");let UiTextAreaComponent=class UiTextAreaComponent extends form_control_base_component.I{constructor(){super(...arguments),this.rows=10}};UiTextAreaComponent.propDecorators={rows:[{type:core.Input}]},UiTextAreaComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-text-area",template:'<div *ngIf="form !== undefined">\n\n    \x3c!-- Label --\x3e\n    <label [id]="id + \'_Label\'" for="formControlName">\n        {{label}}\n        \x3c!-- Required Asterix --\x3e\n        <span [id]="id + \'_RequiredAsterisk\'" *ngIf="form.controls[formControlName].hasValidator(Validators.required)">*</span>\n    </label>\n\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\n    <i [id]="id + \'_InfoIcon\'" *ngIf="showInfoIcon && infoText !== \'\'" class="bi bi-question-circle-fill" placement="top" [ngbTooltip]="infoText"></i>\n\n    <div class="input-group">\n\n        \x3c!-- Prefix Icon --\x3e\n        <span *ngIf="prefixIcon !== \'\'" class="input-group-text">\n            <i [id]="id + \'_PrefixIcon\'" class="bi" aria-hidden="true" [ngClass]="prefixIcon"></i>\n        </span>\n\n        \x3c!-- Prefix Text --\x3e\n        <span [id]="id + \'_PrefixText\'" *ngIf="prefixText !== \'\'" class="input-group-text">\n            {{prefixText}}\n        </span>\n\n        \x3c!-- Basic Textarea --\x3e\n        <textarea\n            [id]="id + \'_TextArea\'"\n            [rows]="rows"\n            [ngClass]="{ \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation }"\n            [placeholder]="placeholder"\n            [value]="value"\n            [disabled]="disabled"\n            (input)="onChange($event.target.value)"\n            (blur)="onTouched()"\n            class="form-control"\n            autocomplete="off"\n        ></textarea>\n\n        \x3c!-- Suffix Icon --\x3e\n        <span [id]="id + \'_SuffixIcon\'" *ngIf="suffixIcon !== \'\'" class="input-group-text">\n            <i class="bi" aria-hidden="true" [ngClass]="suffixIcon"></i>\n        </span>\n\n        \x3c!-- Suffix Text --\x3e\n        <span [id]="id + \'_SuffixText\'" *ngIf="suffixText !== \'\'" class="input-group-text">\n            {{suffixText}}\n        </span>\n    </div>\n\n    <div class="feedback">\n\n        \x3c!-- Success Feedback Text --\x3e\n        <div [id]="id + \'_SuccessText\'" class="success-text" *ngIf="form.controls[formControlName].valid && showSuccessValidation">\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\n        </div>\n\n        \x3c!-- Error Feedback Text --\x3e\n        <div class="error-text" *ngIf="form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation">\n            <div [id]="id + \'_MinLengthErrorText\'" *ngIf="form.controls[formControlName].errors.minlength">\n                {{ \'COMMON.MIN_LENGTH_OF\' | translate: { requiredLength: form.controls[formControlName].errors.minlength.requiredLength } }}\n            </div>\n            <div [id]="id + \'_MaxLengthErrorText\'" *ngIf="form.controls[formControlName].errors.maxlength">\n                {{ \'COMMON.MAX_LENGTH_OF\' | translate: { requiredLength: form.controls[formControlName].errors.maxlength.requiredLength } }}\n            </div>\n\n            <div [id]="id + \'_RequiredErrorText\'"  *ngIf="form.controls[formControlName].errors.required">\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\n            </div>\n\n            <div [id]="id + \'_ValidEmailErrorText\'" *ngIf="form.controls[formControlName].errors.email">\n                {{ \'COMMON.ENTER_VALID_EMAIL\' | translate }}\n            </div>\n        </div>\n\n        \x3c!-- Help Text --\x3e\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\n        <div *ngIf="!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)">\n            <div [id]="id + \'_HelpText\'" *ngIf="showHelpText && helpText !== \'\'" class="help-text">{{helpText}}</div>\n        </div>\n    </div>\n\n</div>\n',styles:[""]})],UiTextAreaComponent)},"./libs/ui/src/lib/modules/form-controls/text-input/text-input.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>UiTextInputComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),form_control_base_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts");let UiTextInputComponent=class UiTextInputComponent extends form_control_base_component.I{constructor(){super(...arguments),this.type="text"}concatErrors(arr1,arr2){return Object.assign(Object.assign({},arr1),arr2)}};UiTextInputComponent.propDecorators={type:[{type:core.Input}]},UiTextInputComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-text-input",template:'<div *ngIf="form !== undefined">\n\n    \x3c!-- Label --\x3e\n    <label [id]="id + \'_Label\'" for="formControlName">\n        {{label}}\n        \x3c!-- Required Asterix --\x3e\n        <span [id]="id + \'_RequiredAsterisk\'" *ngIf="form.controls[formControlName].hasValidator(Validators.required)">*</span>\n    </label>\n\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\n    <i [id]="id + \'_InfoIcon\'" *ngIf="showInfoIcon && infoText !== \'\'" class="bi bi-question-circle-fill" placement="top" [ngbTooltip]="infoText"></i>\n\n    <div class="input-group">\n\n        \x3c!-- Prefix Icon --\x3e\n        <span *ngIf="prefixIcon !== \'\'" class="input-group-text">\n            <i [id]="id + \'_PrefixIcon\'" class="bi" aria-hidden="true" [ngClass]="prefixIcon"></i>\n        </span>\n\n        \x3c!-- Prefix Text --\x3e\n        <span [id]="id + \'_PrefixText\'" *ngIf="prefixText !== \'\'" class="input-group-text">\n            {{prefixText}}\n        </span>\n\n        \x3c!-- Basic Input --\x3e\n        <input\n            [id]="id + \'_TextInput\'"\n            [type]="type"\n            [ngClass]="{ \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation, \'is-valid\': form.controls[formControlName].valid && showSuccessValidation }"\n            [placeholder]="placeholder"\n            [value]="value"\n            [disabled]="disabled"\n            (input)="onChange($event.target.value)"\n            (blur)="onTouched()"\n            class="form-control"\n            autocomplete="off"\n        />\n\n        \x3c!-- Suffix Icon --\x3e\n        <span [id]="id + \'_SuffixIcon\'" *ngIf="suffixIcon !== \'\'" class="input-group-text">\n            <i class="bi" aria-hidden="true" [ngClass]="suffixIcon"></i>\n        </span>\n\n        \x3c!-- Suffix Text --\x3e\n        <span [id]="id + \'_SuffixText\'" *ngIf="suffixText !== \'\'" class="input-group-text">\n            {{suffixText}}\n        </span>\n    </div>\n\n    <div class="feedback">\n\n        \x3c!-- Success Feedback Text --\x3e\n        <div [id]="id + \'_SuccessText\'" class="success-text" *ngIf="form.controls[formControlName].valid && showSuccessValidation">\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\n        </div>\n\n        \x3c!-- Error Feedback Text --\x3e\n        <div class="error-text" *ngIf="form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation">\n\n            <div *ngFor="let item of form.controls[formControlName].errors | keyvalue">\n                \x3c!-- If errorString have NO parameters --\x3e\n                <ng-container *ngIf="errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams === undefined">\n                    {{errorStrings[item.key].stringCode | translate: form.controls[formControlName].errors[item.key] }}\n                </ng-container>\n                \x3c!-- If errorString HAVE parameters --\x3e\n                <ng-container *ngIf="errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams !== undefined">\n                    {{errorStrings[item.key].stringCode | translate: concatErrors(form.controls[formControlName].errors[item.key], errorStrings[item.key].stringParams) }}\n                </ng-container>\n            </div>\n        </div>\n\n        \x3c!-- Help Text --\x3e\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\n        <div *ngIf="!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)">\n            <div [id]="id + \'_HelpText\'" *ngIf="showHelpText && helpText !== \'\'" class="help-text">{{helpText}}</div>\n        </div>\n    </div>\n</div>\n',styles:[""]})],UiTextInputComponent)},"./libs/ui/src/lib/modules/form/form-base/form-base.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{h:()=>UiFormBaseComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js");let UiFormBaseComponent=class UiFormBaseComponent{constructor(){this.formStatusChange=new core.EventEmitter,this.formClosed=new core.EventEmitter,this.formSubmitted=new core.EventEmitter,this.payload={},this.modeChanged=!1,this.showSuccessValidation=!1,this.showErrorValidation=!0,this.showHelpText=!0,this.showInfoIcon=!0,this.Validators=fesm2020_forms.Validators,this._ngUnsubscribe=new Subject.B,this._editMode=!1}set editMode(value){this._editMode=value,!0===this._editMode?this.enableAllInputs():this.disableAllInputs()}get editMode(){return this._editMode}ngOnInit(){}ngOnDestroy(){this._ngUnsubscribe.next(null),this._ngUnsubscribe.complete()}createForm(formControls){this.form=new fesm2020_forms.FormGroup({});for(const[key,value]of Object.entries(formControls)){const newControl=new fesm2020_forms.FormControl(value.value,{validators:value.validators});this.form.setControl(key,newControl)}this.editMode=!1}setValues(FormValues){Object.keys(this.form.controls).forEach((key=>{this.form.controls[key].setValue(FormValues[key])}))}viewForm(){this.editMode=!1}editForm(){this._initialValues=JSON.parse(JSON.stringify(this.form.value)),this.editMode=!0}clearForm(){this._initialValues=JSON.parse(JSON.stringify(this.form.value)),this.form.reset(),this.payload={}}cancelForm(){this.form.reset(this._initialValues),this.payload={},this.editMode=!1}closeForm(){this.editMode=!1,this.formClosed.emit()}submitForm(){return Object.keys(this.form.controls).forEach((key=>{this.payload[key]=this.form.controls[key].value})),this.editMode=!1,this.formSubmitted.emit(this.form.value),this.form.value}onClearBtnClick(){this.clearForm()}onEditBtnClick(){this.editForm()}onCancelBtnClick(){this.cancelForm()}onCloseBtnClick(){this.closeForm()}onSaveBtnClick(){this.submitForm()}onFormOptionsChanged(e){this.showInfoIcon=e.showInfoIcon,this.showHelpText=e.showHelpText}disableAllInputs(){if(void 0!==this.form)for(const control in this.form.controls)this.form.controls.hasOwnProperty(control)&&this.form.controls[control].disable()}enableAllInputs(){if(void 0!==this.form)for(const control in this.form.controls)this.form.controls.hasOwnProperty(control)&&(void 0!==this.formControls[control].config&&void 0!==this.formControls[control].config.forceDisabled?!1===this.formControls[control].config.forceDisabled&&(this.form.controls[control].enable(),this.form.controls[control].markAsUntouched()):(this.form.controls[control].enable(),this.form.controls[control].markAsUntouched()))}};UiFormBaseComponent.ctorParameters=()=>[],UiFormBaseComponent.propDecorators={actionBtnsRef:[{type:core.ViewChild,args:["actionBtnsRef"]}],formStatusChange:[{type:core.Output}],formClosed:[{type:core.Output}],formSubmitted:[{type:core.Output}],editMode:[{type:core.Input,args:["editMode"]}]},UiFormBaseComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-form-base",template:"<p>Implement your form template in your extended component.</p>\n",styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiFormBaseComponent)},"./libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{B:()=>UiRichTextEditorToolbarComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),form_base_component=__webpack_require__("./libs/ui/src/lib/modules/form/form-base/form-base.component.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");class UiButtonObject{constructor(){this.selected=!1,this.onClick=e=>{},this.handleChange=e=>{}}}var common_const=__webpack_require__("./apps/acp-ui/src/app/shared/constants/common.const.ts");let UiRichTextEditorToolbarComponent=class UiRichTextEditorToolbarComponent extends form_base_component.h{constructor(_translateService){super(),this._translateService=_translateService,this.urlPattern=common_const.Y3.URL,this.quillValueChange=new core.EventEmitter,this.buttons={bold:new UiButtonObject,italic:new UiButtonObject,underline:new UiButtonObject,sub:new UiButtonObject,super:new UiButtonObject,ordered:new UiButtonObject,bullet:new UiButtonObject,link:new UiButtonObject,clearFormatting:new UiButtonObject},this.sizeList=[{label:this._translateService.instant("COMMON.TEXT_EDITOR.SMALL"),value:"small",selected:!1},{label:this._translateService.instant("COMMON.TEXT_EDITOR.NORMAL"),value:!1,selected:!0},{label:this._translateService.instant("COMMON.TEXT_EDITOR.HEADER"),value:"4",selected:!1},{label:this._translateService.instant("COMMON.TEXT_EDITOR.SUBHEADER"),value:"5",selected:!1}],this.selectedSize=this.sizeList[1].label}onChange(e){if(this.editor.quillEditor.getSelection())switch(e){case"small":!1===this.sizeList[0].selected?(this.sizeList[0].selected=!0,this.editor.quillEditor.format("size",e)):(this.editor.quillEditor.format("size",!1),this.sizeList[0].selected=!1);break;case!1:this.editor.quillEditor.format("header",!1),!0===this.sizeList[1].selected?(this.sizeList[1].selected=!0,this.editor.quillEditor.format("size",e)):this.editor.quillEditor.format("size",!1);break;case"4":!1===this.sizeList[2].selected?(this.sizeList[2].selected=!0,this.editor.quillEditor.format("header",e)):(this.editor.quillEditor.format("header",!1),this.sizeList[2].selected=!1);break;case"5":!1===this.sizeList[3].selected?(this.sizeList[3].selected=!0,this.editor.quillEditor.format("header",e)):(this.editor.quillEditor.format("header",!1),this.sizeList[3].selected=!1)}}changeDropdownItem(selectedLabel){this.selectedSize=selectedLabel;const index=this.sizeList.findIndex((x=>x.label===selectedLabel)),item=this.sizeList[index].value;this.onChange(item)}ngOnInit(){this.formControls={link:{value:"",validators:[]}},this.createForm(this.formControls),this.editMode=!0,this.onSaveBtnClick=this.submitLink,this.buttons.bold.onClick=e=>{!1===this.buttons.bold.selected?(this.buttons.bold.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.bold.selected=!1)},this.buttons.italic.onClick=e=>{!1===this.buttons.italic.selected?(this.buttons.italic.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.italic.selected=!1)},this.buttons.underline.onClick=e=>{!1===this.buttons.underline.selected?(this.buttons.underline.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.underline.selected=!1)},this.buttons.sub.onClick=e=>{!1===this.buttons.sub.selected?(this.buttons.sub.selected=!0,this.editor.quillEditor.format("script",e)):(this.editor.quillEditor.format("script",!1),this.buttons.sub.selected=!1)},this.buttons.super.onClick=e=>{!1===this.buttons.super.selected?(this.buttons.super.selected=!0,this.editor.quillEditor.format("script",e)):(this.editor.quillEditor.format("script",!1),this.buttons.super.selected=!1)},this.buttons.ordered.onClick=e=>{!1===this.buttons.ordered.selected?(this.buttons.ordered.selected=!0,this.editor.quillEditor.format("list",e)):(this.editor.quillEditor.format("list",!1),this.buttons.ordered.selected=!1)},this.buttons.bullet.onClick=e=>{!1===this.buttons.bullet.selected?(this.buttons.bullet.selected=!0,this.editor.quillEditor.format("list",e)):(this.editor.quillEditor.format("list",!1),this.buttons.bullet.selected=!1)}}populateLinkInput(){const selection=this.editor.quillEditor.getSelection(!0);this.linkText=this.editor.quillEditor.getText(selection.index,selection.length),this.urlPattern.test(this.linkText)?this.form.controls.link.setValue(this.linkText):this.form.controls.link.setValue("")}editLink(){const range=this.editor.quillEditor.getSelection(),selection=this.editor.quillEditor.getSelection(!0);this.linkText=this.editor.quillEditor.getText(selection.index,selection.length);const format=this.editor.quillEditor.getFormat(range.index,range.length);range&&format.link&&this.form.controls.link.setValue(format.link)}submitLink(){if(this.form.get("link").value){const link=this.submitForm(),selection=this.editor.quillEditor.getSelection(!0),text=this.editor.quillEditor.getText(selection.index,selection.length);this.editor.quillEditor.deleteText(selection.index,selection.length),this.linkURL=link.link,this.editor.quillEditor.insertText(selection.index,text,"link",this.linkURL)}this.form.controls.link.enable(),this.popover.close(),this.onClearBtnClick()}ngAfterViewInit(){setTimeout((()=>{this.editor.quillEditor.on("selection-change",(e=>this.onSelectionChanged(e)))}),500)}onSelectionChanged($event){const bounds=this.editor.quillEditor.getSelection($event);bounds&&(this.format=this.editor.quillEditor.getFormat($event.range),this.buttons.bold.selected=!!this.format.bold,this.buttons.italic.selected=!!this.format.italic,this.buttons.underline.selected=!!this.format.underline,this.buttons.sub.selected="sub"===this.format.script,this.buttons.super.selected="super"===this.format.script,this.buttons.ordered.selected="ordered"===this.format.list,this.buttons.bullet.selected="bullet"===this.format.list,this.buttons.link.selected=!!this.format.link,this.format.link&&(this.popover.open(),this.editLink()),this.buttons.clearFormatting.onClick=()=>{this.editor.quillEditor.removeFormat(bounds.index,bounds.length)}),"small"===this.format.size?(this.sizeList[0].selected=!0,this.selectedSize=this.sizeList[0].label):this.sizeList[0].selected=!1,!1===this.format.size?(this.sizeList[1].selected=!0,this.selectedSize=this.sizeList[1].label):this.sizeList[1].selected=!1,4===this.format.header?(this.sizeList[2].selected=!0,this.selectedSize=this.sizeList[2].label):this.sizeList[2].selected=!1,5===this.format.header?(this.sizeList[3].selected=!0,this.selectedSize=this.sizeList[3].label):this.sizeList[3].selected=!1}};UiRichTextEditorToolbarComponent.ctorParameters=()=>[{type:ngx_translate_core.c$}],UiRichTextEditorToolbarComponent.propDecorators={dropdownComp:[{type:core.ViewChild,args:["dropdown"]}],popover:[{type:core.ViewChild,args:["popover",{static:!1}]}],editor:[{type:core.Input}],quillValueChange:[{type:core.Output}]},UiRichTextEditorToolbarComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-rich-text-editor-toolbar",template:'<div class="toolbar">\n    <div>\n        <div ngbDropdown class="d-inline-block size-dropdown" placement="bottom-start" #dropdown="ngbDropdown">\n            <button type="button" class="acp-form-control small btn-select size-dropdown" id="dropdownBasic1" ngbDropdownToggle>\n                <span> {{ selectedSize }} <i class="bi bi-chevron-expand"></i></span>\n            </button>\n            <div ngbDropdownMenu aria-labelledby="dropdownBasic1">\n                <button\n                    ngbDropdownItem\n                    *ngFor="let size of sizeList"\n                    value="{{ size.value }}"\n                    (click)="this.changeDropdownItem(size.label)"\n                >\n                    {{ size.label }}\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="text-editor-toolbar-buttons">\n    <div class="button-group-1">\n        <button\n            value="bold"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.BOLD\' | translate"\n            class="btn btn-link btn-md toolbarButton"\n            [ngClass]="{ selected: buttons.bold.selected }"\n            (click)="buttons.bold.onClick(\'bold\')"\n        >\n            <i class="bi bi-type-bold"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.ITALIC\' | translate"\n            [ngClass]="{ selected: buttons.italic.selected }"\n            (click)="buttons.italic.onClick(\'italic\')"\n        >\n            <i class="bi bi-type-italic"></i>\n        </button>\n\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.UNDERLINE\' | translate"\n            [ngClass]="{ selected: buttons.underline.selected }"\n            (click)="buttons.underline.onClick(\'underline\')"\n        >\n            <i class="bi bi-type-underline"></i>\n        </button>\n\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.SUBSCRIPT\' | translate"\n            value="sub"\n            [ngClass]="{ selected: buttons.sub.selected }"\n            (click)="buttons.sub.onClick(\'sub\')"\n        >\n            <i class="bi bi-subscript"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.SUPERSCRIPT\' | translate"\n            value="super"\n            [ngClass]="{ selected: buttons.super.selected }"\n            (click)="buttons.super.onClick(\'super\')"\n        >\n            <i class="bi bi-superscript"></i>\n        </button>\n    </div>\n\n    <div class="button-group-2">\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.ORDERED_LIST\' | translate"\n            value="ordered"\n            [ngClass]="{ selected: buttons.ordered.selected }"\n            (click)="buttons.ordered.onClick(\'ordered\')"\n        >\n            <i class="bi bi-list-ol"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.BULLET_LIST\' | translate"\n            value="bullet"\n            [ngClass]="{ selected: buttons.bullet.selected }"\n            (click)="buttons.bullet.onClick(\'bullet\')"\n        >\n            <i class="bi bi-list-ul"></i>\n        </button>\n    \n    <div [ngbTooltip]="\'COMMON.TEXT_EDITOR.LINK\' | translate" placement="top">\n        <button\n            id="popover"\n            class="btn btn-link btn-md toolbarButton"\n            placement="bottom"\n            value="link"\n            [ngClass]="{ selected: buttons.link.selected }"\n            data-toggle="popover"\n            [ngbPopover]="popContent"\n            #popover="ngbPopover"\n            [autoClose]="\'outside\'"\n            popoverClass="popover-class"\n            (click)="populateLinkInput()"\n        >\n            <i class="bi bi-link-45deg"></i>\n        </button>\n    </div>\n    <button\n        class="btn btn-link btn-md toolbarButton"\n        [ngbTooltip]="\'COMMON.TEXT_EDITOR.CLEAR_FORMATTING\' | translate"\n        value="false"\n        [ngClass]="{ selected: buttons.clearFormatting.selected }"\n        (click)="buttons.clearFormatting.onClick(\'false\')"\n    >\n        <i class="bi bi-eraser-fill"></i>\n    </button>\n</div>\n</div>\n\n    <div class="body link-pop">\n        <ng-template #popContent class="popstyle">\n            <form [formGroup]="form">\n                <div class="row popover-row">\n                    <p class="col-auto link-text">{{ \'COMMON.ENTER_LINK\' | translate }}</p>\n                    <div class="col-auto pop-url">\n                        <input class="url form-control" id="link" formControlName="link" form="form" value="{{ linkText }}" />\n                    </div>\n                    <div class="col-auto pop-button">\n                        <button type="button" class="btn btn-link btn-sm col-2" (click)="submitLink()">\n                            {{ \'COMMON.SAVE\' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </ng-template>\n    </div>\n</div>\n',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[ngx_translate_core.c$])],UiRichTextEditorToolbarComponent)},"./libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>rich_text_editor_toolbar_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),rich_text_editor_toolbar_component=__webpack_require__("./libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");class UiUtils{static isArray(value){return Array.isArray(value)}static isNil(value){return null==value}static isString(value){return"string"==typeof value}static isObject(value){return"object"==typeof value}static getProperty(value,key){if(!UiUtils.isNil(value)&&UiUtils.isObject(value)&&key in value)return value[key]}static compareCaseInsensitive(valueA,valueB){if("string"!=typeof valueA||"string"!=typeof valueB)throw new Error("Invalid parameter type");return valueA.toLowerCase().localeCompare(valueB.toLowerCase())}static compareCaseInsensitiveArray(valueA,valueB){if(!Array.isArray(valueA)||!Array.isArray(valueB))throw new Error("Invalid parameter type");return valueA.join().toLowerCase().localeCompare(valueB.join().toLowerCase())}static compareCaseInsensitiveAgGridArray(valueA,valueB){let compareResult;return compareResult=Array.isArray(valueA)&&Array.isArray(valueB)?UiUtils.compareCaseInsensitiveArray(valueA||[],valueB||[]):UiUtils.compareCaseInsensitive(valueA,valueB),compareResult}static compareAgGridDates(filterLocalDateAtMidnight,cellValue){const cellDate=new Date(cellValue);return cellDate.setHours(0,0,0,0),filterLocalDateAtMidnight.getTime()===cellDate.getTime()?0:cellDate<filterLocalDateAtMidnight?-1:cellDate>filterLocalDateAtMidnight?1:void 0}static removeNonAscii(value){if(!value)throw new Error("Undefined parameter");if("string"!=typeof value)throw new Error("Invalid parameter type");return value.replace(/[^\x20-\x7E]/g,"")}static encodeURI(value){if(!value)throw new Error("Undefined parameter");if("string"!=typeof value)throw new Error("Invalid parameter type");return encodeURIComponent(value).replace(/[!'()*]/g,(char=>"%"+char.charCodeAt(0).toString(16)))}}let UiJoinPipe=class UiJoinPipe{transform(input,delimiter=", "){return UiUtils.isArray(input)?input.join(delimiter):input}};UiJoinPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"uiJoin"})],UiJoinPipe);let UiPluckPipe=class UiPluckPipe{transform(input,key){return UiUtils.isArray(input)&&key?input.map((value=>UiUtils.getProperty(value,key))):input}};UiPluckPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"uiPluck"})],UiPluckPipe);var platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs");let UiNoSanitizePipe=class UiNoSanitizePipe{constructor(domSanitizer){this.domSanitizer=domSanitizer}transform(html){return this.domSanitizer.bypassSecurityTrustHtml(html)}};UiNoSanitizePipe.ctorParameters=()=>[{type:platform_browser.DomSanitizer}],UiNoSanitizePipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"noSanitize"}),(0,tslib_es6.Sn)("design:paramtypes",[platform_browser.DomSanitizer])],UiNoSanitizePipe);const PIPES=[UiJoinPipe,UiPluckPipe,UiNoSanitizePipe];let UiPipesModule=class UiPipesModule{};UiPipesModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:PIPES,exports:PIPES})],UiPipesModule);var ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2020/ng-bootstrap.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),form_controls_module=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-controls.module.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js"),form_base_component=__webpack_require__("./libs/ui/src/lib/modules/form/form-base/form-base.component.ts"),ngx_quill=__webpack_require__("./node_modules/ngx-quill/fesm2020/ngx-quill.mjs");const rich_text_editor_toolbar_component_stories={title:"Forms/RichTextEditorToolbar",component:rich_text_editor_toolbar_component.B,decorators:[(0,client.moduleMetadata)({declarations:[rich_text_editor_toolbar_component.B,form_base_component.h],imports:[fesm2020_forms.ReactiveFormsModule,UiPipesModule,ng_bootstrap.UN,fesm2020_forms.FormsModule,common.MD,http.q1,form_controls_module.Z,ngx_translate_core.h.forRoot({loader:{provide:ngx_translate_core.Wr,useClass:ngx_translate_core.dx}})]})]},Primary=(args=>({props:args})).bind({});Primary.args={editor:ngx_quill.i9,sizeList:[{label:"small",value:"small",selected:!1},{label:"normal",value:!1,selected:!0},{label:"header",value:"4",selected:!1},{label:"subheader",value:"5",selected:!1}],selectedSize:"normal"}},"?5580":()=>{},"?03fb":()=>{},"?6197":()=>{},"?b8cb":()=>{},"?c717":()=>{}}]);