"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[1715],{"./libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>UiQuickFilterComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),dropdown_plus_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");let UiQuickFilterComponent=class UiQuickFilterComponent{constructor(_translateService){this._translateService=_translateService,this.small=!1,this.showSearch=!1,this.multiSelect=!0,this.showSelectClearBtns=!1,this.triggerLabel="",this.selectedOptions=[],this.selectionChange=new core.EventEmitter,this.openChange=new core.EventEmitter,this.triggerClicked=new core.EventEmitter,this.searchChange=new core.EventEmitter,this.options=[],this.menuOpen=!1,this._label="",this._disabled=!1}set label(label){this._label=label,this.triggerLabel=label}get label(){return this._label}set disabled(val){this._disabled=val}get disabled(){return this._disabled}set setOptions(options){this.options=options,setTimeout((()=>{this.onSelectionChange({id:this.id,selectedOptions:this.options.filter((option=>!0===option.value))})}))}ngOnInit(){this._subscription=this._translateService.onLangChange.subscribe((event=>{this.updateTriggerLabel()}))}ngOnDestroy(){this._subscription.unsubscribe()}onSelectionChange(event){this.selectedOptions=event.selectedOptions,this.updateTriggerLabel(),this.selectionChange.emit(event)}updateTriggerLabel(){0===this.selectedOptions.length?this.triggerLabel=this._label:1===this.selectedOptions.length?this.triggerLabel=this.selectedOptions[0].label:this.triggerLabel=this._label}clearSelection(){this.dropdownRef.clearSelection()}unSelectItem(itemId){this.dropdownRef.unSelectItem(itemId)}onOpenChange(event){this.menuOpen=event.open,this.openChange.emit(event)}onTriggerClicked(event){this.triggerClicked.emit(event)}onSearchChange(){}};UiQuickFilterComponent.ctorParameters=()=>[{type:ngx_translate_core.c$}],UiQuickFilterComponent.propDecorators={id:[{type:core.Input}],small:[{type:core.Input}],showSearch:[{type:core.Input}],multiSelect:[{type:core.Input}],showSelectClearBtns:[{type:core.Input}],label:[{type:core.Input}],disabled:[{type:core.Input}],setOptions:[{type:core.Input}],selectionChange:[{type:core.Output}],openChange:[{type:core.Output}],triggerClicked:[{type:core.Output}],searchChange:[{type:core.Output}],dropdownRef:[{type:core.ViewChild,args:[dropdown_plus_component.Z]}]},UiQuickFilterComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-quick-filter",template:'<div\n    class="d-flex align-items-center quick-filter"\n    [id]="id + \'_trigger\'"\n    [ngClass]="{ open: menuOpen === true, \'option-selected\': selectedOptions?.length !== 0, disabled: disabled, small: small === true }"\n    (click)="dropdownRef.triggerClick()"\n>\n    <div [id]="id + \'_triggerLabel\'" class="label d-inline-block text-truncate">\n        <span *ngIf="this.selectedOptions.length === 0">{{ \'COMMON.ALL\' | translate }}</span>\n        {{ triggerLabel | translate: triggerLabelParams }}\n        <span *ngIf="this.selectedOptions.length > 1"> ({{ this.selectedOptions.length }})</span>\n    </div>\n    <div>\n        <i\n            class="bi ms-1 d-inline-block anim"\n            [id]="id + \'_triggerIcon\'"\n            [ngClass]="{ \'bi-caret-down-fill\': selectedOptions.length === 0, \'bi-filter\': selectedOptions.length !== 0 }"\n        >\n        </i>\n    </div>\n</div>\n<ui-dropdown-plus\n    #dropdownRef\n    [id]="id"\n    [view]="\'none\'"\n    [externalTriggerEleId]="id + \'_trigger\'"\n    [animIcon]="true"\n    [setOptions]="options"\n    [disabled]="disabled"\n    [small]="small"\n    [paddingTop]="3"\n    [showSearch]="showSearch"\n    [multiSelect]="multiSelect"\n    [showSelectClearBtns]="showSelectClearBtns"\n    (selectionChange)="onSelectionChange($event)"\n    (openChange)="onOpenChange($event)"\n    (triggerClicked)="onTriggerClicked($event)"\n    (searchChange)="onSearchChange()"\n>\n</ui-dropdown-plus>\n',styles:[".quick-filter {\n  cursor: pointer;\n  font-weight: bold;\n}\n.quick-filter.open {\n  color: #00857C;\n  border-bottom: 1px solid #00857C;\n  margin-bottom: -1px;\n}\n.quick-filter:hover {\n  color: #00857C;\n  border-bottom: 1px solid #00857C;\n  margin-bottom: -1px;\n}\n.quick-filter.option-selected {\n  color: #00857C;\n}\n.quick-filter.option-selected.disabled {\n  color: #a8abae;\n  cursor: default;\n}\n.quick-filter.disabled {\n  color: #a8abae;\n  cursor: default;\n}\n.quick-filter.disabled:hover {\n  border-bottom: none;\n  margin-bottom: 0;\n}\n.quick-filter.open .bi {\n  transform: rotate(180deg);\n  margin-bottom: 4px;\n}\n.quick-filter.open .bi.anim {\n  transition: 150ms ease-in-out;\n}\n.quick-filter .bi {\n  transform: rotate(0deg);\n}\n.quick-filter .bi.anim {\n  transition: 150ms ease-in-out;\n}\n.quick-filter .btn.trigger.no-border {\n  border: none;\n  box-shadow: none !important;\n  padding-left: 0px;\n  padding-right: 0px;\n}\n.quick-filter .btn.hi-lite {\n  border: 1px solid #00857C;\n}\n.quick-filter .btn.btn-link {\n  padding: 0;\n}\n.quick-filter .btn.btn-link:hover {\n  text-decoration: underline;\n}\n.quick-filter .btn.btn-link:focus {\n  text-decoration: underline;\n  color: #006a63;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[ngx_translate_core.c$])],UiQuickFilterComponent)},"./libs/ui/src/lib/modules/grid/components/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{xm:()=>_pill_renderer_pill_renderer_component__WEBPACK_IMPORTED_MODULE_0__.xm});var _pill_renderer_pill_renderer_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts");__webpack_require__("./libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts"),__webpack_require__("./libs/ui/src/lib/modules/grid/components/grid/grid.component.ts"),__webpack_require__("./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts")},"./libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{xm:()=>UiPillClassEnum,Wj:()=>UiPillRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var UiBadgeTypeEnum,UiPackageEnum,UiPackageClassEnum,UiStatusEnum,UiStatusClassEnum,UiIdentifierEnum,UiIdentifierClassEnum,UiPillEnum,UiPillClassEnum,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");!function(UiBadgeTypeEnum){UiBadgeTypeEnum.status="status",UiBadgeTypeEnum.package="package",UiBadgeTypeEnum.notification="notification",UiBadgeTypeEnum.identifier="identifier",UiBadgeTypeEnum.pill="pill"}(UiBadgeTypeEnum||(UiBadgeTypeEnum={})),function(UiPackageEnum){UiPackageEnum.gold="gold",UiPackageEnum.silver="silver",UiPackageEnum.platinum="platinum"}(UiPackageEnum||(UiPackageEnum={})),function(UiPackageClassEnum){UiPackageClassEnum.gold="dot-gold",UiPackageClassEnum.silver="dot-silver",UiPackageClassEnum.platinum="dot-platinum"}(UiPackageClassEnum||(UiPackageClassEnum={})),function(UiStatusEnum){UiStatusEnum.neutral="neutral",UiStatusEnum.success="success",UiStatusEnum.info="info",UiStatusEnum.danger="danger",UiStatusEnum.caution="caution",UiStatusEnum.warning="warning",UiStatusEnum.tertiary="tertiary",UiStatusEnum.dimgrey="dimgrey"}(UiStatusEnum||(UiStatusEnum={})),function(UiStatusClassEnum){UiStatusClassEnum.neutral="dot-neutral",UiStatusClassEnum.success="dot-success",UiStatusClassEnum.caution="dot-caution",UiStatusClassEnum.warning="dot-warning",UiStatusClassEnum.danger="dot-danger",UiStatusClassEnum.info="dot-info",UiStatusClassEnum.tertiary="dot-tertiary",UiStatusClassEnum.dimgrey="dot-dimgrey"}(UiStatusClassEnum||(UiStatusClassEnum={})),function(UiIdentifierEnum){UiIdentifierEnum.neutral="neutral",UiIdentifierEnum.category1="category1",UiIdentifierEnum.category2="category2",UiIdentifierEnum.category3="category3",UiIdentifierEnum.category4="category4",UiIdentifierEnum.category5="category5",UiIdentifierEnum.category6="category6"}(UiIdentifierEnum||(UiIdentifierEnum={})),function(UiIdentifierClassEnum){UiIdentifierClassEnum.Neutral="identifier-neutral",UiIdentifierClassEnum.category1="identifier-category-1",UiIdentifierClassEnum.category2="identifier-category-2",UiIdentifierClassEnum.category3="identifier-category-3",UiIdentifierClassEnum.category4="identifier-category-4",UiIdentifierClassEnum.category5="identifier-category-5",UiIdentifierClassEnum.category6="identifier-category-6"}(UiIdentifierClassEnum||(UiIdentifierClassEnum={})),function(UiPillEnum){UiPillEnum.neutral="neutral",UiPillEnum.category1="category1",UiPillEnum.category2="category2",UiPillEnum.category3="category3",UiPillEnum.category4="category4",UiPillEnum.category5="category5",UiPillEnum.category6="category6",UiPillEnum.success="success",UiPillEnum.warning="warning",UiPillEnum.danger="danger",UiPillEnum.info="info",UiPillEnum.extreme="extreme"}(UiPillEnum||(UiPillEnum={})),function(UiPillClassEnum){UiPillClassEnum.neutral="badge-neutral",UiPillClassEnum.category1="badge-category-1",UiPillClassEnum.category2="badge-category-2",UiPillClassEnum.category3="badge-category-3",UiPillClassEnum.category4="badge-category-4",UiPillClassEnum.category5="badge-category-5",UiPillClassEnum.category6="badge-category-6",UiPillClassEnum.success="badge-success",UiPillClassEnum.warning="badge-warning",UiPillClassEnum.danger="badge-danger",UiPillClassEnum.info="badge-info",UiPillClassEnum.extreme="badge-extreme"}(UiPillClassEnum||(UiPillClassEnum={}));let UiPillRendererComponent=class UiPillRendererComponent{constructor(){this.pillClasses=[],this.pillText="",this.pillTextTranslationId="",this.color="",this.type="",this.cls=""}refresh(params){return this.update(params),!0}ngOnInit(){}agInit(params){this.update(params)}ngOnDestroy(){}clickedHandler(e){void 0!==this.params.clicked&&this.params.clicked(this.params.value)}update(params){this.params=params,this.pillClasses=params.pillClasses,this.pillText=params.pillText,this.pillTextTranslationId=params.pillTextTranslationId,this.type=params.type,this.color=params.color,this.cls="",this.type===UiBadgeTypeEnum.status&&(this.cls=UiStatusClassEnum[this.color]),this.type===UiBadgeTypeEnum.package&&(this.cls=UiPackageClassEnum[this.color]),this.type===UiBadgeTypeEnum.pill&&(this.cls=UiPillClassEnum[this.color]),this.type,UiBadgeTypeEnum.notification,this.type,UiBadgeTypeEnum.identifier}};UiPillRendererComponent.ctorParameters=()=>[],UiPillRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-pill-renderer",template:'\x3c!-- Status --\x3e\n<div class="" (click)="clickedHandler($event)" *ngIf="type=== \'status\'">\n    <span class="dot sm" [ngClass]="cls"></span>\n    <span class="dot-text sm">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Pill --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type=== \'pill\'">\n    <span class="badge rounded-pill noHover sm" [ngClass]="cls">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Package --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type=== \'package\'">\n    <span class="dot md" [ngClass]="cls"></span>\n    <span class="package-text">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Notification --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type === \'notification\'">\n    <span class="dot-notification sm">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Identifier --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type === \'identifier\'">\n    <span class="identifier identifier-neutral sm">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiPillRendererComponent)},"./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>UiTextCellRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js");let UiTextCellRendererComponent=class UiTextCellRendererComponent{constructor(){this.disableTooltip=!0,this._subscriptions=new Subscription.yU}refresh(params){return!0}ngAfterViewInit(){setTimeout((()=>{this.checkColumnWidth(this.params)})),this._subscriptions.add(this.params.column.eventService.addEventListener("widthChanged",(data=>{this.checkColumnWidth(data)})))}ngOnDestroy(){this._subscriptions.unsubscribe()}checkColumnWidth(data){void 0!==data&&(data.column.actualWidth>=this.myNameElem.nativeElement.scrollWidth+48?this.disableTooltip=!0:this.disableTooltip=!1)}agInit(params){this.params=params,this.value=params.value,this.itemId=params.itemId}};UiTextCellRendererComponent.ctorParameters=()=>[],UiTextCellRendererComponent.propDecorators={myNameElem:[{type:core.ViewChild,args:["myNameElem"]}],rulerElem:[{type:core.ViewChild,args:["ruler"]}]},UiTextCellRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-text-cell-renderer",template:'<div #myNameElem\n    class="ellipsis"\n    container="body"\n    ngbTooltip="{{ value }}"\n    [disableTooltip] = "disableTooltip"\n    [placement]="\'top\'"\n    [tooltipClass]="\'tooltip-lg\'"\n    (click)="params.clicked(itemId)"\n    >\n    <span *ngIf="params.isLink !== true">\n        {{ value }}\n    </span>\n    <a *ngIf="params.isLink === true" class="strong" href="javascript: void(0);">{{ value }}</a>\n</div>\n',styles:["::ng-deep .tooltip-inner {\n  max-width: 500px;\n}\n\na:link {\n  text-decoration: none;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiTextCellRendererComponent)},"./libs/ui/src/lib/modules/filter/grid-filter/grid-filter.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>grid_filter_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),enums=__webpack_require__("./libs/ui/src/lib/modules/grid/components/grid/enums/index.ts"),quick_filter_component=(__webpack_require__("./libs/ui/src/lib/modules/grid/components/index.ts"),__webpack_require__("./libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.ts"));let UiGridFilterComponent=class UiGridFilterComponent{constructor(){this.filterChange=new core.EventEmitter,this.filterCount=0,this.filtersArray=[],this._filters={}}set filters(value){this._filters=value,this.filtersArray=[];for(const prop in value)value.hasOwnProperty(prop)&&this.filtersArray.push({name:prop,filters:value[prop]})}get filters(){return this._filters}clearAllFilters(){for(const prop in this.filters)if(this.filters.hasOwnProperty(prop))for(let i=0;i<this.filters[prop].options.length;i++)this.filters[prop].options[i].value=!1;this.filterRefs.forEach((filterRef=>{filterRef.clearSelection()})),this.applyFiltersData()}applyFiltersData(){const tempFilters={},rowModelType=this.uiGrid.rowModelType;for(const prop in this.filters)if(this.filters.hasOwnProperty(prop)){if(0!==this.filters[prop].options.filter((option=>!0===option.value)).length){const values=this.filters[prop].options.filter((option=>!0===option.value));tempFilters[prop]=this.getFilterByRowModel(values,rowModelType)}}void 0!==this.uiGrid&&void 0!==this.uiGrid.gridOptions&&void 0!==this.uiGrid.gridOptions.api&&(this.uiGrid.gridOptions.api.setFilterModel(tempFilters),this.uiGrid.gridOptions.api.onFilterChanged()),this.filterChange.emit(tempFilters),this.updateTotalFilterCount()}updateTotalFilterCount(){this.filterCount=0;for(const prop in this.filters)if(this.filters.hasOwnProperty(prop)){const filter=this.filters[prop].options;for(let j=0;j<filter.length;j++)!0===filter[j].value&&(this.filterCount+=1)}}onOpenChange(event){}onTriggerClicked(event){}onSelectionChange(event){this.applyFiltersData(),this.filterChange.emit({options:this.filters})}getFilterByRowModel(values,rowModelType=enums.N.serverSide){let tempFilter;if(rowModelType===enums.N.clientSide)tempFilter={filterType:"set",values:values.map((v=>v.id))};else{let filterString="";for(let i=0;i<values.length;i++)filterString+=values[i].id,i<values.length-1&&values.length>1&&(filterString+=",");tempFilter={filterType:"text",type:"contains",filter:filterString}}return tempFilter}};UiGridFilterComponent.ctorParameters=()=>[],UiGridFilterComponent.propDecorators={uiGrid:[{type:core.Input}],filters:[{type:core.Input}],filterChange:[{type:core.Output}],filterRefs:[{type:core.ViewChildren,args:[quick_filter_component.L]}]},UiGridFilterComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-grid-filter",template:'<div class="card mb-3 overflow-visible">\n    <div class="row">\n        <div class="col-sm-9">\n            <div class="filters gap-20 m-3 d-flex flex-wrap flex-row align-items-center">\n                <span class="text-gray-700">{{"COMMON.FILTERS" | translate}}:</span>\n                <ui-quick-filter *ngFor="let item of filtersArray"\n                    [id]="\'filter_\'+item.name"\n                    [label]="item.filters.label"\n                    [setOptions]="item.filters.options"\n                    [showSelectClearBtns]="item.filters.showSelectClearBtns"\n                    [multiSelect]="item.filters.multiSelect??true"\n                    [showSearch]="item.filters.showSearch"\n                    (selectionChange)="onSelectionChange($event)"\n                    (openChange)="onOpenChange($event)"\n                    (triggerClicked)="onTriggerClicked($event)"\n                >\n                </ui-quick-filter>\n            </div>\n        </div>\n        <div class="col-sm-3">\n            <div class="filters gap-20 d-flex flex-wrap flex-row align-items-center justify-content-end pe-2 h-100">\n                <button id="clearBtn" *ngIf="filterCount > 0" type="button" class="btn btn-link btn-md" (click)="clearAllFilters()">\n                    <i class="bi bi-arrow-clockwise"></i>{{\'COMMON.CLEAR_FILTERS\' | translate}}\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiGridFilterComponent);const grid_filter_component_stories={title:"Grids/GridFilter",component:UiGridFilterComponent,decorators:[(0,client.moduleMetadata)({imports:[]})]},Primary=(args=>({props:args})).bind({});Primary.args={filters:""}}}]);