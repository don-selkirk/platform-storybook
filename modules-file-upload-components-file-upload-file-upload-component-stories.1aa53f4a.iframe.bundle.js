(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[4232],{"./libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";var UiButtonTypeEnum;__webpack_require__.d(__webpack_exports__,{a:()=>UiButtonTypeEnum}),function(UiButtonTypeEnum){UiButtonTypeEnum.PRIMARY="btn-primary",UiButtonTypeEnum.OUTLINE_PRIMARY="btn-outline-primary",UiButtonTypeEnum.LINK="btn-link",UiButtonTypeEnum.LINK_DANGER="btn-link-danger",UiButtonTypeEnum.DANGER="btn-danger",UiButtonTypeEnum.OUTLINE_DANGER="btn-outline-danger",UiButtonTypeEnum.SEPERATOR="btn-seperator"}(UiButtonTypeEnum||(UiButtonTypeEnum={}))},"./libs/ui/src/lib/modules/file-upload/components/file-upload/file-upload.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>file_upload_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js"),authentication_service=__webpack_require__("./libs/ui/src/lib/services/authentication/authentication.service.ts"),configuration_service=__webpack_require__("./libs/ui/src/lib/services/configuration/configuration.service.ts"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs"),throwError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/throwError.js"),ngx_cookie_service=__webpack_require__("./node_modules/ngx-cookie-service/__ivy_ngcc__/fesm2015/ngx-cookie-service.js"),user=__webpack_require__("./libs/ui/src/lib/services/user/index.ts"),ng_bootstrap=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2020/ng-bootstrap.mjs"),supportedLanguages_enum=__webpack_require__("./apps/acp-ui/src/app/enums/supportedLanguages.enum.ts");let UiPasswordlessLoginService=class UiPasswordlessLoginService{constructor(_configurationService,_httpClient,_cookieService,_configService,_userService,_modalService,_router,_translate){this._configurationService=_configurationService,this._httpClient=_httpClient,this._cookieService=_cookieService,this._configService=_configService,this._userService=_userService,this._modalService=_modalService,this._router=_router,this._translate=_translate,this._requestOtpTokenSlug_cognito="authentication/signin",this._verifyOtpTokenSlug_cognito="authentication/verifytoken",this._requestOtpTokenSlug_auth0="authentication/v2/requestotp",this._verifyOtpTokenSlug_auth0="authentication/v2/verifyotp"}signIn(email,language){let authResponse;const endpoint=`${this._configurationService.appConfig.iamApi}`+(this._configService.appConfig.authServiceVersion&&"auth0"===this._configService.appConfig.authServiceVersion?this._requestOtpTokenSlug_auth0:this._requestOtpTokenSlug_cognito),lang3letter=supportedLanguages_enum.kV[language],body={email,language:lang3letter};return this._httpClient.post(`${endpoint}`,body,{observe:"response"}).pipe((0,map.T)((response=>(248!==response.status&&response.body&&(220===response.status?(authResponse=response.body,window.location.href=authResponse.asmUri):(authResponse=response.body,this.setSessionKeyCookie(authResponse.sessionKey,email))),response.status))),(0,catchError.W)((error=>{let errorMsg;return errorMsg=error.error instanceof ErrorEvent?`Error: ${error.error.message}`:this.getSignInErrorMessage(error),(0,throwError.$)((()=>new Error(errorMsg)))})))}verifyToken(email,sessionKey,otp,language){const endpoint=`${this._configurationService.appConfig.iamApi}`+(this._configService.appConfig.authServiceVersion&&"auth0"===this._configService.appConfig.authServiceVersion?this._verifyOtpTokenSlug_auth0:this._verifyOtpTokenSlug_cognito);language=supportedLanguages_enum.kV[language];const body={email,sessionKey,otp,language};return this._httpClient.post(`${endpoint}`,body).pipe((0,tap.M)((data=>{data.session?this.setTokenCookie(data):data.sessionKey&&(this.setSessionKeyCookie(data.sessionKey,email),this.throwInvalidTokenError())})),(0,catchError.W)((error=>{let errorMsg;return errorMsg=error.error instanceof ErrorEvent?`Error: ${error.error.message}`:this.getVerifyTokenErrorMessage(error),(0,throwError.$)((()=>new Error(errorMsg)))})))}getCookieDomain(){var _a,_b,_c,_d;let domain=null===(_b=null===(_a=this._configService)||void 0===_a?void 0:_a.appConfig)||void 0===_b?void 0:_b.coreAuthCookieDomain;return(null===(_d=null===(_c=window.location)||void 0===_c?void 0:_c.href)||void 0===_d?void 0:_d.indexOf("localhost"))>-1&&(domain="localhost"),domain}throwInvalidTokenError(){let errorMsg;this._translate.get("AUTHENTICATION.ERRORS.INVALID_CODE").subscribe((res=>{errorMsg=res})),(0,throwError.$)((()=>new Error(errorMsg)))}getVerifyTokenErrorMessage(error){let message;if(412===error.status)this._translate.get("AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED").subscribe((res=>{message=res}));else this._translate.get("AUTHENTICATION.ERRORS.CODE_INCORRECT").subscribe((res=>{message=res}));return message}getSignInErrorMessage(error){let message;if(248===error.status)this._translate.get("AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED").subscribe((res=>{message=res}));else this._translate.get("AUTHENTICATION.ERRORS.SOMETHING_WRONG").subscribe((res=>{message=res}));return message}setSessionKeyCookie(sessionKey,email){const expirationDate=new Date;expirationDate.setHours(expirationDate.getHours()+3),this._cookieDomain=this.getCookieDomain(),this.sessionKey=sessionKey,this._cookieService.set(this._configService.appConfig.authCookieId,sessionKey,expirationDate,"/",this._cookieDomain,this._configService.appConfig.secureCookie),this._cookieService.set(this._configService.appConfig.emailCookieId,email,null,"/",this._cookieDomain,this._configService.appConfig.secureCookie)}setTokenCookie(response){const expirationDate=new Date(this.getTokenExpirationDate(response.session.token));this._cookieDomain=this.getCookieDomain(),this.token=response.session.token,this._cookieService.set(this._configService.appConfig.authCookieId,response.session.token,expirationDate,"/",this._cookieDomain,this._configService.appConfig.secureCookie),this.sessionKey=response.session.sessionKey,this._cookieService.set(this._configService.appConfig.sessionCookieId,response.session.sessionKey,expirationDate,"/",this._cookieDomain,this._configService.appConfig.secureCookie),this._cookieService.set(this._configService.appConfig.uniqueSessionCookieId,response.session.uniqueSessionGuid,expirationDate,"/",this._cookieDomain,this._configService.appConfig.secureCookie),this.loadUserDetails(response.session.token),this.initAssentSession()}loadUserDetails(token){const userEmail=this.getTokenEmail(token),tokenPayload=this.getTokenPayload(token);this._userService.selectUser(userEmail,tokenPayload)}initAssentSession(){const options={cookieDomain:this._cookieDomain,authenticationApiUrl:this._configService.appConfig.authApi,logoutOverride:()=>{this.clearUserCredentials(),this._modalService.dismissAll(),this._router.navigate([""])},authTokenCookie:this._configService.appConfig.authCookieId,sessionTokenCookie:this._configService.appConfig.sessionCookieId,onExtendSession:()=>"",sessionExpiryLogoutCookieRequired:!0,sessionExpiryLogoutCookieName:this._configService.appConfig.sessionExpiryLogoutCookieName,secureCookie:this._configService.appConfig.secureCookie},cookiePattern=`^(.*;)?\\s*${this._configService.appConfig.authCookieId}\\s*=\\s*[^;]+(.*)?$`;document.cookie.match(cookiePattern)&&Assent.session.initialize(options)}clearUserCredentials(){Assent.session.dispose(),this._cookieService.deleteAll("/",this._cookieDomain),this._userService.logout()}getTokenEmail(token){const data=this.getTokenPayload(token);return data&&data.sub?data.sub:""}getTokenExpirationDate(token){const data=this.getTokenPayload(token);if(data&&data.exp)return 1e3*data.exp}getTokenPayload(token){if(!token)return;const tokenParts=token.split(".");if(tokenParts&&!(tokenParts.length<2))try{return JSON.parse(atob(tokenParts[1]))}catch(error){return}}};UiPasswordlessLoginService.ctorParameters=()=>[{type:configuration_service.c},{type:http.Qq},{type:ngx_cookie_service.O},{type:configuration_service.c},{type:user.b},{type:ng_bootstrap.Bq},{type:router.Ix},{type:ngx_translate_core.c$}],UiPasswordlessLoginService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"}),(0,tslib_es6.Sn)("design:paramtypes",[configuration_service.c,http.Qq,ngx_cookie_service.O,configuration_service.c,user.b,ng_bootstrap.Bq,router.Ix,ngx_translate_core.c$])],UiPasswordlessLoginService);const FORM_DATA=new http.rx((()=>!1));let AcpBasicAuthInterceptor=class AcpBasicAuthInterceptor{constructor(_authenticationService,_passwordlessLoginService,_configurationService){this._authenticationService=_authenticationService,this._passwordlessLoginService=_passwordlessLoginService,this._configurationService=_configurationService}intercept(request,next){return next.handle(request).pipe((0,tap.M)((event=>{if(event instanceof http.cS&&event.headers.has("Assent-Context-Key")){const contextKey=event.headers.get("Assent-Context-Key");this._authenticationService.assentContextKey=contextKey}}))),void 0!==this._authenticationService.authResponse?request=request.clone({setHeaders:{Authorization:`Bearer ${this._authenticationService.authResponse.session.token}`,"Portal-Host":window.location.host,"Assent-Context-Key":this._authenticationService.assentContextKey}}):void 0!==this._configurationService.appConfig&&void 0!==this._passwordlessLoginService.token&&(request=request.clone({setHeaders:{Authorization:`Bearer ${this._passwordlessLoginService.token}`,"Portal-Host":window.location.host}})),null===request.headers.get("Content-Type")&&!1===request.context.get(FORM_DATA)&&(request=request.clone({setHeaders:{"Content-Type":"application/json"}})),next.handle(request)}};AcpBasicAuthInterceptor.ctorParameters=()=>[{type:authentication_service._},{type:UiPasswordlessLoginService},{type:configuration_service.c}],AcpBasicAuthInterceptor=(0,tslib_es6.Cg)([(0,core.Injectable)(),(0,tslib_es6.Sn)("design:paramtypes",[authentication_service._,UiPasswordlessLoginService,configuration_service.c])],AcpBasicAuthInterceptor);var AcpHttpErrorEnum,retry=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/retry.js"),toast_service=__webpack_require__("./libs/ui/src/lib/services/toast-notification/toast.service.ts");!function(AcpHttpErrorEnum){AcpHttpErrorEnum.exceptionManagementRemoveMatch="EXCEPTION_MANAGEMENT.ERRORS.REMOVE_MATCH_ERROR",AcpHttpErrorEnum.exceptionManagementConfirmMatch="EXCEPTION_MANAGEMENT.ERRORS.CONFIRM_MATCH_ERROR",AcpHttpErrorEnum.userManagementUserExists="USER_MANAGEMENT.ERRORS.USER_ALREADY_EXISTS"}(AcpHttpErrorEnum||(AcpHttpErrorEnum={}));const acpHttpErrorLocalizationMap={"Client Error. A handled exception was thrown by the application. Message: Keyword with the same name already exists.":"INDIRECT_MONITORING.ERRORS.KEYWORD_NAME_EXISTS","Client Error. A handled exception was thrown by the application. Message: KeywordCategory with the same name already exists.":"INDIRECT_MONITORING.ERRORS.KEYWORD_CATEGORY_NAME_EXISTS","Client Error. A handled exception was thrown by the application. Message: RiskCategory with the same name already exists.":"INDIRECT_MONITORING.ERRORS.RISK_CATEGORY_NAME_EXISTS","Client Error. A handled exception was thrown by the application. Message: Watchlist with the same name already exists.":"INDIRECT_MONITORING.ERRORS.WATCHLIST_NAME_EXISTS","There are more than one criteria with the same name.":"EVIDENCE_REVIEW.DUPLICATE_CRITERIA_ERROR"};var RestResponseType,AcpRouteEnum,AcpStorageKey;!function(RestResponseType){RestResponseType.blob="blob",RestResponseType.json="json",RestResponseType.file="file",RestResponseType.text="text",RestResponseType.arrayBuffer="arraybuffer"}(RestResponseType||(RestResponseType={})),function(AcpRouteEnum){AcpRouteEnum.acp="acp",AcpRouteEnum.assentia="apps/assentia",AcpRouteEnum.auth="auth",AcpRouteEnum.base="",AcpRouteEnum.catalogs="catalogs",AcpRouteEnum.companies="companies",AcpRouteEnum.contact="apps/contact",AcpRouteEnum.dashboard="acp/developer-hub/dashboard",AcpRouteEnum.dataManagement="data-management",AcpRouteEnum.documentClassification="catalogs/classification",AcpRouteEnum.error="error",AcpRouteEnum.exceptionManagement="acp/supplier-network/exception-management",AcpRouteEnum.help="apps/help",AcpRouteEnum.program="program",AcpRouteEnum.programs="programs",AcpRouteEnum.requests="apps/requests",AcpRouteEnum.segmentation="catalogs/segmentation",AcpRouteEnum.settings="apps/settings",AcpRouteEnum.supplierNetwork="supplier-network",AcpRouteEnum.unknown="**",AcpRouteEnum.userManagement="user-management",AcpRouteEnum.indirectMonitoring="acp/indirect-monitoring",AcpRouteEnum.correctiveActions="acp/corrective-actions",AcpRouteEnum.networkRequestsStates="acp/network-requests-states",AcpRouteEnum.evidenceReview="acp/evidence-review"}(AcpRouteEnum||(AcpRouteEnum={})),function(AcpStorageKey){AcpStorageKey.userName="userName",AcpStorageKey.userEmail="userEmail"}(AcpStorageKey||(AcpStorageKey={}));var enums=__webpack_require__("./libs/ui/src/lib/services/toast-notification/enums/index.ts");const SKIP_INTERCEPTOR=new http.rx((()=>!1));let AcpHttpErrorInterceptor=class AcpHttpErrorInterceptor{constructor(_translateService,_toastService){this._translateService=_translateService,this._toastService=_toastService}intercept(request,next){return request.context.get(SKIP_INTERCEPTOR)?next.handle(request):next.handle(request).pipe((0,retry.L)(1),(0,catchError.W)((error=>{let errorMessage="";return errorMessage=error.error instanceof ErrorEvent?this.getClientSideErrorMessage(error):this.getServerSideErrorMessage(error),errorMessage&&this._toastService.show(this._translateService.instant(errorMessage),enums.O.danger),(0,throwError.$)(error)})))}getClientSideErrorMessage(error){return AcpHttpErrorEnum[error.name]||error.error.message}getServerSideErrorMessage(error){return AcpHttpErrorEnum[error.name]||this.getMessageByInternalError(error.error)||this.getMessageByErrorStatus(error.status,error.statusText)}getMessageByInternalError(error){let message=this.getLocalizationMessage(null==error?void 0:error.message);return message||"string"!=typeof error||this.isHtml(error)||(message=this.getLocalizationMessage(error)),message}getMessageByErrorStatus(status,statusText){let message;if(501===status)message="COMMON.HTTP_ERRORS.NOT_IMPLEMENTED";else message=statusText;return message}getLocalizationMessage(message){let localizedMessage=acpHttpErrorLocalizationMap[message];return localizedMessage||(localizedMessage=message),localizedMessage}isHtml(error){return/<\s*html[^>]*>(.*?)|<\s*\/\s*html>/g.test(error)}};AcpHttpErrorInterceptor.ctorParameters=()=>[{type:ngx_translate_core.c$},{type:toast_service.p}],AcpHttpErrorInterceptor=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"}),(0,tslib_es6.Sn)("design:paramtypes",[ngx_translate_core.c$,toast_service.p])],AcpHttpErrorInterceptor);var action_button_type_enum=__webpack_require__("./libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts"),browser=__webpack_require__("./node_modules/aws-sdk/lib/browser.js"),webSocket=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/dom/webSocket.js"),WebSocketSubject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/dom/WebSocketSubject.js"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js");let UiFileScanService=class UiFileScanService{constructor(_configurationService){this._configurationService=_configurationService,this._token=this.generateGuid(),this._fileScanConfig=this._configurationService.appConfig["file-scan"],this._fileScanConfig.scanIdentityPoolId&&this._fileScanConfig.scanUrl?this.fileScan=(0,webSocket.K)({url:`${this._fileScanConfig.scanUrl}?token=${this._token}`,deserializer:({data})=>{const parsedData=JSON.parse(data);return{scanResultClean:parsedData.scanResultClean,eTag:parsedData.file.eTag,key:parsedData.file.key}}}):this.fileScan=empty.w}uploadFile(file,fileFolder){return new Observable.c((observer=>{const s3Endpoint=this._fileScanConfig.awsS3ServiceURL,config={apiVersion:"2006-03-01",params:{Bucket:this._fileScanConfig.scanBucketName}};s3Endpoint&&(config.endpoint=s3Endpoint,config.s3ForcePathStyle=!0),this._fileScanConfig.scanIdentityPoolId?browser.config.update({region:this._fileScanConfig.scanBucketRegion,credentials:new browser.CognitoIdentityCredentials({IdentityPoolId:this._fileScanConfig.scanIdentityPoolId})}):browser.config.update({credentials:new browser.Credentials({accessKeyId:"fakeAccessKeyId",secretAccessKey:"fakeSecretAccessKey",sessionToken:"fakeSessionToken"})});const s3=new browser.S3(config),fileUniqueName=this.generateUniqueName(file.name),params={Bucket:this._fileScanConfig.scanBucketName,Key:`${fileFolder}${fileUniqueName}`,Body:file,ACL:"private",ContentType:file.type,FileName:file.name,Folder:fileFolder};s3.upload(params,((err,data)=>{err?observer.error(err):(this._fileScanConfig.scanIdentityPoolId||this._fileScanConfig.scanUrl||(this.fileScan=(0,of.of)({scanResultClean:!0,eTag:"",key:data.Key})),observer.next(data),observer.complete())}))}))}completeFileScan(){this.fileScan instanceof WebSocketSubject.Q&&this.fileScan.complete()}generateUniqueName(name){const parts=name.toLowerCase().replace(/[^0-9a-z\.]/g,"").split("."),fileName=parts[0];let ext="";return parts.length>1&&(ext="."+parts[parts.length-1]),fileName.substr(0,10)+this.generateGuid()+"-"+this._token+ext}generateGuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(c=>{const r=16*Math.random()|0;return("x"===c?r:3&r|8).toString(16)}))}};UiFileScanService.ctorParameters=()=>[{type:configuration_service.c}],UiFileScanService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"}),(0,tslib_es6.Sn)("design:paramtypes",[configuration_service.c])],UiFileScanService);class UiDocumentModel{}let UiFileUploadComponent=class UiFileUploadComponent{constructor(_fileScanService,_httpClient,_translateService,_configurationService){this._fileScanService=_fileScanService,this._httpClient=_httpClient,this._translateService=_translateService,this._configurationService=_configurationService,this.disabled=!1,this.buttonView=!1,this.forceDisabled=!1,this.label="FILE_UPLOAD.UPLOAD_FILES",this.mainText="FILE_UPLOAD.DRAG_DROP_CLICK",this.infoText="FILE_UPLOAD.DRAG_DROP_CLICK",this.showInfoIcon=!1,this.showFiles=!0,this.maxFileSize=2e4,this.maximumFilesAllowed=5,this.acceptFileTypes=["text/plain"],this.loadingText="FILE_UPLOAD.LOADING",this.files=[],this.folder="",this.handleDocumentScanResult=new core.EventEmitter,this.handleDocumentScanError=new core.EventEmitter,this.handleDocumentValidationError=new core.EventEmitter,this.handleDocumentRemoved=new core.EventEmitter,this.handleDocumentProcessedResult=new core.EventEmitter,this.handleDocumentProcessedError=new core.EventEmitter,this.error=!1,this.safeFiles=[],this.isLoading=!1,this.UiButtonTypeEnum=action_button_type_enum.a,this.handleError=(error,fileItem)=>{for(let i=0;i<this.files.length;i++)this.files[i].name===fileItem.fileName+"."+fileItem.fileExt&&(this.files[i].error=this._translateService.instant("FILE_UPLOAD.SERVER_ERROR")+": "+error.statusText);return this.handleDocumentProcessedError.emit(fileItem),(0,of.of)()},this._fileScanConfig=this._configurationService.appConfig["file-scan"]}fileBrowseHandler(files){this.prepareFilesList(files)}prepareFilesList(files){for(const item of files)item.progress=0,item.typeRejected=null,item.safe=!1,item.index=Date.now().toString(36)+Math.random().toString(36).substring(2),this.getSafeCount()<this.maximumFilesAllowed?this.extensionAccepted(item.type)?(item.isLoading=!0,item.isFileScanning=!0,item.size>=this.maxFileSize&&(item.typeRejected="FILE_UPLOAD.EXCEEDED_MAX_FILE_SIZE",item.message="FILE_UPLOAD.EXCEEDED_MAX_FILE_SIZE",item.isLoading=!1,item.isFileScanning=!1,this.handleDocumentValidationError.emit(item))):(item.typeRejected="FILE_UPLOAD.FILE_TYPE_REJECTED",item.message="FILE_UPLOAD.FILE_TYPE_REJECTED",item.isLoading=!1,item.isFileScanning=!1,this.handleDocumentValidationError.emit(item)):(item.typeRejected="FILE_UPLOAD.EXCEEDED_MAX_FILES",item.message="FILE_UPLOAD.EXCEEDED_MAX_FILES",item.isLoading=!1,this.handleDocumentValidationError.emit(item)),this.files.push(item);this.uploadFile(this.files),this.disabled=this.getSafeCount()>=this.maximumFilesAllowed}getSafeCount(){return this.files.filter((obj=>!0===obj.safe||void 0===obj.uploaded&&null===obj.typeRejected)).length}onFileDropped($event){this.prepareFilesList($event),this.disabled=this.getSafeCount()>=this.maximumFilesAllowed}removeFile(thisFile){this.files.splice(this.files.findIndex((item=>item.index===thisFile.index)),1),this.handleDocumentRemoved.emit(thisFile),this.disabled=this.getSafeCount()>=this.maximumFilesAllowed}extensionAccepted(extension){return this.acceptFileTypes.some((fileType=>extension.includes(fileType)))}uploadFile(files){this.isLoading=!0;0===this.files.filter((obj=>!0===obj.isLoading)).length&&(this.isLoading=!1);0===this.files.filter((obj=>!0===obj.isFileScanning)).length&&(this.isFileScanning=!1),setTimeout((()=>{for(let i=0;i<files.length;++i)if(null===files[i].typeRejected&&void 0===files[i].uploaded){const fileName=files[i].name.split(".").slice(0,-1).join("."),fileType=files[i].type,fileExt=files[i].name.split(".").pop();this._fileScanService.uploadFile(files[i],this.folder).pipe((0,tap.M)((()=>{this._fileScanService.fileScan&&(this.isFileScanning=!0)})),(0,mergeMap.Z)((()=>this._fileScanService.fileScan)),(0,mergeMap.Z)((result=>!0===result.scanResultClean?(files[i].isLoading=!1,files[i].isFileScanning=!1,files[i].safe=!0,files[i].uploaded=!0,files[i].bucket=this._fileScanConfig.scanBucketName,files[i].scanResult=result,files[i].fileExt=fileExt,files[i].mimeType=fileType,this.handleCleanScan(files[i],result,fileName)):(files[i].isLoading=!1,files[i].isFileScanning=!1,files[i].safe=!1,files[i].uploaded=!0,files[i].bucket=this._fileScanConfig.scanBucketName,files[i].scanResult=result,this.handleDirtyScan(files[i]),(0,of.of)(null)))),(0,map.T)((doc=>{if(doc)return!0}))).subscribe((value=>{}))}}),2e3)}processDocument(document,params,headers){const options={headers,params,context:(new http._y).set(SKIP_INTERCEPTOR,!0)};return this._httpClient.post(`${this.endpoint}`,document,options).pipe((0,catchError.W)((error=>this.handleError(error,document))),(0,map.T)((res=>{for(let i=0;i<this.files.length;i++)this.files[i].name===res.fileName+"."+res.fileExt&&(this.files[i].processed=!0),this.handleDocumentProcessedResult.emit(document);return res})))}formatBytes(bytes,decimals){if(0===bytes)return"0 Bytes";const dm=decimals<=0?0:decimals||2,i=Math.floor(Math.log(bytes)/Math.log(1024));return parseFloat((bytes/Math.pow(1024,i)).toFixed(dm))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][i]}handleDirtyScan(file){this.isFileScanning=!1,this.fileUploaded=!0,this.isScanClean=!1,this.isLoading=!1,file.message="FILE_UPLOAD.FILE_UNSAFE",this._fileScanService.completeFileScan(),this.handleDocumentScanError.emit(file)}handleCleanScan(file,scanResult,fileName){this.isFileScanning=!1,this.isScanClean=!0,this.fileUploaded=!0,this.isLoading=!1;const s3Key=scanResult.key.split("+").join(""),uniqueFileName=s3Key.split("/").pop(),documentToSave=new UiDocumentModel;return documentToSave.fileName=fileName,documentToSave.fileExt=file.fileExt,documentToSave.mimeType=file.mimeType,documentToSave.s3Key=s3Key,documentToSave.uniqueFileName=uniqueFileName,documentToSave.bucket=this._fileScanConfig.scanBucketName,this._fileScanService.completeFileScan(),this.handleDocumentScanResult.emit(file),void 0!==this.endpoint&&""!==this.endpoint?this.processDocument(documentToSave):(0,of.of)(documentToSave)}};UiFileUploadComponent.ctorParameters=()=>[{type:UiFileScanService},{type:http.Qq},{type:ngx_translate_core.c$},{type:configuration_service.c}],UiFileUploadComponent.propDecorators={id:[{type:core.Input}],disabled:[{type:core.Input}],buttonView:[{type:core.Input}],forceDisabled:[{type:core.Input}],label:[{type:core.Input}],mainText:[{type:core.Input}],infoText:[{type:core.Input}],helpText:[{type:core.Input}],showInfoIcon:[{type:core.Input}],showFiles:[{type:core.Input}],maxFileSize:[{type:core.Input}],maximumFilesAllowed:[{type:core.Input}],acceptFileTypes:[{type:core.Input}],loadingText:[{type:core.Input}],files:[{type:core.Input}],endpoint:[{type:core.Input}],folder:[{type:core.Input}],handleDocumentScanResult:[{type:core.Output}],handleDocumentScanError:[{type:core.Output}],handleDocumentValidationError:[{type:core.Output}],handleDocumentRemoved:[{type:core.Output}],handleDocumentProcessedResult:[{type:core.Output}],handleDocumentProcessedError:[{type:core.Output}]},UiFileUploadComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-file-upload",template:'<div class="form" [disabled]="disabled" uiDragDrop (fileDropped)="onFileDropped($event)">  \n    \x3c!-- Label and info icon --\x3e\n    <div class="d-flex align-items-center">\n        \x3c!-- Label --\x3e\n        <label [id]="id + \'_Label\'" for="formControlName">\n            {{label | translate}}\n            \x3c!-- Required Asterix --\x3e\n            \x3c!-- <span [id]="id + \'_RequiredAsterisk\'" *ngIf="form.controls[formControlName].hasValidator(Validators.required)">*</span> --\x3e\n        </label>\n        <br>\n        \x3c!-- Info Icon with Tooltip (infoText) --\x3e\n        <i [id]="id + \'_InfoIcon\'" *ngIf="showInfoIcon && infoText !== undefined && infoText !== \'\'" class="bi bi-question-circle-fill ps-2"\n            placement="top" [ngbTooltip]="infoText | translate">\n        </i>\n    </div>\n\n    \x3c!-- Upload Button --\x3e\n    <div *ngIf="buttonView === true" class="file btn btn-primary">\n        {{loadingText | translate}}\n        <input class="pointer" type="file" #fileDropRef id="fileDropRef" multiple (change)="prepareFilesList($event.target[\'files\'])" />\n    </div>\n\n    \x3c!-- Upload Drag and Drop box --\x3e\n    <div *ngIf="buttonView === false" class="drop-box d-flex align-items-center" [ngClass]="{\'disabled\': disabled === true || isLoading === true}">\n        <div *ngIf="!isLoading" class="d-flex flex-column align-items-center justify-content-center w-100">\n                <div>\n                    <i class="bi bi-upload bi-lg h-100" [ngClass]="{\'text-primary\': disabled === false}"></i>\n                </div>\n                <div class="file btn" [ngClass]="{\'btn-link\': disabled === false}">\n                    {{mainText | translate}}\n                    <input [disabled]="disabled" [ngClass]="{\'pointer\': disabled === false}" type="file" #fileDropRef id="fileDropRef" multiple (change)="fileBrowseHandler($event.target[\'files\'])" />\n                </div>\n                <div class="text-gray-700 text-center" *ngIf="helpText !== null && helpText !== \'\'">{{helpText | translate}}</div>        \n                <input hidden #fileInput type="file" [multiple]="false">\n            \n        </div>\n        <div class="w-100" *ngIf="isLoading">            \n            <div class="d-flex align-items-center flex-column">\n                <div class="spinner-border"></div>\n                <span class="pt-2">{{loadingText | translate}}</span>\n            </div> \n        </div>\n    </div>        \n</div>\n<ng-container *ngIf="showFiles === true">\n    <div class="file-box d-flex bd-highlight align-items-center ps-2 pe-2" *ngFor="let item of files; let i = index" [ngClass]="item.typeRejected || item.error || (item.safe === false && item.uploaded === true) ? \'error\' : \'normal\'">    \n        <div class="p-2 flex-grow-1 bd-highlight">\n            {{item.name}}\n            \x3c!--             \n            <ng-container *ngIf="item?.isFileScanning === true"> - <span class="text-success"> Scanning</span></ng-container>\n            <ng-container *ngIf="item?.uploaded === true"> - <span class="text-success"> {{\'FILE_UPLOAD.FILE_UPLOADED\' | translate}}</span></ng-container>\n             --\x3e\n            <ng-container *ngIf="item?.safe === false && item?.uploaded === true"> - <span class="text-danger"> {{\'FILE_UPLOAD.FILE_UNSAFE\' | translate}} </span></ng-container>\n            <ng-container *ngIf="item?.typeRejected !== null"> - <span class="text-danger"> {{\'FILE_UPLOAD.FILE_REJECTED\' | translate}} - {{item?.typeRejected | translate}} </span></ng-container>\n            <ng-container *ngIf="item?.error !== undefined"> - <span class="text-danger">{{item?.error}}</span></ng-container>\n            \n        </div>\n        <div class="p-2 bd-highlight d-flex gap-3 align-items-center">\n            <i *ngIf="item?.error !== undefined || item?.typeRejected !== null" class="error-icon bi bi-exclamation-triangle-fill text-danger-600"></i>\n            <i *ngIf="item?.isLoading === false" class="bi bi-x-lg pointer" (click)="removeFile(item)"></i>\n            <div *ngIf="item?.isLoading === true" class="spinner-border spinner-border-sm"></div>        \n        </div>    \n    </div>\n</ng-container>\n',styles:[".drop-box {\n  width: 100%;\n  min-height: 150px;\n  border: 2px solid #00857C;\n  border-radius: 4px;\n  padding: 20px;\n  background-color: #fff;\n  -webkit-user-select: none;\n  /* Safari */\n  /* IE 10 and IE 11 */\n  user-select: none;\n  /* Standard syntax */\n}\n.drop-box.disabled {\n  border-color: #d2d6da;\n}\n.drop-box.disabled * {\n  color: #d2d6da;\n}\n.file-box {\n  width: 100%;\n  border-radius: 4px;\n  background-color: #edeff0;\n  margin-top: 1rem;\n}\n.file-box .bi {\n  line-height: 0;\n}\n.loading-container {\n  height: 100px;\n}\n.error {\n  outline: 1px solid #E02A49;\n}\n.error-icon {\n  padding-right: 3px;\n}\n.success-icon {\n  font-size: 1.3rem;\n}\n.file {\n  position: relative;\n  overflow: hidden;\n}\ninput {\n  position: absolute;\n  font-size: 50px;\n  opacity: 0;\n  right: 0;\n  top: 0;\n}\n/* CSS */\n.spin {\n  animation: spin 2s linear infinite;\n}\n.curs {\n  cursor: default;\n}\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[UiFileScanService,http.Qq,ngx_translate_core.c$,configuration_service.c])],UiFileUploadComponent);var testing=__webpack_require__("./node_modules/@angular/common/fesm2020/http/testing.mjs");const file_upload_component_stories={title:"Components/FileUpload",component:UiFileUploadComponent,decorators:[(0,client.moduleMetadata)({imports:[testing.Sj]})]},Primary=(args=>({props:args})).bind({});Primary.args={id:"",disabled:!1,buttonView:!1,forceDisabled:!1,label:"FILE_UPLOAD.UPLOAD_FILES",mainText:"FILE_UPLOAD.DRAG_DROP_CLICK",infoText:"FILE_UPLOAD.DRAG_DROP_CLICK",helpText:"",showInfoIcon:!1,showFiles:!0,maxFileSize:1e4,maximumFilesAllowed:5,acceptFileTypes:["text/plain"],loadingText:"FILE_UPLOAD.LOADING",files:[],endpoint:"",folder:""}},"?cebb":()=>{}}]);