"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[6224],{"./libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiAlertLayoutEnum;__webpack_require__.d(__webpack_exports__,{C:()=>UiAlertLayoutEnum}),function(UiAlertLayoutEnum){UiAlertLayoutEnum.STACKED="actionsStacked",UiAlertLayoutEnum.INLINE="actionsInline"}(UiAlertLayoutEnum||(UiAlertLayoutEnum={}))},"./libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiAlertTypeEnum;__webpack_require__.d(__webpack_exports__,{q:()=>UiAlertTypeEnum}),function(UiAlertTypeEnum){UiAlertTypeEnum.success="success",UiAlertTypeEnum.danger="danger",UiAlertTypeEnum.warning="warning",UiAlertTypeEnum.neutral="neutral",UiAlertTypeEnum.info="info"}(UiAlertTypeEnum||(UiAlertTypeEnum={}))},"./libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiButtonSizeEnum;__webpack_require__.d(__webpack_exports__,{J:()=>UiButtonSizeEnum}),function(UiButtonSizeEnum){UiButtonSizeEnum.SMALL="btn-sm",UiButtonSizeEnum.MEDIUM="btn-md"}(UiButtonSizeEnum||(UiButtonSizeEnum={}))},"./libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var UiButtonTypeEnum;__webpack_require__.d(__webpack_exports__,{a:()=>UiButtonTypeEnum}),function(UiButtonTypeEnum){UiButtonTypeEnum.PRIMARY="btn-primary",UiButtonTypeEnum.OUTLINE_PRIMARY="btn-outline-primary",UiButtonTypeEnum.LINK="btn-link",UiButtonTypeEnum.LINK_DANGER="btn-link-danger",UiButtonTypeEnum.DANGER="btn-danger",UiButtonTypeEnum.OUTLINE_DANGER="btn-outline-danger",UiButtonTypeEnum.SEPERATOR="btn-seperator"}(UiButtonTypeEnum||(UiButtonTypeEnum={}))},"./libs/ui/src/lib/modules/alert/alert.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>alert_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var UiAlertSizeEnum,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),alert_type_enum=__webpack_require__("./libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts");!function(UiAlertSizeEnum){UiAlertSizeEnum.SMALL="small",UiAlertSizeEnum.MEDIUM="medium"}(UiAlertSizeEnum||(UiAlertSizeEnum={}));var alert_layout_enum=__webpack_require__("./libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts"),action_button_type_enum=__webpack_require__("./libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts"),action_button_size_enum=__webpack_require__("./libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts");let UiAlertComponent=class UiAlertComponent{constructor(){this.type=alert_type_enum.q.warning,this.showIcon=!0,this.size=UiAlertSizeEnum.MEDIUM,this.dismissible=!0,this.actionButtons=new Array,this.layout=alert_layout_enum.C.INLINE,this.buttonType=action_button_type_enum.a.LINK,this.linkSize=action_button_size_enum.J.MEDIUM}ngOnInit(){if(this.showIcon){switch(this.type){case alert_type_enum.q.success:this.icon="bi bi-check-circle-fill";break;case alert_type_enum.q.danger:this.icon="bi bi-exclamation-triangle-fill";break;case alert_type_enum.q.info:this.icon="bi bi-info-circle-fill";break;case alert_type_enum.q.warning:this.icon="bi bi-exclamation-circle-fill";break;case alert_type_enum.q.neutral:this.icon="bi bi-info-circle-fill"}if(this.actionButtons.length>2)throw this.actionButtons=this.actionButtons.slice(0,2),new Error("Alert can have only 2 action buttons")}}onClick(){}};UiAlertComponent.ctorParameters=()=>[],UiAlertComponent.propDecorators={text:[{type:core.Input}],id:[{type:core.Input}],type:[{type:core.Input}],showIcon:[{type:core.Input}],size:[{type:core.Input}],dismissible:[{type:core.Input}],title:[{type:core.Input}],actionButtons:[{type:core.Input}],layout:[{type:core.Input}]},UiAlertComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-alert",template:'<div\n    id="{{ id }}"\n    class="alert alert-{{ type }} alert-dismissible fade show {{ size }}-alert"\n    role="alert"\n    [ngClass]="{ \'actions-stacked\': layout === \'actionsStacked\', \'actions-inline\': layout === \'actionsInline\' }"\n>\n    <div class="alert-container" [ngClass]="{ actionsStacked: layout === \'actionsStacked\' }">\n        <i class="{{ icon }} alert-icon" *ngIf="showIcon" [ngClass]="{ inline: layout === \'actionsInline\' }"></i>\n        <ng-container>\n            <div [ngClass]="{ \'text-contents alert-title-and-text\': title !== null || title !== undefined }" class="">\n                <h4 *ngIf="title">{{ title }}</h4>\n\n                <div class="alert-text">\n                    {{ text | translate }}\n                </div>\n            </div>\n        </ng-container>\n        <ng-container *ngIf="dismissible && layout === \'actionsStacked\'">\n            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" [id]="\'alert-btn-close-\' + id"></button>\n        </ng-container>\n        <ng-container *ngIf="layout === \'actionsInline\'">\n            <div class="inline">\n                <div class="alert-actions actions-inline">\n                    <div class="primary-action" *ngFor="let button of actionButtons">\n                        <ui-button\n                            [id]="button.id"\n                            [disabled]="button.disabled"\n                            [size]="linkSize"\n                            [type]="buttonType"\n                            [text]="button.buttonText"\n                            [clicked]="button.clicked"\n                        ></ui-button>\n                    </div>\n                </div>\n                <ng-container *ngIf="dismissible && layout === \'actionsInline\'">\n                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"\n                            (click)="(clicked !== undefined) ? clicked(this) : null "></button>\n                </ng-container>\n            </div>\n        </ng-container>\n    </div>\n    <ng-container *ngIf="layout === \'actionsStacked\'">\n        <div class="alert-actions">\n            <div class="primary-action" *ngFor="let button of actionButtons">\n                <ui-button\n                    [id]="button.id"\n                    [size]="linkSize"\n                    [type]="buttonType"\n                    [text]="button.buttonText"\n                    [clicked]="button.clicked"\n                ></ui-button>\n            </div>\n        </div>\n    </ng-container>\n</div>\n',styles:[".alert {\n  display: flex;\n  padding: 24px;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n.alert.has-action-button {\n  gap: 16px;\n}\n.alert.actions-stacked {\n  min-width: 250px;\n}\n.alert.actions-stacked .btn-close {\n  padding: 1.75rem 1rem !important;\n}\n.alert.actions-stacked .alert-actions {\n  padding-right: 0px;\n}\n.alert.actions-inline {\n  min-width: 600px;\n}\n.alert.actions-inline .btn-close {\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n.alert .alert-text {\n  align-self: stretch;\n  width: 100%;\n}\n.alert .text-contents {\n  display: flex;\n  width: 100%;\n}\n.alert .alert-title-and-text {\n  display: flex;\n  padding-right: 16px;\n  flex-direction: column;\n  align-items: flex-start;\n  word-wrap: break-word;\n}\n.alert .alert-actions {\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n  gap: 16px;\n  padding-right: 50px;\n}\n.alert .alert-actions .primary-action {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n}\n.alert .alert-dismissible .btn-close {\n  padding: 1.75rem 1rem !important;\n}\n.alert .btn-close {\n  outline: 0;\n  box-shadow: none;\n  font-size: 16px;\n}\n.alert .alert-container {\n  display: flex;\n  padding-right: 16px;\n  gap: 8px;\n  align-self: stretch;\n}\n.alert .alert-close {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 8px;\n}\n.alert.small-alert i {\n  font-size: 16px;\n}\n.alert.medium-alert i {\n  font-size: 20px;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiAlertComponent);var ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");const alert_component_stories={title:"Components/Alert",component:UiAlertComponent,decorators:[(0,client.moduleMetadata)({imports:[ngx_translate_core.h.forChild()],providers:[ngx_translate_core.Mw]})]},Primary=(args=>({props:args})).bind({});Primary.args={text:"Alert text",id:"",type:alert_type_enum.q.warning,showIcon:!0,size:UiAlertSizeEnum.MEDIUM,dismissible:!0,title:"",actionButtons:new Array,layout:alert_layout_enum.C.INLINE}}}]);