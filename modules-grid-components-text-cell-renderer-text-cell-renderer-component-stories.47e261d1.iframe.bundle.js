"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[5036],{"./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>UiTextCellRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js");let UiTextCellRendererComponent=class UiTextCellRendererComponent{constructor(){this.disableTooltip=!0,this._subscriptions=new Subscription.yU}refresh(params){return!0}ngAfterViewInit(){setTimeout((()=>{this.checkColumnWidth(this.params)})),this._subscriptions.add(this.params.column.eventService.addEventListener("widthChanged",(data=>{this.checkColumnWidth(data)})))}ngOnDestroy(){this._subscriptions.unsubscribe()}checkColumnWidth(data){void 0!==data&&(data.column.actualWidth>=this.myNameElem.nativeElement.scrollWidth+48?this.disableTooltip=!0:this.disableTooltip=!1)}agInit(params){this.params=params,this.value=params.value,this.itemId=params.itemId}};UiTextCellRendererComponent.ctorParameters=()=>[],UiTextCellRendererComponent.propDecorators={myNameElem:[{type:core.ViewChild,args:["myNameElem"]}],rulerElem:[{type:core.ViewChild,args:["ruler"]}]},UiTextCellRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-text-cell-renderer",template:'<div #myNameElem\n    class="ellipsis"\n    container="body"\n    ngbTooltip="{{ value }}"\n    [disableTooltip] = "disableTooltip"\n    [placement]="\'top\'"\n    [tooltipClass]="\'tooltip-lg\'"\n    (click)="params.clicked(itemId)"\n    >\n    <span *ngIf="params.isLink !== true">\n        {{ value }}\n    </span>\n    <a *ngIf="params.isLink === true" class="strong" href="javascript: void(0);">{{ value }}</a>\n</div>\n',styles:["::ng-deep .tooltip-inner {\n  max-width: 500px;\n}\n\na:link {\n  text-decoration: none;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiTextCellRendererComponent)},"./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Grids/TextCellRenderer",component:__webpack_require__("./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts").y,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[]})]},Primary=(args=>({props:args})).bind({});Primary.args={}}}]);