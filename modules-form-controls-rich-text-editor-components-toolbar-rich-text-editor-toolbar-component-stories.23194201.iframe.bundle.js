"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[7969],{"./apps/acp-ui/src/app/shared/constants/common.const.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y3:()=>REGEX_CONST});const REGEX_CONST=Object.freeze({DOMAIN:/^(?:[a-zA-Z0-9-]*[a-zA-Z0-9]\.){1,}[a-zA-Z]{2,6}$/i,GUID:/^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i,PASSWORD:/^[^\d]*\d[^\d]*[A-Z][^A-Z]*[a-z][^a-z]*[^\w\d\s:][^\w\d\s:]*([^\s]){5,99}$/,DUNS_NUMBER:/^[0-9]{9,9}$/,ALPHANUMERIC_CHARACTER:/^[a-zA-Z0-9\s\-]+$/,IM_CUSTOM_CHARACTERS:/^[a-zA-Z0-9$.’+§\s-]+$/,URL:/^((https?):\/\/)?([a-z0-9-]+\.)+[a-z]{2,6}(:[0-9]{1,5})?(\/.*)?$/,LOOSE_MATCH_URL:/^[A-Za-z][A-Za-z\d.+-]*:\/*.+$/,ALPHANUMERIC_NO_SPACE_CHARACTER:/^[a-zA-Z0-9]?[-a-zA-Z0-9]{0,498}[a-zA-Z0-9]?$/,REMOVE_HTML_TAGS:/(<([^>]+)>)/gi,EMAIL:/^[a-zA-Z0-9]+([-_+.][a-zA-Z0-9]+)*@[a-zA-Z0-9]+([-_+.][a-zA-Z0-9]+)*\.[a-zA-Z0-9]+$/});Object.freeze(5e3),Object.freeze({PAGE_SIZE:10,MAX_PAGE_SIZE:1e3}),Object.freeze({YEAR_MONTH_DAY:"yyyy/MM/dd",YEAR_MONTH_DAY_HOUR_MIN:"yyyy-MM-dd HH:mm"}),Object.freeze({INACTIVE_CONTACTS:"Inactive Contacts",UNRELATED_DOMAINS:"Unrelated Domains"}),Object.freeze({INACTIVE_CONTACTS:1,UNRELATED_DOMAINS:2})},"./libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{h:()=>UiFormBaseComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js");let UiFormBaseComponent=class UiFormBaseComponent{constructor(){this.formStatusChange=new core.EventEmitter,this.formClosed=new core.EventEmitter,this.formSubmitted=new core.EventEmitter,this.payload={},this.modeChanged=!1,this.showSuccessValidation=!1,this.showErrorValidation=!0,this.showHelpText=!0,this.showInfoIcon=!0,this.Validators=fesm2020_forms.Validators,this._ngUnsubscribe=new Subject.B,this._editMode=!1}set editMode(value){this._editMode=value,!0===this._editMode?this.enableAllInputs():this.disableAllInputs()}get editMode(){return this._editMode}ngOnInit(){}ngOnDestroy(){this._ngUnsubscribe.next(null),this._ngUnsubscribe.complete()}createForm(formControls){this.form=new fesm2020_forms.FormGroup({});for(const[key,value]of Object.entries(formControls)){const newControl=new fesm2020_forms.FormControl(value.value,{validators:value.validators});this.form.setControl(key,newControl)}this.editMode=!1}setValues(FormValues){Object.keys(this.form.controls).forEach((key=>{this.form.controls[key].setValue(FormValues[key])}))}viewForm(){this.editMode=!1}editForm(){this._initialValues=JSON.parse(JSON.stringify(this.form.value)),this.editMode=!0}clearForm(){this._initialValues=JSON.parse(JSON.stringify(this.form.value)),this.form.reset(),this.payload={}}cancelForm(){this.form.reset(this._initialValues),this.payload={},this.editMode=!1}closeForm(){this.editMode=!1,this.formClosed.emit()}submitForm(){return Object.keys(this.form.controls).forEach((key=>{this.payload[key]=this.form.controls[key].value})),this.editMode=!1,this.formSubmitted.emit(this.form.value),this.form.value}onClearBtnClick(){this.clearForm()}onEditBtnClick(){this.editForm()}onCancelBtnClick(){this.cancelForm()}onCloseBtnClick(){this.closeForm()}onSaveBtnClick(){this.submitForm()}onFormOptionsChanged(e){this.showInfoIcon=e.showInfoIcon,this.showHelpText=e.showHelpText}disableAllInputs(){if(void 0!==this.form)for(const control in this.form.controls)this.form.controls.hasOwnProperty(control)&&this.form.controls[control].disable()}enableAllInputs(){if(void 0!==this.form)for(const control in this.form.controls)this.form.controls.hasOwnProperty(control)&&(void 0!==this.formControls[control].config&&void 0!==this.formControls[control].config.forceDisabled?!1===this.formControls[control].config.forceDisabled&&(this.form.controls[control].enable(),this.form.controls[control].markAsUntouched()):(this.form.controls[control].enable(),this.form.controls[control].markAsUntouched()))}};UiFormBaseComponent.ctorParameters=()=>[],UiFormBaseComponent.propDecorators={actionBtnsRef:[{type:core.ViewChild,args:["actionBtnsRef"]}],formStatusChange:[{type:core.Output}],formClosed:[{type:core.Output}],formSubmitted:[{type:core.Output}],editMode:[{type:core.Input,args:["editMode"]}]},UiFormBaseComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-form-base",template:"<p>Implement your form template in your extended component.</p>\n",styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiFormBaseComponent)},"./libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>UiRichTextEditorToolbarComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),form_base_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");class UiButtonObject{constructor(){this.selected=!1,this.onClick=e=>{},this.handleChange=e=>{}}}var common_const=__webpack_require__("./apps/acp-ui/src/app/shared/constants/common.const.ts");let UiRichTextEditorToolbarComponent=class UiRichTextEditorToolbarComponent extends form_base_component.h{constructor(_translateService){super(),this._translateService=_translateService,this.urlPattern=common_const.Y3.URL,this.buttons={bold:new UiButtonObject,italic:new UiButtonObject,underline:new UiButtonObject,sub:new UiButtonObject,super:new UiButtonObject,ordered:new UiButtonObject,bullet:new UiButtonObject,link:new UiButtonObject,clearFormatting:new UiButtonObject},this.sizeList=[{label:this._translateService.instant("COMMON.TEXT_EDITOR.SMALL"),value:"small",selected:!1},{label:this._translateService.instant("COMMON.TEXT_EDITOR.NORMAL"),value:!1,selected:!0},{label:this._translateService.instant("COMMON.TEXT_EDITOR.HEADER"),value:"4",selected:!1},{label:this._translateService.instant("COMMON.TEXT_EDITOR.SUBHEADER"),value:"5",selected:!1}],this.selectedSize=this.sizeList[1].label}onChange(e){if(this.editor.quillEditor.getSelection())switch(e){case"small":!1===this.sizeList[0].selected?(this.sizeList[0].selected=!0,this.editor.quillEditor.format("size",e)):(this.editor.quillEditor.format("size",!1),this.sizeList[0].selected=!1);break;case!1:this.editor.quillEditor.format("header",!1),!0===this.sizeList[1].selected?(this.sizeList[1].selected=!0,this.editor.quillEditor.format("size",e)):this.editor.quillEditor.format("size",!1);break;case"4":!1===this.sizeList[2].selected?(this.sizeList[2].selected=!0,this.editor.quillEditor.format("header",e)):(this.editor.quillEditor.format("header",!1),this.sizeList[2].selected=!1);break;case"5":!1===this.sizeList[3].selected?(this.sizeList[3].selected=!0,this.editor.quillEditor.format("header",e)):(this.editor.quillEditor.format("header",!1),this.sizeList[3].selected=!1)}}changeDropdownItem(selectedLabel){this.selectedSize=selectedLabel;const index=this.sizeList.findIndex((x=>x.label===selectedLabel)),item=this.sizeList[index].value;this.onChange(item)}ngOnInit(){this.formControls={link:{value:"",validators:[]}},this.createForm(this.formControls),this.editMode=!0,this.onSaveBtnClick=this.submitLink,this.buttons.bold.onClick=e=>{!1===this.buttons.bold.selected?(this.buttons.bold.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.bold.selected=!1)},this.buttons.italic.onClick=e=>{!1===this.buttons.italic.selected?(this.buttons.italic.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.italic.selected=!1)},this.buttons.underline.onClick=e=>{!1===this.buttons.underline.selected?(this.buttons.underline.selected=!0,this.editor.quillEditor.format(e,!0)):(this.editor.quillEditor.format(e,!1),this.buttons.underline.selected=!1)},this.buttons.sub.onClick=e=>{!1===this.buttons.sub.selected?(this.buttons.sub.selected=!0,this.editor.quillEditor.format("script",e)):(this.editor.quillEditor.format("script",!1),this.buttons.sub.selected=!1)},this.buttons.super.onClick=e=>{!1===this.buttons.super.selected?(this.buttons.super.selected=!0,this.editor.quillEditor.format("script",e)):(this.editor.quillEditor.format("script",!1),this.buttons.super.selected=!1)},this.buttons.ordered.onClick=e=>{!1===this.buttons.ordered.selected?(this.buttons.ordered.selected=!0,this.editor.quillEditor.format("list",e)):(this.editor.quillEditor.format("list",!1),this.buttons.ordered.selected=!1)},this.buttons.bullet.onClick=e=>{!1===this.buttons.bullet.selected?(this.buttons.bullet.selected=!0,this.editor.quillEditor.format("list",e)):(this.editor.quillEditor.format("list",!1),this.buttons.bullet.selected=!1)}}populateLinkInput(){const selection=this.editor.quillEditor.getSelection(!0);this.linkText=this.editor.quillEditor.getText(selection.index,selection.length),this.urlPattern.test(this.linkText)?this.form.controls.link.setValue(this.linkText):this.form.controls.link.setValue("")}editLink(){const range=this.editor.quillEditor.getSelection(),selection=this.editor.quillEditor.getSelection(!0);this.linkText=this.editor.quillEditor.getText(selection.index,selection.length);const format=this.editor.quillEditor.getFormat(range.index,range.length);range&&format.link&&this.form.controls.link.setValue(format.link)}submitLink(){if(this.form.get("link").value){const link=this.submitForm(),selection=this.editor.quillEditor.getSelection(!0),text=this.editor.quillEditor.getText(selection.index,selection.length);this.editor.quillEditor.deleteText(selection.index,selection.length),this.linkURL=link.link,this.editor.quillEditor.insertText(selection.index,text,"link",this.linkURL)}this.form.controls.link.enable(),this.popover.close(),this.onClearBtnClick()}ngAfterViewInit(){setTimeout((()=>{this.editor.quillEditor.on("selection-change",(e=>this.onSelectionChanged(e)))}),500)}onSelectionChanged($event){const bounds=this.editor.quillEditor.getSelection($event);bounds&&(this.format=this.editor.quillEditor.getFormat($event.range),this.buttons.bold.selected=!!this.format.bold,this.buttons.italic.selected=!!this.format.italic,this.buttons.underline.selected=!!this.format.underline,this.buttons.sub.selected="sub"===this.format.script,this.buttons.super.selected="super"===this.format.script,this.buttons.ordered.selected="ordered"===this.format.list,this.buttons.bullet.selected="bullet"===this.format.list,this.buttons.link.selected=!!this.format.link,this.format.link&&(this.popover.open(),this.editLink()),this.buttons.clearFormatting.onClick=()=>{this.editor.quillEditor.removeFormat(bounds.index,bounds.length)}),"small"===this.format.size?(this.sizeList[0].selected=!0,this.selectedSize=this.sizeList[0].label):this.sizeList[0].selected=!1,!1===this.format.size?(this.sizeList[1].selected=!0,this.selectedSize=this.sizeList[1].label):this.sizeList[1].selected=!1,4===this.format.header?(this.sizeList[2].selected=!0,this.selectedSize=this.sizeList[2].label):this.sizeList[2].selected=!1,5===this.format.header?(this.sizeList[3].selected=!0,this.selectedSize=this.sizeList[3].label):this.sizeList[3].selected=!1}};UiRichTextEditorToolbarComponent.ctorParameters=()=>[{type:ngx_translate_core.c$}],UiRichTextEditorToolbarComponent.propDecorators={dropdownComp:[{type:core.ViewChild,args:["dropdown"]}],popover:[{type:core.ViewChild,args:["popover",{static:!1}]}],editor:[{type:core.Input}]},UiRichTextEditorToolbarComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-rich-text-editor-toolbar-old",template:'<div class="toolbar">\n    <div>\n        <div ngbDropdown class="d-inline-block size-dropdown" placement="bottom-start" #dropdown="ngbDropdown">\n            <button type="button" class="acp-form-control small btn-select size-dropdown" id="dropdownBasic1" ngbDropdownToggle>\n                <span> {{ selectedSize }} <i class="bi bi-chevron-expand"></i></span>\n            </button>\n            <div ngbDropdownMenu aria-labelledby="dropdownBasic1">\n                <button\n                    ngbDropdownItem\n                    *ngFor="let size of sizeList"\n                    value="{{ size.value }}"\n                    (click)="this.changeDropdownItem(size.label)"\n                >\n                    {{ size.label }}\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="text-editor-toolbar-buttons">\n    <div class="button-group-1">\n        <button\n            value="bold"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.BOLD\' | translate"\n            class="btn btn-link btn-md toolbarButton"\n            [ngClass]="{ selected: buttons.bold.selected }"\n            (click)="buttons.bold.onClick(\'bold\')"\n        >\n            <i class="bi bi-type-bold"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.ITALIC\' | translate"\n            [ngClass]="{ selected: buttons.italic.selected }"\n            (click)="buttons.italic.onClick(\'italic\')"\n        >\n            <i class="bi bi-type-italic"></i>\n        </button>\n\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.UNDERLINE\' | translate"\n            [ngClass]="{ selected: buttons.underline.selected }"\n            (click)="buttons.underline.onClick(\'underline\')"\n        >\n            <i class="bi bi-type-underline"></i>\n        </button>\n\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.SUBSCRIPT\' | translate"\n            value="sub"\n            [ngClass]="{ selected: buttons.sub.selected }"\n            (click)="buttons.sub.onClick(\'sub\')"\n        >\n            <i class="bi bi-subscript"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.SUPERSCRIPT\' | translate"\n            value="super"\n            [ngClass]="{ selected: buttons.super.selected }"\n            (click)="buttons.super.onClick(\'super\')"\n        >\n            <i class="bi bi-superscript"></i>\n        </button>\n    </div>\n\n    <div class="button-group-2">\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.ORDERED_LIST\' | translate"\n            value="ordered"\n            [ngClass]="{ selected: buttons.ordered.selected }"\n            (click)="buttons.ordered.onClick(\'ordered\')"\n        >\n            <i class="bi bi-list-ol"></i>\n        </button>\n        <button\n            class="btn btn-link btn-md toolbarButton"\n            [ngbTooltip]="\'COMMON.TEXT_EDITOR.BULLET_LIST\' | translate"\n            value="bullet"\n            [ngClass]="{ selected: buttons.bullet.selected }"\n            (click)="buttons.bullet.onClick(\'bullet\')"\n        >\n            <i class="bi bi-list-ul"></i>\n        </button>\n    \n    <div [ngbTooltip]="\'COMMON.TEXT_EDITOR.LINK\' | translate" placement="top">\n        <button\n            id="popover"\n            class="btn btn-link btn-md toolbarButton"\n            placement="bottom"\n            value="link"\n            [ngClass]="{ selected: buttons.link.selected }"\n            data-toggle="popover"\n            [ngbPopover]="popContent"\n            #popover="ngbPopover"\n            [autoClose]="\'outside\'"\n            popoverClass="popover-class"\n            (click)="populateLinkInput()"\n        >\n            <i class="bi bi-link-45deg"></i>\n        </button>\n    </div>\n    <button\n        class="btn btn-link btn-md toolbarButton"\n        [ngbTooltip]="\'COMMON.TEXT_EDITOR.CLEAR_FORMATTING\' | translate"\n        value="false"\n        [ngClass]="{ selected: buttons.clearFormatting.selected }"\n        (click)="buttons.clearFormatting.onClick(\'false\')"\n    >\n        <i class="bi bi-eraser-fill"></i>\n    </button>\n</div>\n</div>\n\n    <div class="body link-pop">\n        <ng-template #popContent class="popstyle">\n            <form [formGroup]="form">\n                <div class="row popover-row">\n                    <p class="col-auto link-text">{{ \'COMMON.ENTER_LINK\' | translate }}</p>\n                    <div class="col-auto pop-url">\n                        <input class="url form-control" id="link" formControlName="link" form="form" value="{{ linkText }}" />\n                    </div>\n                    <div class="col-auto pop-button">\n                        <button type="button" class="btn btn-link btn-sm col-2" (click)="submitLink()">\n                            {{ \'COMMON.SAVE\' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </ng-template>\n    </div>\n</div>\n',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[ngx_translate_core.c$])],UiRichTextEditorToolbarComponent)},"./libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),_rich_text_editor_toolbar_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts"),_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Forms/RichTextEditorToolbar",component:_rich_text_editor_toolbar_component__WEBPACK_IMPORTED_MODULE_1__.B,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__.h.forChild()],providers:[_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__.Mw]})]},Primary=(args=>({props:args})).bind({});Primary.args={}}}]);