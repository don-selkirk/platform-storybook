"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[1822],{"./libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>UiActionButtonsRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let UiActionButtonsRendererComponent=class UiActionButtonsRendererComponent{constructor(){this.btnArray=[],this.inlineIcons=!1,this.showIconsInMenu=!1,this.showLabel=!1}refresh(params){return this.params=params,this.btnArray=params.btnArr,this.inlineIcons=params.inlineIcons,this.itemId=params.itemId,this.rowId=params.rowId,this.showIconsInMenu=params.showIconsInMenu,this.showLabel=params.showLabel,!0}ngOnInit(){}agInit(params){this.params=params,this.btnArray=params.btnArr,this.inlineIcons=params.inlineIcons,this.itemId=params.itemId,this.rowId=params.rowId,this.showIconsInMenu=params.showIconsInMenu,this.showLabel=params.showLabel}onItemClick(item){item.clicked(this.itemId)}};UiActionButtonsRendererComponent.ctorParameters=()=>[],UiActionButtonsRendererComponent.propDecorators={dropdownComp:[{type:core.ViewChild,args:["dropdown"]}]},UiActionButtonsRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-action-buttons-renderer",template:'\x3c!-- <div [id]="\'actionBtn-\' + rowId" class="d-flex justify-content-center column-gap-5 visually-hidden"> --\x3e\n<div [id]="\'actionBtn-\' + rowId" class="d-flex justify-content-center column-gap-5">\n    <div *ngIf="inlineIcons !== true">\n        \x3c!-- If only 1 item --\x3e\n        <div *ngIf="btnArray !== undefined && btnArray.length === 1" class="d-inline-block">\n            <button\n                *ngIf="btnArray[0].icon !== undefined && !showLabel"\n                type="button"\n                class="btn btn-outline-primary btn-sm d-inline-block"\n                container="body"\n                ngbTooltip="{{btnArray[0].text | translate}}"\n                [placement]="\'top\'"\n                [tooltipClass]="tooltip-sm"\n                [disabled]="btnArray[0].disabled === true"\n                (click)="btnArray[0].clicked(params)">\n                <i class="bi" [ngClass]="btnArray[0].icon"></i>\n            </button>\n            <button\n                *ngIf="btnArray[0].icon === undefined || showLabel"\n                type="button"\n                class="btn btn-outline-primary btn-sm d-inline-block"\n                [disabled]="btnArray[0].disabled === true"\n                (click)="btnArray[0].clicked(params)">\n                <span>{{btnArray[0].text | translate}}</span>\n            </button>\n        </div>\n\n        \x3c!-- If more then 1 item --\x3e\n        <div *ngIf="btnArray !== undefined && btnArray.length > 1" ngbDropdown class="d-inline-block" container="body" #dropdown="ngbDropdown">\n            <button\n                type="button"\n                class="btn btn-outline-primary btn-sm d-inline-block"\n                ngbDropdownToggle\n                container="body"\n                ngbTooltip="{{\'COMMON.ACTIONS\' | translate}}"\n                [placement]="\'top\'"\n                [tooltipClass]="\'tooltip-sm\'"\n                >\n                <i class="bi bi-three-dots-vertical"></i>\n            </button>\n            <div [id]="\'actionMenu\'" ngbDropdownMenu aria-labelledby="dropdownBasic1" >\n                <ng-container *ngFor="let item of btnArray">\n                    <button *ngIf="item.divider !== true && item.visible !== false" ngbDropdownItem [disabled]="item.disabled === true" (click)="item.clicked(params)">\n                        <i *ngIf="showIconsInMenu === true" class="bi me-2" [ngClass]="item.icon"></i>\n                        {{item.text | translate}}\n                    </button>\n                    <div *ngIf="item.divider === true && item.visible === true" class="dropdown-divider"></div>\n                </ng-container>\n            </div>\n        </div>\n\n    </div>\n\n    <div *ngIf="inlineIcons === true">\n        <ng-container *ngFor="let item of btnArray">\n            <button\n                *ngIf="item.divider !== true"\n                type="button"\n                class="btn-white btn-md d-inline-block"\n                container="body"\n                ngbTooltip="{{item.text | translate}}"\n                [placement]="\'top\'"\n                [tooltipClass]="tooltip-sm"\n                [disabled]="item.disabled"\n                (click)="item.clicked(params)">\n                <i class="bi" [ngClass]="item.icon"></i>\n            </button>\n        </ng-container>\n    </div>\n</div>',styles:[".column-gap-5 {\n  column-gap: 5px !important;\n}\n\n.btn-white {\n  color: #00857C;\n  background-color: #fff;\n  border: none;\n  padding: 0;\n  padding-left: 1px;\n  padding-top: 1px;\n  line-height: 1;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  font-size: 1rem;\n}\n\n.btn-white:disabled {\n  color: #d2d6da;\n}\n\n.dropdown-toggle::after {\n  display: none;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiActionButtonsRendererComponent)},"./libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Grids/ActionButtonsRenderer",component:__webpack_require__("./libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts").E,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[]})]},Primary=(args=>({props:args})).bind({});Primary.args={}}}]);