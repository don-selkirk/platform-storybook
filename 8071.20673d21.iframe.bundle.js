"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[8071],{"./libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>UiComboboxRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),ngx_translate_core=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js"),dropdown_plus_component=__webpack_require__("./libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts");let UiComboboxRendererComponent=class UiComboboxRendererComponent{constructor(_translateService){this._translateService=_translateService,this.menuOpen=!1,this.cellLabel="",this.selectedOptions=[],this._options=[]}agInit(params){var _a,_b;this._columnHeader=params.colDef.headerName,this._columnField=params.colDef.field,this._options=params.options,this.rowNode=params.node,this.placeholderValue=null!==(_b=null!==(_a=params.placeholderValue)&&void 0!==_a?_a:params.colDef.cellRendererParams.placeholderValue)&&void 0!==_b?_b:null,this.defaultValue=void 0!==params.defaultValue?params.defaultValue:void 0!==params.colDef.cellRendererParams.defaultValue?params.colDef.cellRendererParams.defaultValue:null;const initParamValue=params.getValue();initParamValue&&""!==initParamValue?(this.cellValue=initParamValue,this.cellValue=this._options.filter((option=>{if(initParamValue.includes(option.id))return option.value=!0,option}))):this.cellValue=null===this.defaultValue?[]:this.defaultValue,setTimeout((()=>{var _a,_b,_c,_d,_e,_f,_g,_h;this.dropdownRef=this.comboboxDropdownPlusRef.createComponent(dropdown_plus_component.Z).instance,this.dropdownRef.externalTriggerEleId=this.rowNode.id+"_trigger",this.dropdownRef.view=null,this.dropdownRef.showSearch=null===(_b=null!==(_a=params.showSearch)&&void 0!==_a?_a:params.colDef.cellRendererParams.showSearch)||void 0===_b||_b,this.dropdownRef.showSelectClearBtns=null===(_d=null!==(_c=params.showSelectClearBtns)&&void 0!==_c?_c:params.colDef.cellRendererParams.showSelectClearBtns)||void 0===_d||_d,this.dropdownRef.maxItemsShown=null!==(_f=null!==(_e=params.maxItemsToShow)&&void 0!==_e?_e:params.colDef.cellRendererParams.maxItemsToShow)&&void 0!==_f?_f:3,this.dropdownRef.multiSelect=null===(_h=null!==(_g=params.multiSelect)&&void 0!==_g?_g:params.colDef.cellRendererParams.multiSelect)||void 0===_h||_h,this.dropdownRef.small=!0,this.dropdownRef.options=this._options,this.dropdownRef.id=this.rowNode.id,this.dropdownRef.selectionChange.subscribe((event=>{this._onSelectionChange(event)})),this.dropdownRef.openChange.subscribe((event=>{this.menuOpen=!this.menuOpen})),setTimeout((()=>{this.dropdownRef.nbgDropdown.display="dynamic",this.dropdownRef.nbgDropdown.placement="bottom-start",this.dropdownRef.nbgDropdown.container="body",this.dropdownRef.nbgDropdown.dropdownClass=this.rowNode.id+"_drop-wrapper",this.dropdownRef.ngbDropPanel&&this.dropdownRef.ngbDropPanel.nativeElement&&(this.dropdownRef.ngbDropPanel.nativeElement.className+=" combobox-renderer-dropdown small",this.dropdownRef.multiSelect&&(this.dropdownRef.ngbDropPanel.nativeElement.className+=" multi-select")),this.selectedOptions=this.cellValue,this.dropdownRef.selectedOptions=this.dropdownRef.selectedList=this.selectedOptions,this.cellLabel=this._getLabelFromValues(this.cellValue)}))}))}ngOnDestroy(){this.dropdownRef&&this.dropdownRef.selectionChange.unsubscribe()}ngAfterViewInit(){}onTriggerClick(event){this.dropdownRef.nbgDropdown.open();const triggerEle=document.getElementById(this.dropdownRef.externalTriggerEleId);if(void 0!==this.dropdownRef.externalTriggerEleId&&null!==this.dropdownRef.externalTriggerEleId&&null!=triggerEle){const dropPanelWrapper=document.getElementById(this.dropdownRef.id+"_drop-panel").parentElement,position=triggerEle.getBoundingClientRect();dropPanelWrapper.style.top=position.top+triggerEle.offsetTop+triggerEle.offsetHeight+this.dropdownRef.paddingTop+"px",dropPanelWrapper.style.left=position.left+triggerEle.offsetLeft+"px"}this.dropdownRef.triggerClicked.emit({id:this.dropdownRef.id,open:this.menuOpen,selectedOptions:this.selectedOptions})}refresh(params){return!0}_getCellValue(){let cellDisplayValue="";for(const option of this.cellValue)cellDisplayValue+=option.id+",";return cellDisplayValue.trim().replace(/,$/,"")}_onSelectionChange(event){setTimeout((()=>{this.cellLabel=this._getLabelFromValues(event.selectedOptions),this.selectedOptions=this.cellValue=event.selectedOptions,this.dropdownRef.selectedList=this.dropdownRef.selectedOptions=this.selectedOptions;const newValue=this._getCellValue();this.rowNode.setDataValue(this._columnField,newValue)}))}_getLabelFromValues(selectedOptions){return 0!==selectedOptions.length&&selectedOptions?selectedOptions.length===this.dropdownRef.options.length?this._translateService.instant("COMMON.ALL"):1===selectedOptions.length?selectedOptions[0].label:selectedOptions.length>=1?this._columnHeader:this._translateService.instant("COMMON.NO_DATA_TO_DISPLAY"):this.defaultValue&&""!==this.defaultValue.label?this.defaultValue.label:this.placeholderValue&&""!==this.placeholderValue?this.placeholderValue:this._translateService.instant("COMMON.NONE")}};UiComboboxRendererComponent.ctorParameters=()=>[{type:ngx_translate_core.c$}],UiComboboxRendererComponent.propDecorators={comboboxDropdownPlusRef:[{type:core.ViewChild,args:["comboboxDropdownPlusRef",{read:core.ViewContainerRef}]}],dropdownRef:[{type:core.ViewChild,args:["dropdownRef"]}]},UiComboboxRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-combobox-renderer",template:'<div class="combobox-wrapper">\n    <ng-container #comboboxDropdownPlusRef></ng-container>\n    <div\n        class="d-flex justify-content-between align-items-center combobox-cell-trigger"\n        [id]="rowNode.id + \'_trigger\'"\n        (click)="onTriggerClick($event)"\n        [ngClass]="{ open: menuOpen === true, \'option-selected\': selectedOptions.length !== 0 }"\n    >\n        <div class="label d-inline-block text-truncate">\n            {{ cellLabel | translate }}\n            <span *ngIf="selectedOptions.length > 1"> ({{ selectedOptions.length }})</span>\n        </div>\n        <div>\n            <i \n                class="bi ms-1 d-inline-block anim"\n                [ngClass]="menuOpen ? \'bi-caret-up-fill\' : \'bi-caret-down-fill\'"\n            >\n            </i>\n        </div>\n    </div>\n</div>\n',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[ngx_translate_core.c$])],UiComboboxRendererComponent)},"./libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>UiDropdownRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js");let UiDropdownRendererComponent=class UiDropdownRendererComponent{constructor(){this.selectedOption={},this.itemsArray=[{id:1,label:"Item 1",labelParams:"param1"},{id:2,label:"Item 2",labelParams:"param2"},{id:3,label:"Item 3",labelParams:"param3"}],this._subscriptions=new Subscription.yU,this.onChange=e=>{}}refresh(params){return!0}ngOnDestroy(){this._subscriptions.unsubscribe()}agInit(params){this.params=params,this.selectedItemId=params.selectedItemId,this.itemsArray=params.itemsArray,this.selectedOption=this.itemsArray.find((item=>item.id===params.selectedItemId)),this.onChange=params.onChange}selectOption(option){this.selectedOption=option,this.onChange(option)}};UiDropdownRendererComponent.ctorParameters=()=>[],UiDropdownRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-dropdown-renderer",template:'<div ngbDropdown class="d-inline-block" container="body" >\n    <div ngbDropdownToggle>\n        {{selectedOption[\'label\'] | translate: selectedOption[\'labelParams\']}}\n    </div>\n    <div ngbDropdownMenu aria-labelledby="dropdownBasic1">\n        <button *ngFor="let item of itemsArray" [ngClass]="{\'active\': selectedOption === item}" ngbDropdownItem (click)="selectOption(item)">{{item.label | translate: item.labelParams}}</button>\n    </div>\n</div>',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiDropdownRendererComponent)},"./libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>UiGridHeaderButtonsComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let UiGridHeaderButtonsComponent=class UiGridHeaderButtonsComponent{constructor(){this.buttons=[],this.collapseButtons=!1}setButtonClasses(button){let buttonClasses=" ";return buttonClasses+=this.collapseButtons?"dropdown-item ":"",buttonClasses+=!0!==this.collapseButtons&&button.color?button.color:"btn-outline-primary ",buttonClasses+="prefix"===button.iconPosition?" prefix ":" suffix ",buttonClasses}};UiGridHeaderButtonsComponent.propDecorators={buttons:[{type:core.Input}],collapseButtons:[{type:core.Input}],dropdownButtonLabel:[{type:core.Input}]},UiGridHeaderButtonsComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-grid-header-buttons",template:'\x3c!-- Button template for Grid Header Buttons --\x3e\n<ng-template #gridHeaderButtons>\n    <ng-container *ngFor="let button of buttons">\n        <button\n            [id]="button.id"\n            *ngIf="button.divider !== true && button.visible !== false"\n            type="button"\n            class="grid-header-button btn btn-sm d-inline-block"\n            [ngClass]="setButtonClasses(button)"\n            ngbTooltip="{{ button.tooltipText ?? button.text | translate }}"\n            container="body"\n            [placement]="\'top\'"\n            [disabled]="button.disabled === true"\n            (click)="button.clicked($event)"\n            >\n            <i *ngIf="button.icon !== undefined && button.iconVisible !== false && button.iconPosition ===  \'prefix\'" class="prefix bi" [ngClass]="button.icon"></i>\n            <span>{{ button.text | translate }}</span>\n            <i *ngIf="button.icon !== undefined && button.iconVisible !== false && button.iconPosition !==  \'prefix\'" class="suffix bi" [ngClass]="button.icon"></i>\n        </button>\n        <div *ngIf="collapseButtons === true && button.divider === true" class="dropdown-divider"></div>\n    </ng-container>\n</ng-template>\n\x3c!-- END button template --\x3e\n\n<div *ngIf="buttons !== undefined" class="grid-header-buttons-wrapper">\n    <ng-container *ngIf="collapseButtons ?? true; then menuButtons; else inlineButtons"></ng-container>\n\n    \x3c!-- Display each button inline in grid header --\x3e\n    <ng-template #inlineButtons>\n        <ng-container *ngTemplateOutlet="gridHeaderButtons"></ng-container>\n    </ng-template>\n\n    \x3c!-- Display buttons within a dropdown menu --\x3e\n    <ng-template #menuButtons>\n        <div ngbDropdown display="dynamic" container="body" dropdownClass="grid-header-dropdown">\n            <button\n            type="button"\n            class="btn btn-outline-primary btn-sm d-inline-block"\n            [ngClass]="{\'dropdown-label-empty\': !dropdownButtonLabel || dropdownButtonLabel === \'\' }"\n            container="body"\n            ngbDropdownToggle\n            >\n                <span>{{ dropdownButtonLabel | translate }}</span>\n                <i\n                    *ngIf="!dropdownButtonLabel || dropdownButtonLabel === \'\'"\n                    class="bi bi-three-dots-vertical"\n                ></i>\n            </button>\n            <div ngbDropdownMenu>\n                <ng-container *ngTemplateOutlet="gridHeaderButtons"></ng-container>\n            </div>\n        </div>\n    </ng-template>\n</div>\n',styles:[".grid-header-buttons-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.5rem;\n}\n.grid-header-buttons-wrapper button.grid-header-button i.bi.suffix {\n  margin-left: 0.375rem;\n}\n.grid-header-buttons-wrapper button.grid-header-button i.bi.prefix {\n  margin-right: 0.375rem;\n}\n.grid-header-buttons-wrapper button.dropdown-toggle span {\n  padding-right: 0.5rem;\n}\n.grid-header-buttons-wrapper button.dropdown-toggle.dropdown-label-empty::after {\n  content: none;\n  display: none;\n}\n.grid-header-dropdown .grid-header-button.dropdown-item {\n  position: relative;\n  border: none;\n}\n.grid-header-dropdown .grid-header-button.dropdown-item i.bi {\n  position: absolute;\n  left: 0.5rem;\n  top: 0.5rem;\n}\n.grid-header-dropdown .grid-header-button.dropdown-item span {\n  margin-left: 1rem;\n}"]})],UiGridHeaderButtonsComponent)},"./libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{X:()=>UiGridHeaderComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let UiGridHeaderComponent=class UiGridHeaderComponent{constructor(){this.gridHeaderNumber=0,this.isTooltipDisabled=!0,this.gridHeaderButtons=[],this.getHeaderButtons=(thisItemData,thisRowId)=>null}ngOnInit(){setTimeout((()=>{document.querySelector(".ag-root").classList.add("grid-header-shown")}))}ngAfterViewInit(){setTimeout((()=>{this.isEllipsisActive()}),100)}onResize(){this.headerEle=document.getElementById("header-title"),this.isEllipsisActive()}isEllipsisActive(){this.headerEle=document.getElementById("header-title"),this.headerEle&&this.headerEle.offsetWidth<this.headerEle.scrollWidth?this.isTooltipDisabled=!1:this.isTooltipDisabled=!0}};UiGridHeaderComponent.propDecorators={titleText:[{type:core.Input}],infoText:[{type:core.Input}],countText:[{type:core.Input}],countSelectedItems:[{type:core.Input}],countFilteredItems:[{type:core.Input}],countFilteredShown:[{type:core.Input}],hasAnyFilter:[{type:core.Input}],collapseHeaderButtons:[{type:core.Input}],collapseHeaderButtonLabel:[{type:core.Input}],gridHeaderButtons:[{type:core.Input}],getHeaderButtons:[{type:core.Input}],onResize:[{type:core.HostListener,args:["window:resize"]}]},UiGridHeaderComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-grid-header",template:'<div *ngIf="titleText !== undefined" id="grid-header" class="grid-header">\n    <div class="grid-header-content ag-header">\n        \x3c!-- LEFT SIDE --\x3e\n        <div class="grid-header-content-left">\n            <div\n                id="header-title"\n                class="header-title"\n                container="body"\n                ngbTooltip="{{ titleText | translate }}"\n                [disableTooltip]="isTooltipDisabled"\n                [placement]="\'top\'"\n            >\n                {{ titleText | translate }}\n            </div>\n            \x3c!-- Please keep code for now; changing this to only show selected count, not the filtered count\n            <ng-container *ngIf="hasAnyFilter === true">\n                <div *ngIf="(countFilteredShown !== undefined && countFilteredShown > 0) && countSelectedItems <= 0" class="header-count">\n                    ({{countFilteredShown}} {{ \'COMMON.AG_GRID.OF\' | translate }} {{ countText }})\n                </div>\n                <div *ngIf="countSelectedItems !== undefined && countSelectedItems > 0" class="header-count">\n                    ({{countSelectedItems}} of {{ countFilteredItems }} selected)\n                </div>\n            </ng-container>\n            <ng-container *ngIf="hasAnyFilter === false">\n            </ng-container>\n            --\x3e\n                <div *ngIf="countSelectedItems !== undefined && countSelectedItems > 0" class="header-count">\n                    ({{countSelectedItems}} of {{ countText }} selected)\n                    \x3c!-- {{ \'GRID.MULTISELECT_SELECTED\' | translate: { selected: countSelectedItems, total: countText } }} --\x3e\n                </div>\n                <div *ngIf="countSelectedItems === undefined || countSelectedItems === 0" class="header-count">({{ countText }})</div>\n            <div>\n                <i\n                    *ngIf="infoText !== undefined"\n                    class="bi bi-question-circle-fill bi-sm"\n                    placement="top"\n                    ngbTooltip="{{ infoText | translate }}"\n                    container="body"\n                ></i>\n            </div>\n        </div>\n\n        \x3c!-- RIGHT SIDE --\x3e\n        <div class="grid-header-content-right">\n            <ui-grid-header-buttons\n                class="grid-header-buttons"\n                [buttons]="gridHeaderButtons"\n                [collapseButtons]="collapseHeaderButtons"\n                [dropdownButtonLabel]="collapseHeaderButtonLabel"\n            ></ui-grid-header-buttons>\n        </div>\n    </div>\n</div>\n',styles:[".grid-header-content {\n  border: 1px solid #d2d6da;\n  border-bottom: none;\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  text-overflow: ellipsis;\n  background-color: #fff;\n  align-items: center;\n  padding: 0px 24px 0px 24px;\n  gap: 8px;\n  height: 56px;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n}\n.grid-header-content .grid-header-content-right,\n.grid-header-content .grid-header-content-left {\n  flex: 1 1 auto;\n  display: flex;\n}\n.grid-header-content .grid-header-content-left {\n  justify-content: flex-start;\n  gap: 0.5rem;\n}\n.grid-header-content .grid-header-content-right {\n  justify-content: flex-end;\n}\n.grid-header-content .header-count {\n  color: #7e8083;\n}\n.header-title {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: inline-block;\n}"]})],UiGridHeaderComponent)},"./libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{xm:()=>UiPillClassEnum,Wj:()=>UiPillRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var UiBadgeTypeEnum,UiPackageEnum,UiPackageClassEnum,UiStatusEnum,UiStatusClassEnum,UiIdentifierEnum,UiIdentifierClassEnum,UiPillEnum,UiPillClassEnum,core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");!function(UiBadgeTypeEnum){UiBadgeTypeEnum.status="status",UiBadgeTypeEnum.package="package",UiBadgeTypeEnum.notification="notification",UiBadgeTypeEnum.identifier="identifier",UiBadgeTypeEnum.pill="pill"}(UiBadgeTypeEnum||(UiBadgeTypeEnum={})),function(UiPackageEnum){UiPackageEnum.gold="gold",UiPackageEnum.silver="silver",UiPackageEnum.platinum="platinum"}(UiPackageEnum||(UiPackageEnum={})),function(UiPackageClassEnum){UiPackageClassEnum.gold="dot-gold",UiPackageClassEnum.silver="dot-silver",UiPackageClassEnum.platinum="dot-platinum"}(UiPackageClassEnum||(UiPackageClassEnum={})),function(UiStatusEnum){UiStatusEnum.neutral="neutral",UiStatusEnum.success="success",UiStatusEnum.info="info",UiStatusEnum.danger="danger",UiStatusEnum.caution="caution",UiStatusEnum.warning="warning",UiStatusEnum.tertiary="tertiary",UiStatusEnum.dimgrey="dimgrey"}(UiStatusEnum||(UiStatusEnum={})),function(UiStatusClassEnum){UiStatusClassEnum.neutral="dot-neutral",UiStatusClassEnum.success="dot-success",UiStatusClassEnum.caution="dot-caution",UiStatusClassEnum.warning="dot-warning",UiStatusClassEnum.danger="dot-danger",UiStatusClassEnum.info="dot-info",UiStatusClassEnum.tertiary="dot-tertiary",UiStatusClassEnum.dimgrey="dot-dimgrey"}(UiStatusClassEnum||(UiStatusClassEnum={})),function(UiIdentifierEnum){UiIdentifierEnum.neutral="neutral",UiIdentifierEnum.category1="category1",UiIdentifierEnum.category2="category2",UiIdentifierEnum.category3="category3",UiIdentifierEnum.category4="category4",UiIdentifierEnum.category5="category5",UiIdentifierEnum.category6="category6"}(UiIdentifierEnum||(UiIdentifierEnum={})),function(UiIdentifierClassEnum){UiIdentifierClassEnum.Neutral="identifier-neutral",UiIdentifierClassEnum.category1="identifier-category-1",UiIdentifierClassEnum.category2="identifier-category-2",UiIdentifierClassEnum.category3="identifier-category-3",UiIdentifierClassEnum.category4="identifier-category-4",UiIdentifierClassEnum.category5="identifier-category-5",UiIdentifierClassEnum.category6="identifier-category-6"}(UiIdentifierClassEnum||(UiIdentifierClassEnum={})),function(UiPillEnum){UiPillEnum.neutral="neutral",UiPillEnum.category1="category1",UiPillEnum.category2="category2",UiPillEnum.category3="category3",UiPillEnum.category4="category4",UiPillEnum.category5="category5",UiPillEnum.category6="category6",UiPillEnum.success="success",UiPillEnum.warning="warning",UiPillEnum.danger="danger",UiPillEnum.info="info",UiPillEnum.extreme="extreme"}(UiPillEnum||(UiPillEnum={})),function(UiPillClassEnum){UiPillClassEnum.neutral="badge-neutral",UiPillClassEnum.category1="badge-category-1",UiPillClassEnum.category2="badge-category-2",UiPillClassEnum.category3="badge-category-3",UiPillClassEnum.category4="badge-category-4",UiPillClassEnum.category5="badge-category-5",UiPillClassEnum.category6="badge-category-6",UiPillClassEnum.success="badge-success",UiPillClassEnum.warning="badge-warning",UiPillClassEnum.danger="badge-danger",UiPillClassEnum.info="badge-info",UiPillClassEnum.extreme="badge-extreme"}(UiPillClassEnum||(UiPillClassEnum={}));let UiPillRendererComponent=class UiPillRendererComponent{constructor(){this.pillClasses=[],this.pillText="",this.pillTextTranslationId="",this.color="",this.type="",this.cls=""}refresh(params){return this.update(params),!0}ngOnInit(){}agInit(params){this.update(params)}ngOnDestroy(){}clickedHandler(e){void 0!==this.params.clicked&&this.params.clicked(this.params.value)}update(params){this.params=params,this.pillClasses=params.pillClasses,this.pillText=params.pillText,this.pillTextTranslationId=params.pillTextTranslationId,this.type=params.type,this.color=params.color,this.cls="",this.type===UiBadgeTypeEnum.status&&(this.cls=UiStatusClassEnum[this.color]),this.type===UiBadgeTypeEnum.package&&(this.cls=UiPackageClassEnum[this.color]),this.type===UiBadgeTypeEnum.pill&&(this.cls=UiPillClassEnum[this.color]),this.type,UiBadgeTypeEnum.notification,this.type,UiBadgeTypeEnum.identifier}};UiPillRendererComponent.ctorParameters=()=>[],UiPillRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-pill-renderer",template:'\x3c!-- Status --\x3e\n<div class="" (click)="clickedHandler($event)" *ngIf="type=== \'status\'">\n    <span class="dot sm" [ngClass]="cls"></span>\n    <span class="dot-text sm">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Pill --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type=== \'pill\'">\n    <span class="badge rounded-pill noHover sm" [ngClass]="cls">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Package --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type=== \'package\'">\n    <span class="dot md" [ngClass]="cls"></span>\n    <span class="package-text">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Notification --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type === \'notification\'">\n    <span class="dot-notification sm">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>\n\n\x3c!-- Identifier --\x3e\n<div (click)="clickedHandler($event)" *ngIf="type === \'identifier\'">\n    <span class="identifier identifier-neutral sm">\n        <ng-container *ngIf="pillText !== \'\'">\n            {{pillText | translate}}\n        </ng-container>\n    </span>\n</div>',styles:[""]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiPillRendererComponent)},"./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>UiTextCellRendererComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js");let UiTextCellRendererComponent=class UiTextCellRendererComponent{constructor(){this.disableTooltip=!0,this._subscriptions=new Subscription.yU}refresh(params){return!0}ngAfterViewInit(){setTimeout((()=>{this.checkColumnWidth(this.params)})),this._subscriptions.add(this.params.column.eventService.addEventListener("widthChanged",(data=>{this.checkColumnWidth(data)})))}ngOnDestroy(){this._subscriptions.unsubscribe()}checkColumnWidth(data){void 0!==data&&(data.column.actualWidth>=this.myNameElem.nativeElement.scrollWidth+48?this.disableTooltip=!0:this.disableTooltip=!1)}agInit(params){this.params=params,this.value=params.value,this.itemId=params.itemId}};UiTextCellRendererComponent.ctorParameters=()=>[],UiTextCellRendererComponent.propDecorators={myNameElem:[{type:core.ViewChild,args:["myNameElem"]}],rulerElem:[{type:core.ViewChild,args:["ruler"]}]},UiTextCellRendererComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-text-cell-renderer",template:'<div #myNameElem\n    class="ellipsis"\n    container="body"\n    ngbTooltip="{{ value }}"\n    [disableTooltip] = "disableTooltip"\n    [placement]="\'top\'"\n    [tooltipClass]="\'tooltip-lg\'"\n    (click)="params.clicked(itemId)"\n    >\n    <span *ngIf="params.isLink !== true">\n        {{ value }}\n    </span>\n    <a *ngIf="params.isLink === true" class="strong" href="javascript: void(0);">{{ value }}</a>\n</div>\n',styles:["::ng-deep .tooltip-inner {\n  max-width: 500px;\n}\n\na:link {\n  text-decoration: none;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}"]}),(0,tslib_es6.Sn)("design:paramtypes",[])],UiTextCellRendererComponent)},"./libs/ui/src/lib/modules/grid/grid.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>UiGridModule});var tslib__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/tslib/tslib.es6.js"),_angular_core__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),_ngx_translate_core__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@ngx-translate/core/__ivy_ngcc__/fesm2015/ngx-translate-core.js"),_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@ng-bootstrap/ng-bootstrap/fesm2020/ng-bootstrap.mjs"),ag_grid_angular__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/ag-grid-angular/__ivy_ngcc__/fesm2015/ag-grid-angular.js"),_components_action_buttons_renderer_action_buttons_renderer_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts"),_components_combobox_renderer_combobox_renderer_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.ts"),_components_custom_header_custom_header_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/custom-header/custom-header.component.ts"),_components_custom_multiselect_header_custom_multiselect_header_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.ts"),_components_dropdown_renderer_dropdown_renderer_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.ts"),_components_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/grid/grid.component.ts"),_components_grid_header_buttons_grid_header_buttons_component__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts"),_components_grid_header_grid_header_component__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.ts"),_components_pill_renderer_pill_renderer_component__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"),_components_text_cell_renderer_text_cell_renderer_component__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts"),_components_custom_loading_cell_renderer_custom_loading_cell_renderer_component__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./libs/ui/src/lib/modules/grid/components/custom-loading-cell-renderer/custom-loading-cell-renderer.component.ts");let UiGridModule=class UiGridModule{};UiGridModule=(0,tslib__WEBPACK_IMPORTED_MODULE_11__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_12__.NgModule)({declarations:[_components_action_buttons_renderer_action_buttons_renderer_component__WEBPACK_IMPORTED_MODULE_0__.E,_components_combobox_renderer_combobox_renderer_component__WEBPACK_IMPORTED_MODULE_1__.M,_components_custom_header_custom_header_component__WEBPACK_IMPORTED_MODULE_2__.K,_components_custom_multiselect_header_custom_multiselect_header_component__WEBPACK_IMPORTED_MODULE_3__.T,_components_dropdown_renderer_dropdown_renderer_component__WEBPACK_IMPORTED_MODULE_4__._,_components_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__.E,_components_grid_header_buttons_grid_header_buttons_component__WEBPACK_IMPORTED_MODULE_6__.E,_components_grid_header_grid_header_component__WEBPACK_IMPORTED_MODULE_7__.X,_components_pill_renderer_pill_renderer_component__WEBPACK_IMPORTED_MODULE_8__.Wj,_components_text_cell_renderer_text_cell_renderer_component__WEBPACK_IMPORTED_MODULE_9__.y,_components_custom_loading_cell_renderer_custom_loading_cell_renderer_component__WEBPACK_IMPORTED_MODULE_10__.e],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_13__.MD,_ngx_translate_core__WEBPACK_IMPORTED_MODULE_14__.h,_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__.UN,ag_grid_angular__WEBPACK_IMPORTED_MODULE_16__.$V],exports:[_components_action_buttons_renderer_action_buttons_renderer_component__WEBPACK_IMPORTED_MODULE_0__.E,_components_custom_header_custom_header_component__WEBPACK_IMPORTED_MODULE_2__.K,_components_custom_multiselect_header_custom_multiselect_header_component__WEBPACK_IMPORTED_MODULE_3__.T,_components_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__.E,_components_grid_header_buttons_grid_header_buttons_component__WEBPACK_IMPORTED_MODULE_6__.E,_components_grid_header_grid_header_component__WEBPACK_IMPORTED_MODULE_7__.X,_components_pill_renderer_pill_renderer_component__WEBPACK_IMPORTED_MODULE_8__.Wj,_components_text_cell_renderer_text_cell_renderer_component__WEBPACK_IMPORTED_MODULE_9__.y,_components_custom_loading_cell_renderer_custom_loading_cell_renderer_component__WEBPACK_IMPORTED_MODULE_10__.e]})],UiGridModule)}}]);