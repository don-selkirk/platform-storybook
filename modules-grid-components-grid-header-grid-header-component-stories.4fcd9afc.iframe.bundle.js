"use strict";(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[7038],{"./libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>grid_header_component_stories});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs");let UiGridHeaderComponent=class UiGridHeaderComponent{constructor(){this.gridHeaderNumber=0,this.isTooltipDisabled=!0,this.gridHeaderButtons=[],this.getHeaderButtons=(thisItemData,thisRowId)=>null}ngOnInit(){setTimeout((()=>{document.querySelector(".ag-root").classList.add("grid-header-shown")}))}ngAfterViewInit(){setTimeout((()=>{this.isEllipsisActive()}),100)}onResize(){this.headerEle=document.getElementById("header-title"),this.isEllipsisActive()}isEllipsisActive(){this.headerEle=document.getElementById("header-title"),this.headerEle&&this.headerEle.offsetWidth<this.headerEle.scrollWidth?this.isTooltipDisabled=!1:this.isTooltipDisabled=!0}};UiGridHeaderComponent.propDecorators={titleText:[{type:core.Input}],infoText:[{type:core.Input}],countText:[{type:core.Input}],countSelectedItems:[{type:core.Input}],countFilteredItems:[{type:core.Input}],countFilteredShown:[{type:core.Input}],hasAnyFilter:[{type:core.Input}],collapseHeaderButtons:[{type:core.Input}],collapseHeaderButtonLabel:[{type:core.Input}],gridHeaderButtons:[{type:core.Input}],getHeaderButtons:[{type:core.Input}],onResize:[{type:core.HostListener,args:["window:resize"]}]},UiGridHeaderComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ui-grid-header",template:'<div *ngIf="titleText !== undefined" id="grid-header" class="grid-header">\n    <div class="grid-header-content ag-header">\n        \x3c!-- LEFT SIDE --\x3e\n        <div class="grid-header-content-left">\n            <div\n                id="header-title"\n                class="header-title"\n                container="body"\n                ngbTooltip="{{ titleText | translate }}"\n                [disableTooltip]="isTooltipDisabled"\n                [placement]="\'top\'"\n            >\n                {{ titleText | translate }}\n            </div>\n            \x3c!-- Please keep code for now; changing this to only show selected count, not the filtered count\n            <ng-container *ngIf="hasAnyFilter === true">\n                <div *ngIf="(countFilteredShown !== undefined && countFilteredShown > 0) && countSelectedItems <= 0" class="header-count">\n                    ({{countFilteredShown}} {{ \'COMMON.AG_GRID.OF\' | translate }} {{ countText }})\n                </div>\n                <div *ngIf="countSelectedItems !== undefined && countSelectedItems > 0" class="header-count">\n                    ({{countSelectedItems}} of {{ countFilteredItems }} selected)\n                </div>\n            </ng-container>\n            <ng-container *ngIf="hasAnyFilter === false">\n            </ng-container>\n            --\x3e\n                <div *ngIf="countSelectedItems !== undefined && countSelectedItems > 0" class="header-count">\n                    ({{countSelectedItems}} of {{ countText }} selected)\n                    \x3c!-- {{ \'GRID.MULTISELECT_SELECTED\' | translate: { selected: countSelectedItems, total: countText } }} --\x3e\n                </div>\n                <div *ngIf="countSelectedItems === undefined || countSelectedItems === 0" class="header-count">({{ countText }})</div>\n            <div>\n                <i\n                    *ngIf="infoText !== undefined"\n                    class="bi bi-question-circle-fill bi-sm"\n                    placement="top"\n                    ngbTooltip="{{ infoText | translate }}"\n                    container="body"\n                ></i>\n            </div>\n        </div>\n\n        \x3c!-- RIGHT SIDE --\x3e\n        <div class="grid-header-content-right">\n            <ui-grid-header-buttons\n                class="grid-header-buttons"\n                [buttons]="gridHeaderButtons"\n                [collapseButtons]="collapseHeaderButtons"\n                [dropdownButtonLabel]="collapseHeaderButtonLabel"\n            ></ui-grid-header-buttons>\n        </div>\n    </div>\n</div>\n',styles:[".grid-header-content {\n  border: 1px solid #d2d6da;\n  border-bottom: none;\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  text-overflow: ellipsis;\n  background-color: #fff;\n  align-items: center;\n  padding: 0px 24px 0px 24px;\n  gap: 8px;\n  height: 56px;\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n}\n.grid-header-content .grid-header-content-right,\n.grid-header-content .grid-header-content-left {\n  flex: 1 1 auto;\n  display: flex;\n}\n.grid-header-content .grid-header-content-left {\n  justify-content: flex-start;\n  gap: 0.5rem;\n}\n.grid-header-content .grid-header-content-right {\n  justify-content: flex-end;\n}\n.grid-header-content .header-count {\n  color: #7e8083;\n}\n.header-title {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  display: inline-block;\n}"]})],UiGridHeaderComponent);const grid_header_component_stories={title:"Grids/GridHeader",component:UiGridHeaderComponent,decorators:[(0,client.moduleMetadata)({imports:[]})]},Primary=(args=>({props:args})).bind({});Primary.args={titleText:"",infoText:"",countText:"",countSelectedItems:"",countFilteredItems:"",countFilteredShown:"",hasAnyFilter:"",collapseHeaderButtons:!1,collapseHeaderButtonLabel:"",gridHeaderButtons:[],getHeaderButtons:(thisItemData,thisRowId)=>null}}}]);