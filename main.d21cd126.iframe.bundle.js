(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[792],{"./libs/ui/src/lib sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./libs/ui/src/lib sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$",module.exports=webpackEmptyContext},"./libs/ui/src/lib sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./libs/ui/src/lib sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$",module.exports=webpackEmptyContext},"./generated-stories-entry.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./libs/ui/src/lib sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"),__webpack_require__("./libs/ui/src/lib sync recursive ^\\.(?:(?:^%7C[\\\\/]%7C(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/])(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)},"./libs/ui/.storybook/preview.js":(module,__unused_webpack_exports,__webpack_require__)=>{var compodocJson;compodocJson=__webpack_require__("./libs/ui/.storybook/documentation.json"),__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js").checkValidCompodocJson(compodocJson),__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js").setCompodocJson(compodocJson),module.exports={parameters:{layout:"centered",actions:{argTypesRegex:"^on.*"},docs:{inlineStories:!0},previewTabs:{canvas:{hidden:!1,title:"Interactive"},"storybook/docs/panel":{hidden:!1,title:"Overview"}}}}},"./libs/ui/.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_logger__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),C_Users_DonS_Documents_GitHub_platform_ui_master_platform_libs_ui_storybook_preview_js__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./libs/ui/.storybook/preview.js");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(C_Users_DonS_Documents_GitHub_platform_ui_master_platform_libs_ui_storybook_preview_js__WEBPACK_IMPORTED_MODULE_9__).forEach((function(key){var value=C_Users_DonS_Documents_GitHub_platform_ui_master_platform_libs_ui_storybook_preview_js__WEBPACK_IMPORTED_MODULE_9__[key];switch(key){case"args":case"argTypes":return C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_logger__WEBPACK_IMPORTED_MODULE_10__.vF.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__.dK)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__.$K)(loader,!1)}));case"parameters":return(0,C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__.Gu)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__.T$)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__.FW)(enhancer)}));case"render":return(0,C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__.kf)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,C_Users_DonS_Documents_GitHub_platform_ui_master_platform_node_modules_storybook_client_api__WEBPACK_IMPORTED_MODULE_11__.Gu)(v,!1);case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./libs/ui/src/assets/styles/styles.scss":()=>{},"?4f7e":()=>{},"./libs/ui/.storybook/documentation.json":module=>{"use strict";module.exports=JSON.parse('{"pipes":[{"name":"UiJoinPipe","id":"pipe-UiJoinPipe-c393b856aca58e19e8705d5636f4bce3e937541d6801a4820311989b7a7d372d6370946a7672821bf4d4f345ed7670e521091a260af707c0a2d142ad6abf43cd","file":"libs/ui/src/lib/modules/pipes/array/join.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":""},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\', \'"}],"optional":false,"returnType":"string | any","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\', \'","tagName":{"text":"param"}}]}],"ngname":"uiJoin","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\r\\n// Classes\\r\\nimport UiUtils from \'../../../classes/utils.class\';\\r\\n\\r\\n@Pipe({\\r\\n    name: \'uiJoin\',\\r\\n})\\r\\nexport class UiJoinPipe implements PipeTransform {\\r\\n    public transform(input: any, delimiter: string = \', \'): string | any {\\r\\n        if (!UiUtils.isArray(input)) {\\r\\n            return input;\\r\\n        }\\r\\n\\r\\n        return input.join(delimiter);\\r\\n    }\\r\\n}\\r\\n"},{"name":"UiMonthNamePipe","id":"pipe-UiMonthNamePipe-3155e79e994fdf7af0489cee9b2cf7d2444c600243d113e19526dfb4bff6879467cf4b4a8900292bbb76b33f380de1ac633ddb332274bdcbceb32ec2fc00f31f","file":"libs/ui/src/lib/modules/form-controls/pipes/month-name.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns translated full month name\\n\\n","description":"<p>Returns translated full month name</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":378,"end":383,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":372,"end":377,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":393,"end":400,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]}],"ngname":"monthNamePipe","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\r\\n// Ng Bootstrap\\r\\nimport { NgbDatepickerI18n } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\n@Pipe({\\r\\n    name: \'monthNamePipe\',\\r\\n})\\r\\nexport class UiMonthNamePipe implements PipeTransform {\\r\\n    constructor(private _i18n: NgbDatepickerI18n) {}\\r\\n\\r\\n    /**\\r\\n     * Returns translated full month name\\r\\n     *\\r\\n     * @param value\\r\\n     * @returns\\r\\n     */\\r\\n    public transform(value: number): string {\\r\\n        if (!value || typeof value !== \'number\') {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        return this._i18n.getMonthFullName(value);\\r\\n    }\\r\\n}\\r\\n"},{"name":"UiNoSanitizePipe","id":"pipe-UiNoSanitizePipe-1ef977ec4e53d1ae1dfc260c9b4a668e44afbc78657a4318f47abe3b110b82b1166e3bfa06423d30e4b9763a5b695d89973d4fbc28dde8c68bf48d215d1a2b3e","file":"libs/ui/src/lib/modules/pipes/nosanitizerpipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"html","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SafeHtml","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"html","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"noSanitize","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\r\\nimport { DomSanitizer, SafeHtml } from \'@angular/platform-browser\';\\r\\n\\r\\n@Pipe({ name: \'noSanitize\' })\\r\\nexport class UiNoSanitizePipe implements PipeTransform {\\r\\n    constructor(private domSanitizer: DomSanitizer) {}\\r\\n\\r\\n    public transform(html: string): SafeHtml {\\r\\n        return this.domSanitizer.bypassSecurityTrustHtml(html);\\r\\n    }\\r\\n}\\r\\n"},{"name":"UiPluckPipe","id":"pipe-UiPluckPipe-77c878ca3830b2e10ace7e73086a43f56c60ba1f02111442187485593827b978dd7cf6b6f4c5d79532146e993312829093bee802a6c37599b5f52000c07fe68c","file":"libs/ui/src/lib/modules/pipes/array/pluck.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"uiPluck","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\r\\n// Classes\\r\\nimport UiUtils from \'../../../classes/utils.class\';\\r\\n\\r\\n@Pipe({\\r\\n    name: \'uiPluck\',\\r\\n})\\r\\nexport class UiPluckPipe implements PipeTransform {\\r\\n    public transform(input: any, key: string): any {\\r\\n        if (!UiUtils.isArray(input) || !key) {\\r\\n            return input;\\r\\n        }\\r\\n\\r\\n        return input.map((value: any) => {\\r\\n            return UiUtils.getProperty(value, key);\\r\\n        });\\r\\n    }\\r\\n}\\r\\n"},{"name":"UiTruncatePipe","id":"pipe-UiTruncatePipe-06eff9d45ad1f28057549787ab66979722fe0c299fc54cd4c578a40aee8eb9752d1d0804d2cace1e87ea91a48a5876ddea8f5a9628e85fa20c087430c34c6fec","file":"libs/ui/src/lib/modules/form-controls/pipes/truncate.pipe.ts","type":"pipe","deprecated":true,"deprecationMessage":"This pipe is deprecated and will be removed in future versions.","description":"","rawdescription":"\\n\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"truncate","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\r\\n\\r\\n/**\\r\\n * @deprecated This pipe is deprecated and will be removed in future versions.\\r\\n */\\r\\n@Pipe({\\r\\n    name: \'truncate\',\\r\\n})\\r\\nexport class UiTruncatePipe implements PipeTransform {\\r\\n    public transform(value: string, args: any[]): string {\\r\\n        if (!value) {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        let limit = 20;\\r\\n        if (args.length > 0) {\\r\\n            const parsedLimit = parseInt(args[0], 10);\\r\\n            if (!isNaN(parsedLimit)) {\\r\\n                limit = parsedLimit;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        const trail = args.length > 1 ? String(args[1]) : \'...\';\\r\\n        return value.length > limit ? value.substring(0, limit) + trail : value;\\r\\n    }\\r\\n}\\r\\n"}],"interfaces":[{"name":"IUiActionBtn","id":"interface-IUiActionBtn-782883136e592fa6d00fc9ee791447b22f510a8edebcc077c4632e544ea16036d843b35eb610bd681065021bb5ba4b00dd9afcf7c075c5bb09111b04b4354c83","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\r\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\r\\n\\r\\nexport interface IUiCustomHeaderParams {\\r\\n    menuIcon: string;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtn {\\r\\n    icon?: string;\\r\\n    text: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    clicked: (params: IUiActionCellRendererParams) => void;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtnConfig {\\r\\n    itemId: string;\\r\\n    rowId: string;\\r\\n    inlineIcons?: boolean;\\r\\n    showIconsInMenu?: boolean;\\r\\n    showLabel?: boolean;\\r\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\r\\n}\\r\\n\\r\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\r\\n\\r\\nexport interface IUiActionDivider {\\r\\n    divider?: boolean;\\r\\n    visible?: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiSelectionChangeParams {\\r\\n    gridId: string;\\r\\n    selectedRows: RowNode[];\\r\\n}\\r\\n\\r\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\r\\n    gridId: any;\\r\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\r\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n}\\r\\n","properties":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"","line":15},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"iconVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiActionBtnConfig","id":"interface-IUiActionBtnConfig-782883136e592fa6d00fc9ee791447b22f510a8edebcc077c4632e544ea16036d843b35eb610bd681065021bb5ba4b00dd9afcf7c075c5bb09111b04b4354c83","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\r\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\r\\n\\r\\nexport interface IUiCustomHeaderParams {\\r\\n    menuIcon: string;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtn {\\r\\n    icon?: string;\\r\\n    text: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    clicked: (params: IUiActionCellRendererParams) => void;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtnConfig {\\r\\n    itemId: string;\\r\\n    rowId: string;\\r\\n    inlineIcons?: boolean;\\r\\n    showIconsInMenu?: boolean;\\r\\n    showLabel?: boolean;\\r\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\r\\n}\\r\\n\\r\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\r\\n\\r\\nexport interface IUiActionDivider {\\r\\n    divider?: boolean;\\r\\n    visible?: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiSelectionChangeParams {\\r\\n    gridId: string;\\r\\n    selectedRows: RowNode[];\\r\\n}\\r\\n\\r\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\r\\n    gridId: any;\\r\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\r\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n}\\r\\n","properties":[{"name":"btnArr","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionBtn | IUiActionDivider>","optional":false,"description":"","line":24},{"name":"inlineIcons","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":21},{"name":"itemId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"rowId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"showIconsInMenu","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":22},{"name":"showLabel","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiActionButton","id":"interface-IUiActionButton-e968b4c9e05f550c6cfbb831e571da7970def05f3d8061f94fdec97d47ff2ce1c7bea40998baa81c28749a8e351fcb3e4c95ddf139ad76ad6abb56ad16d3d43a","file":"libs/ui/src/lib/modules/button/interfaces/action-button.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { UiButtonIconLocationEnum } from \'../enums/action-button-icon-location.enum\';\\r\\nimport { UiButtonSizeEnum } from \'../enums/action-button-size.enum\';\\r\\nimport { UiButtonTypeEnum } from \'../enums/action-button-type.enum\';\\r\\n\\r\\nexport interface IUiActionButton {\\r\\n    id?: string;\\r\\n    text?: string;\\r\\n    type: UiButtonTypeEnum;\\r\\n    size?: UiButtonSizeEnum;\\r\\n    iconLocation?: UiButtonIconLocationEnum;\\r\\n    icon?: string;\\r\\n    disabled?: boolean;\\r\\n    inversed?: boolean;\\r\\n    tooltipText?: string;\\r\\n    clicked?: (e?: unknown) => unknown;\\r\\n}\\r\\n\\r\\nexport { UiButtonSizeEnum, UiButtonTypeEnum, UiButtonIconLocationEnum };\\r\\n","properties":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":15},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11},{"name":"iconLocation","deprecated":false,"deprecationMessage":"","type":"UiButtonIconLocationEnum","optional":true,"description":"","line":10},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6},{"name":"inversed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"size","deprecated":false,"deprecationMessage":"","type":"UiButtonSizeEnum","optional":true,"description":"","line":9},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"type","deprecated":false,"deprecationMessage":"","type":"UiButtonTypeEnum","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiActionButton","id":"interface-IUiActionButton-66ccc11c91383c860cea03e3fd9c0f011709a7db3f4000e08afee1263f3a37d3b4fd7cfdb127c4beb58ac8dd5e300408dff6ab62742d2bac436138bdaac62308-1","file":"libs/ui/src/lib/modules/card/interfaces/card.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiActionButton {\\r\\n    id?: string;\\r\\n    icon?: string;\\r\\n    text?: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    classes?: string;\\r\\n    tooltipText?: string;\\r\\n    clicked?: (buttonId: string, buttonData?: IUiActionButton) => void;\\r\\n}\\r\\n","properties":[{"name":"classes","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9},{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":11},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":4},{"name":"iconVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":8},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":3},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":5},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiActionButton-1"},{"name":"IUiActionCellRendererParams","id":"interface-IUiActionCellRendererParams-782883136e592fa6d00fc9ee791447b22f510a8edebcc077c4632e544ea16036d843b35eb610bd681065021bb5ba4b00dd9afcf7c075c5bb09111b04b4354c83","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\r\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\r\\n\\r\\nexport interface IUiCustomHeaderParams {\\r\\n    menuIcon: string;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtn {\\r\\n    icon?: string;\\r\\n    text: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    clicked: (params: IUiActionCellRendererParams) => void;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtnConfig {\\r\\n    itemId: string;\\r\\n    rowId: string;\\r\\n    inlineIcons?: boolean;\\r\\n    showIconsInMenu?: boolean;\\r\\n    showLabel?: boolean;\\r\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\r\\n}\\r\\n\\r\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\r\\n\\r\\nexport interface IUiActionDivider {\\r\\n    divider?: boolean;\\r\\n    visible?: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiSelectionChangeParams {\\r\\n    gridId: string;\\r\\n    selectedRows: RowNode[];\\r\\n}\\r\\n\\r\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\r\\n    gridId: any;\\r\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\r\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n}\\r\\n","properties":[],"indexSignatures":[],"methods":[],"extends":"ICellRendererParams"},{"name":"IUiActionDivider","id":"interface-IUiActionDivider-782883136e592fa6d00fc9ee791447b22f510a8edebcc077c4632e544ea16036d843b35eb610bd681065021bb5ba4b00dd9afcf7c075c5bb09111b04b4354c83","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\r\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\r\\n\\r\\nexport interface IUiCustomHeaderParams {\\r\\n    menuIcon: string;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtn {\\r\\n    icon?: string;\\r\\n    text: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    clicked: (params: IUiActionCellRendererParams) => void;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtnConfig {\\r\\n    itemId: string;\\r\\n    rowId: string;\\r\\n    inlineIcons?: boolean;\\r\\n    showIconsInMenu?: boolean;\\r\\n    showLabel?: boolean;\\r\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\r\\n}\\r\\n\\r\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\r\\n\\r\\nexport interface IUiActionDivider {\\r\\n    divider?: boolean;\\r\\n    visible?: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiSelectionChangeParams {\\r\\n    gridId: string;\\r\\n    selectedRows: RowNode[];\\r\\n}\\r\\n\\r\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\r\\n    gridId: any;\\r\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\r\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n}\\r\\n","properties":[{"name":"divider","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":30},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":31}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAddressDetails","id":"interface-IUiAddressDetails-7f24069018082b0dda543a82982af7382c642d7f6de719c714d7c9e11ab1589d30f4765345a1c2dfcc5df971c0d33125226cd62e3a41c3cd2308f4dcf3e149d6","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/address-details.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiAddressDetails {\\r\\n    addressLine1: string;\\r\\n    addressLine2: string;\\r\\n    city: string;\\r\\n    countryName: string;\\r\\n    state: string;\\r\\n    countryCode: string;\\r\\n    postalCode: string;\\r\\n}\\r\\n","properties":[{"name":"addressLine1","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"addressLine2","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"city","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"countryCode","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"countryName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"postalCode","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAppConfig","id":"interface-IUiAppConfig-0e726bca97f9b77d1581aec72072070174c218d629af3fa2fc90632eb3b77f89abf6eb7fe14ff865e4d0a2e9726f94e081b95afd65770ee75021b3845e260824","file":"libs/ui/src/lib/services/configuration/configuration.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\r\\n// RxJS\\r\\nimport { Subject, throwError } from \'rxjs\';\\r\\n\\r\\nexport interface IUiAppConfig {\\r\\n    aiApi: string;\\r\\n    dataApi: string;\\r\\n    authApi: string; // e.g \\"http://api.localdev.assentcompliance.com:8080/v1/authentication\\",\\r\\n    authCheckApi: string;\\r\\n    gcApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/GlobalCatalogApi\\"\\r\\n    aciServiceApi: string;\\r\\n    iamApi: string;\\r\\n    requestOtpTokenSlug: string; // e.g. \\"authentication/signin\\"\\r\\n    verifyOtpTokenSlug: string; // e.g. \\"authentication/verifytoken\\"\\r\\n\\r\\n    enablePendoAcpUi: boolean;\\r\\n    pendoApiKey: string;\\r\\n    aucBaseUrl: string;\\r\\n    contactManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ContactManagementApi/\\"\\r\\n    partyApi: string;\\r\\n    tenantRequestApi: string;\\r\\n    supplierExperienceApi: string;\\r\\n    indirectMonitoringApi: string;\\r\\n    surveySubmissionApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveySubmissionApi\\"\\r\\n    coreAuthCookieDomain: string; // e.g \\".assentcompliance.com\\",\\r\\n    authCookieId: string; // e.g. \\"auth_token\\"\\r\\n    sessionCookieId: string; // e.g. \\"sessionKey\\"\\r\\n    emailCookieId: string; // e.g. \\"user.email\\"\\r\\n    environmentName: string; // e.g. \\"localdev\\", \\"qa\\", \\"production\\"\\r\\n    rememberMe: string; // e.g. localdev.remember_me\\r\\n    correctiveActionsService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/CorrectiveActionsService\\"\\r\\n    scanUrl: string; // e.g wss://2bfckqgh8h.execute-api.us-east-1.amazonaws.com/dev\\r\\n    scanBucketName: string; // e.g assent-csr-file-upload-service-scan-bucket\\r\\n    scanBucketRegion: string; // e.g us-east-1\\r\\n    scanIdentityPoolId: string; // e.g us-east-1:2bbb60c2-3c7a-4195-bafe-3f8ef5fb2ffe\\r\\n    coreAuthenticationLogin: string; //e.g. http://core-login.localdev.assentcompliance.com/#/login\\r\\n    supplierHelpCenter: string;\\r\\n    // e.g. \\"https://assentcompliance.force.com/SupplierCustomerPortal/s/topic/0TO8X000000B4LJWA0/corrective-actions?language=en_US\\"\\r\\n    termsOfService: string; // e.g. \\"https://www.assent.com/terms-of-use-supplier-portal\\"\\r\\n    supplierLoginEnabled: boolean;\\r\\n    moduleManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ModuleManagementApi/\\"\\r\\n    sessionExpiryLogoutCookieName: string; // e.g. \\"sessionExpiryLogout\\"\\r\\n    manualLogoutCookieName: string; // e.g. \\"manualLogout\\"\\r\\n    forceAllSessionsLogoutCookieName: string; // e.g. \\"forceAllSessionsLogout\\"\\r\\n    isSupplier: string;\\r\\n    isConsentGiven: string;\\r\\n    secureCookie: boolean;\\r\\n    surveyRulesService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveyRulesService\\"\\r\\n    profileManager: boolean;\\r\\n    authServiceVersion: string; // e.g. \\"cognito\\" / \\"auth0\\"\\r\\n    uniqueSessionCookieId: string; // e.g. \\"uniqueSessionGuid\\"\\r\\n    awsS3ServiceURL: string; // e.g \\"http://aws.localdev.assentcompliance.com:4567\\"\\r\\n    supo2NavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.com\\"\\r\\n    supoEuNavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.eu\\"\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiConfigurationService {\\r\\n    public appConfig: any;\\r\\n    public configLoaded$: Subject<void> = new Subject();\\r\\n    public environmentVariables: any;\\r\\n\\r\\n    private _httpClient: HttpClient;\\r\\n    private readonly _configFile = \'assets/configs/app-config.json\';\\r\\n\\r\\n    constructor(handler: HttpBackend) {\\r\\n        this._httpClient = new HttpClient(handler);\\r\\n    }\\r\\n\\r\\n    public getConfig<T>(name: string): T {\\r\\n        if (this.appConfig && this.appConfig[name]) {\\r\\n            return this.appConfig[name] as T;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public initializeFromObject(configData: any) {\\r\\n        this.appConfig = configData;\\r\\n    }\\r\\n\\r\\n    public async initializeApp(): Promise<boolean> {\\r\\n        return new Promise((_resolve, _reject) => {\\r\\n            this._httpClient.get(this._configFile).subscribe({\\r\\n                next: (configData: any) => {\\r\\n                    this.appConfig = configData;\\r\\n                    this.configLoaded$.next(null);\\r\\n                },\\r\\n                error: (error: HttpErrorResponse) => {\\r\\n                    _reject(true);\\r\\n                    return throwError(() => error || \'Server error\');\\r\\n                },\\r\\n                complete: () => {\\r\\n                    _resolve(true);\\r\\n                },\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setEnvironmentVariables(env: any) {\\r\\n        this.environmentVariables = env;\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"aciServiceApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"aiApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"aucBaseUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"authApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"authCheckApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"authCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28},{"name":"authServiceVersion","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"awsS3ServiceURL","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":54},{"name":"contactManagementApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21},{"name":"coreAuthCookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"coreAuthenticationLogin","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38},{"name":"correctiveActionsService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33},{"name":"dataApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"emailCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30},{"name":"enablePendoAcpUi","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"environmentName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31},{"name":"forceAllSessionsLogoutCookieName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":46},{"name":"gcApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"iamApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"indirectMonitoringApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"isConsentGiven","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48},{"name":"isSupplier","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":47},{"name":"manualLogoutCookieName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":45},{"name":"moduleManagementApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43},{"name":"partyApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22},{"name":"pendoApiKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"profileManager","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":51},{"name":"rememberMe","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"requestOtpTokenSlug","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"scanBucketName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"scanBucketRegion","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36},{"name":"scanIdentityPoolId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":37},{"name":"scanUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34},{"name":"secureCookie","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":49},{"name":"sessionCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29},{"name":"sessionExpiryLogoutCookieName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44},{"name":"supo2NavigationUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":55},{"name":"supoEuNavigationUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":56},{"name":"supplierExperienceApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"supplierHelpCenter","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39},{"name":"supplierLoginEnabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":42},{"name":"surveyRulesService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":50},{"name":"surveySubmissionApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26},{"name":"tenantRequestApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23},{"name":"termsOfService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41},{"name":"uniqueSessionCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53},{"name":"verifyOtpTokenSlug","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAspAppConfig","id":"interface-IUiAspAppConfig-e4ac8a6293180e5fd459df1fe734230f9b87ae01cb6d5ea4ff8a362de11c7472f97b7ccdc064801b3b223b9b57ed3cc3f2cbcf2c243b7eabc1fd6b59af6f5503","file":"libs/ui/src/lib/interfaces/app-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiAuth0Config } from \'@lib/modules/authentification/auth0/auth0-config\';\\r\\n\\r\\n// Configuration type for ASP that inherits the Auth0 properties\\r\\nexport interface IUiAspAppConfig {\\r\\n    domain: string; // e.g. \\"localhost:4201\\"\\r\\n    auth0: IUiAuth0Config;\\r\\n    enableAuth0: boolean;\\r\\n}\\r\\n","properties":[{"name":"auth0","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":6},{"name":"domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"enableAuth0","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAudience","id":"interface-IUiAudience-988803949c72e3bee9b7bc340fb85483b0c95adcfb61f9b68616b35fd87ef674a30d7b5461265499cda6d9d170790bfee7fa93f80bb1520fc49447974f4491e1","file":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable, OnDestroy } from \'@angular/core\';\\r\\nimport { AuthService } from \'@auth0/auth0-angular\';\\r\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\r\\n// eslint-disable-next-line max-len\\r\\nimport { BehaviorSubject, catchError, EMPTY, firstValueFrom, interval, Observable, of, shareReplay, startWith, Subject, switchMap, takeUntil, tap } from \'rxjs\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { IUiAuth0Config } from \'../auth0-config\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n\\r\\nexport interface IUiAudience {\\r\\n    name: string;\\r\\n    audience: string;\\r\\n    endpoint: string;\\r\\n    path?: string;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Represents a subsidiary.\\r\\n *\\r\\n * @see `IAspSubsidiary`\\r\\n */\\r\\nexport interface IUiAuthSubsidiary {\\r\\n    partyGuid: string; // TODO cleanup interfaces\\r\\n    name: string;\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiAuthService implements OnDestroy {\\r\\n    /**\\r\\n     * Indicates whether the permissions have been loaded.\\r\\n     * Can be used to determine if the user is authenticated and has permissions.\\r\\n     *\\r\\n     * @see `UiAuthService.hasAnyPermission()`\\r\\n     * @see `UiAuthService.hasPermissions()`\\r\\n     * @see `UiAuthService.arePermissionsLoaded()`\\r\\n     *\\r\\n     * @example\\r\\n     * ```typescript\\r\\n     * this._authService.permissionsLoaded$.pipe(\\r\\n     *   // wait for the permissions to be loaded\\r\\n     *   filter((loaded) => loaded === true),\\r\\n     *   ...\\r\\n     * ```\\r\\n     * @example\\r\\n     * ```typescript\\r\\n     * this._authService.permissionsLoaded$.subscribe((loaded) => {\\r\\n     *   // wait for the permissions to be loaded\\r\\n     *   if (loaded) {\\r\\n     *     ...\\r\\n     * ```\\r\\n     */\\r\\n    public permissionsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n\\r\\n    public subsidiariesLoaded$: BehaviorSubject<IUiAuthSubsidiary[]> = new BehaviorSubject(null);\\r\\n\\r\\n    /**\\r\\n     * Gets the active organization GUID.\\r\\n     *\\r\\n     * @returns The active organization GUID, or undefined if not set.\\r\\n     */\\r\\n    public get activeOrgGuid(): string | undefined {\\r\\n        const storedValue = sessionStorage.getItem(\'activeOrgGuid\');\\r\\n        if (storedValue) {\\r\\n            return storedValue;\\r\\n        }\\r\\n        return this._activeOrgGuid;\\r\\n    }\\r\\n    public set activeOrgGuid(value: string) {\\r\\n        this._activeOrgGuid = value;\\r\\n        // set value in local storage for an hour\\r\\n        sessionStorage.setItem(\'activeOrgGuid\', value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Resets the polling interval for the user authentication status\\r\\n     */\\r\\n    private readonly _pollReset$ = new Subject<void>();\\r\\n\\r\\n    private _activeOrgGuid: string | undefined;\\r\\n    private readonly _subsidiaryExpiration = 3600000; // 1 hour\\r\\n\\r\\n    /**\\r\\n     * Gets the user GUID.\\r\\n     *\\r\\n     * @returns The user GUID as a string or undefined if not available.\\r\\n     */\\r\\n    public get userGuid(): string | undefined {\\r\\n        return this._userGuid;\\r\\n    }\\r\\n    private _userGuid: string | undefined;\\r\\n\\r\\n    /**\\r\\n     * Gets the root organization GUID.\\r\\n     *\\r\\n     * @returns The root organization GUID, or undefined if not set.\\r\\n     */\\r\\n    public get rootOrgGuid(): string | undefined {\\r\\n        return this._rootOrgGuid;\\r\\n    }\\r\\n    public set rootOrgGuid(value: string | undefined) {\\r\\n        this._rootOrgGuid = value;\\r\\n    }\\r\\n    private _rootOrgGuid: string | undefined;\\r\\n    private readonly _pollInterval = 300000; // 5 minutes\\r\\n    private readonly _unsubscribe$ = new Subject<void>();\\r\\n\\r\\n    /**\\r\\n     * Gets the list of audiences.\\r\\n     *\\r\\n     * @returns An array of all audiences.\\r\\n     */\\r\\n    public get audienceList(): IUiAudience[] {\\r\\n        return Array.from(this._audienceList);\\r\\n    }\\r\\n    private _audienceList: Set<IUiAudience> = new Set();\\r\\n\\r\\n    public get subsidiaries(): IUiAuthSubsidiary[] {\\r\\n        return Array.from(this._subsidiaryList);\\r\\n    }\\r\\n    public set subsidiaries(value: any[]) {\\r\\n        this._subsidiaryList = new Set(value);\\r\\n        this.subsidiariesLoaded$.next(Array.from(this._subsidiaryList));\\r\\n    }\\r\\n    private _subsidiaryList: Set<IUiAuthSubsidiary> = new Set();\\r\\n\\r\\n    private readonly _config: IUiAuth0Config;\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Accessible through the getPermissionsList and hasPermission methods\\r\\n     */\\r\\n    private _permissionsList: Set<string> = new Set();\\r\\n\\r\\n    private _helper = new JwtHelperService();\\r\\n\\r\\n    constructor(\\r\\n        private readonly _auth0Service: AuthService,\\r\\n        private readonly _configurationService: UiConfigurationService,\\r\\n        private readonly _cookieService: CookieService,\\r\\n    ) {\\r\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\r\\n\\r\\n        // Clear audiences\\r\\n        this._audienceList.clear();\\r\\n        const audiences = this._config.audiences;\\r\\n        if (!audiences || audiences.length === 0) {\\r\\n            console.error(\'No audiences defined in the configuration.\');\\r\\n        }\\r\\n        // Add audiences to the list\\r\\n        audiences.forEach((audience) => {\\r\\n            const existingAudience = Array.from(this._audienceList)\\r\\n                .find((aud) => (audience.name === aud.name) || (audience.audience === aud.audience));\\r\\n            if (existingAudience) {\\r\\n                console.warn(`Warning -> Duplicate audience found.`);\\r\\n            } else {\\r\\n                this._audienceList.add(audience);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        // Clear permissions\\r\\n        this._permissionsList.clear();\\r\\n        this._subsidiaryList.clear();\\r\\n        this._activeOrgGuid = undefined;\\r\\n        // Set observables to null\\r\\n        this.permissionsLoaded$.next(null);\\r\\n        this._unsubscribe$.next();\\r\\n        this._unsubscribe$.complete();\\r\\n    }\\r\\n\\r\\n    //#region Init\\r\\n\\r\\n    /**\\r\\n     * Initializes the application by loading permissions if the user is authenticated.\\r\\n     *\\r\\n     * @returns `Promise<boolean>` A promise that resolves to `true` if the initialization is successful, otherwise `false`.\\r\\n     * @throws {Error} If an error occurs during the initialization process.\\r\\n     */\\r\\n    public async initializeApp(): Promise<any> {\\r\\n        try {\\r\\n            // Verify that the user is logged in\\r\\n            const isAuthenticated = await this.isUserAuthenticated();\\r\\n            if (!isAuthenticated) {\\r\\n                console.warn(\'Warning -> User not authenticated.\');\\r\\n                this._auth0Service.logout();\\r\\n                this._auth0Service.loginWithRedirect();\\r\\n                // Stop execution of the method if the user is not authenticated\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            this._auth0Service.user$.subscribe((user) => {\\r\\n                this._cookieService.set(this._configurationService.appConfig.emailCookieId, user.email);\\r\\n            });\\r\\n\\r\\n            // Reset the permission and init observables\\r\\n            this.permissionsLoaded$.next(false);\\r\\n\\r\\n            // Clear permission\\r\\n            this._permissionsList.clear();\\r\\n            this._subsidiaryList.clear();\\r\\n\\r\\n            // Get entitlement token (cachemode = off)\\r\\n            const token = await this.getDecodedTokenByAudience(this._config.authorizationParams.audience, \'off\');\\r\\n            if (token) {\\r\\n                // Set userguid\\r\\n                this._userGuid = token.user_guid;\\r\\n                // Set rootorg\\r\\n                this._rootOrgGuid = token.root_org_guid;\\r\\n\\r\\n                this.addPermissionsFromDecodedToken(token);\\r\\n\\r\\n                //await this.loadPermissions().then(() => {\\r\\n                this.permissionsLoaded$.next(true);\\r\\n                return true;\\r\\n                //});\\r\\n            } else {\\r\\n                console.error(\'No token available for audience.\');\\r\\n                // Return false on error\\r\\n                return false;\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error initializing app.\');\\r\\n            // Return false on error\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    /**\\r\\n     * Checks if the user is authenticated.\\r\\n     *\\r\\n     * @returns A promise that resolves to a boolean indicating whether the user is authenticated or not.\\r\\n     */\\r\\n    public async isUserAuthenticated(): Promise<boolean> {\\r\\n        try {\\r\\n            return firstValueFrom(this._auth0Service.isAuthenticated$).then((isAuthenticated) => {\\r\\n                return isAuthenticated;\\r\\n            });\\r\\n        } catch {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Polls for an access token at a specified interval.\\r\\n     *\\r\\n     * @returns An observable that emits the access token as a string.\\r\\n     */\\r\\n    public pollAccessToken(): Observable<string> {\\r\\n        return this._pollReset$.pipe(\\r\\n            startWith(0),\\r\\n            switchMap(() =>\\r\\n                interval(this._pollInterval).pipe(\\r\\n                    takeUntil(this._pollReset$),\\r\\n                    switchMap(() =>\\r\\n                        this._auth0Service.getAccessTokenSilently().pipe(\\r\\n                            catchError((error) => {\\r\\n                                console.error(\'Error fetching access token:\', error);\\r\\n                                this._auth0Service.logout();\\r\\n                                this._auth0Service.loginWithRedirect();\\r\\n                                // Complete the observable after redirecting\\r\\n                                return EMPTY;\\r\\n                            })\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            ),\\r\\n            takeUntil(this._unsubscribe$),\\r\\n            shareReplay(1)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Returns the subsidiary list.\\r\\n     *\\r\\n     * @returns An array of IUiAuthSubsidiary objects representing the subsidiary list.\\r\\n     */\\r\\n    private get subsidiaryList(): IUiAuthSubsidiary[] {\\r\\n        return Array.from(this._subsidiaryList);\\r\\n    }\\r\\n\\r\\n    //#region Audience\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Gets the exact audience with the specified name.\\r\\n     *\\r\\n     * @param nameOrPath The name of the audience to get.\\r\\n     * @returns The audience with the specified name, or undefined if not found.\\r\\n     */\\r\\n    private getAudience(nameOrPath: string): IUiAudience | undefined {\\r\\n        let audienceMatch = this.audienceList.find((audience) => audience.name === nameOrPath);\\r\\n        if (!audienceMatch) {\\r\\n            audienceMatch = this.audienceList.find((audience) => audience.audience === nameOrPath);\\r\\n        }\\r\\n        return audienceMatch;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Retrieves the audience from the given path.\\r\\n     *\\r\\n     * @param path - The path to check for audience.\\r\\n     * @returns The audience if a matching endpoint is found, otherwise null.\\r\\n     */\\r\\n    public getAudienceFromPath(path: string): string {\\r\\n        // First check for an exact match to the API endpoint\\r\\n        const matchingAudience = this.audienceList.find((audience) => {\\r\\n            const matchPath = path.includes(audience.endpoint);\\r\\n            return matchPath;\\r\\n        });\\r\\n        return matchingAudience ? matchingAudience.audience : null;\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    //#region Tokens\\r\\n\\r\\n    /**\\r\\n     * Retrieves a token for the specified audience.\\r\\n     *\\r\\n     * @param audienceName - The name of the audience.\\r\\n     * @param cacheMode - The cache mode for the token. Defaults to \'on\'.\\r\\n     * @returns An Observable that emits the token string or undefined.\\r\\n     */\\r\\n    public getToken(audienceName: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\r\\n        try {\\r\\n            // Verify that the user is logged in\\r\\n            if (!this._auth0Service.isAuthenticated$) {\\r\\n                console.error(\' Error -> User not authenticated.\');\\r\\n                return of(undefined);\\r\\n            }\\r\\n\\r\\n            // Request a new JWT if the current one is not valid\\r\\n            const aud = this.getAudience(audienceName);\\r\\n            if (!aud) {\\r\\n                console.error(\' Error -> Audience not found.\');\\r\\n                return of(undefined);\\r\\n            }\\r\\n\\r\\n            return this.getTokenByAudience(aud.audience);\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getToken.\');\\r\\n            return of(undefined);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves a token by audience.\\r\\n     *\\r\\n     * @param audience - The audience for which to retrieve the token.\\r\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\r\\n     * @returns An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.\\r\\n     */\\r\\n    private getTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\r\\n        return this._auth0Service.getAccessTokenSilently({\\r\\n            authorizationParams: {\\r\\n                audience,\\r\\n                activeOrgGuid: this._activeOrgGuid,\\r\\n            },\\r\\n            cacheMode,\\r\\n        }).pipe(\\r\\n            tap(() => {\\r\\n            // Emit a value to reset the polling interval after getting the token\\r\\n                this._pollReset$.next();\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves the decoded token for a given audience.\\r\\n     *\\r\\n     * @param audience - The audience for which to retrieve the token.\\r\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\r\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found.\\r\\n     */\\r\\n    private async getDecodedTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\r\\n        try {\\r\\n            const token = await firstValueFrom(this.getTokenByAudience(audience, cacheMode));\\r\\n            if (!token) {\\r\\n                return undefined;\\r\\n            }\\r\\n            // Decode the token\\r\\n            const decodedToken = this._helper.decodeToken(token);\\r\\n            // Return the decoded token\\r\\n            return decodedToken;\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getDecodedTokenByAudience.\');\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves and decodes a token with the specified name.\\r\\n     *\\r\\n     * @param name - The name of the token to retrieve and decode.\\r\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.\\r\\n     */\\r\\n    public async getDecodedToken(name: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\r\\n        try {\\r\\n            const token = await firstValueFrom(this.getToken(name, cacheMode));\\r\\n            if (!token) {\\r\\n                return undefined;\\r\\n            }\\r\\n\\r\\n            // Decode the token\\r\\n            const decodedToken = this._helper.decodeToken(token);\\r\\n            // Return the decoded token\\r\\n            return decodedToken;\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getDecodedToken.\');\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    //#region Permissions\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Adds permissions from the decoded token.\\r\\n     *\\r\\n     * @param decodedToken - The decoded token containing permissions.\\r\\n     */\\r\\n    private addPermissionsFromDecodedToken(decodedToken: any) {\\r\\n        try {\\r\\n            if (decodedToken && decodedToken.permissions) {\\r\\n                // Add permissions to the list\\r\\n                this.addPermissions(decodedToken.permissions);\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error adding permissions from decoded token.\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Loads permissions from the user\'s token.\\r\\n     *\\r\\n     * @returns `Promise<void>` A promise that resolves when the permissions have been loaded.\\r\\n     */\\r\\n    private async loadPermissions(): Promise<void> {\\r\\n        try {\\r\\n            await Promise.all(\\r\\n                Array.from(this._audienceList)\\r\\n                    .map((audience) => {\\r\\n                        return this.getDecodedToken(audience.name); // not by audience\\r\\n                    })\\r\\n            ).then((tokens) => {\\r\\n                if (tokens.length > 0) {\\r\\n                    tokens.forEach((token) => {\\r\\n                        // Load permissions from the token\\r\\n                        this.addPermissionsFromDecodedToken(token);\\r\\n                    });\\r\\n                }\\r\\n            });\\r\\n        } catch (error) {\\r\\n            console.error(\'Error loading permissions.\');\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    /**\\r\\n     * Checks if a specific permission exists.\\r\\n     *\\r\\n     * @param permission The permission to check.\\r\\n     * @returns True if the permission exists, false otherwise.\\r\\n     */\\r\\n    public hasPermission(permission: string): boolean {\\r\\n        // Check for an exact permission match\\r\\n        if (this._permissionsList.has(permission)) {\\r\\n            return true;\\r\\n        } else {\\r\\n            // Check for a fuzzy match on the audience portion of the permission\\r\\n            const permissionFound = Array.from(this._permissionsList).find((p) => p.includes(permission));\\r\\n            if (permissionFound) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if all specified permissions exist.\\r\\n     *\\r\\n     * @param permissions The permissions to check.\\r\\n     * @returns True if all permissions exist, false otherwise.\\r\\n     */\\r\\n    public hasPermissions(permissions: string[]): boolean {\\r\\n        return permissions.every((permission) => this.hasPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if any of the specified permissions exist.\\r\\n     *\\r\\n     * @param permissions The permissions to check.\\r\\n     * @returns True if any permission exists, false otherwise.\\r\\n     */\\r\\n    public hasAnyPermission(permissions: string[]): boolean {\\r\\n        return permissions.some((permission) => this.hasPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the permissions have been loaded.\\r\\n     *\\r\\n     * @returns True if the permissions have been loaded, false otherwise.\\r\\n     */\\r\\n    public arePermissionsLoaded(): boolean {\\r\\n        return this.permissionsLoaded$.getValue();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds a new permission if it does not already exist.\\r\\n     *\\r\\n     * @param permission The permission to add.\\r\\n     */\\r\\n    private addPermission(permission: string): void {\\r\\n        this._permissionsList.add(permission);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds multiple permissions.\\r\\n     *\\r\\n     * @param permissions The permissions to add.\\r\\n     */\\r\\n    private addPermissions(permissions: string[]): void {\\r\\n        permissions.forEach((permission) => this.addPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes a specific permission.\\r\\n     *\\r\\n     * @param permission The permission to remove.\\r\\n     */\\r\\n    private removePermission(permission: string): void {\\r\\n        this._permissionsList.delete(permission);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the list of all permissions.\\r\\n     *\\r\\n     * @returns An array of all permissions.\\r\\n     */\\r\\n    public getPermissionsList(): string[] {\\r\\n        return Array.from(this._permissionsList);\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n}\\r\\n","properties":[{"name":"audience","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"path","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAudienceConfig","id":"interface-IUiAudienceConfig-673624377f96a280ce7b80a95915bd53ec7c247205cc21bff643bd4dd6d0ded0074849d63d1523454c6d5d94744060f68953a204d21f536939c724159f1afba3","file":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiAuth0Config {\\r\\n    domain: string;\\r\\n    clientId: string;\\r\\n    authorizationParams: {\\r\\n        // eslint-disable-next-line @typescript-eslint/naming-convention\\r\\n        redirect_uri: string;\\r\\n        audience: string; // e.g. \\"https://entitlement.assentinc.api\\"\\r\\n    };\\r\\n    enabled: boolean;\\r\\n    audiences: IUiAudienceConfig[];\\r\\n}\\r\\n\\r\\nexport interface IUiAudienceConfig {\\r\\n    name: string;\\r\\n    audience: string;\\r\\n    endpoint: string;\\r\\n}\\r\\n\\r\\n","properties":[{"name":"audience","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAuth0Config","id":"interface-IUiAuth0Config-673624377f96a280ce7b80a95915bd53ec7c247205cc21bff643bd4dd6d0ded0074849d63d1523454c6d5d94744060f68953a204d21f536939c724159f1afba3","file":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiAuth0Config {\\r\\n    domain: string;\\r\\n    clientId: string;\\r\\n    authorizationParams: {\\r\\n        // eslint-disable-next-line @typescript-eslint/naming-convention\\r\\n        redirect_uri: string;\\r\\n        audience: string; // e.g. \\"https://entitlement.assentinc.api\\"\\r\\n    };\\r\\n    enabled: boolean;\\r\\n    audiences: IUiAudienceConfig[];\\r\\n}\\r\\n\\r\\nexport interface IUiAudienceConfig {\\r\\n    name: string;\\r\\n    audience: string;\\r\\n    endpoint: string;\\r\\n}\\r\\n\\r\\n","properties":[{"name":"audiences","deprecated":false,"deprecationMessage":"","type":"IUiAudienceConfig[]","optional":false,"description":"","line":10},{"name":"authorizationParams","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":4},{"name":"clientId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"enabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAuthResponse","id":"interface-IUiAuthResponse-71acd77d16a4bd007e3a0a6bface8d60604527732e48ad65904038eed880eb7fcb0d34830617b356173117ea4473953af2edff3b3a817493f169c722c486d032","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\r\\n// RxJS\\r\\nimport { Observable, throwError } from \'rxjs\';\\r\\nimport { catchError, map, take, tap } from \'rxjs/operators\';\\r\\n// Ngx\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Ngb\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Services\\r\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\r\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\r\\n// Interfaces\\r\\n\\r\\n//Enum\\r\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\r\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\r\\n\\r\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\r\\ndeclare const Assent: IUiAciSharedSession;\\r\\n\\r\\nexport interface IUiAuthResponse {\\r\\n    session: IUiSession;\\r\\n}\\r\\n\\r\\nexport interface IUiSession {\\r\\n    sessionKey: string;\\r\\n    token: string;\\r\\n    uniqueSessionGuid: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiAuthenticationService {\\r\\n    public authResponse: IUiAuthResponse;\\r\\n    public assentContextKey = \'\';\\r\\n\\r\\n    private _httpClient: HttpClient;\\r\\n    private _cookieDomain: string;\\r\\n    private readonly _loginPath = \'login/password\';\\r\\n\\r\\n    constructor(\\r\\n        private _handler: HttpBackend,\\r\\n        private _router: Router,\\r\\n        private _userService: UiUserService,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _cookieService: CookieService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _translate: TranslateService,\\r\\n        private _toastService: UiToastService\\r\\n    ) {\\r\\n        // Use HttpBackend so it does not go through http-error-interceptor\\r\\n        this._httpClient = new HttpClient(this._handler);\\r\\n\\r\\n        this._configService.configLoaded$.pipe(take(1)).subscribe(() => {\\r\\n            this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n            const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n            const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n            const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\r\\n\\r\\n            if (token && sessionKey) {\\r\\n                if (!this.authResponse) {\\r\\n                    this.authResponse = {\\r\\n                        session: {\\r\\n                            sessionKey: \'\',\\r\\n                            token: \'\',\\r\\n                            uniqueSessionGuid: \'\',\\r\\n                        },\\r\\n                    };\\r\\n                }\\r\\n                this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\r\\n                this.loadUserDetails(token);\\r\\n                this.initAssentSession();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if there is a logged user\\r\\n     *\\r\\n     * @returns\\r\\n     */\\r\\n    public isLoggedIn(): boolean {\\r\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n        const tokenExpirationDate = this.getTokenExpirationDate(token);\\r\\n\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n        const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\r\\n        // debugger\\r\\n        if (token && sessionKey) {\\r\\n            if (!this.authResponse) {\\r\\n                this.authResponse = {\\r\\n                    session: {\\r\\n                        sessionKey: \'\',\\r\\n                        token: \'\',\\r\\n                        uniqueSessionGuid: \'\',\\r\\n                    },\\r\\n                };\\r\\n            }\\r\\n            this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\r\\n            this.loadUserDetails(token);\\r\\n            this.initAssentSession();\\r\\n        }\\r\\n\\r\\n        return !!tokenExpirationDate && Date.now() < tokenExpirationDate;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the logged-in user is an Assentee\\r\\n     *\\r\\n     * @returns boolean\\r\\n     */\\r\\n    public isAssentee(): boolean {\\r\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n        const email = this.getTokenEmail(token);\\r\\n        return email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Login to CoreAuth\\r\\n     *\\r\\n     * @param email\\r\\n     * @param password\\r\\n     * @returns\\r\\n     */\\r\\n    public loginCoreAuth(email: string, password: string): Observable<IUiAuthResponse> {\\r\\n        return this._httpClient\\r\\n            .post<any>(`${this._configService.appConfig.authApi}/${this._loginPath}`, {\\r\\n                email,\\r\\n                password,\\r\\n            })\\r\\n            .pipe(\\r\\n                map((data: IUiSession) => {\\r\\n                    const response: IUiAuthResponse = {\\r\\n                        session: data,\\r\\n                    };\\r\\n                    this.initializeSession(response);\\r\\n                    return response; // return the response\\r\\n                }),\\r\\n                catchError((error: Error) => {\\r\\n                    if (error instanceof HttpErrorResponse) {\\r\\n                        // Handle back-end error\\r\\n                        console.error(\'Back-end error:\', error.message);\\r\\n                    } else {\\r\\n                        // Handle front-end error\\r\\n                        console.error(\'Front-end error:\', error.message);\\r\\n                    }\\r\\n                    return throwError(() => error);\\r\\n                })\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Logouts the user and clear its token and details\\r\\n     */\\r\\n    public logout(supressTimeoutMessage: boolean = false) {\\r\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n        this._httpClient.post(`${this._configService.appConfig.authApi}/login/logout/${sessionKey}`, {}).subscribe();\\r\\n        this.clearUserCredentials(supressTimeoutMessage);\\r\\n        this._cookieService.set(this._configService.appConfig.manualLogoutCookieName, \'true\');\\r\\n        this.authResponse = undefined;\\r\\n        this._userService.logout();\\r\\n        this._router.navigate([\'\']);\\r\\n    }\\r\\n\\r\\n    // Initialize Session if UiAuthenticationService.loginCoreAuth() Successfully logged in\\r\\n    private initializeSession(authData: IUiAuthResponse) {\\r\\n        const expirationDate = new Date(this.getTokenExpirationDate(authData.session.token));\\r\\n        const secureCookie = this._configService.appConfig.secureCookie;\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            authData.session.token,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.sessionCookieId,\\r\\n            authData.session.sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.uniqueSessionCookieId,\\r\\n            authData.session.uniqueSessionGuid,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            secureCookie\\r\\n        );\\r\\n\\r\\n        this.loadUserDetails(authData.session.token);\\r\\n\\r\\n        this.initAssentSession();\\r\\n    }\\r\\n\\r\\n    private initAssentSession() {\\r\\n        const options: IUiAciSessionOptions = {\\r\\n            cookieDomain: this._cookieDomain,\\r\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\r\\n            logoutOverride: () => {\\r\\n                this.clearUserCredentials();\\r\\n                this._modalService.dismissAll();\\r\\n                this._router.navigate([\'\']);\\r\\n            },\\r\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\r\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\r\\n            onExtendSession: () => {\\r\\n                return \'\';\\r\\n            },\\r\\n            sessionExpiryLogoutCookieRequired: true,\\r\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\r\\n            secureCookie: this._configService.appConfig.secureCookie,\\r\\n        };\\r\\n\\r\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\r\\n        if (document.cookie.match(cookiePattern)) {\\r\\n            Assent.session.initialize(options);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private getCookieDomain(): string {\\r\\n        let domain = this._configService.appConfig.coreAuthCookieDomain;\\r\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\r\\n            domain = \'localhost\';\\r\\n        }\\r\\n\\r\\n        return domain;\\r\\n    }\\r\\n\\r\\n    private loadUserDetails(token: string) {\\r\\n        const userEmail = this.getTokenEmail(token);\\r\\n        const tokenPayload = this.getTokenPayload(token);\\r\\n        this._userService.selectUser(userEmail, tokenPayload);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\r\\n     *\\r\\n     * @param token jwt\\r\\n     * @returns milliseconds\\r\\n     */\\r\\n    private getTokenExpirationDate(token: string): number {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.exp) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return data.exp * 1000;\\r\\n    }\\r\\n\\r\\n    private getTokenEmail(token: string): string {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.sub || !this.authoriseAcpAccess(data.aud, data.sub)) {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        return data.sub;\\r\\n    }\\r\\n\\r\\n    private authoriseAcpAccess(aud: string[], email: string) {\\r\\n        let result = false;\\r\\n        const currentEnv = this._configService.appConfig.environmentName;\\r\\n\\r\\n        if (!aud || aud.length === 0) {\\r\\n            this.logout(true);\\r\\n        }\\r\\n\\r\\n        if (aud.includes(\'*\') && (email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\'))) {\\r\\n            result = true;\\r\\n        } else if (\\r\\n            !aud.includes(window.location.host) &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.localdev &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.devopssandbox\\r\\n        ) {\\r\\n            this.logout(true);\\r\\n        } else {\\r\\n            result = true;\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    private getTokenPayload(token: string): any {\\r\\n        if (!token) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const tokenParts = token.split(\'.\');\\r\\n        if (!tokenParts || tokenParts.length < 2) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const data = JSON.parse(atob(tokenParts[1]));\\r\\n            return data;\\r\\n        } catch (error) {\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private clearUserCredentials(supressTimeoutMessage: boolean = false) {\\r\\n        if (!supressTimeoutMessage) {\\r\\n            this.displayUserLogoutNotification();\\r\\n        }\\r\\n        Assent.session.dispose();\\r\\n        this._cookieService.delete(this._configService.appConfig.authCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.sessionCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.uniqueSessionCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.isConsentGiven, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.isSupplier, \'/\', this._cookieDomain);\\r\\n    }\\r\\n\\r\\n    private displayUserLogoutNotification() {\\r\\n        if (this._cookieService.get(this._configService.appConfig.sessionExpiryLogoutCookieName)) {\\r\\n            this._cookieService.delete(this._configService.appConfig.sessionExpiryLogoutCookieName);\\r\\n            this._translate\\r\\n                .get(\'AUTHENTICATION.SESSION_EXPIRED_LOGOUT\')\\r\\n                .pipe(take(1))\\r\\n                .subscribe((res: string) => {\\r\\n                    this._toastService.show(res, UiToastTypesEnum.danger, { autoHide: false });\\r\\n                });\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"session","deprecated":false,"deprecationMessage":"","type":"IUiSession","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAuthSubsidiary","id":"interface-IUiAuthSubsidiary-988803949c72e3bee9b7bc340fb85483b0c95adcfb61f9b68616b35fd87ef674a30d7b5461265499cda6d9d170790bfee7fa93f80bb1520fc49447974f4491e1","file":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable, OnDestroy } from \'@angular/core\';\\r\\nimport { AuthService } from \'@auth0/auth0-angular\';\\r\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\r\\n// eslint-disable-next-line max-len\\r\\nimport { BehaviorSubject, catchError, EMPTY, firstValueFrom, interval, Observable, of, shareReplay, startWith, Subject, switchMap, takeUntil, tap } from \'rxjs\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { IUiAuth0Config } from \'../auth0-config\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n\\r\\nexport interface IUiAudience {\\r\\n    name: string;\\r\\n    audience: string;\\r\\n    endpoint: string;\\r\\n    path?: string;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Represents a subsidiary.\\r\\n *\\r\\n * @see `IAspSubsidiary`\\r\\n */\\r\\nexport interface IUiAuthSubsidiary {\\r\\n    partyGuid: string; // TODO cleanup interfaces\\r\\n    name: string;\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiAuthService implements OnDestroy {\\r\\n    /**\\r\\n     * Indicates whether the permissions have been loaded.\\r\\n     * Can be used to determine if the user is authenticated and has permissions.\\r\\n     *\\r\\n     * @see `UiAuthService.hasAnyPermission()`\\r\\n     * @see `UiAuthService.hasPermissions()`\\r\\n     * @see `UiAuthService.arePermissionsLoaded()`\\r\\n     *\\r\\n     * @example\\r\\n     * ```typescript\\r\\n     * this._authService.permissionsLoaded$.pipe(\\r\\n     *   // wait for the permissions to be loaded\\r\\n     *   filter((loaded) => loaded === true),\\r\\n     *   ...\\r\\n     * ```\\r\\n     * @example\\r\\n     * ```typescript\\r\\n     * this._authService.permissionsLoaded$.subscribe((loaded) => {\\r\\n     *   // wait for the permissions to be loaded\\r\\n     *   if (loaded) {\\r\\n     *     ...\\r\\n     * ```\\r\\n     */\\r\\n    public permissionsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n\\r\\n    public subsidiariesLoaded$: BehaviorSubject<IUiAuthSubsidiary[]> = new BehaviorSubject(null);\\r\\n\\r\\n    /**\\r\\n     * Gets the active organization GUID.\\r\\n     *\\r\\n     * @returns The active organization GUID, or undefined if not set.\\r\\n     */\\r\\n    public get activeOrgGuid(): string | undefined {\\r\\n        const storedValue = sessionStorage.getItem(\'activeOrgGuid\');\\r\\n        if (storedValue) {\\r\\n            return storedValue;\\r\\n        }\\r\\n        return this._activeOrgGuid;\\r\\n    }\\r\\n    public set activeOrgGuid(value: string) {\\r\\n        this._activeOrgGuid = value;\\r\\n        // set value in local storage for an hour\\r\\n        sessionStorage.setItem(\'activeOrgGuid\', value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Resets the polling interval for the user authentication status\\r\\n     */\\r\\n    private readonly _pollReset$ = new Subject<void>();\\r\\n\\r\\n    private _activeOrgGuid: string | undefined;\\r\\n    private readonly _subsidiaryExpiration = 3600000; // 1 hour\\r\\n\\r\\n    /**\\r\\n     * Gets the user GUID.\\r\\n     *\\r\\n     * @returns The user GUID as a string or undefined if not available.\\r\\n     */\\r\\n    public get userGuid(): string | undefined {\\r\\n        return this._userGuid;\\r\\n    }\\r\\n    private _userGuid: string | undefined;\\r\\n\\r\\n    /**\\r\\n     * Gets the root organization GUID.\\r\\n     *\\r\\n     * @returns The root organization GUID, or undefined if not set.\\r\\n     */\\r\\n    public get rootOrgGuid(): string | undefined {\\r\\n        return this._rootOrgGuid;\\r\\n    }\\r\\n    public set rootOrgGuid(value: string | undefined) {\\r\\n        this._rootOrgGuid = value;\\r\\n    }\\r\\n    private _rootOrgGuid: string | undefined;\\r\\n    private readonly _pollInterval = 300000; // 5 minutes\\r\\n    private readonly _unsubscribe$ = new Subject<void>();\\r\\n\\r\\n    /**\\r\\n     * Gets the list of audiences.\\r\\n     *\\r\\n     * @returns An array of all audiences.\\r\\n     */\\r\\n    public get audienceList(): IUiAudience[] {\\r\\n        return Array.from(this._audienceList);\\r\\n    }\\r\\n    private _audienceList: Set<IUiAudience> = new Set();\\r\\n\\r\\n    public get subsidiaries(): IUiAuthSubsidiary[] {\\r\\n        return Array.from(this._subsidiaryList);\\r\\n    }\\r\\n    public set subsidiaries(value: any[]) {\\r\\n        this._subsidiaryList = new Set(value);\\r\\n        this.subsidiariesLoaded$.next(Array.from(this._subsidiaryList));\\r\\n    }\\r\\n    private _subsidiaryList: Set<IUiAuthSubsidiary> = new Set();\\r\\n\\r\\n    private readonly _config: IUiAuth0Config;\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Accessible through the getPermissionsList and hasPermission methods\\r\\n     */\\r\\n    private _permissionsList: Set<string> = new Set();\\r\\n\\r\\n    private _helper = new JwtHelperService();\\r\\n\\r\\n    constructor(\\r\\n        private readonly _auth0Service: AuthService,\\r\\n        private readonly _configurationService: UiConfigurationService,\\r\\n        private readonly _cookieService: CookieService,\\r\\n    ) {\\r\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\r\\n\\r\\n        // Clear audiences\\r\\n        this._audienceList.clear();\\r\\n        const audiences = this._config.audiences;\\r\\n        if (!audiences || audiences.length === 0) {\\r\\n            console.error(\'No audiences defined in the configuration.\');\\r\\n        }\\r\\n        // Add audiences to the list\\r\\n        audiences.forEach((audience) => {\\r\\n            const existingAudience = Array.from(this._audienceList)\\r\\n                .find((aud) => (audience.name === aud.name) || (audience.audience === aud.audience));\\r\\n            if (existingAudience) {\\r\\n                console.warn(`Warning -> Duplicate audience found.`);\\r\\n            } else {\\r\\n                this._audienceList.add(audience);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        // Clear permissions\\r\\n        this._permissionsList.clear();\\r\\n        this._subsidiaryList.clear();\\r\\n        this._activeOrgGuid = undefined;\\r\\n        // Set observables to null\\r\\n        this.permissionsLoaded$.next(null);\\r\\n        this._unsubscribe$.next();\\r\\n        this._unsubscribe$.complete();\\r\\n    }\\r\\n\\r\\n    //#region Init\\r\\n\\r\\n    /**\\r\\n     * Initializes the application by loading permissions if the user is authenticated.\\r\\n     *\\r\\n     * @returns `Promise<boolean>` A promise that resolves to `true` if the initialization is successful, otherwise `false`.\\r\\n     * @throws {Error} If an error occurs during the initialization process.\\r\\n     */\\r\\n    public async initializeApp(): Promise<any> {\\r\\n        try {\\r\\n            // Verify that the user is logged in\\r\\n            const isAuthenticated = await this.isUserAuthenticated();\\r\\n            if (!isAuthenticated) {\\r\\n                console.warn(\'Warning -> User not authenticated.\');\\r\\n                this._auth0Service.logout();\\r\\n                this._auth0Service.loginWithRedirect();\\r\\n                // Stop execution of the method if the user is not authenticated\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            this._auth0Service.user$.subscribe((user) => {\\r\\n                this._cookieService.set(this._configurationService.appConfig.emailCookieId, user.email);\\r\\n            });\\r\\n\\r\\n            // Reset the permission and init observables\\r\\n            this.permissionsLoaded$.next(false);\\r\\n\\r\\n            // Clear permission\\r\\n            this._permissionsList.clear();\\r\\n            this._subsidiaryList.clear();\\r\\n\\r\\n            // Get entitlement token (cachemode = off)\\r\\n            const token = await this.getDecodedTokenByAudience(this._config.authorizationParams.audience, \'off\');\\r\\n            if (token) {\\r\\n                // Set userguid\\r\\n                this._userGuid = token.user_guid;\\r\\n                // Set rootorg\\r\\n                this._rootOrgGuid = token.root_org_guid;\\r\\n\\r\\n                this.addPermissionsFromDecodedToken(token);\\r\\n\\r\\n                //await this.loadPermissions().then(() => {\\r\\n                this.permissionsLoaded$.next(true);\\r\\n                return true;\\r\\n                //});\\r\\n            } else {\\r\\n                console.error(\'No token available for audience.\');\\r\\n                // Return false on error\\r\\n                return false;\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error initializing app.\');\\r\\n            // Return false on error\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    /**\\r\\n     * Checks if the user is authenticated.\\r\\n     *\\r\\n     * @returns A promise that resolves to a boolean indicating whether the user is authenticated or not.\\r\\n     */\\r\\n    public async isUserAuthenticated(): Promise<boolean> {\\r\\n        try {\\r\\n            return firstValueFrom(this._auth0Service.isAuthenticated$).then((isAuthenticated) => {\\r\\n                return isAuthenticated;\\r\\n            });\\r\\n        } catch {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Polls for an access token at a specified interval.\\r\\n     *\\r\\n     * @returns An observable that emits the access token as a string.\\r\\n     */\\r\\n    public pollAccessToken(): Observable<string> {\\r\\n        return this._pollReset$.pipe(\\r\\n            startWith(0),\\r\\n            switchMap(() =>\\r\\n                interval(this._pollInterval).pipe(\\r\\n                    takeUntil(this._pollReset$),\\r\\n                    switchMap(() =>\\r\\n                        this._auth0Service.getAccessTokenSilently().pipe(\\r\\n                            catchError((error) => {\\r\\n                                console.error(\'Error fetching access token:\', error);\\r\\n                                this._auth0Service.logout();\\r\\n                                this._auth0Service.loginWithRedirect();\\r\\n                                // Complete the observable after redirecting\\r\\n                                return EMPTY;\\r\\n                            })\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            ),\\r\\n            takeUntil(this._unsubscribe$),\\r\\n            shareReplay(1)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Returns the subsidiary list.\\r\\n     *\\r\\n     * @returns An array of IUiAuthSubsidiary objects representing the subsidiary list.\\r\\n     */\\r\\n    private get subsidiaryList(): IUiAuthSubsidiary[] {\\r\\n        return Array.from(this._subsidiaryList);\\r\\n    }\\r\\n\\r\\n    //#region Audience\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Gets the exact audience with the specified name.\\r\\n     *\\r\\n     * @param nameOrPath The name of the audience to get.\\r\\n     * @returns The audience with the specified name, or undefined if not found.\\r\\n     */\\r\\n    private getAudience(nameOrPath: string): IUiAudience | undefined {\\r\\n        let audienceMatch = this.audienceList.find((audience) => audience.name === nameOrPath);\\r\\n        if (!audienceMatch) {\\r\\n            audienceMatch = this.audienceList.find((audience) => audience.audience === nameOrPath);\\r\\n        }\\r\\n        return audienceMatch;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Retrieves the audience from the given path.\\r\\n     *\\r\\n     * @param path - The path to check for audience.\\r\\n     * @returns The audience if a matching endpoint is found, otherwise null.\\r\\n     */\\r\\n    public getAudienceFromPath(path: string): string {\\r\\n        // First check for an exact match to the API endpoint\\r\\n        const matchingAudience = this.audienceList.find((audience) => {\\r\\n            const matchPath = path.includes(audience.endpoint);\\r\\n            return matchPath;\\r\\n        });\\r\\n        return matchingAudience ? matchingAudience.audience : null;\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    //#region Tokens\\r\\n\\r\\n    /**\\r\\n     * Retrieves a token for the specified audience.\\r\\n     *\\r\\n     * @param audienceName - The name of the audience.\\r\\n     * @param cacheMode - The cache mode for the token. Defaults to \'on\'.\\r\\n     * @returns An Observable that emits the token string or undefined.\\r\\n     */\\r\\n    public getToken(audienceName: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\r\\n        try {\\r\\n            // Verify that the user is logged in\\r\\n            if (!this._auth0Service.isAuthenticated$) {\\r\\n                console.error(\' Error -> User not authenticated.\');\\r\\n                return of(undefined);\\r\\n            }\\r\\n\\r\\n            // Request a new JWT if the current one is not valid\\r\\n            const aud = this.getAudience(audienceName);\\r\\n            if (!aud) {\\r\\n                console.error(\' Error -> Audience not found.\');\\r\\n                return of(undefined);\\r\\n            }\\r\\n\\r\\n            return this.getTokenByAudience(aud.audience);\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getToken.\');\\r\\n            return of(undefined);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves a token by audience.\\r\\n     *\\r\\n     * @param audience - The audience for which to retrieve the token.\\r\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\r\\n     * @returns An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.\\r\\n     */\\r\\n    private getTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\r\\n        return this._auth0Service.getAccessTokenSilently({\\r\\n            authorizationParams: {\\r\\n                audience,\\r\\n                activeOrgGuid: this._activeOrgGuid,\\r\\n            },\\r\\n            cacheMode,\\r\\n        }).pipe(\\r\\n            tap(() => {\\r\\n            // Emit a value to reset the polling interval after getting the token\\r\\n                this._pollReset$.next();\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves the decoded token for a given audience.\\r\\n     *\\r\\n     * @param audience - The audience for which to retrieve the token.\\r\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\r\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found.\\r\\n     */\\r\\n    private async getDecodedTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\r\\n        try {\\r\\n            const token = await firstValueFrom(this.getTokenByAudience(audience, cacheMode));\\r\\n            if (!token) {\\r\\n                return undefined;\\r\\n            }\\r\\n            // Decode the token\\r\\n            const decodedToken = this._helper.decodeToken(token);\\r\\n            // Return the decoded token\\r\\n            return decodedToken;\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getDecodedTokenByAudience.\');\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves and decodes a token with the specified name.\\r\\n     *\\r\\n     * @param name - The name of the token to retrieve and decode.\\r\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.\\r\\n     */\\r\\n    public async getDecodedToken(name: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\r\\n        try {\\r\\n            const token = await firstValueFrom(this.getToken(name, cacheMode));\\r\\n            if (!token) {\\r\\n                return undefined;\\r\\n            }\\r\\n\\r\\n            // Decode the token\\r\\n            const decodedToken = this._helper.decodeToken(token);\\r\\n            // Return the decoded token\\r\\n            return decodedToken;\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getDecodedToken.\');\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    //#region Permissions\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Adds permissions from the decoded token.\\r\\n     *\\r\\n     * @param decodedToken - The decoded token containing permissions.\\r\\n     */\\r\\n    private addPermissionsFromDecodedToken(decodedToken: any) {\\r\\n        try {\\r\\n            if (decodedToken && decodedToken.permissions) {\\r\\n                // Add permissions to the list\\r\\n                this.addPermissions(decodedToken.permissions);\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error adding permissions from decoded token.\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Loads permissions from the user\'s token.\\r\\n     *\\r\\n     * @returns `Promise<void>` A promise that resolves when the permissions have been loaded.\\r\\n     */\\r\\n    private async loadPermissions(): Promise<void> {\\r\\n        try {\\r\\n            await Promise.all(\\r\\n                Array.from(this._audienceList)\\r\\n                    .map((audience) => {\\r\\n                        return this.getDecodedToken(audience.name); // not by audience\\r\\n                    })\\r\\n            ).then((tokens) => {\\r\\n                if (tokens.length > 0) {\\r\\n                    tokens.forEach((token) => {\\r\\n                        // Load permissions from the token\\r\\n                        this.addPermissionsFromDecodedToken(token);\\r\\n                    });\\r\\n                }\\r\\n            });\\r\\n        } catch (error) {\\r\\n            console.error(\'Error loading permissions.\');\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    /**\\r\\n     * Checks if a specific permission exists.\\r\\n     *\\r\\n     * @param permission The permission to check.\\r\\n     * @returns True if the permission exists, false otherwise.\\r\\n     */\\r\\n    public hasPermission(permission: string): boolean {\\r\\n        // Check for an exact permission match\\r\\n        if (this._permissionsList.has(permission)) {\\r\\n            return true;\\r\\n        } else {\\r\\n            // Check for a fuzzy match on the audience portion of the permission\\r\\n            const permissionFound = Array.from(this._permissionsList).find((p) => p.includes(permission));\\r\\n            if (permissionFound) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if all specified permissions exist.\\r\\n     *\\r\\n     * @param permissions The permissions to check.\\r\\n     * @returns True if all permissions exist, false otherwise.\\r\\n     */\\r\\n    public hasPermissions(permissions: string[]): boolean {\\r\\n        return permissions.every((permission) => this.hasPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if any of the specified permissions exist.\\r\\n     *\\r\\n     * @param permissions The permissions to check.\\r\\n     * @returns True if any permission exists, false otherwise.\\r\\n     */\\r\\n    public hasAnyPermission(permissions: string[]): boolean {\\r\\n        return permissions.some((permission) => this.hasPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the permissions have been loaded.\\r\\n     *\\r\\n     * @returns True if the permissions have been loaded, false otherwise.\\r\\n     */\\r\\n    public arePermissionsLoaded(): boolean {\\r\\n        return this.permissionsLoaded$.getValue();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds a new permission if it does not already exist.\\r\\n     *\\r\\n     * @param permission The permission to add.\\r\\n     */\\r\\n    private addPermission(permission: string): void {\\r\\n        this._permissionsList.add(permission);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds multiple permissions.\\r\\n     *\\r\\n     * @param permissions The permissions to add.\\r\\n     */\\r\\n    private addPermissions(permissions: string[]): void {\\r\\n        permissions.forEach((permission) => this.addPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes a specific permission.\\r\\n     *\\r\\n     * @param permission The permission to remove.\\r\\n     */\\r\\n    private removePermission(permission: string): void {\\r\\n        this._permissionsList.delete(permission);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the list of all permissions.\\r\\n     *\\r\\n     * @returns An array of all permissions.\\r\\n     */\\r\\n    public getPermissionsList(): string[] {\\r\\n        return Array.from(this._permissionsList);\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n}\\r\\n","properties":[{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"partyGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24}],"indexSignatures":[],"kind":165,"description":"<p>Represents a subsidiary.</p>\\n<p>See <code>IAspSubsidiary</code></p>\\n","rawdescription":"\\n\\nRepresents a subsidiary.\\n\\nSee `IAspSubsidiary`\\n","methods":[]},{"name":"IUiClientSideFilter","id":"interface-IUiClientSideFilter-a78af670f67474f678fd5107d592cf6836d7e5ecf2b2333844cde20d82808f883830f97723859e86e680f3f1aa66c907038336c8df404e9c29b452f80e64b3cf","file":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiFilterModel {\\r\\n    [colId: string]: IUiServerSideFilter | IUiClientSideFilter;\\r\\n}\\r\\n\\r\\nexport interface IUiServerSideFilter {\\r\\n    filterType: string;\\r\\n    type: string;\\r\\n    filter: string;\\r\\n}\\r\\n\\r\\nexport interface IUiClientSideFilter {\\r\\n    filterType: string;\\r\\n    values: string[];\\r\\n}\\r\\n","properties":[{"name":"filterType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"values","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiComboboxRendererParams","id":"interface-IUiComboboxRendererParams-0220e49a660cfbd6a8ce00b826c9c2edc919bb3ba38e032994a9efe3ed1051c9d162271ab72914c0f4f67a1e29c1c7abe6cf27e9599c353d03705ee995cc5f90","file":"libs/ui/src/lib/modules/grid/components/combobox-renderer/interface/combobox-renderer-params.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ICellRendererParams } from \'ag-grid-enterprise\';\\r\\nimport { IUiDropdownPlusOption } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\r\\n\\r\\n/**\\r\\n * Interface for the combobox renderer params coming in from Ag-Grid\\r\\n */\\r\\nexport interface IUiComboboxRendererParams extends ICellRendererParams {\\r\\n    options?: IUiDropdownPlusOption[];\\r\\n    maxItemsToShow?: number;\\r\\n    defaultValue?: IUiDropdownPlusOption[];\\r\\n    placeholderValue?: string;\\r\\n    multiSelect?: boolean;\\r\\n    showSearch?: boolean;\\r\\n    showSelectClearBtns?: boolean;\\r\\n}\\r\\n","properties":[{"name":"defaultValue","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":true,"description":"","line":10},{"name":"maxItemsToShow","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":9},{"name":"multiSelect","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12},{"name":"options","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":true,"description":"","line":8},{"name":"placeholderValue","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11},{"name":"showSearch","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"showSelectClearBtns","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14}],"indexSignatures":[],"kind":165,"description":"<p>Interface for the combobox renderer params coming in from Ag-Grid</p>\\n","rawdescription":"\\n\\nInterface for the combobox renderer params coming in from Ag-Grid\\n","methods":[],"extends":"ICellRendererParams"},{"name":"IUiCompanySearchItem","id":"interface-IUiCompanySearchItem-3ec133e96feb132a0b5300515071dbce9962b1b6201ecb6daeb67a5cc352b563fa981358f8e3baaf65e1c8d3a5c0184cdeea8c40064d2eab8a35729d683adb50","file":"libs/ui/src/lib/modules/global-search/interfaces/company-search-item.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiCompanySearchItem {\\r\\n    companyId: number;\\r\\n    companyName: string;\\r\\n    domainNames: string[];\\r\\n    companyTradeNames: string[];\\r\\n    rootCompanyName: string;\\r\\n}\\r\\n","properties":[{"name":"companyId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"companyName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"companyTradeNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":5},{"name":"domainNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":4},{"name":"rootCompanyName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiCompanySearchResponse","id":"interface-IUiCompanySearchResponse-49ffdb5ebf135656ece8734df8b2f190c0aaad6ff4638e6ab8955668242083ba5714d3c5c2aaf29ac901795892a6788a2578b07e9370f727fe289a7510b3680f","file":"libs/ui/src/lib/modules/global-search/interfaces/company-search-response.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiCompanySearchItem } from \'./company-search-item.interface\';\\r\\n\\r\\nexport interface IUiCompanySearchResponse {\\r\\n    companySearchResult: IUiCompanySearchItem[];\\r\\n    totalCount: number;\\r\\n}\\r\\n","properties":[{"name":"companySearchResult","deprecated":false,"deprecationMessage":"","type":"IUiCompanySearchItem[]","optional":false,"description":"","line":4},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiConsentResponse","id":"interface-IUiConsentResponse-8d2cc75c32e89aa6ab351033214332044b529940643aab0ae4fa56420703ea7f7f419af7daffbd6d87fd088d85fd2e567522629af531f98cb0112eb3901a4d72","file":"libs/ui/src/lib/interfaces/IUiConsentResponse.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiConsentResponse {\\r\\n    consentGiven: boolean;\\r\\n    responseCode: number;\\r\\n}\\r\\n","properties":[{"name":"consentGiven","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":2},{"name":"responseCode","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiConsentService","id":"interface-IUiConsentService-7a7fb41af3d5944703e542f75afbfe71e6ad7a1255622b0f18bbc77f28c853738f905ba05a5591fd6d4d85a547b20d2416b4fd7f54bfc1f67f7ceb8fb6d8e33e","file":"libs/ui/src/lib/interfaces/consent-service.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiConsentResponse } from \'./IUiConsentResponse\';\\r\\nimport { Observable } from \'rxjs\';\\r\\n\\r\\nexport interface IUiConsentService {\\r\\n    getReturnUrl(): string;\\r\\n    getConsentStatus(): Observable<IUiConsentResponse>;\\r\\n    giveConsent(email: string): Observable<IUiConsentResponse>;\\r\\n    logout(): void; // This method is required as a workaround for the shared lib consent module\\r\\n}\\r\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"getConsentStatus","args":[],"optional":false,"returnType":"Observable<IUiConsentResponse>","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":""},{"name":"getReturnUrl","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":""},{"name":"giveConsent","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IUiConsentResponse>","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":""}]},{"name":"IUiContactRelationship","id":"interface-IUiContactRelationship-d3a0efc4b2fc1774842fd507dd2babd82c09396d98319e325285ea4fdf2b039237a5e5190f54bc38a663285431bf6df888d751436db8497e6841ad6cd7bd13e4","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-relationship.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiOrganization, IUiRegulationShort } from \'.\';\\r\\n\\r\\nexport interface IUiContactRelationship {\\r\\n    contactGuid: string;\\r\\n    organization: IUiOrganization;\\r\\n    regulations: IUiRegulationShort[];\\r\\n}\\r\\n","properties":[{"name":"contactGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"organization","deprecated":false,"deprecationMessage":"","type":"IUiOrganization","optional":false,"description":"","line":6},{"name":"regulations","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort[]","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiContactRole","id":"interface-IUiContactRole-379f1d3c19973c5892ae6bbb880ab159dc0495fe91b9dcefbe0e3cc2481d2ac84eeb9f1c1080915c870748f2d4d4722e5219f7ff3d5c4d3a0506effd2e168c47","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-role.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiOrganization } from \'./organization.interface\';\\r\\n\\r\\nexport interface IUiContactRole {\\r\\n    organizations: IUiOrganization[];\\r\\n}\\r\\n","properties":[{"name":"organizations","deprecated":false,"deprecationMessage":"","type":"IUiOrganization[]","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiCsvParserConfig","id":"interface-IUiCsvParserConfig-9af71b502225bac44d6332e7d28e8dac55a13f6892d884510064b0275bf902396ff2fb9f87ba978d18652af4e71ddcd06c4609147698ac06b75905f1e9a9ef31","file":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// Rxjs\\r\\nimport { Observable, Observer } from \'rxjs\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiCsvParserService {\\r\\n    private _defaultConfig: IUiCsvParserConfig = {\\r\\n        header: true,\\r\\n        delimiter: \',\',\\r\\n    };\\r\\n\\r\\n    public parse(csvFile: File, config: IUiCsvParserConfig): Observable<Array<any> | string> {\\r\\n        config = {\\r\\n            ...this._defaultConfig,\\r\\n            ...config,\\r\\n        };\\r\\n\\r\\n        const parser$ = new Observable((observer: Observer<Array<any> | string>) => {\\r\\n            try {\\r\\n                if (!this.isCsvFile(csvFile)) {\\r\\n                    observer.error(\'NOT_A_CSV_FILE\');\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                const reader = new FileReader();\\r\\n                reader.readAsText(csvFile);\\r\\n\\r\\n                reader.onload = () => {\\r\\n                    const csvData = reader.result;\\r\\n\\r\\n                    if (!csvData) {\\r\\n                        observer.error(\'EMPTY_FILE\');\\r\\n                        return;\\r\\n                    }\\r\\n\\r\\n                    const csvRecordsArray = this.csvStringToArray((csvData as string).trim(), config.delimiter);\\r\\n                    const headersRow = this.getHeaderArray(csvRecordsArray);\\r\\n                    const csvRecords = this.getDataRecordsArrayFromCsvFile(csvRecordsArray, headersRow.length, config);\\r\\n\\r\\n                    observer.next(csvRecords);\\r\\n                    observer.complete();\\r\\n                };\\r\\n\\r\\n                reader.onerror = () => {\\r\\n                    observer.error(\'BAD_CSV_DATA_FORMAT\');\\r\\n                };\\r\\n            } catch (error) {\\r\\n                observer.error(\'UNKNOWN_ERROR\');\\r\\n            }\\r\\n        });\\r\\n\\r\\n        return parser$;\\r\\n    }\\r\\n\\r\\n    public csvStringToArray(csvDataString: string, delimiter: string) {\\r\\n        const regexPattern = new RegExp(\\r\\n            `(\\\\\\\\${delimiter}|\\\\\\\\r?\\\\\\\\n|\\\\\\\\r|^)(?:\\\\\\"((?:\\\\\\\\\\\\\\\\.|\\\\\\"\\\\\\"|[^\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\"|([^\\\\\\\\${delimiter}\\\\\\"\\\\\\\\r\\\\\\\\n]*))`,\\r\\n            \'gi\'\\r\\n        );\\r\\n        const resultCsv = [[]];\\r\\n        let matchedPatternArray = regexPattern.exec(csvDataString);\\r\\n\\r\\n        while (matchedPatternArray) {\\r\\n            if (matchedPatternArray[1].length && matchedPatternArray[1] !== delimiter) {\\r\\n                resultCsv.push([]);\\r\\n            }\\r\\n\\r\\n            const cleanValue = matchedPatternArray[2]\\r\\n                ? matchedPatternArray[2].replace(new RegExp(\'[\\\\\\\\\\\\\\\\\\"](.)\', \'g\'), \'$1\')\\r\\n                : matchedPatternArray[3];\\r\\n            resultCsv[resultCsv.length - 1].push(cleanValue);\\r\\n            matchedPatternArray = regexPattern.exec(csvDataString);\\r\\n        }\\r\\n\\r\\n        return resultCsv;\\r\\n    }\\r\\n\\r\\n    public getDataRecordsArrayFromCsvFile(csvRecordsArray: any, headerLength: number, config: IUiCsvParserConfig) {\\r\\n        const dataArr = [];\\r\\n        const headersArray = csvRecordsArray[0];\\r\\n        const startingRowToParseData = config.header ? 1 : 0;\\r\\n\\r\\n        for (let i = startingRowToParseData; i < csvRecordsArray.length; i++) {\\r\\n            const data = csvRecordsArray[i];\\r\\n\\r\\n            if (data.length === headerLength && config.header) {\\r\\n                const csvRecord = {};\\r\\n\\r\\n                for (let j = 0; j < data.length; j++) {\\r\\n                    if (data[j] === undefined || data[j] === null) {\\r\\n                        csvRecord[headersArray[j]] = \'\';\\r\\n                    } else {\\r\\n                        csvRecord[headersArray[j]] = data[j].trim();\\r\\n                    }\\r\\n                }\\r\\n                dataArr.push(csvRecord);\\r\\n            } else {\\r\\n                dataArr.push(data);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return dataArr;\\r\\n    }\\r\\n\\r\\n    public isCsvFile(file: File) {\\r\\n        return file.name.toLowerCase().endsWith(\'.csv\');\\r\\n    }\\r\\n\\r\\n    public getHeaderArray(csvRecordsArr: any) {\\r\\n        const headers = csvRecordsArr[0];\\r\\n        const headerArray = [];\\r\\n\\r\\n        for (const header of headers) {\\r\\n            headerArray.push(header);\\r\\n        }\\r\\n\\r\\n        return headerArray;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IUiCsvParserConfig {\\r\\n    header?: boolean;\\r\\n    delimiter?: string;\\r\\n}\\r\\n","properties":[{"name":"delimiter","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":126},{"name":"header","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":125}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiCustomHeaderParams","id":"interface-IUiCustomHeaderParams-782883136e592fa6d00fc9ee791447b22f510a8edebcc077c4632e544ea16036d843b35eb610bd681065021bb5ba4b00dd9afcf7c075c5bb09111b04b4354c83","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\r\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\r\\n\\r\\nexport interface IUiCustomHeaderParams {\\r\\n    menuIcon: string;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtn {\\r\\n    icon?: string;\\r\\n    text: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    clicked: (params: IUiActionCellRendererParams) => void;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtnConfig {\\r\\n    itemId: string;\\r\\n    rowId: string;\\r\\n    inlineIcons?: boolean;\\r\\n    showIconsInMenu?: boolean;\\r\\n    showLabel?: boolean;\\r\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\r\\n}\\r\\n\\r\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\r\\n\\r\\nexport interface IUiActionDivider {\\r\\n    divider?: boolean;\\r\\n    visible?: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiSelectionChangeParams {\\r\\n    gridId: string;\\r\\n    selectedRows: RowNode[];\\r\\n}\\r\\n\\r\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\r\\n    gridId: any;\\r\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\r\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n}\\r\\n","properties":[{"name":"menuIcon","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiDropdownConfig","id":"interface-IUiDropdownConfig-64aef9861116d6216e7b3eca8587d567630172e495791affaaec19806d034e89eb0e509f46fe4c2573f046af577a725bdf0c527968dad1bc761c814a03b6d664","file":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { IUiPageHeaderItem } from \'@lib/modules/layout/services/page-header-service/page-header.service\';\\r\\n\\r\\nexport interface IUiDropdownConfig {\\r\\n    id: string;\\r\\n    options: Array<IUiPageHeaderItem>;\\r\\n    selectedItem: IUiPageHeaderItem;\\r\\n    disabled: boolean;\\r\\n    type?: string;\\r\\n    tooltip?: string;\\r\\n    allCaps?: boolean;\\r\\n    placeHolderText?: string;\\r\\n    onChange?: (e: any) => void;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-header-drop-down\',\\r\\n    templateUrl: \'./drop-down.component.html\',\\r\\n    styleUrls: [\'./drop-down.component.scss\'],\\r\\n})\\r\\nexport class UiHeaderDropDownComponent implements OnInit {\\r\\n    @Input() public config: IUiDropdownConfig = {} as IUiDropdownConfig;\\r\\n    public isOpen = false;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        if (this.config !== undefined && this.config.selectedItem === undefined && this.config.options !== undefined) {\\r\\n            this.config.selectedItem = this.config.options[0];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onOpenChange(state: boolean) {\\r\\n        this.isOpen = state;\\r\\n    }\\r\\n\\r\\n    public changeSelectedOption(option: any) {\\r\\n        this.config.selectedItem = option;\\r\\n        if (this.config.onChange !== undefined) {\\r\\n            this.config.onChange(option);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"allCaps","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":11},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"onChange","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":13},{"name":"options","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":6},{"name":"placeHolderText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"selectedItem","deprecated":false,"deprecationMessage":"","type":"IUiPageHeaderItem","optional":false,"description":"","line":7},{"name":"tooltip","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiDropdownOption","id":"interface-IUiDropdownOption-bdf6d9562d6903f78dee4009c5137c89e12283c30acbb6ef5a278aa9792d2df6194bcbcc62f59df0690223d97e399c2ca3065d653d2d82f2e4f442c8ffb9890d","file":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/interfaces/dropdown.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiDropdownOption {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    disabled: boolean;\\r\\n    /**\\r\\n     * This value is read into the form\\r\\n     */\\r\\n    readValue: any;\\r\\n    /**\\r\\n     * Note: \'value\' is used in UiDropdownPlusComponent selected state on options\\r\\n     */\\r\\n    value: boolean;\\r\\n}\\r\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"readValue","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"<p>This value is read into the form</p>\\n","line":8,"rawdescription":"\\n\\nThis value is read into the form\\n"},{"name":"value","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>Note: &#39;value&#39; is used in UiDropdownPlusComponent selected state on options</p>\\n","line":12,"rawdescription":"\\n\\nNote: \'value\' is used in UiDropdownPlusComponent selected state on options\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiDropdownPlusOption","id":"interface-IUiDropdownPlusOption-323de872693e222003dc52a7e29feb9a0f2b7a9ac2ec8c9778da815b72688e37aec12a9012adb773fcc1880a060d35462df8a5c19a7fe7102e62ea59191dfd51","file":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\r\\n    AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input,\\r\\n    OnInit, Output, QueryList, ViewChild, ViewChildren\\r\\n} from \'@angular/core\';\\r\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\nimport { BehaviorSubject } from \'rxjs\';\\r\\nimport { debounceTime } from \'rxjs/operators\';\\r\\n\\r\\nexport interface IUiDropdownPlusOption {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    disabled: boolean;\\r\\n    value: boolean;\\r\\n    data?: unknown;\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-dropdown-plus\',\\r\\n    templateUrl: \'./dropdown-plus.component.html\',\\r\\n    styleUrls: [\'./dropdown-plus.component.scss\'],\\r\\n})\\r\\nexport class UiDropdownPlusComponent implements OnInit {\\r\\n    @Input() public externalTriggerEleId: string;\\r\\n    @Input() public id: string;\\r\\n\\r\\n    @Input() public set label(label: string) {\\r\\n        this._label = label;\\r\\n        this.triggerLabel = label;\\r\\n        setTimeout(() => {\\r\\n            this.updateTriggerLabel();\\r\\n        });\\r\\n    };\\r\\n    public get label() {\\r\\n        return this._label;\\r\\n    }\\r\\n\\r\\n    @Input() public set setOptions(options: IUiDropdownPlusOption[]) {\\r\\n        this.options = options;\\r\\n        this._optionsBackup = this.options;\\r\\n        this.updateTriggerLabel();\\r\\n    };\\r\\n    @Input() public multiSelect = true;\\r\\n    @Input() public singleSelectAutoClose = true;\\r\\n    @Input() public noBorder = false;\\r\\n    @Input() public view = \'button\';\\r\\n    @Input() public animIcon = true;\\r\\n    @Input() public icon = \'bi-filter\';\\r\\n    @Input() public maxItemsShown = 5;\\r\\n    @Input() public small = false;\\r\\n    @Input() public showSearch = false;\\r\\n    @Input() public showSelectClearBtns = false;\\r\\n    @Input() public showCheckbox = true;\\r\\n    @Input() public disabled = false;\\r\\n    @Input() public loading = false;\\r\\n    @Input() public paddingTop = 0;\\r\\n\\r\\n    @Output() public selectionChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public openChange: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public triggerClicked: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public searchChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public optionsCleared: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @ViewChild(\'nbgDropdown\') public nbgDropdown: NgbDropdown;\\r\\n    @ViewChild(\'ngbDropPanel\') public ngbDropPanel: ElementRef;\\r\\n    @ViewChildren(\'menuItemsRef\') public menuItemsRef: QueryList<ElementRef>;\\r\\n\\r\\n    public options: IUiDropdownPlusOption[];\\r\\n    public selectedOptions: IUiDropdownPlusOption[] = [];\\r\\n    public searchText = \'\';\\r\\n    public triggerLabel = \'\';\\r\\n    public disabledItemsLength = 0;\\r\\n    public menuOpen = false;\\r\\n    public optionTooltips = [];\\r\\n    public tooltipText = \'\';\\r\\n    public iconClass = [\'anim\', \'bi-caret-down-fill\'];\\r\\n    public focusIndex = -1;\\r\\n    public selectedList: IUiDropdownPlusOption[] = [];\\r\\n\\r\\n    private _label = \'\';\\r\\n    private _hilighted: HTMLElement;\\r\\n    private _optionsBackup;\\r\\n    private _loading = new BehaviorSubject<boolean>(false);\\r\\n\\r\\n    constructor() { }\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.triggerLabel = this._label;\\r\\n\\r\\n        this._optionsBackup = this.options;\\r\\n\\r\\n        this._loading.pipe(debounceTime(500)).subscribe((value) => {\\r\\n            this.loading = false;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public onClickedOutside(e) {\\r\\n        // console.log(\'onClickedOutside\')\\r\\n    }\\r\\n\\r\\n    public setFocusOnFirstMenuItem(): void {\\r\\n\\r\\n        setTimeout(() => {\\r\\n            if (document.getElementById(this.id + \'_searchTextInput\') !== null) {\\r\\n                document.getElementById(this.id + \'_searchTextInput\').focus();\\r\\n            }\\r\\n        }, 200);\\r\\n    }\\r\\n\\r\\n    public clearHilighted() {\\r\\n        this.focusIndex = -1;\\r\\n        if (this._hilighted !== undefined) {\\r\\n\\r\\n            this._hilighted.classList.remove(\'hilighted-item\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public unSelectItem(itemId: string) {\\r\\n        this.options.find((item) => { return item.id === itemId; }).value = false;\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This will fetch the current selected list of items. It will use a snapshot of the options and compare the\\r\\n     *   stored selected items with the current ones.\\r\\n     *\\r\\n     * @returns IUiDropdownPlusOption[] - The list of selected items\\r\\n     */\\r\\n    public getSelectedItems() {\\r\\n\\r\\n        // Get the selected items by comparing the options with the backup/snapshot\\r\\n        if (this._optionsBackup !== undefined) {\\r\\n            this.selectedList = this._optionsBackup.filter((name) => {\\r\\n                return name.value === true;\\r\\n            });\\r\\n        }\\r\\n\\r\\n        return this.selectedList;\\r\\n    }\\r\\n\\r\\n    public clearSelection() {\\r\\n        this.options.forEach((option) => { option.value = false; });\\r\\n        this.clearHilighted();\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    public clearSearch() {\\r\\n        this.searchText = \'\';\\r\\n        this.options = this._optionsBackup;\\r\\n    }\\r\\n\\r\\n    public updateTriggerLabel(selectionChanged = true) {\\r\\n\\r\\n        setTimeout(() => {\\r\\n            const prevSelectedOptions = this.selectedOptions;\\r\\n\\r\\n            this.selectedOptions = this._optionsBackup.filter((name) => {\\r\\n                return name.value === true;\\r\\n            });\\r\\n\\r\\n            if (this.selectedOptions.length === 0) {\\r\\n                this.triggerLabel = this._label;\\r\\n            }\\r\\n            else if (this.selectedOptions.length === 1) {\\r\\n                this.triggerLabel = this.selectedOptions[0].label;\\r\\n            }\\r\\n            else {\\r\\n                this.triggerLabel = this._label + ` (${this.selectedOptions.length})`;\\r\\n            }\\r\\n\\r\\n            this.disabledItemsLength = this._optionsBackup.filter((name) => {\\r\\n                return name.disabled === true;\\r\\n            }).length;\\r\\n        }, 100);\\r\\n\\r\\n    }\\r\\n\\r\\n    public triggerClick() {\\r\\n        if (this.disabled === false && this.nbgDropdown !== undefined && this.menuOpen === false) {\\r\\n            this.nbgDropdown.open();\\r\\n        }\\r\\n\\r\\n        const triggerEle = document.getElementById(this.externalTriggerEleId);\\r\\n\\r\\n        if (this.externalTriggerEleId !== undefined && this.externalTriggerEleId !== null) {\\r\\n\\r\\n            if (triggerEle !== undefined && triggerEle !== null) {\\r\\n\\r\\n                const dropPanelEle = document.getElementById(this.id + \'_drop-panel\');\\r\\n\\r\\n                dropPanelEle.style.top = triggerEle.offsetTop + triggerEle.offsetHeight + this.paddingTop + \'px\';\\r\\n                dropPanelEle.style.left = triggerEle.offsetLeft + \'px\';\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.triggerClicked.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    public onOptionFocus(e) {\\r\\n        this.showTooltip(e);\\r\\n    }\\r\\n\\r\\n    public showTooltip(e) {\\r\\n\\r\\n        const ele: HTMLElement = e.target.getElementsByClassName(\'text-truncate\')[0];\\r\\n\\r\\n        if (ele.scrollWidth > ele.offsetWidth) {\\r\\n            this.tooltipText = e.target.innerText;\\r\\n        }\\r\\n        else {\\r\\n            this.tooltipText = \'\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public isElementVisible(el, holder) {\\r\\n        holder = holder || document.body;\\r\\n        const { top, bottom, height } = el.getBoundingClientRect();\\r\\n        const holderRect = holder.getBoundingClientRect();\\r\\n\\r\\n        if (bottom > holderRect.bottom) {\\r\\n            return false;\\r\\n        }\\r\\n        else {\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onOpenChange(open: boolean) {\\r\\n\\r\\n        if (this.disabled === false) {\\r\\n            this.menuOpen = open;\\r\\n\\r\\n            const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\r\\n            const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\r\\n\\r\\n            if (dropPanel !== null) {\\r\\n                dropPanel.style.visibility = \'hidden\';\\r\\n                optionsPanel.style.maxHeight = \'0\';\\r\\n\\r\\n                if (open === true) {\\r\\n\\r\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\r\\n                    this.focusIndex = -1;\\r\\n                    this.setFocusOnFirstMenuItem();\\r\\n                    setTimeout(() => {\\r\\n                        this.checkHeight();\\r\\n                        dropPanel.style.visibility = \'visible\';\\r\\n                        if (optionsPanel !== null) {\\r\\n                            document.getElementById(this.id + \'_options-panel\').focus();\\r\\n                        }\\r\\n                    }, 50);\\r\\n                }\\r\\n                else {\\r\\n                    this.clearHilighted();\\r\\n                    this.clearSearch();\\r\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            this.menuOpen = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkWidth(element) {\\r\\n\\r\\n        if (element.scrollWidth > element.offsetWidth) {\\r\\n            return true;\\r\\n        }\\r\\n        else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkHeight() {\\r\\n\\r\\n        const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\r\\n        const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\r\\n\\r\\n        if (optionsPanel !== null && dropPanel !== null && this.options.length !== 0) {\\r\\n            dropPanel.style.visibility = \'hidden\';\\r\\n            const menuItemHeight = Math.ceil(this.menuItemsRef.get(0).nativeElement.getBoundingClientRect().height);\\r\\n\\r\\n            if (this.options.length < this.maxItemsShown) {\\r\\n                optionsPanel.style.height = String(menuItemHeight * this.options.length + \'px\');\\r\\n            }\\r\\n            else {\\r\\n                optionsPanel.style.height = String(menuItemHeight * this.maxItemsShown + \'px\');\\r\\n            }\\r\\n\\r\\n            optionsPanel.style.maxHeight = String(menuItemHeight * this.maxItemsShown + \'px\');\\r\\n            dropPanel.style.visibility = \'visible\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onSearchChange() {\\r\\n\\r\\n        this.focusIndex = -1;\\r\\n        if (this.searchText.length !== 0) {\\r\\n            const tempSearch = this.searchText.toLowerCase();\\r\\n            const temp = this._optionsBackup.filter((name) => name.label.toLowerCase().includes(tempSearch));\\r\\n\\r\\n            this.loading = true;\\r\\n            this._loading.next(true);\\r\\n            if (temp.length !== 0) {\\r\\n                this.options = temp;\\r\\n            }\\r\\n            else {\\r\\n                this.options = [];\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            this.options = this._optionsBackup;\\r\\n        }\\r\\n\\r\\n        setTimeout(() => {\\r\\n\\r\\n            this.updateTriggerLabel(false);\\r\\n            this.checkHeight();\\r\\n            this.searchChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n        });\\r\\n\\r\\n        this._loading.next(true);\\r\\n    }\\r\\n\\r\\n    public onMouseOver(event) {\\r\\n        this.showTooltip(event);\\r\\n    }\\r\\n\\r\\n    public onOptionClick(option: IUiDropdownPlusOption, event: PointerEvent) {\\r\\n\\r\\n        event.preventDefault();\\r\\n        setTimeout(() => {\\r\\n            option.value = !option.value;\\r\\n\\r\\n            this.clearHilighted();\\r\\n            this.focusIndex = this.options.findIndex((tempOption) => { return tempOption.id === option.id; });\\r\\n            if (option.disabled === false || option.disabled === null) {\\r\\n                if (this.multiSelect === false) {\\r\\n\\r\\n                    // Set all others to false\\r\\n                    this.options.forEach((tempOption) => {\\r\\n                        if (tempOption.id !== option.id) {\\r\\n                            tempOption.value = false;\\r\\n                        }\\r\\n                    });\\r\\n                    // Close the dropdown panel\\r\\n                    if (this.singleSelectAutoClose === true) {\\r\\n                        this.nbgDropdown.close();\\r\\n                    }\\r\\n                }\\r\\n                this.updateTriggerLabel();\\r\\n                this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n            }\\r\\n        }, 50);\\r\\n    }\\r\\n\\r\\n    public onSelectAllClick() {\\r\\n\\r\\n        this.options.forEach((option) => {\\r\\n            if (option.disabled === false) {\\r\\n                option.value = true;\\r\\n            }\\r\\n        });\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n        this.clearHilighted();\\r\\n    }\\r\\n\\r\\n    public onClearClick() {\\r\\n        this.options.forEach((option) => {\\r\\n            if (option.disabled === false) {\\r\\n                option.value = false;\\r\\n            }\\r\\n        });\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n        this.clearHilighted();\\r\\n        this.optionsCleared.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    public onSearchClearClick() {\\r\\n        this.searchText = \'\';\\r\\n        this.onSearchChange();\\r\\n    }\\r\\n\\r\\n    public onKeyDown(event: KeyboardEvent) {\\r\\n\\r\\n        if (event.key === \'Escape\') {\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n        }\\r\\n\\r\\n        this.updateTriggerLabel();\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":15},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"value","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiFeatureFlagConfig","id":"interface-IUiFeatureFlagConfig-c0f7fff62aa3051515e1db4b1a2b5be6ca647b2551533aed5d5dc2b4fb90dcfdaf24351d890c731c62005329d5f1f6710f807c8d0b722a85d36d3121b2a8ecb1","file":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\nimport { Observable, of, ReplaySubject, switchMap } from \'rxjs\';\\r\\nimport * as LDClient from \'launchdarkly-js-client-sdk\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\r\\n\\r\\n/* eslint-disable max-len */\\r\\n/* Note\\r\\n There\'s a bunch of logic involving observers going on in this class. The reason for this is that the LD Client needs the token but the token (or lack thereof) isn\'t available right away.\\r\\n We have to wait for the Auth0 library to determine if the user is authenticated then either set the token to empty if they aren\'t or retrieve the token if they are.\\r\\n The tricky part is that we could have a request for a FF before that token has been set. We force the evaluation method to wait until the client has been setup before trying to get a value.\\r\\n We use the ReplaySubject\\r\\n*/\\r\\n/* eslint-enable max-len */\\r\\n\\r\\nexport interface IUiFeatureFlagConfig {\\r\\n    key: string;\\r\\n    localFlagPath: string | undefined;\\r\\n}\\r\\n\\r\\nexport interface IUiLocalFlagsData { [key: string]: boolean };\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiFeatureFlagService {\\r\\n    private _featureFlagConfig: IUiFeatureFlagConfig;\\r\\n    private _evaluateFunction: (string, boolean) => Observable<boolean>;\\r\\n    //LD Flags\\r\\n    private _client: LDClient.LDClient | null = null;\\r\\n    private _clientSubject = new ReplaySubject<LDClient.LDClient>(1);\\r\\n\\r\\n    //Local Flags\\r\\n    private _localFlagsData: IUiLocalFlagsData | null = null;\\r\\n    private _localFlagsDataSubject = new ReplaySubject<IUiLocalFlagsData>(1);\\r\\n\\r\\n    constructor(\\r\\n        public configurationService: UiConfigurationService,\\r\\n        private _authService: UiAuthService,\\r\\n        private _httpClient: HttpClient,\\r\\n    ) {\\r\\n        this._featureFlagConfig = configurationService.getConfig<IUiFeatureFlagConfig>(\'launchDarkly\');\\r\\n\\r\\n        //Determine which evaluate function to use\\r\\n        const useLocalFile = this._featureFlagConfig.localFlagPath !== undefined && this._featureFlagConfig.localFlagPath.length !== 0;\\r\\n        const evaluateFunction = useLocalFile ? this.evaluateFlagUsingLocalFile : this.evaluateFlagUsingLDClient;\\r\\n        this._evaluateFunction = evaluateFunction.bind(this);\\r\\n\\r\\n        if (!useLocalFile) {\\r\\n            this._authService.permissionsLoaded$.subscribe((permissionsLoaded) => {\\r\\n                if (permissionsLoaded && !this._client) {\\r\\n                    this.initializeClient();\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public isFlagOn(featureFlagName: string, defaultValue: boolean = false): Observable<boolean> {\\r\\n        return this._evaluateFunction(featureFlagName, defaultValue);\\r\\n    }\\r\\n\\r\\n    private evaluateFlagUsingLDClient(featureFlagName: string, defaultValue): Observable<boolean> {\\r\\n        return this._clientSubject.pipe(\\r\\n            switchMap((client) => of(client.variation(featureFlagName, defaultValue)))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private evaluateFlagUsingLocalFile(featureFlagName: string, defaultValue): Observable<boolean> {\\r\\n        if (this._localFlagsData === null) {\\r\\n            this._httpClient.get<IUiLocalFlagsData>(this._featureFlagConfig.localFlagPath)\\r\\n                .subscribe((data) => {\\r\\n                    this._localFlagsData = data;\\r\\n                    this._localFlagsDataSubject.next(data);\\r\\n                });\\r\\n        }\\r\\n\\r\\n        return this._localFlagsDataSubject.pipe(\\r\\n            switchMap((data) => of(data[featureFlagName] ?? defaultValue))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private initializeClient(): void {\\r\\n        const context = this.generateContext();\\r\\n\\r\\n        if (this._client === null) {\\r\\n            //Initialize the client\\r\\n            const options: LDClient.LDOptions = { allAttributesPrivate: false };\\r\\n            this._client = LDClient.initialize(this._featureFlagConfig.key, context, options);\\r\\n\\r\\n            //Wait until the client is ready then emit to the observer so anything waiting can now get the feature flag\\r\\n            this._client.waitUntilReady().then(() => this._clientSubject.next(this._client));\\r\\n        } else {\\r\\n            //Client is setup, update the context accordingly\\r\\n            this._client.identify(context);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private generateContext(): LDClient.LDContext {\\r\\n        const context: LDClient.LDContext = {\\r\\n            kind: \'multi\'\\r\\n        };\\r\\n\\r\\n        if (this._authService.userGuid) {\\r\\n            const userContext: LDClient.LDContext = {\\r\\n                kind: \'user\',\\r\\n                key: this._authService.userGuid\\r\\n            };\\r\\n\\r\\n            context.user = userContext;\\r\\n        }\\r\\n        else {\\r\\n            const userContext: LDClient.LDContext = {\\r\\n                kind: \'user\',\\r\\n                key: \'anonymous-user\',\\r\\n                anonymous: true\\r\\n            };\\r\\n\\r\\n            context.user = userContext;\\r\\n        }\\r\\n\\r\\n        if (this._authService.activeOrgGuid) {\\r\\n            const organizationContext: LDClient.LDContext = {\\r\\n                \'kind\': \'organization\',\\r\\n                \'key\': this._authService.activeOrgGuid,\\r\\n                \'root-org-guid\': this._authService.rootOrgGuid\\r\\n            };\\r\\n\\r\\n            context.organization = organizationContext;\\r\\n        }\\r\\n        else {\\r\\n            const organizationContext: LDClient.LDContext = {\\r\\n                kind: \'organization\',\\r\\n                key: \'anonymous-organization\',\\r\\n                anonymous: true\\r\\n            };\\r\\n\\r\\n            context.organization = organizationContext;\\r\\n        }\\r\\n\\r\\n        return context;\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18},{"name":"localFlagPath","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":19}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiFileScanResult","id":"interface-IUiFileScanResult-050d21887d059e5dbf733e9c50ecba7f9a81c97ff04b05bbd45044ac7a030a2b3c18836a5db42ed2ea493d5e39dcf612d937169bee00479f3ccd165589faab04","file":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// AWS\\r\\nimport * as AWS from \'aws-sdk\';\\r\\n// RxJS\\r\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\r\\nimport { EMPTY, Observable, of } from \'rxjs\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n\\r\\n/**\\r\\n * Interface for file scan result.\\r\\n *\\r\\n * @todo This seems to be a duplicate of `IFileScanResult` - We should consider merging these interfaces.\\r\\n * @see `IFileScanResult` apps/acp-ui/src/app/services/file-scan.service.ts\\r\\n */\\r\\nexport interface IUiFileScanResult {\\r\\n    scanResultClean: boolean;\\r\\n    eTag: string;\\r\\n    key: string;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Service to handle file scanning.\\r\\n *\\r\\n * @todo This seems to be a duplicate of `AcpFileScanService` - We should consider merging these services.\\r\\n * @see `AcpFileScanService` apps/acp-ui/src/app/services/file-scan.service.ts\\r\\n */\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiFileScanService {\\r\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\r\\n    private readonly _token: string;\\r\\n\\r\\n    constructor(private _configurationService: UiConfigurationService) {\\r\\n        this._token = this.generateGuid();\\r\\n        if (\\r\\n            this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\r\\n            this._configurationService.appConfig[\'file-scan\'].scanUrl\\r\\n        ) {\\r\\n            this.fileScan = webSocket({\\r\\n                url: `${this._configurationService.appConfig[\'file-scan\'].scanUrl}?token=${this._token}`,\\r\\n                deserializer: ({ data }) => {\\r\\n                    const parsedData = JSON.parse(data);\\r\\n                    return {\\r\\n                        scanResultClean: parsedData.scanResultClean,\\r\\n                        eTag: parsedData.file.eTag,\\r\\n                        key: parsedData.file.key,\\r\\n                    };\\r\\n                },\\r\\n            });\\r\\n        } else {\\r\\n            this.fileScan = EMPTY;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\r\\n        return new Observable((observer) => {\\r\\n            const s3Endpoint = this._configurationService.appConfig[\'file-scan\'].awsS3ServiceURL;\\r\\n            const config: AWS.S3.ClientConfiguration = {\\r\\n                apiVersion: \'2006-03-01\',\\r\\n                params: { Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName },\\r\\n            };\\r\\n\\r\\n            if (s3Endpoint) {\\r\\n                config.endpoint = s3Endpoint;\\r\\n                config.s3ForcePathStyle = true;\\r\\n            }\\r\\n\\r\\n            if (this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId) {\\r\\n                AWS.config.update({\\r\\n                    region: this._configurationService.appConfig[\'file-scan\'].scanBucketRegion,\\r\\n                    credentials: new AWS.CognitoIdentityCredentials({\\r\\n                        IdentityPoolId: this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId,\\r\\n                    }),\\r\\n                });\\r\\n            } else {\\r\\n                // Use dummy credentials for fake S3.\\r\\n                AWS.config.update({\\r\\n                    credentials: new AWS.Credentials({\\r\\n                        accessKeyId: \'fakeAccessKeyId\',\\r\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\r\\n                    }),\\r\\n                });\\r\\n            }\\r\\n            const s3 = new AWS.S3(config);\\r\\n            const fileUniqueName = this.generateUniqueName(file.name);\\r\\n            const params = {\\r\\n                Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName,\\r\\n                Key: `${fileFolder}${fileUniqueName}`,\\r\\n                Body: file,\\r\\n                ACL: \'private\',\\r\\n                ContentType: file.type,\\r\\n            };\\r\\n            s3.upload(params, (err, data) => {\\r\\n                if (err) {\\r\\n                    observer.error(err);\\r\\n                } else {\\r\\n                    // If there is no file scanning, update the file scan subject with mock IUiFileScanResult\\r\\n                    if (\\r\\n                        !this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\r\\n                        !this._configurationService.appConfig[\'file-scan\'].scanUrl\\r\\n                    ) {\\r\\n                        this.fileScan = of({\\r\\n                            scanResultClean: true,\\r\\n                            eTag: \'\',\\r\\n                            key: data.Key,\\r\\n                        });\\r\\n                    }\\r\\n\\r\\n                    observer.next(data);\\r\\n                    observer.complete();\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public completeFileScan(): void {\\r\\n        if (this.fileScan instanceof WebSocketSubject) {\\r\\n            this.fileScan.complete();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private generateUniqueName(name: string): string {\\r\\n        const parts = name\\r\\n            .toLowerCase()\\r\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\r\\n            .split(\'.\');\\r\\n        const fileName = parts[0];\\r\\n        let ext = \'\';\\r\\n        if (parts.length > 1) {\\r\\n            ext = \'.\' + parts[parts.length - 1];\\r\\n        }\\r\\n        return fileName.substring(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\r\\n    }\\r\\n\\r\\n    private generateGuid(): string {\\r\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\r\\n            const r = (Math.random() * 16) | 0;\\r\\n            const v = c === \'x\' ? r : (r & 0x3) | 0x8;\\r\\n            return v.toString(16);\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"eTag","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"scanResultClean","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18}],"indexSignatures":[],"kind":165,"description":"<p>Interface for file scan result.</p>\\n<p>See <code>IFileScanResult</code> apps/acp-ui/src/app/services/file-scan.service.ts</p>\\n","rawdescription":"\\n\\nInterface for file scan result.\\n\\nSee `IFileScanResult` apps/acp-ui/src/app/services/file-scan.service.ts\\n","methods":[]},{"name":"IUiFileScanResult","id":"interface-IUiFileScanResult-e1299bf704e44f9f8d3374d8353e40b1c4c1f387f18954dd7fbd921c1066c4074cd6b7fa72f854120c1101056962df183d7d2e41fc3644bc1b940c6780e4de78-1","file":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// AWS\\r\\nimport * as AWS from \'aws-sdk\';\\r\\n// RxJS\\r\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\r\\nimport { EMPTY, Observable, of } from \'rxjs\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n\\r\\nexport interface IUiFileScanResult {\\r\\n    scanResultClean: boolean;\\r\\n    eTag: string;\\r\\n    key: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiFileScanService {\\r\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\r\\n    private readonly _token: string;\\r\\n    private _fileScanConfig: {\\r\\n        scanIdentityPoolId: string;\\r\\n        scanBucketRegion: string;\\r\\n        scanUrl: string;\\r\\n        scanBucketName: string;\\r\\n        awsS3ServiceURL: string;\\r\\n        enabled: boolean;\\r\\n    };\\r\\n\\r\\n    constructor(private _configurationService: UiConfigurationService) {\\r\\n        this._token = this.generateGuid();\\r\\n        this._fileScanConfig = this._configurationService.appConfig[\'file-scan\'];\\r\\n        if (this._fileScanConfig.scanIdentityPoolId && this._fileScanConfig.scanUrl) {\\r\\n            this.fileScan = webSocket({\\r\\n                url: `${this._fileScanConfig.scanUrl}?token=${this._token}`,\\r\\n                deserializer: ({ data }) => {\\r\\n                    const parsedData = JSON.parse(data);\\r\\n                    return {\\r\\n                        scanResultClean: parsedData.scanResultClean,\\r\\n                        eTag: parsedData.file.eTag,\\r\\n                        key: parsedData.file.key,\\r\\n                    };\\r\\n                },\\r\\n            });\\r\\n        } else {\\r\\n            this.fileScan = EMPTY;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\r\\n        return new Observable((observer) => {\\r\\n            const s3Endpoint = this._fileScanConfig.awsS3ServiceURL;\\r\\n            const config: AWS.S3.ClientConfiguration = {\\r\\n                apiVersion: \'2006-03-01\',\\r\\n                params: { Bucket: this._fileScanConfig.scanBucketName },\\r\\n            };\\r\\n\\r\\n            if (s3Endpoint) {\\r\\n                config.endpoint = s3Endpoint;\\r\\n                config.s3ForcePathStyle = true;\\r\\n            }\\r\\n\\r\\n            if (this._fileScanConfig.scanIdentityPoolId) {\\r\\n                AWS.config.update({\\r\\n                    region: this._fileScanConfig.scanBucketRegion,\\r\\n                    credentials: new AWS.CognitoIdentityCredentials({\\r\\n                        IdentityPoolId: this._fileScanConfig.scanIdentityPoolId,\\r\\n                    }),\\r\\n                });\\r\\n            } else {\\r\\n                // Use dummy credentials for fake S3.\\r\\n                AWS.config.update({\\r\\n                    credentials: new AWS.Credentials({\\r\\n                        accessKeyId: \'fakeAccessKeyId\',\\r\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\r\\n                        sessionToken: \'fakeSessionToken\',\\r\\n                    }),\\r\\n                });\\r\\n            }\\r\\n            const s3 = new AWS.S3(config);\\r\\n            const fileUniqueName = this.generateUniqueName(file.name);\\r\\n            const params = {\\r\\n                Bucket: this._fileScanConfig.scanBucketName,\\r\\n                Key: `${fileFolder}${fileUniqueName}`,\\r\\n                Body: file,\\r\\n                ACL: \'private\',\\r\\n                ContentType: file.type,\\r\\n                FileName: file.name,\\r\\n                Folder: fileFolder,\\r\\n            };\\r\\n            s3.upload(params, (err, data) => {\\r\\n                if (err) {\\r\\n                    observer.error(err);\\r\\n                } else {\\r\\n                    // If there is no file scanning, update the file scan subject with mock IFileScanResult\\r\\n                    if (!this._fileScanConfig.scanIdentityPoolId && !this._fileScanConfig.scanUrl) {\\r\\n                        this.fileScan = of({\\r\\n                            scanResultClean: true,\\r\\n                            eTag: \'\',\\r\\n                            key: data.Key,\\r\\n                        });\\r\\n                    }\\r\\n\\r\\n                    observer.next(data);\\r\\n                    observer.complete();\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public completeFileScan(): void {\\r\\n        if (this.fileScan instanceof WebSocketSubject) {\\r\\n            this.fileScan.complete();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private generateUniqueName(name: string): string {\\r\\n        const parts = name\\r\\n            .toLowerCase()\\r\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\r\\n            .split(\'.\');\\r\\n        const fileName = parts[0];\\r\\n        let ext = \'\';\\r\\n        if (parts.length > 1) {\\r\\n            ext = \'.\' + parts[(parts.length - 1)];\\r\\n        }\\r\\n        return fileName.substr(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\r\\n    }\\r\\n\\r\\n    private generateGuid(): string {\\r\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\r\\n            const r = Math.random() * 16 | 0;\\r\\n            const v = c === \'x\' ? r : (r & 0x3 | 0x8);\\r\\n            return v.toString(16);\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"eTag","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"scanResultClean","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiFileScanResult-1"},{"name":"IUiFilterModel","id":"interface-IUiFilterModel-a78af670f67474f678fd5107d592cf6836d7e5ecf2b2333844cde20d82808f883830f97723859e86e680f3f1aa66c907038336c8df404e9c29b452f80e64b3cf","file":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiFilterModel {\\r\\n    [colId: string]: IUiServerSideFilter | IUiClientSideFilter;\\r\\n}\\r\\n\\r\\nexport interface IUiServerSideFilter {\\r\\n    filterType: string;\\r\\n    type: string;\\r\\n    filter: string;\\r\\n}\\r\\n\\r\\nexport interface IUiClientSideFilter {\\r\\n    filterType: string;\\r\\n    values: string[];\\r\\n}\\r\\n","properties":[],"indexSignatures":[{"id":"index-declaration-a78af670f67474f678fd5107d592cf6836d7e5ecf2b2333844cde20d82808f883830f97723859e86e680f3f1aa66c907038336c8df404e9c29b452f80e64b3cf","args":[{"name":"colId","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"IUiServerSideFilter | IUiClientSideFilter","line":1,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"IUiHeaderButton","id":"interface-IUiHeaderButton-adf913cfe1e63441db9824637a0780a2903d8995f1047b55a0617b9ff59e1ac5099f47854957ab6492ee1a407b0fdeeeaf5028280649cd801a155ac5dc3244eb","file":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\n\\r\\n/**\\r\\n * Interface for the parameters used by the grid header action buttons\\r\\n *\\r\\n * @todo This will be swapped out for the new interface for UiActionButtons when ready\\r\\n * @description see also IUiActionButton and IUiActionBtn\\r\\n */\\r\\nexport interface IUiHeaderButton {\\r\\n    id?: string;\\r\\n    icon?: string;\\r\\n    text?: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    iconPosition?: \'suffix\' | \'prefix\';\\r\\n    color?:\\r\\n        | \'btn-outline-primary\'\\r\\n        | \'btn-outline-secondary\'\\r\\n        | \'btn-outline-success\'\\r\\n        | \'btn-outline-danger\'\\r\\n        | \'btn-outline-warning\'\\r\\n        | \'btn-primary\'\\r\\n        | \'btn-outline-info\';\\r\\n    divider?: boolean;\\r\\n    tooltipText?: string;\\r\\n    clicked?: (params: any) => void;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-grid-header-buttons\',\\r\\n    templateUrl: \'./grid-header-buttons.component.html\',\\r\\n    styleUrls: [\'./grid-header-buttons.component.scss\'],\\r\\n})\\r\\nexport class UiGridHeaderButtonsComponent {\\r\\n    /**\\r\\n     * Array of buttons to be displayed in the grid header\\r\\n     */\\r\\n    @Input() public buttons: IUiHeaderButton[] = [];\\r\\n\\r\\n    /**\\r\\n     * Boolean to collapse the buttons into a dropdown menu\\r\\n     *\\r\\n     * @description Default to false until bulk action feature is implemented\\r\\n     */\\r\\n    @Input() public collapseButtons = false;\\r\\n\\r\\n    /**\\r\\n     * Label for the dropdown button\\r\\n     */\\r\\n    @Input() public dropdownButtonLabel: string;\\r\\n\\r\\n    /**\\r\\n     * Generates a string of CSS classes for a given button based on its properties.\\r\\n     *\\r\\n     * @param button - The button object containing properties to determine the CSS classes.\\r\\n     * @returns A string of CSS classes to be applied to the button.\\r\\n     */\\r\\n    public setButtonClasses(button: IUiHeaderButton): string {\\r\\n        let buttonClasses = \' \';\\r\\n        buttonClasses += this.collapseButtons ? \'dropdown-item \' : \'\';\\r\\n        buttonClasses += this.collapseButtons !== true && button.color ? button.color : \'btn-outline-primary \';\\r\\n        buttonClasses += button.iconPosition === \'prefix\' ? \' prefix \' : \' suffix \';\\r\\n        return buttonClasses;\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":28},{"name":"color","deprecated":false,"deprecationMessage":"","type":"\\"btn-outline-primary\\" | \\"btn-outline-secondary\\" | \\"btn-outline-success\\" | \\"btn-outline-danger\\" | \\"btn-outline-warning\\" | \\"btn-primary\\" | \\"btn-outline-info\\"","optional":true,"description":"","line":18},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"divider","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":26},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"iconPosition","deprecated":false,"deprecationMessage":"","type":"\\"suffix\\" | \\"prefix\\"","optional":true,"description":"","line":17},{"name":"iconVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":16},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":27},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":15}],"indexSignatures":[],"kind":165,"description":"<p>Interface for the parameters used by the grid header action buttons</p>\\n","rawdescription":"\\n\\nInterface for the parameters used by the grid header action buttons\\n\\n","methods":[]},{"name":"IUiLanguage","id":"interface-IUiLanguage-55622243ac44477b1902aee48709658387852eb7314fb304085b730e870c0bd43b89883bd9b4f91a9dd64c30ebc9f7155d12ca29f22dbe00b4e49e76a14ffbd8","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/language.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiLanguage {\\r\\n    name: string;\\r\\n    code: string;\\r\\n}\\r\\n","properties":[{"name":"code","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiLocalFlagsData","id":"interface-IUiLocalFlagsData-c0f7fff62aa3051515e1db4b1a2b5be6ca647b2551533aed5d5dc2b4fb90dcfdaf24351d890c731c62005329d5f1f6710f807c8d0b722a85d36d3121b2a8ecb1","file":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\nimport { Observable, of, ReplaySubject, switchMap } from \'rxjs\';\\r\\nimport * as LDClient from \'launchdarkly-js-client-sdk\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\r\\n\\r\\n/* eslint-disable max-len */\\r\\n/* Note\\r\\n There\'s a bunch of logic involving observers going on in this class. The reason for this is that the LD Client needs the token but the token (or lack thereof) isn\'t available right away.\\r\\n We have to wait for the Auth0 library to determine if the user is authenticated then either set the token to empty if they aren\'t or retrieve the token if they are.\\r\\n The tricky part is that we could have a request for a FF before that token has been set. We force the evaluation method to wait until the client has been setup before trying to get a value.\\r\\n We use the ReplaySubject\\r\\n*/\\r\\n/* eslint-enable max-len */\\r\\n\\r\\nexport interface IUiFeatureFlagConfig {\\r\\n    key: string;\\r\\n    localFlagPath: string | undefined;\\r\\n}\\r\\n\\r\\nexport interface IUiLocalFlagsData { [key: string]: boolean };\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiFeatureFlagService {\\r\\n    private _featureFlagConfig: IUiFeatureFlagConfig;\\r\\n    private _evaluateFunction: (string, boolean) => Observable<boolean>;\\r\\n    //LD Flags\\r\\n    private _client: LDClient.LDClient | null = null;\\r\\n    private _clientSubject = new ReplaySubject<LDClient.LDClient>(1);\\r\\n\\r\\n    //Local Flags\\r\\n    private _localFlagsData: IUiLocalFlagsData | null = null;\\r\\n    private _localFlagsDataSubject = new ReplaySubject<IUiLocalFlagsData>(1);\\r\\n\\r\\n    constructor(\\r\\n        public configurationService: UiConfigurationService,\\r\\n        private _authService: UiAuthService,\\r\\n        private _httpClient: HttpClient,\\r\\n    ) {\\r\\n        this._featureFlagConfig = configurationService.getConfig<IUiFeatureFlagConfig>(\'launchDarkly\');\\r\\n\\r\\n        //Determine which evaluate function to use\\r\\n        const useLocalFile = this._featureFlagConfig.localFlagPath !== undefined && this._featureFlagConfig.localFlagPath.length !== 0;\\r\\n        const evaluateFunction = useLocalFile ? this.evaluateFlagUsingLocalFile : this.evaluateFlagUsingLDClient;\\r\\n        this._evaluateFunction = evaluateFunction.bind(this);\\r\\n\\r\\n        if (!useLocalFile) {\\r\\n            this._authService.permissionsLoaded$.subscribe((permissionsLoaded) => {\\r\\n                if (permissionsLoaded && !this._client) {\\r\\n                    this.initializeClient();\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public isFlagOn(featureFlagName: string, defaultValue: boolean = false): Observable<boolean> {\\r\\n        return this._evaluateFunction(featureFlagName, defaultValue);\\r\\n    }\\r\\n\\r\\n    private evaluateFlagUsingLDClient(featureFlagName: string, defaultValue): Observable<boolean> {\\r\\n        return this._clientSubject.pipe(\\r\\n            switchMap((client) => of(client.variation(featureFlagName, defaultValue)))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private evaluateFlagUsingLocalFile(featureFlagName: string, defaultValue): Observable<boolean> {\\r\\n        if (this._localFlagsData === null) {\\r\\n            this._httpClient.get<IUiLocalFlagsData>(this._featureFlagConfig.localFlagPath)\\r\\n                .subscribe((data) => {\\r\\n                    this._localFlagsData = data;\\r\\n                    this._localFlagsDataSubject.next(data);\\r\\n                });\\r\\n        }\\r\\n\\r\\n        return this._localFlagsDataSubject.pipe(\\r\\n            switchMap((data) => of(data[featureFlagName] ?? defaultValue))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private initializeClient(): void {\\r\\n        const context = this.generateContext();\\r\\n\\r\\n        if (this._client === null) {\\r\\n            //Initialize the client\\r\\n            const options: LDClient.LDOptions = { allAttributesPrivate: false };\\r\\n            this._client = LDClient.initialize(this._featureFlagConfig.key, context, options);\\r\\n\\r\\n            //Wait until the client is ready then emit to the observer so anything waiting can now get the feature flag\\r\\n            this._client.waitUntilReady().then(() => this._clientSubject.next(this._client));\\r\\n        } else {\\r\\n            //Client is setup, update the context accordingly\\r\\n            this._client.identify(context);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private generateContext(): LDClient.LDContext {\\r\\n        const context: LDClient.LDContext = {\\r\\n            kind: \'multi\'\\r\\n        };\\r\\n\\r\\n        if (this._authService.userGuid) {\\r\\n            const userContext: LDClient.LDContext = {\\r\\n                kind: \'user\',\\r\\n                key: this._authService.userGuid\\r\\n            };\\r\\n\\r\\n            context.user = userContext;\\r\\n        }\\r\\n        else {\\r\\n            const userContext: LDClient.LDContext = {\\r\\n                kind: \'user\',\\r\\n                key: \'anonymous-user\',\\r\\n                anonymous: true\\r\\n            };\\r\\n\\r\\n            context.user = userContext;\\r\\n        }\\r\\n\\r\\n        if (this._authService.activeOrgGuid) {\\r\\n            const organizationContext: LDClient.LDContext = {\\r\\n                \'kind\': \'organization\',\\r\\n                \'key\': this._authService.activeOrgGuid,\\r\\n                \'root-org-guid\': this._authService.rootOrgGuid\\r\\n            };\\r\\n\\r\\n            context.organization = organizationContext;\\r\\n        }\\r\\n        else {\\r\\n            const organizationContext: LDClient.LDContext = {\\r\\n                kind: \'organization\',\\r\\n                key: \'anonymous-organization\',\\r\\n                anonymous: true\\r\\n            };\\r\\n\\r\\n            context.organization = organizationContext;\\r\\n        }\\r\\n\\r\\n        return context;\\r\\n    }\\r\\n}\\r\\n","properties":[],"indexSignatures":[{"id":"index-declaration-c0f7fff62aa3051515e1db4b1a2b5be6ca647b2551533aed5d5dc2b4fb90dcfdaf24351d890c731c62005329d5f1f6710f807c8d0b722a85d36d3121b2a8ecb1","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","line":22,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"IUiMenuItem","id":"interface-IUiMenuItem-3dc42dd42bed065f85ce66fd90e38a95c17155783cffd82d78b56d8ec4b5fbee7755a0d8da0c191c3ce05076ef416a2a01bd5a64a34c18fc5b6469dd5ad19c02","file":"libs/ui/src/lib/services/menu/menu.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\r\\nimport { EventEmitter, Injectable } from \'@angular/core\';\\r\\n// Rxjs\\r\\nimport { Observable } from \'rxjs\';\\r\\nimport { map, take } from \'rxjs/operators\';\\r\\n// Interfaces\\r\\nimport { IUiPermissions } from \'../user\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\n/**\\r\\n * @deprecated\\r\\n */\\r\\nexport class UiMenuService {\\r\\n    public selectedMenu: IUiMenuItem[];\\r\\n    public selectedMenuName: string;\\r\\n    public menus: { dev: IUiMenuItem[]; sin: IUiMenuItem[]; contactsManager: IUiMenuItem[] };\\r\\n    public onSetMainMenu: EventEmitter<IUiMenuItem[]> = new EventEmitter();\\r\\n\\r\\n    constructor(private _httpClient: HttpClient) {}\\r\\n\\r\\n    // public setMainMenu(menu: IUiMenuItem[]) {\\r\\n    public setMainMenu(menuName: string, userPermissions?: IUiPermissions) {\\r\\n        this._httpClient\\r\\n            .get(\'assets/menus/menu.json\')\\r\\n            .pipe(take(1))\\r\\n            .subscribe((data: IUiMenus) => {\\r\\n                this.menus = data;\\r\\n                this.closeAllMenus();\\r\\n                this.selectedMenuName = menuName;\\r\\n\\r\\n                if (this.menus !== undefined) {\\r\\n                    this.selectedMenu = this.menus[menuName];\\r\\n                    this.selectedMenu =\\r\\n                        menuName === UiMenuNamesEnum.sin && userPermissions != null\\r\\n                            ? this.checkSinPermissions(this.selectedMenu, userPermissions)\\r\\n                            : this.selectedMenu;\\r\\n                    this.onSetMainMenu.emit(this.selectedMenu);\\r\\n                }\\r\\n            });\\r\\n    }\\r\\n\\r\\n    public getLeftSideMenuDevHub(): Observable<IUiMenuItem[]> {\\r\\n        return this._httpClient.get(\'assets/menus/left-side-menu-devhub.json\').pipe(\\r\\n            map((res: { menus: IUiMenuItem[] }) => {\\r\\n                return res.menus;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getLeftSideMenu(): Observable<IUiMenuItem[]> {\\r\\n        return this._httpClient.get(\'assets/menus/left-side-menu.json\').pipe(\\r\\n            map((res: { menus: IUiMenuItem[] }) => {\\r\\n                return res.menus;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public closeAllMenus() {\\r\\n        if (this.selectedMenu) {\\r\\n            for (let i = 0; i < this.selectedMenu.length; i++) {\\r\\n                this.selectedMenu[i].isOpen = false;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public refreshMenu() {\\r\\n        if (this.selectedMenu) {\\r\\n            this.selectedMenu = JSON.parse(JSON.stringify(this.selectedMenu));\\r\\n            this.onSetMainMenu.emit(this.selectedMenu);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public clearMenu() {\\r\\n        if (this.selectedMenu) {\\r\\n            this.selectedMenu = [];\\r\\n            this.onSetMainMenu.emit(this.selectedMenu);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkSinPermissions(selectedMenu: IUiMenuItem[], userPermissions: IUiPermissions): IUiMenuItem[] {\\r\\n        const selectedMenuWithPermissions: IUiMenuItem[] = [];\\r\\n        for (const subMenu of selectedMenu) {\\r\\n            if (!subMenu.permission || userPermissions[subMenu.permission]) {\\r\\n                selectedMenuWithPermissions.push(subMenu);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return selectedMenuWithPermissions;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport interface IUiMenuItem {\\r\\n    name: string;\\r\\n    icon?: string;\\r\\n    route: string;\\r\\n    isOpen: boolean;\\r\\n    permission: string;\\r\\n    flag: string;\\r\\n    children?: IUiMenuItem[];\\r\\n}\\r\\nexport interface IUiMenus {\\r\\n    devHub: IUiMenuItem[];\\r\\n    dev: IUiMenuItem[];\\r\\n    sin: IUiMenuItem[];\\r\\n    contactsManager: IUiMenuItem[];\\r\\n}\\r\\n\\r\\nexport enum UiMenuNamesEnum {\\r\\n    devHub = \'devHub\',\\r\\n    dev = \'dev\',\\r\\n    sin = \'sin\',\\r\\n    contactsManager = \'contactsManager\',\\r\\n    declarationSearch = \'declarationSearch\',\\r\\n    segmentation = \'segmentation\',\\r\\n}\\r\\n","properties":[{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":true,"description":"","line":102},{"name":"flag","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":101},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":97},{"name":"isOpen","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":99},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":96},{"name":"permission","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":100},{"name":"route","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":98}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiMenus","id":"interface-IUiMenus-3dc42dd42bed065f85ce66fd90e38a95c17155783cffd82d78b56d8ec4b5fbee7755a0d8da0c191c3ce05076ef416a2a01bd5a64a34c18fc5b6469dd5ad19c02","file":"libs/ui/src/lib/services/menu/menu.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\r\\nimport { EventEmitter, Injectable } from \'@angular/core\';\\r\\n// Rxjs\\r\\nimport { Observable } from \'rxjs\';\\r\\nimport { map, take } from \'rxjs/operators\';\\r\\n// Interfaces\\r\\nimport { IUiPermissions } from \'../user\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\n/**\\r\\n * @deprecated\\r\\n */\\r\\nexport class UiMenuService {\\r\\n    public selectedMenu: IUiMenuItem[];\\r\\n    public selectedMenuName: string;\\r\\n    public menus: { dev: IUiMenuItem[]; sin: IUiMenuItem[]; contactsManager: IUiMenuItem[] };\\r\\n    public onSetMainMenu: EventEmitter<IUiMenuItem[]> = new EventEmitter();\\r\\n\\r\\n    constructor(private _httpClient: HttpClient) {}\\r\\n\\r\\n    // public setMainMenu(menu: IUiMenuItem[]) {\\r\\n    public setMainMenu(menuName: string, userPermissions?: IUiPermissions) {\\r\\n        this._httpClient\\r\\n            .get(\'assets/menus/menu.json\')\\r\\n            .pipe(take(1))\\r\\n            .subscribe((data: IUiMenus) => {\\r\\n                this.menus = data;\\r\\n                this.closeAllMenus();\\r\\n                this.selectedMenuName = menuName;\\r\\n\\r\\n                if (this.menus !== undefined) {\\r\\n                    this.selectedMenu = this.menus[menuName];\\r\\n                    this.selectedMenu =\\r\\n                        menuName === UiMenuNamesEnum.sin && userPermissions != null\\r\\n                            ? this.checkSinPermissions(this.selectedMenu, userPermissions)\\r\\n                            : this.selectedMenu;\\r\\n                    this.onSetMainMenu.emit(this.selectedMenu);\\r\\n                }\\r\\n            });\\r\\n    }\\r\\n\\r\\n    public getLeftSideMenuDevHub(): Observable<IUiMenuItem[]> {\\r\\n        return this._httpClient.get(\'assets/menus/left-side-menu-devhub.json\').pipe(\\r\\n            map((res: { menus: IUiMenuItem[] }) => {\\r\\n                return res.menus;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getLeftSideMenu(): Observable<IUiMenuItem[]> {\\r\\n        return this._httpClient.get(\'assets/menus/left-side-menu.json\').pipe(\\r\\n            map((res: { menus: IUiMenuItem[] }) => {\\r\\n                return res.menus;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public closeAllMenus() {\\r\\n        if (this.selectedMenu) {\\r\\n            for (let i = 0; i < this.selectedMenu.length; i++) {\\r\\n                this.selectedMenu[i].isOpen = false;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public refreshMenu() {\\r\\n        if (this.selectedMenu) {\\r\\n            this.selectedMenu = JSON.parse(JSON.stringify(this.selectedMenu));\\r\\n            this.onSetMainMenu.emit(this.selectedMenu);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public clearMenu() {\\r\\n        if (this.selectedMenu) {\\r\\n            this.selectedMenu = [];\\r\\n            this.onSetMainMenu.emit(this.selectedMenu);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkSinPermissions(selectedMenu: IUiMenuItem[], userPermissions: IUiPermissions): IUiMenuItem[] {\\r\\n        const selectedMenuWithPermissions: IUiMenuItem[] = [];\\r\\n        for (const subMenu of selectedMenu) {\\r\\n            if (!subMenu.permission || userPermissions[subMenu.permission]) {\\r\\n                selectedMenuWithPermissions.push(subMenu);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return selectedMenuWithPermissions;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport interface IUiMenuItem {\\r\\n    name: string;\\r\\n    icon?: string;\\r\\n    route: string;\\r\\n    isOpen: boolean;\\r\\n    permission: string;\\r\\n    flag: string;\\r\\n    children?: IUiMenuItem[];\\r\\n}\\r\\nexport interface IUiMenus {\\r\\n    devHub: IUiMenuItem[];\\r\\n    dev: IUiMenuItem[];\\r\\n    sin: IUiMenuItem[];\\r\\n    contactsManager: IUiMenuItem[];\\r\\n}\\r\\n\\r\\nexport enum UiMenuNamesEnum {\\r\\n    devHub = \'devHub\',\\r\\n    dev = \'dev\',\\r\\n    sin = \'sin\',\\r\\n    contactsManager = \'contactsManager\',\\r\\n    declarationSearch = \'declarationSearch\',\\r\\n    segmentation = \'segmentation\',\\r\\n}\\r\\n","properties":[{"name":"contactsManager","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":108},{"name":"dev","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":106},{"name":"devHub","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":105},{"name":"sin","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":107}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiMultiSelectHeaderParams","id":"interface-IUiMultiSelectHeaderParams-782883136e592fa6d00fc9ee791447b22f510a8edebcc077c4632e544ea16036d843b35eb610bd681065021bb5ba4b00dd9afcf7c075c5bb09111b04b4354c83","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\r\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\r\\n\\r\\nexport interface IUiCustomHeaderParams {\\r\\n    menuIcon: string;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtn {\\r\\n    icon?: string;\\r\\n    text: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    clicked: (params: IUiActionCellRendererParams) => void;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtnConfig {\\r\\n    itemId: string;\\r\\n    rowId: string;\\r\\n    inlineIcons?: boolean;\\r\\n    showIconsInMenu?: boolean;\\r\\n    showLabel?: boolean;\\r\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\r\\n}\\r\\n\\r\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\r\\n\\r\\nexport interface IUiActionDivider {\\r\\n    divider?: boolean;\\r\\n    visible?: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiSelectionChangeParams {\\r\\n    gridId: string;\\r\\n    selectedRows: RowNode[];\\r\\n}\\r\\n\\r\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\r\\n    gridId: any;\\r\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\r\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n}\\r\\n","properties":[{"name":"gridId","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":40},{"name":"rowModelType","deprecated":false,"deprecationMessage":"","type":"\\"infinite\\" | \\"viewport\\" | \\"clientSide\\" | \\"serverSide\\"","optional":false,"description":"","line":42},{"name":"selectionChange","deprecated":false,"deprecationMessage":"","type":"EventEmitter<IUiSelectionChangeParams>","optional":true,"description":"","line":41}],"indexSignatures":[],"kind":165,"methods":[],"extends":"IHeaderParams"},{"name":"IUiNavigationService","id":"interface-IUiNavigationService-75c065555f46d9f6279bfac8caa5719d47f707d9a771585e498a16050843dfd933d239ee34e34967866a0a392f4d5f34f90dc2f322fd7e20845d08db9cdcd5fa","file":"libs/ui/src/lib/services/navigation/interfaces/navigation.service.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiNavigationService {\\r\\n    navigateTo(location: string, data?: any): void;\\r\\n    navigateToWithReferral(location: string, data?: any, referral?: string): void;\\r\\n    getNavigationData(): any | undefined;\\r\\n}\\r\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"getNavigationData","args":[],"optional":false,"returnType":"any | undefined","typeParameters":[],"line":4,"deprecated":false,"deprecationMessage":""},{"name":"navigateTo","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":2,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"navigateToWithReferral","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true},{"name":"referral","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":3,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"referral","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}]},{"name":"IUiNoResultSearch","id":"interface-IUiNoResultSearch-caab929e83061e2022f06f3ca3e0bb997f181e33c683f798cba73b72e4ed1ee068c4343efcdb85f0ec3aed2da7941e015b0bbdad94e5fc45c166168787ea8ae2","file":"libs/ui/src/lib/modules/global-search/interfaces/no-result-search.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiNoResultSearch {\\r\\n    noResultsFound: string;\\r\\n    tryDifferentKeyword: string;\\r\\n}\\r\\n","properties":[{"name":"noResultsFound","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"tryDifferentKeyword","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiOldGridPayload","id":"interface-IUiOldGridPayload-9f90cf939d3f3473f49de9e6d8794ac15752b88663027c8223e32321026729d70ecaa4019d2e24017a0b92bb5ba6ef4b6294b63e5cd384d040e0df8922a9b125","file":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient, HttpHeaders, HttpResponse } from \'@angular/common/http\';\\r\\nimport { Observable } from \'rxjs\';\\r\\nimport { AcpMockingMethodsEnum } from \'@app/interceptors/mock-data.interceptor\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiTestService {\\r\\n    constructor(private _http: HttpClient) {}\\r\\n\\r\\n    public getCallRecords(params: any) {\\r\\n        return this._http.get(\\r\\n            \'http://localhost:3000/callRecords?index=\' + params,\\r\\n            { observe: \'response\' }\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getUsers(params: any): Observable<HttpResponse<unknown>> {\\r\\n\\r\\n        let str = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\r\\n\\r\\n        if (params.request.sortModel.length !== 0) {\\r\\n            str = str + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\r\\n        }\\r\\n\\r\\n        const keys = Object.keys(params.request.filterModel);\\r\\n        if (keys.length > 0) {\\r\\n            if (str.length > 0) {\\r\\n                str = str + \'&\';\\r\\n            } else {\\r\\n                str = \'?\';\\r\\n            }\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                str = str + keys[i] + \'_like=\' + params.request.filterModel[keys[i]].filter + \'&\';\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return this._http.get(\'http://localhost:3000/test\' + str, { observe: \'response\' });\\r\\n    }\\r\\n\\r\\n    public getActions(params): Observable<HttpResponse<unknown>> {\\r\\n        const mockData = true;\\r\\n\\r\\n        // Prepare call parameters string\\r\\n        let paramsStr = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\r\\n\\r\\n        if (params.request.sortModel.length !== 0) {\\r\\n            paramsStr = paramsStr + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\r\\n        }\\r\\n\\r\\n        const keys = Object.keys(params.request.filterModel);\\r\\n        if (keys.length > 0) {\\r\\n            if (paramsStr.length > 0) {\\r\\n                paramsStr = paramsStr + \'&\';\\r\\n            } else {\\r\\n                paramsStr = \'?\';\\r\\n            }\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                paramsStr = paramsStr + keys[i] + \'_\' + params.request.filterModel[keys[i]].type + \'=\'\\r\\n                    + params.request.filterModel[keys[i]].filter;\\r\\n\\r\\n                if(i < keys.length - 1){\\r\\n                    paramsStr = paramsStr + \'&\';\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if(mockData === true){\\r\\n            // If you want to use mocking method, set this header with the name of the mocking method.\\r\\n            // JSN Note: This is a start for mocking mechanism. Will require extension.\\r\\n            // const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_GET_ACTIONS);\\r\\n            const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_POST_ACTIONS);\\r\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\r\\n            // return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr,\\r\\n            //  { headers, observe: \'response\' } ); // Use Mocking Data\\r\\n            return this._http.post(\\r\\n                \'http://localhost:3000/getSuppliers\',\\r\\n                params.request, { headers, observe: \'response\' }\\r\\n            ); // Use Mocking Data\\r\\n\\r\\n        }\\r\\n        else{\\r\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\r\\n            return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr, { observe: \'response\' } ); // Use Endpoint Data\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public getSupplierRowCount() {\\r\\n        return this._http.get(\\r\\n            \'http://localhost:3000/posts\',\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport interface IUiOldGridPayload {\\r\\n    page: {\\r\\n        offset: number;\\r\\n        limit: number;\\r\\n    };\\r\\n    sort: {\\r\\n        field: string;\\r\\n        direction: string;\\r\\n    };\\r\\n    gridFilters: {\\r\\n        isArchived: number;\\r\\n        name: string;\\r\\n        supplierNumber: string;\\r\\n        supplierType: number;\\r\\n        isFlagged: string;\\r\\n    };\\r\\n    moduleFilters: [];\\r\\n    classificationFilters: [];\\r\\n    customFieldFilters: [];\\r\\n}\\r\\n","properties":[{"name":"classificationFilters","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":114},{"name":"customFieldFilters","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":115},{"name":"gridFilters","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":106},{"name":"moduleFilters","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":113},{"name":"page","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":98},{"name":"sort","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":102}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiOrganization","id":"interface-IUiOrganization-f7c03a8542a4974382b575d67ae1efa03863ff33bffa6a7fe8f66c8f0e5ebf4d5549dd4bed3197598491855e5ff452269fe6ac7c762e9f0c593c166c702bac71","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/organization.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiOrganization {\\r\\n    id: number;\\r\\n    name: string;\\r\\n    dunsNumber: string;\\r\\n    tradeNames: string[];\\r\\n    domainNames: string[];\\r\\n}\\r\\n","properties":[{"name":"domainNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":6},{"name":"dunsNumber","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"tradeNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiOtpConfirmationResponse","id":"interface-IUiOtpConfirmationResponse-f1e014e653322088bfb0d41dc55fd25327eb86d3d994fc3fffd6ff9adbc2a37788429c77759cf103d3fb564245743162dd6932f6c1ad9299d000fdace3b419e8","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders } from \'@angular/common/http\';\\r\\nimport { Injectable } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\n// Rxjs\\r\\nimport { catchError, map, tap } from \'rxjs/operators\';\\r\\nimport { throwError } from \'rxjs\';\\r\\n// Lib\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n// Ngx\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { UiUserService } from \'@lib/services/user\';\\r\\n\\r\\n// Ngb\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\r\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\r\\n\\r\\ndeclare const Assent: IUiAciSharedSession;\\r\\n\\r\\nexport interface IUiPasswordLessSignInResponse {\\r\\n    sessionKey: string;\\r\\n    asmUri: string;\\r\\n}\\r\\n\\r\\nexport interface IUiOtpConfirmationResponse {\\r\\n    session: {\\r\\n        token: string;\\r\\n        sessionKey: string;\\r\\n        consentGiven: boolean;\\r\\n        uniqueSessionGuid: string;\\r\\n    };\\r\\n    sessionKey: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiPasswordlessLoginService {\\r\\n    public sessionKey: string;\\r\\n    public token: string;\\r\\n    private readonly _requestOtpTokenSlug_cognito = \'authentication/signin\';\\r\\n    private readonly _verifyOtpTokenSlug_cognito = \'authentication/verifytoken\';\\r\\n    private readonly _requestOtpTokenSlug_auth0 = \'authentication/v2/requestotp\';\\r\\n    private readonly _verifyOtpTokenSlug_auth0 = \'authentication/v2/verifyotp\';\\r\\n\\r\\n    private _cookieDomain: string;\\r\\n\\r\\n    constructor(\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _httpClient: HttpClient,\\r\\n        private _cookieService: CookieService,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _userService: UiUserService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _router: Router,\\r\\n        private _translate: TranslateService\\r\\n    ) {}\\r\\n\\r\\n    // call the API sign in method using an email address\\r\\n    public signIn(email: string, language: string) {\\r\\n        let authResponse: IUiPasswordLessSignInResponse;\\r\\n        const endpoint =\\r\\n            `${this._configurationService.appConfig.iamApi}` +\\r\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                ? this._requestOtpTokenSlug_cognito\\r\\n                : this._requestOtpTokenSlug_auth0);\\r\\n        const lang3letter = AcpSupportedLanguesLongCodeEnum[language];\\r\\n\\r\\n        const body = {\\r\\n            email,\\r\\n            language: lang3letter,\\r\\n        };\\r\\n\\r\\n        return this._httpClient.post(`${endpoint}`, body, { observe: \'response\' }).pipe(\\r\\n            map((response) => {\\r\\n                // not party service validation failed\\r\\n                if (response.status !== 248) {\\r\\n                    if (response.body) {\\r\\n                        if (response.status === 220) {\\r\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\r\\n                            window.location.href = authResponse.asmUri;\\r\\n                        } else {\\r\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\r\\n                            this.setSessionKeyCookie(authResponse.sessionKey, email);\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                // else show no errors and proceed to otp entry screen\\r\\n                return response.status;\\r\\n            }),\\r\\n            catchError((error) => {\\r\\n                let errorMsg: string;\\r\\n                if (error.error instanceof ErrorEvent) {\\r\\n                    errorMsg = `Error: ${error.error.message}`;\\r\\n                } else {\\r\\n                    errorMsg = this.getSignInErrorMessage(error);\\r\\n                }\\r\\n\\r\\n                return throwError(() => new Error(errorMsg));\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // call the API verify token method\\r\\n    public verifyToken(email: string, sessionKey: string, otp: string, language: string) {\\r\\n        const endpoint =\\r\\n            `${this._configurationService.appConfig.iamApi}` +\\r\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                ? this._verifyOtpTokenSlug_cognito\\r\\n                : this._verifyOtpTokenSlug_auth0);\\r\\n\\r\\n        language = AcpSupportedLanguesLongCodeEnum[language];\\r\\n\\r\\n        const body = {\\r\\n            email,\\r\\n            sessionKey,\\r\\n            otp,\\r\\n            language,\\r\\n        };\\r\\n\\r\\n        return this._httpClient.post(`${endpoint}`, body).pipe(\\r\\n            tap((data: IUiOtpConfirmationResponse) => {\\r\\n                if (data.session) {\\r\\n                    this.setTokenCookie(data);\\r\\n                } else if (data.sessionKey) {\\r\\n                    this.setSessionKeyCookie(data.sessionKey, email);\\r\\n                    this.throwInvalidTokenError();\\r\\n                }\\r\\n            }),\\r\\n            catchError((error) => {\\r\\n                let errorMsg: string;\\r\\n                if (error.error instanceof ErrorEvent) {\\r\\n                    errorMsg = `Error: ${error.error.message}`;\\r\\n                } else {\\r\\n                    errorMsg = this.getVerifyTokenErrorMessage(error);\\r\\n                }\\r\\n\\r\\n                return throwError(() => new Error(errorMsg));\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getCookieDomain(): string {\\r\\n        let domain = this._configService?.appConfig?.coreAuthCookieDomain;\\r\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\r\\n            domain = \'localhost\';\\r\\n        }\\r\\n\\r\\n        return domain;\\r\\n    }\\r\\n\\r\\n    private throwInvalidTokenError() {\\r\\n        let errorMsg: string;\\r\\n        this._translate.get(\'AUTHENTICATION.ERRORS.INVALID_CODE\').subscribe((res: string) => {\\r\\n            errorMsg = res;\\r\\n        });\\r\\n        throwError(() => new Error(errorMsg));\\r\\n    }\\r\\n\\r\\n    private getVerifyTokenErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // Party Service Validation failed\\r\\n            case 412: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            // Expired OTP\\r\\n            case 417: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            // Session expired\\r\\n            case 419: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private getSignInErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // Invalid OTP\\r\\n            case 248: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private setSessionKeyCookie(sessionKey: string, email: string) {\\r\\n        const expirationDate: Date = new Date();\\r\\n        expirationDate.setHours(expirationDate.getHours() + 3);\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        this.sessionKey = sessionKey;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.emailCookieId,\\r\\n            email,\\r\\n            null,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // called after use verifies the OTP\\r\\n    private setTokenCookie(response: IUiOtpConfirmationResponse) {\\r\\n        const expirationDate = new Date(this.getTokenExpirationDate(response.session.token));\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        this.token = response.session.token;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            response.session.token,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this.sessionKey = response.session.sessionKey;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.sessionCookieId,\\r\\n            response.session.sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.uniqueSessionCookieId,\\r\\n            response.session.uniqueSessionGuid,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this.loadUserDetails(response.session.token);\\r\\n\\r\\n        this.initAssentSession();\\r\\n    }\\r\\n\\r\\n    private loadUserDetails(token: string) {\\r\\n        const userEmail = this.getTokenEmail(token);\\r\\n        const tokenPayload = this.getTokenPayload(token);\\r\\n\\r\\n        this._userService.selectUser(userEmail, tokenPayload);\\r\\n    }\\r\\n\\r\\n    private initAssentSession() {\\r\\n        const options: IUiAciSessionOptions = {\\r\\n            cookieDomain: this._cookieDomain,\\r\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\r\\n            logoutOverride: () => {\\r\\n                this.clearUserCredentials();\\r\\n                this._modalService.dismissAll();\\r\\n                this._router.navigate([\'\']);\\r\\n            },\\r\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\r\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\r\\n            onExtendSession: () => {\\r\\n                return \'\';\\r\\n            },\\r\\n            sessionExpiryLogoutCookieRequired: true,\\r\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\r\\n            secureCookie: this._configService.appConfig.secureCookie,\\r\\n        };\\r\\n\\r\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\r\\n        if (document.cookie.match(cookiePattern)) {\\r\\n            Assent.session.initialize(options);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private clearUserCredentials() {\\r\\n        Assent.session.dispose();\\r\\n        this._cookieService.deleteAll(\'/\', this._cookieDomain);\\r\\n        this._userService.logout();\\r\\n    }\\r\\n\\r\\n    private getTokenEmail(token: string): string {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.sub) {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        return data.sub;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\r\\n     *\\r\\n     * @param token jwt\\r\\n     * @returns milliseconds\\r\\n     */\\r\\n    private getTokenExpirationDate(token: string): number {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.exp) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return data.exp * 1000;\\r\\n    }\\r\\n\\r\\n    private getTokenPayload(token: string): any {\\r\\n        if (!token) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const tokenParts = token.split(\'.\');\\r\\n        if (!tokenParts || tokenParts.length < 2) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const data = JSON.parse(atob(tokenParts[1]));\\r\\n            return data;\\r\\n        } catch (error) {\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"session","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":28},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPageFooterItem","id":"interface-IUiPageFooterItem-fa3b9b2e3d8eee09b0aa79f7a3c0811fe5ba2f0581cd9134910d6977f2eeded25b3c1ec1bec4ce79c4b88149ca595398d18ff658e056c43f3895b2de3e1e9b01","file":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HostListener, Injectable } from \'@angular/core\';\\r\\nimport { ActivatedRoute, NavigationEnd, Router } from \'@angular/router\';\\r\\nimport { Subject } from \'rxjs\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\n\\r\\nexport interface IUiPageFooterItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageFooterService {\\r\\n    public showPageFooter$ = new Subject<boolean>();\\r\\n    //Commenting out for now - may use in future iterations\\r\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\r\\n\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public active: any;\\r\\n    private _scollAtBottom = false;\\r\\n\\r\\n    // Page Footer START\\r\\n    public set showPageFooter(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageFooter = value;\\r\\n            this.showPageFooter$.next(this._showPageFooter);\\r\\n            this.updateSize();\\r\\n        });\\r\\n    }\\r\\n    public get showPageFooter() {\\r\\n        return this._showPageFooter;\\r\\n    }\\r\\n\\r\\n    // Commenting out for now - may use in future iterations\\r\\n    // public set titleText(text: string) {\\r\\n    //     setTimeout(() => {\\r\\n    //         this.titleText$.next(text);\\r\\n    //     });\\r\\n    // }\\r\\n    // Page Footer END\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n\\r\\n            this.updateSize();\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Page Footer\\r\\n    private _showPageFooter = false;\\r\\n\\r\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\r\\n        this._router.events.subscribe((event) => {\\r\\n            if (event instanceof NavigationEnd) {\\r\\n                this.showPageFooter = false;\\r\\n                this.actionButtons = [];\\r\\n                setTimeout(() => {\\r\\n                    this.onResize();\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        setTimeout(() => {\\r\\n            // Checks if the footer is present on resize and adjusts the padding of the main content wrapper accordingly.\\r\\n            const footerElement = document.getElementById(\'footer\');\\r\\n            const mainContentWrapperElement = document.getElementById(\'mainContentWrapper\');\\r\\n\\r\\n            if (footerElement !== null) {\\r\\n                mainContentWrapperElement.style.paddingBottom = footerElement.clientHeight + \'px\';\\r\\n            } else if (mainContentWrapperElement !== null) {\\r\\n                mainContentWrapperElement.style.paddingBottom = \'0px\';\\r\\n            }\\r\\n\\r\\n            // If the scoll position is at bottom, reset the scoll position to the new bottom position.\\r\\n            if (this._scollAtBottom === true) {\\r\\n                mainContentWrapperElement.scroll(0, mainContentWrapperElement.scrollHeight - mainContentWrapperElement.clientHeight);\\r\\n            }\\r\\n\\r\\n            // Detect if the mainContentWrapperElement is scrolled to the complete bottom\\r\\n            if (mainContentWrapperElement !== null) {\\r\\n                mainContentWrapperElement.onscroll = (e: Event) => {\\r\\n                    const targetElement: HTMLDivElement = e.target as HTMLDivElement;\\r\\n                    const scollLimit = targetElement.scrollHeight - targetElement.clientHeight;\\r\\n                    if (Math.ceil(targetElement.scrollTop) === scollLimit) {\\r\\n                        this._scollAtBottom = true;\\r\\n                    } else {\\r\\n                        this._scollAtBottom = false;\\r\\n                    }\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public updateSize() {\\r\\n        this.onResize();\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":9},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":11},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPageFooterItem","id":"interface-IUiPageFooterItem-807c7fd518369388c3d658017e19420c7398f1a0dc458e8db61b27d0a2f63ed864c21cae416c8d7dcaf8b840554ec6d035494a1efb6215a0dea6e58bd15e17ed-1","file":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\r\\n\\r\\nexport interface IUiPageFooterItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageFooterService {\\r\\n    public showPageFooter$ = new Subject<boolean>();\\r\\n    //Commenting out for now - may use in future iterations\\r\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\r\\n\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public active: any;\\r\\n\\r\\n    // Page Footer START\\r\\n    public set showPageFooter(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageFooter = value;\\r\\n            this.showPageFooter$.next(this._showPageFooter);\\r\\n        });\\r\\n    }\\r\\n    public get showPageFooter() {\\r\\n        return this._showPageFooter;\\r\\n    }\\r\\n\\r\\n    // Commenting out for now - may use in future iterations\\r\\n    // public set titleText(text: string) {\\r\\n    //     setTimeout(() => {\\r\\n    //         this.titleText$.next(text);\\r\\n    //     });\\r\\n    // }\\r\\n    // Page Footer END\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Page Footer\\r\\n    private _showPageFooter = false;\\r\\n\\r\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\r\\n        this._router.events.subscribe((event) => {\\r\\n            if (event instanceof NavigationEnd) {\\r\\n                this.showPageFooter = false;\\r\\n                this.actionButtons = [];\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":9},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":11},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiPageFooterItem-1"},{"name":"IUiPageHeaderItem","id":"interface-IUiPageHeaderItem-b5634cea7f9bd54402b17c655acc2c00b9da07666b339ee3a34f739289826e8976bcbf5764e6c4f2af42ca5b0dd3a8a226789fc5924813d259f8ecded60d8262","file":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\n// import { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\nexport interface IUiPageHeaderItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageHeaderService {\\r\\n    public breadcrumbString = \'\';\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\r\\n    public routeSegments = [];\\r\\n    public hideOnRoute = true;\\r\\n    public keepActionButtonsOnRoute = false;\\r\\n\\r\\n    // Title START\\r\\n    public set pageTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitle() {\\r\\n        return this._pageTitle;\\r\\n    }\\r\\n\\r\\n    public set pageTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitleParams() {\\r\\n        return this._pageTitleParams;\\r\\n    }\\r\\n    // Title END\\r\\n\\r\\n    public set pageSubTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitle() {\\r\\n        return this._pageSubTitle;\\r\\n    }\\r\\n\\r\\n    public set pageSubTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitleParams() {\\r\\n        return this._pageSubTitleParams;\\r\\n    }\\r\\n    // Sub Title END\\r\\n\\r\\n    // Back Button START\\r\\n    public set backToButtonText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._backToButtonText = value;\\r\\n        });\\r\\n    }\\r\\n    public get backToButtonText() {\\r\\n        return this._backToButtonText;\\r\\n    }\\r\\n\\r\\n    public set showBackButton(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBackButton = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBackButton() {\\r\\n        return this._showBackButton;\\r\\n    }\\r\\n    // Back Button END\\r\\n\\r\\n    // Breadcrumb // Breadcrumb are not available yet\\r\\n    public set showBreadcrumb(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBreadcrumb = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBreadcrumb() {\\r\\n        return this._showBreadcrumb;\\r\\n    }\\r\\n\\r\\n    // Status Badges\\r\\n    public set status(values: Array<IUiPageHeaderItem>) {\\r\\n        this._status = values;\\r\\n    }\\r\\n    public get status() {\\r\\n        return this._status;\\r\\n    }\\r\\n\\r\\n    // Pills\\r\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\r\\n        this._pills = values;\\r\\n    }\\r\\n    public get pills() {\\r\\n        return this._pills;\\r\\n    }\\r\\n\\r\\n    // Dropdowns START\\r\\n    public set dropdowns(value: Array<any>) {\\r\\n        setTimeout(() => {\\r\\n            this._dropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get dropdowns() {\\r\\n        return this._dropdowns;\\r\\n    }\\r\\n\\r\\n    public set showDropdowns(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showDropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get showDropdowns() {\\r\\n        return this._showDropdowns;\\r\\n    }\\r\\n    // Dropdowns END\\r\\n\\r\\n    // Sub Navigation\\r\\n    public set showSubNav(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showSubNav = value;\\r\\n        });\\r\\n    }\\r\\n    public get showSubNav() {\\r\\n        return this._showSubNav;\\r\\n    }\\r\\n\\r\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\r\\n        setTimeout(() => {\\r\\n            this._subNavs = values;\\r\\n        });\\r\\n    }\\r\\n    public get subNavs() {\\r\\n        return this._subNavs;\\r\\n    }\\r\\n\\r\\n    // Tabset\\r\\n    public set showTabsets(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showTabSets = value;\\r\\n        });\\r\\n    }\\r\\n    public get showTabsets() {\\r\\n        return this._showTabSets;\\r\\n    }\\r\\n\\r\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\r\\n        this._tabsets = values;\\r\\n    }\\r\\n    public get tabsets() {\\r\\n        return this._tabsets;\\r\\n    }\\r\\n\\r\\n    // Feedback Text\\r\\n    public set feedbackText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackText = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackText() {\\r\\n        return this._feedbackText;\\r\\n    }\\r\\n\\r\\n    // Feedback Text Params\\r\\n    public set feedbackTextParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackTextParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackTextParams() {\\r\\n        return this._feedbackTextParams;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon\\r\\n    public set feedbackIcon(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIcon = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIcon() {\\r\\n        return this._feedbackIcon;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon Color\\r\\n    public set feedbackIconColor(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIconColor = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIconColor() {\\r\\n        return this._feedbackIconColor;\\r\\n    }\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public get actionDropdowns() {\\r\\n        return this._actionDropdowns;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n    // Action Buttons END\\r\\n\\r\\n    // Page Header START\\r\\n    public set showPageHeader(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageHeader = value;\\r\\n            // this.subject.next(value);\\r\\n        });\\r\\n    }\\r\\n    public get showPageHeader() {\\r\\n        return this._showPageHeader;\\r\\n    }\\r\\n    // Page Header END\\r\\n\\r\\n    public subject = new Subject<boolean>();\\r\\n    public showPageHeader$ = new Subject<boolean>();\\r\\n\\r\\n    // Page Header\\r\\n    private _showPageHeader = false;\\r\\n\\r\\n    // Title\\r\\n    // private _showTitle = false;\\r\\n    private _pageTitle = \'\';\\r\\n    private _pageTitleParams = {};\\r\\n\\r\\n    // Sub Title\\r\\n    // private _showSubTitle = false;\\r\\n    private _pageSubTitle = \'\';\\r\\n    private _pageSubTitleParams = {};\\r\\n\\r\\n    // Back Button / Breadcrumbs\\r\\n    private _backToButtonText = \'\';\\r\\n    private _showBackButton = false;\\r\\n    private _showBreadcrumb = false;\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Pills / Status / SubNav/ Tabsets\\r\\n    private _pills: Array<IUiPageHeaderItem> = [];\\r\\n    private _status: Array<IUiPageHeaderItem> = [];\\r\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\r\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\r\\n\\r\\n    // Dropdowns\\r\\n    private _showDropdowns = false;\\r\\n    private _dropdowns: Array<any> = [];\\r\\n\\r\\n    // Sub Nav\\r\\n    private _showSubNav = false;\\r\\n\\r\\n    // Tabsets\\r\\n    private _showTabSets = false;\\r\\n\\r\\n    // Feedback\\r\\n    private _feedbackText = \'\';\\r\\n    private _feedbackTextParams = {};\\r\\n    private _feedbackIcon = \'\';\\r\\n    private _feedbackIconColor = \'\';\\r\\n\\r\\n    constructor(private _router: Router) {\\r\\n        // Hide Page Header on every navigation page out.\\r\\n        this._router.events.subscribe((evt) => {\\r\\n            if (evt instanceof NavigationEnd) {\\r\\n                if (this.hideOnRoute === true) {\\r\\n                    this.showPageHeader = false;\\r\\n                    this.subNavs = [];\\r\\n                    this.showSubNav = false;\\r\\n                    this.pageSubTitle = \'\';\\r\\n                }\\r\\n\\r\\n                const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\r\\n                if(!keepTabsets){\\r\\n                    this.tabsets = [];\\r\\n                    this.showTabsets = false;\\r\\n                }\\r\\n\\r\\n                if (!this.keepActionButtonsOnRoute) {\\r\\n                    this.actionButtons = [];\\r\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\r\\n                }\\r\\n\\r\\n                this.pills = [];\\r\\n                this.dropdowns = [];\\r\\n                this.backToButtonText = \'\';\\r\\n                this.backButtonText = \'COMMON.BACK\';\\r\\n                this.showBackButton = false;\\r\\n                this.feedbackText = \'\';\\r\\n                this.feedbackIcon = \'\';\\r\\n                this.feedbackIconColor = \'\';\\r\\n            }\\r\\n            if (evt instanceof NavigationStart) {\\r\\n                this.breadcrumbString = evt.url;\\r\\n                // this._layoutService.showContainer = true;\\r\\n                // this.routeSegments = evt.url.split(\'/\');\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":10},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":12},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPageHeaderItem","id":"interface-IUiPageHeaderItem-e70e4f61b59cf4910acd6e9f74d23b655b8445785527407bd5817124b9226dc1f8f0db386bc3d41881ce6be2a5fb2a665045f68315c7f62df56e2b59b998a30f-1","file":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\n// import { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\nexport interface IUiPageHeaderItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageHeaderService {\\r\\n    public breadcrumbString = \'\';\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\r\\n    public routeSegments = [];\\r\\n    public hideOnRoute = true;\\r\\n    public keepActionButtonsOnRoute = false;\\r\\n\\r\\n    // Title START\\r\\n    public set pageTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitle() {\\r\\n        return this._pageTitle;\\r\\n    }\\r\\n\\r\\n    public set pageTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitleParams() {\\r\\n        return this._pageTitleParams;\\r\\n    }\\r\\n    // Title END\\r\\n\\r\\n    public set pageSubTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitle() {\\r\\n        return this._pageSubTitle;\\r\\n    }\\r\\n\\r\\n    public set pageSubTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitleParams() {\\r\\n        return this._pageSubTitleParams;\\r\\n    }\\r\\n    // Sub Title END\\r\\n\\r\\n    // Back Button START\\r\\n    public set backToButtonText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._backToButtonText = value;\\r\\n        });\\r\\n    }\\r\\n    public get backToButtonText() {\\r\\n        return this._backToButtonText;\\r\\n    }\\r\\n\\r\\n    public set showBackButton(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBackButton = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBackButton() {\\r\\n        return this._showBackButton;\\r\\n    }\\r\\n    // Back Button END\\r\\n\\r\\n    // Breadcrumb // Breadcrumb are not available yet\\r\\n    public set showBreadcrumb(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBreadcrumb = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBreadcrumb() {\\r\\n        return this._showBreadcrumb;\\r\\n    }\\r\\n\\r\\n    // Status Badges\\r\\n    public set status(values: Array<IUiPageHeaderItem>) {\\r\\n        this._status = values;\\r\\n    }\\r\\n    public get status() {\\r\\n        return this._status;\\r\\n    }\\r\\n\\r\\n    // Pills\\r\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\r\\n        this._pills = values;\\r\\n    }\\r\\n    public get pills() {\\r\\n        return this._pills;\\r\\n    }\\r\\n\\r\\n    // Dropdowns START\\r\\n    public set dropdowns(value: Array<any>) {\\r\\n        setTimeout(() => {\\r\\n            this._dropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get dropdowns() {\\r\\n        return this._dropdowns;\\r\\n    }\\r\\n\\r\\n    public set showDropdowns(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showDropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get showDropdowns() {\\r\\n        return this._showDropdowns;\\r\\n    }\\r\\n    // Dropdowns END\\r\\n\\r\\n    // Sub Navigation\\r\\n    public set showSubNav(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showSubNav = value;\\r\\n        });\\r\\n    }\\r\\n    public get showSubNav() {\\r\\n        return this._showSubNav;\\r\\n    }\\r\\n\\r\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\r\\n        setTimeout(() => {\\r\\n            this._subNavs = values;\\r\\n        });\\r\\n    }\\r\\n    public get subNavs() {\\r\\n        return this._subNavs;\\r\\n    }\\r\\n\\r\\n    // Tabset\\r\\n    public set showTabsets(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showTabSets = value;\\r\\n        });\\r\\n    }\\r\\n    public get showTabsets() {\\r\\n        return this._showTabSets;\\r\\n    }\\r\\n\\r\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\r\\n        this._tabsets = values;\\r\\n    }\\r\\n    public get tabsets() {\\r\\n        return this._tabsets;\\r\\n    }\\r\\n\\r\\n    // Feedback Text\\r\\n    public set feedbackText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackText = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackText() {\\r\\n        return this._feedbackText;\\r\\n    }\\r\\n\\r\\n    // Feedback Text Params\\r\\n    public set feedbackTextParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackTextParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackTextParams() {\\r\\n        return this._feedbackTextParams;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon\\r\\n    public set feedbackIcon(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIcon = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIcon() {\\r\\n        return this._feedbackIcon;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon Color\\r\\n    public set feedbackIconColor(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIconColor = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIconColor() {\\r\\n        return this._feedbackIconColor;\\r\\n    }\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public get actionDropdowns() {\\r\\n        return this._actionDropdowns;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n    // Action Buttons END\\r\\n\\r\\n    // Page Header START\\r\\n    public set showPageHeader(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageHeader = value;\\r\\n            // this.subject.next(value);\\r\\n        });\\r\\n    }\\r\\n    public get showPageHeader() {\\r\\n        return this._showPageHeader;\\r\\n    }\\r\\n    // Page Header END\\r\\n\\r\\n    public subject = new Subject<boolean>();\\r\\n    public showPageHeader$ = new Subject<boolean>();\\r\\n\\r\\n    // Page Header\\r\\n    private _showPageHeader = false;\\r\\n\\r\\n    // Title\\r\\n    // private _showTitle = false;\\r\\n    private _pageTitle = \'\';\\r\\n    private _pageTitleParams = {};\\r\\n\\r\\n    // Sub Title\\r\\n    // private _showSubTitle = false;\\r\\n    private _pageSubTitle = \'\';\\r\\n    private _pageSubTitleParams = {};\\r\\n\\r\\n    // Back Button / Breadcrumbs\\r\\n    private _backToButtonText = \'\';\\r\\n    private _showBackButton = false;\\r\\n    private _showBreadcrumb = false;\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Pills / Status / SubNav/ Tabsets\\r\\n    private _pills: Array<IUiPageHeaderItem> = [];\\r\\n    private _status: Array<IUiPageHeaderItem> = [];\\r\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\r\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\r\\n\\r\\n    // Dropdowns\\r\\n    private _showDropdowns = false;\\r\\n    private _dropdowns: Array<any> = [];\\r\\n\\r\\n    // Sub Nav\\r\\n    private _showSubNav = false;\\r\\n\\r\\n    // Tabsets\\r\\n    private _showTabSets = false;\\r\\n\\r\\n    // Feedback\\r\\n    private _feedbackText = \'\';\\r\\n    private _feedbackTextParams = {};\\r\\n    private _feedbackIcon = \'\';\\r\\n    private _feedbackIconColor = \'\';\\r\\n\\r\\n    constructor(private _router: Router) {\\r\\n        // Hide Page Header on every navigation page out.\\r\\n        this._router.events.subscribe((evt) => {\\r\\n            if (evt instanceof NavigationEnd) {\\r\\n                if (this.hideOnRoute === true) {\\r\\n                    this.showPageHeader = false;\\r\\n                    this.subNavs = [];\\r\\n                    this.showSubNav = false;\\r\\n                }\\r\\n\\r\\n                // const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\r\\n                // if(!keepTabsets){\\r\\n                //     this.tabsets = [];\\r\\n                //     this.showTabsets = false;\\r\\n                // }\\r\\n\\r\\n                if (!this.keepActionButtonsOnRoute) {\\r\\n                    this.actionButtons = [];\\r\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\r\\n                }\\r\\n\\r\\n                this.pills = [];\\r\\n                this.dropdowns = [];\\r\\n                this.pageSubTitle = \'\';\\r\\n                this.backToButtonText = \'\';\\r\\n                this.backButtonText = \'COMMON.BACK\';\\r\\n                this.showBackButton = false;\\r\\n                this.feedbackText = \'\';\\r\\n                this.feedbackIcon = \'\';\\r\\n                this.feedbackIconColor = \'\';\\r\\n            }\\r\\n            if (evt instanceof NavigationStart) {\\r\\n                this.breadcrumbString = evt.url;\\r\\n                // this._layoutService.showContainer = true;\\r\\n                // this.routeSegments = evt.url.split(\'/\');\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":10},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":12},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiPageHeaderItem-1"},{"name":"IUiPasswordLessSignInResponse","id":"interface-IUiPasswordLessSignInResponse-f1e014e653322088bfb0d41dc55fd25327eb86d3d994fc3fffd6ff9adbc2a37788429c77759cf103d3fb564245743162dd6932f6c1ad9299d000fdace3b419e8","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders } from \'@angular/common/http\';\\r\\nimport { Injectable } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\n// Rxjs\\r\\nimport { catchError, map, tap } from \'rxjs/operators\';\\r\\nimport { throwError } from \'rxjs\';\\r\\n// Lib\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n// Ngx\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { UiUserService } from \'@lib/services/user\';\\r\\n\\r\\n// Ngb\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\r\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\r\\n\\r\\ndeclare const Assent: IUiAciSharedSession;\\r\\n\\r\\nexport interface IUiPasswordLessSignInResponse {\\r\\n    sessionKey: string;\\r\\n    asmUri: string;\\r\\n}\\r\\n\\r\\nexport interface IUiOtpConfirmationResponse {\\r\\n    session: {\\r\\n        token: string;\\r\\n        sessionKey: string;\\r\\n        consentGiven: boolean;\\r\\n        uniqueSessionGuid: string;\\r\\n    };\\r\\n    sessionKey: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiPasswordlessLoginService {\\r\\n    public sessionKey: string;\\r\\n    public token: string;\\r\\n    private readonly _requestOtpTokenSlug_cognito = \'authentication/signin\';\\r\\n    private readonly _verifyOtpTokenSlug_cognito = \'authentication/verifytoken\';\\r\\n    private readonly _requestOtpTokenSlug_auth0 = \'authentication/v2/requestotp\';\\r\\n    private readonly _verifyOtpTokenSlug_auth0 = \'authentication/v2/verifyotp\';\\r\\n\\r\\n    private _cookieDomain: string;\\r\\n\\r\\n    constructor(\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _httpClient: HttpClient,\\r\\n        private _cookieService: CookieService,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _userService: UiUserService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _router: Router,\\r\\n        private _translate: TranslateService\\r\\n    ) {}\\r\\n\\r\\n    // call the API sign in method using an email address\\r\\n    public signIn(email: string, language: string) {\\r\\n        let authResponse: IUiPasswordLessSignInResponse;\\r\\n        const endpoint =\\r\\n            `${this._configurationService.appConfig.iamApi}` +\\r\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                ? this._requestOtpTokenSlug_cognito\\r\\n                : this._requestOtpTokenSlug_auth0);\\r\\n        const lang3letter = AcpSupportedLanguesLongCodeEnum[language];\\r\\n\\r\\n        const body = {\\r\\n            email,\\r\\n            language: lang3letter,\\r\\n        };\\r\\n\\r\\n        return this._httpClient.post(`${endpoint}`, body, { observe: \'response\' }).pipe(\\r\\n            map((response) => {\\r\\n                // not party service validation failed\\r\\n                if (response.status !== 248) {\\r\\n                    if (response.body) {\\r\\n                        if (response.status === 220) {\\r\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\r\\n                            window.location.href = authResponse.asmUri;\\r\\n                        } else {\\r\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\r\\n                            this.setSessionKeyCookie(authResponse.sessionKey, email);\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                // else show no errors and proceed to otp entry screen\\r\\n                return response.status;\\r\\n            }),\\r\\n            catchError((error) => {\\r\\n                let errorMsg: string;\\r\\n                if (error.error instanceof ErrorEvent) {\\r\\n                    errorMsg = `Error: ${error.error.message}`;\\r\\n                } else {\\r\\n                    errorMsg = this.getSignInErrorMessage(error);\\r\\n                }\\r\\n\\r\\n                return throwError(() => new Error(errorMsg));\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // call the API verify token method\\r\\n    public verifyToken(email: string, sessionKey: string, otp: string, language: string) {\\r\\n        const endpoint =\\r\\n            `${this._configurationService.appConfig.iamApi}` +\\r\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                ? this._verifyOtpTokenSlug_cognito\\r\\n                : this._verifyOtpTokenSlug_auth0);\\r\\n\\r\\n        language = AcpSupportedLanguesLongCodeEnum[language];\\r\\n\\r\\n        const body = {\\r\\n            email,\\r\\n            sessionKey,\\r\\n            otp,\\r\\n            language,\\r\\n        };\\r\\n\\r\\n        return this._httpClient.post(`${endpoint}`, body).pipe(\\r\\n            tap((data: IUiOtpConfirmationResponse) => {\\r\\n                if (data.session) {\\r\\n                    this.setTokenCookie(data);\\r\\n                } else if (data.sessionKey) {\\r\\n                    this.setSessionKeyCookie(data.sessionKey, email);\\r\\n                    this.throwInvalidTokenError();\\r\\n                }\\r\\n            }),\\r\\n            catchError((error) => {\\r\\n                let errorMsg: string;\\r\\n                if (error.error instanceof ErrorEvent) {\\r\\n                    errorMsg = `Error: ${error.error.message}`;\\r\\n                } else {\\r\\n                    errorMsg = this.getVerifyTokenErrorMessage(error);\\r\\n                }\\r\\n\\r\\n                return throwError(() => new Error(errorMsg));\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getCookieDomain(): string {\\r\\n        let domain = this._configService?.appConfig?.coreAuthCookieDomain;\\r\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\r\\n            domain = \'localhost\';\\r\\n        }\\r\\n\\r\\n        return domain;\\r\\n    }\\r\\n\\r\\n    private throwInvalidTokenError() {\\r\\n        let errorMsg: string;\\r\\n        this._translate.get(\'AUTHENTICATION.ERRORS.INVALID_CODE\').subscribe((res: string) => {\\r\\n            errorMsg = res;\\r\\n        });\\r\\n        throwError(() => new Error(errorMsg));\\r\\n    }\\r\\n\\r\\n    private getVerifyTokenErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // Party Service Validation failed\\r\\n            case 412: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            // Expired OTP\\r\\n            case 417: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            // Session expired\\r\\n            case 419: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private getSignInErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // Invalid OTP\\r\\n            case 248: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private setSessionKeyCookie(sessionKey: string, email: string) {\\r\\n        const expirationDate: Date = new Date();\\r\\n        expirationDate.setHours(expirationDate.getHours() + 3);\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        this.sessionKey = sessionKey;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.emailCookieId,\\r\\n            email,\\r\\n            null,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // called after use verifies the OTP\\r\\n    private setTokenCookie(response: IUiOtpConfirmationResponse) {\\r\\n        const expirationDate = new Date(this.getTokenExpirationDate(response.session.token));\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        this.token = response.session.token;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            response.session.token,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this.sessionKey = response.session.sessionKey;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.sessionCookieId,\\r\\n            response.session.sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.uniqueSessionCookieId,\\r\\n            response.session.uniqueSessionGuid,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this.loadUserDetails(response.session.token);\\r\\n\\r\\n        this.initAssentSession();\\r\\n    }\\r\\n\\r\\n    private loadUserDetails(token: string) {\\r\\n        const userEmail = this.getTokenEmail(token);\\r\\n        const tokenPayload = this.getTokenPayload(token);\\r\\n\\r\\n        this._userService.selectUser(userEmail, tokenPayload);\\r\\n    }\\r\\n\\r\\n    private initAssentSession() {\\r\\n        const options: IUiAciSessionOptions = {\\r\\n            cookieDomain: this._cookieDomain,\\r\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\r\\n            logoutOverride: () => {\\r\\n                this.clearUserCredentials();\\r\\n                this._modalService.dismissAll();\\r\\n                this._router.navigate([\'\']);\\r\\n            },\\r\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\r\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\r\\n            onExtendSession: () => {\\r\\n                return \'\';\\r\\n            },\\r\\n            sessionExpiryLogoutCookieRequired: true,\\r\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\r\\n            secureCookie: this._configService.appConfig.secureCookie,\\r\\n        };\\r\\n\\r\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\r\\n        if (document.cookie.match(cookiePattern)) {\\r\\n            Assent.session.initialize(options);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private clearUserCredentials() {\\r\\n        Assent.session.dispose();\\r\\n        this._cookieService.deleteAll(\'/\', this._cookieDomain);\\r\\n        this._userService.logout();\\r\\n    }\\r\\n\\r\\n    private getTokenEmail(token: string): string {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.sub) {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        return data.sub;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\r\\n     *\\r\\n     * @param token jwt\\r\\n     * @returns milliseconds\\r\\n     */\\r\\n    private getTokenExpirationDate(token: string): number {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.exp) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return data.exp * 1000;\\r\\n    }\\r\\n\\r\\n    private getTokenPayload(token: string): any {\\r\\n        if (!token) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const tokenParts = token.split(\'.\');\\r\\n        if (!tokenParts || tokenParts.length < 2) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const data = JSON.parse(atob(tokenParts[1]));\\r\\n            return data;\\r\\n        } catch (error) {\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"asmUri","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPendoAccountInfo","id":"interface-IUiPendoAccountInfo-9cc49d886743e357cf969eb46111e783798c0c44e42636c89ed0743e9264bd6811cba1458c67c49136f8385c2e712728f50216aaefcca3c35e20e59f588c894d","file":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPendoVisitorInfo {\\r\\n    id: string;\\r\\n    domain: string;\\r\\n    roles: string[];\\r\\n    permissions: string[];\\r\\n    environment: string;\\r\\n    email: string;\\r\\n}\\r\\n\\r\\nexport interface IUiPendoAccountInfo {\\r\\n    id: string;\\r\\n}\\r\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPendoService","id":"interface-IUiPendoService-6b6ec0d29a06d047601466d0e0c034a832f217e6fb3bef42faac6f34f304b6dd6b874890903213b6e21ff9885030415df7c131fc96d42680dc4db50c917a4a0c","file":"libs/ui/src/lib/services/analytics/pendo/pendo-config.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPendoService {\\r\\n    apiKey: string;\\r\\n    enabled: boolean;\\r\\n}\\r\\n","properties":[{"name":"apiKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"enabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPendoVisitorInfo","id":"interface-IUiPendoVisitorInfo-9cc49d886743e357cf969eb46111e783798c0c44e42636c89ed0743e9264bd6811cba1458c67c49136f8385c2e712728f50216aaefcca3c35e20e59f588c894d","file":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPendoVisitorInfo {\\r\\n    id: string;\\r\\n    domain: string;\\r\\n    roles: string[];\\r\\n    permissions: string[];\\r\\n    environment: string;\\r\\n    email: string;\\r\\n}\\r\\n\\r\\nexport interface IUiPendoAccountInfo {\\r\\n    id: string;\\r\\n}\\r\\n","properties":[{"name":"domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"environment","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"permissions","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":5},{"name":"roles","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPermissions","id":"interface-IUiPermissions-21a124071092a82ea0e8911f357272801bdf79e1e1a71cb875397083cd634f348d48bbe80f66a521e5d336944c7c2791db2f15302f0bb1594a5fb8f090a2b237","file":"libs/ui/src/lib/services/user/interfaces/permissions.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPermissions {\\r\\n    userManagement: boolean;\\r\\n    exceptionManagement: boolean;\\r\\n    segmentationReport: boolean;\\r\\n    editCompanyProfile: boolean;\\r\\n    viewCompanyProfile: boolean;\\r\\n    viewContactManagement: boolean;\\r\\n    editContactManagement: boolean;\\r\\n    accessDeclarationSearch: boolean;\\r\\n    accessTransactionLogs: boolean;\\r\\n    accessIndirectMonitoring: boolean;\\r\\n    viewIndirectMonitoringRecords: boolean;\\r\\n    addIndirectMonitoringRecords: boolean;\\r\\n    editIndirectMonitoringRecords: boolean;\\r\\n    deleteIndirectMonitoringRecords: boolean;\\r\\n    viewIndirectMonitoringKeywordsList: boolean;\\r\\n    addIndirectMonitoringKeywordsList: boolean;\\r\\n    editIndirectMonitoringKeywordsList: boolean;\\r\\n    deleteIndirectMonitoringKeywordsList: boolean;\\r\\n    accessCorrectiveActions: boolean;\\r\\n    fullViewCorrectiveActionRecords: boolean;\\r\\n    addCorrectiveActionRecords: boolean;\\r\\n    editCorrectiveActionRecords: boolean;\\r\\n    deleteCorrectiveActionRecords: boolean;\\r\\n    respondToCorrectiveActions: boolean;\\r\\n    manageCorrectiveActionTemplates: boolean;\\r\\n    viewAssignedCorrectiveActionRecords: boolean;\\r\\n    viewNoMatchSuppliers: boolean;\\r\\n    viewDraftOrganizations: boolean;\\r\\n    viewNetworkDeclarations: boolean;\\r\\n    accessEvidenceReview: boolean;\\r\\n    modifyReview: boolean;\\r\\n    manageEvidenceType: boolean;\\r\\n    manageReviewCriteria: boolean;\\r\\n    viewEvidenceReview: boolean;\\r\\n    manageEvidenceTypeMapping: boolean;\\r\\n    accessCustomerRequests: boolean;\\r\\n    accessPartLevelCustomerRequests: boolean;\\r\\n    aud: string[];\\r\\n}\\r\\n","properties":[{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":11},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":38},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13},{"name":"aud","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":39},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":15},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":5},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":14},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":3},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":32},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"userManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":2},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":6},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":7},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":29},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":16},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPersonDetails","id":"interface-IUiPersonDetails-fa819ac454d05934f3171c3d7831983796293c9679208b2a04dc100e42c6d6bc73f7f2840bc0ad8c6475242f9d6d72a19b22cf8fece12cfb0204e2e6432ea13d","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/person-details.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiAddressDetails, IUiLanguage } from \'.\';\\r\\nimport { AcpDataSourceEnum } from \'@app/modules/shared/add-edit-company/enums\';\\r\\n\\r\\nexport interface IUiPersonDetails {\\r\\n    personGuid: string;\\r\\n    firstName: string;\\r\\n    lastName: string;\\r\\n    address: IUiAddressDetails;\\r\\n    email: string;\\r\\n    phone: string;\\r\\n    languages: IUiLanguage[];\\r\\n    jobTitle: string;\\r\\n    dataSourceId: AcpDataSourceEnum;\\r\\n}\\r\\n","properties":[{"name":"address","deprecated":false,"deprecationMessage":"","type":"IUiAddressDetails","optional":false,"description":"","line":9},{"name":"dataSourceId","deprecated":false,"deprecationMessage":"","type":"AcpDataSourceEnum","optional":false,"description":"","line":14},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"jobTitle","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"languages","deprecated":false,"deprecationMessage":"","type":"IUiLanguage[]","optional":false,"description":"","line":12},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"personGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"phone","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPillComponent","id":"interface-IUiPillComponent-a91580a004ff1058aa360472262d98ec4cda1b5dbf3e51eda6eb5885c83d8bd514ff56873b882866d4eabe21ab6f4324b2bc72f8170d383be3baec9e796cab6e","file":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from \'@angular/core\';\\r\\nimport { UiPillColorEnum } from \'@lib/modules/form-controls/pills/enums/pill-color.enum\';\\r\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\r\\n\\r\\nexport interface IUiPillComponent {\\r\\n    pillText: string;\\r\\n    color: UiPillColorEnum;\\r\\n    size: UiPillSizeEnum;\\r\\n    icon: string;\\r\\n    value: number;\\r\\n    hasCloseButton: boolean;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-pill\',\\r\\n    templateUrl: \'./pill.component.html\',\\r\\n    styleUrls: [\'./pill.component.scss\'],\\r\\n})\\r\\nexport class UiPillComponent implements OnInit, AfterViewInit {\\r\\n    @ViewChild(\'pill\') public pill: ElementRef;\\r\\n\\r\\n    @Output() public xButtonClick = new EventEmitter<any>();\\r\\n\\r\\n    @Input() public pillText; //Text is required\\r\\n    @Input() public color: UiPillColorEnum = UiPillColorEnum.neutral;\\r\\n    @Input() public size: UiPillSizeEnum = UiPillSizeEnum.md;\\r\\n    @Input() public hasCloseButton = false;\\r\\n    @Input() public noHover = true;\\r\\n    @Input() public icon;\\r\\n    @Input() public value; //Optional\\r\\n    @Input() public id;\\r\\n    /**\\r\\n     * If the pill is part of a group of pills that are aggregated, this will be true.\\r\\n     *\\r\\n     * Used by `UiMultiSelectPillComponent` to determine if the pill should be removed from the list\\r\\n     */\\r\\n    @Input() public isAggregated: boolean;\\r\\n\\r\\n    public generatedId;\\r\\n    public isTooltipDisabled = true;\\r\\n\\r\\n    public constructor() { }\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        //Need a unique ID for inner div of pill to check if tooltip is enabled for each pill\\r\\n        this.generatedId = \'pill-inner-\' + this.id;\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit(): void {\\r\\n        setTimeout(() => {\\r\\n            this.checkColumnWidth();\\r\\n        }, 100);\\r\\n    }\\r\\n\\r\\n    //Checks width of inner div of pill to determine if tooltip is needed\\r\\n    public checkColumnWidth() {\\r\\n        if (this.pill && this.pill.nativeElement.firstChild.offsetWidth >= this.pill.nativeElement.firstChild.scrollWidth) {\\r\\n            this.isTooltipDisabled = true;\\r\\n        } else {\\r\\n            this.isTooltipDisabled = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        this.checkColumnWidth();\\r\\n    }\\r\\n\\r\\n    public onCloseClick() {\\r\\n        this.pill.nativeElement.remove();\\r\\n        this.xButtonClick.emit(this);\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"UiPillColorEnum","optional":false,"description":"","line":7},{"name":"hasCloseButton","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":11},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"pillText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"size","deprecated":false,"deprecationMessage":"","type":"UiPillSizeEnum","optional":false,"description":"","line":8},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiQuickFilter","id":"interface-IUiQuickFilter-3a9393598211aca95404c793360adb1da3edb64dc441304d8c5be0ddb5c3f364a41d2770ae650c84f517f506829e0e6263683c305f96aa23f8d6215aac218d52","file":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiQuickFilterOption {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    disabled: boolean;\\r\\n    value: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiQuickFilter {\\r\\n    [key: string]: {\\r\\n        label: string;\\r\\n        options: Array<IUiQuickFilterOption>;\\r\\n        index?: number;\\r\\n        showSelectClearBtns?: boolean;\\r\\n        showSearch?: boolean;\\r\\n        small?: boolean;\\r\\n        multiSelect?: boolean;\\r\\n        disabled?: boolean;\\r\\n    };\\r\\n}\\r\\n","properties":[],"indexSignatures":[{"id":"index-declaration-3a9393598211aca95404c793360adb1da3edb64dc441304d8c5be0ddb5c3f364a41d2770ae650c84f517f506829e0e6263683c305f96aa23f8d6215aac218d52","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"literal type","line":8,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"IUiQuickFilterOption","id":"interface-IUiQuickFilterOption-3a9393598211aca95404c793360adb1da3edb64dc441304d8c5be0ddb5c3f364a41d2770ae650c84f517f506829e0e6263683c305f96aa23f8d6215aac218d52","file":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiQuickFilterOption {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    disabled: boolean;\\r\\n    value: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiQuickFilter {\\r\\n    [key: string]: {\\r\\n        label: string;\\r\\n        options: Array<IUiQuickFilterOption>;\\r\\n        index?: number;\\r\\n        showSelectClearBtns?: boolean;\\r\\n        showSearch?: boolean;\\r\\n        small?: boolean;\\r\\n        multiSelect?: boolean;\\r\\n        disabled?: boolean;\\r\\n    };\\r\\n}\\r\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"value","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRegulationLeaf","id":"interface-IUiRegulationLeaf-c47a3d7a7756595e258d2775f53fd8b6e9912df409bc5fd1d747482ab11345eedbba86984e0e562c12f1f4b228a75b0f59a03bcf38f4e9adc6705a84cb92dad7","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiRegulationShort } from \'./regulation-short.interface\';\\r\\n\\r\\nexport interface IUiRegulationsTree {\\r\\n    regulation: IUiRegulationShort;\\r\\n    selected?: boolean;\\r\\n    children?: IUiRegulationLeaf[];\\r\\n}\\r\\n\\r\\nexport interface IUiRegulationLeaf {\\r\\n    regulation: IUiRegulationShort;\\r\\n    selected?: boolean;\\r\\n    children?: IUiRegulationLeaf[];\\r\\n}\\r\\n","properties":[{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiRegulationLeaf[]","optional":true,"description":"","line":13},{"name":"regulation","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort","optional":false,"description":"","line":11},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRegulationShort","id":"interface-IUiRegulationShort-31c8e8b0c3a24a3916ebf85c2fc3161c2829db0adc6553f8f2ea0c5e0fdeb5683f2ee612d0c4b3c8f2f2c86f6c2ce026314c1aeaeb84e01971752abcb9231540","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulation-short.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { UiRegulationTierEnum } from \'../enums\';\\r\\n\\r\\nexport interface IUiRegulationShort {\\r\\n    regulationName: string;\\r\\n    regulationGuid: string;\\r\\n    regulationTierId: UiRegulationTierEnum;\\r\\n    isStandalone?: boolean;\\r\\n}\\r\\n","properties":[{"name":"isStandalone","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":8},{"name":"regulationGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"regulationName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"regulationTierId","deprecated":false,"deprecationMessage":"","type":"UiRegulationTierEnum","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRegulationsTree","id":"interface-IUiRegulationsTree-c47a3d7a7756595e258d2775f53fd8b6e9912df409bc5fd1d747482ab11345eedbba86984e0e562c12f1f4b228a75b0f59a03bcf38f4e9adc6705a84cb92dad7","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiRegulationShort } from \'./regulation-short.interface\';\\r\\n\\r\\nexport interface IUiRegulationsTree {\\r\\n    regulation: IUiRegulationShort;\\r\\n    selected?: boolean;\\r\\n    children?: IUiRegulationLeaf[];\\r\\n}\\r\\n\\r\\nexport interface IUiRegulationLeaf {\\r\\n    regulation: IUiRegulationShort;\\r\\n    selected?: boolean;\\r\\n    children?: IUiRegulationLeaf[];\\r\\n}\\r\\n","properties":[{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiRegulationLeaf[]","optional":true,"description":"","line":7},{"name":"regulation","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort","optional":false,"description":"","line":5},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRole","id":"interface-IUiRole-a66e1f1202024613d09201cf5fdc82ea2cee3724291f307e9b5c87993ec61b5a83923d3f5f3c11bfea200fa091c6a5ba321c1d2af5657aad535b2dbc70bf6426","file":"libs/ui/src/lib/services/user/interfaces/role.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiRole {\\r\\n    id: string;\\r\\n    name: string;\\r\\n}\\r\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSelectionChangeParams","id":"interface-IUiSelectionChangeParams-782883136e592fa6d00fc9ee791447b22f510a8edebcc077c4632e544ea16036d843b35eb610bd681065021bb5ba4b00dd9afcf7c075c5bb09111b04b4354c83","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\r\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\r\\n\\r\\nexport interface IUiCustomHeaderParams {\\r\\n    menuIcon: string;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtn {\\r\\n    icon?: string;\\r\\n    text: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    clicked: (params: IUiActionCellRendererParams) => void;\\r\\n}\\r\\n\\r\\nexport interface IUiActionBtnConfig {\\r\\n    itemId: string;\\r\\n    rowId: string;\\r\\n    inlineIcons?: boolean;\\r\\n    showIconsInMenu?: boolean;\\r\\n    showLabel?: boolean;\\r\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\r\\n}\\r\\n\\r\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\r\\n\\r\\nexport interface IUiActionDivider {\\r\\n    divider?: boolean;\\r\\n    visible?: boolean;\\r\\n}\\r\\n\\r\\nexport interface IUiSelectionChangeParams {\\r\\n    gridId: string;\\r\\n    selectedRows: RowNode[];\\r\\n}\\r\\n\\r\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\r\\n    gridId: any;\\r\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\r\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n}\\r\\n","properties":[{"name":"gridId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"selectedRows","deprecated":false,"deprecationMessage":"","type":"RowNode[]","optional":false,"description":"","line":36}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiServerSideFilter","id":"interface-IUiServerSideFilter-a78af670f67474f678fd5107d592cf6836d7e5ecf2b2333844cde20d82808f883830f97723859e86e680f3f1aa66c907038336c8df404e9c29b452f80e64b3cf","file":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiFilterModel {\\r\\n    [colId: string]: IUiServerSideFilter | IUiClientSideFilter;\\r\\n}\\r\\n\\r\\nexport interface IUiServerSideFilter {\\r\\n    filterType: string;\\r\\n    type: string;\\r\\n    filter: string;\\r\\n}\\r\\n\\r\\nexport interface IUiClientSideFilter {\\r\\n    filterType: string;\\r\\n    values: string[];\\r\\n}\\r\\n","properties":[{"name":"filter","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"filterType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSession","id":"interface-IUiSession-71acd77d16a4bd007e3a0a6bface8d60604527732e48ad65904038eed880eb7fcb0d34830617b356173117ea4473953af2edff3b3a817493f169c722c486d032","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\r\\n// RxJS\\r\\nimport { Observable, throwError } from \'rxjs\';\\r\\nimport { catchError, map, take, tap } from \'rxjs/operators\';\\r\\n// Ngx\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Ngb\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Services\\r\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\r\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\r\\n// Interfaces\\r\\n\\r\\n//Enum\\r\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\r\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\r\\n\\r\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\r\\ndeclare const Assent: IUiAciSharedSession;\\r\\n\\r\\nexport interface IUiAuthResponse {\\r\\n    session: IUiSession;\\r\\n}\\r\\n\\r\\nexport interface IUiSession {\\r\\n    sessionKey: string;\\r\\n    token: string;\\r\\n    uniqueSessionGuid: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiAuthenticationService {\\r\\n    public authResponse: IUiAuthResponse;\\r\\n    public assentContextKey = \'\';\\r\\n\\r\\n    private _httpClient: HttpClient;\\r\\n    private _cookieDomain: string;\\r\\n    private readonly _loginPath = \'login/password\';\\r\\n\\r\\n    constructor(\\r\\n        private _handler: HttpBackend,\\r\\n        private _router: Router,\\r\\n        private _userService: UiUserService,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _cookieService: CookieService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _translate: TranslateService,\\r\\n        private _toastService: UiToastService\\r\\n    ) {\\r\\n        // Use HttpBackend so it does not go through http-error-interceptor\\r\\n        this._httpClient = new HttpClient(this._handler);\\r\\n\\r\\n        this._configService.configLoaded$.pipe(take(1)).subscribe(() => {\\r\\n            this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n            const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n            const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n            const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\r\\n\\r\\n            if (token && sessionKey) {\\r\\n                if (!this.authResponse) {\\r\\n                    this.authResponse = {\\r\\n                        session: {\\r\\n                            sessionKey: \'\',\\r\\n                            token: \'\',\\r\\n                            uniqueSessionGuid: \'\',\\r\\n                        },\\r\\n                    };\\r\\n                }\\r\\n                this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\r\\n                this.loadUserDetails(token);\\r\\n                this.initAssentSession();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if there is a logged user\\r\\n     *\\r\\n     * @returns\\r\\n     */\\r\\n    public isLoggedIn(): boolean {\\r\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n        const tokenExpirationDate = this.getTokenExpirationDate(token);\\r\\n\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n        const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\r\\n        // debugger\\r\\n        if (token && sessionKey) {\\r\\n            if (!this.authResponse) {\\r\\n                this.authResponse = {\\r\\n                    session: {\\r\\n                        sessionKey: \'\',\\r\\n                        token: \'\',\\r\\n                        uniqueSessionGuid: \'\',\\r\\n                    },\\r\\n                };\\r\\n            }\\r\\n            this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\r\\n            this.loadUserDetails(token);\\r\\n            this.initAssentSession();\\r\\n        }\\r\\n\\r\\n        return !!tokenExpirationDate && Date.now() < tokenExpirationDate;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the logged-in user is an Assentee\\r\\n     *\\r\\n     * @returns boolean\\r\\n     */\\r\\n    public isAssentee(): boolean {\\r\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n        const email = this.getTokenEmail(token);\\r\\n        return email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Login to CoreAuth\\r\\n     *\\r\\n     * @param email\\r\\n     * @param password\\r\\n     * @returns\\r\\n     */\\r\\n    public loginCoreAuth(email: string, password: string): Observable<IUiAuthResponse> {\\r\\n        return this._httpClient\\r\\n            .post<any>(`${this._configService.appConfig.authApi}/${this._loginPath}`, {\\r\\n                email,\\r\\n                password,\\r\\n            })\\r\\n            .pipe(\\r\\n                map((data: IUiSession) => {\\r\\n                    const response: IUiAuthResponse = {\\r\\n                        session: data,\\r\\n                    };\\r\\n                    this.initializeSession(response);\\r\\n                    return response; // return the response\\r\\n                }),\\r\\n                catchError((error: Error) => {\\r\\n                    if (error instanceof HttpErrorResponse) {\\r\\n                        // Handle back-end error\\r\\n                        console.error(\'Back-end error:\', error.message);\\r\\n                    } else {\\r\\n                        // Handle front-end error\\r\\n                        console.error(\'Front-end error:\', error.message);\\r\\n                    }\\r\\n                    return throwError(() => error);\\r\\n                })\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Logouts the user and clear its token and details\\r\\n     */\\r\\n    public logout(supressTimeoutMessage: boolean = false) {\\r\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n        this._httpClient.post(`${this._configService.appConfig.authApi}/login/logout/${sessionKey}`, {}).subscribe();\\r\\n        this.clearUserCredentials(supressTimeoutMessage);\\r\\n        this._cookieService.set(this._configService.appConfig.manualLogoutCookieName, \'true\');\\r\\n        this.authResponse = undefined;\\r\\n        this._userService.logout();\\r\\n        this._router.navigate([\'\']);\\r\\n    }\\r\\n\\r\\n    // Initialize Session if UiAuthenticationService.loginCoreAuth() Successfully logged in\\r\\n    private initializeSession(authData: IUiAuthResponse) {\\r\\n        const expirationDate = new Date(this.getTokenExpirationDate(authData.session.token));\\r\\n        const secureCookie = this._configService.appConfig.secureCookie;\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            authData.session.token,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.sessionCookieId,\\r\\n            authData.session.sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.uniqueSessionCookieId,\\r\\n            authData.session.uniqueSessionGuid,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            secureCookie\\r\\n        );\\r\\n\\r\\n        this.loadUserDetails(authData.session.token);\\r\\n\\r\\n        this.initAssentSession();\\r\\n    }\\r\\n\\r\\n    private initAssentSession() {\\r\\n        const options: IUiAciSessionOptions = {\\r\\n            cookieDomain: this._cookieDomain,\\r\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\r\\n            logoutOverride: () => {\\r\\n                this.clearUserCredentials();\\r\\n                this._modalService.dismissAll();\\r\\n                this._router.navigate([\'\']);\\r\\n            },\\r\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\r\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\r\\n            onExtendSession: () => {\\r\\n                return \'\';\\r\\n            },\\r\\n            sessionExpiryLogoutCookieRequired: true,\\r\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\r\\n            secureCookie: this._configService.appConfig.secureCookie,\\r\\n        };\\r\\n\\r\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\r\\n        if (document.cookie.match(cookiePattern)) {\\r\\n            Assent.session.initialize(options);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private getCookieDomain(): string {\\r\\n        let domain = this._configService.appConfig.coreAuthCookieDomain;\\r\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\r\\n            domain = \'localhost\';\\r\\n        }\\r\\n\\r\\n        return domain;\\r\\n    }\\r\\n\\r\\n    private loadUserDetails(token: string) {\\r\\n        const userEmail = this.getTokenEmail(token);\\r\\n        const tokenPayload = this.getTokenPayload(token);\\r\\n        this._userService.selectUser(userEmail, tokenPayload);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\r\\n     *\\r\\n     * @param token jwt\\r\\n     * @returns milliseconds\\r\\n     */\\r\\n    private getTokenExpirationDate(token: string): number {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.exp) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return data.exp * 1000;\\r\\n    }\\r\\n\\r\\n    private getTokenEmail(token: string): string {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.sub || !this.authoriseAcpAccess(data.aud, data.sub)) {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        return data.sub;\\r\\n    }\\r\\n\\r\\n    private authoriseAcpAccess(aud: string[], email: string) {\\r\\n        let result = false;\\r\\n        const currentEnv = this._configService.appConfig.environmentName;\\r\\n\\r\\n        if (!aud || aud.length === 0) {\\r\\n            this.logout(true);\\r\\n        }\\r\\n\\r\\n        if (aud.includes(\'*\') && (email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\'))) {\\r\\n            result = true;\\r\\n        } else if (\\r\\n            !aud.includes(window.location.host) &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.localdev &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.devopssandbox\\r\\n        ) {\\r\\n            this.logout(true);\\r\\n        } else {\\r\\n            result = true;\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    private getTokenPayload(token: string): any {\\r\\n        if (!token) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const tokenParts = token.split(\'.\');\\r\\n        if (!tokenParts || tokenParts.length < 2) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const data = JSON.parse(atob(tokenParts[1]));\\r\\n            return data;\\r\\n        } catch (error) {\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private clearUserCredentials(supressTimeoutMessage: boolean = false) {\\r\\n        if (!supressTimeoutMessage) {\\r\\n            this.displayUserLogoutNotification();\\r\\n        }\\r\\n        Assent.session.dispose();\\r\\n        this._cookieService.delete(this._configService.appConfig.authCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.sessionCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.uniqueSessionCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.isConsentGiven, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.isSupplier, \'/\', this._cookieDomain);\\r\\n    }\\r\\n\\r\\n    private displayUserLogoutNotification() {\\r\\n        if (this._cookieService.get(this._configService.appConfig.sessionExpiryLogoutCookieName)) {\\r\\n            this._cookieService.delete(this._configService.appConfig.sessionExpiryLogoutCookieName);\\r\\n            this._translate\\r\\n                .get(\'AUTHENTICATION.SESSION_EXPIRED_LOGOUT\')\\r\\n                .pipe(take(1))\\r\\n                .subscribe((res: string) => {\\r\\n                    this._toastService.show(res, UiToastTypesEnum.danger, { autoHide: false });\\r\\n                });\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33},{"name":"uniqueSessionGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiStep","id":"interface-IUiStep-082b25a1765b54ffbb40c6cafb721354b2f1c1ff66575495b15a33e1cb9847b66bad8bb97200c7c6c395ee2e7f8cbd2b9cd3cb0cbccdbe1c00411d96b0082c9c","file":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Input, OnInit, ViewChild } from \'@angular/core\';\\r\\n\\r\\nexport interface IUiStep {\\r\\n    title: string;\\r\\n    description: string;\\r\\n    stepStatus: \'incomplete\' | \'complete\' | \'current\';\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-progress-indicator\',\\r\\n    templateUrl: \'./progress-indicator.component.html\',\\r\\n    styleUrls: [\'./progress-indicator.component.scss\'],\\r\\n})\\r\\n\\r\\n/**\\r\\n * Progress Indicator Component\\r\\n *\\r\\n * @description Can be used to show the progress of a multi-step process\\r\\n * Can have up to 6 steps\\r\\n * First step is always \'current\'\\r\\n * Can only go up or down one step at a time\\r\\n */\\r\\nexport class UiProgressIndicatorComponent implements OnInit {\\r\\n    @ViewChild(\'progress\') public progressIndicator: UiProgressIndicatorComponent;\\r\\n    /**\\r\\n     * Array includes title and description for each step\\r\\n     * Step status is set by default\\r\\n     * Title is required\\r\\n     */\\r\\n    @Input() public steps = new Array<IUiStep>();\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.stepSetup();\\r\\n    }\\r\\n\\r\\n    public stepSetup() {\\r\\n        //Check if steps are more than 6\\r\\n        //If more than 6, remove the extra steps and throw console error\\r\\n        if (this.steps.length > 6) {\\r\\n            console.error(\'Progress Indicator can only have up to 6 steps\');\\r\\n            this.steps = this.steps.slice(0, 6);\\r\\n            throw new Error(\'Progress Indicator can only have up to 6 steps\');\\r\\n        }\\r\\n        //Check if title is empty\\r\\n        //If empty, throw console error\\r\\n        this.steps.forEach((step, index) => {\\r\\n            if (!step.title) {\\r\\n                console.error(`Title is required for step ${index + 1}`);\\r\\n                throw new Error(`Title is required for step ${index + 1}`);\\r\\n            }\\r\\n            //First step always current by default\\r\\n            step.stepStatus = index === 0 ? \'current\' : \'incomplete\';\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Use this to set the next step as current and the current step as complete\\r\\n     */\\r\\n    public setNextStep() {\\r\\n        const currentIndex = this.steps.findIndex((step) => step.stepStatus === \'current\');\\r\\n        if (currentIndex >= 0) {\\r\\n            this.steps[currentIndex].stepStatus = \'complete\';\\r\\n            //If current step is not the last step, set the next step as current\\r\\n            if (currentIndex !== this.steps.length - 1) {\\r\\n                this.steps[currentIndex + 1].stepStatus = \'current\';\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Use this to set the previous step as current\\r\\n     */\\r\\n    public setPreviousStep() {\\r\\n        for (let i = 0; i < this.steps.length; i++) {\\r\\n            if (this.steps[i].stepStatus === \'current\' && i !== 0) {\\r\\n                this.steps[i].stepStatus = \'incomplete\';\\r\\n                this.steps[i - 1].stepStatus = \'current\';\\r\\n                break;\\r\\n            }\\r\\n            //If final step is complete, set it as current\\r\\n            if (this.steps[i].stepStatus === \'complete\' && i === this.steps.length - 1) {\\r\\n                this.steps[i].stepStatus = \'current\';\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Use this to set final step as complete before submitting form / doing final action\\r\\n     * Only available if last step is current\\r\\n     */\\r\\n    public setLastStepComplete() {\\r\\n        if (this.steps[this.steps.length - 1].stepStatus === \'current\') {\\r\\n            this.steps[this.steps.length - 1].stepStatus = \'complete\';\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"stepStatus","deprecated":false,"deprecationMessage":"","type":"\\"incomplete\\" | \\"complete\\" | \\"current\\"","optional":false,"description":"","line":6},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSubHeaderTab","id":"interface-IUiSubHeaderTab-4878a0f0d77e8aa75af49e88d4b499a7c25a812a387bbc3791944e7fec53c2bb312215806766739cacc6ac9743fde6d2f28461ce617e01890b6a0cbb086b3736","file":"libs/ui/src/lib/services/layout/header/header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter, Injectable, TemplateRef } from \'@angular/core\';\\r\\n\\r\\nimport { BehaviorSubject, Observable, throwError } from \'rxjs\';\\r\\nexport interface IUiSubHeaderTab {\\r\\n    id: string;\\r\\n    label?: string;\\r\\n    label2?: { txt: string; params: any };\\r\\n    onClickEvent?: (item: any) => void;\\r\\n    contentTpl?: TemplateRef<any>;\\r\\n    cacheTabContent?: boolean;\\r\\n    tools?: Array<any>;\\r\\n    tabClassColor?: string;\\r\\n}\\r\\nexport interface IUiSubHeaderTool {\\r\\n    id: string;\\r\\n    label?: string;\\r\\n    type?: string;\\r\\n    class?: Array<string>;\\r\\n    disabled?: boolean;\\r\\n    action?: string;\\r\\n    onClickEvent?: (item: any) => void;\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiHeaderService {\\r\\n    public selectedTabId = \'\';\\r\\n    public selectedTabTemplateRef: TemplateRef<any>;\\r\\n    public messageTxt = \'\';\\r\\n    public subHeaderMessage: { msg: string; iconClass: Array<string>; colorClass: string };\\r\\n\\r\\n    public loading$: Observable<boolean>;\\r\\n    public loadingSubject = new BehaviorSubject<boolean>(false);\\r\\n\\r\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\r\\n    public subHeaderChange: EventEmitter<{\\r\\n        tabItem: Array<any>; toolItems: Array<any>;\\r\\n    }> = new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>();\\r\\n\\r\\n    public subHeaderSelectedTabChange: EventEmitter<IUiSubHeaderTab> = new EventEmitter<IUiSubHeaderTab>();\\r\\n    public actionBtnsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\r\\n    public preToolsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\r\\n    public preToolsMessageChange: EventEmitter<{ msg: string; iconClass: Array<string>; colorClass: string }> = new EventEmitter();\\r\\n\\r\\n    public t: string;\\r\\n\\r\\n    private _title: string;\\r\\n    private _tabsItems: Array<IUiSubHeaderTab>;\\r\\n    private _toolItems: Array<any>;\\r\\n\\r\\n    public get title(): string {\\r\\n        return this._title;\\r\\n    }\\r\\n\\r\\n    public set title(thisTitle: string) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\r\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this._title = thisTitle;\\r\\n            this.titleChange.emit(this._title);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get subHeaderTabs(): Array<IUiSubHeaderTab> {\\r\\n        return this._tabsItems;\\r\\n    }\\r\\n\\r\\n    public set subHeaderTabs(items: Array<IUiSubHeaderTab>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\r\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n\\r\\n        setTimeout(() => {\\r\\n            this._tabsItems = items;\\r\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\r\\n            if (this._tabsItems.length !== 0) {\\r\\n                this.selectTabByIndex(0);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get subToolItems(): Array<any> {\\r\\n        return this._toolItems;\\r\\n    }\\r\\n\\r\\n    public set subToolItems(items: Array<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this._toolItems = items;\\r\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\r\\n        });\\r\\n    }\\r\\n    constructor() {\\r\\n        this._title = \'Assent Compliance Platform\';\\r\\n        this.loading$ = this.loadingSubject.asObservable();\\r\\n    }\\r\\n\\r\\n    public selectTab(e: IUiSubHeaderTab) {\\r\\n        this.selectedTabId = e.id;\\r\\n        this.subToolItems = e.tools;\\r\\n        this.selectedTabTemplateRef = e.contentTpl;\\r\\n        this.subHeaderSelectedTabChange.emit(e);\\r\\n    }\\r\\n\\r\\n    public selectTabByIndex(index: number) {\\r\\n        this.selectTab(this._tabsItems[index]);\\r\\n    }\\r\\n\\r\\n    public selectTabById(id: string) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this.selectTab(this._tabsItems.find((item) => item.id === id));\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setActionsBtns(tlpRef: TemplateRef<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            if(tlpRef !== undefined){\\r\\n                this.actionBtnsChange.emit(tlpRef);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setPreTools(tlpRef: TemplateRef<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        setTimeout(() => {\\r\\n            this.preToolsChange.emit(tlpRef);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setPreToolsMessage(msg: { msg: string; iconClass: Array<string>; colorClass: string }) {\\r\\n        this.subHeaderMessage = msg;\\r\\n        this.preToolsMessageChange.emit(msg);\\r\\n        setTimeout(() => {\\r\\n            this.subHeaderMessage = null;\\r\\n        }, 3000);\\r\\n    }\\r\\n\\r\\n    public clearActionBtns() {\\r\\n        this.setActionsBtns(null);\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"cacheTabContent","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":10},{"name":"contentTpl","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":true,"description":"","line":9},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6},{"name":"label2","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":7},{"name":"onClickEvent","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":8},{"name":"tabClassColor","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"tools","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSubHeaderTool","id":"interface-IUiSubHeaderTool-4878a0f0d77e8aa75af49e88d4b499a7c25a812a387bbc3791944e7fec53c2bb312215806766739cacc6ac9743fde6d2f28461ce617e01890b6a0cbb086b3736","file":"libs/ui/src/lib/services/layout/header/header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter, Injectable, TemplateRef } from \'@angular/core\';\\r\\n\\r\\nimport { BehaviorSubject, Observable, throwError } from \'rxjs\';\\r\\nexport interface IUiSubHeaderTab {\\r\\n    id: string;\\r\\n    label?: string;\\r\\n    label2?: { txt: string; params: any };\\r\\n    onClickEvent?: (item: any) => void;\\r\\n    contentTpl?: TemplateRef<any>;\\r\\n    cacheTabContent?: boolean;\\r\\n    tools?: Array<any>;\\r\\n    tabClassColor?: string;\\r\\n}\\r\\nexport interface IUiSubHeaderTool {\\r\\n    id: string;\\r\\n    label?: string;\\r\\n    type?: string;\\r\\n    class?: Array<string>;\\r\\n    disabled?: boolean;\\r\\n    action?: string;\\r\\n    onClickEvent?: (item: any) => void;\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiHeaderService {\\r\\n    public selectedTabId = \'\';\\r\\n    public selectedTabTemplateRef: TemplateRef<any>;\\r\\n    public messageTxt = \'\';\\r\\n    public subHeaderMessage: { msg: string; iconClass: Array<string>; colorClass: string };\\r\\n\\r\\n    public loading$: Observable<boolean>;\\r\\n    public loadingSubject = new BehaviorSubject<boolean>(false);\\r\\n\\r\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\r\\n    public subHeaderChange: EventEmitter<{\\r\\n        tabItem: Array<any>; toolItems: Array<any>;\\r\\n    }> = new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>();\\r\\n\\r\\n    public subHeaderSelectedTabChange: EventEmitter<IUiSubHeaderTab> = new EventEmitter<IUiSubHeaderTab>();\\r\\n    public actionBtnsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\r\\n    public preToolsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\r\\n    public preToolsMessageChange: EventEmitter<{ msg: string; iconClass: Array<string>; colorClass: string }> = new EventEmitter();\\r\\n\\r\\n    public t: string;\\r\\n\\r\\n    private _title: string;\\r\\n    private _tabsItems: Array<IUiSubHeaderTab>;\\r\\n    private _toolItems: Array<any>;\\r\\n\\r\\n    public get title(): string {\\r\\n        return this._title;\\r\\n    }\\r\\n\\r\\n    public set title(thisTitle: string) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\r\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this._title = thisTitle;\\r\\n            this.titleChange.emit(this._title);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get subHeaderTabs(): Array<IUiSubHeaderTab> {\\r\\n        return this._tabsItems;\\r\\n    }\\r\\n\\r\\n    public set subHeaderTabs(items: Array<IUiSubHeaderTab>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\r\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n\\r\\n        setTimeout(() => {\\r\\n            this._tabsItems = items;\\r\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\r\\n            if (this._tabsItems.length !== 0) {\\r\\n                this.selectTabByIndex(0);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get subToolItems(): Array<any> {\\r\\n        return this._toolItems;\\r\\n    }\\r\\n\\r\\n    public set subToolItems(items: Array<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this._toolItems = items;\\r\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\r\\n        });\\r\\n    }\\r\\n    constructor() {\\r\\n        this._title = \'Assent Compliance Platform\';\\r\\n        this.loading$ = this.loadingSubject.asObservable();\\r\\n    }\\r\\n\\r\\n    public selectTab(e: IUiSubHeaderTab) {\\r\\n        this.selectedTabId = e.id;\\r\\n        this.subToolItems = e.tools;\\r\\n        this.selectedTabTemplateRef = e.contentTpl;\\r\\n        this.subHeaderSelectedTabChange.emit(e);\\r\\n    }\\r\\n\\r\\n    public selectTabByIndex(index: number) {\\r\\n        this.selectTab(this._tabsItems[index]);\\r\\n    }\\r\\n\\r\\n    public selectTabById(id: string) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this.selectTab(this._tabsItems.find((item) => item.id === id));\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setActionsBtns(tlpRef: TemplateRef<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            if(tlpRef !== undefined){\\r\\n                this.actionBtnsChange.emit(tlpRef);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setPreTools(tlpRef: TemplateRef<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        setTimeout(() => {\\r\\n            this.preToolsChange.emit(tlpRef);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setPreToolsMessage(msg: { msg: string; iconClass: Array<string>; colorClass: string }) {\\r\\n        this.subHeaderMessage = msg;\\r\\n        this.preToolsMessageChange.emit(msg);\\r\\n        setTimeout(() => {\\r\\n            this.subHeaderMessage = null;\\r\\n        }, 3000);\\r\\n    }\\r\\n\\r\\n    public clearActionBtns() {\\r\\n        this.setActionsBtns(null);\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"action","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":20},{"name":"class","deprecated":false,"deprecationMessage":"","type":"Array<string>","optional":true,"description":"","line":18},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":19},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16},{"name":"onClickEvent","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":21},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":17}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTagsInputItemDefault","id":"interface-IUiTagsInputItemDefault-7ec9ff33a27fda2a64eafe6b28566aaefa0a342ebf371e6276c6271680301ac6463005511bd4b3d1af78b82068ef45c65331d3564c90f06b74535ed426cafdd3","file":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-item-default.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiTagsInputItemDefault {\\r\\n    id: number | string;\\r\\n    text: string;\\r\\n    disabled: boolean;\\r\\n    colorClass?: string;\\r\\n}\\r\\n","properties":[{"name":"colorClass","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":5},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number | string","optional":false,"description":"","line":2},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTagsInputObject","id":"interface-IUiTagsInputObject-236a6e040f3b1f308eaa92ddd18ab8f19c6e2071ff68bd34e91e380a757c83a36e8e4ad4d0c6c77c8a796bcdca2e197f50bbaeac396729e0b20167d25fccd443","file":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-object.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiTagsInputObject {\\r\\n    labelField: string;\\r\\n    keyField: string;\\r\\n}\\r\\n","properties":[{"name":"keyField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"labelField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiToast","id":"interface-IUiToast-1a09f480549de53d9c7351332b1c295b6de30e24ff36ccdb6704f950568f294e79e2afb0ea29e3da93972024d70f1dfc66e306a3f9f9ed3dcca82954ae8e3dc2","file":"libs/ui/src/lib/services/toast-notification/interfaces/toast.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiToastOptions } from \'.\';\\r\\n// Enums\\r\\nimport { UiToastTypesEnum } from \'../enums\';\\r\\n\\r\\nexport interface IUiToast {\\r\\n    id: string;\\r\\n    text: string;\\r\\n    type: UiToastTypesEnum;\\r\\n    options: IUiToastOptions;\\r\\n}\\r\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"options","deprecated":false,"deprecationMessage":"","type":"IUiToastOptions","optional":false,"description":"","line":10},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"type","deprecated":false,"deprecationMessage":"","type":"UiToastTypesEnum","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiToastOptions","id":"interface-IUiToastOptions-d8b02108448e37d16d4e413d5836b25f1081cee2cab685702ef93443d9396fc5919bfbbfb1812f733e41253001acda7701541d555ea44bfc38c793467424a722","file":"libs/ui/src/lib/services/toast-notification/interfaces/toast-options.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiToastOptions {\\r\\n    autoHide?: boolean;\\r\\n    delay?: boolean;\\r\\n}\\r\\n","properties":[{"name":"autoHide","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":2},{"name":"delay","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTreeData","id":"interface-IUiTreeData-fde6d645f64d9349c830c3f26bcb1da284212a30457df136547650b655b8a4e21754a1ef860b84a236afa6b77662a11cbfad048268b942fdfe455c12fc0977b4","file":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-data.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiTreeNode } from \'.\';\\r\\n\\r\\nexport interface IUiTreeData {\\r\\n    root: IUiTreeNode;\\r\\n}\\r\\n","properties":[{"name":"root","deprecated":false,"deprecationMessage":"","type":"IUiTreeNode","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTreeNode","id":"interface-IUiTreeNode-ff2263f95668490cb25bdf97732971d79e3d1d74d1bf63b8bc3bca62f5c33bf3ee37345ad7399b2d0cfe030cd5cea530323da42eaa7309c6877b2e62ca783d91","file":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-node.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiTreeNode {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    children?: IUiTreeNode[];\\r\\n    checked?: boolean;\\r\\n    indeterminate?: boolean;\\r\\n    data?: any;\\r\\n    nodeUid?: string; // Unique identifier for every instance of a given node; Only for internal use\\r\\n}\\r\\n","properties":[{"name":"checked","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":5},{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiTreeNode[]","optional":true,"description":"","line":4},{"name":"data","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":7},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"indeterminate","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"nodeUid","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiUser","id":"interface-IUiUser-d8bbe3f36ffef911d2cfc66ae70944bfcfbd463db17c5d563ccb448d97a30bf9108e4742bc796af2be3cf2140eb0e4f15fcf7784bf90b8bd1e37332963f21547","file":"libs/ui/src/lib/services/user/interfaces/user.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiRole } from \'./role.interface\';\\r\\n\\r\\nexport interface IUiUser {\\r\\n    id: number;\\r\\n    email: string;\\r\\n    userName: string;\\r\\n    firstName?: string;\\r\\n    lastName?: string;\\r\\n    roles: IUiRole[];\\r\\n    // ToDo\\r\\n    // These properties should be removed\\r\\n    // They are used for temporary compatibility with the old implementation\\r\\n    avatar?: string;\\r\\n    menu?: string;\\r\\n    preferredLanguage?: string;\\r\\n}\\r\\n","properties":[{"name":"avatar","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8},{"name":"menu","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"preferredLanguage","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"roles","deprecated":false,"deprecationMessage":"","type":"IUiRole[]","optional":false,"description":"","line":9},{"name":"userName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiUserPreference","id":"interface-IUiUserPreference-8933091bd873f4c188de4b773d868fed50fc7034361d0cb834f250b56fe4460116491849cb4754e9d2e9030f6c6e3a6a082ea7e501ea8cc46fdc33ff1215b9b3","file":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiUserPreference {\\r\\n    dataType: string;\\r\\n    type: string;\\r\\n    value: string;\\r\\n    displayValue: string;\\r\\n}\\r\\n\\r\\nexport interface IUiUserPreferences {\\r\\n    preferences: IUiUserPreference[];\\r\\n}\\r\\n","properties":[{"name":"dataType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"displayValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiUserPreferences","id":"interface-IUiUserPreferences-8933091bd873f4c188de4b773d868fed50fc7034361d0cb834f250b56fe4460116491849cb4754e9d2e9030f6c6e3a6a082ea7e501ea8cc46fdc33ff1215b9b3","file":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiUserPreference {\\r\\n    dataType: string;\\r\\n    type: string;\\r\\n    value: string;\\r\\n    displayValue: string;\\r\\n}\\r\\n\\r\\nexport interface IUiUserPreferences {\\r\\n    preferences: IUiUserPreference[];\\r\\n}\\r\\n","properties":[{"name":"preferences","deprecated":false,"deprecationMessage":"","type":"IUiUserPreference[]","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Observable","id":"interface-Observable-16b43e85878eaa9bbb5f6157badfd53ba7ac0bd728e3ff44dffd1d064c8bf2e73784c141776443a552b1539dd2477c96aa5f61b708df6c1bc844f01b522b277d","file":"libs/ui/src/lib/extensions/observable.extensions.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Observable, Subscription } from \'rxjs\';\\r\\nimport { first } from \'rxjs/operators\';\\r\\n\\r\\ndeclare module \'rxjs\' {\\r\\n    //eslint-disable-next-line @typescript-eslint/naming-convention\\r\\n    interface Observable<T> {\\r\\n        once(next: (value: T) => void): Subscription;\\r\\n    }\\r\\n}\\r\\n\\r\\nObservable.prototype.once = function <T>(this: Observable<T>, next: (value: T) => void): Subscription {\\r\\n    return this.pipe(first()).subscribe(next);\\r\\n};\\r\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"once","args":[{"name":"next","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}]}],"optional":false,"returnType":"Subscription","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"next","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"tagName":{"text":"param"}}]}]}],"injectables":[{"name":"UiAcpProfileManagerService","id":"injectable-UiAcpProfileManagerService-55618ac463b2157b4ebac3c0133b2b3773322f55bc3de1b125436c372222eb19ada1d64b61c538414935c9b6b393ced1c226b079421ffc3fda9bfec904510a9d","file":"libs/ui/src/lib/modules/user-auth-manager/services/profile-manager-service.ts","properties":[],"methods":[{"name":"getUserSessions","args":[{"name":"userId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<UiAcpUserSession[]>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"userId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\n// RxJS\\r\\nimport { Observable } from \'rxjs\';\\r\\nimport { map } from \'rxjs/operators\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n// Enums\\r\\nimport { UiAcpUserSessionItem, UiAcpUserSession } from \'../models/session.model\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiAcpProfileManagerService {\\r\\n    // #region Private Fields\\r\\n    constructor(\\r\\n        private _httpClient: HttpClient,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _cookieService: CookieService,\\r\\n    ) {};\\r\\n    // #endregion Private Fields\\r\\n\\r\\n    // #region Public Methods\\r\\n    // -----------------------------------------------------------------------------------------------------\\r\\n\\r\\n    // Get User Sessions\\r\\n    public getUserSessions(userId: number): Observable<UiAcpUserSession[]> {\\r\\n        return this._httpClient\\r\\n            .get<UiAcpUserSessionItem[]>(`${this._configService.appConfig.authApi}/session/userId/${userId}`)\\r\\n            .pipe(\\r\\n                map((res: UiAcpUserSessionItem[]) => {\\r\\n                    const sessionGroups = res.reduce((groups, session) => {\\r\\n                        const iteratedUniqueSessionGuid = session.uniqueSessionGuid;\\r\\n                        if (!groups[iteratedUniqueSessionGuid]) {\\r\\n                            groups[iteratedUniqueSessionGuid] = [];\\r\\n                        }\\r\\n                        groups[iteratedUniqueSessionGuid].push(session);\\r\\n                        return groups;\\r\\n                    }, {});\\r\\n                    const x = Object.keys(sessionGroups).map((iteratedUniqueSessionGuid) => {\\r\\n                        const acpUserSession: UiAcpUserSession = UiAcpUserSession.fromAcpUserSessionItems(\\r\\n                            sessionGroups[iteratedUniqueSessionGuid],\\r\\n                            this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId));\\r\\n                        return acpUserSession;\\r\\n                    });\\r\\n                    return x;\\r\\n                })\\r\\n            );\\r\\n    }\\r\\n}\\r\\n\\r\\n// #endregion Public Methods\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiAuth0UserService","id":"injectable-UiAuth0UserService-a5e7f21430e8c081ac3b84cd909eb78fa5a7d38b2ec859ff345f854053ea711e3b668865d51ad19ebe7d6f715c14e88b56355a3a38b1ef9432c76bf7a24d3533","file":"libs/ui/src/lib/modules/authentification/auth0/services/user.service.ts","properties":[{"name":"_authenticatedUserSubject","defaultValue":"new BehaviorSubject<User | null | undefined>(null)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9,"modifierKind":[121]},{"name":"_userPermissionsSubject","defaultValue":"new BehaviorSubject<any[]>([])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[121]},{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<User | null | undefined>","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"userPermissions$","deprecated":false,"deprecationMessage":"","type":"Observable<any[]>","optional":false,"description":"","line":14,"modifierKind":[123]}],"methods":[{"name":"updateUser","args":[{"name":"user","type":"User | null | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"user","type":"User | null | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateUserPermissions","args":[{"name":"permissions","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"permissions","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { User } from \'@auth0/auth0-spa-js\';\\r\\nimport { Injectable } from \'@angular/core\';\\r\\nimport { BehaviorSubject, Observable, distinctUntilChanged } from \'rxjs\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\'\\r\\n})\\r\\nexport class UiAuth0UserService {\\r\\n  private _authenticatedUserSubject = new BehaviorSubject<User | null | undefined>(null);\\r\\n  private _userPermissionsSubject = new BehaviorSubject<any[]>([]);\\r\\n\\r\\n  /* eslint-disable @typescript-eslint/member-ordering */\\r\\n  public authenticatedUser$: Observable<User | null | undefined>;\\r\\n  public userPermissions$: Observable<any[]>;\\r\\n  /* eslint-enable @typescript-eslint/member-ordering */\\r\\n\\r\\n  constructor() {\\r\\n      this.authenticatedUser$ = this._authenticatedUserSubject.asObservable().pipe(distinctUntilChanged());\\r\\n      this.userPermissions$ = this._userPermissionsSubject.asObservable().pipe(distinctUntilChanged());\\r\\n  }\\r\\n\\r\\n  public updateUser(user: User | null | undefined) {\\r\\n      this._authenticatedUserSubject.next(user);\\r\\n  }\\r\\n\\r\\n  public updateUserPermissions(permissions: any[]) {\\r\\n      this._userPermissionsSubject.next(permissions);\\r\\n  }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":14},"type":"injectable"},{"name":"UiAuthenticationService","id":"injectable-UiAuthenticationService-71acd77d16a4bd007e3a0a6bface8d60604527732e48ad65904038eed880eb7fcb0d34830617b356173117ea4473953af2edff3b3a817493f169c722c486d032","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","properties":[{"name":"_cookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[121]},{"name":"_httpClient","deprecated":false,"deprecationMessage":"","type":"HttpClient","optional":false,"description":"","line":42,"modifierKind":[121]},{"name":"_loginPath","defaultValue":"\'login/password\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[121,144]},{"name":"assentContextKey","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"authResponse","deprecated":false,"deprecationMessage":"","type":"IUiAuthResponse","optional":false,"description":"","line":39,"modifierKind":[123]}],"methods":[{"name":"authoriseAcpAccess","args":[{"name":"aud","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"email","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":273,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"aud","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearUserCredentials","args":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"void","typeParameters":[],"line":315,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"displayUserLogoutNotification","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":327,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getCookieDomain","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":234,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getTokenEmail","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTokenExpirationDate","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":255,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n\\n","description":"<p>Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9450,"end":9455,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"token"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":9444,"end":9449,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>jwt</p>\\n"},{"tagName":{"pos":9469,"end":9476,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>milliseconds</p>\\n"}]},{"name":"getTokenPayload","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":297,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initAssentSession","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"initializeSession","args":[{"name":"authData","type":"IUiAuthResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"authData","type":"IUiAuthResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isAssentee","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the logged-in user is an Assentee\\n\\n","description":"<p>Checks if the logged-in user is an Assentee</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":4370,"end":4377,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>boolean</p>\\n"}]},{"name":"isLoggedIn","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if there is a logged user\\n\\n","description":"<p>Checks if there is a logged user</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":3191,"end":3198,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"loadUserDetails","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":243,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"loginCoreAuth","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"password","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IUiAuthResponse>","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogin to CoreAuth\\n\\n","description":"<p>Login to CoreAuth</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4730,"end":4735,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"email"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4724,"end":4729,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":4751,"end":4759,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"password"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4745,"end":4750,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":4769,"end":4776,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"logout","args":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogouts the user and clear its token and details\\n","description":"<p>Logouts the user and clear its token and details</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\r\\n// RxJS\\r\\nimport { Observable, throwError } from \'rxjs\';\\r\\nimport { catchError, map, take, tap } from \'rxjs/operators\';\\r\\n// Ngx\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Ngb\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Services\\r\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\r\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\r\\n// Interfaces\\r\\n\\r\\n//Enum\\r\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\r\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\r\\n\\r\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\r\\ndeclare const Assent: IUiAciSharedSession;\\r\\n\\r\\nexport interface IUiAuthResponse {\\r\\n    session: IUiSession;\\r\\n}\\r\\n\\r\\nexport interface IUiSession {\\r\\n    sessionKey: string;\\r\\n    token: string;\\r\\n    uniqueSessionGuid: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiAuthenticationService {\\r\\n    public authResponse: IUiAuthResponse;\\r\\n    public assentContextKey = \'\';\\r\\n\\r\\n    private _httpClient: HttpClient;\\r\\n    private _cookieDomain: string;\\r\\n    private readonly _loginPath = \'login/password\';\\r\\n\\r\\n    constructor(\\r\\n        private _handler: HttpBackend,\\r\\n        private _router: Router,\\r\\n        private _userService: UiUserService,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _cookieService: CookieService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _translate: TranslateService,\\r\\n        private _toastService: UiToastService\\r\\n    ) {\\r\\n        // Use HttpBackend so it does not go through http-error-interceptor\\r\\n        this._httpClient = new HttpClient(this._handler);\\r\\n\\r\\n        this._configService.configLoaded$.pipe(take(1)).subscribe(() => {\\r\\n            this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n            const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n            const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n            const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\r\\n\\r\\n            if (token && sessionKey) {\\r\\n                if (!this.authResponse) {\\r\\n                    this.authResponse = {\\r\\n                        session: {\\r\\n                            sessionKey: \'\',\\r\\n                            token: \'\',\\r\\n                            uniqueSessionGuid: \'\',\\r\\n                        },\\r\\n                    };\\r\\n                }\\r\\n                this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\r\\n                this.loadUserDetails(token);\\r\\n                this.initAssentSession();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if there is a logged user\\r\\n     *\\r\\n     * @returns\\r\\n     */\\r\\n    public isLoggedIn(): boolean {\\r\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n        const tokenExpirationDate = this.getTokenExpirationDate(token);\\r\\n\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n        const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\r\\n        // debugger\\r\\n        if (token && sessionKey) {\\r\\n            if (!this.authResponse) {\\r\\n                this.authResponse = {\\r\\n                    session: {\\r\\n                        sessionKey: \'\',\\r\\n                        token: \'\',\\r\\n                        uniqueSessionGuid: \'\',\\r\\n                    },\\r\\n                };\\r\\n            }\\r\\n            this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\r\\n            this.loadUserDetails(token);\\r\\n            this.initAssentSession();\\r\\n        }\\r\\n\\r\\n        return !!tokenExpirationDate && Date.now() < tokenExpirationDate;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the logged-in user is an Assentee\\r\\n     *\\r\\n     * @returns boolean\\r\\n     */\\r\\n    public isAssentee(): boolean {\\r\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\r\\n        const email = this.getTokenEmail(token);\\r\\n        return email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Login to CoreAuth\\r\\n     *\\r\\n     * @param email\\r\\n     * @param password\\r\\n     * @returns\\r\\n     */\\r\\n    public loginCoreAuth(email: string, password: string): Observable<IUiAuthResponse> {\\r\\n        return this._httpClient\\r\\n            .post<any>(`${this._configService.appConfig.authApi}/${this._loginPath}`, {\\r\\n                email,\\r\\n                password,\\r\\n            })\\r\\n            .pipe(\\r\\n                map((data: IUiSession) => {\\r\\n                    const response: IUiAuthResponse = {\\r\\n                        session: data,\\r\\n                    };\\r\\n                    this.initializeSession(response);\\r\\n                    return response; // return the response\\r\\n                }),\\r\\n                catchError((error: Error) => {\\r\\n                    if (error instanceof HttpErrorResponse) {\\r\\n                        // Handle back-end error\\r\\n                        console.error(\'Back-end error:\', error.message);\\r\\n                    } else {\\r\\n                        // Handle front-end error\\r\\n                        console.error(\'Front-end error:\', error.message);\\r\\n                    }\\r\\n                    return throwError(() => error);\\r\\n                })\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Logouts the user and clear its token and details\\r\\n     */\\r\\n    public logout(supressTimeoutMessage: boolean = false) {\\r\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\r\\n        this._httpClient.post(`${this._configService.appConfig.authApi}/login/logout/${sessionKey}`, {}).subscribe();\\r\\n        this.clearUserCredentials(supressTimeoutMessage);\\r\\n        this._cookieService.set(this._configService.appConfig.manualLogoutCookieName, \'true\');\\r\\n        this.authResponse = undefined;\\r\\n        this._userService.logout();\\r\\n        this._router.navigate([\'\']);\\r\\n    }\\r\\n\\r\\n    // Initialize Session if UiAuthenticationService.loginCoreAuth() Successfully logged in\\r\\n    private initializeSession(authData: IUiAuthResponse) {\\r\\n        const expirationDate = new Date(this.getTokenExpirationDate(authData.session.token));\\r\\n        const secureCookie = this._configService.appConfig.secureCookie;\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            authData.session.token,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.sessionCookieId,\\r\\n            authData.session.sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.uniqueSessionCookieId,\\r\\n            authData.session.uniqueSessionGuid,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            secureCookie\\r\\n        );\\r\\n\\r\\n        this.loadUserDetails(authData.session.token);\\r\\n\\r\\n        this.initAssentSession();\\r\\n    }\\r\\n\\r\\n    private initAssentSession() {\\r\\n        const options: IUiAciSessionOptions = {\\r\\n            cookieDomain: this._cookieDomain,\\r\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\r\\n            logoutOverride: () => {\\r\\n                this.clearUserCredentials();\\r\\n                this._modalService.dismissAll();\\r\\n                this._router.navigate([\'\']);\\r\\n            },\\r\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\r\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\r\\n            onExtendSession: () => {\\r\\n                return \'\';\\r\\n            },\\r\\n            sessionExpiryLogoutCookieRequired: true,\\r\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\r\\n            secureCookie: this._configService.appConfig.secureCookie,\\r\\n        };\\r\\n\\r\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\r\\n        if (document.cookie.match(cookiePattern)) {\\r\\n            Assent.session.initialize(options);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private getCookieDomain(): string {\\r\\n        let domain = this._configService.appConfig.coreAuthCookieDomain;\\r\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\r\\n            domain = \'localhost\';\\r\\n        }\\r\\n\\r\\n        return domain;\\r\\n    }\\r\\n\\r\\n    private loadUserDetails(token: string) {\\r\\n        const userEmail = this.getTokenEmail(token);\\r\\n        const tokenPayload = this.getTokenPayload(token);\\r\\n        this._userService.selectUser(userEmail, tokenPayload);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\r\\n     *\\r\\n     * @param token jwt\\r\\n     * @returns milliseconds\\r\\n     */\\r\\n    private getTokenExpirationDate(token: string): number {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.exp) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return data.exp * 1000;\\r\\n    }\\r\\n\\r\\n    private getTokenEmail(token: string): string {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.sub || !this.authoriseAcpAccess(data.aud, data.sub)) {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        return data.sub;\\r\\n    }\\r\\n\\r\\n    private authoriseAcpAccess(aud: string[], email: string) {\\r\\n        let result = false;\\r\\n        const currentEnv = this._configService.appConfig.environmentName;\\r\\n\\r\\n        if (!aud || aud.length === 0) {\\r\\n            this.logout(true);\\r\\n        }\\r\\n\\r\\n        if (aud.includes(\'*\') && (email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\'))) {\\r\\n            result = true;\\r\\n        } else if (\\r\\n            !aud.includes(window.location.host) &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.localdev &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\r\\n            currentEnv !== UiEnvironmentNameEnum.devopssandbox\\r\\n        ) {\\r\\n            this.logout(true);\\r\\n        } else {\\r\\n            result = true;\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    private getTokenPayload(token: string): any {\\r\\n        if (!token) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const tokenParts = token.split(\'.\');\\r\\n        if (!tokenParts || tokenParts.length < 2) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const data = JSON.parse(atob(tokenParts[1]));\\r\\n            return data;\\r\\n        } catch (error) {\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private clearUserCredentials(supressTimeoutMessage: boolean = false) {\\r\\n        if (!supressTimeoutMessage) {\\r\\n            this.displayUserLogoutNotification();\\r\\n        }\\r\\n        Assent.session.dispose();\\r\\n        this._cookieService.delete(this._configService.appConfig.authCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.sessionCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.uniqueSessionCookieId, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.isConsentGiven, \'/\', this._cookieDomain);\\r\\n        this._cookieService.delete(this._configService.appConfig.isSupplier, \'/\', this._cookieDomain);\\r\\n    }\\r\\n\\r\\n    private displayUserLogoutNotification() {\\r\\n        if (this._cookieService.get(this._configService.appConfig.sessionExpiryLogoutCookieName)) {\\r\\n            this._cookieService.delete(this._configService.appConfig.sessionExpiryLogoutCookieName);\\r\\n            this._translate\\r\\n                .get(\'AUTHENTICATION.SESSION_EXPIRED_LOGOUT\')\\r\\n                .pipe(take(1))\\r\\n                .subscribe((res: string) => {\\r\\n                    this._toastService.show(res, UiToastTypesEnum.danger, { autoHide: false });\\r\\n                });\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_handler","type":"HttpBackend","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""}],"line":44,"jsdoctags":[{"name":"_handler","type":"HttpBackend","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiAuthService","id":"injectable-UiAuthService-988803949c72e3bee9b7bc340fb85483b0c95adcfb61f9b68616b35fd87ef674a30d7b5461265499cda6d9d170790bfee7fa93f80bb1520fc49447974f4491e1","file":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","properties":[{"name":"_activeOrgGuid","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":82,"modifierKind":[121]},{"name":"_audienceList","defaultValue":"new Set()","deprecated":false,"deprecationMessage":"","type":"Set<IUiAudience>","optional":false,"description":"","line":118,"modifierKind":[121]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":129,"modifierKind":[121,144]},{"name":"_helper","defaultValue":"new JwtHelperService()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":137,"modifierKind":[121]},{"name":"_permissionsList","defaultValue":"new Set()","deprecated":false,"deprecationMessage":"","type":"Set<string>","optional":false,"description":"<p>Accessible through the getPermissionsList and hasPermission methods</p>\\n","line":135,"rawdescription":"\\n\\nAccessible through the getPermissionsList and hasPermission methods\\n","modifierKind":[121],"jsdoctags":[{"pos":4251,"end":4342,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":4252,"end":4259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Accessible through the getPermissionsList and hasPermission methods</p>\\n"}]},{"name":"_pollInterval","defaultValue":"300000","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":107,"modifierKind":[121,144]},{"name":"_pollReset$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Resets the polling interval for the user authentication status</p>\\n","line":80,"rawdescription":"\\n\\nResets the polling interval for the user authentication status\\n","modifierKind":[121,144]},{"name":"_rootOrgGuid","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":106,"modifierKind":[121]},{"name":"_subsidiaryExpiration","defaultValue":"3600000","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":83,"modifierKind":[121,144]},{"name":"_subsidiaryList","defaultValue":"new Set()","deprecated":false,"deprecationMessage":"","type":"Set<IUiAuthSubsidiary>","optional":false,"description":"","line":127,"modifierKind":[121]},{"name":"_unsubscribe$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":108,"modifierKind":[121,144]},{"name":"_userGuid","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":93,"modifierKind":[121]},{"name":"permissionsLoaded$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"<p>Indicates whether the permissions have been loaded.\\nCan be used to determine if the user is authenticated and has permissions.</p>\\n<p>See <code>UiAuthService.hasAnyPermission()</code>\\nSee <code>UiAuthService.hasPermissions()</code>\\nSee <code>UiAuthService.arePermissionsLoaded()</code></p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">```typescript\\nthis._authService.permissionsLoaded$.pipe(\\n  // wait for the permissions to be loaded\\n  filter((loaded) =&gt; loaded === true),\\n  ...</code></pre></div><div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">```typescript\\nthis._authService.permissionsLoaded$.subscribe((loaded) =&gt; {\\n  // wait for the permissions to be loaded\\n  if (loaded) {\\n    ...</code></pre></div><div><pre class=\\"line-numbers\\"><code class=\\"language-none\\"></code></pre></div>","line":55,"rawdescription":"\\n\\nIndicates whether the permissions have been loaded.\\nCan be used to determine if the user is authenticated and has permissions.\\n\\nSee `UiAuthService.hasAnyPermission()`\\nSee `UiAuthService.hasPermissions()`\\nSee `UiAuthService.arePermissionsLoaded()`\\n\\n```html\\n```typescript\\nthis._authService.permissionsLoaded$.pipe(\\n  // wait for the permissions to be loaded\\n  filter((loaded) => loaded === true),\\n  ...\\n```\\n```html\\n```typescript\\nthis._authService.permissionsLoaded$.subscribe((loaded) => {\\n  // wait for the permissions to be loaded\\n  if (loaded) {\\n    ...\\n```\\n```","modifierKind":[123],"jsdoctags":[{"pos":1186,"end":1234,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1187,"end":1190,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"see"},"comment":"<p><code>UiAuthService.hasAnyPermission()</code></p>\\n","name":{"pos":1191,"end":1191,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":308,"name":{"pos":1191,"end":1191,"flags":4292608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":""}}},{"pos":1234,"end":1280,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1235,"end":1238,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"see"},"comment":"<p><code>UiAuthService.hasPermissions()</code></p>\\n","name":{"pos":1239,"end":1239,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":308,"name":{"pos":1239,"end":1239,"flags":4292608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":""}}},{"pos":1280,"end":1340,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1281,"end":1284,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"see"},"comment":"<p><code>UiAuthService.arePermissionsLoaded()</code></p>\\n","name":{"pos":1285,"end":1285,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":308,"name":{"pos":1285,"end":1285,"flags":4292608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":""}}},{"pos":1340,"end":1554,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1341,"end":1348,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<pre><code class=\\"language-typescript\\">this._authService.permissionsLoaded$.pipe(\\n  // wait for the permissions to be loaded\\n  filter((loaded) =&gt; loaded === true),\\n  ...\\n</code></pre>\\n"},{"pos":1554,"end":1763,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1555,"end":1562,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<pre><code class=\\"language-typescript\\">this._authService.permissionsLoaded$.subscribe((loaded) =&gt; {\\n  // wait for the permissions to be loaded\\n  if (loaded) {\\n    ...\\n</code></pre>\\n"}]},{"name":"subsidiariesLoaded$","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IUiAuthSubsidiary[]>","optional":false,"description":"","line":57,"modifierKind":[123]}],"methods":[{"name":"addPermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":528,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds a new permission if it does not already exist.\\n\\n","description":"<p>Adds a new permission if it does not already exist.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":18402,"end":18412,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permission"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":18396,"end":18401,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permission to add.</p>\\n"}]},{"name":"addPermissions","args":[{"name":"permissions","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":537,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds multiple permissions.\\n\\n","description":"<p>Adds multiple permissions.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":18624,"end":18635,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":18618,"end":18623,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permissions to add.</p>\\n"}]},{"name":"addPermissionsFromDecodedToken","args":[{"name":"decodedToken","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":434,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds permissions from the decoded token.\\n\\n","description":"<p>Adds permissions from the decoded token.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":15224,"end":15236,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"decodedToken"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":15218,"end":15223,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The decoded token containing permissions.</li>\\n</ul>\\n"},{"tagName":{"pos":15144,"end":15151,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Adds permissions from the decoded token.</p>\\n"}]},{"name":"arePermissionsLoaded","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":519,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the permissions have been loaded.\\n\\n","description":"<p>Checks if the permissions have been loaded.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":18127,"end":18134,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if the permissions have been loaded, false otherwise.</p>\\n"}]},{"name":"getAudience","args":[{"name":"nameOrPath","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiAudience | undefined","typeParameters":[],"line":297,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets the exact audience with the specified name.\\n\\n","description":"<p>Gets the exact audience with the specified name.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":10097,"end":10107,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"nameOrPath"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":10091,"end":10096,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The name of the audience to get.</p>\\n"},{"tagName":{"pos":10009,"end":10016,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Gets the exact audience with the specified name.</p>\\n"},{"tagName":{"pos":10150,"end":10157,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The audience with the specified name, or undefined if not found.</p>\\n"}]},{"name":"getAudienceFromPath","args":[{"name":"path","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":311,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the audience from the given path.\\n\\n","description":"<p>Retrieves the audience from the given path.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10668,"end":10672,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":10662,"end":10667,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The path to check for audience.</li>\\n</ul>\\n"},{"tagName":{"pos":10716,"end":10723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The audience if a matching endpoint is found, otherwise null.</p>\\n"}]},{"name":"getDecodedToken","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":407,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves and decodes a token with the specified name.\\n\\n","description":"<p>Retrieves and decodes a token with the specified name.</p>\\n","modifierKind":[123,131],"jsdoctags":[{"name":{"pos":14312,"end":14316,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"name"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":14306,"end":14311,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The name of the token to retrieve and decode.</li>\\n</ul>\\n"},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"text":"param"}},{"tagName":{"pos":14218,"end":14225,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Retrieves and decodes a token with the specified name.</p>\\n"},{"tagName":{"pos":14374,"end":14381,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.</p>\\n"}]},{"name":"getDecodedTokenByAudience","args":[{"name":"audience","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":384,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the decoded token for a given audience.\\n\\n","description":"<p>Retrieves the decoded token for a given audience.</p>\\n","modifierKind":[121,131],"jsdoctags":[{"name":{"pos":13327,"end":13335,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"audience"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":13321,"end":13326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The audience for which to retrieve the token.</li>\\n</ul>\\n"},{"name":{"pos":13399,"end":13408,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"cacheMode"},"type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"pos":13393,"end":13398,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The cache mode for retrieving the token. Defaults to &#39;on&#39;.</li>\\n</ul>\\n"},{"tagName":{"pos":13238,"end":13245,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Retrieves the decoded token for a given audience.</p>\\n"},{"tagName":{"pos":13479,"end":13486,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A Promise that resolves to the decoded token, or undefined if the token is not found.</p>\\n"}]},{"name":"getPermissionsList","args":[],"optional":false,"returnType":"string[]","typeParameters":[],"line":555,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets the list of all permissions.\\n\\n","description":"<p>Gets the list of all permissions.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":19118,"end":19125,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of all permissions.</p>\\n"}]},{"name":"getToken","args":[{"name":"audienceName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Observable<string | undefined>","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves a token for the specified audience.\\n\\n","description":"<p>Retrieves a token for the specified audience.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":11304,"end":11316,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"audienceName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":11298,"end":11303,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The name of the audience.</li>\\n</ul>\\n"},{"name":{"pos":11360,"end":11369,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"cacheMode"},"type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"pos":11354,"end":11359,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The cache mode for the token. Defaults to &#39;on&#39;.</li>\\n</ul>\\n"},{"tagName":{"pos":11429,"end":11436,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An Observable that emits the token string or undefined.</p>\\n"}]},{"name":"getTokenByAudience","args":[{"name":"audience","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Observable<string | undefined>","typeParameters":[],"line":361,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves a token by audience.\\n\\n","description":"<p>Retrieves a token by audience.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":12406,"end":12414,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"audience"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":12400,"end":12405,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The audience for which to retrieve the token.</li>\\n</ul>\\n"},{"name":{"pos":12478,"end":12487,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"cacheMode"},"type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"pos":12472,"end":12477,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The cache mode for retrieving the token. Defaults to &#39;on&#39;.</li>\\n</ul>\\n"},{"tagName":{"pos":12336,"end":12343,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Retrieves a token by audience.</p>\\n"},{"tagName":{"pos":12558,"end":12565,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.</p>\\n"}]},{"name":"hasAnyPermission","args":[{"name":"permissions","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":510,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if any of the specified permissions exist.\\n\\n","description":"<p>Checks if any of the specified permissions exist.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":17783,"end":17794,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":17777,"end":17782,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permissions to check.</p>\\n"},{"tagName":{"pos":17830,"end":17837,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if any permission exists, false otherwise.</p>\\n"}]},{"name":"hasPermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":480,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if a specific permission exists.\\n\\n","description":"<p>Checks if a specific permission exists.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":16718,"end":16728,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permission"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":16712,"end":16717,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permission to check.</p>\\n"},{"tagName":{"pos":16763,"end":16770,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if the permission exists, false otherwise.</p>\\n"}]},{"name":"hasPermissions","args":[{"name":"permissions","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":500,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if all specified permissions exist.\\n\\n","description":"<p>Checks if all specified permissions exist.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":17428,"end":17439,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":17422,"end":17427,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permissions to check.</p>\\n"},{"tagName":{"pos":17475,"end":17482,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if all permissions exist, false otherwise.</p>\\n"}]},{"name":"initializeApp","args":[],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInitializes the application by loading permissions if the user is authenticated.\\n\\n","description":"<p>Initializes the application by loading permissions if the user is authenticated.</p>\\n","modifierKind":[123,131],"jsdoctags":[{"tagName":{"pos":5961,"end":5968,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>Promise&lt;boolean&gt;</code> A promise that resolves to <code>true</code> if the initialization is successful, otherwise <code>false</code>.</p>\\n"}]},{"name":"isUserAuthenticated","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the user is authenticated.\\n\\n","description":"<p>Checks if the user is authenticated.</p>\\n","modifierKind":[123,131],"jsdoctags":[{"tagName":{"pos":8146,"end":8153,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A promise that resolves to a boolean indicating whether the user is authenticated or not.</p>\\n"}]},{"name":"loadPermissions","args":[],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":451,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLoads permissions from the user\'s token.\\n\\n","description":"<p>Loads permissions from the user&#39;s token.</p>\\n","modifierKind":[121,131],"jsdoctags":[{"tagName":{"pos":15699,"end":15706,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Loads permissions from the user&#39;s token.</p>\\n"},{"tagName":{"pos":15773,"end":15780,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>Promise&lt;void&gt;</code> A promise that resolves when the permissions have been loaded.</p>\\n"}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":164,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"pollAccessToken","args":[],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":254,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPolls for an access token at a specified interval.\\n\\n","description":"<p>Polls for an access token at a specified interval.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":8637,"end":8644,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An observable that emits the access token as a string.</p>\\n"}]},{"name":"removePermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":546,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves a specific permission.\\n\\n","description":"<p>Removes a specific permission.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":18886,"end":18896,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permission"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":18880,"end":18885,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permission to remove.</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, OnDestroy } from \'@angular/core\';\\r\\nimport { AuthService } from \'@auth0/auth0-angular\';\\r\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\r\\n// eslint-disable-next-line max-len\\r\\nimport { BehaviorSubject, catchError, EMPTY, firstValueFrom, interval, Observable, of, shareReplay, startWith, Subject, switchMap, takeUntil, tap } from \'rxjs\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { IUiAuth0Config } from \'../auth0-config\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n\\r\\nexport interface IUiAudience {\\r\\n    name: string;\\r\\n    audience: string;\\r\\n    endpoint: string;\\r\\n    path?: string;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Represents a subsidiary.\\r\\n *\\r\\n * @see `IAspSubsidiary`\\r\\n */\\r\\nexport interface IUiAuthSubsidiary {\\r\\n    partyGuid: string; // TODO cleanup interfaces\\r\\n    name: string;\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiAuthService implements OnDestroy {\\r\\n    /**\\r\\n     * Indicates whether the permissions have been loaded.\\r\\n     * Can be used to determine if the user is authenticated and has permissions.\\r\\n     *\\r\\n     * @see `UiAuthService.hasAnyPermission()`\\r\\n     * @see `UiAuthService.hasPermissions()`\\r\\n     * @see `UiAuthService.arePermissionsLoaded()`\\r\\n     *\\r\\n     * @example\\r\\n     * ```typescript\\r\\n     * this._authService.permissionsLoaded$.pipe(\\r\\n     *   // wait for the permissions to be loaded\\r\\n     *   filter((loaded) => loaded === true),\\r\\n     *   ...\\r\\n     * ```\\r\\n     * @example\\r\\n     * ```typescript\\r\\n     * this._authService.permissionsLoaded$.subscribe((loaded) => {\\r\\n     *   // wait for the permissions to be loaded\\r\\n     *   if (loaded) {\\r\\n     *     ...\\r\\n     * ```\\r\\n     */\\r\\n    public permissionsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n\\r\\n    public subsidiariesLoaded$: BehaviorSubject<IUiAuthSubsidiary[]> = new BehaviorSubject(null);\\r\\n\\r\\n    /**\\r\\n     * Gets the active organization GUID.\\r\\n     *\\r\\n     * @returns The active organization GUID, or undefined if not set.\\r\\n     */\\r\\n    public get activeOrgGuid(): string | undefined {\\r\\n        const storedValue = sessionStorage.getItem(\'activeOrgGuid\');\\r\\n        if (storedValue) {\\r\\n            return storedValue;\\r\\n        }\\r\\n        return this._activeOrgGuid;\\r\\n    }\\r\\n    public set activeOrgGuid(value: string) {\\r\\n        this._activeOrgGuid = value;\\r\\n        // set value in local storage for an hour\\r\\n        sessionStorage.setItem(\'activeOrgGuid\', value);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Resets the polling interval for the user authentication status\\r\\n     */\\r\\n    private readonly _pollReset$ = new Subject<void>();\\r\\n\\r\\n    private _activeOrgGuid: string | undefined;\\r\\n    private readonly _subsidiaryExpiration = 3600000; // 1 hour\\r\\n\\r\\n    /**\\r\\n     * Gets the user GUID.\\r\\n     *\\r\\n     * @returns The user GUID as a string or undefined if not available.\\r\\n     */\\r\\n    public get userGuid(): string | undefined {\\r\\n        return this._userGuid;\\r\\n    }\\r\\n    private _userGuid: string | undefined;\\r\\n\\r\\n    /**\\r\\n     * Gets the root organization GUID.\\r\\n     *\\r\\n     * @returns The root organization GUID, or undefined if not set.\\r\\n     */\\r\\n    public get rootOrgGuid(): string | undefined {\\r\\n        return this._rootOrgGuid;\\r\\n    }\\r\\n    public set rootOrgGuid(value: string | undefined) {\\r\\n        this._rootOrgGuid = value;\\r\\n    }\\r\\n    private _rootOrgGuid: string | undefined;\\r\\n    private readonly _pollInterval = 300000; // 5 minutes\\r\\n    private readonly _unsubscribe$ = new Subject<void>();\\r\\n\\r\\n    /**\\r\\n     * Gets the list of audiences.\\r\\n     *\\r\\n     * @returns An array of all audiences.\\r\\n     */\\r\\n    public get audienceList(): IUiAudience[] {\\r\\n        return Array.from(this._audienceList);\\r\\n    }\\r\\n    private _audienceList: Set<IUiAudience> = new Set();\\r\\n\\r\\n    public get subsidiaries(): IUiAuthSubsidiary[] {\\r\\n        return Array.from(this._subsidiaryList);\\r\\n    }\\r\\n    public set subsidiaries(value: any[]) {\\r\\n        this._subsidiaryList = new Set(value);\\r\\n        this.subsidiariesLoaded$.next(Array.from(this._subsidiaryList));\\r\\n    }\\r\\n    private _subsidiaryList: Set<IUiAuthSubsidiary> = new Set();\\r\\n\\r\\n    private readonly _config: IUiAuth0Config;\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Accessible through the getPermissionsList and hasPermission methods\\r\\n     */\\r\\n    private _permissionsList: Set<string> = new Set();\\r\\n\\r\\n    private _helper = new JwtHelperService();\\r\\n\\r\\n    constructor(\\r\\n        private readonly _auth0Service: AuthService,\\r\\n        private readonly _configurationService: UiConfigurationService,\\r\\n        private readonly _cookieService: CookieService,\\r\\n    ) {\\r\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\r\\n\\r\\n        // Clear audiences\\r\\n        this._audienceList.clear();\\r\\n        const audiences = this._config.audiences;\\r\\n        if (!audiences || audiences.length === 0) {\\r\\n            console.error(\'No audiences defined in the configuration.\');\\r\\n        }\\r\\n        // Add audiences to the list\\r\\n        audiences.forEach((audience) => {\\r\\n            const existingAudience = Array.from(this._audienceList)\\r\\n                .find((aud) => (audience.name === aud.name) || (audience.audience === aud.audience));\\r\\n            if (existingAudience) {\\r\\n                console.warn(`Warning -> Duplicate audience found.`);\\r\\n            } else {\\r\\n                this._audienceList.add(audience);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        // Clear permissions\\r\\n        this._permissionsList.clear();\\r\\n        this._subsidiaryList.clear();\\r\\n        this._activeOrgGuid = undefined;\\r\\n        // Set observables to null\\r\\n        this.permissionsLoaded$.next(null);\\r\\n        this._unsubscribe$.next();\\r\\n        this._unsubscribe$.complete();\\r\\n    }\\r\\n\\r\\n    //#region Init\\r\\n\\r\\n    /**\\r\\n     * Initializes the application by loading permissions if the user is authenticated.\\r\\n     *\\r\\n     * @returns `Promise<boolean>` A promise that resolves to `true` if the initialization is successful, otherwise `false`.\\r\\n     * @throws {Error} If an error occurs during the initialization process.\\r\\n     */\\r\\n    public async initializeApp(): Promise<any> {\\r\\n        try {\\r\\n            // Verify that the user is logged in\\r\\n            const isAuthenticated = await this.isUserAuthenticated();\\r\\n            if (!isAuthenticated) {\\r\\n                console.warn(\'Warning -> User not authenticated.\');\\r\\n                this._auth0Service.logout();\\r\\n                this._auth0Service.loginWithRedirect();\\r\\n                // Stop execution of the method if the user is not authenticated\\r\\n                return false;\\r\\n            }\\r\\n\\r\\n            this._auth0Service.user$.subscribe((user) => {\\r\\n                this._cookieService.set(this._configurationService.appConfig.emailCookieId, user.email);\\r\\n            });\\r\\n\\r\\n            // Reset the permission and init observables\\r\\n            this.permissionsLoaded$.next(false);\\r\\n\\r\\n            // Clear permission\\r\\n            this._permissionsList.clear();\\r\\n            this._subsidiaryList.clear();\\r\\n\\r\\n            // Get entitlement token (cachemode = off)\\r\\n            const token = await this.getDecodedTokenByAudience(this._config.authorizationParams.audience, \'off\');\\r\\n            if (token) {\\r\\n                // Set userguid\\r\\n                this._userGuid = token.user_guid;\\r\\n                // Set rootorg\\r\\n                this._rootOrgGuid = token.root_org_guid;\\r\\n\\r\\n                this.addPermissionsFromDecodedToken(token);\\r\\n\\r\\n                //await this.loadPermissions().then(() => {\\r\\n                this.permissionsLoaded$.next(true);\\r\\n                return true;\\r\\n                //});\\r\\n            } else {\\r\\n                console.error(\'No token available for audience.\');\\r\\n                // Return false on error\\r\\n                return false;\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error initializing app.\');\\r\\n            // Return false on error\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    /**\\r\\n     * Checks if the user is authenticated.\\r\\n     *\\r\\n     * @returns A promise that resolves to a boolean indicating whether the user is authenticated or not.\\r\\n     */\\r\\n    public async isUserAuthenticated(): Promise<boolean> {\\r\\n        try {\\r\\n            return firstValueFrom(this._auth0Service.isAuthenticated$).then((isAuthenticated) => {\\r\\n                return isAuthenticated;\\r\\n            });\\r\\n        } catch {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Polls for an access token at a specified interval.\\r\\n     *\\r\\n     * @returns An observable that emits the access token as a string.\\r\\n     */\\r\\n    public pollAccessToken(): Observable<string> {\\r\\n        return this._pollReset$.pipe(\\r\\n            startWith(0),\\r\\n            switchMap(() =>\\r\\n                interval(this._pollInterval).pipe(\\r\\n                    takeUntil(this._pollReset$),\\r\\n                    switchMap(() =>\\r\\n                        this._auth0Service.getAccessTokenSilently().pipe(\\r\\n                            catchError((error) => {\\r\\n                                console.error(\'Error fetching access token:\', error);\\r\\n                                this._auth0Service.logout();\\r\\n                                this._auth0Service.loginWithRedirect();\\r\\n                                // Complete the observable after redirecting\\r\\n                                return EMPTY;\\r\\n                            })\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            ),\\r\\n            takeUntil(this._unsubscribe$),\\r\\n            shareReplay(1)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Returns the subsidiary list.\\r\\n     *\\r\\n     * @returns An array of IUiAuthSubsidiary objects representing the subsidiary list.\\r\\n     */\\r\\n    private get subsidiaryList(): IUiAuthSubsidiary[] {\\r\\n        return Array.from(this._subsidiaryList);\\r\\n    }\\r\\n\\r\\n    //#region Audience\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Gets the exact audience with the specified name.\\r\\n     *\\r\\n     * @param nameOrPath The name of the audience to get.\\r\\n     * @returns The audience with the specified name, or undefined if not found.\\r\\n     */\\r\\n    private getAudience(nameOrPath: string): IUiAudience | undefined {\\r\\n        let audienceMatch = this.audienceList.find((audience) => audience.name === nameOrPath);\\r\\n        if (!audienceMatch) {\\r\\n            audienceMatch = this.audienceList.find((audience) => audience.audience === nameOrPath);\\r\\n        }\\r\\n        return audienceMatch;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Retrieves the audience from the given path.\\r\\n     *\\r\\n     * @param path - The path to check for audience.\\r\\n     * @returns The audience if a matching endpoint is found, otherwise null.\\r\\n     */\\r\\n    public getAudienceFromPath(path: string): string {\\r\\n        // First check for an exact match to the API endpoint\\r\\n        const matchingAudience = this.audienceList.find((audience) => {\\r\\n            const matchPath = path.includes(audience.endpoint);\\r\\n            return matchPath;\\r\\n        });\\r\\n        return matchingAudience ? matchingAudience.audience : null;\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    //#region Tokens\\r\\n\\r\\n    /**\\r\\n     * Retrieves a token for the specified audience.\\r\\n     *\\r\\n     * @param audienceName - The name of the audience.\\r\\n     * @param cacheMode - The cache mode for the token. Defaults to \'on\'.\\r\\n     * @returns An Observable that emits the token string or undefined.\\r\\n     */\\r\\n    public getToken(audienceName: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\r\\n        try {\\r\\n            // Verify that the user is logged in\\r\\n            if (!this._auth0Service.isAuthenticated$) {\\r\\n                console.error(\' Error -> User not authenticated.\');\\r\\n                return of(undefined);\\r\\n            }\\r\\n\\r\\n            // Request a new JWT if the current one is not valid\\r\\n            const aud = this.getAudience(audienceName);\\r\\n            if (!aud) {\\r\\n                console.error(\' Error -> Audience not found.\');\\r\\n                return of(undefined);\\r\\n            }\\r\\n\\r\\n            return this.getTokenByAudience(aud.audience);\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getToken.\');\\r\\n            return of(undefined);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves a token by audience.\\r\\n     *\\r\\n     * @param audience - The audience for which to retrieve the token.\\r\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\r\\n     * @returns An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.\\r\\n     */\\r\\n    private getTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\r\\n        return this._auth0Service.getAccessTokenSilently({\\r\\n            authorizationParams: {\\r\\n                audience,\\r\\n                activeOrgGuid: this._activeOrgGuid,\\r\\n            },\\r\\n            cacheMode,\\r\\n        }).pipe(\\r\\n            tap(() => {\\r\\n            // Emit a value to reset the polling interval after getting the token\\r\\n                this._pollReset$.next();\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves the decoded token for a given audience.\\r\\n     *\\r\\n     * @param audience - The audience for which to retrieve the token.\\r\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\r\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found.\\r\\n     */\\r\\n    private async getDecodedTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\r\\n        try {\\r\\n            const token = await firstValueFrom(this.getTokenByAudience(audience, cacheMode));\\r\\n            if (!token) {\\r\\n                return undefined;\\r\\n            }\\r\\n            // Decode the token\\r\\n            const decodedToken = this._helper.decodeToken(token);\\r\\n            // Return the decoded token\\r\\n            return decodedToken;\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getDecodedTokenByAudience.\');\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Retrieves and decodes a token with the specified name.\\r\\n     *\\r\\n     * @param name - The name of the token to retrieve and decode.\\r\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.\\r\\n     */\\r\\n    public async getDecodedToken(name: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\r\\n        try {\\r\\n            const token = await firstValueFrom(this.getToken(name, cacheMode));\\r\\n            if (!token) {\\r\\n                return undefined;\\r\\n            }\\r\\n\\r\\n            // Decode the token\\r\\n            const decodedToken = this._helper.decodeToken(token);\\r\\n            // Return the decoded token\\r\\n            return decodedToken;\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in getDecodedToken.\');\\r\\n            return undefined;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    //#region Permissions\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Adds permissions from the decoded token.\\r\\n     *\\r\\n     * @param decodedToken - The decoded token containing permissions.\\r\\n     */\\r\\n    private addPermissionsFromDecodedToken(decodedToken: any) {\\r\\n        try {\\r\\n            if (decodedToken && decodedToken.permissions) {\\r\\n                // Add permissions to the list\\r\\n                this.addPermissions(decodedToken.permissions);\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error adding permissions from decoded token.\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @private\\r\\n     * Loads permissions from the user\'s token.\\r\\n     *\\r\\n     * @returns `Promise<void>` A promise that resolves when the permissions have been loaded.\\r\\n     */\\r\\n    private async loadPermissions(): Promise<void> {\\r\\n        try {\\r\\n            await Promise.all(\\r\\n                Array.from(this._audienceList)\\r\\n                    .map((audience) => {\\r\\n                        return this.getDecodedToken(audience.name); // not by audience\\r\\n                    })\\r\\n            ).then((tokens) => {\\r\\n                if (tokens.length > 0) {\\r\\n                    tokens.forEach((token) => {\\r\\n                        // Load permissions from the token\\r\\n                        this.addPermissionsFromDecodedToken(token);\\r\\n                    });\\r\\n                }\\r\\n            });\\r\\n        } catch (error) {\\r\\n            console.error(\'Error loading permissions.\');\\r\\n            throw error;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n\\r\\n    /**\\r\\n     * Checks if a specific permission exists.\\r\\n     *\\r\\n     * @param permission The permission to check.\\r\\n     * @returns True if the permission exists, false otherwise.\\r\\n     */\\r\\n    public hasPermission(permission: string): boolean {\\r\\n        // Check for an exact permission match\\r\\n        if (this._permissionsList.has(permission)) {\\r\\n            return true;\\r\\n        } else {\\r\\n            // Check for a fuzzy match on the audience portion of the permission\\r\\n            const permissionFound = Array.from(this._permissionsList).find((p) => p.includes(permission));\\r\\n            if (permissionFound) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if all specified permissions exist.\\r\\n     *\\r\\n     * @param permissions The permissions to check.\\r\\n     * @returns True if all permissions exist, false otherwise.\\r\\n     */\\r\\n    public hasPermissions(permissions: string[]): boolean {\\r\\n        return permissions.every((permission) => this.hasPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if any of the specified permissions exist.\\r\\n     *\\r\\n     * @param permissions The permissions to check.\\r\\n     * @returns True if any permission exists, false otherwise.\\r\\n     */\\r\\n    public hasAnyPermission(permissions: string[]): boolean {\\r\\n        return permissions.some((permission) => this.hasPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the permissions have been loaded.\\r\\n     *\\r\\n     * @returns True if the permissions have been loaded, false otherwise.\\r\\n     */\\r\\n    public arePermissionsLoaded(): boolean {\\r\\n        return this.permissionsLoaded$.getValue();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds a new permission if it does not already exist.\\r\\n     *\\r\\n     * @param permission The permission to add.\\r\\n     */\\r\\n    private addPermission(permission: string): void {\\r\\n        this._permissionsList.add(permission);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Adds multiple permissions.\\r\\n     *\\r\\n     * @param permissions The permissions to add.\\r\\n     */\\r\\n    private addPermissions(permissions: string[]): void {\\r\\n        permissions.forEach((permission) => this.addPermission(permission));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes a specific permission.\\r\\n     *\\r\\n     * @param permission The permission to remove.\\r\\n     */\\r\\n    private removePermission(permission: string): void {\\r\\n        this._permissionsList.delete(permission);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the list of all permissions.\\r\\n     *\\r\\n     * @returns An array of all permissions.\\r\\n     */\\r\\n    public getPermissionsList(): string[] {\\r\\n        return Array.from(this._permissionsList);\\r\\n    }\\r\\n\\r\\n    //#endregion\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":137,"jsdoctags":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"activeOrgGuid":{"name":"activeOrgGuid","setSignature":{"name":"activeOrgGuid","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":71,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"activeOrgGuid","type":"","returnType":"string | undefined","line":64,"rawdescription":"\\n\\nGets the active organization GUID.\\n\\n","description":"<p>Gets the active organization GUID.</p>\\n","jsdoctags":[{"pos":2024,"end":2094,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":2025,"end":2032,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The active organization GUID, or undefined if not set.</p>\\n"}]}},"userGuid":{"name":"userGuid","getSignature":{"name":"userGuid","type":"","returnType":"string | undefined","line":90,"rawdescription":"\\n\\nGets the user GUID.\\n\\n","description":"<p>Gets the user GUID.</p>\\n","jsdoctags":[{"pos":2856,"end":2928,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":2857,"end":2864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The user GUID as a string or undefined if not available.</p>\\n"}]}},"rootOrgGuid":{"name":"rootOrgGuid","setSignature":{"name":"rootOrgGuid","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":103,"jsdoctags":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"rootOrgGuid","type":"","returnType":"string | undefined","line":100,"rawdescription":"\\n\\nGets the root organization GUID.\\n\\n","description":"<p>Gets the root organization GUID.</p>\\n","jsdoctags":[{"pos":3131,"end":3199,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":3132,"end":3139,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The root organization GUID, or undefined if not set.</p>\\n"}]}},"audienceList":{"name":"audienceList","getSignature":{"name":"audienceList","type":"[]","returnType":"IUiAudience[]","line":115,"rawdescription":"\\n\\nGets the list of audiences.\\n\\n","description":"<p>Gets the list of audiences.</p>\\n","jsdoctags":[{"pos":3624,"end":3666,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":3625,"end":3632,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of all audiences.</p>\\n"}]}},"subsidiaries":{"name":"subsidiaries","setSignature":{"name":"subsidiaries","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"any[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":123,"jsdoctags":[{"name":"value","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subsidiaries","type":"[]","returnType":"IUiAuthSubsidiary[]","line":120}},"subsidiaryList":{"name":"subsidiaryList","getSignature":{"name":"subsidiaryList","type":"[]","returnType":"IUiAuthSubsidiary[]","line":284,"rawdescription":"\\n\\nReturns the subsidiary list.\\n\\n","description":"<p>Returns the subsidiary list.</p>\\n","jsdoctags":[{"pos":9697,"end":9759,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":9698,"end":9705,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Returns the subsidiary list.</p>\\n"},{"pos":9759,"end":9846,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":9760,"end":9767,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of IUiAuthSubsidiary objects representing the subsidiary list.</p>\\n"}]}}},"type":"injectable"},{"name":"UiConfigurationService","id":"injectable-UiConfigurationService-0e726bca97f9b77d1581aec72072070174c218d629af3fa2fc90632eb3b77f89abf6eb7fe14ff865e4d0a2e9726f94e081b95afd65770ee75021b3845e260824","file":"libs/ui/src/lib/services/configuration/configuration.service.ts","properties":[{"name":"_configFile","defaultValue":"\'assets/configs/app-config.json\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":68,"modifierKind":[121,144]},{"name":"_httpClient","deprecated":false,"deprecationMessage":"","type":"HttpClient","optional":false,"description":"","line":67,"modifierKind":[121]},{"name":"appConfig","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"configLoaded$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":64,"modifierKind":[123]},{"name":"environmentVariables","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":65,"modifierKind":[123]}],"methods":[{"name":"getConfig","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"T","typeParameters":["T"],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initializeApp","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123,131]},{"name":"initializeFromObject","args":[{"name":"configData","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"configData","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setEnvironmentVariables","args":[{"name":"env","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"env","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\r\\n// RxJS\\r\\nimport { Subject, throwError } from \'rxjs\';\\r\\n\\r\\nexport interface IUiAppConfig {\\r\\n    aiApi: string;\\r\\n    dataApi: string;\\r\\n    authApi: string; // e.g \\"http://api.localdev.assentcompliance.com:8080/v1/authentication\\",\\r\\n    authCheckApi: string;\\r\\n    gcApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/GlobalCatalogApi\\"\\r\\n    aciServiceApi: string;\\r\\n    iamApi: string;\\r\\n    requestOtpTokenSlug: string; // e.g. \\"authentication/signin\\"\\r\\n    verifyOtpTokenSlug: string; // e.g. \\"authentication/verifytoken\\"\\r\\n\\r\\n    enablePendoAcpUi: boolean;\\r\\n    pendoApiKey: string;\\r\\n    aucBaseUrl: string;\\r\\n    contactManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ContactManagementApi/\\"\\r\\n    partyApi: string;\\r\\n    tenantRequestApi: string;\\r\\n    supplierExperienceApi: string;\\r\\n    indirectMonitoringApi: string;\\r\\n    surveySubmissionApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveySubmissionApi\\"\\r\\n    coreAuthCookieDomain: string; // e.g \\".assentcompliance.com\\",\\r\\n    authCookieId: string; // e.g. \\"auth_token\\"\\r\\n    sessionCookieId: string; // e.g. \\"sessionKey\\"\\r\\n    emailCookieId: string; // e.g. \\"user.email\\"\\r\\n    environmentName: string; // e.g. \\"localdev\\", \\"qa\\", \\"production\\"\\r\\n    rememberMe: string; // e.g. localdev.remember_me\\r\\n    correctiveActionsService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/CorrectiveActionsService\\"\\r\\n    scanUrl: string; // e.g wss://2bfckqgh8h.execute-api.us-east-1.amazonaws.com/dev\\r\\n    scanBucketName: string; // e.g assent-csr-file-upload-service-scan-bucket\\r\\n    scanBucketRegion: string; // e.g us-east-1\\r\\n    scanIdentityPoolId: string; // e.g us-east-1:2bbb60c2-3c7a-4195-bafe-3f8ef5fb2ffe\\r\\n    coreAuthenticationLogin: string; //e.g. http://core-login.localdev.assentcompliance.com/#/login\\r\\n    supplierHelpCenter: string;\\r\\n    // e.g. \\"https://assentcompliance.force.com/SupplierCustomerPortal/s/topic/0TO8X000000B4LJWA0/corrective-actions?language=en_US\\"\\r\\n    termsOfService: string; // e.g. \\"https://www.assent.com/terms-of-use-supplier-portal\\"\\r\\n    supplierLoginEnabled: boolean;\\r\\n    moduleManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ModuleManagementApi/\\"\\r\\n    sessionExpiryLogoutCookieName: string; // e.g. \\"sessionExpiryLogout\\"\\r\\n    manualLogoutCookieName: string; // e.g. \\"manualLogout\\"\\r\\n    forceAllSessionsLogoutCookieName: string; // e.g. \\"forceAllSessionsLogout\\"\\r\\n    isSupplier: string;\\r\\n    isConsentGiven: string;\\r\\n    secureCookie: boolean;\\r\\n    surveyRulesService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveyRulesService\\"\\r\\n    profileManager: boolean;\\r\\n    authServiceVersion: string; // e.g. \\"cognito\\" / \\"auth0\\"\\r\\n    uniqueSessionCookieId: string; // e.g. \\"uniqueSessionGuid\\"\\r\\n    awsS3ServiceURL: string; // e.g \\"http://aws.localdev.assentcompliance.com:4567\\"\\r\\n    supo2NavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.com\\"\\r\\n    supoEuNavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.eu\\"\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiConfigurationService {\\r\\n    public appConfig: any;\\r\\n    public configLoaded$: Subject<void> = new Subject();\\r\\n    public environmentVariables: any;\\r\\n\\r\\n    private _httpClient: HttpClient;\\r\\n    private readonly _configFile = \'assets/configs/app-config.json\';\\r\\n\\r\\n    constructor(handler: HttpBackend) {\\r\\n        this._httpClient = new HttpClient(handler);\\r\\n    }\\r\\n\\r\\n    public getConfig<T>(name: string): T {\\r\\n        if (this.appConfig && this.appConfig[name]) {\\r\\n            return this.appConfig[name] as T;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public initializeFromObject(configData: any) {\\r\\n        this.appConfig = configData;\\r\\n    }\\r\\n\\r\\n    public async initializeApp(): Promise<boolean> {\\r\\n        return new Promise((_resolve, _reject) => {\\r\\n            this._httpClient.get(this._configFile).subscribe({\\r\\n                next: (configData: any) => {\\r\\n                    this.appConfig = configData;\\r\\n                    this.configLoaded$.next(null);\\r\\n                },\\r\\n                error: (error: HttpErrorResponse) => {\\r\\n                    _reject(true);\\r\\n                    return throwError(() => error || \'Server error\');\\r\\n                },\\r\\n                complete: () => {\\r\\n                    _resolve(true);\\r\\n                },\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setEnvironmentVariables(env: any) {\\r\\n        this.environmentVariables = env;\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"handler","type":"HttpBackend","deprecated":false,"deprecationMessage":""}],"line":68,"jsdoctags":[{"name":"handler","type":"HttpBackend","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiCsvParserService","id":"injectable-UiCsvParserService-9af71b502225bac44d6332e7d28e8dac55a13f6892d884510064b0275bf902396ff2fb9f87ba978d18652af4e71ddcd06c4609147698ac06b75905f1e9a9ef31","file":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","properties":[{"name":"_defaultConfig","defaultValue":"{\\r\\n        header: true,\\r\\n        delimiter: \',\',\\r\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiCsvParserConfig","optional":false,"description":"","line":10,"modifierKind":[121]}],"methods":[{"name":"csvStringToArray","args":[{"name":"csvDataString","type":"string","deprecated":false,"deprecationMessage":""},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvDataString","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDataRecordsArrayFromCsvFile","args":[{"name":"csvRecordsArray","type":"any","deprecated":false,"deprecationMessage":""},{"name":"headerLength","type":"number","deprecated":false,"deprecationMessage":""},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvRecordsArray","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"headerLength","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getHeaderArray","args":[{"name":"csvRecordsArr","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvRecordsArr","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isCsvFile","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"parse","args":[{"name":"csvFile","type":"File","deprecated":false,"deprecationMessage":""},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Array | string>","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvFile","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// Rxjs\\r\\nimport { Observable, Observer } from \'rxjs\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiCsvParserService {\\r\\n    private _defaultConfig: IUiCsvParserConfig = {\\r\\n        header: true,\\r\\n        delimiter: \',\',\\r\\n    };\\r\\n\\r\\n    public parse(csvFile: File, config: IUiCsvParserConfig): Observable<Array<any> | string> {\\r\\n        config = {\\r\\n            ...this._defaultConfig,\\r\\n            ...config,\\r\\n        };\\r\\n\\r\\n        const parser$ = new Observable((observer: Observer<Array<any> | string>) => {\\r\\n            try {\\r\\n                if (!this.isCsvFile(csvFile)) {\\r\\n                    observer.error(\'NOT_A_CSV_FILE\');\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                const reader = new FileReader();\\r\\n                reader.readAsText(csvFile);\\r\\n\\r\\n                reader.onload = () => {\\r\\n                    const csvData = reader.result;\\r\\n\\r\\n                    if (!csvData) {\\r\\n                        observer.error(\'EMPTY_FILE\');\\r\\n                        return;\\r\\n                    }\\r\\n\\r\\n                    const csvRecordsArray = this.csvStringToArray((csvData as string).trim(), config.delimiter);\\r\\n                    const headersRow = this.getHeaderArray(csvRecordsArray);\\r\\n                    const csvRecords = this.getDataRecordsArrayFromCsvFile(csvRecordsArray, headersRow.length, config);\\r\\n\\r\\n                    observer.next(csvRecords);\\r\\n                    observer.complete();\\r\\n                };\\r\\n\\r\\n                reader.onerror = () => {\\r\\n                    observer.error(\'BAD_CSV_DATA_FORMAT\');\\r\\n                };\\r\\n            } catch (error) {\\r\\n                observer.error(\'UNKNOWN_ERROR\');\\r\\n            }\\r\\n        });\\r\\n\\r\\n        return parser$;\\r\\n    }\\r\\n\\r\\n    public csvStringToArray(csvDataString: string, delimiter: string) {\\r\\n        const regexPattern = new RegExp(\\r\\n            `(\\\\\\\\${delimiter}|\\\\\\\\r?\\\\\\\\n|\\\\\\\\r|^)(?:\\\\\\"((?:\\\\\\\\\\\\\\\\.|\\\\\\"\\\\\\"|[^\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\"|([^\\\\\\\\${delimiter}\\\\\\"\\\\\\\\r\\\\\\\\n]*))`,\\r\\n            \'gi\'\\r\\n        );\\r\\n        const resultCsv = [[]];\\r\\n        let matchedPatternArray = regexPattern.exec(csvDataString);\\r\\n\\r\\n        while (matchedPatternArray) {\\r\\n            if (matchedPatternArray[1].length && matchedPatternArray[1] !== delimiter) {\\r\\n                resultCsv.push([]);\\r\\n            }\\r\\n\\r\\n            const cleanValue = matchedPatternArray[2]\\r\\n                ? matchedPatternArray[2].replace(new RegExp(\'[\\\\\\\\\\\\\\\\\\"](.)\', \'g\'), \'$1\')\\r\\n                : matchedPatternArray[3];\\r\\n            resultCsv[resultCsv.length - 1].push(cleanValue);\\r\\n            matchedPatternArray = regexPattern.exec(csvDataString);\\r\\n        }\\r\\n\\r\\n        return resultCsv;\\r\\n    }\\r\\n\\r\\n    public getDataRecordsArrayFromCsvFile(csvRecordsArray: any, headerLength: number, config: IUiCsvParserConfig) {\\r\\n        const dataArr = [];\\r\\n        const headersArray = csvRecordsArray[0];\\r\\n        const startingRowToParseData = config.header ? 1 : 0;\\r\\n\\r\\n        for (let i = startingRowToParseData; i < csvRecordsArray.length; i++) {\\r\\n            const data = csvRecordsArray[i];\\r\\n\\r\\n            if (data.length === headerLength && config.header) {\\r\\n                const csvRecord = {};\\r\\n\\r\\n                for (let j = 0; j < data.length; j++) {\\r\\n                    if (data[j] === undefined || data[j] === null) {\\r\\n                        csvRecord[headersArray[j]] = \'\';\\r\\n                    } else {\\r\\n                        csvRecord[headersArray[j]] = data[j].trim();\\r\\n                    }\\r\\n                }\\r\\n                dataArr.push(csvRecord);\\r\\n            } else {\\r\\n                dataArr.push(data);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return dataArr;\\r\\n    }\\r\\n\\r\\n    public isCsvFile(file: File) {\\r\\n        return file.name.toLowerCase().endsWith(\'.csv\');\\r\\n    }\\r\\n\\r\\n    public getHeaderArray(csvRecordsArr: any) {\\r\\n        const headers = csvRecordsArr[0];\\r\\n        const headerArray = [];\\r\\n\\r\\n        for (const header of headers) {\\r\\n            headerArray.push(header);\\r\\n        }\\r\\n\\r\\n        return headerArray;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface IUiCsvParserConfig {\\r\\n    header?: boolean;\\r\\n    delimiter?: string;\\r\\n}\\r\\n","type":"injectable"},{"name":"UiFeatureFlagService","id":"injectable-UiFeatureFlagService-c0f7fff62aa3051515e1db4b1a2b5be6ca647b2551533aed5d5dc2b4fb90dcfdaf24351d890c731c62005329d5f1f6710f807c8d0b722a85d36d3121b2a8ecb1","file":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","properties":[{"name":"_client","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"LDClient.LDClient | null","optional":false,"description":"","line":31,"modifierKind":[121]},{"name":"_clientSubject","defaultValue":"new ReplaySubject<LDClient.LDClient>(1)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32,"modifierKind":[121]},{"name":"_evaluateFunction","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"","line":29,"modifierKind":[121]},{"name":"_featureFlagConfig","deprecated":false,"deprecationMessage":"","type":"IUiFeatureFlagConfig","optional":false,"description":"","line":28,"modifierKind":[121]},{"name":"_localFlagsData","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"IUiLocalFlagsData | null","optional":false,"description":"","line":35,"modifierKind":[121]},{"name":"_localFlagsDataSubject","defaultValue":"new ReplaySubject<IUiLocalFlagsData>(1)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[121]},{"name":"configurationService","deprecated":false,"deprecationMessage":"","type":"UiConfigurationService","optional":false,"description":"","line":39,"modifierKind":[123]}],"methods":[{"name":"evaluateFlagUsingLDClient","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"evaluateFlagUsingLocalFile","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateContext","args":[],"optional":false,"returnType":"LDClient.LDContext","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"initializeClient","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"isFlagOn","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"defaultValue","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultValue","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\nimport { Observable, of, ReplaySubject, switchMap } from \'rxjs\';\\r\\nimport * as LDClient from \'launchdarkly-js-client-sdk\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\r\\n\\r\\n/* eslint-disable max-len */\\r\\n/* Note\\r\\n There\'s a bunch of logic involving observers going on in this class. The reason for this is that the LD Client needs the token but the token (or lack thereof) isn\'t available right away.\\r\\n We have to wait for the Auth0 library to determine if the user is authenticated then either set the token to empty if they aren\'t or retrieve the token if they are.\\r\\n The tricky part is that we could have a request for a FF before that token has been set. We force the evaluation method to wait until the client has been setup before trying to get a value.\\r\\n We use the ReplaySubject\\r\\n*/\\r\\n/* eslint-enable max-len */\\r\\n\\r\\nexport interface IUiFeatureFlagConfig {\\r\\n    key: string;\\r\\n    localFlagPath: string | undefined;\\r\\n}\\r\\n\\r\\nexport interface IUiLocalFlagsData { [key: string]: boolean };\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiFeatureFlagService {\\r\\n    private _featureFlagConfig: IUiFeatureFlagConfig;\\r\\n    private _evaluateFunction: (string, boolean) => Observable<boolean>;\\r\\n    //LD Flags\\r\\n    private _client: LDClient.LDClient | null = null;\\r\\n    private _clientSubject = new ReplaySubject<LDClient.LDClient>(1);\\r\\n\\r\\n    //Local Flags\\r\\n    private _localFlagsData: IUiLocalFlagsData | null = null;\\r\\n    private _localFlagsDataSubject = new ReplaySubject<IUiLocalFlagsData>(1);\\r\\n\\r\\n    constructor(\\r\\n        public configurationService: UiConfigurationService,\\r\\n        private _authService: UiAuthService,\\r\\n        private _httpClient: HttpClient,\\r\\n    ) {\\r\\n        this._featureFlagConfig = configurationService.getConfig<IUiFeatureFlagConfig>(\'launchDarkly\');\\r\\n\\r\\n        //Determine which evaluate function to use\\r\\n        const useLocalFile = this._featureFlagConfig.localFlagPath !== undefined && this._featureFlagConfig.localFlagPath.length !== 0;\\r\\n        const evaluateFunction = useLocalFile ? this.evaluateFlagUsingLocalFile : this.evaluateFlagUsingLDClient;\\r\\n        this._evaluateFunction = evaluateFunction.bind(this);\\r\\n\\r\\n        if (!useLocalFile) {\\r\\n            this._authService.permissionsLoaded$.subscribe((permissionsLoaded) => {\\r\\n                if (permissionsLoaded && !this._client) {\\r\\n                    this.initializeClient();\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public isFlagOn(featureFlagName: string, defaultValue: boolean = false): Observable<boolean> {\\r\\n        return this._evaluateFunction(featureFlagName, defaultValue);\\r\\n    }\\r\\n\\r\\n    private evaluateFlagUsingLDClient(featureFlagName: string, defaultValue): Observable<boolean> {\\r\\n        return this._clientSubject.pipe(\\r\\n            switchMap((client) => of(client.variation(featureFlagName, defaultValue)))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private evaluateFlagUsingLocalFile(featureFlagName: string, defaultValue): Observable<boolean> {\\r\\n        if (this._localFlagsData === null) {\\r\\n            this._httpClient.get<IUiLocalFlagsData>(this._featureFlagConfig.localFlagPath)\\r\\n                .subscribe((data) => {\\r\\n                    this._localFlagsData = data;\\r\\n                    this._localFlagsDataSubject.next(data);\\r\\n                });\\r\\n        }\\r\\n\\r\\n        return this._localFlagsDataSubject.pipe(\\r\\n            switchMap((data) => of(data[featureFlagName] ?? defaultValue))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private initializeClient(): void {\\r\\n        const context = this.generateContext();\\r\\n\\r\\n        if (this._client === null) {\\r\\n            //Initialize the client\\r\\n            const options: LDClient.LDOptions = { allAttributesPrivate: false };\\r\\n            this._client = LDClient.initialize(this._featureFlagConfig.key, context, options);\\r\\n\\r\\n            //Wait until the client is ready then emit to the observer so anything waiting can now get the feature flag\\r\\n            this._client.waitUntilReady().then(() => this._clientSubject.next(this._client));\\r\\n        } else {\\r\\n            //Client is setup, update the context accordingly\\r\\n            this._client.identify(context);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private generateContext(): LDClient.LDContext {\\r\\n        const context: LDClient.LDContext = {\\r\\n            kind: \'multi\'\\r\\n        };\\r\\n\\r\\n        if (this._authService.userGuid) {\\r\\n            const userContext: LDClient.LDContext = {\\r\\n                kind: \'user\',\\r\\n                key: this._authService.userGuid\\r\\n            };\\r\\n\\r\\n            context.user = userContext;\\r\\n        }\\r\\n        else {\\r\\n            const userContext: LDClient.LDContext = {\\r\\n                kind: \'user\',\\r\\n                key: \'anonymous-user\',\\r\\n                anonymous: true\\r\\n            };\\r\\n\\r\\n            context.user = userContext;\\r\\n        }\\r\\n\\r\\n        if (this._authService.activeOrgGuid) {\\r\\n            const organizationContext: LDClient.LDContext = {\\r\\n                \'kind\': \'organization\',\\r\\n                \'key\': this._authService.activeOrgGuid,\\r\\n                \'root-org-guid\': this._authService.rootOrgGuid\\r\\n            };\\r\\n\\r\\n            context.organization = organizationContext;\\r\\n        }\\r\\n        else {\\r\\n            const organizationContext: LDClient.LDContext = {\\r\\n                kind: \'organization\',\\r\\n                key: \'anonymous-organization\',\\r\\n                anonymous: true\\r\\n            };\\r\\n\\r\\n            context.organization = organizationContext;\\r\\n        }\\r\\n\\r\\n        return context;\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiFileScanService","id":"injectable-UiFileScanService-050d21887d059e5dbf733e9c50ecba7f9a81c97ff04b05bbd45044ac7a030a2b3c18836a5db42ed2ea493d5e39dcf612d937169bee00479f3ccd165589faab04","file":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","properties":[{"name":"_token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[121,144]},{"name":"fileScan","deprecated":false,"deprecationMessage":"","type":"WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>","optional":false,"description":"","line":31,"modifierKind":[123]}],"methods":[{"name":"completeFileScan","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"generateGuid","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"generateUniqueName","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"uploadFile","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Service to handle file scanning.</p>\\n<p>See <code>AcpFileScanService</code> apps/acp-ui/src/app/services/file-scan.service.ts</p>\\n","rawdescription":"\\n\\nService to handle file scanning.\\n\\nSee `AcpFileScanService` apps/acp-ui/src/app/services/file-scan.service.ts\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// AWS\\r\\nimport * as AWS from \'aws-sdk\';\\r\\n// RxJS\\r\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\r\\nimport { EMPTY, Observable, of } from \'rxjs\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n\\r\\n/**\\r\\n * Interface for file scan result.\\r\\n *\\r\\n * @todo This seems to be a duplicate of `IFileScanResult` - We should consider merging these interfaces.\\r\\n * @see `IFileScanResult` apps/acp-ui/src/app/services/file-scan.service.ts\\r\\n */\\r\\nexport interface IUiFileScanResult {\\r\\n    scanResultClean: boolean;\\r\\n    eTag: string;\\r\\n    key: string;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Service to handle file scanning.\\r\\n *\\r\\n * @todo This seems to be a duplicate of `AcpFileScanService` - We should consider merging these services.\\r\\n * @see `AcpFileScanService` apps/acp-ui/src/app/services/file-scan.service.ts\\r\\n */\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiFileScanService {\\r\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\r\\n    private readonly _token: string;\\r\\n\\r\\n    constructor(private _configurationService: UiConfigurationService) {\\r\\n        this._token = this.generateGuid();\\r\\n        if (\\r\\n            this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\r\\n            this._configurationService.appConfig[\'file-scan\'].scanUrl\\r\\n        ) {\\r\\n            this.fileScan = webSocket({\\r\\n                url: `${this._configurationService.appConfig[\'file-scan\'].scanUrl}?token=${this._token}`,\\r\\n                deserializer: ({ data }) => {\\r\\n                    const parsedData = JSON.parse(data);\\r\\n                    return {\\r\\n                        scanResultClean: parsedData.scanResultClean,\\r\\n                        eTag: parsedData.file.eTag,\\r\\n                        key: parsedData.file.key,\\r\\n                    };\\r\\n                },\\r\\n            });\\r\\n        } else {\\r\\n            this.fileScan = EMPTY;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\r\\n        return new Observable((observer) => {\\r\\n            const s3Endpoint = this._configurationService.appConfig[\'file-scan\'].awsS3ServiceURL;\\r\\n            const config: AWS.S3.ClientConfiguration = {\\r\\n                apiVersion: \'2006-03-01\',\\r\\n                params: { Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName },\\r\\n            };\\r\\n\\r\\n            if (s3Endpoint) {\\r\\n                config.endpoint = s3Endpoint;\\r\\n                config.s3ForcePathStyle = true;\\r\\n            }\\r\\n\\r\\n            if (this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId) {\\r\\n                AWS.config.update({\\r\\n                    region: this._configurationService.appConfig[\'file-scan\'].scanBucketRegion,\\r\\n                    credentials: new AWS.CognitoIdentityCredentials({\\r\\n                        IdentityPoolId: this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId,\\r\\n                    }),\\r\\n                });\\r\\n            } else {\\r\\n                // Use dummy credentials for fake S3.\\r\\n                AWS.config.update({\\r\\n                    credentials: new AWS.Credentials({\\r\\n                        accessKeyId: \'fakeAccessKeyId\',\\r\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\r\\n                    }),\\r\\n                });\\r\\n            }\\r\\n            const s3 = new AWS.S3(config);\\r\\n            const fileUniqueName = this.generateUniqueName(file.name);\\r\\n            const params = {\\r\\n                Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName,\\r\\n                Key: `${fileFolder}${fileUniqueName}`,\\r\\n                Body: file,\\r\\n                ACL: \'private\',\\r\\n                ContentType: file.type,\\r\\n            };\\r\\n            s3.upload(params, (err, data) => {\\r\\n                if (err) {\\r\\n                    observer.error(err);\\r\\n                } else {\\r\\n                    // If there is no file scanning, update the file scan subject with mock IUiFileScanResult\\r\\n                    if (\\r\\n                        !this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\r\\n                        !this._configurationService.appConfig[\'file-scan\'].scanUrl\\r\\n                    ) {\\r\\n                        this.fileScan = of({\\r\\n                            scanResultClean: true,\\r\\n                            eTag: \'\',\\r\\n                            key: data.Key,\\r\\n                        });\\r\\n                    }\\r\\n\\r\\n                    observer.next(data);\\r\\n                    observer.complete();\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public completeFileScan(): void {\\r\\n        if (this.fileScan instanceof WebSocketSubject) {\\r\\n            this.fileScan.complete();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private generateUniqueName(name: string): string {\\r\\n        const parts = name\\r\\n            .toLowerCase()\\r\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\r\\n            .split(\'.\');\\r\\n        const fileName = parts[0];\\r\\n        let ext = \'\';\\r\\n        if (parts.length > 1) {\\r\\n            ext = \'.\' + parts[parts.length - 1];\\r\\n        }\\r\\n        return fileName.substring(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\r\\n    }\\r\\n\\r\\n    private generateGuid(): string {\\r\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\r\\n            const r = (Math.random() * 16) | 0;\\r\\n            const v = c === \'x\' ? r : (r & 0x3) | 0x8;\\r\\n            return v.toString(16);\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":32,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiFileScanService","id":"injectable-UiFileScanService-e1299bf704e44f9f8d3374d8353e40b1c4c1f387f18954dd7fbd921c1066c4074cd6b7fa72f854120c1101056962df183d7d2e41fc3644bc1b940c6780e4de78-1","file":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","properties":[{"name":"_fileScanConfig","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":21,"modifierKind":[121]},{"name":"_token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[121,144]},{"name":"fileScan","deprecated":false,"deprecationMessage":"","type":"WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>","optional":false,"description":"","line":19,"modifierKind":[123]}],"methods":[{"name":"completeFileScan","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"generateGuid","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"generateUniqueName","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"uploadFile","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// AWS\\r\\nimport * as AWS from \'aws-sdk\';\\r\\n// RxJS\\r\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\r\\nimport { EMPTY, Observable, of } from \'rxjs\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n\\r\\nexport interface IUiFileScanResult {\\r\\n    scanResultClean: boolean;\\r\\n    eTag: string;\\r\\n    key: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiFileScanService {\\r\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\r\\n    private readonly _token: string;\\r\\n    private _fileScanConfig: {\\r\\n        scanIdentityPoolId: string;\\r\\n        scanBucketRegion: string;\\r\\n        scanUrl: string;\\r\\n        scanBucketName: string;\\r\\n        awsS3ServiceURL: string;\\r\\n        enabled: boolean;\\r\\n    };\\r\\n\\r\\n    constructor(private _configurationService: UiConfigurationService) {\\r\\n        this._token = this.generateGuid();\\r\\n        this._fileScanConfig = this._configurationService.appConfig[\'file-scan\'];\\r\\n        if (this._fileScanConfig.scanIdentityPoolId && this._fileScanConfig.scanUrl) {\\r\\n            this.fileScan = webSocket({\\r\\n                url: `${this._fileScanConfig.scanUrl}?token=${this._token}`,\\r\\n                deserializer: ({ data }) => {\\r\\n                    const parsedData = JSON.parse(data);\\r\\n                    return {\\r\\n                        scanResultClean: parsedData.scanResultClean,\\r\\n                        eTag: parsedData.file.eTag,\\r\\n                        key: parsedData.file.key,\\r\\n                    };\\r\\n                },\\r\\n            });\\r\\n        } else {\\r\\n            this.fileScan = EMPTY;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\r\\n        return new Observable((observer) => {\\r\\n            const s3Endpoint = this._fileScanConfig.awsS3ServiceURL;\\r\\n            const config: AWS.S3.ClientConfiguration = {\\r\\n                apiVersion: \'2006-03-01\',\\r\\n                params: { Bucket: this._fileScanConfig.scanBucketName },\\r\\n            };\\r\\n\\r\\n            if (s3Endpoint) {\\r\\n                config.endpoint = s3Endpoint;\\r\\n                config.s3ForcePathStyle = true;\\r\\n            }\\r\\n\\r\\n            if (this._fileScanConfig.scanIdentityPoolId) {\\r\\n                AWS.config.update({\\r\\n                    region: this._fileScanConfig.scanBucketRegion,\\r\\n                    credentials: new AWS.CognitoIdentityCredentials({\\r\\n                        IdentityPoolId: this._fileScanConfig.scanIdentityPoolId,\\r\\n                    }),\\r\\n                });\\r\\n            } else {\\r\\n                // Use dummy credentials for fake S3.\\r\\n                AWS.config.update({\\r\\n                    credentials: new AWS.Credentials({\\r\\n                        accessKeyId: \'fakeAccessKeyId\',\\r\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\r\\n                        sessionToken: \'fakeSessionToken\',\\r\\n                    }),\\r\\n                });\\r\\n            }\\r\\n            const s3 = new AWS.S3(config);\\r\\n            const fileUniqueName = this.generateUniqueName(file.name);\\r\\n            const params = {\\r\\n                Bucket: this._fileScanConfig.scanBucketName,\\r\\n                Key: `${fileFolder}${fileUniqueName}`,\\r\\n                Body: file,\\r\\n                ACL: \'private\',\\r\\n                ContentType: file.type,\\r\\n                FileName: file.name,\\r\\n                Folder: fileFolder,\\r\\n            };\\r\\n            s3.upload(params, (err, data) => {\\r\\n                if (err) {\\r\\n                    observer.error(err);\\r\\n                } else {\\r\\n                    // If there is no file scanning, update the file scan subject with mock IFileScanResult\\r\\n                    if (!this._fileScanConfig.scanIdentityPoolId && !this._fileScanConfig.scanUrl) {\\r\\n                        this.fileScan = of({\\r\\n                            scanResultClean: true,\\r\\n                            eTag: \'\',\\r\\n                            key: data.Key,\\r\\n                        });\\r\\n                    }\\r\\n\\r\\n                    observer.next(data);\\r\\n                    observer.complete();\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public completeFileScan(): void {\\r\\n        if (this.fileScan instanceof WebSocketSubject) {\\r\\n            this.fileScan.complete();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private generateUniqueName(name: string): string {\\r\\n        const parts = name\\r\\n            .toLowerCase()\\r\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\r\\n            .split(\'.\');\\r\\n        const fileName = parts[0];\\r\\n        let ext = \'\';\\r\\n        if (parts.length > 1) {\\r\\n            ext = \'.\' + parts[(parts.length - 1)];\\r\\n        }\\r\\n        return fileName.substr(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\r\\n    }\\r\\n\\r\\n    private generateGuid(): string {\\r\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\r\\n            const r = Math.random() * 16 | 0;\\r\\n            const v = c === \'x\' ? r : (r & 0x3 | 0x8);\\r\\n            return v.toString(16);\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"UiFileScanService-1"},{"name":"UiFooterService","id":"injectable-UiFooterService-425a9a83c6e81e0f122d0a1d6e219cdf6814bf59c7f6c6c4a290bd41d7c7fe35f052acdaf52b08c2b58251a6e925a6229521ff590ac380ee3d7f9c0720075509","file":"libs/ui/src/lib/services/layout/footer/footer.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiFooterService {\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiHeaderService","id":"injectable-UiHeaderService-4878a0f0d77e8aa75af49e88d4b499a7c25a812a387bbc3791944e7fec53c2bb312215806766739cacc6ac9743fde6d2f28461ce617e01890b6a0cbb086b3736","file":"libs/ui/src/lib/services/layout/header/header.service.ts","properties":[{"name":"_tabsItems","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTab>","optional":false,"description":"","line":49,"modifierKind":[121]},{"name":"_title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48,"modifierKind":[121]},{"name":"_toolItems","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":false,"description":"","line":50,"modifierKind":[121]},{"name":"actionBtnsChange","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<TemplateRef<any>>","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"loading$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"loadingSubject","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"messageTxt","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"preToolsChange","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<TemplateRef<any>>","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"preToolsMessageChange","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<literal type>","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"selectedTabId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"selectedTabTemplateRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"subHeaderChange","defaultValue":"new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<literal type>","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"subHeaderMessage","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"subHeaderSelectedTabChange","defaultValue":"new EventEmitter<IUiSubHeaderTab>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<IUiSubHeaderTab>","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"t","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"titleChange","defaultValue":"new EventEmitter<string>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<string>","optional":false,"description":"","line":36,"modifierKind":[123]}],"methods":[{"name":"clearActionBtns","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"selectTab","args":[{"name":"e","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectTabById","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectTabByIndex","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setActionsBtns","args":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPreTools","args":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPreToolsMessage","args":[{"name":"msg","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"msg","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable, TemplateRef } from \'@angular/core\';\\r\\n\\r\\nimport { BehaviorSubject, Observable, throwError } from \'rxjs\';\\r\\nexport interface IUiSubHeaderTab {\\r\\n    id: string;\\r\\n    label?: string;\\r\\n    label2?: { txt: string; params: any };\\r\\n    onClickEvent?: (item: any) => void;\\r\\n    contentTpl?: TemplateRef<any>;\\r\\n    cacheTabContent?: boolean;\\r\\n    tools?: Array<any>;\\r\\n    tabClassColor?: string;\\r\\n}\\r\\nexport interface IUiSubHeaderTool {\\r\\n    id: string;\\r\\n    label?: string;\\r\\n    type?: string;\\r\\n    class?: Array<string>;\\r\\n    disabled?: boolean;\\r\\n    action?: string;\\r\\n    onClickEvent?: (item: any) => void;\\r\\n}\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiHeaderService {\\r\\n    public selectedTabId = \'\';\\r\\n    public selectedTabTemplateRef: TemplateRef<any>;\\r\\n    public messageTxt = \'\';\\r\\n    public subHeaderMessage: { msg: string; iconClass: Array<string>; colorClass: string };\\r\\n\\r\\n    public loading$: Observable<boolean>;\\r\\n    public loadingSubject = new BehaviorSubject<boolean>(false);\\r\\n\\r\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\r\\n    public subHeaderChange: EventEmitter<{\\r\\n        tabItem: Array<any>; toolItems: Array<any>;\\r\\n    }> = new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>();\\r\\n\\r\\n    public subHeaderSelectedTabChange: EventEmitter<IUiSubHeaderTab> = new EventEmitter<IUiSubHeaderTab>();\\r\\n    public actionBtnsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\r\\n    public preToolsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\r\\n    public preToolsMessageChange: EventEmitter<{ msg: string; iconClass: Array<string>; colorClass: string }> = new EventEmitter();\\r\\n\\r\\n    public t: string;\\r\\n\\r\\n    private _title: string;\\r\\n    private _tabsItems: Array<IUiSubHeaderTab>;\\r\\n    private _toolItems: Array<any>;\\r\\n\\r\\n    public get title(): string {\\r\\n        return this._title;\\r\\n    }\\r\\n\\r\\n    public set title(thisTitle: string) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\r\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this._title = thisTitle;\\r\\n            this.titleChange.emit(this._title);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get subHeaderTabs(): Array<IUiSubHeaderTab> {\\r\\n        return this._tabsItems;\\r\\n    }\\r\\n\\r\\n    public set subHeaderTabs(items: Array<IUiSubHeaderTab>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\r\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n\\r\\n        setTimeout(() => {\\r\\n            this._tabsItems = items;\\r\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\r\\n            if (this._tabsItems.length !== 0) {\\r\\n                this.selectTabByIndex(0);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get subToolItems(): Array<any> {\\r\\n        return this._toolItems;\\r\\n    }\\r\\n\\r\\n    public set subToolItems(items: Array<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this._toolItems = items;\\r\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\r\\n        });\\r\\n    }\\r\\n    constructor() {\\r\\n        this._title = \'Assent Compliance Platform\';\\r\\n        this.loading$ = this.loadingSubject.asObservable();\\r\\n    }\\r\\n\\r\\n    public selectTab(e: IUiSubHeaderTab) {\\r\\n        this.selectedTabId = e.id;\\r\\n        this.subToolItems = e.tools;\\r\\n        this.selectedTabTemplateRef = e.contentTpl;\\r\\n        this.subHeaderSelectedTabChange.emit(e);\\r\\n    }\\r\\n\\r\\n    public selectTabByIndex(index: number) {\\r\\n        this.selectTab(this._tabsItems[index]);\\r\\n    }\\r\\n\\r\\n    public selectTabById(id: string) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            this.selectTab(this._tabsItems.find((item) => item.id === id));\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setActionsBtns(tlpRef: TemplateRef<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\r\\n        setTimeout(() => {\\r\\n            if(tlpRef !== undefined){\\r\\n                this.actionBtnsChange.emit(tlpRef);\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setPreTools(tlpRef: TemplateRef<any>) {\\r\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\r\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\r\\n        setTimeout(() => {\\r\\n            this.preToolsChange.emit(tlpRef);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setPreToolsMessage(msg: { msg: string; iconClass: Array<string>; colorClass: string }) {\\r\\n        this.subHeaderMessage = msg;\\r\\n        this.preToolsMessageChange.emit(msg);\\r\\n        setTimeout(() => {\\r\\n            this.subHeaderMessage = null;\\r\\n        }, 3000);\\r\\n    }\\r\\n\\r\\n    public clearActionBtns() {\\r\\n        this.setActionsBtns(null);\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":96},"accessors":{"title":{"name":"title","setSignature":{"name":"title","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":56,"jsdoctags":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"title","type":"string","returnType":"string","line":52}},"subHeaderTabs":{"name":"subHeaderTabs","setSignature":{"name":"subHeaderTabs","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"items","type":"Array<IUiSubHeaderTab>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":70,"jsdoctags":[{"name":"items","type":"Array<IUiSubHeaderTab>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subHeaderTabs","type":"","returnType":"Array<IUiSubHeaderTab>","line":66}},"subToolItems":{"name":"subToolItems","setSignature":{"name":"subToolItems","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"items","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":88,"jsdoctags":[{"name":"items","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subToolItems","type":"","returnType":"Array<any>","line":84}}},"type":"injectable"},{"name":"UiHeaderSubService","id":"injectable-UiHeaderSubService-2ac5e33efae7a361f509fa6bbb53969e6d3ac22a5ef4b30e0cd402f8c11336ad578c8ae201ca15ffbd976c506a15497b53dffae3bc15d2df15df521e7aeedcf6","file":"libs/ui/src/lib/services/layout/header-sub/header-sub.service.ts","properties":[{"name":"_title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10,"modifierKind":[121]},{"name":"t","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"titleChange","defaultValue":"new EventEmitter<string>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<string>","optional":false,"description":"","line":7,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiHeaderSubService {\\r\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\r\\n    public t: string;\\r\\n\\r\\n    private _title: string;\\r\\n\\r\\n    public get title(): string {\\r\\n        return this._title;\\r\\n    }\\r\\n\\r\\n    public set title(thisTitle: string) {\\r\\n        this._title = thisTitle;\\r\\n        this.titleChange.emit(this._title);\\r\\n    }\\r\\n\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":19},"accessors":{"title":{"name":"title","setSignature":{"name":"title","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":16,"jsdoctags":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"title","type":"string","returnType":"string","line":12}}},"type":"injectable"},{"name":"UiLayoutService","id":"injectable-UiLayoutService-9e88ff93085ea21fbf13599287847a4891ecbd4e514b1a715b9812b1f04f4ab31f3d338d50f69cd34cb0ce31168c41cbe6427b4d1219492ecdab022d2dd07f65","file":"libs/ui/src/lib/services/layout/layout.service.ts","properties":[{"name":"_alignLeft","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":84,"modifierKind":[121]},{"name":"_currentUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":87,"modifierKind":[121]},{"name":"_hideOverflow","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":89,"modifierKind":[121]},{"name":"_isOpen","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":88,"modifierKind":[121]},{"name":"_previousUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":86,"modifierKind":[121]},{"name":"_selectedLayout","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":85,"modifierKind":[121]},{"name":"_showContainer","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":82,"modifierKind":[121]},{"name":"_showGrayBackground","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":83,"modifierKind":[121]},{"name":"_supplierHelpCenter","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":90,"modifierKind":[121]},{"name":"_termsOfService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":91,"modifierKind":[121]},{"name":"alignLeft$","defaultValue":"new BehaviorSubject(this.alignLeft)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"appMenu","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"calcTop$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"isDeveloperHub","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"isFirstLogin","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"onAlignLeft","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"onCloseSideNav","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<boolean>","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"onOpenSideNav","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<boolean>","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"onScroll","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"onShowContainer","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"onUpdateLayout","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"scrollBarIsVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"scrollBarIsVisible$","defaultValue":"new BehaviorSubject(this.scrollBarIsVisible)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"showContainer$","defaultValue":"new BehaviorSubject(this.showContainer)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"showMargins$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"updateGridLocalization","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":247,"modifierKind":[123]}],"methods":[{"name":"closeSideNav","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isFirstTimeLogin","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":227,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"openSideNav","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"salesforceWebToCase","args":[{"name":"fields","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"fields","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"scroll","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setCalcTop","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setShowMargin","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toogleSideNav","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"updateLayout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable } from \'@angular/core\';\\r\\nimport { NavigationEnd, Router } from \'@angular/router\';\\r\\n// RxJS\\r\\nimport { filter } from \'rxjs/operators\';\\r\\nimport { BehaviorSubject } from \'rxjs\';\\r\\n// Ngx Translate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'../configuration/configuration.service\';\\r\\n// Interfaces\\r\\nimport { IUiMenuItem } from \'../menu/menu.service\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiLayoutService {\\r\\n    public onCloseSideNav: EventEmitter<boolean> = new EventEmitter();\\r\\n    public onOpenSideNav: EventEmitter<boolean> = new EventEmitter();\\r\\n    public onScroll: EventEmitter<any> = new EventEmitter();\\r\\n    public onShowContainer: EventEmitter<any> = new EventEmitter();\\r\\n    public onAlignLeft: EventEmitter<any> = new EventEmitter();\\r\\n    public onUpdateLayout: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n    public isFirstLogin = false;\\r\\n    public isDeveloperHub = false;\\r\\n    public scrollBarIsVisible = false;\\r\\n\\r\\n    public calcTop$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n    public showMargins$: BehaviorSubject<boolean> = new BehaviorSubject(true);\\r\\n    public alignLeft$: BehaviorSubject<boolean> = new BehaviorSubject(this.alignLeft);\\r\\n    public showContainer$: BehaviorSubject<boolean> = new BehaviorSubject(this.showContainer);\\r\\n    public scrollBarIsVisible$: BehaviorSubject<boolean> = new BehaviorSubject(this.scrollBarIsVisible);\\r\\n\\r\\n    public appMenu: IUiMenuItem[] = [];\\r\\n\\r\\n    public set calcTop(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this.calcTop$.next(value);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public set alignLeft(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._alignLeft = value;\\r\\n            this.alignLeft$.next(value);\\r\\n            this.onAlignLeft.emit(this.alignLeft);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get alignLeft() {\\r\\n        return this._alignLeft;\\r\\n    }\\r\\n\\r\\n    public set showMargins(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this.showMargins$.next(value);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public set showContainer(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showContainer = value;\\r\\n            this.showContainer$.next(value);\\r\\n            this.onShowContainer.emit(this._showContainer);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get showContainer() {\\r\\n        return this._showContainer;\\r\\n    }\\r\\n\\r\\n    public set showGrayBackground(value) {\\r\\n        setTimeout(() => {\\r\\n            this._showGrayBackground = value;\\r\\n        });\\r\\n    }\\r\\n    public get showGrayBackground() {\\r\\n        return this._showGrayBackground;\\r\\n    }\\r\\n\\r\\n    private _showContainer = false;\\r\\n    private _showGrayBackground = false;\\r\\n    private _alignLeft = false;\\r\\n    private _selectedLayout = 1;\\r\\n    private _previousUrl = \'\';\\r\\n    private _currentUrl = \'\';\\r\\n    private _isOpen = true;\\r\\n    private _hideOverflow = false;\\r\\n    private _supplierHelpCenter = \'\';\\r\\n    private _termsOfService: string;\\r\\n\\r\\n    constructor(\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _router: Router,\\r\\n        private _translateService: TranslateService\\r\\n    ) {\\r\\n        this._router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\\r\\n            this._previousUrl = this._currentUrl;\\r\\n            this._currentUrl = event.url;\\r\\n            this._hideOverflow = false;\\r\\n            this._supplierHelpCenter =\\r\\n                this._configurationService.appConfig !== undefined ? this._configurationService.appConfig.supplierHelpCenter : \'\';\\r\\n            this._termsOfService =\\r\\n                this._configurationService.appConfig !== undefined ? this._configurationService.appConfig.termsOfService : \'\';\\r\\n            localStorage.setItem(\'previousUrl\', JSON.stringify(this._previousUrl));\\r\\n            localStorage.setItem(\'currentUrl\', JSON.stringify(this._currentUrl));\\r\\n\\r\\n            this.calcTop = false;\\r\\n            this.showGrayBackground = true;\\r\\n            this.showMargins = true;\\r\\n            this.showContainer = false;\\r\\n            this.alignLeft = false;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setShowMargin(val: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this.showMargins = val;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public setCalcTop(val: boolean) {\\r\\n        // eslint-disable-next-line max-len\\r\\n        // Note: Add .calc-top class to .main-content container in LayoutComponent for Ag-Grid that require a container height to display properly.\\r\\n        // Will be removed when all grids use UiGridComponent.\\r\\n        setTimeout(() => {\\r\\n            this.calcTop = val;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public closeSideNav() {\\r\\n        setTimeout(() => {\\r\\n            this._isOpen = false;\\r\\n            this.onCloseSideNav.emit(this._isOpen);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public openSideNav() {\\r\\n        setTimeout(() => {\\r\\n            this._isOpen = true;\\r\\n            this.onOpenSideNav.emit(this._isOpen);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public toogleSideNav() {\\r\\n        if (this.isOpen) {\\r\\n            this.closeSideNav();\\r\\n        } else {\\r\\n            this.openSideNav();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public scroll($event) {\\r\\n        this.onScroll.emit($event);\\r\\n    }\\r\\n\\r\\n    public get selectedLayout() {\\r\\n        return this._selectedLayout;\\r\\n    }\\r\\n\\r\\n    public set selectedLayout(newName: number) {\\r\\n        this._selectedLayout = newName;\\r\\n    }\\r\\n\\r\\n    public get previousRoute() {\\r\\n        return this._previousUrl;\\r\\n    }\\r\\n\\r\\n    public set previousRoute(route: string) {\\r\\n        this._previousUrl = route;\\r\\n    }\\r\\n\\r\\n    public get isOpen() {\\r\\n        return this._isOpen;\\r\\n    }\\r\\n\\r\\n    public set hideOverflow(val: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._hideOverflow = val;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get hideOverflow(): boolean {\\r\\n        return this._hideOverflow;\\r\\n    }\\r\\n\\r\\n    public salesforceWebToCase(fields) {\\r\\n        const iframeName = \'iFrameName\';\\r\\n\\r\\n        if (!document.getElementById(iframeName)) {\\r\\n            const iFrame = document.createElement(\'iframe\');\\r\\n            iFrame.id = iframeName;\\r\\n            iFrame.name = iframeName;\\r\\n            iFrame.src = \'about:blank\';\\r\\n            iFrame.style.display = \'none\';\\r\\n            document.body.appendChild(iFrame);\\r\\n        }\\r\\n\\r\\n        // Uncomment those next 2 line to use debug mode and receive Salesforce response email.\\r\\n        // fields.debug = 1;\\r\\n        // fields.debugEmail = \'your-email@assentcompliance.com\';\\r\\n        // fields.retURL = \'https://www.assent.com\'; // Remove because causing iframe same origin error\\r\\n        fields.orgid = \'00D61000000e6A7\';\\r\\n        fields.external = 1;\\r\\n\\r\\n        const form = document.createElement(\'form\');\\r\\n        form.method = \'POST\';\\r\\n        form.action = \'https://webto.salesforce.com/servlet/servlet.WebToCase?encoding=UTF-8\';\\r\\n        form.setAttribute(\'target\', iframeName);\\r\\n\\r\\n        for (const fieldName in fields) {\\r\\n            if (Object.prototype.hasOwnProperty.call(fields, fieldName)) {\\r\\n                const inputEle = document.createElement(\'input\');\\r\\n                inputEle.name = fieldName;\\r\\n                inputEle.value = fields[fieldName];\\r\\n                inputEle.setAttribute(\'type\', \'hidden\');\\r\\n                form.appendChild(inputEle);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        document.body.appendChild(form);\\r\\n        form.submit();\\r\\n    }\\r\\n\\r\\n    //Checks if user has logged in before\\r\\n    public isFirstTimeLogin() {\\r\\n        const isFirstLogin = localStorage.getItem(\'isFirstLogin\');\\r\\n\\r\\n        if (isFirstLogin === null || isFirstLogin === undefined) {\\r\\n            this.isFirstLogin = true;\\r\\n            localStorage.setItem(\'isFirstLogin\', \'true\');\\r\\n        }\\r\\n        return this.isFirstLogin;\\r\\n    }\\r\\n\\r\\n    public get supplierHelpCenterUrl() {\\r\\n        return this._supplierHelpCenter;\\r\\n    }\\r\\n\\r\\n    public get termsOfServiceUrl() {\\r\\n        return this._termsOfService;\\r\\n    }\\r\\n\\r\\n    //Localizes the grid if available\\r\\n    //Current workaround as grid footer translations require grid to be destoryed and rebuilt\\r\\n    public updateGridLocalization = () => {\\r\\n        if (document.querySelector(\'ag-grid-angular\') !== null) {\\r\\n            if (document.querySelector(\'[id$=\\"start-page\\"\') !== null) {\\r\\n                document.querySelector(\'[id$=\\"start-page\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.PAGE\');\\r\\n            }\\r\\n            if (document.querySelector(\'[id$=\\"of-page\\"\') !== null) {\\r\\n                document.querySelector(\'[id$=\\"of-page\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.OF\');\\r\\n            }\\r\\n            if (document.querySelector(\'[id$=\\"of\\"\') !== null) {\\r\\n                document.querySelector(\'[id$=\\"of\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.OF\');\\r\\n            }\\r\\n            if (document.querySelector(\'[id$=\\"to\\"\') !== null) {\\r\\n                document.querySelector(\'[id$=\\"to\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.TO\');\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n\\r\\n    public updateLayout() {\\r\\n        this.onUpdateLayout.emit();\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":91,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"calcTop":{"name":"calcTop","setSignature":{"name":"calcTop","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":37,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"alignLeft":{"name":"alignLeft","setSignature":{"name":"alignLeft","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":43,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"alignLeft","type":"","returnType":"","line":51}},"showMargins":{"name":"showMargins","setSignature":{"name":"showMargins","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":55,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showContainer":{"name":"showContainer","setSignature":{"name":"showContainer","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":61,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showContainer","type":"","returnType":"","line":69}},"showGrayBackground":{"name":"showGrayBackground","setSignature":{"name":"showGrayBackground","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":73,"jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showGrayBackground","type":"","returnType":"","line":78}},"selectedLayout":{"name":"selectedLayout","setSignature":{"name":"selectedLayout","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"newName","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":162,"jsdoctags":[{"name":"newName","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"selectedLayout","type":"","returnType":"","line":158}},"previousRoute":{"name":"previousRoute","setSignature":{"name":"previousRoute","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":170,"jsdoctags":[{"name":"route","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"previousRoute","type":"","returnType":"","line":166}},"isOpen":{"name":"isOpen","getSignature":{"name":"isOpen","type":"","returnType":"","line":174}},"hideOverflow":{"name":"hideOverflow","setSignature":{"name":"hideOverflow","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":178,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"hideOverflow","type":"boolean","returnType":"boolean","line":184}},"supplierHelpCenterUrl":{"name":"supplierHelpCenterUrl","getSignature":{"name":"supplierHelpCenterUrl","type":"","returnType":"","line":237}},"termsOfServiceUrl":{"name":"termsOfServiceUrl","getSignature":{"name":"termsOfServiceUrl","type":"","returnType":"","line":241}}},"type":"injectable"},{"name":"UiLocalCommunicationService","id":"injectable-UiLocalCommunicationService-e6f4c2480f518755f57fc834472f5a103fc55ccc65c78fcd6903449213d14de83cd0af00970c109500023ed244aa2bc9cce482480d4a11be7cc04af9bd119c97","file":"libs/ui/src/lib/services/communication/local-communication/local-communication.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiLocalCommunicationService {\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiLocalizationService","id":"injectable-UiLocalizationService-b5325eb6e03dae46b7e22c712801fff8b98dc21e549ed09617be634ffafbb15d2f501e9cbd63076bfc59d77175a28fe30e29f2c4bd38a8694c20738e08f019df","file":"libs/ui/src/lib/services/localization/localization.service.ts","properties":[{"name":"test","defaultValue":"\'UiLocalizationService test\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiLocalizationService {\\r\\n    public test = \'UiLocalizationService test\';\\r\\n\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":7},"type":"injectable"},{"name":"UiMenuService","id":"injectable-UiMenuService-3dc42dd42bed065f85ce66fd90e38a95c17155783cffd82d78b56d8ec4b5fbee7755a0d8da0c191c3ce05076ef416a2a01bd5a64a34c18fc5b6469dd5ad19c02","file":"libs/ui/src/lib/services/menu/menu.service.ts","properties":[{"name":"menus","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"onSetMainMenu","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<IUiMenuItem[]>","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"selectedMenu","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"selectedMenuName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]}],"methods":[{"name":"checkSinPermissions","args":[{"name":"selectedMenu","type":"IUiMenuItem[]","deprecated":false,"deprecationMessage":""},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiMenuItem[]","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedMenu","type":"IUiMenuItem[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearMenu","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"closeAllMenus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getLeftSideMenu","args":[],"optional":false,"returnType":"Observable<IUiMenuItem[]>","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getLeftSideMenuDevHub","args":[],"optional":false,"returnType":"Observable<IUiMenuItem[]>","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refreshMenu","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setMainMenu","args":[{"name":"menuName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"menuName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\r\\nimport { EventEmitter, Injectable } from \'@angular/core\';\\r\\n// Rxjs\\r\\nimport { Observable } from \'rxjs\';\\r\\nimport { map, take } from \'rxjs/operators\';\\r\\n// Interfaces\\r\\nimport { IUiPermissions } from \'../user\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\n/**\\r\\n * @deprecated\\r\\n */\\r\\nexport class UiMenuService {\\r\\n    public selectedMenu: IUiMenuItem[];\\r\\n    public selectedMenuName: string;\\r\\n    public menus: { dev: IUiMenuItem[]; sin: IUiMenuItem[]; contactsManager: IUiMenuItem[] };\\r\\n    public onSetMainMenu: EventEmitter<IUiMenuItem[]> = new EventEmitter();\\r\\n\\r\\n    constructor(private _httpClient: HttpClient) {}\\r\\n\\r\\n    // public setMainMenu(menu: IUiMenuItem[]) {\\r\\n    public setMainMenu(menuName: string, userPermissions?: IUiPermissions) {\\r\\n        this._httpClient\\r\\n            .get(\'assets/menus/menu.json\')\\r\\n            .pipe(take(1))\\r\\n            .subscribe((data: IUiMenus) => {\\r\\n                this.menus = data;\\r\\n                this.closeAllMenus();\\r\\n                this.selectedMenuName = menuName;\\r\\n\\r\\n                if (this.menus !== undefined) {\\r\\n                    this.selectedMenu = this.menus[menuName];\\r\\n                    this.selectedMenu =\\r\\n                        menuName === UiMenuNamesEnum.sin && userPermissions != null\\r\\n                            ? this.checkSinPermissions(this.selectedMenu, userPermissions)\\r\\n                            : this.selectedMenu;\\r\\n                    this.onSetMainMenu.emit(this.selectedMenu);\\r\\n                }\\r\\n            });\\r\\n    }\\r\\n\\r\\n    public getLeftSideMenuDevHub(): Observable<IUiMenuItem[]> {\\r\\n        return this._httpClient.get(\'assets/menus/left-side-menu-devhub.json\').pipe(\\r\\n            map((res: { menus: IUiMenuItem[] }) => {\\r\\n                return res.menus;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getLeftSideMenu(): Observable<IUiMenuItem[]> {\\r\\n        return this._httpClient.get(\'assets/menus/left-side-menu.json\').pipe(\\r\\n            map((res: { menus: IUiMenuItem[] }) => {\\r\\n                return res.menus;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public closeAllMenus() {\\r\\n        if (this.selectedMenu) {\\r\\n            for (let i = 0; i < this.selectedMenu.length; i++) {\\r\\n                this.selectedMenu[i].isOpen = false;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public refreshMenu() {\\r\\n        if (this.selectedMenu) {\\r\\n            this.selectedMenu = JSON.parse(JSON.stringify(this.selectedMenu));\\r\\n            this.onSetMainMenu.emit(this.selectedMenu);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public clearMenu() {\\r\\n        if (this.selectedMenu) {\\r\\n            this.selectedMenu = [];\\r\\n            this.onSetMainMenu.emit(this.selectedMenu);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkSinPermissions(selectedMenu: IUiMenuItem[], userPermissions: IUiPermissions): IUiMenuItem[] {\\r\\n        const selectedMenuWithPermissions: IUiMenuItem[] = [];\\r\\n        for (const subMenu of selectedMenu) {\\r\\n            if (!subMenu.permission || userPermissions[subMenu.permission]) {\\r\\n                selectedMenuWithPermissions.push(subMenu);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return selectedMenuWithPermissions;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport interface IUiMenuItem {\\r\\n    name: string;\\r\\n    icon?: string;\\r\\n    route: string;\\r\\n    isOpen: boolean;\\r\\n    permission: string;\\r\\n    flag: string;\\r\\n    children?: IUiMenuItem[];\\r\\n}\\r\\nexport interface IUiMenus {\\r\\n    devHub: IUiMenuItem[];\\r\\n    dev: IUiMenuItem[];\\r\\n    sin: IUiMenuItem[];\\r\\n    contactsManager: IUiMenuItem[];\\r\\n}\\r\\n\\r\\nexport enum UiMenuNamesEnum {\\r\\n    devHub = \'devHub\',\\r\\n    dev = \'dev\',\\r\\n    sin = \'sin\',\\r\\n    contactsManager = \'contactsManager\',\\r\\n    declarationSearch = \'declarationSearch\',\\r\\n    segmentation = \'segmentation\',\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiModalService","id":"injectable-UiModalService-fdfd665987d7210084e4badb3293b1e99f9c610c2a50567d40715010df6330347911c09a63d758288feddc48a514cd8648c140afcefd4d8dc5fd9e300580a323","file":"libs/ui/src/lib/modules/modal/services/modal.service.ts","properties":[{"name":"_activeModals","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"NgbModalRef[]","optional":false,"description":"","line":17,"modifierKind":[121]},{"name":"_activeOffcanvas","deprecated":false,"deprecationMessage":"","type":"NgbOffcanvasRef","optional":false,"description":"","line":18,"modifierKind":[121]}],"methods":[{"name":"close","args":[{"name":"result","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClose the dialog modal\\n\\n","description":"<p>Close the dialog modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1536,"end":1542,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"result"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":1530,"end":1535,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Optional - Result to be passed when closing the modal</p>\\n"}]},{"name":"dismiss","args":[{"name":"reason","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1240,"end":1246,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"reason"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1234,"end":1239,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Optional - Reason for dismissing the modal</p>\\n"}]},{"name":"open","args":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":""},{"name":"config","type":"UiModalConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"NgbModalRef | NgbOffcanvasRef","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpen the the passed component as a modal or offcanvas\\n\\n","description":"<p>Open the the passed component as a modal or offcanvas</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1960,"end":1969,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"component"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1954,"end":1959,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Passed component to be opened in a modal</p>\\n"},{"name":{"pos":2026,"end":2032,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"UiModalConfig","deprecated":false,"deprecationMessage":"","tagName":{"pos":2020,"end":2025,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Optional - Configuration options for the modal</p>\\n"},{"tagName":{"pos":2089,"end":2096,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Reference to the modal or offcanvas</p>\\n"}]},{"name":"setHideOverflow","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[121]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// NgBootstrap\\r\\nimport { NgbModal, NgbModalRef, NgbOffcanvas, NgbOffcanvasRef } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Enums\\r\\nimport { UiModalDialogSizeEnum } from \'@lib/enums\';\\r\\nimport { UiModalTypeEnum } from \'@lib/enums/modal-type.enum\';\\r\\n// Config\\r\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\r\\n// Services\\r\\nimport { UiLayoutService } from \'@lib/services/layout/layout.service\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiModalService {\\r\\n    private _activeModals: NgbModalRef[] = [];\\r\\n    private _activeOffcanvas: NgbOffcanvasRef;\\r\\n\\r\\n    /**\\r\\n     * @param _modalService NgbModal Service\\r\\n     * @param _offcanvasService NgbOffcanvas Service\\r\\n     */\\r\\n    constructor(private _modalService: NgbModal, private _offcanvasService: NgbOffcanvas, private _layoutService: UiLayoutService) {\\r\\n        this._modalService.activeInstances?.subscribe((activeModals: NgbModalRef[]) => (this._activeModals = activeModals));\\r\\n        this._offcanvasService.activeInstance?.subscribe((activeOffcanvas: NgbOffcanvasRef) => (this._activeOffcanvas = activeOffcanvas));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Dismiss the modal\\r\\n     *\\r\\n     * @param reason Optional - Reason for dismissing the modal\\r\\n     */\\r\\n    public dismiss(reason: any) {\\r\\n        this._offcanvasService.dismiss(reason);\\r\\n        this._modalService.dismissAll(reason);\\r\\n        this.setHideOverflow();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Close the dialog modal\\r\\n     *\\r\\n     * @param result Optional - Result to be passed when closing the modal\\r\\n     */\\r\\n    public close(result: unknown) {\\r\\n        if (this._activeOffcanvas) {\\r\\n            this._activeOffcanvas.close(result);\\r\\n        }\\r\\n        this._activeModals.forEach((modal: NgbModalRef) => modal.close(result));\\r\\n        this.setHideOverflow();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Open the the passed component as a modal or offcanvas\\r\\n     *\\r\\n     * @param component Passed component to be opened in a modal\\r\\n     * @param config Optional - Configuration options for the modal\\r\\n     * @returns Reference to the modal or offcanvas\\r\\n     */\\r\\n    public open(component: any, config: UiModalConfig): NgbModalRef | NgbOffcanvasRef {\\r\\n        try {\\r\\n            switch (config.modalType) {\\r\\n                case UiModalTypeEnum.Offcanvas:\\r\\n                    // Always append `.ui-modal-offcanvas` for selective styling\\r\\n                    config.panelClass += \' ui-modal-offcanvas offcanvas-end\';\\r\\n                    // If size is passed this way then append the panelClass to the size\\r\\n                    // If nothing passed then default to \'md\'\\r\\n                    // NOTE: the CSS is structured so that the largest class is always applied last\\r\\n                    if (config.size) {\\r\\n                        config.panelClass += \' \' + config.size;\\r\\n                    } else {\\r\\n                        config.panelClass += \' \' + UiModalDialogSizeEnum.md;\\r\\n                    }\\r\\n                    config.animation = true;\\r\\n\\r\\n                    const offcanvasRef =  this._offcanvasService.open(component, config);\\r\\n\\r\\n                    offcanvasRef.dismissed.subscribe((_) => {\\r\\n                        this.setHideOverflow();\\r\\n                    });\\r\\n                    return offcanvasRef;\\r\\n\\r\\n                case UiModalTypeEnum.Modal:\\r\\n                    // Always append `.ui-modal-dialog` for selective styling\\r\\n                    config.modalDialogClass += \' ui-modal-dialog\';\\r\\n\\r\\n                    return this._modalService.open(component, config);\\r\\n\\r\\n                default:\\r\\n                    console.error(\'Invalid modal type: \', config.modalType);\\r\\n                    throw new Error(\'Invalid modal type: please use UiModalTypeEnum.Offcanvas or UiModalTypeEnum.Modal\');\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error opening modal: \', error);\\r\\n            throw new Error(\'Error opening modal: \' + error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private setHideOverflow() {\\r\\n        // If the overflow is hidden, reset it to show - see https://assent.atlassian.net/browse/ASP-186\\r\\n        if (this._layoutService.hideOverflow !== undefined && this._layoutService.hideOverflow === true) {\\r\\n            this._layoutService.hideOverflow = false;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_offcanvasService","type":"NgbOffcanvas","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""}],"line":18,"rawdescription":"\\n\\n","jsdoctags":[{"name":{"pos":679,"end":692,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"_modalService"},"type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"pos":673,"end":678,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>NgbModal Service</p>\\n"},{"name":{"pos":725,"end":742,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"_offcanvasService"},"type":"NgbOffcanvas","deprecated":false,"deprecationMessage":"","tagName":{"pos":719,"end":724,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>NgbOffcanvas Service</p>\\n"},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiNavigationService","id":"injectable-UiNavigationService-85805c8cf4f3d704703f322ed7380f088b73c38bae6a4391ef80980929906b5ce12b83eea50c4ced4b92cbcf6e8783ee950596925a13e9317205f0ac57f5f5b6","file":"libs/ui/src/lib/services/navigation/navigation.service.ts","properties":[],"methods":[{"name":"getNavigationData","args":[],"optional":false,"returnType":"any | undefined","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateTo","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"navigateToWithReferral","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true},{"name":"referralRoute","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"referralRoute","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { IUiNavigationService } from \'./interfaces/navigation.service.interface\';\\r\\nimport { Router } from \'@angular/router\';\\r\\nimport { Injectable } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\'\\r\\n})\\r\\nexport class UiNavigationService implements IUiNavigationService {\\r\\n\\r\\n    constructor(private _router: Router, private _location: Location) {}\\r\\n\\r\\n    public navigateTo(location: string, data?: any): void {\\r\\n        this._router.navigate([location], { state: data });\\r\\n    }\\r\\n\\r\\n    public navigateToWithReferral(location: string, data?: any, referralRoute?: string): void {\\r\\n        this._router.navigate([location], { state: { ...data, referralRoute } });\\r\\n    }\\r\\n\\r\\n    public getNavigationData(): any | undefined {\\r\\n        return this._location.getState();\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiNotificationService","id":"injectable-UiNotificationService-07db1a6daa59a507b353c47dff8958d29b8d7b6784aa89b18af1df8e25cf2e59307a93502fda56aea809ce96e3eae401946f096a056bce20ebb45774c59b43fd","file":"libs/ui/src/lib/services/notification/notification.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiNotificationService {\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiPageFooterService","id":"injectable-UiPageFooterService-fa3b9b2e3d8eee09b0aa79f7a3c0811fe5ba2f0581cd9134910d6977f2eeded25b3c1ec1bec4ce79c4b88149ca595398d18ff658e056c43f3895b2de3e1e9b01","file":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":78,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":77,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":75,"modifierKind":[121,144]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76,"modifierKind":[121]},{"name":"_scollAtBottom","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[121]},{"name":"_showPageFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":81,"modifierKind":[121]},{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":83,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageFooter$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]}],"methods":[{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"updateSize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HostListener, Injectable } from \'@angular/core\';\\r\\nimport { ActivatedRoute, NavigationEnd, Router } from \'@angular/router\';\\r\\nimport { Subject } from \'rxjs\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\n\\r\\nexport interface IUiPageFooterItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageFooterService {\\r\\n    public showPageFooter$ = new Subject<boolean>();\\r\\n    //Commenting out for now - may use in future iterations\\r\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\r\\n\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public active: any;\\r\\n    private _scollAtBottom = false;\\r\\n\\r\\n    // Page Footer START\\r\\n    public set showPageFooter(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageFooter = value;\\r\\n            this.showPageFooter$.next(this._showPageFooter);\\r\\n            this.updateSize();\\r\\n        });\\r\\n    }\\r\\n    public get showPageFooter() {\\r\\n        return this._showPageFooter;\\r\\n    }\\r\\n\\r\\n    // Commenting out for now - may use in future iterations\\r\\n    // public set titleText(text: string) {\\r\\n    //     setTimeout(() => {\\r\\n    //         this.titleText$.next(text);\\r\\n    //     });\\r\\n    // }\\r\\n    // Page Footer END\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n\\r\\n            this.updateSize();\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Page Footer\\r\\n    private _showPageFooter = false;\\r\\n\\r\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\r\\n        this._router.events.subscribe((event) => {\\r\\n            if (event instanceof NavigationEnd) {\\r\\n                this.showPageFooter = false;\\r\\n                this.actionButtons = [];\\r\\n                setTimeout(() => {\\r\\n                    this.onResize();\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        setTimeout(() => {\\r\\n            // Checks if the footer is present on resize and adjusts the padding of the main content wrapper accordingly.\\r\\n            const footerElement = document.getElementById(\'footer\');\\r\\n            const mainContentWrapperElement = document.getElementById(\'mainContentWrapper\');\\r\\n\\r\\n            if (footerElement !== null) {\\r\\n                mainContentWrapperElement.style.paddingBottom = footerElement.clientHeight + \'px\';\\r\\n            } else if (mainContentWrapperElement !== null) {\\r\\n                mainContentWrapperElement.style.paddingBottom = \'0px\';\\r\\n            }\\r\\n\\r\\n            // If the scoll position is at bottom, reset the scoll position to the new bottom position.\\r\\n            if (this._scollAtBottom === true) {\\r\\n                mainContentWrapperElement.scroll(0, mainContentWrapperElement.scrollHeight - mainContentWrapperElement.clientHeight);\\r\\n            }\\r\\n\\r\\n            // Detect if the mainContentWrapperElement is scrolled to the complete bottom\\r\\n            if (mainContentWrapperElement !== null) {\\r\\n                mainContentWrapperElement.onscroll = (e: Event) => {\\r\\n                    const targetElement: HTMLDivElement = e.target as HTMLDivElement;\\r\\n                    const scollLimit = targetElement.scrollHeight - targetElement.clientHeight;\\r\\n                    if (Math.ceil(targetElement.scrollTop) === scollLimit) {\\r\\n                        this._scollAtBottom = true;\\r\\n                    } else {\\r\\n                        this._scollAtBottom = false;\\r\\n                    }\\r\\n                };\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public updateSize() {\\r\\n        this.onResize();\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":81,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"showPageFooter":{"name":"showPageFooter","setSignature":{"name":"showPageFooter","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":30,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageFooter","type":"","returnType":"","line":37}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":50,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":53}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":57,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":70}}},"type":"injectable"},{"name":"UiPageFooterService","id":"injectable-UiPageFooterService-807c7fd518369388c3d658017e19420c7398f1a0dc458e8db61b27d0a2f63ed864c21cae416c8d7dcaf8b840554ec6d035494a1efb6215a0dea6e58bd15e17ed-1","file":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":74,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":73,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":71,"modifierKind":[121,144]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72,"modifierKind":[121]},{"name":"_showPageFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":77,"modifierKind":[121]},{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":79,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageFooter$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\r\\n\\r\\nexport interface IUiPageFooterItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageFooterService {\\r\\n    public showPageFooter$ = new Subject<boolean>();\\r\\n    //Commenting out for now - may use in future iterations\\r\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\r\\n\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public active: any;\\r\\n\\r\\n    // Page Footer START\\r\\n    public set showPageFooter(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageFooter = value;\\r\\n            this.showPageFooter$.next(this._showPageFooter);\\r\\n        });\\r\\n    }\\r\\n    public get showPageFooter() {\\r\\n        return this._showPageFooter;\\r\\n    }\\r\\n\\r\\n    // Commenting out for now - may use in future iterations\\r\\n    // public set titleText(text: string) {\\r\\n    //     setTimeout(() => {\\r\\n    //         this.titleText$.next(text);\\r\\n    //     });\\r\\n    // }\\r\\n    // Page Footer END\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Page Footer\\r\\n    private _showPageFooter = false;\\r\\n\\r\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\r\\n        this._router.events.subscribe((event) => {\\r\\n            if (event instanceof NavigationEnd) {\\r\\n                this.showPageFooter = false;\\r\\n                this.actionButtons = [];\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":77,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"showPageFooter":{"name":"showPageFooter","setSignature":{"name":"showPageFooter","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageFooter","type":"","returnType":"","line":35}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":48,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":51}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":55,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":66}}},"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageFooterService-1"},{"name":"UiPageHeaderService","id":"injectable-UiPageHeaderService-b5634cea7f9bd54402b17c655acc2c00b9da07666b339ee3a34f739289826e8976bcbf5764e6c4f2af42ca5b0dd3a8a226789fc5924813d259f8ecded60d8262","file":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":275,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":274,"modifierKind":[121]},{"name":"_backToButtonText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":267,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":272,"modifierKind":[121,144]},{"name":"_dropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":false,"description":"","line":285,"modifierKind":[121]},{"name":"_feedbackIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":296,"modifierKind":[121]},{"name":"_feedbackIconColor","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":297,"modifierKind":[121]},{"name":"_feedbackText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":294,"modifierKind":[121]},{"name":"_feedbackTextParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":295,"modifierKind":[121]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":273,"modifierKind":[121]},{"name":"_pageSubTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":263,"modifierKind":[121]},{"name":"_pageSubTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":264,"modifierKind":[121]},{"name":"_pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":258,"modifierKind":[121]},{"name":"_pageTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":259,"modifierKind":[121]},{"name":"_pills","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":278,"modifierKind":[121]},{"name":"_showBackButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":268,"modifierKind":[121]},{"name":"_showBreadcrumb","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":269,"modifierKind":[121]},{"name":"_showDropdowns","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":284,"modifierKind":[121]},{"name":"_showPageHeader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":254,"modifierKind":[121]},{"name":"_showSubNav","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":288,"modifierKind":[121]},{"name":"_showTabSets","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":291,"modifierKind":[121]},{"name":"_status","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":279,"modifierKind":[121]},{"name":"_subNavs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":280,"modifierKind":[121]},{"name":"_tabsets","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":281,"modifierKind":[121]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"breadcrumbs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"breadcrumbString","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"hideOnRoute","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"keepActionButtonsOnRoute","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"routeSegments","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageHeader$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":251,"modifierKind":[123]},{"name":"subject","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":250,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\n// import { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\nexport interface IUiPageHeaderItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageHeaderService {\\r\\n    public breadcrumbString = \'\';\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\r\\n    public routeSegments = [];\\r\\n    public hideOnRoute = true;\\r\\n    public keepActionButtonsOnRoute = false;\\r\\n\\r\\n    // Title START\\r\\n    public set pageTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitle() {\\r\\n        return this._pageTitle;\\r\\n    }\\r\\n\\r\\n    public set pageTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitleParams() {\\r\\n        return this._pageTitleParams;\\r\\n    }\\r\\n    // Title END\\r\\n\\r\\n    public set pageSubTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitle() {\\r\\n        return this._pageSubTitle;\\r\\n    }\\r\\n\\r\\n    public set pageSubTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitleParams() {\\r\\n        return this._pageSubTitleParams;\\r\\n    }\\r\\n    // Sub Title END\\r\\n\\r\\n    // Back Button START\\r\\n    public set backToButtonText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._backToButtonText = value;\\r\\n        });\\r\\n    }\\r\\n    public get backToButtonText() {\\r\\n        return this._backToButtonText;\\r\\n    }\\r\\n\\r\\n    public set showBackButton(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBackButton = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBackButton() {\\r\\n        return this._showBackButton;\\r\\n    }\\r\\n    // Back Button END\\r\\n\\r\\n    // Breadcrumb // Breadcrumb are not available yet\\r\\n    public set showBreadcrumb(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBreadcrumb = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBreadcrumb() {\\r\\n        return this._showBreadcrumb;\\r\\n    }\\r\\n\\r\\n    // Status Badges\\r\\n    public set status(values: Array<IUiPageHeaderItem>) {\\r\\n        this._status = values;\\r\\n    }\\r\\n    public get status() {\\r\\n        return this._status;\\r\\n    }\\r\\n\\r\\n    // Pills\\r\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\r\\n        this._pills = values;\\r\\n    }\\r\\n    public get pills() {\\r\\n        return this._pills;\\r\\n    }\\r\\n\\r\\n    // Dropdowns START\\r\\n    public set dropdowns(value: Array<any>) {\\r\\n        setTimeout(() => {\\r\\n            this._dropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get dropdowns() {\\r\\n        return this._dropdowns;\\r\\n    }\\r\\n\\r\\n    public set showDropdowns(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showDropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get showDropdowns() {\\r\\n        return this._showDropdowns;\\r\\n    }\\r\\n    // Dropdowns END\\r\\n\\r\\n    // Sub Navigation\\r\\n    public set showSubNav(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showSubNav = value;\\r\\n        });\\r\\n    }\\r\\n    public get showSubNav() {\\r\\n        return this._showSubNav;\\r\\n    }\\r\\n\\r\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\r\\n        setTimeout(() => {\\r\\n            this._subNavs = values;\\r\\n        });\\r\\n    }\\r\\n    public get subNavs() {\\r\\n        return this._subNavs;\\r\\n    }\\r\\n\\r\\n    // Tabset\\r\\n    public set showTabsets(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showTabSets = value;\\r\\n        });\\r\\n    }\\r\\n    public get showTabsets() {\\r\\n        return this._showTabSets;\\r\\n    }\\r\\n\\r\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\r\\n        this._tabsets = values;\\r\\n    }\\r\\n    public get tabsets() {\\r\\n        return this._tabsets;\\r\\n    }\\r\\n\\r\\n    // Feedback Text\\r\\n    public set feedbackText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackText = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackText() {\\r\\n        return this._feedbackText;\\r\\n    }\\r\\n\\r\\n    // Feedback Text Params\\r\\n    public set feedbackTextParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackTextParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackTextParams() {\\r\\n        return this._feedbackTextParams;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon\\r\\n    public set feedbackIcon(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIcon = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIcon() {\\r\\n        return this._feedbackIcon;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon Color\\r\\n    public set feedbackIconColor(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIconColor = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIconColor() {\\r\\n        return this._feedbackIconColor;\\r\\n    }\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public get actionDropdowns() {\\r\\n        return this._actionDropdowns;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n    // Action Buttons END\\r\\n\\r\\n    // Page Header START\\r\\n    public set showPageHeader(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageHeader = value;\\r\\n            // this.subject.next(value);\\r\\n        });\\r\\n    }\\r\\n    public get showPageHeader() {\\r\\n        return this._showPageHeader;\\r\\n    }\\r\\n    // Page Header END\\r\\n\\r\\n    public subject = new Subject<boolean>();\\r\\n    public showPageHeader$ = new Subject<boolean>();\\r\\n\\r\\n    // Page Header\\r\\n    private _showPageHeader = false;\\r\\n\\r\\n    // Title\\r\\n    // private _showTitle = false;\\r\\n    private _pageTitle = \'\';\\r\\n    private _pageTitleParams = {};\\r\\n\\r\\n    // Sub Title\\r\\n    // private _showSubTitle = false;\\r\\n    private _pageSubTitle = \'\';\\r\\n    private _pageSubTitleParams = {};\\r\\n\\r\\n    // Back Button / Breadcrumbs\\r\\n    private _backToButtonText = \'\';\\r\\n    private _showBackButton = false;\\r\\n    private _showBreadcrumb = false;\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Pills / Status / SubNav/ Tabsets\\r\\n    private _pills: Array<IUiPageHeaderItem> = [];\\r\\n    private _status: Array<IUiPageHeaderItem> = [];\\r\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\r\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\r\\n\\r\\n    // Dropdowns\\r\\n    private _showDropdowns = false;\\r\\n    private _dropdowns: Array<any> = [];\\r\\n\\r\\n    // Sub Nav\\r\\n    private _showSubNav = false;\\r\\n\\r\\n    // Tabsets\\r\\n    private _showTabSets = false;\\r\\n\\r\\n    // Feedback\\r\\n    private _feedbackText = \'\';\\r\\n    private _feedbackTextParams = {};\\r\\n    private _feedbackIcon = \'\';\\r\\n    private _feedbackIconColor = \'\';\\r\\n\\r\\n    constructor(private _router: Router) {\\r\\n        // Hide Page Header on every navigation page out.\\r\\n        this._router.events.subscribe((evt) => {\\r\\n            if (evt instanceof NavigationEnd) {\\r\\n                if (this.hideOnRoute === true) {\\r\\n                    this.showPageHeader = false;\\r\\n                    this.subNavs = [];\\r\\n                    this.showSubNav = false;\\r\\n                    this.pageSubTitle = \'\';\\r\\n                }\\r\\n\\r\\n                const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\r\\n                if(!keepTabsets){\\r\\n                    this.tabsets = [];\\r\\n                    this.showTabsets = false;\\r\\n                }\\r\\n\\r\\n                if (!this.keepActionButtonsOnRoute) {\\r\\n                    this.actionButtons = [];\\r\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\r\\n                }\\r\\n\\r\\n                this.pills = [];\\r\\n                this.dropdowns = [];\\r\\n                this.backToButtonText = \'\';\\r\\n                this.backButtonText = \'COMMON.BACK\';\\r\\n                this.showBackButton = false;\\r\\n                this.feedbackText = \'\';\\r\\n                this.feedbackIcon = \'\';\\r\\n                this.feedbackIconColor = \'\';\\r\\n            }\\r\\n            if (evt instanceof NavigationStart) {\\r\\n                this.breadcrumbString = evt.url;\\r\\n                // this._layoutService.showContainer = true;\\r\\n                // this.routeSegments = evt.url.split(\'/\');\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":297,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"pageTitle":{"name":"pageTitle","setSignature":{"name":"pageTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":30,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitle","type":"","returnType":"","line":35}},"pageTitleParams":{"name":"pageTitleParams","setSignature":{"name":"pageTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitleParams","type":"","returnType":"","line":44}},"pageSubTitle":{"name":"pageSubTitle","setSignature":{"name":"pageSubTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":49,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitle","type":"","returnType":"","line":54}},"pageSubTitleParams":{"name":"pageSubTitleParams","setSignature":{"name":"pageSubTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":58,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitleParams","type":"","returnType":"","line":63}},"backToButtonText":{"name":"backToButtonText","setSignature":{"name":"backToButtonText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":69,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"backToButtonText","type":"","returnType":"","line":74}},"showBackButton":{"name":"showBackButton","setSignature":{"name":"showBackButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":78,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBackButton","type":"","returnType":"","line":83}},"showBreadcrumb":{"name":"showBreadcrumb","setSignature":{"name":"showBreadcrumb","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":89,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBreadcrumb","type":"","returnType":"","line":94}},"status":{"name":"status","setSignature":{"name":"status","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":99,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"status","type":"","returnType":"","line":102}},"pills":{"name":"pills","setSignature":{"name":"pills","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":107,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pills","type":"","returnType":"","line":110}},"dropdowns":{"name":"dropdowns","setSignature":{"name":"dropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":115,"jsdoctags":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"dropdowns","type":"","returnType":"","line":120}},"showDropdowns":{"name":"showDropdowns","setSignature":{"name":"showDropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":124,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showDropdowns","type":"","returnType":"","line":129}},"showSubNav":{"name":"showSubNav","setSignature":{"name":"showSubNav","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":135,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showSubNav","type":"","returnType":"","line":140}},"subNavs":{"name":"subNavs","setSignature":{"name":"subNavs","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":144,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subNavs","type":"","returnType":"","line":149}},"showTabsets":{"name":"showTabsets","setSignature":{"name":"showTabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":154,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showTabsets","type":"","returnType":"","line":159}},"tabsets":{"name":"tabsets","setSignature":{"name":"tabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":163,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"tabsets","type":"","returnType":"","line":166}},"feedbackText":{"name":"feedbackText","setSignature":{"name":"feedbackText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":171,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackText","type":"","returnType":"","line":176}},"feedbackTextParams":{"name":"feedbackTextParams","setSignature":{"name":"feedbackTextParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":181,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackTextParams","type":"","returnType":"","line":186}},"feedbackIcon":{"name":"feedbackIcon","setSignature":{"name":"feedbackIcon","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":191,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIcon","type":"","returnType":"","line":196}},"feedbackIconColor":{"name":"feedbackIconColor","setSignature":{"name":"feedbackIconColor","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":201,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIconColor","type":"","returnType":"","line":206}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":211,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":214}},"actionDropdowns":{"name":"actionDropdowns","getSignature":{"name":"actionDropdowns","type":"","returnType":"","line":218}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":222,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":233}},"showPageHeader":{"name":"showPageHeader","setSignature":{"name":"showPageHeader","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":239,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageHeader","type":"","returnType":"","line":245}}},"type":"injectable"},{"name":"UiPageHeaderService","id":"injectable-UiPageHeaderService-e70e4f61b59cf4910acd6e9f74d23b655b8445785527407bd5817124b9226dc1f8f0db386bc3d41881ce6be2a5fb2a665045f68315c7f62df56e2b59b998a30f-1","file":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":275,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":274,"modifierKind":[121]},{"name":"_backToButtonText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":267,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":272,"modifierKind":[121,144]},{"name":"_dropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":false,"description":"","line":285,"modifierKind":[121]},{"name":"_feedbackIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":296,"modifierKind":[121]},{"name":"_feedbackIconColor","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":297,"modifierKind":[121]},{"name":"_feedbackText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":294,"modifierKind":[121]},{"name":"_feedbackTextParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":295,"modifierKind":[121]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":273,"modifierKind":[121]},{"name":"_pageSubTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":263,"modifierKind":[121]},{"name":"_pageSubTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":264,"modifierKind":[121]},{"name":"_pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":258,"modifierKind":[121]},{"name":"_pageTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":259,"modifierKind":[121]},{"name":"_pills","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":278,"modifierKind":[121]},{"name":"_showBackButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":268,"modifierKind":[121]},{"name":"_showBreadcrumb","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":269,"modifierKind":[121]},{"name":"_showDropdowns","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":284,"modifierKind":[121]},{"name":"_showPageHeader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":254,"modifierKind":[121]},{"name":"_showSubNav","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":288,"modifierKind":[121]},{"name":"_showTabSets","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":291,"modifierKind":[121]},{"name":"_status","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":279,"modifierKind":[121]},{"name":"_subNavs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":280,"modifierKind":[121]},{"name":"_tabsets","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":281,"modifierKind":[121]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"breadcrumbs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"breadcrumbString","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"hideOnRoute","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"keepActionButtonsOnRoute","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"routeSegments","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageHeader$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":251,"modifierKind":[123]},{"name":"subject","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":250,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\n// import { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\nexport interface IUiPageHeaderItem {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    labelParams?: object;\\r\\n    type?: string;\\r\\n    onClick?: (e?: unknown) => unknown;\\r\\n    routerLink?: string;\\r\\n    disabled?: boolean;\\r\\n    icon?: string;\\r\\n    tooltipText?: string;\\r\\n}\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPageHeaderService {\\r\\n    public breadcrumbString = \'\';\\r\\n    public backButtonText = \'COMMON.BACK\';\\r\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\r\\n    public routeSegments = [];\\r\\n    public hideOnRoute = true;\\r\\n    public keepActionButtonsOnRoute = false;\\r\\n\\r\\n    // Title START\\r\\n    public set pageTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitle() {\\r\\n        return this._pageTitle;\\r\\n    }\\r\\n\\r\\n    public set pageTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageTitleParams() {\\r\\n        return this._pageTitleParams;\\r\\n    }\\r\\n    // Title END\\r\\n\\r\\n    public set pageSubTitle(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitle = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitle() {\\r\\n        return this._pageSubTitle;\\r\\n    }\\r\\n\\r\\n    public set pageSubTitleParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._pageSubTitleParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get pageSubTitleParams() {\\r\\n        return this._pageSubTitleParams;\\r\\n    }\\r\\n    // Sub Title END\\r\\n\\r\\n    // Back Button START\\r\\n    public set backToButtonText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._backToButtonText = value;\\r\\n        });\\r\\n    }\\r\\n    public get backToButtonText() {\\r\\n        return this._backToButtonText;\\r\\n    }\\r\\n\\r\\n    public set showBackButton(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBackButton = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBackButton() {\\r\\n        return this._showBackButton;\\r\\n    }\\r\\n    // Back Button END\\r\\n\\r\\n    // Breadcrumb // Breadcrumb are not available yet\\r\\n    public set showBreadcrumb(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showBreadcrumb = value;\\r\\n        });\\r\\n    }\\r\\n    public get showBreadcrumb() {\\r\\n        return this._showBreadcrumb;\\r\\n    }\\r\\n\\r\\n    // Status Badges\\r\\n    public set status(values: Array<IUiPageHeaderItem>) {\\r\\n        this._status = values;\\r\\n    }\\r\\n    public get status() {\\r\\n        return this._status;\\r\\n    }\\r\\n\\r\\n    // Pills\\r\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\r\\n        this._pills = values;\\r\\n    }\\r\\n    public get pills() {\\r\\n        return this._pills;\\r\\n    }\\r\\n\\r\\n    // Dropdowns START\\r\\n    public set dropdowns(value: Array<any>) {\\r\\n        setTimeout(() => {\\r\\n            this._dropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get dropdowns() {\\r\\n        return this._dropdowns;\\r\\n    }\\r\\n\\r\\n    public set showDropdowns(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showDropdowns = value;\\r\\n        });\\r\\n    }\\r\\n    public get showDropdowns() {\\r\\n        return this._showDropdowns;\\r\\n    }\\r\\n    // Dropdowns END\\r\\n\\r\\n    // Sub Navigation\\r\\n    public set showSubNav(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showSubNav = value;\\r\\n        });\\r\\n    }\\r\\n    public get showSubNav() {\\r\\n        return this._showSubNav;\\r\\n    }\\r\\n\\r\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\r\\n        setTimeout(() => {\\r\\n            this._subNavs = values;\\r\\n        });\\r\\n    }\\r\\n    public get subNavs() {\\r\\n        return this._subNavs;\\r\\n    }\\r\\n\\r\\n    // Tabset\\r\\n    public set showTabsets(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showTabSets = value;\\r\\n        });\\r\\n    }\\r\\n    public get showTabsets() {\\r\\n        return this._showTabSets;\\r\\n    }\\r\\n\\r\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\r\\n        this._tabsets = values;\\r\\n    }\\r\\n    public get tabsets() {\\r\\n        return this._tabsets;\\r\\n    }\\r\\n\\r\\n    // Feedback Text\\r\\n    public set feedbackText(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackText = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackText() {\\r\\n        return this._feedbackText;\\r\\n    }\\r\\n\\r\\n    // Feedback Text Params\\r\\n    public set feedbackTextParams(value: object) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackTextParams = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackTextParams() {\\r\\n        return this._feedbackTextParams;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon\\r\\n    public set feedbackIcon(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIcon = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIcon() {\\r\\n        return this._feedbackIcon;\\r\\n    }\\r\\n\\r\\n    // Feedback Icon Color\\r\\n    public set feedbackIconColor(value: string) {\\r\\n        setTimeout(() => {\\r\\n            this._feedbackIconColor = value;\\r\\n        });\\r\\n    }\\r\\n    public get feedbackIconColor() {\\r\\n        return this._feedbackIconColor;\\r\\n    }\\r\\n\\r\\n    // Action Buttons START\\r\\n    public set maxActionButtons(value: number) {\\r\\n        this._maxActionButtons = value;\\r\\n    }\\r\\n    public get maxActionButtons() {\\r\\n        return this._maxActionButtons;\\r\\n    }\\r\\n\\r\\n    public get actionDropdowns() {\\r\\n        return this._actionDropdowns;\\r\\n    }\\r\\n\\r\\n    public set actionButtons(values: Array<IUiActionButton>) {\\r\\n        setTimeout(() => {\\r\\n            if (this.maxActionButtons !== -1) {\\r\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\r\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\r\\n            } else {\\r\\n                this._actionButtons = values.reverse();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public get actionButtons() {\\r\\n        return this._actionButtons;\\r\\n    }\\r\\n    // Action Buttons END\\r\\n\\r\\n    // Page Header START\\r\\n    public set showPageHeader(value: boolean) {\\r\\n        setTimeout(() => {\\r\\n            this._showPageHeader = value;\\r\\n            // this.subject.next(value);\\r\\n        });\\r\\n    }\\r\\n    public get showPageHeader() {\\r\\n        return this._showPageHeader;\\r\\n    }\\r\\n    // Page Header END\\r\\n\\r\\n    public subject = new Subject<boolean>();\\r\\n    public showPageHeader$ = new Subject<boolean>();\\r\\n\\r\\n    // Page Header\\r\\n    private _showPageHeader = false;\\r\\n\\r\\n    // Title\\r\\n    // private _showTitle = false;\\r\\n    private _pageTitle = \'\';\\r\\n    private _pageTitleParams = {};\\r\\n\\r\\n    // Sub Title\\r\\n    // private _showSubTitle = false;\\r\\n    private _pageSubTitle = \'\';\\r\\n    private _pageSubTitleParams = {};\\r\\n\\r\\n    // Back Button / Breadcrumbs\\r\\n    private _backToButtonText = \'\';\\r\\n    private _showBackButton = false;\\r\\n    private _showBreadcrumb = false;\\r\\n\\r\\n    // Action Buttons\\r\\n    private readonly _defaultMaxActionButtons = 2;\\r\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\r\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\r\\n    private _actionButtons: Array<IUiActionButton> = [];\\r\\n\\r\\n    // Pills / Status / SubNav/ Tabsets\\r\\n    private _pills: Array<IUiPageHeaderItem> = [];\\r\\n    private _status: Array<IUiPageHeaderItem> = [];\\r\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\r\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\r\\n\\r\\n    // Dropdowns\\r\\n    private _showDropdowns = false;\\r\\n    private _dropdowns: Array<any> = [];\\r\\n\\r\\n    // Sub Nav\\r\\n    private _showSubNav = false;\\r\\n\\r\\n    // Tabsets\\r\\n    private _showTabSets = false;\\r\\n\\r\\n    // Feedback\\r\\n    private _feedbackText = \'\';\\r\\n    private _feedbackTextParams = {};\\r\\n    private _feedbackIcon = \'\';\\r\\n    private _feedbackIconColor = \'\';\\r\\n\\r\\n    constructor(private _router: Router) {\\r\\n        // Hide Page Header on every navigation page out.\\r\\n        this._router.events.subscribe((evt) => {\\r\\n            if (evt instanceof NavigationEnd) {\\r\\n                if (this.hideOnRoute === true) {\\r\\n                    this.showPageHeader = false;\\r\\n                    this.subNavs = [];\\r\\n                    this.showSubNav = false;\\r\\n                }\\r\\n\\r\\n                // const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\r\\n                // if(!keepTabsets){\\r\\n                //     this.tabsets = [];\\r\\n                //     this.showTabsets = false;\\r\\n                // }\\r\\n\\r\\n                if (!this.keepActionButtonsOnRoute) {\\r\\n                    this.actionButtons = [];\\r\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\r\\n                }\\r\\n\\r\\n                this.pills = [];\\r\\n                this.dropdowns = [];\\r\\n                this.pageSubTitle = \'\';\\r\\n                this.backToButtonText = \'\';\\r\\n                this.backButtonText = \'COMMON.BACK\';\\r\\n                this.showBackButton = false;\\r\\n                this.feedbackText = \'\';\\r\\n                this.feedbackIcon = \'\';\\r\\n                this.feedbackIconColor = \'\';\\r\\n            }\\r\\n            if (evt instanceof NavigationStart) {\\r\\n                this.breadcrumbString = evt.url;\\r\\n                // this._layoutService.showContainer = true;\\r\\n                // this.routeSegments = evt.url.split(\'/\');\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":297,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"pageTitle":{"name":"pageTitle","setSignature":{"name":"pageTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":30,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitle","type":"","returnType":"","line":35}},"pageTitleParams":{"name":"pageTitleParams","setSignature":{"name":"pageTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitleParams","type":"","returnType":"","line":44}},"pageSubTitle":{"name":"pageSubTitle","setSignature":{"name":"pageSubTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":49,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitle","type":"","returnType":"","line":54}},"pageSubTitleParams":{"name":"pageSubTitleParams","setSignature":{"name":"pageSubTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":58,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitleParams","type":"","returnType":"","line":63}},"backToButtonText":{"name":"backToButtonText","setSignature":{"name":"backToButtonText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":69,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"backToButtonText","type":"","returnType":"","line":74}},"showBackButton":{"name":"showBackButton","setSignature":{"name":"showBackButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":78,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBackButton","type":"","returnType":"","line":83}},"showBreadcrumb":{"name":"showBreadcrumb","setSignature":{"name":"showBreadcrumb","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":89,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBreadcrumb","type":"","returnType":"","line":94}},"status":{"name":"status","setSignature":{"name":"status","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":99,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"status","type":"","returnType":"","line":102}},"pills":{"name":"pills","setSignature":{"name":"pills","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":107,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pills","type":"","returnType":"","line":110}},"dropdowns":{"name":"dropdowns","setSignature":{"name":"dropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":115,"jsdoctags":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"dropdowns","type":"","returnType":"","line":120}},"showDropdowns":{"name":"showDropdowns","setSignature":{"name":"showDropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":124,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showDropdowns","type":"","returnType":"","line":129}},"showSubNav":{"name":"showSubNav","setSignature":{"name":"showSubNav","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":135,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showSubNav","type":"","returnType":"","line":140}},"subNavs":{"name":"subNavs","setSignature":{"name":"subNavs","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":144,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subNavs","type":"","returnType":"","line":149}},"showTabsets":{"name":"showTabsets","setSignature":{"name":"showTabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":154,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showTabsets","type":"","returnType":"","line":159}},"tabsets":{"name":"tabsets","setSignature":{"name":"tabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":163,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"tabsets","type":"","returnType":"","line":166}},"feedbackText":{"name":"feedbackText","setSignature":{"name":"feedbackText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":171,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackText","type":"","returnType":"","line":176}},"feedbackTextParams":{"name":"feedbackTextParams","setSignature":{"name":"feedbackTextParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":181,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackTextParams","type":"","returnType":"","line":186}},"feedbackIcon":{"name":"feedbackIcon","setSignature":{"name":"feedbackIcon","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":191,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIcon","type":"","returnType":"","line":196}},"feedbackIconColor":{"name":"feedbackIconColor","setSignature":{"name":"feedbackIconColor","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":201,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIconColor","type":"","returnType":"","line":206}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":211,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":214}},"actionDropdowns":{"name":"actionDropdowns","getSignature":{"name":"actionDropdowns","type":"","returnType":"","line":218}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":222,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":233}},"showPageHeader":{"name":"showPageHeader","setSignature":{"name":"showPageHeader","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":239,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageHeader","type":"","returnType":"","line":245}}},"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageHeaderService-1"},{"name":"UiPasswordlessLoginService","id":"injectable-UiPasswordlessLoginService-f1e014e653322088bfb0d41dc55fd25327eb86d3d994fc3fffd6ff9adbc2a37788429c77759cf103d3fb564245743162dd6932f6c1ad9299d000fdace3b419e8","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","properties":[{"name":"_cookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":46,"modifierKind":[121]},{"name":"_requestOtpTokenSlug_auth0","defaultValue":"\'authentication/v2/requestotp\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[121,144]},{"name":"_requestOtpTokenSlug_cognito","defaultValue":"\'authentication/signin\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41,"modifierKind":[121,144]},{"name":"_verifyOtpTokenSlug_auth0","defaultValue":"\'authentication/v2/verifyotp\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[121,144]},{"name":"_verifyOtpTokenSlug_cognito","defaultValue":"\'authentication/verifytoken\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42,"modifierKind":[121,144]},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[123]}],"methods":[{"name":"clearUserCredentials","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":310,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getCookieDomain","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":143,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSignInErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTokenEmail","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":316,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTokenExpirationDate","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n\\n","description":"<p>Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":11942,"end":11947,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"token"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":11936,"end":11941,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>jwt</p>\\n"},{"tagName":{"pos":11961,"end":11968,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>milliseconds</p>\\n"}]},{"name":"getTokenPayload","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":340,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getVerifyTokenErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initAssentSession","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"loadUserDetails","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":278,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setSessionKeyCookie","args":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"email","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":214,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setTokenCookie","args":[{"name":"response","type":"IUiOtpConfirmationResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"response","type":"IUiOtpConfirmationResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"signIn","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"language","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"language","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"throwInvalidTokenError","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"verifyToken","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"otp","type":"string","deprecated":false,"deprecationMessage":""},{"name":"language","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"otp","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"language","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders } from \'@angular/common/http\';\\r\\nimport { Injectable } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\n// Rxjs\\r\\nimport { catchError, map, tap } from \'rxjs/operators\';\\r\\nimport { throwError } from \'rxjs\';\\r\\n// Lib\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n// Ngx\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { UiUserService } from \'@lib/services/user\';\\r\\n\\r\\n// Ngb\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\r\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\r\\n\\r\\ndeclare const Assent: IUiAciSharedSession;\\r\\n\\r\\nexport interface IUiPasswordLessSignInResponse {\\r\\n    sessionKey: string;\\r\\n    asmUri: string;\\r\\n}\\r\\n\\r\\nexport interface IUiOtpConfirmationResponse {\\r\\n    session: {\\r\\n        token: string;\\r\\n        sessionKey: string;\\r\\n        consentGiven: boolean;\\r\\n        uniqueSessionGuid: string;\\r\\n    };\\r\\n    sessionKey: string;\\r\\n}\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiPasswordlessLoginService {\\r\\n    public sessionKey: string;\\r\\n    public token: string;\\r\\n    private readonly _requestOtpTokenSlug_cognito = \'authentication/signin\';\\r\\n    private readonly _verifyOtpTokenSlug_cognito = \'authentication/verifytoken\';\\r\\n    private readonly _requestOtpTokenSlug_auth0 = \'authentication/v2/requestotp\';\\r\\n    private readonly _verifyOtpTokenSlug_auth0 = \'authentication/v2/verifyotp\';\\r\\n\\r\\n    private _cookieDomain: string;\\r\\n\\r\\n    constructor(\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _httpClient: HttpClient,\\r\\n        private _cookieService: CookieService,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _userService: UiUserService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _router: Router,\\r\\n        private _translate: TranslateService\\r\\n    ) {}\\r\\n\\r\\n    // call the API sign in method using an email address\\r\\n    public signIn(email: string, language: string) {\\r\\n        let authResponse: IUiPasswordLessSignInResponse;\\r\\n        const endpoint =\\r\\n            `${this._configurationService.appConfig.iamApi}` +\\r\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                ? this._requestOtpTokenSlug_cognito\\r\\n                : this._requestOtpTokenSlug_auth0);\\r\\n        const lang3letter = AcpSupportedLanguesLongCodeEnum[language];\\r\\n\\r\\n        const body = {\\r\\n            email,\\r\\n            language: lang3letter,\\r\\n        };\\r\\n\\r\\n        return this._httpClient.post(`${endpoint}`, body, { observe: \'response\' }).pipe(\\r\\n            map((response) => {\\r\\n                // not party service validation failed\\r\\n                if (response.status !== 248) {\\r\\n                    if (response.body) {\\r\\n                        if (response.status === 220) {\\r\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\r\\n                            window.location.href = authResponse.asmUri;\\r\\n                        } else {\\r\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\r\\n                            this.setSessionKeyCookie(authResponse.sessionKey, email);\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                // else show no errors and proceed to otp entry screen\\r\\n                return response.status;\\r\\n            }),\\r\\n            catchError((error) => {\\r\\n                let errorMsg: string;\\r\\n                if (error.error instanceof ErrorEvent) {\\r\\n                    errorMsg = `Error: ${error.error.message}`;\\r\\n                } else {\\r\\n                    errorMsg = this.getSignInErrorMessage(error);\\r\\n                }\\r\\n\\r\\n                return throwError(() => new Error(errorMsg));\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // call the API verify token method\\r\\n    public verifyToken(email: string, sessionKey: string, otp: string, language: string) {\\r\\n        const endpoint =\\r\\n            `${this._configurationService.appConfig.iamApi}` +\\r\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                ? this._verifyOtpTokenSlug_cognito\\r\\n                : this._verifyOtpTokenSlug_auth0);\\r\\n\\r\\n        language = AcpSupportedLanguesLongCodeEnum[language];\\r\\n\\r\\n        const body = {\\r\\n            email,\\r\\n            sessionKey,\\r\\n            otp,\\r\\n            language,\\r\\n        };\\r\\n\\r\\n        return this._httpClient.post(`${endpoint}`, body).pipe(\\r\\n            tap((data: IUiOtpConfirmationResponse) => {\\r\\n                if (data.session) {\\r\\n                    this.setTokenCookie(data);\\r\\n                } else if (data.sessionKey) {\\r\\n                    this.setSessionKeyCookie(data.sessionKey, email);\\r\\n                    this.throwInvalidTokenError();\\r\\n                }\\r\\n            }),\\r\\n            catchError((error) => {\\r\\n                let errorMsg: string;\\r\\n                if (error.error instanceof ErrorEvent) {\\r\\n                    errorMsg = `Error: ${error.error.message}`;\\r\\n                } else {\\r\\n                    errorMsg = this.getVerifyTokenErrorMessage(error);\\r\\n                }\\r\\n\\r\\n                return throwError(() => new Error(errorMsg));\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getCookieDomain(): string {\\r\\n        let domain = this._configService?.appConfig?.coreAuthCookieDomain;\\r\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\r\\n            domain = \'localhost\';\\r\\n        }\\r\\n\\r\\n        return domain;\\r\\n    }\\r\\n\\r\\n    private throwInvalidTokenError() {\\r\\n        let errorMsg: string;\\r\\n        this._translate.get(\'AUTHENTICATION.ERRORS.INVALID_CODE\').subscribe((res: string) => {\\r\\n            errorMsg = res;\\r\\n        });\\r\\n        throwError(() => new Error(errorMsg));\\r\\n    }\\r\\n\\r\\n    private getVerifyTokenErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // Party Service Validation failed\\r\\n            case 412: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            // Expired OTP\\r\\n            case 417: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            // Session expired\\r\\n            case 419: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private getSignInErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // Invalid OTP\\r\\n            case 248: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n                break;\\r\\n            }\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private setSessionKeyCookie(sessionKey: string, email: string) {\\r\\n        const expirationDate: Date = new Date();\\r\\n        expirationDate.setHours(expirationDate.getHours() + 3);\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        this.sessionKey = sessionKey;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.emailCookieId,\\r\\n            email,\\r\\n            null,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // called after use verifies the OTP\\r\\n    private setTokenCookie(response: IUiOtpConfirmationResponse) {\\r\\n        const expirationDate = new Date(this.getTokenExpirationDate(response.session.token));\\r\\n        this._cookieDomain = this.getCookieDomain();\\r\\n\\r\\n        this.token = response.session.token;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.authCookieId,\\r\\n            response.session.token,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this.sessionKey = response.session.sessionKey;\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.sessionCookieId,\\r\\n            response.session.sessionKey,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this._cookieService.set(\\r\\n            this._configService.appConfig.uniqueSessionCookieId,\\r\\n            response.session.uniqueSessionGuid,\\r\\n            expirationDate,\\r\\n            \'/\',\\r\\n            this._cookieDomain,\\r\\n            this._configService.appConfig.secureCookie\\r\\n        );\\r\\n\\r\\n        this.loadUserDetails(response.session.token);\\r\\n\\r\\n        this.initAssentSession();\\r\\n    }\\r\\n\\r\\n    private loadUserDetails(token: string) {\\r\\n        const userEmail = this.getTokenEmail(token);\\r\\n        const tokenPayload = this.getTokenPayload(token);\\r\\n\\r\\n        this._userService.selectUser(userEmail, tokenPayload);\\r\\n    }\\r\\n\\r\\n    private initAssentSession() {\\r\\n        const options: IUiAciSessionOptions = {\\r\\n            cookieDomain: this._cookieDomain,\\r\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\r\\n            logoutOverride: () => {\\r\\n                this.clearUserCredentials();\\r\\n                this._modalService.dismissAll();\\r\\n                this._router.navigate([\'\']);\\r\\n            },\\r\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\r\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\r\\n            onExtendSession: () => {\\r\\n                return \'\';\\r\\n            },\\r\\n            sessionExpiryLogoutCookieRequired: true,\\r\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\r\\n            secureCookie: this._configService.appConfig.secureCookie,\\r\\n        };\\r\\n\\r\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\r\\n        if (document.cookie.match(cookiePattern)) {\\r\\n            Assent.session.initialize(options);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private clearUserCredentials() {\\r\\n        Assent.session.dispose();\\r\\n        this._cookieService.deleteAll(\'/\', this._cookieDomain);\\r\\n        this._userService.logout();\\r\\n    }\\r\\n\\r\\n    private getTokenEmail(token: string): string {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.sub) {\\r\\n            return \'\';\\r\\n        }\\r\\n\\r\\n        return data.sub;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\r\\n     *\\r\\n     * @param token jwt\\r\\n     * @returns milliseconds\\r\\n     */\\r\\n    private getTokenExpirationDate(token: string): number {\\r\\n        const data = this.getTokenPayload(token);\\r\\n        if (!data || !data.exp) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return data.exp * 1000;\\r\\n    }\\r\\n\\r\\n    private getTokenPayload(token: string): any {\\r\\n        if (!token) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const tokenParts = token.split(\'.\');\\r\\n        if (!tokenParts || tokenParts.length < 2) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            const data = JSON.parse(atob(tokenParts[1]));\\r\\n            return data;\\r\\n        } catch (error) {\\r\\n            return;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiPendoService","id":"injectable-UiPendoService-88489d2efa237067ec5494b3dfadbab9538cd4a133a7fbaa6f2a43400a427e3d0c3401f9acff1552e0e7faf3b9458477fdfc1bada846c4119cf3ecdb36d7691a","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","properties":[{"name":"_accountInfo","defaultValue":"{\\r\\n        id: null,\\r\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiPendoAccountInfo","optional":false,"description":"<p>The Pendo Account metadata object.\\nSubject to change.</p>\\n","line":36,"rawdescription":"\\n\\nThe Pendo Account metadata object.\\nSubject to change.\\n","modifierKind":[121,124]},{"name":"_isPendoInitialized","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Tracks whether the pendo.initialize() function has been called yet or not.\\nUsed to decide whether to call pendo.initalize(), or pendo.updateOptions()</p>\\n","line":17,"rawdescription":"\\n\\nTracks whether the pendo.initialize() function has been called yet or not.\\nUsed to decide whether to call pendo.initalize(), or pendo.updateOptions()\\n","modifierKind":[121,124]},{"name":"_visitorInfo","defaultValue":"{\\r\\n        id: \'\', // An empty string signifies an anonymous Pendo-generated ID\\r\\n        domain: null,\\r\\n        roles: null,\\r\\n        permissions: null,\\r\\n        environment: null,\\r\\n        email: null,\\r\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiPendoVisitorInfo","optional":false,"description":"<p>The Pendo Visitor metadata object.\\nSubject to change.</p>\\n","line":23,"rawdescription":"\\n\\nThe Pendo Visitor metadata object.\\nSubject to change.\\n","modifierKind":[121,124]},{"name":"pendoApiKey","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Pendo API key.</p>\\n","line":43,"rawdescription":"\\n\\nPendo API key.\\n","modifierKind":[123]}],"methods":[{"name":"anonymizeVisitorInfo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAnonymizes the Visitor and Account object after user has logged out.\\nClears the user\'s Pendo session.\\nResets all of the user\'s Pendo metadata fields (except for environment).\\n","description":"<p>Anonymizes the Visitor and Account object after user has logged out.\\nClears the user&#39;s Pendo session.\\nResets all of the user&#39;s Pendo metadata fields (except for environment).</p>\\n","modifierKind":[123]},{"name":"getAccountInfo","args":[],"optional":false,"returnType":"IUiPendoAccountInfo","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getVisitorInfo","args":[],"optional":false,"returnType":"IUiPendoVisitorInfo","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializePendo","args":[{"name":"userName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"pendoKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"environment","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMethod initialized Pendo\\n","description":"<p>Method initialized Pendo</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"userName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pendoKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"environment","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initVisitorInfo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInitializes Pendo metadata flow.\\nUsed to track Login Page metrics (before the user is authenticated).\\n","description":"<p>Initializes Pendo metadata flow.\\nUsed to track Login Page metrics (before the user is authenticated).</p>\\n","modifierKind":[123]},{"name":"preliminaryPendoInit","args":[{"name":"pendoKey","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInitialize Pendo prior to authentication\\n\\n","description":"<p>Initialize Pendo prior to authentication</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6193,"end":6201,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"pendoKey"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":6187,"end":6192,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The Pendo key</p>\\n"}]},{"name":"setAuthenticatedVisitorInfo","args":[{"name":"authObj","type":"IUiUser","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the user\'s Visitor Info & Account Info after authentication.\\nIn particular, a new Pendo ID is assigned to the user (i.e the user\'s email, hashed if not an internal user).\\n\\n","description":"<p>Updates the user&#39;s Visitor Info &amp; Account Info after authentication.\\nIn particular, a new Pendo ID is assigned to the user (i.e the user&#39;s email, hashed if not an internal user).</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3010,"end":3017,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"authObj"},"type":"IUiUser","deprecated":false,"deprecationMessage":"","tagName":{"pos":3004,"end":3009,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The user object after succesful authentication</p>\\n"}]},{"name":"setAuthenticatedVisitorPermissions","args":[{"name":"permObj","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the user\'s Visitor Info after permissions have been established.\\n\\n","description":"<p>Updates the user&#39;s Visitor Info after permissions have been established.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4152,"end":4159,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permObj"},"type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"pos":4146,"end":4151,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The set of permissions the user has</p>\\n"}]},{"name":"setUserInitialFields","args":[{"name":"userName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n Updates the user Id and email address\\n\\n","description":"<p> Updates the user Id and email address</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2066,"end":2074,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"userName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2060,"end":2065,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>user name</p>\\n"}]},{"name":"setVisitorEnvironment","args":[{"name":"environment","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the static Visitor object with the user\'s environment.\\n\\n","description":"<p>Updates the static Visitor object with the user&#39;s environment.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1813,"end":1824,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"environment"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1807,"end":1812,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The user&#39;s environment</p>\\n"}]},{"name":"trackEvent","args":[{"name":"eventName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTrack Pendo Events\\n\\n","description":"<p>Track Pendo Events</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6486,"end":6495,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"eventName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":6480,"end":6485,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The unique event name to track</p>\\n"},{"name":{"pos":6542,"end":6546,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"object","deprecated":false,"deprecationMessage":"","tagName":{"pos":6536,"end":6541,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The data to track</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n// Interfaces\\r\\nimport { IUiUser, IUiPermissions } from \'@lib/services/user\';\\r\\nimport { IUiPendoVisitorInfo, IUiPendoAccountInfo } from \'./pendo.interface\';\\r\\n\\r\\n// @ts-ignore\\r\\ndeclare const pendo: any;\\r\\ndeclare const pendoFunc: any;\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiPendoService {\\r\\n    /**\\r\\n     * Tracks whether the pendo.initialize() function has been called yet or not.\\r\\n     * Used to decide whether to call pendo.initalize(), or pendo.updateOptions()\\r\\n     */\\r\\n    private static _isPendoInitialized = false;\\r\\n\\r\\n    /**\\r\\n     * The Pendo Visitor metadata object.\\r\\n     * Subject to change.\\r\\n     */\\r\\n    private static _visitorInfo: IUiPendoVisitorInfo = {\\r\\n        id: \'\', // An empty string signifies an anonymous Pendo-generated ID\\r\\n        domain: null,\\r\\n        roles: null,\\r\\n        permissions: null,\\r\\n        environment: null,\\r\\n        email: null,\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * The Pendo Account metadata object.\\r\\n     * Subject to change.\\r\\n     */\\r\\n    private static _accountInfo: IUiPendoAccountInfo = {\\r\\n        id: null,\\r\\n    };\\r\\n\\r\\n    /**\\r\\n     * Pendo API key.\\r\\n     * */\\r\\n    public pendoApiKey = \'\';\\r\\n\\r\\n    /**\\r\\n     * Initializes Pendo metadata flow.\\r\\n     * Used to track Login Page metrics (before the user is authenticated).\\r\\n     */\\r\\n    public initVisitorInfo() {\\r\\n        try {\\r\\n            if (!UiPendoService._isPendoInitialized) {\\r\\n                pendo.initialize({ visitor: UiPendoService._visitorInfo });\\r\\n                UiPendoService._isPendoInitialized = true;\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error while initializing Pendo, \' + error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the static Visitor object with the user\'s environment.\\r\\n     *\\r\\n     * @param environment The user\'s environment\\r\\n     */\\r\\n    public setVisitorEnvironment(environment: string) {\\r\\n        UiPendoService._visitorInfo.environment = environment;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     *  Updates the user Id and email address\\r\\n     *\\r\\n     * @param userName user name\\r\\n     */\\r\\n    public setUserInitialFields(userName: string) {\\r\\n        const domain = userName.split(\'@\').pop();\\r\\n\\r\\n        UiPendoService._accountInfo.id = domain;\\r\\n        UiPendoService._visitorInfo.id = userName;\\r\\n        UiPendoService._visitorInfo.email = userName;\\r\\n        UiPendoService._visitorInfo.domain = domain;\\r\\n\\r\\n        if (UiPendoService._isPendoInitialized) {\\r\\n            pendo.updateOptions({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\r\\n        } else {\\r\\n            pendo.initialize({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\r\\n            UiPendoService._isPendoInitialized = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the user\'s Visitor Info & Account Info after authentication.\\r\\n     * In particular, a new Pendo ID is assigned to the user (i.e the user\'s email, hashed if not an internal user).\\r\\n     *\\r\\n     * @param authObj The user object after succesful authentication\\r\\n     */\\r\\n    public setAuthenticatedVisitorInfo(authObj: IUiUser) {\\r\\n        try {\\r\\n            const domain = authObj.email.split(\'@\').pop();\\r\\n\\r\\n            UiPendoService._accountInfo.id = domain;\\r\\n            UiPendoService._visitorInfo.id = authObj.email;\\r\\n            UiPendoService._visitorInfo.email = authObj.email;\\r\\n            UiPendoService._visitorInfo.roles = authObj.roles.map((role) => role.name);\\r\\n            UiPendoService._visitorInfo.domain = domain;\\r\\n\\r\\n            if (UiPendoService._isPendoInitialized) {\\r\\n                pendo.updateOptions({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\r\\n            } else {\\r\\n                pendo.initialize({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\r\\n                UiPendoService._isPendoInitialized = true;\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error while updating Pendo, \' + error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the user\'s Visitor Info after permissions have been established.\\r\\n     *\\r\\n     * @param permObj The set of permissions the user has\\r\\n     */\\r\\n    public setAuthenticatedVisitorPermissions(permObj: IUiPermissions) {\\r\\n        try {\\r\\n            const permissions = Object.keys(permObj).filter((key) => permObj[key]);\\r\\n            UiPendoService._visitorInfo.permissions = permissions;\\r\\n\\r\\n            if (UiPendoService._isPendoInitialized) {\\r\\n                pendo.updateOptions({ visitor: UiPendoService._visitorInfo });\\r\\n            }\\r\\n        } catch (error) {\\r\\n            console.error(\'Error while updating Pendo, \' + error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Anonymizes the Visitor and Account object after user has logged out.\\r\\n     * Clears the user\'s Pendo session.\\r\\n     * Resets all of the user\'s Pendo metadata fields (except for environment).\\r\\n     */\\r\\n    public anonymizeVisitorInfo() {\\r\\n        try {\\r\\n            UiPendoService._accountInfo.id = null;\\r\\n            UiPendoService._visitorInfo.id = \'\';\\r\\n            UiPendoService._visitorInfo.permissions = null;\\r\\n            UiPendoService._visitorInfo.roles = null;\\r\\n            UiPendoService._visitorInfo.domain = null;\\r\\n\\r\\n            pendo.clearSession();\\r\\n            pendo.updateOptions({ visitor: UiPendoService._visitorInfo });\\r\\n        } catch (error) {\\r\\n            console.error(\'Error while updating Pendo, \' + error);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public getVisitorInfo() {\\r\\n        return UiPendoService._visitorInfo;\\r\\n    }\\r\\n\\r\\n    public getAccountInfo() {\\r\\n        return UiPendoService._accountInfo;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Method initialized Pendo\\r\\n     */\\r\\n    public initializePendo(userName: string, pendoKey: string, environment: string) {\\r\\n        if (!UiPendoService._isPendoInitialized) {\\r\\n            this.pendoApiKey = pendoKey;\\r\\n            pendoFunc.init([pendoKey]);\\r\\n            pendoFunc.pendoMain();\\r\\n        }\\r\\n        this.setVisitorEnvironment(environment); // Set the environment metadata\\r\\n        this.setUserInitialFields(userName);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Initialize Pendo prior to authentication\\r\\n     *\\r\\n     * @param pendoKey The Pendo key\\r\\n     */\\r\\n    public preliminaryPendoInit(pendoKey: string) {\\r\\n        if (!UiPendoService._isPendoInitialized) {\\r\\n            pendoFunc.init([pendoKey]);\\r\\n            pendoFunc.pendoMain();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Track Pendo Events\\r\\n     *\\r\\n     * @param eventName The unique event name to track\\r\\n     * @param data The data to track\\r\\n     */\\r\\n    public trackEvent(eventName: string, data: object) {\\r\\n        try {\\r\\n            pendo.track(eventName, data);\\r\\n        } catch (error) {\\r\\n            console.error(\'Error in pendoTrackEvent, \', error);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","type":"injectable"},{"name":"UiPersonService","id":"injectable-UiPersonService-991f300588c604f9cd4dc9f2339af0b99fbfd77d99e9ffa3b14076ed392e15baf10770f9b84001d4b7fb5609e8cb82e30221629cbbae62e83ff46bb1e5527ade","file":"libs/ui/src/lib/modules/user-auth-manager/services/person.service.ts","properties":[{"name":"_apiUrl","defaultValue":"\'api/persons\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[121,144]},{"name":"_contactsApiUrl","defaultValue":"\'api/contacts\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[121,144]},{"name":"_contactsEndpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[121]},{"name":"_endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17,"modifierKind":[121]}],"methods":[{"name":"getLoggedUserPersonDetails","args":[],"optional":false,"returnType":"Observable<IUiPersonDetails>","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets Person details for the logged user\\n\\n","description":"<p>Gets Person details for the logged user</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":1139,"end":1146,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"getPersonContactRelationships","args":[{"name":"personGuid","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IUiContactRelationship[]>","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets contact relationships assigned to the person\\n\\n","description":"<p>Gets contact relationships assigned to the person</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1685,"end":1695,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"personGuid"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1679,"end":1684,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1705,"end":1712,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"updateContactRegulations","args":[{"name":"contactGuid","type":"string","deprecated":false,"deprecationMessage":""},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates regulations for a contact role\\n\\n","description":"<p>Updates regulations for a contact role</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2137,"end":2148,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"contactGuid"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2131,"end":2136,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":2164,"end":2175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"regulations"},"type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"pos":2158,"end":2163,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":2185,"end":2192,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"updatePersonDetails","args":[{"name":"person","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates person details\\n\\n","description":"<p>Updates person details</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1381,"end":1387,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"person"},"type":"IUiPersonDetails","deprecated":false,"deprecationMessage":"","tagName":{"pos":1375,"end":1380,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1397,"end":1404,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\n// Rxjs\\r\\nimport { Observable, throwError } from \'rxjs\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n// Interfaces\\r\\nimport { IUiContactRelationship, IUiPersonDetails, IUiRegulationShort, IUiRegulationsTree } from \'../interfaces\';\\r\\n// Enums\\r\\nimport { AcpDataSourceEnum } from \'@app/modules/shared/add-edit-company/enums\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiPersonService {\\r\\n    private _endpoint: string;\\r\\n    private _contactsEndpoint: string;\\r\\n    private readonly _apiUrl = \'api/persons\';\\r\\n    private readonly _contactsApiUrl = \'api/contacts\';\\r\\n\\r\\n    constructor(private _configurationService: UiConfigurationService, private _httpClient: HttpClient) {\\r\\n        this._endpoint = `${this._configurationService.appConfig.partyApi}${this._apiUrl}`;\\r\\n        this._contactsEndpoint = `${this._configurationService.appConfig.partyApi}${this._contactsApiUrl}`;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets Person details for the logged user\\r\\n     *\\r\\n     * @returns\\r\\n     */\\r\\n    public getLoggedUserPersonDetails(): Observable<IUiPersonDetails> {\\r\\n        return this._httpClient.get<IUiPersonDetails>(`${this._endpoint}/me`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates person details\\r\\n     *\\r\\n     * @param person\\r\\n     * @returns\\r\\n     */\\r\\n    public updatePersonDetails(person: IUiPersonDetails): Observable<void> {\\r\\n        return this._httpClient.put<void>(`${this._endpoint}/${person.personGuid}`, person);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets contact relationships assigned to the person\\r\\n     *\\r\\n     * @param personGuid\\r\\n     * @returns\\r\\n     */\\r\\n    public getPersonContactRelationships(personGuid: string): Observable<IUiContactRelationship[]> {\\r\\n        if (!personGuid) {\\r\\n            return throwError(() => new Error(\'Missing person guid\'));\\r\\n        }\\r\\n\\r\\n        return this._httpClient.get<IUiContactRelationship[]>(`${this._endpoint}/${personGuid}/contact-role`);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates regulations for a contact role\\r\\n     *\\r\\n     * @param contactGuid\\r\\n     * @param regulations\\r\\n     * @returns\\r\\n     */\\r\\n    public updateContactRegulations(contactGuid: string, regulations: IUiRegulationShort[] = []): Observable<void> {\\r\\n        // Hint: dataSourceId is hardcoded to 2 (supplier) as per the requirements\\r\\n        return this._httpClient.put<void>(`${this._contactsEndpoint}/${contactGuid}/regulations`, {\\r\\n            contactRegulations: regulations,\\r\\n            dataSourceId: AcpDataSourceEnum.supplier,\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiRegulationService","id":"injectable-UiRegulationService-8c3bb27a2ca2c8c72d2027689a49ba3fe38ae8b9a417153ce6bf38719f3d3a44158ec3e797460d97b10d6952cbf1265560a1c441a562a6ac5c81298f9146c7a7","file":"libs/ui/src/lib/modules/user-auth-manager/services/regulation.service.ts","properties":[{"name":"_apiUrl","defaultValue":"\'api/regulations\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17,"modifierKind":[121,144]},{"name":"_endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[121]}],"methods":[{"name":"generateRegulationsTreeNode","args":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiRegulationLeaf","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateUiTreeNode","args":[{"name":"node","type":"IUiRegulationLeaf","deprecated":false,"deprecationMessage":""},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":""},{"name":"parentChecked","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"IUiTreeNode","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"node","type":"IUiRegulationLeaf","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"parentChecked","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"getIndeterminateState","args":[{"name":"children","type":"IUiTreeNode[]","deprecated":false,"deprecationMessage":""},{"name":"nodeChecked","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"children","type":"IUiTreeNode[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"nodeChecked","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getRegulationsTree","args":[{"name":"includeStandalone","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"Observable<IUiRegulationsTree>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets the regulations tree\\n\\n","description":"<p>Gets the regulations tree</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":900,"end":917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"includeStandalone"},"type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"pos":894,"end":899,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>include regulations that are not assigned to any program</p>\\n"},{"tagName":{"pos":984,"end":991,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"getSelectedRegulations","args":[{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiRegulationShort[]","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns the selected regulations from the tree in array\\nWhen a parent is selected, it returns only the parent without children\\n\\n","description":"<p>Returns the selected regulations from the tree in array\\nWhen a parent is selected, it returns only the parent without children</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2031,"end":2035,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"tree"},"type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"pos":2025,"end":2030,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>that contains selected and unselected regulations</p>\\n"},{"tagName":{"pos":2095,"end":2102,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"getSelectedRegulationsFromTree","args":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiRegulationShort[]","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mapRegulationsToTree","args":[{"name":"regulationsTree","type":"IUiRegulationsTree","deprecated":false,"deprecationMessage":""},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"IUiTreeData","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMaps the regulations to the tree<IUiTreeData>\\n\\n","description":"<p>Maps the regulations to the tree<IUiTreeData></p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1425,"end":1440,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"regulationsTree"},"type":"IUiRegulationsTree","deprecated":false,"deprecationMessage":"","tagName":{"pos":1419,"end":1424,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>that contains all the regulations</p>\\n"},{"name":{"pos":1490,"end":1501,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"regulations"},"type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"pos":1484,"end":1489,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>assigned to the contact-role</p>\\n"},{"tagName":{"pos":1540,"end":1547,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient, HttpParams } from \'@angular/common/http\';\\r\\n// Rxjs\\r\\nimport { Observable } from \'rxjs\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n// Interfaces\\r\\nimport { IUiRegulationLeaf, IUiRegulationShort, IUiRegulationsTree } from \'../interfaces\';\\r\\nimport { IUiTreeData, IUiTreeNode } from \'../components/tree-view/interfaces\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiRegulationService {\\r\\n    private _endpoint: string;\\r\\n    private readonly _apiUrl = \'api/regulations\';\\r\\n\\r\\n    constructor(private _configurationService: UiConfigurationService, private _httpClient: HttpClient) {\\r\\n        this._endpoint = `${this._configurationService.appConfig.partyApi}${this._apiUrl}`;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets the regulations tree\\r\\n     *\\r\\n     * @param includeStandalone include regulations that are not assigned to any program\\r\\n     * @returns\\r\\n     */\\r\\n    public getRegulationsTree(includeStandalone = false): Observable<IUiRegulationsTree> {\\r\\n        let params = new HttpParams();\\r\\n        params = includeStandalone ? params.set(\'includeStandalone\', includeStandalone) : params;\\r\\n\\r\\n        return this._httpClient.get<IUiRegulationsTree>(`${this._endpoint}/tree`, { params });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Maps the regulations to the tree<IUiTreeData>\\r\\n     *\\r\\n     * @param regulationsTree that contains all the regulations\\r\\n     * @param regulations assigned to the contact-role\\r\\n     * @returns\\r\\n     */\\r\\n    public mapRegulationsToTree(regulationsTree: IUiRegulationsTree, regulations: IUiRegulationShort[] = []): IUiTreeData {\\r\\n        const convertedTree: IUiTreeData = {\\r\\n            root: this.generateUiTreeNode(regulationsTree, regulations),\\r\\n        };\\r\\n\\r\\n        return convertedTree;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns the selected regulations from the tree in array\\r\\n     * When a parent is selected, it returns only the parent without children\\r\\n     *\\r\\n     * @param tree that contains selected and unselected regulations\\r\\n     * @returns\\r\\n     */\\r\\n    public getSelectedRegulations(tree: IUiTreeData): IUiRegulationShort[] {\\r\\n        return this.getSelectedRegulationsFromTree(tree.root);\\r\\n    }\\r\\n\\r\\n    private generateUiTreeNode(node: IUiRegulationLeaf, regulations: IUiRegulationShort[], parentChecked = false): IUiTreeNode {\\r\\n        const convertedNode: IUiTreeNode = {\\r\\n            id: node.regulation.regulationGuid,\\r\\n            label: node.regulation.regulationName,\\r\\n            checked: parentChecked || regulations.some((reg) => reg.regulationGuid === node.regulation.regulationGuid),\\r\\n            data: node.regulation,\\r\\n            children: [],\\r\\n        };\\r\\n\\r\\n        if (node.children) {\\r\\n            convertedNode.children = node.children.map((child) => this.generateUiTreeNode(child, regulations, convertedNode.checked));\\r\\n\\r\\n            convertedNode.indeterminate = this.getIndeterminateState(convertedNode.children, convertedNode.checked);\\r\\n        }\\r\\n\\r\\n        return convertedNode;\\r\\n    }\\r\\n\\r\\n    private getIndeterminateState(children: IUiTreeNode[], nodeChecked: boolean): boolean {\\r\\n        const hasIndeterminateChild = children.some((child: IUiTreeNode) => child.indeterminate === true);\\r\\n\\r\\n        return hasIndeterminateChild || !children.every((child: IUiTreeNode) => !!child.checked === nodeChecked);\\r\\n    }\\r\\n\\r\\n    private getSelectedRegulationsFromTree(node: IUiTreeNode): IUiRegulationShort[] {\\r\\n        if (!node) {\\r\\n            return [];\\r\\n        }\\r\\n\\r\\n        let selectedRegulations: IUiRegulationShort[] = [];\\r\\n        if (node.checked) {\\r\\n            selectedRegulations.push(node.data);\\r\\n        }\\r\\n\\r\\n        if (!node.checked && node.children) {\\r\\n            for (const child of node.children) {\\r\\n                const childSelectedRegulations = this.getSelectedRegulationsFromTree(child);\\r\\n                selectedRegulations = selectedRegulations.concat(childSelectedRegulations);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return selectedRegulations;\\r\\n    }\\r\\n\\r\\n    private generateRegulationsTreeNode(node: IUiTreeNode): IUiRegulationLeaf {\\r\\n        if (!(node.checked || node.indeterminate)) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const convertedNode: IUiRegulationLeaf = {\\r\\n            regulation: node.data,\\r\\n            selected: node.checked,\\r\\n        };\\r\\n\\r\\n        if (node.children) {\\r\\n            const selectedChildren = node.children.map((child) => this.generateRegulationsTreeNode(child)).filter((child) => child);\\r\\n            if (selectedChildren?.length) {\\r\\n                convertedNode.children = selectedChildren;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return convertedNode;\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiRemoteCommunicationService","id":"injectable-UiRemoteCommunicationService-8485738414fc2191d82f12b2aedc71497e4780e5c4dfb5b2ae0423bb4f0f24c0204dd8316c9e10558d9ce46f3f037991fd9582f51cb8a3001924520f49061562","file":"libs/ui/src/lib/services/communication/remote-communication/remote-communication.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiRemoteCommunicationService {\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiSearchService","id":"injectable-UiSearchService-ddcd712808434a3ffdeb4130313b1e18ba73082383f8b3d440cab308b937e0e2781b67e366b920224fad7512751b7850cfa17479ede5fb037709bca440b31db0","file":"libs/ui/src/lib/modules/global-search/services/global-search.service.ts","properties":[{"name":"_apiUrl","defaultValue":"\'api/company-search\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[121,144]},{"name":"_endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[121]},{"name":"_focusGlobalSearch$","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<void>","optional":false,"description":"","line":17,"modifierKind":[121]},{"name":"_minSearchSymbols","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":20,"modifierKind":[121,144]},{"name":"_searchTerm$","defaultValue":"new BehaviorSubject(\'\')","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<string>","optional":false,"description":"","line":16,"modifierKind":[121]}],"methods":[{"name":"focusGlobalSearchInput","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPut the focus on UiGlobalSearchComponent\\n","description":"<p>Put the focus on UiGlobalSearchComponent</p>\\n","modifierKind":[123]},{"name":"getCompaniesBySearchTerm","args":[{"name":"searchTerm","type":"string","deprecated":false,"deprecationMessage":""},{"name":"pageSize","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"5"},{"name":"pageNumber","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"1"}],"optional":false,"returnType":"Observable<IUiCompanySearchResponse>","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets companies from the Back End based on search term\\n\\n","description":"<p>Gets companies from the Back End based on search term</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1519,"end":1529,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"searchTerm"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1513,"end":1518,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":1545,"end":1553,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"pageSize"},"type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"5","tagName":{"pos":1539,"end":1544,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":1569,"end":1579,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"pageNumber"},"type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"1","tagName":{"pos":1563,"end":1568,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"setSearchTerm","args":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the search term\\n\\n","description":"<p>Sets the search term</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1321,"end":1325,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"term"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1315,"end":1320,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpParams } from \'@angular/common/http\';\\r\\nimport { Injectable } from \'@angular/core\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n// Rxjs\\r\\nimport { BehaviorSubject, Observable, of } from \'rxjs\';\\r\\nimport { map } from \'rxjs/operators\';\\r\\n// interfaces\\r\\nimport { IUiCompanySearchResponse } from \'@lib/modules/global-search/interfaces\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiSearchService {\\r\\n    private _searchTerm$: BehaviorSubject<string> = new BehaviorSubject(\'\');\\r\\n    private _focusGlobalSearch$: BehaviorSubject<void> = new BehaviorSubject(null);\\r\\n    private _endpoint: string;\\r\\n    private readonly _apiUrl = \'api/company-search\';\\r\\n    private readonly _minSearchSymbols = 2;\\r\\n\\r\\n    public get searchTerm$(): Observable<string> {\\r\\n        return this._searchTerm$.asObservable();\\r\\n    }\\r\\n\\r\\n    public get focusGlobalSearch$(): Observable<void> {\\r\\n        return this._focusGlobalSearch$.asObservable();\\r\\n    }\\r\\n\\r\\n    constructor(private _configurationService: UiConfigurationService, private _httpClient: HttpClient) {\\r\\n        this._endpoint = `${this._configurationService.appConfig.supplierExperienceApi}/${this._apiUrl}`;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the search term\\r\\n     *\\r\\n     * @param term\\r\\n     */\\r\\n    public setSearchTerm(term: string) {\\r\\n        this._searchTerm$.next(term);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Gets companies from the Back End based on search term\\r\\n     *\\r\\n     * @param searchTerm\\r\\n     * @param pageSize\\r\\n     * @param pageNumber\\r\\n     */\\r\\n    public getCompaniesBySearchTerm(searchTerm: string, pageSize = 5, pageNumber = 1): Observable<IUiCompanySearchResponse> {\\r\\n        if (searchTerm === \'\' || searchTerm.length < this._minSearchSymbols) {\\r\\n            return of({\\r\\n                totalCount: 0,\\r\\n                companySearchResult: [],\\r\\n            } as IUiCompanySearchResponse);\\r\\n        }\\r\\n\\r\\n        let params = new HttpParams().set(\'searchTerm\', searchTerm);\\r\\n        params = pageSize ? params.set(\'pageSize\', pageSize.toString()) : params;\\r\\n        params = pageNumber ? params.set(\'pageNumber\', pageNumber.toString()) : params;\\r\\n\\r\\n        return this._httpClient.get(this._endpoint, { params }).pipe(\\r\\n            map((res: IUiCompanySearchResponse) => {\\r\\n                return res;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Put the focus on UiGlobalSearchComponent\\r\\n     */\\r\\n    public focusGlobalSearchInput() {\\r\\n        this._focusGlobalSearch$.next(null);\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"searchTerm$":{"name":"searchTerm$","getSignature":{"name":"searchTerm$","type":"","returnType":"Observable<string>","line":22}},"focusGlobalSearch$":{"name":"focusGlobalSearch$","getSignature":{"name":"focusGlobalSearch$","type":"","returnType":"Observable<void>","line":26}}},"type":"injectable"},{"name":"UiSessionService","id":"injectable-UiSessionService-e12e5c535066d5e48f24b4878f8f2ead98b242f84798e0c11413135b4b22d97c8e137eb01853e209eb23d2ffe5a0fea72a93f613a88b8c1ade48ac8cbc8ee2ab","file":"libs/ui/src/lib/services/storage/session/session.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiSessionService {\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiSocketCommunicationService","id":"injectable-UiSocketCommunicationService-0a3d8f832873b53ecbaef908f6a1d41fd4108b0a223ba730d2ded9932122c7d79a1898d648b482f7810966d6d5dda491de3824e951d656f931298994bb87ec3b","file":"libs/ui/src/lib/services/communication/socket-communication/socket-communication.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiSocketCommunicationService {\\r\\n    constructor() {}\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiTestService","id":"injectable-UiTestService-9f90cf939d3f3473f49de9e6d8794ac15752b88663027c8223e32321026729d70ecaa4019d2e24017a0b92bb5ba6ef4b6294b63e5cd384d040e0df8922a9b125","file":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","properties":[],"methods":[{"name":"getActions","args":[{"name":"params","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpResponse<>>","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getCallRecords","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSupplierRowCount","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getUsers","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpResponse<>>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient, HttpHeaders, HttpResponse } from \'@angular/common/http\';\\r\\nimport { Observable } from \'rxjs\';\\r\\nimport { AcpMockingMethodsEnum } from \'@app/interceptors/mock-data.interceptor\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiTestService {\\r\\n    constructor(private _http: HttpClient) {}\\r\\n\\r\\n    public getCallRecords(params: any) {\\r\\n        return this._http.get(\\r\\n            \'http://localhost:3000/callRecords?index=\' + params,\\r\\n            { observe: \'response\' }\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public getUsers(params: any): Observable<HttpResponse<unknown>> {\\r\\n\\r\\n        let str = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\r\\n\\r\\n        if (params.request.sortModel.length !== 0) {\\r\\n            str = str + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\r\\n        }\\r\\n\\r\\n        const keys = Object.keys(params.request.filterModel);\\r\\n        if (keys.length > 0) {\\r\\n            if (str.length > 0) {\\r\\n                str = str + \'&\';\\r\\n            } else {\\r\\n                str = \'?\';\\r\\n            }\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                str = str + keys[i] + \'_like=\' + params.request.filterModel[keys[i]].filter + \'&\';\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return this._http.get(\'http://localhost:3000/test\' + str, { observe: \'response\' });\\r\\n    }\\r\\n\\r\\n    public getActions(params): Observable<HttpResponse<unknown>> {\\r\\n        const mockData = true;\\r\\n\\r\\n        // Prepare call parameters string\\r\\n        let paramsStr = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\r\\n\\r\\n        if (params.request.sortModel.length !== 0) {\\r\\n            paramsStr = paramsStr + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\r\\n        }\\r\\n\\r\\n        const keys = Object.keys(params.request.filterModel);\\r\\n        if (keys.length > 0) {\\r\\n            if (paramsStr.length > 0) {\\r\\n                paramsStr = paramsStr + \'&\';\\r\\n            } else {\\r\\n                paramsStr = \'?\';\\r\\n            }\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                paramsStr = paramsStr + keys[i] + \'_\' + params.request.filterModel[keys[i]].type + \'=\'\\r\\n                    + params.request.filterModel[keys[i]].filter;\\r\\n\\r\\n                if(i < keys.length - 1){\\r\\n                    paramsStr = paramsStr + \'&\';\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if(mockData === true){\\r\\n            // If you want to use mocking method, set this header with the name of the mocking method.\\r\\n            // JSN Note: This is a start for mocking mechanism. Will require extension.\\r\\n            // const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_GET_ACTIONS);\\r\\n            const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_POST_ACTIONS);\\r\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\r\\n            // return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr,\\r\\n            //  { headers, observe: \'response\' } ); // Use Mocking Data\\r\\n            return this._http.post(\\r\\n                \'http://localhost:3000/getSuppliers\',\\r\\n                params.request, { headers, observe: \'response\' }\\r\\n            ); // Use Mocking Data\\r\\n\\r\\n        }\\r\\n        else{\\r\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\r\\n            return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr, { observe: \'response\' } ); // Use Endpoint Data\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public getSupplierRowCount() {\\r\\n        return this._http.get(\\r\\n            \'http://localhost:3000/posts\',\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nexport interface IUiOldGridPayload {\\r\\n    page: {\\r\\n        offset: number;\\r\\n        limit: number;\\r\\n    };\\r\\n    sort: {\\r\\n        field: string;\\r\\n        direction: string;\\r\\n    };\\r\\n    gridFilters: {\\r\\n        isArchived: number;\\r\\n        name: string;\\r\\n        supplierNumber: string;\\r\\n        supplierType: number;\\r\\n        isFlagged: string;\\r\\n    };\\r\\n    moduleFilters: [];\\r\\n    classificationFilters: [];\\r\\n    customFieldFilters: [];\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"_http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiToastService","id":"injectable-UiToastService-3678be43dd1dadc5480221a1d1010cbb2144787f6390afb51bf1099e55510d48a586f334217f41e8518b8d09d92d70591c8659ff66f1c54a6c675eb9226133f1","file":"libs/ui/src/lib/services/toast-notification/toast.service.ts","properties":[{"name":"_toastsSubject","defaultValue":"new BehaviorSubject([] as IUiToast[])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IUiToast[]>","optional":false,"description":"","line":17,"modifierKind":[121]}],"methods":[{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCloses all opened toasts\\n","description":"<p>Closes all opened toasts</p>\\n","modifierKind":[123]},{"name":"generateId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"remove","args":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves a given toast\\n","description":"<p>Removes a given toast</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"show","args":[{"name":"text","type":"string","deprecated":false,"deprecationMessage":""},{"name":"type","type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","defaultValue":"UiToastTypesEnum.info"},{"name":"options","type":"IUiToastOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}"},{"name":"toastId","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows a toast message\\n\\n","description":"<p>Shows a toast message</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":645,"end":649,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"text"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":639,"end":644,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>message text</p>\\n"},{"name":{"pos":678,"end":682,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","defaultValue":"UiToastTypesEnum.info","tagName":{"pos":672,"end":677,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>toast type</p>\\n"},{"name":{"pos":709,"end":716,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"IUiToastOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"pos":703,"end":708,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>additional configurations</p>\\n"},{"name":{"pos":758,"end":765,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"toastId"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":752,"end":757,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>way to provide a custom id</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, TemplateRef } from \'@angular/core\';\\r\\n// RxJs\\r\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\r\\nimport { take } from \'rxjs/operators\';\\r\\n// Interfaces\\r\\nimport { IUiToast, IUiToastOptions } from \'./interfaces\';\\r\\n// Enums\\r\\nimport { UiToastTypesEnum } from \'./enums\';\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiToastService {\\r\\n    public get toasts$(): Observable<IUiToast[]> {\\r\\n        return this._toastsSubject.asObservable();\\r\\n    }\\r\\n\\r\\n    private _toastsSubject: BehaviorSubject<IUiToast[]> = new BehaviorSubject([] as IUiToast[]);\\r\\n\\r\\n    /**\\r\\n     * Shows a toast message\\r\\n     *\\r\\n     * @param text message text\\r\\n     * @param type toast type\\r\\n     * @param options additional configurations\\r\\n     * @param toastId way to provide a custom id\\r\\n     */\\r\\n    public show(text: string, type: UiToastTypesEnum = UiToastTypesEnum.info, options: IUiToastOptions = {}, toastId?: string) {\\r\\n        const id = toastId || this.generateId();\\r\\n        const temp = { id, text, type, options };\\r\\n        this._toastsSubject.pipe(take(1)).subscribe((toasts: IUiToast[]) => {\\r\\n            toasts.push(temp);\\r\\n            this._toastsSubject.next(toasts);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes a given toast\\r\\n     */\\r\\n    public remove(toast: IUiToast) {\\r\\n        this._toastsSubject.pipe(take(1)).subscribe((toasts: IUiToast[]) => {\\r\\n            this._toastsSubject.next(toasts.filter((t: IUiToast) => t.id !== toast.id));\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Closes all opened toasts\\r\\n     */\\r\\n    public clear() {\\r\\n        this._toastsSubject.next([]);\\r\\n    }\\r\\n\\r\\n    private generateId(): string {\\r\\n        return new Date().getTime().toString();\\r\\n    }\\r\\n}\\r\\n","accessors":{"toasts$":{"name":"toasts$","getSignature":{"name":"toasts$","type":"","returnType":"Observable<IUiToast[]>","line":13}}},"type":"injectable"},{"name":"UiUserService","id":"injectable-UiUserService-4497174534b151854fca0b23d8be989b90232d208ae88a9c8da644c25eff89c51aaf2b84c5ca5155dc75593c25f04cc3a9cddfc7d0a102b53dad0139ee106ed1","file":"libs/ui/src/lib/services/user/user.service.ts","properties":[{"name":"_acpPermissionsSubject","defaultValue":"new BehaviorSubject<IUiPermissions>(new UiPermissionsModel())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[121]},{"name":"_acpUsersPath","defaultValue":"\'acp/users/\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35,"modifierKind":[121,144]},{"name":"_authenticatedUserSubject","defaultValue":"new BehaviorSubject<any>({})","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[121]},{"name":"_getUserPreference_auth0","defaultValue":"\'UserPreference/v2/get\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":37,"modifierKind":[121,144]},{"name":"_getUserPreference_cognito","defaultValue":"\'UserPreference/get\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36,"modifierKind":[121,144]},{"name":"_setUserPreference_auth0","defaultValue":"\'UserPreference/v2/update\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39,"modifierKind":[121,144]},{"name":"_setUserPreference_cognito","defaultValue":"\'UserPreference/update\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38,"modifierKind":[121,144]},{"name":"acpPermissions$","defaultValue":"this._acpPermissionsSubject.asObservable().pipe(distinctUntilChanged())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"authenticatedUser$","defaultValue":"this._authenticatedUserSubject.asObservable().pipe(distinctUntilChanged())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"selectedLanguage","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[123]}],"methods":[{"name":"hasPermission","args":[{"name":"requiredPermissions","type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the authenticated user has at least one of the permissions\\nIf permissions are empty array the method returns true\\n\\n","description":"<p>Checks if the authenticated user has at least one of the permissions\\nIf permissions are empty array the method returns true</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7410,"end":7429,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"requiredPermissions"},"type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":7404,"end":7409,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>list of required permissions</p>\\n"},{"tagName":{"pos":7468,"end":7475,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"isSupplierUser","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":178,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogouts the user and clear its credentials\\n","description":"<p>Logouts the user and clear its credentials</p>\\n","modifierKind":[123]},{"name":"savePreferredLanguage","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<object>","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectUser","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"permissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSelects user details and permissions\\n\\n","description":"<p>Selects user details and permissions</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2260,"end":2265,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"email"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2254,"end":2259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>user email</p>\\n"},{"name":{"pos":2292,"end":2303,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"pos":2286,"end":2291,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>permissions from jwt token</p>\\n"}]},{"name":"setAcpPermissions","args":[{"name":"permissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"permissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\n// RxJS\\r\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\r\\nimport { distinctUntilChanged, map, take } from \'rxjs/operators\';\\r\\n// Ngx Translate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiPendoService } from \'@lib/services/analytics/pendo/pendo.service\';\\r\\n// Interfaces\\r\\nimport { IUiPermissions, IUiUser } from \'./interfaces\';\\r\\n// Models\\r\\nimport { UiPermissionsModel } from \'./models/permissions.model\';\\r\\n// Enums\\r\\nimport { UiPermissionsEnum, UiTokenKeyPermissionsEnum } from \'./enums\';\\r\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\r\\nimport { AcpLanguageCodeSwitchEnum, AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\r\\nimport { IUiUserPreferences } from \'./interfaces/user.preferences.interface\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiUserService {\\r\\n    private _authenticatedUserSubject = new BehaviorSubject<any>({});\\r\\n    private _acpPermissionsSubject = new BehaviorSubject<IUiPermissions>(new UiPermissionsModel());\\r\\n\\r\\n    /* eslint-disable @typescript-eslint/member-ordering */\\r\\n    public authenticatedUser$ = this._authenticatedUserSubject.asObservable().pipe(distinctUntilChanged());\\r\\n    public acpPermissions$ = this._acpPermissionsSubject.asObservable().pipe(distinctUntilChanged());\\r\\n    public selectedLanguage: string;\\r\\n    /* eslint-disable @typescript-eslint/member-ordering */\\r\\n\\r\\n    private readonly _acpUsersPath = \'acp/users/\';\\r\\n    private readonly _getUserPreference_cognito = \'UserPreference/get\';\\r\\n    private readonly _getUserPreference_auth0 = \'UserPreference/v2/get\';\\r\\n    private readonly _setUserPreference_cognito = \'UserPreference/update\';\\r\\n    private readonly _setUserPreference_auth0 = \'UserPreference/v2/update\';\\r\\n\\r\\n    constructor(\\r\\n        private _httpClient: HttpClient,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _pendoService: UiPendoService,\\r\\n        private _translateService: TranslateService\\r\\n    ) {}\\r\\n\\r\\n    /**\\r\\n     * Selects user details and permissions\\r\\n     *\\r\\n     * @param email user email\\r\\n     * @param permissions permissions from jwt token\\r\\n     */\\r\\n    public selectUser(email: string, permissions: IUiPermissions) {\\r\\n        this.setAcpPermissions(permissions);\\r\\n\\r\\n        setTimeout(() => {\\r\\n            this._httpClient.get(`${this._configService.appConfig.authApi}${this._acpUsersPath}${email}`).subscribe({\\r\\n                next: (user: IUiUser) => {\\r\\n                    // TODO: Should use the real avatar path\\r\\n                    user.avatar = \'admin5.png\';\\r\\n                    const currentEnv = this._configService.appConfig.environmentName;\\r\\n\\r\\n                    // Get user preferences ONLY if\\r\\n                    // NOT localdev and\\r\\n                    // NOT devopsprod and\\r\\n                    // NOT devopssandbox\\r\\n                    // since iamApi not running on those 3 environments.\\r\\n                    if (\\r\\n                        currentEnv !== UiEnvironmentNameEnum.localdev &&\\r\\n                        currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\r\\n                        currentEnv !== UiEnvironmentNameEnum.devopssandbox\\r\\n                    ) {\\r\\n                        const endpoint =\\r\\n                            `${this._configService.appConfig.iamApi}` +\\r\\n                            (!this._configService.appConfig.authServiceVersion ||\\r\\n                            this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                                ? this._getUserPreference_cognito\\r\\n                                : this._getUserPreference_auth0);\\r\\n\\r\\n                        // Get user preferences for iamApi\\r\\n                        this._httpClient\\r\\n                            .get(endpoint)\\r\\n                            .pipe(take(1))\\r\\n                            .subscribe({\\r\\n                                next: (response: IUiUserPreferences) => {\\r\\n                                    if (response.preferences.length > 0) {\\r\\n                                        this.selectedLanguage = response.preferences[0].value;\\r\\n                                        this.selectedLanguage = this.selectedLanguage.toLowerCase();\\r\\n                                    } else {\\r\\n                                        const navigatorLanguageSmallCode = window.navigator.language.slice(0, 2);\\r\\n                                        if (navigatorLanguageSmallCode in AcpLanguageCodeSwitchEnum) {\\r\\n                                            this.selectedLanguage = navigatorLanguageSmallCode;\\r\\n                                        } else {\\r\\n                                            this.selectedLanguage = AcpSupportedLanguesLongCodeEnum.en;\\r\\n                                        }\\r\\n                                    }\\r\\n                                    user.preferredLanguage = this.selectedLanguage;\\r\\n                                    const lang2letter = AcpLanguageCodeSwitchEnum[this.selectedLanguage];\\r\\n                                    this._translateService.use(lang2letter);\\r\\n                                    this._authenticatedUserSubject.next(user);\\r\\n                                },\\r\\n                                error: (err) => {\\r\\n                                    user.preferredLanguage = \'\';\\r\\n                                    this._authenticatedUserSubject.next(user);\\r\\n                                },\\r\\n                            });\\r\\n                    }\\r\\n                    // Only for localdev, devopsprod, devopssandbox environment\\r\\n                    else {\\r\\n                        user.preferredLanguage = \'\';\\r\\n                        this._authenticatedUserSubject.next(user);\\r\\n                    }\\r\\n                },\\r\\n                error: (err) => {\\r\\n                    // eslint-disable-next-line no-restricted-syntax\\r\\n                    console.error(\'Pendo NOT initialized properly!!!\');\\r\\n                    console.error(err);\\r\\n                },\\r\\n            });\\r\\n        }, 250);\\r\\n    }\\r\\n\\r\\n    public savePreferredLanguage(code: string): Observable<object> {\\r\\n        const capLongCode = code[0].toUpperCase() + code.slice(1); // Capitalizing first letter\\r\\n\\r\\n        const body = {\\r\\n            Preferences: {\\r\\n                Language: [capLongCode],\\r\\n            },\\r\\n        };\\r\\n\\r\\n        const endpoint =\\r\\n            `${this._configService.appConfig.iamApi}` +\\r\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\r\\n                ? this._setUserPreference_cognito\\r\\n                : this._setUserPreference_auth0);\\r\\n\\r\\n        return this._httpClient.post(endpoint, body);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Logouts the user and clear its credentials\\r\\n     */\\r\\n    public logout() {\\r\\n        if (this._configService.appConfig.enablePendoAcpUi) {\\r\\n            this._pendoService.anonymizeVisitorInfo();\\r\\n        }\\r\\n        this._authenticatedUserSubject.next(null);\\r\\n        this._acpPermissionsSubject.next(new UiPermissionsModel());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the authenticated user has at least one of the permissions\\r\\n     * If permissions are empty array the method returns true\\r\\n     *\\r\\n     * @param requiredPermissions list of required permissions\\r\\n     * @returns\\r\\n     */\\r\\n    public hasPermission(requiredPermissions: UiPermissionsEnum[]): Observable<boolean> {\\r\\n        return this.acpPermissions$.pipe(\\r\\n            map((permissions: IUiPermissions) => {\\r\\n                if (!Array.isArray(requiredPermissions)) {\\r\\n                    return false;\\r\\n                }\\r\\n\\r\\n                if (requiredPermissions[0] === null || requiredPermissions.length === 0) {\\r\\n                    return true;\\r\\n                }\\r\\n\\r\\n                const flattenRequiredPermissions = requiredPermissions.reduce((a, b) => a.concat(b), []);\\r\\n                return flattenRequiredPermissions.some((requiredPermission) => permissions[requiredPermission]);\\r\\n            }),\\r\\n            distinctUntilChanged()\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public isSupplierUser(): Observable<boolean> {\\r\\n        return this.acpPermissions$.pipe(\\r\\n            map(\\r\\n                (permissions: IUiPermissions) =>\\r\\n                    permissions.viewAssignedCorrectiveActionRecords && !permissions.fullViewCorrectiveActionRecords\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private setAcpPermissions(permissions: IUiPermissions) {\\r\\n        const acpPermissions = {\\r\\n            userManagement: permissions[UiTokenKeyPermissionsEnum.userManagement] === \'true\',\\r\\n            exceptionManagement: permissions[UiTokenKeyPermissionsEnum.exceptionManagement] === \'true\',\\r\\n            segmentationReport: permissions[UiTokenKeyPermissionsEnum.segmentationReport] === \'true\',\\r\\n            editCompanyProfile: permissions[UiTokenKeyPermissionsEnum.editCompanyProfile] === \'true\',\\r\\n            viewCompanyProfile: permissions[UiTokenKeyPermissionsEnum.viewCompanyProfile] === \'true\',\\r\\n            viewContactManagement: permissions[UiTokenKeyPermissionsEnum.viewContactManagement] === \'true\',\\r\\n            editContactManagement: permissions[UiTokenKeyPermissionsEnum.editContactManagement] === \'true\',\\r\\n            accessDeclarationSearch: permissions[UiTokenKeyPermissionsEnum.accessDeclarationSearch] === \'true\',\\r\\n            accessTransactionLogs: permissions[UiTokenKeyPermissionsEnum.accessTransactionLogs] === \'true\',\\r\\n            accessIndirectMonitoring: permissions[UiTokenKeyPermissionsEnum.accessIndirectMonitoring] === \'true\',\\r\\n            viewIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.viewIndirectMonitoringRecords] === \'true\',\\r\\n            addIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.addIndirectMonitoringRecords] === \'true\',\\r\\n            editIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.editIndirectMonitoringRecords] === \'true\',\\r\\n            deleteIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.deleteIndirectMonitoringRecords] === \'true\',\\r\\n            viewIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.viewIndirectMonitoringKeywordsList] === \'true\',\\r\\n            addIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.addIndirectMonitoringKeywordsList] === \'true\',\\r\\n            editIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.editIndirectMonitoringKeywordsList] === \'true\',\\r\\n            deleteIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.deleteIndirectMonitoringKeywordsList] === \'true\',\\r\\n            accessCorrectiveActions: permissions[UiTokenKeyPermissionsEnum.accessCorrectiveActions] === \'true\',\\r\\n            fullViewCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.fullViewCorrectiveActionRecords] === \'true\',\\r\\n            viewAssignedCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.viewAssignedCorrectiveActionRecords] === \'true\',\\r\\n            addCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.addCorrectiveActionRecords] === \'true\',\\r\\n            editCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.editCorrectiveActionRecords] === \'true\',\\r\\n            deleteCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.deleteCorrectiveActionRecords] === \'true\',\\r\\n            respondToCorrectiveActions: permissions[UiTokenKeyPermissionsEnum.respondToCorrectiveActions] === \'true\',\\r\\n            manageCorrectiveActionTemplates: permissions[UiTokenKeyPermissionsEnum.manageCorrectiveActionTemplates] === \'true\',\\r\\n            createCoreOrganization: permissions[UiTokenKeyPermissionsEnum.createCoreOrganization] === \'true\',\\r\\n            viewNoMatchSuppliers: permissions[UiTokenKeyPermissionsEnum.viewNoMatchSuppliers] === \'true\',\\r\\n            viewDraftOrganizations: permissions[UiTokenKeyPermissionsEnum.viewDraftOrganizations] === \'true\',\\r\\n            viewNetworkDeclarations: permissions[UiTokenKeyPermissionsEnum.viewNetworkDeclarations] === \'true\',\\r\\n            accessEvidenceReview: permissions[UiTokenKeyPermissionsEnum.accessEvidenceReview] === \'true\',\\r\\n            modifyReview: permissions[UiTokenKeyPermissionsEnum.modifyReview] === \'true\',\\r\\n            manageEvidenceType: permissions[UiTokenKeyPermissionsEnum.manageEvidenceType] === \'true\',\\r\\n            manageReviewCriteria: permissions[UiTokenKeyPermissionsEnum.manageReviewCriteria] === \'true\',\\r\\n            manageCorrectiveActionsRulesSet: permissions[UiTokenKeyPermissionsEnum.manageCorrectiveActionsRulesSet] === \'true\',\\r\\n            viewEvidenceReview: permissions[UiTokenKeyPermissionsEnum.viewEvidenceReview] === \'true\',\\r\\n            manageEvidenceTypeMapping: permissions[UiTokenKeyPermissionsEnum.manageEvidenceTypeMapping] === \'true\',\\r\\n            accessCustomerRequests: permissions[UiTokenKeyPermissionsEnum.accessCustomerRequests] === \'true\',\\r\\n            accessPartLevelCustomerRequests: permissions[UiTokenKeyPermissionsEnum.accessPartLevelCustomerRequests] === \'true\',\\r\\n            aud: permissions.aud,\\r\\n        };\\r\\n\\r\\n        this._acpPermissionsSubject.next(acpPermissions);\\r\\n        if (this._configService.appConfig.enablePendoAcpUi) {\\r\\n            this._pendoService.setAuthenticatedVisitorPermissions(acpPermissions);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":39,"jsdoctags":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"}],"guards":[{"name":"UiAcpEnvironmentGuard","id":"injectable-UiAcpEnvironmentGuard-661d6f0afe9373328c1773c15f731b281ee00f27d54c3119fbeab1bc4c27a119013ff1aa45fc23ff085610b9de97c608924bdf09a62ebfc2d3b148f261bcda6c","file":"libs/ui/src/lib/modules/authentification/guards/environment.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { Router, ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from \'@angular/router\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiAcpEnvironmentGuard implements CanActivate {\\r\\n    constructor(private _router: Router, private _configurationService: UiConfigurationService,\\r\\n        private _translateService: TranslateService,) {}\\r\\n\\r\\n    public canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): boolean {\\r\\n        if(_route.data.environments !== undefined && _route.data.environments.includes(\\r\\n            this._configurationService.appConfig.environmentName) as Array<string> ){\\r\\n            return true;\\r\\n        }\\r\\n        this._router.navigate([\'/acp/error\']);\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"guard"},{"name":"UiPermissionGuard","id":"injectable-UiPermissionGuard-bb33ec83eb9d12f19895573a5715cc79b7956d21a56256c7d9ca96d722c0113c125cee6ddbbf377213bdee9fd893f5ed7166f9a839002f55ac331fc7ce96ed0a","file":"libs/ui/src/lib/modules/permissions/guards/permission.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\r\\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \'@angular/router\';\\r\\nimport { Observable, of } from \'rxjs\';\\r\\nimport { tap, catchError } from \'rxjs/operators\';\\r\\nimport { UiPermissionsEnum, UiUserService } from \'@lib/services/user\';\\r\\n\\r\\n@Injectable({ providedIn: \'root\' })\\r\\nexport class UiPermissionGuard implements CanActivate {\\r\\n    constructor(private _router: Router, private _userService: UiUserService) {}\\r\\n\\r\\n    public canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): Observable<boolean> {\\r\\n        return this._userService.hasPermission(_route.data.permissions as UiPermissionsEnum[]).pipe(\\r\\n            tap((hasPermission: boolean) => {\\r\\n                if (!hasPermission) {\\r\\n                    this._router.navigate([\'/acp/dashboard\']);\\r\\n                }\\r\\n            }),\\r\\n            catchError((error) => {\\r\\n                console.error(\'Error in permission guard:\', error);\\r\\n                return of(false);\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"guard"}],"interceptors":[{"name":"UiAuthInterceptor","id":"injectable-UiAuthInterceptor-fc48257a7e52603cf1f862fc87611d07f448d206882de79730e696f0e7f479ee6c85aaefb477e2c234289c8b190f1c8d5a75aa007f0aa6628b21ce3949884cf3","file":"libs/ui/src/lib/modules/authentification/auth0/interceptors/auth.interceptor.ts","properties":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":13,"modifierKind":[121,144]}],"methods":[{"name":"intercept","args":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":""},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpEvent<any>>","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \'@angular/common/http\';\\r\\nimport { Observable, firstValueFrom, from } from \'rxjs\';\\r\\nimport { switchMap, take } from \'rxjs/operators\';\\r\\nimport { UiAuthService } from \'../services/auth.service\';\\r\\nimport { Injectable } from \'@angular/core\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { IUiAuth0Config } from \'../auth0-config\';\\r\\n\\r\\n@Injectable({\\r\\n    providedIn: \'root\',\\r\\n})\\r\\nexport class UiAuthInterceptor implements HttpInterceptor {\\r\\n    private readonly _config: IUiAuth0Config;\\r\\n\\r\\n    constructor(private readonly _authService: UiAuthService, private readonly _configurationService: UiConfigurationService) {\\r\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\r\\n    }\\r\\n\\r\\n    public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\\r\\n        // Check if any audience in the audienceList matches the request.url\\r\\n        if (!request.url.includes(\'/api/\')) {\\r\\n            return next.handle(request);\\r\\n        }\\r\\n\\r\\n        // Check if the request is for an audience that requires a token\\r\\n        const matchingAudience = this._authService.getAudienceFromPath(request.url);\\r\\n        if (matchingAudience) {\\r\\n            // Get the token\\r\\n            return this._authService\\r\\n                .getToken(matchingAudience)\\r\\n                .pipe(\\r\\n                    take(1),\\r\\n                    switchMap((token) => {\\r\\n                        // eslint-disable-next-line max-len\\r\\n                        const claims = `user_guid=${this._authService.userGuid};root_org_guid=${this._authService.rootOrgGuid};active_org_guid=${this._authService.activeOrgGuid}`;\\r\\n                        const clonedRequest = request.clone({\\r\\n                            setHeaders: {\\r\\n                                \'X-Assent-Claims\': claims,\\r\\n                                // eslint-disable-next-line quote-props\\r\\n                                Authorization: `Bearer ${token}`,\\r\\n                                /* eslint-disable-next-line @typescript-eslint/naming-convention  */\\r\\n                                \'Portal-Host\': window.location.host,\\r\\n                                /* eslint-disable-next-line @typescript-eslint/naming-convention */\\r\\n                            },\\r\\n                        });\\r\\n                        return next.handle(clonedRequest);\\r\\n                    })\\r\\n                );\\r\\n        }\\r\\n\\r\\n        return next.handle(request);\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"interceptor"}],"classes":[{"name":"UiAcpUserSession","id":"class-UiAcpUserSession-85d52ebf4eaf25d8629b96f2ae0cd499f36b006431cfe6485fe2969a882eb55c530e6b0ab0f96b7d84ed7c365723043d1baef01a8b6321e89ad986dd2c6b455b","file":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Inject, inject } from \'@angular/core\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n\\r\\nexport class UiAcpUserSessionItem {\\r\\n    public sessionKey: string;\\r\\n    public name: string;\\r\\n    public value: string;\\r\\n    public isCurrent: boolean;\\r\\n    public lastActivity: string;\\r\\n    public uniqueSessionGuid: string;\\r\\n\\r\\n    constructor(sessionKey: string, name: string, value: string, isCurrent: boolean, lastActivity: string, uniqueSessionGuid: string) {\\r\\n        this.sessionKey = sessionKey;\\r\\n        this.name = name;\\r\\n        this.value = value;\\r\\n        this.isCurrent = isCurrent;\\r\\n        this.lastActivity = lastActivity;\\r\\n        this.uniqueSessionGuid = uniqueSessionGuid;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class UiAcpUserSession {\\r\\n    public browser: string;\\r\\n    public IP: string;\\r\\n    public OS: string;\\r\\n    public isCurrent: boolean;\\r\\n    public lastActivity: string;\\r\\n\\r\\n    constructor(\\r\\n        browser: string,\\r\\n        IP: string,\\r\\n        OS: string,\\r\\n        isCurrent: boolean,\\r\\n        lastActivity: string) {\\r\\n        this.browser = browser;\\r\\n        this.IP = IP;\\r\\n        this.OS = OS;\\r\\n        this.isCurrent = isCurrent;\\r\\n        this.lastActivity = lastActivity;\\r\\n    }\\r\\n\\r\\n    // #region Public Methods\\r\\n    // -----------------------------------------------------------------------------------------------------\\r\\n    // Transform AcpUserSessionItem[] to AcpUserSession\\r\\n    public static fromAcpUserSessionItems(items: UiAcpUserSessionItem[], currentUniqueSessionGuid: string): UiAcpUserSession {\\r\\n        const transformed: UiAcpUserSession = new UiAcpUserSession(\'\', \'\', \'\', false, \'\');\\r\\n\\r\\n        items.forEach((item) => {\\r\\n            switch (item.name) {\\r\\n                case \'Browser\':\\r\\n                    transformed.browser = item.value;\\r\\n                    break;\\r\\n                case \'IP\':\\r\\n                    transformed.IP = item.value;\\r\\n                    break;\\r\\n                case \'OS\':\\r\\n                    transformed.OS = item.value;\\r\\n                    break;\\r\\n                case \'LastActivity\':\\r\\n                    const lastActivityDateString = new Date(item.value).toString();\\r\\n                    const splittedDate = lastActivityDateString.split(\' \');\\r\\n                    if(splittedDate[2].startsWith(\'0\')) {\\r\\n                        splittedDate[2] = splittedDate[2].substring(1);\\r\\n                    }\\r\\n                    transformed.lastActivity = splittedDate.slice(1, 3).toString().replace(\',\', \' \');\\r\\n                    break;\\r\\n                default:\\r\\n                    break;\\r\\n            }\\r\\n            transformed.isCurrent = item.uniqueSessionGuid === currentUniqueSessionGuid;\\r\\n        });\\r\\n        return transformed;\\r\\n    }\\r\\n    // #endregion Public Methods\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"browser","type":"string","deprecated":false,"deprecationMessage":""},{"name":"IP","type":"string","deprecated":false,"deprecationMessage":""},{"name":"OS","type":"string","deprecated":false,"deprecationMessage":""},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":""}],"line":29,"jsdoctags":[{"name":"browser","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"IP","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"OS","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"browser","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"IP","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"isCurrent","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"lastActivity","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"OS","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27,"modifierKind":[123]}],"methods":[{"name":"fromAcpUserSessionItems","args":[{"name":"items","type":"UiAcpUserSessionItem[]","deprecated":false,"deprecationMessage":""},{"name":"currentUniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"UiAcpUserSession","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"items","type":"UiAcpUserSessionItem[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"currentUniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiAcpUserSessionItem","id":"class-UiAcpUserSessionItem-85d52ebf4eaf25d8629b96f2ae0cd499f36b006431cfe6485fe2969a882eb55c530e6b0ab0f96b7d84ed7c365723043d1baef01a8b6321e89ad986dd2c6b455b","file":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Inject, inject } from \'@angular/core\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n\\r\\nexport class UiAcpUserSessionItem {\\r\\n    public sessionKey: string;\\r\\n    public name: string;\\r\\n    public value: string;\\r\\n    public isCurrent: boolean;\\r\\n    public lastActivity: string;\\r\\n    public uniqueSessionGuid: string;\\r\\n\\r\\n    constructor(sessionKey: string, name: string, value: string, isCurrent: boolean, lastActivity: string, uniqueSessionGuid: string) {\\r\\n        this.sessionKey = sessionKey;\\r\\n        this.name = name;\\r\\n        this.value = value;\\r\\n        this.isCurrent = isCurrent;\\r\\n        this.lastActivity = lastActivity;\\r\\n        this.uniqueSessionGuid = uniqueSessionGuid;\\r\\n    }\\r\\n}\\r\\n\\r\\nexport class UiAcpUserSession {\\r\\n    public browser: string;\\r\\n    public IP: string;\\r\\n    public OS: string;\\r\\n    public isCurrent: boolean;\\r\\n    public lastActivity: string;\\r\\n\\r\\n    constructor(\\r\\n        browser: string,\\r\\n        IP: string,\\r\\n        OS: string,\\r\\n        isCurrent: boolean,\\r\\n        lastActivity: string) {\\r\\n        this.browser = browser;\\r\\n        this.IP = IP;\\r\\n        this.OS = OS;\\r\\n        this.isCurrent = isCurrent;\\r\\n        this.lastActivity = lastActivity;\\r\\n    }\\r\\n\\r\\n    // #region Public Methods\\r\\n    // -----------------------------------------------------------------------------------------------------\\r\\n    // Transform AcpUserSessionItem[] to AcpUserSession\\r\\n    public static fromAcpUserSessionItems(items: UiAcpUserSessionItem[], currentUniqueSessionGuid: string): UiAcpUserSession {\\r\\n        const transformed: UiAcpUserSession = new UiAcpUserSession(\'\', \'\', \'\', false, \'\');\\r\\n\\r\\n        items.forEach((item) => {\\r\\n            switch (item.name) {\\r\\n                case \'Browser\':\\r\\n                    transformed.browser = item.value;\\r\\n                    break;\\r\\n                case \'IP\':\\r\\n                    transformed.IP = item.value;\\r\\n                    break;\\r\\n                case \'OS\':\\r\\n                    transformed.OS = item.value;\\r\\n                    break;\\r\\n                case \'LastActivity\':\\r\\n                    const lastActivityDateString = new Date(item.value).toString();\\r\\n                    const splittedDate = lastActivityDateString.split(\' \');\\r\\n                    if(splittedDate[2].startsWith(\'0\')) {\\r\\n                        splittedDate[2] = splittedDate[2].substring(1);\\r\\n                    }\\r\\n                    transformed.lastActivity = splittedDate.slice(1, 3).toString().replace(\',\', \' \');\\r\\n                    break;\\r\\n                default:\\r\\n                    break;\\r\\n            }\\r\\n            transformed.isCurrent = item.uniqueSessionGuid === currentUniqueSessionGuid;\\r\\n        });\\r\\n        return transformed;\\r\\n    }\\r\\n    // #endregion Public Methods\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"name","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string","deprecated":false,"deprecationMessage":""},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":""},{"name":"uniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"uniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"isCurrent","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10,"modifierKind":[123]},{"name":"lastActivity","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"uniqueSessionGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiButtonObject","id":"class-UiButtonObject-8c3a9a4de65f6b450d1ba9aadec7933c537002e30467c2c7a265f9082e580170285526cc5a6ed89b0066d9862a24eba6900d8e2849c696d8de963aaae97b21e8","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/buttonObject.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiButtonObject {\\r\\n    public selected = false;\\r\\n\\r\\n    public onClick = (e) => {};\\r\\n    public handleChange = (e) => {};\\r\\n}\\r\\n","properties":[{"name":"handleChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"onClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":2,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiButtonObject","id":"class-UiButtonObject-8c3a9a4de65f6b450d1ba9aadec7933c537002e30467c2c7a265f9082e580170285526cc5a6ed89b0066d9862a24eba6900d8e2849c696d8de963aaae97b21e8-1","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/buttonObject.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiButtonObject {\\r\\n    public selected = false;\\r\\n\\r\\n    public onClick = (e) => {};\\r\\n    public handleChange = (e) => {};\\r\\n}\\r\\n","properties":[{"name":"handleChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"onClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":2,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiButtonObject-1"},{"name":"UiDocumentModel","id":"class-UiDocumentModel-6341f2c3c4354285a6bd5d10b6d3830fd6275826ab15cd87a3dc42d61a97430cd631faa05ab29d3d2df28fb30dcda05b7f75b6fdc4a91cb4bb1aadae7f6f5b41","file":"libs/ui/src/lib/modules/file-upload/components/models/document.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiDocumentModel {\\r\\n    public fileName: string;\\r\\n    public mimeType: string;\\r\\n    public fileExt: string;\\r\\n    public uniqueFileName: string;\\r\\n    public s3Key: string;\\r\\n    public bucket: string;\\r\\n}\\r\\n","properties":[{"name":"bucket","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"fileExt","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"fileName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2,"modifierKind":[123]},{"name":"mimeType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3,"modifierKind":[123]},{"name":"s3Key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6,"modifierKind":[123]},{"name":"uniqueFileName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFileItemModel","id":"class-UiFileItemModel-597cd1f373b3d543a891577f0735a18baf9aa49eb41d308000d95599a502160ee2d4bf04ec9cc81564610bea6f74055303678a112c9b2ae0633cd68bdda8e4a6","file":"libs/ui/src/lib/modules/file-upload/components/models/file-item.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiFileItemModel {\\r\\n    public name: string;\\r\\n    public mimeType: string;\\r\\n    public fileExt: string;\\r\\n    public index: string;\\r\\n    public isLoading: boolean;\\r\\n    public isFileScanning: boolean;\\r\\n    public safe: boolean;\\r\\n    public processed: boolean;\\r\\n    public uploaded: boolean;\\r\\n    public progress: number;\\r\\n    public bucket: string;\\r\\n    public scanResult: { scanResultClean: boolean; sTag: string; key: string };\\r\\n    public typeRejected: string;\\r\\n    public error: string;\\r\\n    public message: string;\\r\\n}\\r\\n","properties":[{"name":"bucket","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"fileExt","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"index","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"isFileScanning","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":6,"modifierKind":[123]},{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"mimeType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3,"modifierKind":[123]},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2,"modifierKind":[123]},{"name":"processed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9,"modifierKind":[123]},{"name":"progress","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"safe","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"scanResult","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"typeRejected","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"uploaded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFormControlConfig","id":"class-UiFormControlConfig-0bf78514bbc43b747ea506a0743a377f0b4b7e3b4446413a5d5f464ad13b67e520d126d55788bd13707d99cef1efeeb6b1d800d2594a647abe0bde2cbd340874","file":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\r\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\nexport class UiFormControlConfig {\\r\\n    public formControlName? = \'\';\\r\\n    public disabled? = false;\\r\\n    public forceDisabled? = false;\\r\\n    public label?: \'Test\'; // TODO: Is type supposed to be \'Test\'? Should it be string?\\r\\n    public placeholder? = \'\';\\r\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\r\\n    public form?: any;\\r\\n    public prefixIcon? = \'\';\\r\\n    public suffixIcon? = \'\';\\r\\n    public prefixText? = \'\';\\r\\n    public suffixText? = \'\';\\r\\n    public helpText? = \'\';\\r\\n    public infoText? = \'\';\\r\\n    public showHelpText? = true;\\r\\n    public showSuccessValidation? = false;\\r\\n    public showErrorValidation? = true;\\r\\n    public showInfoIcon? = true;\\r\\n    public patternErrorText? = \'patternErrorText\';\\r\\n    public errorStrings? = {};\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-form-base\',\\r\\n    templateUrl: \'./form-base.component.html\',\\r\\n    styleUrls: [\'./form-base.component.scss\'],\\r\\n})\\r\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\r\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\r\\n\\r\\n    @Output() public formStatusChange = new EventEmitter<any>();\\r\\n    @Output() public formClosed = new EventEmitter<any>();\\r\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\r\\n\\r\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\r\\n        this._editMode = value;\\r\\n        if (this._editMode === true) {\\r\\n            this.enableAllInputs();\\r\\n        } else {\\r\\n            this.disableAllInputs();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public get editMode(): boolean {\\r\\n        return this._editMode;\\r\\n    }\\r\\n\\r\\n    public form: FormGroup;\\r\\n    public payload: any = {};\\r\\n\\r\\n    public modeChanged = false;\\r\\n    public formControls: { [name: string]: { value: any; validators: Validators; config?: UiFormControlConfig } };\\r\\n\\r\\n    public showSuccessValidation = false;\\r\\n    public showErrorValidation = true;\\r\\n    public showHelpText = true;\\r\\n    public showInfoIcon = true;\\r\\n\\r\\n    public Validators = Validators;\\r\\n\\r\\n    protected _ngUnsubscribe = new Subject();\\r\\n\\r\\n    private _initialValues;\\r\\n    private _editMode = false;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._ngUnsubscribe.next(null);\\r\\n        this._ngUnsubscribe.complete();\\r\\n    }\\r\\n\\r\\n    public createForm(formControls: { [name: string]: { value: any; validators: any; config?: UiFormControlConfig } }) {\\r\\n        this.form = new FormGroup({});\\r\\n        for (const [key, value] of Object.entries(formControls)) {\\r\\n            const newControl = new FormControl(value.value, { validators: value.validators });\\r\\n            this.form.setControl(key, newControl);\\r\\n        }\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public setValues(FormValues: any) {\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.form.controls[key].setValue(FormValues[key]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public viewForm() {\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public editForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.editMode = true;\\r\\n    }\\r\\n\\r\\n    public clearForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.form.reset();\\r\\n        this.payload = {};\\r\\n    }\\r\\n\\r\\n    public cancelForm() {\\r\\n        this.form.reset(this._initialValues);\\r\\n        this.payload = {};\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public closeForm() {\\r\\n        this.editMode = false;\\r\\n        this.formClosed.emit();\\r\\n    }\\r\\n\\r\\n    public submitForm(): FormData {\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.payload[key] = this.form.controls[key].value;\\r\\n        });\\r\\n        this.editMode = false;\\r\\n\\r\\n        this.formSubmitted.emit(this.form.value);\\r\\n\\r\\n        return this.form.value;\\r\\n    }\\r\\n\\r\\n    public onClearBtnClick() {\\r\\n        this.clearForm();\\r\\n    }\\r\\n\\r\\n    public onEditBtnClick() {\\r\\n        this.editForm();\\r\\n    }\\r\\n\\r\\n    public onCancelBtnClick() {\\r\\n        this.cancelForm();\\r\\n    }\\r\\n\\r\\n    public onCloseBtnClick() {\\r\\n        this.closeForm();\\r\\n    }\\r\\n\\r\\n    public onSaveBtnClick() {\\r\\n        this.submitForm();\\r\\n    }\\r\\n\\r\\n    public onFormOptionsChanged(e: { showInfoIcon: boolean; showHelpText: boolean }) {\\r\\n        this.showInfoIcon = e.showInfoIcon;\\r\\n        this.showHelpText = e.showHelpText;\\r\\n    }\\r\\n\\r\\n    private disableAllInputs() {\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n                    this.form.controls[control].disable();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private enableAllInputs() {\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n                    // Enable only the form controls that don\'t have forceDisabled\\r\\n                    if (this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined) {\\r\\n                        if (this.formControls[control].config.forceDisabled === false) {\\r\\n                            this.form.controls[control].enable();\\r\\n                            this.form.controls[control].markAsUntouched();\\r\\n                        }\\r\\n                    } else {\\r\\n                        this.form.controls[control].enable();\\r\\n                        this.form.controls[control].markAsUntouched();\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":7,"modifierKind":[123]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":24,"modifierKind":[123]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":8,"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":12,"modifierKind":[123]},{"name":"formControlName","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6,"modifierKind":[123]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":17,"modifierKind":[123]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":18,"modifierKind":[123]},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":9,"modifierKind":[123]},{"name":"patternErrorText","defaultValue":"\'patternErrorText\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":23,"modifierKind":[123]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10,"modifierKind":[123]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13,"modifierKind":[123]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":21,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":19,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":22,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":20,"modifierKind":[123]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14,"modifierKind":[123]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16,"modifierKind":[123]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","type":"\\"text\\" | \\"email\\" | \\"password\\"","optional":true,"description":"","line":11,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFormControlConfigObsolete","id":"class-UiFormControlConfigObsolete-f0ca6c7f67242d541413f32675de663f0399e988a09bafc7adb4e48a6c344bcfa90629c03e2d9e05532298723244a75ff7285bad0390f93f446ca7c161930bda","file":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","deprecated":true,"deprecationMessage":": Use UiFormControlConfig from","type":"class","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\r\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\n/**\\r\\n * @deprecated: Use UiFormControlConfig from @lib/modules/form/form-base/form-base.component.ts\\r\\n */\\r\\nexport class UiFormControlConfigObsolete {\\r\\n    public formControlName? = \'\';\\r\\n    public disabled? = false;\\r\\n    public forceDisabled? = false;\\r\\n    public label?: \'Test\';\\r\\n    public placeholder? = \'\';\\r\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\r\\n    public form?: any;\\r\\n    public prefixIcon? = \'\';\\r\\n    public suffixIcon? = \'\';\\r\\n    public prefixText? = \'\';\\r\\n    public suffixText? = \'\';\\r\\n    public helpText? = \'\';\\r\\n    public infoText? = \'\';\\r\\n    public showHelpText? = true;\\r\\n    public showSuccessValidation? = false;\\r\\n    public showErrorValidation? = true;\\r\\n    public showInfoIcon? = true;\\r\\n    public patternErrorText? = \'patternErrorText\';\\r\\n    public errorStrings? = {};\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-form-base\',\\r\\n    templateUrl: \'./form-base.component.html\',\\r\\n    styleUrls: [\'./form-base.component.scss\'],\\r\\n})\\r\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\r\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\r\\n\\r\\n    @Output() public formStatusChange = new EventEmitter<any>();\\r\\n    @Output() public formClosed = new EventEmitter<any>();\\r\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\r\\n\\r\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\r\\n        this._editMode = value;\\r\\n        if (this._editMode === true) {\\r\\n            this.enableAllInputs();\\r\\n        } else {\\r\\n            this.disableAllInputs();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public get editMode(): boolean {\\r\\n        return this._editMode;\\r\\n    }\\r\\n\\r\\n    public form: FormGroup;\\r\\n    public payload: any = {};\\r\\n\\r\\n    public modeChanged = false;\\r\\n    public formControls: { [name: string]: {value: any; validators: Validators; config?: UiFormControlConfigObsolete} };\\r\\n\\r\\n    public showSuccessValidation = false;\\r\\n    public showErrorValidation = true;\\r\\n    public showHelpText = true;\\r\\n    public showInfoIcon = true;\\r\\n\\r\\n    public Validators = Validators;\\r\\n\\r\\n    protected _ngUnsubscribe = new Subject();\\r\\n\\r\\n    private _initialValues;\\r\\n    private _editMode = false;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void {  }\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._ngUnsubscribe.next(null);\\r\\n        this._ngUnsubscribe.complete();\\r\\n    }\\r\\n\\r\\n    public createForm(formControls: { [name: string]: {value: any; validators: any; config?: UiFormControlConfigObsolete} }) {\\r\\n        this.form = new FormGroup({});\\r\\n        for (const [key, value] of Object.entries(formControls)) {\\r\\n            const newControl = new FormControl(value.value, {validators: value.validators});\\r\\n            this.form.setControl(key, newControl);\\r\\n        }\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public setValues(FormValues: any){\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.form.controls[key].setValue(FormValues[key]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public viewForm() {\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public editForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.editMode = true;\\r\\n    }\\r\\n\\r\\n    public clearForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.form.reset();\\r\\n        this.payload = {};\\r\\n    }\\r\\n\\r\\n    public cancelForm() {\\r\\n        this.form.reset(this._initialValues);\\r\\n        this.payload = {};\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public closeForm() {\\r\\n        this.editMode = false;\\r\\n        this.formClosed.emit();\\r\\n    }\\r\\n\\r\\n    public submitForm(): FormData {\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.payload[key] = this.form.controls[key].value;\\r\\n        });\\r\\n        this.editMode = false;\\r\\n\\r\\n        this.formSubmitted.emit(this.form.value);\\r\\n\\r\\n        return this.form.value;\\r\\n    }\\r\\n\\r\\n    public onClearBtnClick() {\\r\\n        this.clearForm();\\r\\n    }\\r\\n\\r\\n    public onEditBtnClick() {\\r\\n        this.editForm();\\r\\n    }\\r\\n\\r\\n    public onCancelBtnClick() {\\r\\n        this.cancelForm();\\r\\n    }\\r\\n\\r\\n    public onCloseBtnClick() {\\r\\n        this.closeForm();\\r\\n    }\\r\\n\\r\\n    public onSaveBtnClick() {\\r\\n        this.submitForm();\\r\\n    }\\r\\n\\r\\n    public onFormOptionsChanged(e: {showInfoIcon: boolean; showHelpText: boolean}){\\r\\n        this.showInfoIcon = e.showInfoIcon;\\r\\n        this.showHelpText = e.showHelpText;\\r\\n    }\\r\\n\\r\\n    private disableAllInputs() {\\r\\n\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n                    this.form.controls[control].disable();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private enableAllInputs() {\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n\\r\\n                    // Enable only the form controls that don\'t have forceDisabled\\r\\n                    if(this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined){\\r\\n\\r\\n                        if(this.formControls[control].config.forceDisabled === false){\\r\\n                            this.form.controls[control].enable();\\r\\n                            this.form.controls[control].markAsUntouched();\\r\\n                        }\\r\\n                    }\\r\\n                    else{\\r\\n                        this.form.controls[control].enable();\\r\\n                        this.form.controls[control].markAsUntouched();\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":10,"modifierKind":[123]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":27,"modifierKind":[123]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":11,"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":15,"modifierKind":[123]},{"name":"formControlName","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9,"modifierKind":[123]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":20,"modifierKind":[123]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":21,"modifierKind":[123]},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":12,"modifierKind":[123]},{"name":"patternErrorText","defaultValue":"\'patternErrorText\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":26,"modifierKind":[123]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13,"modifierKind":[123]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16,"modifierKind":[123]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":18,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":24,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":22,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":25,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":23,"modifierKind":[123]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":17,"modifierKind":[123]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":19,"modifierKind":[123]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","type":"\\"text\\" | \\"email\\" | \\"password\\"","optional":true,"description":"","line":14,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFormValidators","id":"class-UiFormValidators-f0b7b0fdb1172c7544dd529fc88166f402e0f887a68949bc231243a20e7778f68dd22ea8d52849098947b55874a687d232c2eb8d47ccc99b5b203a13a8079dae","file":"libs/ui/src/lib/classes/form-validators.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AbstractControl, FormControl, ValidationErrors } from \'@angular/forms\';\\r\\n\\r\\n/**\\r\\n * Helper class that contains Reactive Form custom validators\\r\\n */\\r\\nexport class UiFormValidators {\\r\\n    /**\\r\\n     * Validates for empty spaces as value\\r\\n     *\\r\\n     * @returns \\"{ whitespace: true }\\" when there is empty space\\r\\n     */\\r\\n    public static noWhitespaceValidator(control: FormControl): ValidationErrors | null {\\r\\n        const value = control.value;\\r\\n\\r\\n        // Treat null or undefined as whitespace\\r\\n        if (value == null) { // covers both null and undefined\\r\\n            return { whitespace: true };\\r\\n        }\\r\\n\\r\\n        // Check if the value is a string\\r\\n        if (typeof value !== \'string\') {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        const isWhitespace = value.trim().length === 0;\\r\\n        return isWhitespace ? { whitespace: true } : null;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Validate maximum length of the input value after removing HTML tags.\\r\\n     *\\r\\n     * @param maxLength\\r\\n     * @returns \\"{ maxlength: { requiredLength: maxLength } } | null\\"\\r\\n     */\\r\\n    public static maxLengthHtmlTrimmed(maxLength: number): (control: AbstractControl) => ValidationErrors | null {\\r\\n        return (control: AbstractControl): ValidationErrors | null => {\\r\\n            const value = control.value;\\r\\n\\r\\n            if (!value) {\\r\\n                return null;\\r\\n            }\\r\\n\\r\\n            const trimmedText = value.replace(/<\\\\/?(\\"[^\\"]*\\"|\'[^\']*\'|[^>])*(>|$)/g, \'\');\\r\\n\\r\\n            return trimmedText.length <= maxLength ? null : { maxlength: { requiredLength: maxLength } };\\r\\n        };\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Validate minimum length of the input value after removing HTML tags.\\r\\n     *\\r\\n     * @param minLength\\r\\n     * @returns \\"{ minlength: { requiredLength: minLength } } | null\\"\\r\\n     */\\r\\n    public static minLengthHtmlTrimmed(minLength: number): (control: AbstractControl) => ValidationErrors | null {\\r\\n        return (control: AbstractControl): ValidationErrors | null => {\\r\\n            const value = control.value;\\r\\n\\r\\n            if (!value) {\\r\\n                return { minlength: { requiredLength: minLength } };\\r\\n            }\\r\\n\\r\\n            const trimmedText = value.replace(/<\\\\/?(\\"[^\\"]*\\"|\'[^\']*\'|[^>])*(>|$)/g, \'\');\\r\\n            return trimmedText.length >= minLength ? null : { minlength: { requiredLength: minLength } };\\r\\n        };\\r\\n    }\\r\\n}\\r\\n","properties":[],"description":"<p>Helper class that contains Reactive Form custom validators</p>\\n","rawdescription":"\\n\\nHelper class that contains Reactive Form custom validators\\n","methods":[{"name":"maxLengthHtmlTrimmed","args":[{"name":"maxLength","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidate maximum length of the input value after removing HTML tags.\\n\\n","description":"<p>Validate maximum length of the input value after removing HTML tags.</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":983,"end":992,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"maxLength"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":977,"end":982,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1002,"end":1009,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>&quot;{ maxlength: { requiredLength: maxLength } } | null&quot;</p>\\n"}]},{"name":"minLengthHtmlTrimmed","args":[{"name":"minLength","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidate minimum length of the input value after removing HTML tags.\\n\\n","description":"<p>Validate minimum length of the input value after removing HTML tags.</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":1708,"end":1717,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"minLength"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1702,"end":1707,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1727,"end":1734,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>&quot;{ minlength: { requiredLength: minLength } } | null&quot;</p>\\n"}]},{"name":"noWhitespaceValidator","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidates for empty spaces as value\\n\\n","description":"<p>Validates for empty spaces as value</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":259,"end":266,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>&quot;{ whitespace: true }&quot; when there is empty space</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiModalConfig","id":"class-UiModalConfig-34418bf964f301b909302ab68e6c3849462d4aea2e04d0214464ab1068f91a82535362c58cf698269b43e5e628c2ab69f51074eebc5fea3ea08eeb32ffa11b06","file":"libs/ui/src/lib/modules/modal/configuration/modal-config.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { UiModalDialogSizeEnum } from \'@lib/enums/modal-dialog-size.enum\';\\r\\nimport { UiModalTypeEnum } from \'@lib/enums/modal-type.enum\';\\r\\n\\r\\n/**\\r\\n * Represents the configuration options for Ui Modals\\r\\n */\\r\\nexport class UiModalConfig {\\r\\n    /**\\r\\n     * Specifies the `aria-labelledby` attribute value to be applied to the modal dialog.\\r\\n     */\\r\\n    public ariaLabelledBy?: string = undefined;\\r\\n\\r\\n    /**\\r\\n     * Specifies the `aria-describedby` attribute value to be applied to the modal dialog.\\r\\n     */\\r\\n    public ariaDescribedBy?: string = undefined;\\r\\n\\r\\n    /**\\r\\n     * Specifies whether the modal dialog should be centered vertically and horizontally.\\r\\n     * Default value is `true`.\\r\\n     *\\r\\n     * @default true\\r\\n     */\\r\\n    public centered?: boolean = true;\\r\\n\\r\\n    /**\\r\\n     * Specifies whether the modal dialog should be scrollable.\\r\\n     * Default value is `true`.\\r\\n     *\\r\\n     * @default true\\r\\n     */\\r\\n    public scrollable?: boolean = true;\\r\\n\\r\\n    /**\\r\\n     * Specifies the size of the modal dialog.\\r\\n     * It can be a string or one of the predefined `UiModalDialogSizeEnum` values.\\r\\n     * Default value is `UiModalDialogSizeEnum.md`.\\r\\n     *\\r\\n     * @default Medium == \'md\' == `UiModalDialogSizeEnum.md`\\r\\n     */\\r\\n    public size?: string | UiModalDialogSizeEnum = UiModalDialogSizeEnum.md;\\r\\n\\r\\n    /**\\r\\n     * Specifies the CSS class(es) to be applied to the modal dialog.\\r\\n     * NOTE: only works with \'Modal\' (dialog) types.\\r\\n     *\\r\\n     * @memberof `NgbModalOptions`\\r\\n     * @example\\r\\n     * To add icon to a modal add class: \'modal-icon\'\\r\\n     */\\r\\n    public modalDialogClass?: string = undefined;\\r\\n\\r\\n    /**\\r\\n     * Specifies the CSS class(es) to be applied to the offcanvas panel.\\r\\n     * NOTE: only works with \'Offcanvas\' (drawer) types.\\r\\n     *\\r\\n     * @memberof `NgbOffcanvasOptions`\\r\\n     * @example\\r\\n     * To add icon to a modal add class: \'no-borders\'\\r\\n     */\\r\\n    public panelClass?: string = undefined;\\r\\n\\r\\n    /**\\r\\n     * Specifies the type of the modal dialog; \'Modal\' (dialog style) or \'Offcanvas\' (drawer style)\\r\\n     * It can be one of the predefined `UiModalTypeEnum` values.\\r\\n     * Default value is `UiModalTypeEnum.Modal`.\\r\\n     *\\r\\n     * @description This will default to \'Modal\' so that\\r\\n     *      existing implementations that expect the component to\\r\\n     *      be a modal will still render correctly.\\r\\n     * @default Modal == `UiModalTypeEnum.Modal`\\r\\n     */\\r\\n    public modalType?: UiModalTypeEnum = UiModalTypeEnum.Modal;\\r\\n\\r\\n    /**\\r\\n     * Specifies whether the modal dialog should be animated.\\r\\n     */\\r\\n    public animation?: boolean = undefined;\\r\\n\\r\\n    constructor(options?: UiModalConfig) {\\r\\n        if (options) {\\r\\n            this.ariaLabelledBy = options.ariaLabelledBy || this.ariaLabelledBy;\\r\\n            this.ariaDescribedBy = options.ariaDescribedBy || this.ariaDescribedBy;\\r\\n            this.centered = options.centered !== undefined && options.centered !== null ? options.centered : true;\\r\\n            this.scrollable = options.scrollable !== undefined && options.scrollable !== null ? options.scrollable : true;\\r\\n            this.size = options.size ? options.size : UiModalDialogSizeEnum.md;\\r\\n            this.modalDialogClass = options.modalDialogClass ? options.modalDialogClass : \'\';\\r\\n            this.panelClass = options.panelClass ? options.panelClass : \'\';\\r\\n            // There is no default for `modalType` to use the service and config a type must be passed\\r\\n            this.modalType = options.modalType !== undefined && options.modalType !== null ? options.modalType : this.modalType;\\r\\n            this.animation = options.animation !== undefined && options.animation !== null ? options.animation : undefined;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"options","type":"UiModalConfig","deprecated":false,"deprecationMessage":"","optional":true}],"line":79,"jsdoctags":[{"name":"options","type":"UiModalConfig","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"animation","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Specifies whether the modal dialog should be animated.</p>\\n","line":79,"rawdescription":"\\n\\nSpecifies whether the modal dialog should be animated.\\n","modifierKind":[123]},{"name":"ariaDescribedBy","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the <code>aria-describedby</code> attribute value to be applied to the modal dialog.</p>\\n","line":17,"rawdescription":"\\n\\nSpecifies the `aria-describedby` attribute value to be applied to the modal dialog.\\n","modifierKind":[123]},{"name":"ariaLabelledBy","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the <code>aria-labelledby</code> attribute value to be applied to the modal dialog.</p>\\n","line":12,"rawdescription":"\\n\\nSpecifies the `aria-labelledby` attribute value to be applied to the modal dialog.\\n","modifierKind":[123]},{"name":"centered","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Specifies whether the modal dialog should be centered vertically and horizontally.\\nDefault value is <code>true</code>.</p>\\n","line":25,"rawdescription":"\\n\\nSpecifies whether the modal dialog should be centered vertically and horizontally.\\nDefault value is `true`.\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":716,"end":736,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":717,"end":724,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}]},{"name":"modalDialogClass","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the CSS class(es) to be applied to the modal dialog.\\nNOTE: only works with &#39;Modal&#39; (dialog) types.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">To add icon to a modal add class: &#39;modal-icon&#39;</code></pre></div>","line":52,"rawdescription":"\\n\\nSpecifies the CSS class(es) to be applied to the modal dialog.\\nNOTE: only works with \'Modal\' (dialog) types.\\n\\n```html\\nTo add icon to a modal add class: \'modal-icon\'\\n```","modifierKind":[123],"jsdoctags":[{"pos":1472,"end":1508,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1473,"end":1481,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"memberof"},"comment":"<p><code>NgbModalOptions</code></p>\\n"},{"pos":1508,"end":1578,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1509,"end":1516,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>To add icon to a modal add class: &#39;modal-icon&#39;</p>\\n"}]},{"name":"modalType","defaultValue":"UiModalTypeEnum.Modal","deprecated":false,"deprecationMessage":"","type":"UiModalTypeEnum","optional":true,"description":"<p>Specifies the type of the modal dialog; &#39;Modal&#39; (dialog style) or &#39;Offcanvas&#39; (drawer style)\\nIt can be one of the predefined <code>UiModalTypeEnum</code> values.\\nDefault value is <code>UiModalTypeEnum.Modal</code>.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-none\\"> existing implementations that expect the component to\\n be a modal will still render correctly.</code></pre></div>","line":74,"rawdescription":"\\n\\nSpecifies the type of the modal dialog; \'Modal\' (dialog style) or \'Offcanvas\' (drawer style)\\nIt can be one of the predefined `UiModalTypeEnum` values.\\nDefault value is `UiModalTypeEnum.Modal`.\\n\\n     existing implementations that expect the component to\\n     be a modal will still render correctly.\\n","modifierKind":[123],"jsdoctags":[{"pos":2193,"end":2371,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2194,"end":2205,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>This will default to &#39;Modal&#39; so that\\nexisting implementations that expect the component to\\nbe a modal will still render correctly.</p>\\n"},{"pos":2371,"end":2419,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2372,"end":2379,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>Modal == <code>UiModalTypeEnum.Modal</code></p>\\n"}]},{"name":"panelClass","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the CSS class(es) to be applied to the offcanvas panel.\\nNOTE: only works with &#39;Offcanvas&#39; (drawer) types.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">To add icon to a modal add class: &#39;no-borders&#39;</code></pre></div>","line":62,"rawdescription":"\\n\\nSpecifies the CSS class(es) to be applied to the offcanvas panel.\\nNOTE: only works with \'Offcanvas\' (drawer) types.\\n\\n```html\\nTo add icon to a modal add class: \'no-borders\'\\n```","modifierKind":[123],"jsdoctags":[{"pos":1791,"end":1831,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1792,"end":1800,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"memberof"},"comment":"<p><code>NgbOffcanvasOptions</code></p>\\n"},{"pos":1831,"end":1901,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1832,"end":1839,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>To add icon to a modal add class: &#39;no-borders&#39;</p>\\n"}]},{"name":"scrollable","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Specifies whether the modal dialog should be scrollable.\\nDefault value is <code>true</code>.</p>\\n","line":33,"rawdescription":"\\n\\nSpecifies whether the modal dialog should be scrollable.\\nDefault value is `true`.\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":903,"end":923,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":904,"end":911,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}]},{"name":"size","defaultValue":"UiModalDialogSizeEnum.md","deprecated":false,"deprecationMessage":"","type":"string | UiModalDialogSizeEnum","optional":true,"description":"<p>Specifies the size of the modal dialog.\\nIt can be a string or one of the predefined <code>UiModalDialogSizeEnum</code> values.\\nDefault value is <code>UiModalDialogSizeEnum.md</code>.</p>\\n","line":42,"rawdescription":"\\n\\nSpecifies the size of the modal dialog.\\nIt can be a string or one of the predefined `UiModalDialogSizeEnum` values.\\nDefault value is `UiModalDialogSizeEnum.md`.\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":1179,"end":1239,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1180,"end":1187,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>Medium == &#39;md&#39; == <code>UiModalDialogSizeEnum.md</code></p>\\n"}]}],"description":"<p>Represents the configuration options for Ui Modals</p>\\n","rawdescription":"\\n\\nRepresents the configuration options for Ui Modals\\n","methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiPasteClipboard","id":"class-UiPasteClipboard-62f31fc2ca077c780fc2690166da05c6536e1a124b9c220e37c1cd5032d3296c4e2a0e095280a6566afbcd99fde08031e1658f202edc73ccb8c82c56ec3593d6","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import * as QuillNamespace from \'quill\';\\r\\nconst Quill: any = QuillNamespace;\\r\\nimport sanitizeHtml from \'sanitize-html\';\\r\\n\\r\\nconst Clipboard = Quill.import(\'modules/clipboard\');\\r\\nconst Delta = Quill.import(\'delta\');\\r\\nexport default class UiPasteClipboard extends Clipboard {\\r\\n    public onPaste(e) {\\r\\n        if (e.defaultPrevented || !this.quill.isEnabled()) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const range = this.quill.getSelection();\\r\\n        let delta = new Delta().retain(range.index);\\r\\n\\r\\n        if (e && e.clipboardData && e.clipboardData.types && e.clipboardData.getData) {\\r\\n            const text =\\r\\n                (e.originalEvent || e).clipboardData.getData(\'text/html\') || (e.originalEvent || e).clipboardData.getData(\'text/plain\');\\r\\n            const newEl = document.createElement(\'div\');\\r\\n            newEl.id = \'paste-\' + this.quill.id;\\r\\n            newEl.innerHTML = text;\\r\\n            //Copy and paste from google docs doesnt include proper tags\\r\\n            //Finds css style and inserts tag\\r\\n            newEl.querySelectorAll(\'span\').forEach((el) => {\\r\\n                let newHtml = el.innerHTML;\\r\\n                if (el.style.textDecoration === \'underline\' || el.style.textDecorationLine === \'underline\') {\\r\\n                    newHtml = \'<u>\' + newHtml + \'</u>\';\\r\\n                }\\r\\n                if (el.style.fontWeight === \'700\') {\\r\\n                    newHtml = \'<strong>\' + newHtml + \'</strong>\';\\r\\n                }\\r\\n                if (el.style.fontStyle === \'italic\') {\\r\\n                    newHtml = \'<em>\' + newHtml + \'</em>\';\\r\\n                }\\r\\n\\r\\n                el.outerHTML = newHtml;\\r\\n            });\\r\\n\\r\\n            const unsanitizedText = sanitizeHtml(newEl.innerHTML, {\\r\\n                allowedTags: [\'i\', \'em\', \'strong\', \'u\', \'a\', \'small\', \'p\', \'h4\', \'h5\', \'sup\', \'sub\', \'ol\', \'ul\', \'li\', \'br\'],\\r\\n                transformTags: {\\r\\n                    h1: \'h4\',\\r\\n                    h2: \'h4\',\\r\\n                    h3: \'h5\',\\r\\n                    //h4: \'h5\',\\r\\n                    /* target: function (tagName, attribs) {\\r\\n                        return {\\r\\n                            tagName: \'target\',\\r\\n                            text: \'_blank\',\\r\\n                        };\\r\\n                    }, */\\r\\n                },\\r\\n                allowedAttributes: {\\r\\n                    a: [\'href\', \'target: blank\'],\\r\\n                },\\r\\n                allowedClasses: [],\\r\\n            });\\r\\n            newEl.remove();\\r\\n            const cleanedText = this.convert(unsanitizedText);\\r\\n            e.stopPropagation();\\r\\n            e.preventDefault();\\r\\n            delta = delta.concat(cleanedText).delete(range.length);\\r\\n            this.quill.updateContents(delta, Quill.sources.USER);\\r\\n            this.quill.setSelection(delta.length() - range.length, Quill.sources.SILENT);\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","properties":[],"methods":[{"name":"onPaste","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"Clipboard","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiPasteClipboard","id":"class-UiPasteClipboard-62376d9815fdbb466b18b0cd3f63a6b42e56499f829f95c02ef6365d3ef270eed4bff07da2223666d8e5f69b1bf41911a783b71f919851afbcf0aefcb834d0fd-1","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import * as QuillNamespace from \'quill\';\\r\\nconst Quill: any = QuillNamespace;\\r\\nimport sanitizeHtml from \'sanitize-html\';\\r\\n\\r\\nconst Clipboard = Quill.import(\'modules/clipboard\');\\r\\nconst Delta = Quill.import(\'delta\');\\r\\nexport default class UiPasteClipboard extends Clipboard {\\r\\n    public onPaste(e) {\\r\\n        if (e.defaultPrevented || !this.quill.isEnabled()) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const range = this.quill.getSelection();\\r\\n        let delta = new Delta().retain(range.index);\\r\\n\\r\\n        if (e && e.clipboardData && e.clipboardData.types && e.clipboardData.getData) {\\r\\n            const text =\\r\\n                (e.originalEvent || e).clipboardData.getData(\'text/html\') || (e.originalEvent || e).clipboardData.getData(\'text/plain\');\\r\\n            const newEl = document.createElement(\'div\');\\r\\n            newEl.id = \'paste-\' + this.quill.id;\\r\\n            newEl.innerHTML = text;\\r\\n            //Copy and paste from google docs doesnt include proper tags\\r\\n            //Finds css style and inserts tag\\r\\n            newEl.querySelectorAll(\'span\').forEach((el) => {\\r\\n                let newHtml = el.innerHTML;\\r\\n                if (el.style.textDecoration === \'underline\' || el.style.textDecorationLine === \'underline\') {\\r\\n                    newHtml = \'<u>\' + newHtml + \'</u>\';\\r\\n                }\\r\\n                if (el.style.fontWeight === \'700\') {\\r\\n                    newHtml = \'<strong>\' + newHtml + \'</strong>\';\\r\\n                }\\r\\n                if (el.style.fontStyle === \'italic\') {\\r\\n                    newHtml = \'<em>\' + newHtml + \'</em>\';\\r\\n                }\\r\\n\\r\\n                el.outerHTML = newHtml;\\r\\n            });\\r\\n\\r\\n            const unsanitizedText = sanitizeHtml(newEl.innerHTML, {\\r\\n                allowedTags: [\'i\', \'em\', \'strong\', \'u\', \'a\', \'small\', \'p\', \'h4\', \'h5\', \'sup\', \'sub\', \'ol\', \'ul\', \'li\', \'br\'],\\r\\n                transformTags: {\\r\\n                    h1: \'h4\',\\r\\n                    h2: \'h4\',\\r\\n                    h3: \'h5\',\\r\\n                    //h4: \'h5\',\\r\\n                    /* target: function (tagName, attribs) {\\r\\n                        return {\\r\\n                            tagName: \'target\',\\r\\n                            text: \'_blank\',\\r\\n                        };\\r\\n                    }, */\\r\\n                },\\r\\n                allowedAttributes: {\\r\\n                    a: [\'href\', \'target: blank\'],\\r\\n                },\\r\\n                allowedClasses: [],\\r\\n            });\\r\\n            newEl.remove();\\r\\n            const cleanedText = this.convert(unsanitizedText);\\r\\n            e.stopPropagation();\\r\\n            e.preventDefault();\\r\\n            delta = delta.concat(cleanedText).delete(range.length);\\r\\n            this.quill.updateContents(delta, Quill.sources.USER);\\r\\n            this.quill.setSelection(delta.length() - range.length, Quill.sources.SILENT);\\r\\n            return false;\\r\\n        }\\r\\n        /* Copy event for future implementation\\r\\n        addEventListener(\'copy\', (e) => {\\r\\n        }); */\\r\\n    }\\r\\n}\\r\\n","properties":[],"methods":[{"name":"onPaste","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"Clipboard","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiPasteClipboard-1"},{"name":"UiPermissionsModel","id":"class-UiPermissionsModel-27fb0399cd760ed030b139f43f2fd0aa5d0c0fdfef846e736461bc670f851750a508e455ec09d23e315f210540283dc82ec3acc6e695b8f57fe15148d18db14d","file":"libs/ui/src/lib/services/user/models/permissions.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { IUiPermissions } from \'../interfaces\';\\r\\n\\r\\nexport class UiPermissionsModel implements IUiPermissions {\\r\\n    public userManagement: false;\\r\\n    public exceptionManagement: false;\\r\\n    public segmentationReport: false;\\r\\n    public editCompanyProfile: false;\\r\\n    public viewCompanyProfile: false;\\r\\n    public viewContactManagement: false;\\r\\n    public editContactManagement: false;\\r\\n    public accessDeclarationSearch: false;\\r\\n    public accessTransactionLogs: false;\\r\\n    public accessIndirectMonitoring: false;\\r\\n    public viewIndirectMonitoringRecords: false;\\r\\n    public addIndirectMonitoringRecords: false;\\r\\n    public editIndirectMonitoringRecords: false;\\r\\n    public deleteIndirectMonitoringRecords: false;\\r\\n    public viewIndirectMonitoringKeywordsList: false;\\r\\n    public addIndirectMonitoringKeywordsList: false;\\r\\n    public editIndirectMonitoringKeywordsList: false;\\r\\n    public deleteIndirectMonitoringKeywordsList: false;\\r\\n    public accessCorrectiveActions: false;\\r\\n    public fullViewCorrectiveActionRecords: false;\\r\\n    public viewAssignedCorrectiveActionRecords: false;\\r\\n    public addCorrectiveActionRecords: false;\\r\\n    public editCorrectiveActionRecords: false;\\r\\n    public deleteCorrectiveActionRecords: false;\\r\\n    public respondToCorrectiveActions: false;\\r\\n    public manageCorrectiveActionTemplates: false;\\r\\n    public viewNoMatchSuppliers: false;\\r\\n    public viewDraftOrganizations: false;\\r\\n    public viewNetworkDeclarations: false;\\r\\n    public accessEvidenceReview: false;\\r\\n    public modifyReview: false;\\r\\n    public manageEvidenceType: false;\\r\\n    public manageReviewCriteria: false;\\r\\n    public viewEvidenceReview: false;\\r\\n    public manageEvidenceTypeMapping: false;\\r\\n    public accessCustomerRequests: false;\\r\\n    public accessPartLevelCustomerRequests: false;\\r\\n    public aud: string[];\\r\\n}\\r\\n","properties":[{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"aud","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":6,"modifierKind":[123]},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"userManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9,"modifierKind":[123]},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[123]},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"implements":["IUiPermissions"]},{"name":"UiUtils","id":"class-UiUtils-82674884ee999c4e7228821c4414c738467e3d8baffc492b2255e27d767e09667f651a891034d79d001bb093e0ab5bc19057ba55f68ede7271d6099afff5c031","file":"libs/ui/src/lib/classes/utils.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export default class UiUtils {\\r\\n    public static isArray(value: any): boolean {\\r\\n        return Array.isArray(value);\\r\\n    }\\r\\n\\r\\n    public static isNil(value: any): value is null | undefined {\\r\\n        return value === null || typeof value === \'undefined\';\\r\\n    }\\r\\n\\r\\n    public static isString(value: any): value is string {\\r\\n        return typeof value === \'string\';\\r\\n    }\\r\\n\\r\\n    public static isObject(value: any): boolean {\\r\\n        return typeof value === \'object\';\\r\\n    }\\r\\n\\r\\n    public static getProperty(value: { [key: string]: any }, key: string): any {\\r\\n        if (UiUtils.isNil(value) || !UiUtils.isObject(value) || !(key in value)) {\\r\\n            return undefined;\\r\\n        }\\r\\n\\r\\n        return value[key];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns a number indicating whether a reference string comes before,\\r\\n     * or after, or is the same as the given string in sort order\\r\\n     *\\r\\n     * @param valueA reference string\\r\\n     * @param valueB compare string\\r\\n     * @returns -1: A before B, 1: A after B, 0: equal\\r\\n     */\\r\\n    public static compareCaseInsensitive(valueA: string, valueB: string): number {\\r\\n        if (typeof valueA !== \'string\' || typeof valueB !== \'string\') {\\r\\n            throw new Error(\'Invalid parameter type\');\\r\\n        }\\r\\n\\r\\n        return valueA.toLowerCase().localeCompare(valueB.toLowerCase());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Returns a number indicating whether a reference array of strings comes before,\\r\\n     * or after, or is the same as the given array of strings in sort order\\r\\n     *\\r\\n     * @param valueA reference array of strings\\r\\n     * @param valueB compare array of strings\\r\\n     * @returns -1: [A] before [B], 1: [A] after [B], 0: equal\\r\\n     */\\r\\n    public static compareCaseInsensitiveArray(valueA: string[], valueB: string[]): number {\\r\\n        if (!Array.isArray(valueA) || !Array.isArray(valueB)) {\\r\\n            throw new Error(\'Invalid parameter type\');\\r\\n        }\\r\\n\\r\\n        return valueA.join().toLowerCase().localeCompare(valueB.join().toLowerCase());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Compares array values in AG-grid column\\r\\n     * AG-grid returns array on sort and string, when menu icon is clicked\\r\\n     * This method handles this behavior and compare both value types\\r\\n     *\\r\\n     * @param valueA array type on sort and string type on menu\\r\\n     * @param valueB array type on sort and string type on menu\\r\\n     * @returns  -1: [A] before [B], 1: [A] after [B], 0: equal\\r\\n     */\\r\\n    public static compareCaseInsensitiveAgGridArray(valueA: string | string[], valueB: string | string[]): number {\\r\\n        let compareResult: number;\\r\\n        if (Array.isArray(valueA) && Array.isArray(valueB)) {\\r\\n            // This is used on AG-grid sort\\r\\n            compareResult = UiUtils.compareCaseInsensitiveArray(valueA || [], valueB || []);\\r\\n        } else {\\r\\n            // This is used when AG-grid menu icon is clicked\\r\\n            compareResult = UiUtils.compareCaseInsensitive(valueA as string, valueB as string);\\r\\n        }\\r\\n\\r\\n        return compareResult;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Compares Date values in AG-grid column\\r\\n     *\\r\\n     * @returns -1, 1, 0\\r\\n     */\\r\\n    public static compareAgGridDates(filterLocalDateAtMidnight: Date, cellValue: string): number {\\r\\n        const cellDate = new Date(cellValue);\\r\\n        cellDate.setHours(0, 0, 0, 0);\\r\\n\\r\\n        if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (cellDate < filterLocalDateAtMidnight) {\\r\\n            return -1;\\r\\n        }\\r\\n\\r\\n        if (cellDate > filterLocalDateAtMidnight) {\\r\\n            return 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Removes all non ASCI characters\\r\\n     *\\r\\n     * @param value containing non ASCI characters\\r\\n     * @returns the input value without non ASCI characters\\r\\n     */\\r\\n    public static removeNonAscii(value: string): string {\\r\\n        if (!value) {\\r\\n            throw new Error(\'Undefined parameter\');\\r\\n        }\\r\\n\\r\\n        if (typeof value !== \'string\') {\\r\\n            throw new Error(\'Invalid parameter type\');\\r\\n        }\\r\\n\\r\\n        return value.replace(/[^\\\\x20-\\\\x7E]/g, \'\');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Encodes a URI by replacing each instance of certain characters\\r\\n     * by escape sequences representing the UTF-8 encoding of the character\\r\\n     *\\r\\n     * @param value unencoded URL value\\r\\n     * @returns encoded URL value\\r\\n     */\\r\\n    public static encodeURI(value: string): string {\\r\\n        if (!value) {\\r\\n            throw new Error(\'Undefined parameter\');\\r\\n        }\\r\\n\\r\\n        if (typeof value !== \'string\') {\\r\\n            throw new Error(\'Invalid parameter type\');\\r\\n        }\\r\\n\\r\\n        return encodeURIComponent(value).replace(/[!\'()*]/g, (char) => {\\r\\n            return \'%\' + char.charCodeAt(0).toString(16);\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","properties":[],"description":"<p>Helper class</p>\\n","rawdescription":"\\n\\nHelper class\\n","methods":[{"name":"compareAgGridDates","args":[{"name":"filterLocalDateAtMidnight","type":"Date","deprecated":false,"deprecationMessage":""},{"name":"cellValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompares Date values in AG-grid column\\n\\n","description":"<p>Compares Date values in AG-grid column</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"filterLocalDateAtMidnight","type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cellValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":3115,"end":3122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1, 1, 0</p>\\n"}]},{"name":"compareCaseInsensitive","args":[{"name":"valueA","type":"string","deprecated":false,"deprecationMessage":""},{"name":"valueB","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns a number indicating whether a reference string comes before,\\nor after, or is the same as the given string in sort order\\n\\n","description":"<p>Returns a number indicating whether a reference string comes before,\\nor after, or is the same as the given string in sort order</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":931,"end":937,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueA"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":925,"end":930,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>reference string</p>\\n"},{"name":{"pos":970,"end":976,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueB"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":964,"end":969,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>compare string</p>\\n"},{"tagName":{"pos":1001,"end":1008,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1: A before B, 1: A after B, 0: equal</p>\\n"}]},{"name":"compareCaseInsensitiveAgGridArray","args":[{"name":"valueA","type":"string | string[]","deprecated":false,"deprecationMessage":""},{"name":"valueB","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompares array values in AG-grid column\\nAG-grid returns array on sort and string, when menu icon is clicked\\nThis method handles this behavior and compare both value types\\n\\n","description":"<p>Compares array values in AG-grid column\\nAG-grid returns array on sort and string, when menu icon is clicked\\nThis method handles this behavior and compare both value types</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":2267,"end":2273,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueA"},"type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2261,"end":2266,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>array type on sort and string type on menu</p>\\n"},{"name":{"pos":2332,"end":2338,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueB"},"type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2326,"end":2331,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>array type on sort and string type on menu</p>\\n"},{"tagName":{"pos":2391,"end":2398,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1: [A] before [B], 1: [A] after [B], 0: equal</p>\\n"}]},{"name":"compareCaseInsensitiveArray","args":[{"name":"valueA","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"valueB","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns a number indicating whether a reference array of strings comes before,\\nor after, or is the same as the given array of strings in sort order\\n\\n","description":"<p>Returns a number indicating whether a reference array of strings comes before,\\nor after, or is the same as the given array of strings in sort order</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":1562,"end":1568,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueA"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1556,"end":1561,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>reference array of strings</p>\\n"},{"name":{"pos":1611,"end":1617,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueB"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1605,"end":1610,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>compare array of strings</p>\\n"},{"tagName":{"pos":1652,"end":1659,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1: [A] before [B], 1: [A] after [B], 0: equal</p>\\n"}]},{"name":"encodeURI","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEncodes a URI by replacing each instance of certain characters\\nby escape sequences representing the UTF-8 encoding of the character\\n\\n","description":"<p>Encodes a URI by replacing each instance of certain characters\\nby escape sequences representing the UTF-8 encoding of the character</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":4306,"end":4311,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4300,"end":4305,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>unencoded URL value</p>\\n"},{"tagName":{"pos":4341,"end":4348,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>encoded URL value</p>\\n"}]},{"name":"getProperty","args":[{"name":"value","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isArray","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isNil","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | undefined","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isObject","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isString","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeNonAscii","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves all non ASCI characters\\n\\n","description":"<p>Removes all non ASCI characters</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":3699,"end":3704,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":3693,"end":3698,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>containing non ASCI characters</p>\\n"},{"tagName":{"pos":3745,"end":3752,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>the input value without non ASCI characters</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[{"name":"UiDragDropDirective","id":"directive-UiDragDropDirective-2b2633a992aa76dff013d392c5cb60a57a6623e6ba65ab3b9d053d40b311110388078f36dcb744412b7e308bd19161efd0eeff24ca02556852f671f3b5128faf","file":"libs/ui/src/lib/modules/file-upload/directives/drag-drop.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, Output, EventEmitter, HostBinding, HostListener, Input } from \'@angular/core\';\\r\\n\\r\\n@Directive({\\r\\n    selector: \'[uiDragDrop]\',\\r\\n})\\r\\nexport class UiDragDropDirective {\\r\\n    @HostBinding(\'class.fileover\') public fileOver: boolean;\\r\\n    @Output() public fileDropped = new EventEmitter<any>();\\r\\n    @Input() public disabled = false;\\r\\n\\r\\n    // Dragover listener\\r\\n    @HostListener(\'dragover\', [\'$event\']) public onDragOver(evt) {\\r\\n        evt.preventDefault();\\r\\n        evt.stopPropagation();\\r\\n        this.fileOver = true;\\r\\n    }\\r\\n\\r\\n    // Dragleave listener\\r\\n    @HostListener(\'dragleave\', [\'$event\']) public onDragLeave(evt) {\\r\\n        evt.preventDefault();\\r\\n        evt.stopPropagation();\\r\\n        this.fileOver = false;\\r\\n    }\\r\\n\\r\\n    // Drop listener\\r\\n    @HostListener(\'drop\', [\'$event\']) public ondrop(evt) {\\r\\n        evt.preventDefault();\\r\\n        evt.stopPropagation();\\r\\n        this.fileOver = false;\\r\\n        const files = evt.dataTransfer.files;\\r\\n        if (files.length > 0 && this.disabled === false) {\\r\\n            this.fileDropped.emit(files);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","selector":"[uiDragDrop]","providers":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"fileDropped","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":21,"type":"EventEmitter"}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class.fileover","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]}],"hostListeners":[{"name":"dragleave","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":32},{"name":"dragover","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":25},{"name":"drop","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":39}],"propertiesClass":[{"name":"fileOver","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'class.fileover\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"onDragLeave","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'dragleave\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onDragOver","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'dragover\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ondrop","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'drop\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},{"name":"UiHasPermissionDirective","id":"directive-UiHasPermissionDirective-7f12be2da9a375d17006ac54ae2905074cc88d150a6cfb3319ac9089ef53fc600a15ea19a4c7fe5a0267da8cdd893afee892e67add0df5dea0ba8e3febac578e","file":"libs/ui/src/lib/modules/permissions/directives/has-permission.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, Input, TemplateRef, ViewContainerRef } from \'@angular/core\';\\r\\n// RxJS\\r\\nimport { take } from \'rxjs/operators\';\\r\\n// Services\\r\\nimport { UiPermissionsEnum, UiUserService } from \'@lib/services/user\';\\r\\n\\r\\n@Directive({\\r\\n    selector: \'[uiHasPermission]\',\\r\\n})\\r\\n/**\\r\\n * Hides the attached element if the authenticated user hasn\'t permissions to see it\\r\\n */\\r\\nexport class UiHasPermissionDirective {\\r\\n    constructor(private _viewContainer: ViewContainerRef, private _templateRef: TemplateRef<any>, private _userService: UiUserService) {}\\r\\n\\r\\n    /**\\r\\n     * Sets required permissions\\r\\n     */\\r\\n    @Input() public set uiHasPermission(permissions: UiPermissionsEnum[]) {\\r\\n        this._userService\\r\\n            .hasPermission(permissions)\\r\\n            .pipe(take(1))\\r\\n            .subscribe((hasPermission: boolean) => {\\r\\n                this.updateView(hasPermission);\\r\\n            });\\r\\n    }\\r\\n\\r\\n    private updateView(showElement: boolean) {\\r\\n        if (showElement) {\\r\\n            this._viewContainer.createEmbeddedView(this._templateRef);\\r\\n        } else {\\r\\n            this._viewContainer.clear();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","selector":"[uiHasPermission]","providers":[],"inputsClass":[{"name":"uiHasPermission","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets required permissions\\n","description":"<p>Sets required permissions</p>\\n","line":20,"type":"UiPermissionsEnum[]","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[],"methodsClass":[{"name":"updateView","args":[{"name":"showElement","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"showElement","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"uiHasPermission":{"name":"uiHasPermission","setSignature":{"name":"uiHasPermission","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"permissions","type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":20,"rawdescription":"\\n\\nSets required permissions\\n","description":"<p>Sets required permissions</p>\\n","jsdoctags":[{"name":"permissions","type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"UiIsFlagOffDirective","id":"directive-UiIsFlagOffDirective-8c33ca2e1546c46b945a3f873ae1b711e0f04799b6942388306a16f290995745185494c516affc7c9225c55d435607df1bbf8591a86cf3c1ba036df2654969a0","file":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-off.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import \'@lib/extensions/observable.extensions\';\\r\\nimport { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from \'@angular/core\';\\r\\nimport { UiFeatureFlagService } from \'@lib/modules/feature-flags/services/feature-flag.service\';\\r\\n\\r\\n@Directive({ selector: \'[uiIsFlagOff]\' })\\r\\nexport class UiIsFlagOffDirective implements OnInit {\\r\\n    private _fallbackTemplate: TemplateRef<any> | null = null;\\r\\n    private _featureFlagName: string;\\r\\n\\r\\n    constructor(\\r\\n        private _templateRef: TemplateRef<any>,\\r\\n        private _viewContainer: ViewContainerRef,\\r\\n        private _featureFlagService: UiFeatureFlagService\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this._viewContainer.clear();\\r\\n\\r\\n        // If _featureFlagName is null or is undefined, will show the feature. (Flag Bypass)\\r\\n        if (this._featureFlagName === null || this._featureFlagName === undefined) {\\r\\n            this._viewContainer.createEmbeddedView(this._templateRef);\\r\\n        }\\r\\n        // Else evaluate the feature flag and update the content\\r\\n        else {\\r\\n            this._featureFlagService.isFlagOn(this._featureFlagName).once((result) => {\\r\\n                if (!result) {\\r\\n                    this._viewContainer.createEmbeddedView(this._templateRef);\\r\\n                } else if (this._fallbackTemplate) {\\r\\n                    this._viewContainer.createEmbeddedView(this._fallbackTemplate);\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    @Input() public set uiIsFlagOff(featureFlagName: string) {\\r\\n        this._featureFlagName = featureFlagName;\\r\\n    }\\r\\n\\r\\n    @Input() public set uiIsFlagOffFallback(template: TemplateRef<any> | null) {\\r\\n        this._fallbackTemplate = template;\\r\\n    }\\r\\n}\\r\\n","selector":"[uiIsFlagOff]","providers":[],"inputsClass":[{"name":"uiIsFlagOff","deprecated":false,"deprecationMessage":"","line":35,"type":"string","decorators":[]},{"name":"uiIsFlagOffFallback","deprecated":false,"deprecationMessage":"","line":39,"type":"TemplateRef | null","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"_fallbackTemplate","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | null","optional":false,"description":"","line":7,"modifierKind":[121]},{"name":"_featureFlagName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[121]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"implements":["OnInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"uiIsFlagOff":{"name":"uiIsFlagOff","setSignature":{"name":"uiIsFlagOff","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":35,"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"uiIsFlagOffFallback":{"name":"uiIsFlagOffFallback","setSignature":{"name":"uiIsFlagOffFallback","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"UiIsFlagOnDirective","id":"directive-UiIsFlagOnDirective-79364a2832b8f985ef8659517518e0325ef96ccc0ebb19183356c295da6ccc62ae91124a2ac9007cd217bf544af54a88ea57a4f342c1089f120e6cafe96abbd6","file":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-on.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import \'@lib/extensions/observable.extensions\';\\r\\nimport { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from \'@angular/core\';\\r\\nimport { UiFeatureFlagService } from \'@lib/modules/feature-flags/services/feature-flag.service\';\\r\\n\\r\\n@Directive({ selector: \'[uiIsFlagOn]\' })\\r\\nexport class UiIsFlagOnDirective implements OnInit {\\r\\n    private _fallbackTemplate: TemplateRef<any> | null = null;\\r\\n    private _featureFlagName: string;\\r\\n\\r\\n    constructor(\\r\\n        private _templateRef: TemplateRef<any>,\\r\\n        private _viewContainer: ViewContainerRef,\\r\\n        private _featureFlagService: UiFeatureFlagService\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this._viewContainer.clear();\\r\\n\\r\\n        // If _featureFlagName is null or is undefined, will show the feature. (Flag Bypass)\\r\\n        if (this._featureFlagName === null || this._featureFlagName === undefined) {\\r\\n            this._viewContainer.createEmbeddedView(this._templateRef);\\r\\n        }\\r\\n        // Else evaluate the feature flag and update the content\\r\\n        else {\\r\\n            this._featureFlagService.isFlagOn(this._featureFlagName).once((result) => {\\r\\n                if (result) {\\r\\n                    this._viewContainer.createEmbeddedView(this._templateRef);\\r\\n                } else if (this._fallbackTemplate) {\\r\\n                    this._viewContainer.createEmbeddedView(this._fallbackTemplate);\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    @Input() public set uiIsFlagOn(featureFlagName: string) {\\r\\n        this._featureFlagName = featureFlagName;\\r\\n    }\\r\\n\\r\\n    @Input() public set uiIsFlagOnFallback(template: TemplateRef<any> | null) {\\r\\n        this._fallbackTemplate = template;\\r\\n    }\\r\\n}\\r\\n","selector":"[uiIsFlagOn]","providers":[],"inputsClass":[{"name":"uiIsFlagOn","deprecated":false,"deprecationMessage":"","line":35,"type":"string","decorators":[]},{"name":"uiIsFlagOnFallback","deprecated":false,"deprecationMessage":"","line":39,"type":"TemplateRef | null","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"_fallbackTemplate","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | null","optional":false,"description":"","line":7,"modifierKind":[121]},{"name":"_featureFlagName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[121]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"implements":["OnInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"uiIsFlagOn":{"name":"uiIsFlagOn","setSignature":{"name":"uiIsFlagOn","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":35,"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"uiIsFlagOnFallback":{"name":"uiIsFlagOnFallback","setSignature":{"name":"uiIsFlagOnFallback","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}}],"components":[{"name":"UiAcpConfirmDeleteSessionModalComponent","id":"component-UiAcpConfirmDeleteSessionModalComponent-c8a331b405d6f8ab627c5f7eb09ecf65e298013e3d77fdeeaa8b2f37ac38562bf97479342d364249723e73963e358771456b7acb8ee9e970430b7fad901f0b9e","file":"libs/ui/src/lib/modules/user-auth-manager/components/confirm-delete-session-modal/confirm-delete-session-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"templateUrl":["./confirm-delete-session-modal.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onCancelClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSignOutClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\r\\n// Ngx\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n// Ngb\\r\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Services\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiAuthenticationService } from \'@lib/services/authentication/authentication.service\';\\r\\n\\r\\n@Component({\\r\\n    templateUrl: \'./confirm-delete-session-modal.component.html\',\\r\\n})\\r\\nexport class UiAcpConfirmDeleteSessionModalComponent {\\r\\n    constructor(\\r\\n        private _activeModal: NgbActiveModal,\\r\\n        private _authService: UiAuthenticationService,\\r\\n        private _configService: UiConfigurationService,\\r\\n        private _cookieService: CookieService\\r\\n    ) {}\\r\\n\\r\\n    public onCancelClick() {\\r\\n        this._activeModal.dismiss();\\r\\n    }\\r\\n\\r\\n    public onSignOutClick() {\\r\\n        this._cookieService.set(this._configService.appConfig.forceAllSessionsLogoutCookieName, \'true\');\\r\\n        this._authService.logout();\\r\\n        this._activeModal.close();\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"_activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div>\\r\\n    <div class=\\"modal-header\\">\\r\\n        <h3 class=\\"modal-title\\">{{ \'COMMON.LOG_OUT_OF_ALL_SESSIONS_TITLE\' | translate }}</h3>\\r\\n        <button type=\\"button\\" class=\\"btn\\" aria-label=\\"Close\\" aria-hidden=\\"true\\" tabindex=\\"-1\\" (click)=\\"onCancelClick()\\">\\r\\n            <i class=\\"bi bi-x\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\"modal-body multiline-translated-text\\">\\r\\n        <p>{{ \'AUTHENTICATION.SIGN_OUT_OF_ALL_SESSIONS_WARNING\' | translate }}</p>\\r\\n    </div>\\r\\n    <div class=\\"modal-footer\\">\\r\\n        <button type=\\"button\\" class=\\"btn btn-outline-primary\\" (click)=\\"onCancelClick()\\">\\r\\n            {{ \'COMMON.CANCEL\' | translate }}\\r\\n        </button>\\r\\n        <button type=\\"button\\" class=\\"btn btn-primary\\" (click)=\\"onSignOutClick()\\">\\r\\n            {{ \'COMMON.LOG_OUT\' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiAcpContactInformationSectionComponent","id":"component-UiAcpContactInformationSectionComponent-30ba63d28138f2422e3b24a1c8fd670d9058a2f860eedb15d2f5bf6d4e88b6bdde629519924b8183a811d02cc1382a7a2e54828ed6fe080d39730bddae4e0775","file":"libs/ui/src/lib/modules/user-auth-manager/components/contact-information-section/contact-information-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-contact-information-section","styleUrls":[],"styles":[],"templateUrl":["contact-information-section.component.html"],"viewProviders":[],"inputsClass":[{"name":"person","deprecated":false,"deprecationMessage":"","line":24,"type":"IUiPersonDetails","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_person","deprecated":false,"deprecationMessage":"","type":"IUiPersonDetails","optional":false,"description":"","line":21,"modifierKind":[121]},{"name":"address","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"isFeatureEnabled","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":19,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\n// RxJs\\r\\nimport { Observable } from \'rxjs\';\\r\\n// Service\\r\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\r\\n\\r\\n// Interfaces\\r\\nimport { IUiPersonDetails } from \'../../interfaces\';\\r\\n// Enums\\r\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-acp-contact-information-section\',\\r\\n    templateUrl: \'contact-information-section.component.html\',\\r\\n})\\r\\nexport class UiAcpContactInformationSectionComponent implements OnInit {\\r\\n    public address: string;\\r\\n    public isFeatureEnabled: Observable<boolean>;\\r\\n\\r\\n    private _person: IUiPersonDetails;\\r\\n\\r\\n    @Input()\\r\\n    private set person(value: IUiPersonDetails) {\\r\\n        this._person = value;\\r\\n\\r\\n        if (this._person?.address !== undefined && this._person?.address !== null) {\\r\\n            this.address = [\\r\\n                this._person.address?.addressLine1,\\r\\n                this._person.address?.addressLine2,\\r\\n                this._person.address?.city,\\r\\n                this._person.address?.postalCode,\\r\\n                this._person.address?.state,\\r\\n                this._person.address?.countryName,\\r\\n            ]\\r\\n                .filter((s) => s !== null)\\r\\n                .join(\', \');\\r\\n        } else {\\r\\n            this.address = \'\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public get person(): IUiPersonDetails {\\r\\n        return this._person;\\r\\n    }\\r\\n\\r\\n    constructor(private _featureService: AcpFeatureService) {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.isFeatureEnabled = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""}],"line":45,"jsdoctags":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"person":{"name":"person","setSignature":{"name":"person","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":24,"jsdoctags":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"person","type":"","returnType":"IUiPersonDetails","line":43}}},"templateData":"<div *ngIf=\\"isFeatureEnabled | async\\" class=\\"card\\">\\r\\n    <div class=\\"card-header\\">\\r\\n        {{ \'PROFILE_MANAGER.CONTACT_INFORMATION\' | translate }}\\r\\n    </div>\\r\\n    <div class=\\"card-body\\">\\r\\n        <div class=\\"card-content\\">\\r\\n            <p class=\\"text-gray-700\\">{{ \'COMMON.EMAIL_ADDRESS\' | translate }}</p>\\r\\n            <p>{{ person?.email || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\r\\n            <hr>\\r\\n            <p class=\\"text-gray-700\\">{{ \'PROFILE_MANAGER.WORK_PHONE\' | translate}}</p>\\r\\n            <p>{{ person?.phone || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\r\\n            <hr>\\r\\n            <p class=\\"text-gray-700\\">{{ \'PROFILE_MANAGER.WORK_ADDRESS\' | translate }}</p>\\r\\n            <p>{{ address || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiAcpOrganizationSectionComponent","id":"component-UiAcpOrganizationSectionComponent-c8bc9604edc42e706b3bfd40d2214c2297ee3e83708f2d305f4adfabcc5888981d72814666cc4bdb4c84608778ea2949fa75b9c082c9bfbc7ac8408c763f32dd","file":"libs/ui/src/lib/modules/user-auth-manager/components/organizations-section/organizations-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-organizations-section","styleUrls":[],"styles":[],"templateUrl":["organizations-section.component.html"],"viewProviders":[],"inputsClass":[{"name":"person","deprecated":false,"deprecationMessage":"","line":27,"type":"IUiPersonDetails","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_assignedStandaloneRegulations","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort[]","optional":false,"description":"","line":39,"modifierKind":[121]},{"name":"_ngUnsubscribe","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":40,"modifierKind":[121,144]},{"name":"_selectedContactGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38,"modifierKind":[121]},{"name":"_updatedRegulationsTree","deprecated":false,"deprecationMessage":"","type":"IUiTreeData","optional":false,"description":"","line":37,"modifierKind":[121]},{"name":"contactRelationships","defaultValue":"new BehaviorSubject([])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IUiContactRelationship[]>","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"isFeatureEnabled","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"isSupplier","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"offcanvasId","defaultValue":"\'offcanvasRegulationsId\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33,"modifierKind":[123,144]},{"name":"regulationsTree","deprecated":false,"deprecationMessage":"","type":"Observable<IUiTreeData>","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"regulationsTreeCollapsedLevels","defaultValue":"[1, 2]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":34,"modifierKind":[123,144]},{"name":"regulationTierEnum","defaultValue":"UiRegulationTierEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35,"modifierKind":[123,144]}],"methodsClass":[{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onTreeUpdated","args":[{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveRegulations","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setContactRelationships","args":[{"name":"personGuid","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"personGuid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPreferencesClick","args":[{"name":"rel","type":"IUiContactRelationship","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"rel","type":"IUiContactRelationship","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"viewDetailsClick","args":[{"name":"org","type":"IUiOrganization","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"org","type":"IUiOrganization","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\n// RxJs\\r\\nimport { BehaviorSubject, Observable, Subject, map, take, takeUntil } from \'rxjs\';\\r\\n// NgxTranslate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Services\\r\\nimport { UiPersonService } from \'../../services/person.service\';\\r\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\r\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\r\\nimport { UiUserService } from \'@lib/services/user\';\\r\\nimport { UiRegulationService } from \'../../services\';\\r\\n// Interfaces\\r\\nimport { IUiContactRelationship, IUiOrganization, IUiPersonDetails, IUiRegulationShort, IUiRegulationsTree } from \'../../interfaces\';\\r\\nimport { IUiTreeData } from \'../tree-view/interfaces\';\\r\\n// Enums\\r\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\r\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\r\\nimport { UiRegulationTierEnum } from \'../../enums\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-organizations-section\',\\r\\n    templateUrl: \'organizations-section.component.html\',\\r\\n})\\r\\nexport class UiAcpOrganizationSectionComponent implements OnInit, OnDestroy, OnChanges {\\r\\n    @Input() public person: IUiPersonDetails;\\r\\n\\r\\n    public isSupplier: Observable<boolean>;\\r\\n    public isFeatureEnabled: Observable<boolean>;\\r\\n    public contactRelationships: BehaviorSubject<IUiContactRelationship[]> = new BehaviorSubject([]);\\r\\n    public regulationsTree: Observable<IUiTreeData>;\\r\\n    public readonly offcanvasId = \'offcanvasRegulationsId\';\\r\\n    public readonly regulationsTreeCollapsedLevels = [1, 2];\\r\\n    public readonly regulationTierEnum = UiRegulationTierEnum;\\r\\n\\r\\n    private _updatedRegulationsTree: IUiTreeData;\\r\\n    private _selectedContactGuid: string;\\r\\n    private _assignedStandaloneRegulations: IUiRegulationShort[] = [];\\r\\n    private readonly _ngUnsubscribe: Subject<void> = new Subject<void>();\\r\\n\\r\\n    constructor(\\r\\n        private _personService: UiPersonService,\\r\\n        private _router: Router,\\r\\n        private _featureService: AcpFeatureService,\\r\\n        private _userService: UiUserService,\\r\\n        private _regulationService: UiRegulationService,\\r\\n        private _translateService: TranslateService,\\r\\n        private _toastService: UiToastService\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        // TODO: This is a temporary solution to check if user is a supplier user - we should implement a more robust solution\\r\\n        this.isSupplier = this._userService.isSupplierUser();\\r\\n        this.isFeatureEnabled = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo);\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        this._ngUnsubscribe.next(null);\\r\\n        this._ngUnsubscribe.complete();\\r\\n    }\\r\\n\\r\\n    public ngOnChanges(changes: SimpleChanges) {\\r\\n        if (changes.person?.currentValue) {\\r\\n            const personGuid = changes.person.currentValue.personGuid;\\r\\n\\r\\n            this.setContactRelationships(personGuid);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public viewDetailsClick(org: IUiOrganization) {\\r\\n        this._router.navigate([`acp/company-profile/company/${org.id}`]);\\r\\n    }\\r\\n\\r\\n    public setPreferencesClick(rel: IUiContactRelationship) {\\r\\n        this._updatedRegulationsTree = null;\\r\\n        this._assignedStandaloneRegulations = rel.regulations.filter((r) => r.isStandalone);\\r\\n\\r\\n        this.regulationsTree = this._regulationService.getRegulationsTree().pipe(\\r\\n            map((tree: IUiRegulationsTree) => {\\r\\n                return this._regulationService.mapRegulationsToTree(tree, rel.regulations);\\r\\n            })\\r\\n        );\\r\\n        this._selectedContactGuid = rel.contactGuid;\\r\\n    }\\r\\n\\r\\n    public saveRegulations() {\\r\\n        if (!this._updatedRegulationsTree) {\\r\\n            // ToDo\\r\\n            // What to do if there are no changes??\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const selectedRegulations = this._regulationService\\r\\n            .getSelectedRegulations(this._updatedRegulationsTree)\\r\\n            .concat(this._assignedStandaloneRegulations);\\r\\n\\r\\n        this._personService\\r\\n            .updateContactRegulations(this._selectedContactGuid, selectedRegulations)\\r\\n            .pipe(take(1), takeUntil(this._ngUnsubscribe))\\r\\n            .subscribe({\\r\\n                next: () => {\\r\\n                    this._toastService.show(\\r\\n                        this._translateService.instant(\'PROFILE_MANAGER.REGULATIONS_UPDATE_SUCCESS\'),\\r\\n                        UiToastTypesEnum.success\\r\\n                    );\\r\\n                    this.setContactRelationships(this.person.personGuid);\\r\\n                },\\r\\n                error: () => {\\r\\n                    this._toastService.show(\\r\\n                        this._translateService.instant(\'PROFILE_MANAGER.REGULATIONS_UPDATE_ERROR\'),\\r\\n                        UiToastTypesEnum.danger\\r\\n                    );\\r\\n                },\\r\\n            });\\r\\n    }\\r\\n\\r\\n    public onTreeUpdated(tree: IUiTreeData) {\\r\\n        this._updatedRegulationsTree = tree;\\r\\n    }\\r\\n\\r\\n    private setContactRelationships(personGuid: string) {\\r\\n        this._personService\\r\\n            .getPersonContactRelationships(personGuid)\\r\\n            .pipe(take(1), takeUntil(this._ngUnsubscribe))\\r\\n            .subscribe((rels: IUiContactRelationship[]) => {\\r\\n                this.contactRelationships.next(rels);\\r\\n            });\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_regulationService","type":"UiRegulationService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_regulationService","type":"UiRegulationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","OnChanges"],"templateData":"<div *ngIf=\\"isFeatureEnabled | async\\" class=\\"mt-4\\">\\r\\n    <h3>\\r\\n        {{ \'PROFILE_MANAGER.ORGANIZATIONS\' | translate}}\\r\\n    </h3>\\r\\n    <p>\\r\\n        {{ \'PROFILE_MANAGER.ORGANIZATIONS_DESCRIPTION\' | translate}}\\r\\n    </p>\\r\\n\\r\\n    <div *ngFor=\\"let rel of contactRelationships | async\\" class=\\"card mt-4\\">\\r\\n        <div class=\\"card-body p-0  organization-row\\">\\r\\n            <div class=\\"d-flex flex-row justify-content-between p-4\\">\\r\\n                <div class=\\"d-flex flex-column \\">\\r\\n                    <h5>\\r\\n                        {{ rel.organization.name }}\\r\\n                    </h5>\\r\\n                    <div class=\\"small text-gray-700\\">\\r\\n                        {{ rel.organization.tradeNames | uiJoin: \' \\\\u2022 \'}}\\r\\n                    </div>\\r\\n                    <div *ngIf=\\"rel.organization.dunsNumber\\" class=\\"small text-gray-700\\">\\r\\n                        \x3c!-- ToDo\\r\\n                        Double check this D&B label --\x3e\\r\\n                        {{ \'PROFILE_MANAGER.D&B\' | translate}}: {{ rel.organization.dunsNumber}}\\r\\n                    </div>\\r\\n                    <div class=\\"small text-gray-700\\">\\r\\n                        {{ rel.organization.domainNames | uiJoin: \' \\\\u2022 \'}}\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button *ngIf=\\"(isSupplier | async) === false\\" type=\\"button\\" class=\\"btn btn-link p-0\\"\\r\\n                        (click)=\\"viewDetailsClick(rel.organization)\\">\\r\\n                        {{ \'PROFILE_MANAGER.VIEW_DETAILS\' | translate}}\\r\\n                        <i class=\\"bi bi-chevron-right\\"></i>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <div class=\\"px-4\\">\\r\\n                <div class=\\"d-flex justify-content-between mb-3\\">\\r\\n                    <div>\\r\\n                        {{ \'PROFILE_MANAGER.RECEIVE_REQUESTS_ABOUT\' | translate }}:\\r\\n                    </div>\\r\\n                    <button type=\\"button\\" class=\\"btn btn-link p-0\\" data-bs-toggle=\\"offcanvas\\"\\r\\n                        [attr.data-bs-target]=\\"\'#\' + offcanvasId\\" [attr.aria-controls]=\\"offcanvasId\\"\\r\\n                        (click)=\\"setPreferencesClick(rel)\\">\\r\\n                        {{ \'PROFILE_MANAGER.SET_PREFERENCES\' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\"d-flex flex-wrap gap-2 mb-4\\">\\r\\n                    <div *ngIf=\\"rel.regulations?.length;then custom_regulations else no_regulations\\"></div>\\r\\n                    <ng-template #custom_regulations>\\r\\n                        <span *ngFor=\\"let reg of rel.regulations\\"\\r\\n                            class=\\"badge badge-category-5 rounded-pill noHover lg\\">\\r\\n                            \x3c!-- We don\'t want to see All Regulations and Standalone Program as pills --\x3e\\r\\n                            <span *ngIf=\\"!(reg.regulationTierId === regulationTierEnum.all\\r\\n                                || (reg.regulationTierId === regulationTierEnum.program && reg.isStandalone))\\">\\r\\n                                {{ reg.regulationName }}\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </ng-template>\\r\\n                    <ng-template #no_regulations>\\r\\n                        <span class=\\"small text-gray-700\\">\\r\\n                            {{ \'PROFILE_MANAGER.NO_REGULATIONS\' | translate }}\\r\\n                        </span>\\r\\n                    </ng-template>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ui-offcanvas [domId]=\\"offcanvasId\\" title=\\"PROFILE_MANAGER.SET_PREFERENCES\\" [showFooter]=\\"true\\"\\r\\n    (saveClicked)=\\"saveRegulations()\\">\\r\\n    <ui-tree-view [treeData]=\\"regulationsTree | async\\" [collapsedLevels]=\\"regulationsTreeCollapsedLevels\\"\\r\\n        (treeUpdated)=\\"onTreeUpdated($event)\\"></ui-tree-view>\\r\\n</ui-offcanvas>"},{"name":"UiAcpProfileManagerComponent","id":"component-UiAcpProfileManagerComponent-ac5b964a65fd2c0af1ed3484a6d7b1fe5e85ff10fd6b3de469dc42b8770578c803e7a67e17064cde57238ca18cf3b5907336d06ec37112ffd52b259ee3a6060d","file":"libs/ui/src/lib/modules/user-auth-manager/profile-manager.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-profile-manager","styleUrls":["./profile-manager.scss"],"styles":[],"templateUrl":["./profile-manager.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiUser>","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"isAssentee","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"person","deprecated":false,"deprecationMessage":"","type":"Observable<IUiPersonDetails>","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"sessions","deprecated":false,"deprecationMessage":"","type":"UiAcpUserSession[]","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"user","deprecated":false,"deprecationMessage":"","type":"UiUserService","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from \'@angular/core\';\\r\\n// RxJs\\r\\nimport { Observable, concatMap, map, of, shareReplay, tap } from \'rxjs\';\\r\\n// Services\\r\\nimport { UiAcpProfileManagerService } from \'./services/profile-manager-service\';\\r\\nimport { UiPageHeaderService } from \'@lib/modules/layout/services/page-header-service/page-header.service\';\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { UiPersonService } from \'./services/person.service\';\\r\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\r\\n// Interfaces\\r\\nimport { IUiPersonDetails } from \'./interfaces\';\\r\\n// Enums\\r\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\r\\nimport { IUiUser, UiUserService } from \'@lib/services/user\';\\r\\nimport { UiAcpUserSession } from \'./models/session.model\';\\r\\n\\r\\n// Enums\\r\\n@Component({\\r\\n    selector: \'ui-acp-profile-manager\',\\r\\n    templateUrl: \'./profile-manager.component.html\',\\r\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\r\\n    styleUrls: [\'./profile-manager.scss\'],\\r\\n})\\r\\nexport class UiAcpProfileManagerComponent implements OnInit {\\r\\n    public user: UiUserService;\\r\\n    public userEmail: string;\\r\\n    public authenticatedUser$: Observable<IUiUser>;\\r\\n    public sessions: UiAcpUserSession[];\\r\\n    public person: Observable<IUiPersonDetails>;\\r\\n    public isAssentee: Observable<boolean>;\\r\\n\\r\\n    constructor(\\r\\n        private _profileManagerService: UiAcpProfileManagerService,\\r\\n        private _pageHeaderService: UiPageHeaderService,\\r\\n        private _layoutService: UiLayoutService,\\r\\n        private _personService: UiPersonService,\\r\\n        private _featureService: AcpFeatureService,\\r\\n        private _userService: UiUserService,\\r\\n        private _changeDetectorRef: ChangeDetectorRef\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this._layoutService.showGrayBackground = true;\\r\\n        // ToDo\\r\\n        // Use the global configuration when it is applied\\r\\n        // this._layoutService.showMargins = false;\\r\\n        // this._layoutService.showContainer = true;\\r\\n\\r\\n        this._pageHeaderService.showPageHeader = true;\\r\\n        this._pageHeaderService.pageTitle = \'COMMON.ACCOUNT\';\\r\\n\\r\\n        // Hint\\r\\n        // This prevents multiple calls to the persons endpoint by sharing the same value between child components\\r\\n        this.person = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo).pipe(\\r\\n            concatMap((enabled: boolean) => {\\r\\n                // ToDo\\r\\n                // Remove the call to the feature service when everything is enabled\\r\\n                // And call directly person service\\r\\n                return enabled ? this._personService.getLoggedUserPersonDetails() : of(null);\\r\\n            }),\\r\\n            shareReplay()\\r\\n        );\\r\\n        this.authenticatedUser$ = this._userService.authenticatedUser$;\\r\\n\\r\\n        this.authenticatedUser$.subscribe((user) => {\\r\\n            if (user.id) {\\r\\n                this._profileManagerService.getUserSessions(user.id).pipe(\\r\\n                    tap((res) => {\\r\\n                        this.sessions = res;\\r\\n                        this._changeDetectorRef.detectChanges(); // Trigger change detection\\r\\n                    })\\r\\n                ).subscribe();\\r\\n            }\\r\\n        });\\r\\n\\r\\n        this.isAssentee = this.person.pipe(\\r\\n            map((person) => {\\r\\n                return person.email.endsWith(\'assent.com\') || person.email.endsWith(\'assentcompliance.com\');\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".container {\\r\\n    max-width: 720px;\\r\\n    width: 100%;\\r\\n    padding: 0;\\r\\n}\\r\\n","styleUrl":"./profile-manager.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":""},{"name":"_pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":""},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":31,"jsdoctags":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"\x3c!-- ToDo\\r\\n    Remove this container class\\r\\n    when the global configuration - this._layoutService.showContainer\\r\\n    is globally applied\\r\\n--\x3e\\r\\n<div class=\\"container\\">\\r\\n    <h3 class=\\"mb-4\\">{{ \'PROFILE_MANAGER.ABOUT_YOU\' | translate}}</h3>\\r\\n    <ui-acp-profile-section [person]=\\"person | async\\"></ui-acp-profile-section>\\r\\n    \\r\\n    <div *ngIf=\\"(isAssentee | async) === false\\">\\r\\n        <div class=\\"mt-4\\"></div>\\r\\n        <ui-acp-contact-information-section [person]=\\"person | async\\"></ui-acp-contact-information-section>\\r\\n\\r\\n        <ui-organizations-section [person]=\\"person | async\\"></ui-organizations-section>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\"sessions\\">\\r\\n        <ui-acp-session-list [sessions]=\\"sessions\\"></ui-acp-session-list>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiAcpProfileSectionComponent","id":"component-UiAcpProfileSectionComponent-f9bed0856d70ffaf90824a600e6357c413dc69ae93cda18392b7a59faa04f1f50a2e5a2e4331452e95647e96f8f17cc4e32966c2d176da24b80a09ce627ca2ad","file":"libs/ui/src/lib/modules/user-auth-manager/components/profile-section/profile-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-profile-section","styleUrls":[],"styles":[],"templateUrl":["profile-section.component.html"],"viewProviders":[],"inputsClass":[{"name":"person","deprecated":false,"deprecationMessage":"","line":28,"type":"IUiPersonDetails","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_person","deprecated":false,"deprecationMessage":"","type":"IUiPersonDetails","optional":false,"description":"","line":25,"modifierKind":[121]},{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiUser>","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"fullName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"isFeatureEnabled","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"user","deprecated":false,"deprecationMessage":"","type":"UiUserService","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\n// RxJs\\r\\nimport { Observable } from \'rxjs\';\\r\\n// Service\\r\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\r\\n\\r\\n// Interfaces\\r\\nimport { IUiPersonDetails } from \'../../interfaces\';\\r\\n// Enums\\r\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\r\\nimport { IUiUser, UiUserService } from \'@lib/services/user\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-acp-profile-section\',\\r\\n    templateUrl: \'profile-section.component.html\',\\r\\n})\\r\\nexport class UiAcpProfileSectionComponent implements OnInit {\\r\\n    public fullName: string;\\r\\n    public isFeatureEnabled: Observable<boolean>;\\r\\n    public user: UiUserService;\\r\\n    public userEmail: string;\\r\\n    public authenticatedUser$: Observable<IUiUser>;\\r\\n\\r\\n    private _person: IUiPersonDetails;\\r\\n\\r\\n    @Input()\\r\\n    private set person(value: IUiPersonDetails) {\\r\\n        this._person = value;\\r\\n        this.fullName = [this._person?.firstName, this._person?.lastName].filter((s) => s !== null).join(\' \');\\r\\n    }\\r\\n\\r\\n    public get person(): IUiPersonDetails {\\r\\n        return this._person;\\r\\n    }\\r\\n\\r\\n    constructor(private _featureService: AcpFeatureService,\\r\\n               private _userService: UiUserService) {\\r\\n        this.fullName = this.person?.firstName + \' \' + this.person?.lastName;\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.isFeatureEnabled = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo);\\r\\n\\r\\n        this.authenticatedUser$ = this._userService.authenticatedUser$;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""}],"line":35,"jsdoctags":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"person":{"name":"person","setSignature":{"name":"person","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":28,"jsdoctags":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"person","type":"","returnType":"IUiPersonDetails","line":33}}},"templateData":"<div *ngIf=\\"isFeatureEnabled | async\\" class=\\"card\\">\\r\\n    <div class=\\"card-header\\">\\r\\n        {{ \'PROFILE_MANAGER.PERSONAL_INFORMATION\' | translate }}\\r\\n    </div>\\r\\n    <div class=\\"card-body\\">\\r\\n        <div class=\\"card-content\\">\\r\\n            <p class=\\"text-gray-700\\">{{ \'COMMON.FULL_NAME\' | translate }}</p>\\r\\n            <p>{{ fullName || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\r\\n            <hr class=\\"divider\\">\\r\\n            <p class=\\"text-gray-700\\">{{ \'COMMON.JOB_TITLE\' | translate}}</p>\\r\\n            <p>{{ person?.jobTitle || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiAcpSessionItemComponent","id":"component-UiAcpSessionItemComponent-839726da117b51fac37456ffbdddf82ccfe017c79989e372cb4e3fd879f6d72a000a20655dca3c2515e094e371f47f37dcc8ca20677b971e0b7d26d271b397e4","file":"libs/ui/src/lib/modules/user-auth-manager/components/session-item/session-item.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-session-item","styleUrls":["./session-item.component.scss"],"styles":[],"templateUrl":["./session-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"session","deprecated":false,"deprecationMessage":"","line":10,"type":"UiAcpUserSession","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"sessionItem","deprecated":false,"deprecationMessage":"","type":"UiAcpUserSessionItem","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiAcpUserSession, UiAcpUserSessionItem } from \'../../models/session.model\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-acp-session-item\',\\r\\n    templateUrl: \'./session-item.component.html\',\\r\\n    styleUrls: [\'./session-item.component.scss\']\\r\\n})\\r\\nexport class UiAcpSessionItemComponent implements OnInit {\\r\\n    @Input() public session: UiAcpUserSession;\\r\\n\\r\\n    public sessionItem: UiAcpUserSessionItem;\\r\\n\\r\\n    constructor() { }\\r\\n\\r\\n    public ngOnInit(): void { }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"a {\\r\\n    margin-top: -70px;\\r\\n    margin-left: 8px;\\r\\n}\\r\\n\\r\\np {\\r\\n    margin-left: 20px;\\r\\n}\\r\\n\\r\\n.currentSessionText {\\r\\n    margin-top: -5px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.sessionDataFirstRow {\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n\\r\\n.sessionDataSecondRow {\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n","styleUrl":"./session-item.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"implements":["OnInit"],"templateData":"<p class=\\"sessionDataFirstRow\\">{{ session?.browser }} / {{ \'COMMON.IP\' | translate }} {{ session?.IP }}</p>\\r\\n<p class=\\"sessionDataSecondRow\\">{{ \'COMMON.LAST_ACTIVITY\' | translate }} {{ session?.lastActivity }}</p>\\r\\n<p class=\\"currentSessionText\\" *ngIf=\\"session?.isCurrent\\">\\r\\n    <i class=\\"bi bi-check-circle-fill text-success\\"></i>\\r\\n    {{ \'COMMON.YOUR_CURRENT_SESSION\' | translate }}\\r\\n</p>\\r\\n"},{"name":"UiAcpSessionListComponent","id":"component-UiAcpSessionListComponent-17f37dc430246413c29b699375a7aba341b490e1d811c79dd19d183e453e3c25fa113020fdb2743708b104135a6c721132f0360e44d75cbc18eae4e80450bf16","file":"libs/ui/src/lib/modules/user-auth-manager/components/session-list/session-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-session-list","styleUrls":["./session-list.component.scss"],"styles":[],"templateUrl":["./session-list.component.html"],"viewProviders":[],"inputsClass":[{"name":"sessions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":16,"type":"UiAcpUserSession[]","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"dontRecognizeClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\n// NgB\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Components\\r\\nimport { UiAcpUserSession } from \'../../models/session.model\';\\r\\nimport { UiAcpConfirmDeleteSessionModalComponent } from \'../confirm-delete-session-modal/confirm-delete-session-modal.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-acp-session-list\',\\r\\n    templateUrl: \'./session-list.component.html\',\\r\\n    styleUrls: [\'./session-list.component.scss\']\\r\\n})\\r\\nexport class UiAcpSessionListComponent implements OnInit {\\r\\n\\r\\n    @Input() public sessions: UiAcpUserSession[] = [];\\r\\n\\r\\n    constructor(\\r\\n        private _modalService: NgbModal\\r\\n    ) { }\\r\\n\\r\\n    public ngOnInit(): void { }\\r\\n\\r\\n    public dontRecognizeClick() {\\r\\n        this._modalService.open(UiAcpConfirmDeleteSessionModalComponent, {\\r\\n            centered: true,\\r\\n            scrollable: false });\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".card-body {\\r\\n    max-height: 400px;\\r\\n}\\r\\n\\r\\n.sessions-list-title {\\r\\n    max-width: 720px;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n}\\r\\n\\r\\n.sessions-list-description {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    max-width: 720px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.sessions-list-card {\\r\\n    max-width: 720px;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}","styleUrl":"./session-list.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h3 class=\\"mt-4 mb-3 sessions-list-title\\">{{ \'COMMON.DEVICES_ACTIVE_SESSIONS\' | translate }}</h3>\\r\\n<p class=\\"sessions-list-description\\"> {{ \'COMMON.THESE_ARE_YOUR_SESSIONS\' | translate }}</p>\\r\\n<div class=\\"card sessions-list-card\\">\\r\\n    <div class=\\"card-body overflow-auto\\">\\r\\n      <div class=\\"p-2\\" *ngFor=\\"let session of sessions; let i = index\\">\\r\\n        <i class=\\"bi bi-laptop-fill\\"></i>\\r\\n        <strong> {{ session?.OS }} {{ \'COMMON.DEVICE\' | translate }}</strong>\\r\\n        <ui-acp-session-item [session]=\\"session\\"></ui-acp-session-item>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\"d-flex align-items-center p-2\\" *ngIf=\\"sessions.length > 1\\">\\r\\n      <a type=\\"button\\" class=\\"btn btn-link\\" (click)=\\"dontRecognizeClick()\\">{{ \'COMMON.DONT_RECOGNIZE_A_SESSION\' | translate }}</a>\\r\\n      <i\\r\\n        class=\\"bi bi-question-circle-fill notCurrentIcon\\"\\r\\n        [placement]=\\"\'end\'\\"\\r\\n        [container]=\\"body\\"\\r\\n        [ngbTooltip]=\\"tooltipContent\\"\\r\\n        [tooltipClass]=\\"\'tooltip-md\'\\"\\r\\n      ></i>\\r\\n    </div>\\r\\n    <ng-template #tooltipContent>\\r\\n      <div class=\\"customTooltip\\">\\r\\n          {{ \'COMMON.CLICK_SESSION_SIGN_OUT\' | translate }} {{ \'COMMON.ALSO_CONSIDER\' | translate }}\\r\\n          <ul>\\r\\n              <li>{{ \'COMMON.CHANGING_YOUR_PASSWORD\' | translate }}</li>\\r\\n              <li>{{ \'COMMON.CONTACTING_ASSENT\' | translate }}</li>\\r\\n          </ul>\\r\\n      </div>\\r\\n  </ng-template>\\r\\n</div>\\r\\n"},{"name":"UiAcpUserDetailsComponent","id":"component-UiAcpUserDetailsComponent-7a52b344736f235a7a1c38777d0bd08aea4d373691b530b0209866ce1802d5963381c9bf18d045eb92dffa35e7bf9b1b8ccabeb693819dc440be59e095b52108","file":"libs/ui/src/lib/modules/user-auth-manager/components/user-details/user-details.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-user-details","styleUrls":["./user-details.component.scss"],"styles":[],"templateUrl":["./user-details.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiUser>","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"sessions","deprecated":false,"deprecationMessage":"","type":"UiAcpUserSession[]","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"user","deprecated":false,"deprecationMessage":"","type":"UiUserService","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectorRef, Component, OnInit } from \'@angular/core\';\\r\\n// RxJS\\r\\nimport { Observable } from \'rxjs\';\\r\\nimport { tap } from \'rxjs/operators\';\\r\\n// Libs\\r\\nimport { IUiUser, UiUserService } from \'@lib/services/user\';\\r\\n// Services\\r\\nimport { UiAcpProfileManagerService } from \'../../services/profile-manager-service\';\\r\\n// Components\\r\\nimport { UiAcpUserSession } from \'../../models/session.model\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-acp-user-details\',\\r\\n    templateUrl: \'./user-details.component.html\',\\r\\n    styleUrls: [\'./user-details.component.scss\']\\r\\n})\\r\\nexport class UiAcpUserDetailsComponent implements OnInit {\\r\\n    public user: UiUserService;\\r\\n    public userEmail: string;\\r\\n    public authenticatedUser$: Observable<IUiUser>;\\r\\n    public sessions: UiAcpUserSession[];\\r\\n\\r\\n    constructor(\\r\\n        private _profileManagerService: UiAcpProfileManagerService,\\r\\n        private _userService: UiUserService,\\r\\n        private _changeDetectorRef: ChangeDetectorRef\\r\\n    ) { }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.authenticatedUser$ = this._userService.authenticatedUser$;\\r\\n\\r\\n        this.authenticatedUser$.subscribe((user) => {\\r\\n            if (user.id) {\\r\\n                this._profileManagerService.getUserSessions(user.id).pipe(\\r\\n                    tap((res) => {\\r\\n                        this.sessions = res;\\r\\n                        this._changeDetectorRef.detectChanges(); // Trigger change detection\\r\\n                    })\\r\\n                ).subscribe();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-control {\\r\\n    width: 500px;\\r\\n}\\r\\n","styleUrl":"./user-details.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"\\r\\n<div class=\\"card\\">\\r\\n    <div class=\\"card-header\\">\\r\\n      {{ \'USER_MANAGEMENT.USER_INFORMATION\' | translate }}\\r\\n    </div>\\r\\n    <div class=\\"card-body\\">\\r\\n        <h5 class=\\"card-title\\">{{ \'COMMON.EMAIL\' | translate }}</h5>\\r\\n        <input value=\'{{ (authenticatedUser$ | async)?.email }}\'\\r\\n        class=\\"form-control\\" type=\\"text\\" disabled />\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiActionButtonsComponent","id":"component-UiActionButtonsComponent-b3cbbbb0200de5139bacfd41a1221478641e476b050d20a641701c9d438048be0644ace39fbce6baaa5e621e06f49f677e18d22104f7ee4dff01a32299736aa8","file":"libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-action-buttons","styleUrls":["./action-buttons.component.scss"],"styles":[],"templateUrl":["./action-buttons.component.html"],"viewProviders":[],"inputsClass":[{"name":"form","deprecated":false,"deprecationMessage":"","line":14,"type":"UiFormBaseComponent","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"showClearButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"showSetButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiFormBaseComponent } from \'../form-base/form-base.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-action-buttons\',\\r\\n    templateUrl: \'./action-buttons.component.html\',\\r\\n    styleUrls: [\'./action-buttons.component.scss\'],\\r\\n})\\r\\n\\r\\nexport class UiActionButtonsComponent implements OnInit {\\r\\n    @Input() public id: string;\\r\\n    @Input() public showClearButton = true;\\r\\n    @Input() public showSetButton = true;\\r\\n    @Input() public form: UiFormBaseComponent;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void { }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./action-buttons.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":14},"implements":["OnInit"],"templateData":"<div *ngIf=\\"form !== undefined\\">\\r\\n    \x3c!-- View Mode --\x3e\\r\\n    <button [id]=\\"id + \'_EditButton\'\\" *ngIf=\\"!form.editMode\\" class=\\"btn btn-primary ms-3\\" (click)=\\"form.onEditBtnClick($event)\\">{{ \'COMMON.EDIT\' | translate }}</button>\\r\\n\\r\\n    \x3c!-- Edit Mode --\x3e\\r\\n    <button [id]=\\"id + \'_SetButton\'\\" *ngIf=\\"form.editMode && showSetButton\\" class=\\"btn btn-link me-2\\" (click)=\\"form.onSetPayloadBtnClick($event)\\" >\\r\\n        Set\\r\\n    </button>\\r\\n    <button [id]=\\"id + \'_ClearButton\'\\" *ngIf=\\"form.editMode && showClearButton\\" class=\\"btn btn-link me-2\\" (click)=\\"form.onClearBtnClick($event)\\" >\\r\\n        {{ \'COMMON.CLEAR\' | translate }}\\r\\n    </button>\\r\\n    <div *ngIf=\\"form.editMode && (showSetButton || showClearButton)\\" class=\\"vr  ms-3 me-3\\"></div>\\r\\n    <button [id]=\\"id + \'_SaveButton\'\\" *ngIf=\\"form.editMode\\" class=\\"btn btn-primary ms-3 me-2\\" (click)=\\"form.onSaveBtnClick($event)\\" [disabled]=\\"form.form.invalid\\">\\r\\n        {{ \'COMMON.SAVE\' | translate }}\\r\\n    </button>\\r\\n    <button [id]=\\"id + \'_CancelButton\'\\" *ngIf=\\"form.editMode\\" class=\\"btn btn-link\\" (click)=\\"form.onCancelBtnClick($event)\\">{{ \'COMMON.CANCEL\' | translate }}</button>\\r\\n</div>"},{"name":"UiActionButtonsNewComponent","id":"component-UiActionButtonsNewComponent-506e26f7d98eb450865336f16a8243e9123ffb52228f1ddbe8d3dbf0c1a9f0ef98170a5c55186b8ec5136f63d1137be0e01b1f7803ba6dd697b4bfafbfcb63ac","file":"libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-action-buttons-new","styleUrls":["./action-buttons.component.scss"],"styles":[],"templateUrl":["./action-buttons.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":12,"type":"Array<IUiActionButton>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"UiButtonSizeEnum","defaultValue":"UiButtonSizeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\n// import { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\nimport { IUiActionButton } from \'../../interfaces/action-button.interface\';\\r\\nimport { UiButtonSizeEnum } from \'../../enums/action-button-size.enum\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-action-buttons-new\',\\r\\n    templateUrl: \'./action-buttons.component.html\',\\r\\n    styleUrls: [\'./action-buttons.component.scss\'],\\r\\n})\\r\\nexport class UiActionButtonsNewComponent implements OnInit {\\r\\n    @Input() public actionButtons: Array<IUiActionButton> = [];\\r\\n    public UiButtonSizeEnum = UiButtonSizeEnum;\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n\\r\\n.btn-seperator{\\r\\n    border-right: 1px solid $gray-500;\\r\\n    margin: 5px;\\r\\n}","styleUrl":"./action-buttons.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"implements":["OnInit"],"templateData":"<div class=\\"d-flex flex-row-reverse gap-2\\">\\r\\n    <ng-container *ngFor=\\"let btn of actionButtons\\">\\r\\n        <ui-button\\r\\n            *ngIf=\\"btn.type !== \'btn-seperator\'\\"\\r\\n            [id]=\\"btn.id\\"\\r\\n            [text]=\\"btn.text\\"\\r\\n            [tooltipText]=\\"btn.tooltipText\\"\\r\\n            [type]=\\"btn.type\\"\\r\\n            [size]=\\"btn.size\\"\\r\\n            [icon]=\\"btn.icon\\"\\r\\n            [disabled]=\\"btn.disabled\\"\\r\\n            [clicked]=\\"btn.clicked\\"\\r\\n            [inversed]=\\"btn.inversed\\"\\r\\n            >\\r\\n            \x3c!-- TODO: prefix/suffix not working as expected\\r\\n                [iconLocation]=\\"btn.iconLocation\\"\\r\\n            --\x3e\\r\\n        </ui-button>\\r\\n        <div class=\\"btn-seperator\\" *ngIf=\\"btn.type === \'btn-seperator\'\\"></div>\\r\\n    </ng-container>\\r\\n\\r\\n</div>\\r\\n"},{"name":"UiActionButtonsRendererComponent","id":"component-UiActionButtonsRendererComponent-61b6cf4de91f045a626141c16223a9f66840ece64a3ca1c8ddf69e2fda371d35354cbc838f896dbad66e8bc9a246ae2cf9f226a51cd0af618c9ab8b56974a48a","file":"libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-action-buttons-renderer","styleUrls":["./action-buttons-renderer.component.scss"],"styles":[],"templateUrl":["./action-buttons-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"btnArray","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"dropdownComp","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":12,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdown\'"}],"modifierKind":[123]},{"name":"inlineIcons","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"itemId","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"rowId","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"showIconsInMenu","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"showLabel","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onItemClick","args":[{"name":"item","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refresh","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild } from \'@angular/core\';\\r\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\r\\nimport { ICellRendererParams } from \'ag-grid-community\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-action-buttons-renderer\',\\r\\n    templateUrl: \'./action-buttons-renderer.component.html\',\\r\\n    styleUrls: [\'./action-buttons-renderer.component.scss\'],\\r\\n})\\r\\nexport class UiActionButtonsRendererComponent implements OnInit, ICellRendererAngularComp {\\r\\n    @ViewChild(\'dropdown\') public dropdownComp: NgbDropdown;\\r\\n    public params: any;\\r\\n    public btnArray = [];\\r\\n    public inlineIcons = false;\\r\\n    public itemId;\\r\\n    public rowId;\\r\\n    public showIconsInMenu = false;\\r\\n    public showLabel = false;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public refresh(params: any): boolean {\\r\\n        this.params = params;\\r\\n        this.btnArray = params.btnArr;\\r\\n        this.inlineIcons = params.inlineIcons;\\r\\n        this.itemId = params.itemId;\\r\\n        this.rowId = params.rowId;\\r\\n        this.showIconsInMenu = params.showIconsInMenu;\\r\\n        this.showLabel = params.showLabel;\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public agInit(params: any): void {\\r\\n        this.params = params;\\r\\n        this.btnArray = params.btnArr;\\r\\n        this.inlineIcons = params.inlineIcons;\\r\\n        this.itemId = params.itemId;\\r\\n        this.rowId = params.rowId;\\r\\n        this.showIconsInMenu = params.showIconsInMenu;\\r\\n        this.showLabel = params.showLabel;\\r\\n    }\\r\\n\\r\\n    public onItemClick(item) {\\r\\n        item.clicked(this.itemId);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.column-gap-5 {\\r\\n    column-gap: 5px !important;\\r\\n}\\r\\n\\r\\n.btn-white {\\r\\n    color: $primary;\\r\\n    background-color: $white;\\r\\n    border: none;\\r\\n    padding: 0;\\r\\n    padding-left: 1px;\\r\\n    padding-top: 1px;\\r\\n    line-height: 1;\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    border-radius: 50%;\\r\\n    font-size: 1rem;\\r\\n\\r\\n    &:disabled {\\r\\n        color: $gray-500;\\r\\n    }\\r\\n}\\r\\n\\r\\n.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}","styleUrl":"./action-buttons-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":19},"implements":["OnInit","ICellRendererAngularComp"],"templateData":"\x3c!-- <div [id]=\\"\'actionBtn-\' + rowId\\" class=\\"d-flex justify-content-center column-gap-5 visually-hidden\\"> --\x3e\\r\\n<div [id]=\\"\'actionBtn-\' + rowId\\" class=\\"d-flex justify-content-center column-gap-5\\">\\r\\n    <div *ngIf=\\"inlineIcons !== true\\">\\r\\n        \x3c!-- If only 1 item --\x3e\\r\\n        <div *ngIf=\\"btnArray !== undefined && btnArray.length === 1\\" class=\\"d-inline-block\\">\\r\\n            <button\\r\\n                *ngIf=\\"btnArray[0].icon !== undefined && !showLabel\\"\\r\\n                type=\\"button\\"\\r\\n                class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\r\\n                container=\\"body\\"\\r\\n                ngbTooltip=\\"{{btnArray[0].text | translate}}\\"\\r\\n                [placement]=\\"\'top\'\\"\\r\\n                [tooltipClass]=\\"tooltip-sm\\"\\r\\n                [disabled]=\\"btnArray[0].disabled === true\\"\\r\\n                (click)=\\"btnArray[0].clicked(params)\\">\\r\\n                <i class=\\"bi\\" [ngClass]=\\"btnArray[0].icon\\"></i>\\r\\n            </button>\\r\\n            <button\\r\\n                *ngIf=\\"btnArray[0].icon === undefined || showLabel\\"\\r\\n                type=\\"button\\"\\r\\n                class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\r\\n                [disabled]=\\"btnArray[0].disabled === true\\"\\r\\n                (click)=\\"btnArray[0].clicked(params)\\">\\r\\n                <span>{{btnArray[0].text | translate}}</span>\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- If more then 1 item --\x3e\\r\\n        <div *ngIf=\\"btnArray !== undefined && btnArray.length > 1\\" ngbDropdown class=\\"d-inline-block\\" container=\\"body\\" #dropdown=\\"ngbDropdown\\">\\r\\n            <button\\r\\n                type=\\"button\\"\\r\\n                class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\r\\n                ngbDropdownToggle\\r\\n                container=\\"body\\"\\r\\n                ngbTooltip=\\"{{\'COMMON.ACTIONS\' | translate}}\\"\\r\\n                [placement]=\\"\'top\'\\"\\r\\n                [tooltipClass]=\\"\'tooltip-sm\'\\"\\r\\n                >\\r\\n                <i class=\\"bi bi-three-dots-vertical\\"></i>\\r\\n            </button>\\r\\n            <div [id]=\\"\'actionMenu\'\\" ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\" >\\r\\n                <ng-container *ngFor=\\"let item of btnArray\\">\\r\\n                    <button *ngIf=\\"item.divider !== true && item.visible !== false\\" ngbDropdownItem [disabled]=\\"item.disabled === true\\" (click)=\\"item.clicked(params)\\">\\r\\n                        <i *ngIf=\\"showIconsInMenu === true\\" class=\\"bi me-2\\" [ngClass]=\\"item.icon\\"></i>\\r\\n                        {{item.text | translate}}\\r\\n                    </button>\\r\\n                    <div *ngIf=\\"item.divider === true && item.visible === true\\" class=\\"dropdown-divider\\"></div>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\"inlineIcons === true\\">\\r\\n        <ng-container *ngFor=\\"let item of btnArray\\">\\r\\n            <button\\r\\n                *ngIf=\\"item.divider !== true\\"\\r\\n                type=\\"button\\"\\r\\n                class=\\"btn-white btn-md d-inline-block\\"\\r\\n                container=\\"body\\"\\r\\n                ngbTooltip=\\"{{item.text | translate}}\\"\\r\\n                [placement]=\\"\'top\'\\"\\r\\n                [tooltipClass]=\\"tooltip-sm\\"\\r\\n                [disabled]=\\"item.disabled\\"\\r\\n                (click)=\\"item.clicked(params)\\">\\r\\n                <i class=\\"bi\\" [ngClass]=\\"item.icon\\"></i>\\r\\n            </button>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n</div>"},{"name":"UiAlertComponent","id":"component-UiAlertComponent-cf4c013048e5a76104c634e580c4ccd03a8de52b2ed0e9fa1b296b68a418c2f2519b017ac6fa7cc0400cde545d1144524bba7b3c5553945c1bc5fc4f4da6f57e","file":"libs/ui/src/lib/modules/alert/alert.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-alert","styleUrls":["./alert.component.scss"],"styles":[],"templateUrl":["./alert.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","defaultValue":"new Array<{ id: string; buttonText: string; disabled: boolean; clicked: () => { any } }>()","deprecated":false,"deprecationMessage":"","line":22,"type":"any","decorators":[]},{"name":"clicked","deprecated":false,"deprecationMessage":"","line":16,"type":"function","decorators":[]},{"name":"dismissible","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"layout","defaultValue":"UiAlertLayoutEnum.INLINE","deprecated":false,"deprecationMessage":"","line":23,"type":"UiAlertLayoutEnum.STACKED | UiAlertLayoutEnum.INLINE","decorators":[]},{"name":"showIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":18,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"UiAlertSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","line":19,"type":"UiAlertSizeEnum","decorators":[]},{"name":"text","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"title","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"type","defaultValue":"UiAlertTypeEnum.warning","deprecated":false,"deprecationMessage":"","line":17,"type":"UiAlertTypeEnum","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"buttonType","defaultValue":"UiButtonTypeEnum.LINK","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"linkSize","defaultValue":"UiButtonSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"onClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiAlertTypeEnum } from \'@lib/modules/alert/enums/alert-type.enum\';\\r\\nimport { UiAlertSizeEnum } from \'@lib/modules/alert/enums/alert-size.enum\';\\r\\nimport { UiAlertLayoutEnum } from \'@lib/modules/alert/enums/alert-layout.enum\';\\r\\nimport { UiButtonTypeEnum } from \'../button/enums/action-button-type.enum\';\\r\\nimport { UiButtonSizeEnum } from \'../button/enums/action-button-size.enum\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-alert\',\\r\\n    templateUrl: \'./alert.component.html\',\\r\\n    styleUrls: [\'./alert.component.scss\'],\\r\\n})\\r\\nexport class UiAlertComponent implements OnInit {\\r\\n    @Input() public text: string;\\r\\n    @Input() public id: string;\\r\\n    @Input() public clicked?: (e) => any;\\r\\n    @Input() public type: UiAlertTypeEnum = UiAlertTypeEnum.warning;\\r\\n    @Input() public showIcon = true;\\r\\n    @Input() public size: UiAlertSizeEnum = UiAlertSizeEnum.MEDIUM;\\r\\n    @Input() public dismissible = true;\\r\\n    @Input() public title: string;\\r\\n    @Input() public actionButtons = new Array<{ id: string; buttonText: string; disabled: boolean; clicked: () => { any } }>();\\r\\n    @Input() public layout: UiAlertLayoutEnum.STACKED | UiAlertLayoutEnum.INLINE = UiAlertLayoutEnum.INLINE;\\r\\n    public icon: string;\\r\\n    public buttonType = UiButtonTypeEnum.LINK;\\r\\n    public linkSize = UiButtonSizeEnum.MEDIUM;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        if (this.showIcon) {\\r\\n            switch (this.type) {\\r\\n                case UiAlertTypeEnum.success:\\r\\n                    this.icon = \'bi bi-check-circle-fill\';\\r\\n                    break;\\r\\n                case UiAlertTypeEnum.danger:\\r\\n                    this.icon = \'bi bi-exclamation-triangle-fill\';\\r\\n                    break;\\r\\n                case UiAlertTypeEnum.info:\\r\\n                    this.icon = \'bi bi-info-circle-fill\';\\r\\n                    break;\\r\\n                case UiAlertTypeEnum.warning:\\r\\n                    this.icon = \'bi bi-exclamation-circle-fill\';\\r\\n                    break;\\r\\n                case UiAlertTypeEnum.neutral:\\r\\n                    this.icon = \'bi bi-info-circle-fill\';\\r\\n                    break;\\r\\n            }\\r\\n            if (this.actionButtons.length > 2) {\\r\\n                this.actionButtons = this.actionButtons.slice(0, 2);\\r\\n                throw new Error(\'Alert can have only 2 action buttons\');\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onClick = ($event) => {\\r\\n        //uncomment for testing\\r\\n        //console.log(\'clicked\', $event);\\r\\n    };\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.alert {\\r\\n    display: flex;\\r\\n    padding: 24px;\\r\\n    flex-direction: column;\\r\\n    justify-content: flex-end;\\r\\n    align-items: flex-end;\\r\\n\\r\\n    &.has-action-button{\\r\\n        gap: 16px;\\r\\n    }\\r\\n    \\r\\n\\r\\n    &.actions-stacked {\\r\\n        min-width: 250px;\\r\\n\\r\\n        .btn-close {\\r\\n            padding: 1.75rem 1rem !important;\\r\\n        }\\r\\n\\r\\n        .alert-actions {\\r\\n            padding-right: 0px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.actions-inline {\\r\\n        min-width: 600px;\\r\\n\\r\\n        .btn-close {\\r\\n            position: absolute;\\r\\n            top: 50%;\\r\\n            transform: translate(-50%, -50%);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .alert-text {\\r\\n        align-self: stretch;\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    .text-contents {\\r\\n        display: flex;\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    .alert-title-and-text {\\r\\n        display: flex;\\r\\n        padding-right: 16px;\\r\\n        flex-direction: column;\\r\\n        align-items: flex-start;\\r\\n        word-wrap: break-word;\\r\\n\\r\\n    }\\r\\n\\r\\n    .alert-actions {\\r\\n        display: flex;\\r\\n        justify-content: flex-end;\\r\\n        align-items: flex-start;\\r\\n        gap: 16px;\\r\\n        padding-right: 50px;\\r\\n\\r\\n        .primary-action {\\r\\n            display: flex;\\r\\n            justify-content: center;\\r\\n            align-items: center;\\r\\n            gap: 8px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .alert-dismissible .btn-close {\\r\\n        padding: 1.75rem 1rem !important;\\r\\n    }\\r\\n\\r\\n    .btn-close {\\r\\n        outline: 0;\\r\\n        box-shadow: none;\\r\\n        font-size: 16px;\\r\\n    }\\r\\n\\r\\n    .alert-container {\\r\\n        display: flex;\\r\\n        padding-right: 16px;\\r\\n        gap: 8px;\\r\\n        align-self: stretch;\\r\\n    }\\r\\n\\r\\n    .alert-close {\\r\\n        display: flex;\\r\\n        justify-content: flex-end;\\r\\n        align-items: center;\\r\\n        gap: 8px;\\r\\n    }\\r\\n\\r\\n    &.small-alert {\\r\\n        i {\\r\\n            font-size: 16px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.medium-alert {\\r\\n        i {\\r\\n            font-size: 20px;\\r\\n        }\\r\\n    }\\r\\n}","styleUrl":"./alert.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":26},"implements":["OnInit"],"templateData":"<div\\r\\n    id=\\"{{ id }}\\"\\r\\n    class=\\"alert alert-{{ type }} alert-dismissible fade show {{ size }}-alert\\"\\r\\n    role=\\"alert\\"\\r\\n    [ngClass]=\\"{ \'actions-stacked\': layout === \'actionsStacked\', \'actions-inline\': layout === \'actionsInline\' }\\"\\r\\n>\\r\\n    <div class=\\"alert-container\\" [ngClass]=\\"{ actionsStacked: layout === \'actionsStacked\' }\\">\\r\\n        <i class=\\"{{ icon }} alert-icon\\" *ngIf=\\"showIcon\\" [ngClass]=\\"{ inline: layout === \'actionsInline\' }\\"></i>\\r\\n        <ng-container>\\r\\n            <div [ngClass]=\\"{ \'text-contents alert-title-and-text\': title !== null || title !== undefined }\\" class=\\"\\">\\r\\n                <h4 *ngIf=\\"title\\">{{ title }}</h4>\\r\\n\\r\\n                <div class=\\"alert-text\\">\\r\\n                    {{ text | translate }}\\r\\n                </div>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\"dismissible && layout === \'actionsStacked\'\\">\\r\\n            <button type=\\"button\\" class=\\"btn-close\\" data-bs-dismiss=\\"alert\\" aria-label=\\"Close\\" [id]=\\"\'alert-btn-close-\' + id\\"></button>\\r\\n        </ng-container>\\r\\n        <ng-container *ngIf=\\"layout === \'actionsInline\'\\">\\r\\n            <div class=\\"inline\\">\\r\\n                <div class=\\"alert-actions actions-inline\\">\\r\\n                    <div class=\\"primary-action\\" *ngFor=\\"let button of actionButtons\\">\\r\\n                        <ui-button\\r\\n                            [id]=\\"button.id\\"\\r\\n                            [disabled]=\\"button.disabled\\"\\r\\n                            [size]=\\"linkSize\\"\\r\\n                            [type]=\\"buttonType\\"\\r\\n                            [text]=\\"button.buttonText\\"\\r\\n                            [clicked]=\\"button.clicked\\"\\r\\n                        ></ui-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\"dismissible && layout === \'actionsInline\'\\">\\r\\n                    <button type=\\"button\\" class=\\"btn-close\\" data-bs-dismiss=\\"alert\\" aria-label=\\"Close\\"\\r\\n                            (click)=\\"(clicked !== undefined) ? clicked(this) : null \\"></button>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </div>\\r\\n    <ng-container *ngIf=\\"layout === \'actionsStacked\'\\">\\r\\n        <div class=\\"alert-actions\\">\\r\\n            <div class=\\"primary-action\\" *ngFor=\\"let button of actionButtons\\">\\r\\n                <ui-button\\r\\n                    [id]=\\"button.id\\"\\r\\n                    [size]=\\"linkSize\\"\\r\\n                    [type]=\\"buttonType\\"\\r\\n                    [text]=\\"button.buttonText\\"\\r\\n                    [clicked]=\\"button.clicked\\"\\r\\n                ></ui-button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n</div>\\r\\n"},{"name":"UiAreYouSureModalComponent","id":"component-UiAreYouSureModalComponent-5827b82d65192f9c4a946dfec9602ecfe6791df67de624097da2d983c19dca87d1d912b597a654b7525dbd21f15080dd516778b03a9ed7434fbab92536aa50ca","file":"libs/ui/src/lib/modules/authentification/components/modals/are-you-sure-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./are-you-sure-modal.component.scss"],"styles":[],"templateUrl":["./are-you-sure-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":11,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"onCancelClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onLogoutClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1821,"end":1825,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1815,"end":1820,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2020,"end":2024,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2014,"end":2019,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { UiModalBaseComponent } from \'@lib/modules/modal/components/modal-base/modal-base.component\';\\r\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\n@Component({\\r\\n    templateUrl: \'./are-you-sure-modal.component.html\',\\r\\n    styleUrls: [\'./are-you-sure-modal.component.scss\']\\r\\n})\\r\\nexport class UiAreYouSureModalComponent extends UiModalBaseComponent {\\r\\n\\r\\n    public constructor(public activeModal: NgbActiveModal) {\\r\\n        super(activeModal);\\r\\n    }\\r\\n\\r\\n    public onLogoutClick() {\\r\\n        this.dismiss(\'logout\');\\r\\n    }\\r\\n\\r\\n    public onCancelClick() {\\r\\n        this.submit(\'cancel\');\\r\\n    }\\r\\n\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./are-you-sure-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":9,"modifierKind":[123],"jsdoctags":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","templateData":"\x3c!-- Body START --\x3e\\r\\n<div #modalBody class=\\"modal-body\\">\\r\\n    {{ \'AUTHENTICATION.CONFIRM_DECLINE\' | translate }}\\r\\n</div>  \\r\\n\x3c!-- Body END--\x3e\\r\\n\\r\\n\x3c!-- Footer START --\x3e\\r\\n<div class=\\"modal-footer\\" [ngClass]=\\"{ \'border-0\': noBorder === true }\\">\\r\\n    <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primary\\" (click)=\\"onLogoutClick()\\">\\r\\n        {{ \'COMMON.LOG_OUT\' | translate }}\\r\\n    </button>\\r\\n    <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary\\" (click)=\\"onCancelClick()\\">\\r\\n        {{ \'COMMON.BACK\' | translate }}\\r\\n    </button>\\r\\n</div>\\r\\n\x3c!-- Footer END --\x3e\\r\\n\\r\\n"},{"name":"UiAssenteeLoginComponent","id":"component-UiAssenteeLoginComponent-ac9dcd9e75f4a63077abe557300431c0b2514d06afecefd94ec675d49e9174609f9eff9e2144298407e23effe1688f55d53ff813f54c813c1fd918ef71ee8ee2","file":"libs/ui/src/lib/modules/authentification/pages/ascentee-login/ascentee-login.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./ascentee-login.component.scss"],"styles":[],"templateUrl":["./ascentee-login.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"state","deprecated":false,"deprecationMessage":"","type":"UiOneTimePinComponentStateEnum","optional":false,"description":"","line":9,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\r\\n\\r\\n@Component({\\r\\n    templateUrl: \'./ascentee-login.component.html\',\\r\\n    styleUrls: [\'./ascentee-login.component.scss\']\\r\\n})\\r\\nexport class UiAssenteeLoginComponent implements OnInit {\\r\\n  public state: UiOneTimePinComponentStateEnum;\\r\\n\\r\\n  public ngOnInit(): void {\\r\\n      this.state = UiOneTimePinComponentStateEnum.acp;\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".toasts-container {\\r\\n    left: calc(50% - 168px);\\r\\n    width: 324px !important;\\r\\n}\\r\\n\\r\\n.ngb-toasts {\\r\\n    top: 20px !important;\\r\\n    right: 20px !important;\\r\\n}\\r\\n","styleUrl":"./ascentee-login.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<ui-toasts-container class=\\"toasts-container\\" aria-live=\\"polite\\" aria-atomic=\\"true\\"></ui-toasts-container>\\r\\n<ui-one-time-pin [state]=\\"state\\"></ui-one-time-pin>"},{"name":"UiAuth0CallbackComponent","id":"component-UiAuth0CallbackComponent-33e08145343769f141ddc4b5ea62e16fb3e2445eb9b0bbb695de6f4e4c30e96d4611dc5851de0ef52cfde7c0f509f7960667c07bb9cc13619bd333a93927044b","file":"libs/ui/src/lib/modules/authentification/auth0/components/callback.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-one-time-pin","styleUrls":[],"styles":[],"templateUrl":["./callback.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":29,"modifierKind":[121]},{"name":"_requestedUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28,"modifierKind":[121]},{"name":"_waitString","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27,"modifierKind":[121]}],"methodsClass":[{"name":"getWaitString","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[121,131]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>The component is called when the user is authenticated with Auth0</p>\\n","rawdescription":"\\nThe component is called when the user is authenticated with Auth0","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\n// Service imports\\r\\nimport { AuthService } from \'@auth0/auth0-angular\';\\r\\n// Enum imports\\r\\nimport { Router } from \'@angular/router\';\\r\\nimport { firstValueFrom } from \'rxjs\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Service imports\\r\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\r\\nimport { UiAuth0UserService } from \'../services/user.service\';\\r\\nimport { IUiAuth0Config } from \'../auth0-config\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\n// Auth Service\\r\\nimport { UiAuthService } from \'../services/auth.service\';\\r\\n\\r\\n/** The component is called when the user is authenticated with Auth0 */\\r\\n/*\\r\\n/* it is called by the Auth0 callback URL */\\r\\n/* it extracts the Auth0JWT and makes a call to */\\r\\n/* passwordlessLiginService.AuthorizeAuth0User which substitutes the Auth0JWT for a AssentJWT */\\r\\n@Component({\\r\\n    selector: \'ui-one-time-pin\',\\r\\n    templateUrl: \'./callback.component.html\',\\r\\n})\\r\\nexport class UiAuth0CallbackComponent implements OnInit {\\r\\n    private _waitString: string;\\r\\n    private _requestedUrl: string;\\r\\n    private _config: IUiAuth0Config;\\r\\n\\r\\n    public constructor(\\r\\n        private readonly _auth0Service: AuthService,\\r\\n        private readonly _authService: UiAuthService,\\r\\n        private readonly _router: Router,\\r\\n        private readonly _translateService: TranslateService,\\r\\n        private readonly _userService: UiAuth0UserService,\\r\\n        private readonly _configuationService: UiConfigurationService\\r\\n    ) {\\r\\n        this._config = this._configuationService.getConfig<IUiAuth0Config>(\'auth0\');\\r\\n    }\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.initialize();\\r\\n    }\\r\\n\\r\\n    public getWaitString() {\\r\\n        return this._waitString;\\r\\n    }\\r\\n\\r\\n    private async initialize() {\\r\\n        try {\\r\\n            const isAuth0Authenticated = await firstValueFrom(this._auth0Service.isAuthenticated$);\\r\\n\\r\\n            this._waitString = this._translateService.instant(\'COMMON.PLEASE_WAIT\');\\r\\n\\r\\n            // Since this is the Auth0 callback function, the user should be authenticated\\r\\n            if (!isAuth0Authenticated) {\\r\\n                console.error(\' Error -> User is not authenticated on Auth0 callback function: access denied\');\\r\\n                this._auth0Service.logout();\\r\\n                this._auth0Service.loginWithRedirect();\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            try {\\r\\n                if (this._authService.hasAnyPermission([this._config.authorizationParams.audience])) {\\r\\n                    this._auth0Service.user$.subscribe((user) => {\\r\\n                        this._userService.updateUser(user);\\r\\n                    });\\r\\n                }\\r\\n            } catch (error) {\\r\\n                console.error(error);\\r\\n            }\\r\\n\\r\\n            this._requestedUrl = localStorage.getItem(\'requestedUrl\');\\r\\n\\r\\n            if (!this._requestedUrl) {\\r\\n                this._requestedUrl = \'/\';\\r\\n            }\\r\\n\\r\\n            this._router.navigateByUrl(this._requestedUrl);\\r\\n\\r\\n        } catch (error) {\\r\\n            console.error(\'Error while initializing callback function: \' + error);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiAuth0UserService","deprecated":false,"deprecationMessage":""},{"name":"_configuationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":29,"modifierKind":[123],"jsdoctags":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiAuth0UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configuationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<p>{{ this.getWaitString() }}</p>\\r\\n"},{"name":"UiButtonComponent","id":"component-UiButtonComponent-92650e91165268bd9a84d28323e2432d19f655a11fabe6662404aee9f507d1bd8456e4f35f1d8f1e60cc19194c4752c06fe4f08950e58fafd719f1b7ff190959","file":"libs/ui/src/lib/modules/button/components/button/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-button","styleUrls":["./button.component.scss"],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"inputsClass":[{"name":"clicked","deprecated":false,"deprecationMessage":"","line":26,"type":"function","decorators":[]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":24,"type":"boolean","decorators":[]},{"name":"icon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"iconLocation","defaultValue":"UiButtonIconLocationEnum.prefix","deprecated":false,"deprecationMessage":"","line":22,"type":"UiButtonIconLocationEnum","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"inversed","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"UiButtonSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","line":21,"type":"UiButtonSizeEnum","decorators":[]},{"name":"text","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"type","defaultValue":"UiButtonTypeEnum.PRIMARY","deprecated":false,"deprecationMessage":"","line":20,"type":"UiButtonTypeEnum","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"UiButtonIconLocationEnum","defaultValue":"UiButtonIconLocationEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiButtonTypeEnum } from \'../../enums/action-button-type.enum\';\\r\\nimport { UiButtonSizeEnum } from \'../../enums/action-button-size.enum\';\\r\\nimport { UiButtonIconLocationEnum } from \'../../enums/action-button-icon-location.enum\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-button\',\\r\\n    templateUrl: \'./button.component.html\',\\r\\n    styleUrls: [\'./button.component.scss\'],\\r\\n})\\r\\n/**\\r\\n * Button component\\r\\n *\\r\\n * @description This component is used to display a button with text and an optional icon\\r\\n */\\r\\nexport class UiButtonComponent implements OnInit {\\r\\n    @Input() public id: string;\\r\\n    @Input() public text = \'\';\\r\\n    @Input() public tooltipText = \'\';\\r\\n    @Input() public type: UiButtonTypeEnum = UiButtonTypeEnum.PRIMARY;\\r\\n    @Input() public size: UiButtonSizeEnum = UiButtonSizeEnum.MEDIUM;\\r\\n    @Input() public iconLocation: UiButtonIconLocationEnum = UiButtonIconLocationEnum.prefix;\\r\\n    @Input() public icon = \'\';\\r\\n    @Input() public disabled = false;\\r\\n    @Input() public inversed = false;\\r\\n    @Input() public clicked?: (e) => any;\\r\\n    public UiButtonIconLocationEnum = UiButtonIconLocationEnum;\\r\\n\\r\\n    public ngOnInit() {}\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./button.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<button\\r\\n    [id]=\\"\'button_\' + id\\"\\r\\n    class=\\"btn {{ type }} {{ size }}\\"\\r\\n    [disabled]=\\"disabled\\"\\r\\n    attr.aria-labelledby=\\"{{ text }}\\"\\r\\n    ngbTooltip=\\"{{tooltipText | translate}}\\"\\r\\n    [ngClass]=\\"{ \'btn-inversed\': inversed === true && type === \'btn-primary\', disabled: disabled === true }\\"\\r\\n    (click)=\\"(clicked !== undefined) ? clicked(this) : null \\"\\r\\n>\\r\\n    <ng-container *ngIf=\\"iconLocation === UiButtonIconLocationEnum.prefix\\">\\r\\n        <i class=\\"bi {{icon}}\\"></i>\\r\\n        {{ text | translate }}\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\"iconLocation === UiButtonIconLocationEnum.suffix\\">\\r\\n        {{ text | translate }}\\r\\n        <i class=\\"bi {{icon}}\\"></i>\\r\\n    </ng-container>\\r\\n</button>\\r\\n"},{"name":"UiCardComponent","id":"component-UiCardComponent-871aa0a6a8e1dca6a5e3bbed837ee780234f468e5b2a495ebffca749f19fb32e962a6856ab0de076bb01a38e61a34fce638a11e93556f82748218b453beaa779","file":"libs/ui/src/lib/modules/card/components/card/card.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-card","styleUrls":["./card.component.scss"],"styles":[],"templateUrl":["./card.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","deprecated":false,"deprecationMessage":"","line":35,"type":"Array<IUiActionButton>","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"maxHeight","deprecated":false,"deprecationMessage":"","line":26,"type":"number","decorators":[]},{"name":"showCloseButton","deprecated":false,"deprecationMessage":"","line":23,"type":"boolean","decorators":[]},{"name":"showCustomLayout","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"showFooter","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"showHeader","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]},{"name":"titleSize","deprecated":false,"deprecationMessage":"","line":32,"type":"UiCardTitleSizeEnum","decorators":[]},{"name":"titleText","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]}],"outputsClass":[{"name":"closeButtonClick","defaultValue":"new EventEmitter<{\\r\\n        cardId: string;\\r\\n        cardRef?: UiCardComponent;\\r\\n    }>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter<literal type>"}],"propertiesClass":[{"name":"cardRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"maxHeight$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"showCloseButton$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"showCustomLayout$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"showFooter$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"showHeader$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"titleSize$","defaultValue":"new BehaviorSubject(UiCardTitleSizeEnum.md)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<UiCardTitleSizeEnum>","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"titleText$","defaultValue":"new BehaviorSubject(\'\')","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<string>","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"UiCardTitleSizeEnum","defaultValue":"UiCardTitleSizeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"viewContainerRef","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":54,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseButtonClick","args":[{"name":"cardId","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"cardComponent","type":"UiCardComponent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"cardId","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"cardComponent","type":"UiCardComponent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewContainerRef } from \'@angular/core\';\\r\\nimport { BehaviorSubject } from \'rxjs\';\\r\\nimport { UiCardTitleSizeEnum } from \'../../enums/card-title-size-enum\';\\r\\nimport { IUiActionButton } from \'../../interfaces/card.interface\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-card\',\\r\\n    templateUrl: \'./card.component.html\',\\r\\n    styleUrls: [\'./card.component.scss\'],\\r\\n})\\r\\nexport class UiCardComponent implements OnInit {\\r\\n    // Inputs\\r\\n    @Input() public id: string;\\r\\n    @Input() public set showCustomLayout(val: boolean) {\\r\\n        this.showCustomLayout$.next(val);\\r\\n    }\\r\\n    @Input() public set showHeader(val: boolean) {\\r\\n        this.showHeader$.next(val);\\r\\n    }\\r\\n    @Input() public set showFooter(val: boolean) {\\r\\n        this.showFooter$.next(val);\\r\\n    }\\r\\n    @Input() public set showCloseButton(val: boolean) {\\r\\n        this.showCloseButton$.next(val);\\r\\n    }\\r\\n    @Input() public set maxHeight(val: number) {\\r\\n        this.maxHeight$.next(val);\\r\\n    }\\r\\n    @Input() public set titleText(val: string) {\\r\\n        this.titleText$.next(val);\\r\\n    }\\r\\n    @Input() public set titleSize(val: UiCardTitleSizeEnum) {\\r\\n        this.titleSize$.next(val);\\r\\n    }\\r\\n    @Input() public actionButtons: Array<IUiActionButton>;\\r\\n\\r\\n    // Outputs\\r\\n    @Output() public closeButtonClick: EventEmitter<{ cardId: string; cardComponent?: UiCardComponent }> = new EventEmitter<{\\r\\n        cardId: string;\\r\\n        cardRef?: UiCardComponent;\\r\\n    }>();\\r\\n\\r\\n    // Public properties\\r\\n    public showHeader$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n    public showFooter$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n    public showCloseButton$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n    public maxHeight$: BehaviorSubject<number> = new BehaviorSubject(0);\\r\\n    public titleText$: BehaviorSubject<string> = new BehaviorSubject(\'\');\\r\\n    public titleSize$: BehaviorSubject<UiCardTitleSizeEnum> = new BehaviorSubject(UiCardTitleSizeEnum.md);\\r\\n    public showCustomLayout$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n\\r\\n    public UiCardTitleSizeEnum = UiCardTitleSizeEnum;\\r\\n\\r\\n    constructor(public viewContainerRef: ViewContainerRef, public cardRef: ElementRef) {}\\r\\n\\r\\n    // Public methods\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public onCloseButtonClick(cardId?: string, cardComponent?: UiCardComponent) {\\r\\n        this.closeButtonClick.emit({cardId, cardComponent});\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./card.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"cardRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":52,"jsdoctags":[{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cardRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"showCustomLayout":{"name":"showCustomLayout","setSignature":{"name":"showCustomLayout","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":14,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showHeader":{"name":"showHeader","setSignature":{"name":"showHeader","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":17,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showFooter":{"name":"showFooter","setSignature":{"name":"showFooter","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":20,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showCloseButton":{"name":"showCloseButton","setSignature":{"name":"showCloseButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":23,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"maxHeight":{"name":"maxHeight","setSignature":{"name":"maxHeight","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":26,"jsdoctags":[{"name":"val","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"titleText":{"name":"titleText","setSignature":{"name":"titleText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"titleSize":{"name":"titleSize","setSignature":{"name":"titleSize","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"UiCardTitleSizeEnum","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":32,"jsdoctags":[{"name":"val","type":"UiCardTitleSizeEnum","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div class=\\"card\\" [id]=\\" id+\'_card_div\'\\">    \\r\\n    <ng-container>\\r\\n        <div class=\\"card-header\\" *ngIf=\\"(showCustomLayout$ | async) === false && showHeader$ | async\\">\\r\\n            \x3c!-- TODO: This may conflict with ACP-45727 - all modal headers are to be h4 --\x3e\\r\\n            <h5 *ngIf=\\"(titleSize$ | async) === UiCardTitleSizeEnum.sm\\" class=\\"d-inline-block\\">{{titleText$ | async}}</h5>\\r\\n            <h4 *ngIf=\\"(titleSize$ | async) === UiCardTitleSizeEnum.md\\" class=\\"d-inline-block\\">{{titleText$ | async}}</h4>\\r\\n            <h3 *ngIf=\\"(titleSize$ | async) === UiCardTitleSizeEnum.lg\\" class=\\"d-inline-block\\">{{titleText$ | async}}</h3>\\r\\n            <button *ngIf=\\"showCloseButton$ | async\\" type=\\"button\\" class=\\"btn-close\\" aria-label=\\"Close\\" style=\\"float: right;\\" (click)=\\"onCloseButtonClick(id, this)\\"></button>\\r\\n        </div> \\r\\n        <div class=\\"card-body\\" [ngClass]=\\"{\'card-body\': (showCustomLayout$ | async) === false}\\" [style.maxHeight]=\\"maxHeight$.getValue() === 0 ? null : maxHeight$.getValue() + \'px\'\\">\\r\\n            <ng-content></ng-content>        \\r\\n        </div>    \\r\\n        <div class=\\"card-footer\\" *ngIf=\\"(showCustomLayout$ | async) === false && showFooter$ | async\\">\\r\\n            <ui-action-buttons-new [actionButtons]=\\"actionButtons\\"></ui-action-buttons-new>\\r\\n        </div>    \\r\\n    </ng-container>\\r\\n</div>\\r\\n"},{"name":"UiCheckboxComponent","id":"component-UiCheckboxComponent-9022a23fd5de9d70fbe20d53ef6ed03824fc4146bf5d02a17463efbc276e21807e1e65cb4bfac5b9fdc277c91d91deabd12e8fbd42bd6cb93664aef9d13757cc","file":"libs/ui/src/lib/modules/form/checkbox/checkbox.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-checkbox","styleUrls":["./checkbox.component.scss"],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":14,"type":"literal type[]","decorators":[]},{"name":"showPointer","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":true,"deprecationMessage":"Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form-controls\\\\checkbox\\\\checkbox.component.ts","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n// TODO - copy pasted from other form module to fix test\\r\\n/**\\r\\n * @deprecated Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form-controls\\\\checkbox\\\\checkbox.component.ts\\r\\n */\\r\\n@Component({\\r\\n    selector: \'ui-checkbox\',\\r\\n    templateUrl: \'./checkbox.component.html\',\\r\\n    styleUrls: [\'./checkbox.component.scss\'],\\r\\n})\\r\\nexport class UiCheckboxComponent extends UiFormControlBaseComponent {\\r\\n    @Input() public options: {label: string; value: string; disabled: boolean; required: boolean}[];\\r\\n    @Input() public inline = false;\\r\\n    @Input() public showPointer = true;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-check-inline {\\r\\n    width: max-content;\\r\\n    margin-right: 0.5rem;\\r\\n}","styleUrl":"./checkbox.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"<ng-container [formGroup]=\\"form\\"\\r\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\r\\n    <ui-form-control-base\\r\\n        [formControlName]=\\"formControlName\\"\\r\\n        [form]=\\"form\\"\\r\\n        [placeholder]=\\"placeholder\\"\\r\\n        [showHelpText]=\\"showHelpText\\"\\r\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n        [showInfoIcon]=\\"false\\"\\r\\n        [infoText]=\\"infoText\\"\\r\\n        [helpText]=\\"helpText\\"\\r\\n    >\\r\\n        <div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\r\\n            <div class=\\"form-check\\" [ngClass]=\\"{ \'form-check-inline\': inline === true }\\">\\r\\n                <input\\r\\n                    [id]=\\"id + \'_Checkbox\'\\"\\r\\n                    [name]=\\"formControlName\\"\\r\\n                    [formControlName]=\\"formControlName\\"\\r\\n                    type=\\"checkbox\\"\\r\\n                    class=\\"form-check-input\\"\\r\\n                    [value]=\\"value\\"\\r\\n                    [placeholder]=\\"placeholder\\"\\r\\n                    [disabled]=\\"disabled\\"\\r\\n                    (onChange)=\\"onChange($event)\\"\\r\\n                    [ngClass]=\\"{ pointer: !disabled && showPointer }\\"\\r\\n                />\\r\\n\\r\\n                <label\\r\\n                    [id]=\\"id + \'_Label\'\\"\\r\\n                    [for]=\\"id + \'_Checkbox\'\\"\\r\\n                    class=\\"form-check-label d-inline-block\\"\\r\\n                    [ngClass]=\\"{ pointer: !disabled && showPointer }\\"\\r\\n                >\\r\\n                    {{ label }}\\r\\n                    <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.requiredTrue)\\">*</span\\r\\n                    >\\r\\n                </label>\\r\\n                <i\\r\\n                    *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\r\\n                    class=\\"bi bi-question-circle-fill d-inline-block\\"\\r\\n                    placement=\\"top\\"\\r\\n                    [ngbTooltip]=\\"infoText\\"\\r\\n                ></i>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ui-form-control-base>\\r\\n</ng-container>\\r\\n"},{"name":"UiCheckboxComponent","id":"component-UiCheckboxComponent-0deab8425b5a48a87babe8f9322f50c2d8d759123982753e812021c40ae262d251c6d8116dc79c6dcb438779020e7b52ff4dad73ba07d8a539b6a4ec39b5bf2c-1","file":"libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-checkbox","styleUrls":["./checkbox.component.scss"],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":10,"type":"literal type[]","decorators":[]},{"name":"showPointer","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\n\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n@Component({\\r\\n    selector: \'ui-checkbox\',\\r\\n    templateUrl: \'./checkbox.component.html\',\\r\\n    styleUrls: [\'./checkbox.component.scss\'],\\r\\n})\\r\\nexport class UiCheckboxComponent extends UiFormControlBaseComponent {\\r\\n    @Input() public options: {label: string; value: string; disabled: boolean; required: boolean}[];\\r\\n    @Input() public inline = false;\\r\\n    @Input() public showPointer = true;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-check-inline {\\r\\n    width: max-content;\\r\\n    margin-right: 0.5rem;\\r\\n}","styleUrl":"./checkbox.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","isDuplicate":true,"duplicateId":1,"duplicateName":"UiCheckboxComponent-1","templateData":"\\r\\n\\r\\n<div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\r\\n\\r\\n    <div class=\\"form-check \\" [ngClass]=\\"{ \'form-check-inline\': inline === true }\\">\\r\\n         <input\\r\\n            [id]=\\"id + \'_Checkbox\'\\"\\r\\n            [name]=\\"formControlName\\"\\r\\n            type=\\"checkbox\\"\\r\\n            class=\\"form-check-input\\"\\r\\n            [ngModel]=\\"value\\"\\r\\n            [placeholder]=\\"placeholder\\"\\r\\n            [disabled]=\\"disabled\\"\\r\\n            (ngModelChange)=\\"onChange($event)\\"\\r\\n            [ngClass]=\\"{\'pointer\' : !disabled && showPointer}\\"\\r\\n        />\\r\\n\\r\\n        <label\\r\\n            [id]=\\"id + \'_Label\'\\"\\r\\n            [for]=\\"id + \'_Checkbox\'\\"\\r\\n            class=\\"form-check-label d-inline-block\\"\\r\\n            [ngClass]=\\"{\'pointer\' : !disabled && showPointer}\\"\\r\\n            >\\r\\n            {{label}}\\r\\n            <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.requiredTrue)\\">*</span>\\r\\n        </label>\\r\\n        <i *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill d-inline-block\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"error-text d-inline-block ps-1\\" style=\\"margin-top: 0px;\\" *ngIf=\\"form.controls[formControlName].invalid && showErrorValidation\\">\\r\\n        <div *ngIf=\\"form.controls[formControlName].errors\\">\\r\\n            <div [id]=\\"id + \'_RequiredTrueErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.requiredTrue\\">\\r\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\r\\n            </div>\\r\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.required\\">\\r\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" id=\\"\\" class=\\"help-text\\">{{helpText}}</div>\\r\\n\\r\\n</div>\\r\\n"},{"name":"UiComboboxRendererComponent","id":"component-UiComboboxRendererComponent-7617512b920ee570731333fe63482da338c3ea3979c3292668a7a56bf40f5b31c41d84cfb182e54d8feb2b5b7d27c352827ff1379a0591085efdbddb3d955e3b","file":"libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-combobox-renderer","styleUrls":["./combobox-renderer.component.scss"],"styles":[],"templateUrl":["./combobox-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_columnField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"_columnHeader","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"_options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"<p>Options array; used as a fallback if no options are provided</p>\\n","line":35,"rawdescription":"\\n\\nOptions array; used as a fallback if no options are provided\\n","modifierKind":[123]},{"name":"cellLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"cellValue","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"comboboxDropdownPlusRef","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":22,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'comboboxDropdownPlusRef\', {read: ViewContainerRef}"}],"modifierKind":[123]},{"name":"defaultValue","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption","optional":false,"description":"<p>(Optional) Default value for the dropdown</p>\\n","line":42,"rawdescription":"\\n\\n(Optional) Default value for the dropdown\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":1643,"end":1681,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1644,"end":1648,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1649,"end":1672,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1650,"end":1671,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":1650,"end":1671,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"IUiDropdownPlusOption"}}}},{"pos":1681,"end":1701,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1682,"end":1689,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>null</p>\\n"}]},{"name":"dropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdownRef\'"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"placeholderValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"rowNode","deprecated":false,"deprecationMessage":"","type":"RowNode","optional":false,"description":"<p>Represents the RowNode from Ag-Grid that is currently rendering</p>\\n","line":50,"rawdescription":"\\n\\nRepresents the RowNode from Ag-Grid that is currently rendering\\n","modifierKind":[123]},{"name":"selectedOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"<p>Represents the selected options in the combobox renderer component.</p>\\n","line":31,"rawdescription":"\\n\\nRepresents the selected options in the combobox renderer component.\\n","modifierKind":[123]}],"methodsClass":[{"name":"_getCellValue","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":180,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet the cell value based on the selected options Ids\\n\\n","description":"<p>Get the cell value based on the selected options Ids</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":8120,"end":8127,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>string</code> of the selected options Ids</p>\\n"}]},{"name":"_getLabelFromValues","args":[{"name":"selectedOptions","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet the label for the cell based on the selected options\\n\\n","description":"<p>Get the label for the cell based on the selected options</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9367,"end":9382,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"selectedOptions"},"type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":9361,"end":9366,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Selected options from the dropdown-plus component</p>\\n"},{"tagName":{"pos":9344,"end":9351,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""},{"tagName":{"pos":9442,"end":9449,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>string</p>\\n"}]},{"name":"_onSelectionChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen selection changes in the dropdown-plus component, update the cell value and label\\n\\n","description":"<p>When selection changes in the dropdown-plus component, update the cell value and label</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":8562,"end":8567,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":8556,"end":8561,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Event that is emitted when the selection changes in the dropdown-plus component</p>\\n"},{"tagName":{"pos":8539,"end":8546,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"agInit","args":[{"name":"params","type":"IUiComboboxRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCalled after grid is initialized\\n\\n","description":"<p>Called after grid is initialized</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2154,"end":2160,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"params"},"type":"IUiComboboxRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"pos":2148,"end":2153,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>IUiComboboxRendererParams</p>\\n"}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onTriggerClick","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen the trigger is clicked, open the dropdown\\n\\n","description":"<p>When the trigger is clicked, open the dropdown</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6754,"end":6759,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"pos":6748,"end":6753,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInterface method for Ag-Grid\\n\\n","description":"<p>Interface method for Ag-Grid</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7881,"end":7887,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"params"},"type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"pos":7875,"end":7880,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>ICellRendererParams</p>\\n"},{"tagName":{"pos":7917,"end":7924,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>boolean</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ViewChild, AfterViewInit, ViewContainerRef, OnDestroy } from \'@angular/core\';\\r\\n// Ag Grid\\r\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\r\\nimport { ICellRendererParams, RowNode } from \'ag-grid-community\';\\r\\n// Services\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Components & Interfaces\\r\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\r\\nimport { IUiComboboxRendererParams } from \'./interface/combobox-renderer-params.interface\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-combobox-renderer\',\\r\\n    templateUrl: \'./combobox-renderer.component.html\',\\r\\n    styleUrls: [\'./combobox-renderer.component.scss\'],\\r\\n})\\r\\n/**\\r\\n * Represents a custom cell renderer component for a combobox in an Ag-Grid.\\r\\n * Implements the `ICellRendererAngularComp` and `AfterViewInit` interfaces.\\r\\n */\\r\\nexport class UiComboboxRendererComponent implements ICellRendererAngularComp, AfterViewInit, OnDestroy {\\r\\n    @ViewChild(\'comboboxDropdownPlusRef\', { read: ViewContainerRef }) public comboboxDropdownPlusRef!: ViewContainerRef;\\r\\n    @ViewChild(\'dropdownRef\') public dropdownRef: UiDropdownPlusComponent;\\r\\n\\r\\n    public menuOpen = false;\\r\\n    public cellLabel = \'\';\\r\\n\\r\\n    /**\\r\\n     * Represents the selected options in the combobox renderer component.\\r\\n     */\\r\\n    public selectedOptions: IUiDropdownPlusOption[] = [];\\r\\n    /**\\r\\n     * Options array; used as a fallback if no options are provided\\r\\n     */\\r\\n    public _options: IUiDropdownPlusOption[] = [];\\r\\n    /**\\r\\n     * (Optional) Default value for the dropdown\\r\\n     *\\r\\n     * @type {IUiDropdownPlusOption}\\r\\n     * @default null\\r\\n     */\\r\\n    public defaultValue: IUiDropdownPlusOption;\\r\\n\\r\\n    public placeholderValue: string;\\r\\n    public cellValue: any;\\r\\n\\r\\n    /**\\r\\n     * Represents the RowNode from Ag-Grid that is currently rendering\\r\\n     */\\r\\n    public rowNode: RowNode;\\r\\n    public _columnHeader: string;\\r\\n    public _columnField: string;\\r\\n\\r\\n    constructor(private _translateService: TranslateService) {}\\r\\n\\r\\n    /**\\r\\n     * Called after grid is initialized\\r\\n     *\\r\\n     * @param params IUiComboboxRendererParams\\r\\n     */\\r\\n    public agInit(params: IUiComboboxRendererParams): void {\\r\\n        this._columnHeader = params.colDef.headerName;\\r\\n        this._columnField = params.colDef.field;\\r\\n        this._options = params.options;\\r\\n        this.rowNode = params.node;\\r\\n        this.placeholderValue = params.placeholderValue ?? params.colDef.cellRendererParams.placeholderValue ?? null;\\r\\n        this.defaultValue =\\r\\n            params.defaultValue !== undefined\\r\\n                ? params.defaultValue\\r\\n                : params.colDef.cellRendererParams.defaultValue !== undefined\\r\\n                    ? params.colDef.cellRendererParams.defaultValue\\r\\n                    : null;\\r\\n\\r\\n        const initParamValue = params.getValue();\\r\\n        if (initParamValue && initParamValue !== \'\') {\\r\\n            this.cellValue = initParamValue;\\r\\n\\r\\n            this.cellValue = this._options.filter((option) => {\\r\\n                if (initParamValue.includes(option.id)) {\\r\\n                    option.value = true;\\r\\n                    return option;\\r\\n                }\\r\\n            });\\r\\n        } else {\\r\\n            this.cellValue = this.defaultValue === null ? [] : this.defaultValue;\\r\\n        }\\r\\n\\r\\n        setTimeout(() => {\\r\\n            // Create the dropdown-plus component\\r\\n            this.dropdownRef = this.comboboxDropdownPlusRef.createComponent(UiDropdownPlusComponent).instance;\\r\\n            // Setup the dropdown-plus component\\r\\n            this.dropdownRef.externalTriggerEleId = this.rowNode.id + \'_trigger\';\\r\\n            this.dropdownRef.view = null; // Note: do not reference any view for the dropdown-plus component\\r\\n            this.dropdownRef.showSearch = params.showSearch ?? params.colDef.cellRendererParams.showSearch ?? true;\\r\\n            this.dropdownRef.showSelectClearBtns =\\r\\n                params.showSelectClearBtns ?? params.colDef.cellRendererParams.showSelectClearBtns ?? true;\\r\\n            this.dropdownRef.maxItemsShown = params.maxItemsToShow ?? params.colDef.cellRendererParams.maxItemsToShow ?? 3;\\r\\n            this.dropdownRef.multiSelect = params.multiSelect ?? params.colDef.cellRendererParams.multiSelect ?? true;\\r\\n            this.dropdownRef.small = true; // Note: this must use small size of the dropdown-plus component\\r\\n            // Set the options based on what was passed in from the columnDef\\r\\n            this.dropdownRef.options = this._options;\\r\\n            // Set the id of the dropdown based on the rowNode id from Ag-Grid\\r\\n            this.dropdownRef.id = this.rowNode.id;\\r\\n\\r\\n            // Subscription to the base selectionChange event, use local method to update cell value\\r\\n            this.dropdownRef.selectionChange.subscribe((event) => {\\r\\n                this._onSelectionChange(event);\\r\\n            });\\r\\n\\r\\n            this.dropdownRef.openChange.subscribe((event) => {\\r\\n                this.menuOpen = !this.menuOpen;\\r\\n            });\\r\\n\\r\\n            // Note: This timeout will wait for a tick for the DropdownPlus to be ready so dropdown can be configured\\r\\n            setTimeout(() => {\\r\\n                // Update the dropdown to ensure it is displayed correctly\\r\\n                this.dropdownRef.nbgDropdown.display = \'dynamic\';\\r\\n                this.dropdownRef.nbgDropdown.placement = \'bottom-start\';\\r\\n                this.dropdownRef.nbgDropdown.container = \'body\';\\r\\n                this.dropdownRef.nbgDropdown.dropdownClass = this.rowNode.id + \'_drop-wrapper\';\\r\\n                // Add the class to the dropdown panel, if not found the dropdown will not be styled correctly\\r\\n                if (this.dropdownRef.ngbDropPanel && this.dropdownRef.ngbDropPanel.nativeElement) {\\r\\n                    this.dropdownRef.ngbDropPanel.nativeElement.className += \' combobox-renderer-dropdown small\';\\r\\n                    if (this.dropdownRef.multiSelect) {\\r\\n                        this.dropdownRef.ngbDropPanel.nativeElement.className += \' multi-select\';\\r\\n                    }\\r\\n                }\\r\\n                // The selected options and label are initially based on the cell value\\r\\n                this.selectedOptions = this.cellValue;\\r\\n                this.dropdownRef.selectedOptions = this.dropdownRef.selectedList = this.selectedOptions;\\r\\n                this.cellLabel = this._getLabelFromValues(this.cellValue);\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        if (this.dropdownRef) {\\r\\n            this.dropdownRef.selectionChange.unsubscribe();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit() {}\\r\\n\\r\\n    /**\\r\\n     * When the trigger is clicked, open the dropdown\\r\\n     *\\r\\n     * @param event\\r\\n     */\\r\\n    public onTriggerClick(event: MouseEvent) {\\r\\n        this.dropdownRef.nbgDropdown.open();\\r\\n        const triggerEle = document.getElementById(this.dropdownRef.externalTriggerEleId);\\r\\n        if (this.dropdownRef.externalTriggerEleId !== undefined && this.dropdownRef.externalTriggerEleId !== null) {\\r\\n            if (triggerEle !== undefined && triggerEle !== null) {\\r\\n                const dropPanelEle = document.getElementById(this.dropdownRef.id + \'_drop-panel\');\\r\\n                const dropPanelWrapper = dropPanelEle.parentElement;\\r\\n                const position = triggerEle.getBoundingClientRect();\\r\\n                dropPanelWrapper.style.top =\\r\\n                    position.top + triggerEle.offsetTop + triggerEle.offsetHeight + this.dropdownRef.paddingTop + \'px\';\\r\\n                dropPanelWrapper.style.left = position.left + triggerEle.offsetLeft + \'px\';\\r\\n            }\\r\\n        }\\r\\n        this.dropdownRef.triggerClicked.emit({ id: this.dropdownRef.id, open: this.menuOpen, selectedOptions: this.selectedOptions });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Interface method for Ag-Grid\\r\\n     *\\r\\n     * @param params ICellRendererParams\\r\\n     * @returns boolean\\r\\n     */\\r\\n    public refresh(params: ICellRendererParams): boolean {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get the cell value based on the selected options Ids\\r\\n     *\\r\\n     * @returns `string` of the selected options Ids\\r\\n     */\\r\\n    private _getCellValue() {\\r\\n        let cellDisplayValue = \'\';\\r\\n        for (const option of this.cellValue) {\\r\\n            cellDisplayValue += option.id + \',\';\\r\\n        }\\r\\n        return cellDisplayValue.trim().replace(/,$/, \'\');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * When selection changes in the dropdown-plus component, update the cell value and label\\r\\n     *\\r\\n     * @private\\r\\n     * @param event Event that is emitted when the selection changes in the dropdown-plus component\\r\\n     */\\r\\n    private _onSelectionChange(event) {\\r\\n        setTimeout(() => {\\r\\n            this.cellLabel = this._getLabelFromValues(event.selectedOptions);\\r\\n            this.selectedOptions = this.cellValue = event.selectedOptions;\\r\\n            this.dropdownRef.selectedList = this.dropdownRef.selectedOptions = this.selectedOptions;\\r\\n            // Update the cell value in the grid - see https://www.ag-grid.com/angular-data-grid/data-update-single-row-cell/\\r\\n            const newValue = this._getCellValue();\\r\\n            this.rowNode.setDataValue(this._columnField, newValue);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get the label for the cell based on the selected options\\r\\n     *\\r\\n     * @private\\r\\n     * @param selectedOptions Selected options from the dropdown-plus component\\r\\n     * @returns string\\r\\n     */\\r\\n    private _getLabelFromValues(selectedOptions: IUiDropdownPlusOption[]) {\\r\\n        if (selectedOptions.length === 0 || !selectedOptions) {\\r\\n            if (this.defaultValue && this.defaultValue.label !== \'\') {\\r\\n                return this.defaultValue.label;\\r\\n            } else if (this.placeholderValue && this.placeholderValue !== \'\') {\\r\\n                return this.placeholderValue;\\r\\n            } else {\\r\\n                return this._translateService.instant(\'COMMON.NONE\');\\r\\n            }\\r\\n        } else if (selectedOptions.length === this.dropdownRef.options.length) {\\r\\n            // All selected\\r\\n            return this._translateService.instant(\'COMMON.ALL\');\\r\\n        } else if (selectedOptions.length === 1) {\\r\\n            // Single selected\\r\\n            return selectedOptions[0].label;\\r\\n        } else if (selectedOptions.length >= 1) {\\r\\n            // Multiple selected\\r\\n            return this._columnHeader;\\r\\n        } else {\\r\\n            // Fallback\\r\\n            return this._translateService.instant(\'COMMON.NO_DATA_TO_DISPLAY\');\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./combobox-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":52,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["ICellRendererAngularComp","AfterViewInit","OnDestroy"],"templateData":"<div class=\\"combobox-wrapper\\">\\r\\n    <ng-container #comboboxDropdownPlusRef></ng-container>\\r\\n    <div\\r\\n        class=\\"d-flex justify-content-between align-items-center combobox-cell-trigger\\"\\r\\n        [id]=\\"rowNode.id + \'_trigger\'\\"\\r\\n        (click)=\\"onTriggerClick($event)\\"\\r\\n        [ngClass]=\\"{ open: menuOpen === true, \'option-selected\': selectedOptions.length !== 0 }\\"\\r\\n    >\\r\\n        <div class=\\"label d-inline-block text-truncate\\">\\r\\n            {{ cellLabel | translate }}\\r\\n            <span *ngIf=\\"selectedOptions.length > 1\\"> ({{ selectedOptions.length }})</span>\\r\\n        </div>\\r\\n        <div>\\r\\n            <i \\r\\n                class=\\"bi ms-1 d-inline-block anim\\"\\r\\n                [ngClass]=\\"menuOpen ? \'bi-caret-up-fill\' : \'bi-caret-down-fill\'\\"\\r\\n            >\\r\\n            </i>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiConsentPageComponent","id":"component-UiConsentPageComponent-aa6ff29bf1ea97230527ea4c58fe9781f956da36e21907bbffe5d571f902f0f4ea95df33800703f42d793510b4f524632d7c94592997fe57b9e618b66f9fe8e5","file":"libs/ui/src/lib/modules/consent/pages/user-consent-page/user-consent-page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-user-consent-page","styleUrls":["./user-consent-page.component.scss"],"styles":[],"templateUrl":["./user-consent-page.component.html"],"viewProviders":[],"inputsClass":[{"name":"auth0","deprecated":false,"deprecationMessage":"","line":21,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"getConsentErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"openAreYouSureModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"openPrivacyModal","args":[{"name":"auth0","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"auth0","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, Inject } from \'@angular/core\';\\r\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\r\\nimport { UiPrivacyAgreementModalComponent } from \'@lib/modules/authentification/components/modals/privacy-agreement-modal.component\';\\r\\nimport { ConsentService } from \'@lib/services/consent/consent-service.token\';\\r\\nimport { IUiConsentService } from \'@lib/interfaces/consent-service.interface\';\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { catchError, take, throwError } from \'rxjs\';\\r\\nimport { Router } from \'@angular/router\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { HttpErrorResponse } from \'@angular/common/http\';\\r\\nimport { UiAreYouSureModalComponent } from \'@lib/modules/authentification/components/modals/are-you-sure-modal.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-user-consent-page\',\\r\\n    templateUrl: \'./user-consent-page.component.html\',\\r\\n    styleUrls: [\'./user-consent-page.component.scss\'],\\r\\n})\\r\\nexport class UiConsentPageComponent implements OnInit {\\r\\n    @Input() public auth0;\\r\\n\\r\\n    constructor(\\r\\n        private _router: Router,\\r\\n        @Inject(ConsentService) private _consentService: IUiConsentService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _translate: TranslateService,\\r\\n        private _cookieService: CookieService\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.openPrivacyModal(this.auth0);\\r\\n    }\\r\\n\\r\\n    private openPrivacyModal(auth0: boolean) {\\r\\n        if (this._modalService.hasOpenModals()) {\\r\\n            return;\\r\\n        }\\r\\n        const modalRef = this._modalService.open(UiPrivacyAgreementModalComponent, { backdrop: false, scrollable: true, size: \'md\' });\\r\\n        modalRef.result.then(\\r\\n            // Do something here\\r\\n            (result?: any) => {\\r\\n                this._consentService\\r\\n                    .giveConsent(this._cookieService.get(this._configurationService.appConfig.emailCookieId))\\r\\n                    .pipe(take(1))\\r\\n                    .subscribe({\\r\\n                        next: (res: any) => {\\r\\n                            this._cookieService.set(this._configurationService.appConfig.isConsentGiven, \'true\');\\r\\n                            this._router.navigate([this._consentService.getReturnUrl()]);\\r\\n                        },\\r\\n                        error: catchError((error) => {\\r\\n                            let errorMsg: string;\\r\\n                            if (error.error instanceof ErrorEvent) {\\r\\n                                errorMsg = `Error: ${error.error.message}`;\\r\\n                            } else {\\r\\n                                errorMsg = this.getConsentErrorMessage(error);\\r\\n                            }\\r\\n\\r\\n                            return throwError(() => new Error(errorMsg));\\r\\n                        }),\\r\\n                    });\\r\\n            },\\r\\n            (dismiss?) => {\\r\\n                this.openAreYouSureModal();\\r\\n            }\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private getConsentErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // TODO - add error states\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private openAreYouSureModal() {\\r\\n        const modalRef = this._modalService.open(UiAreYouSureModalComponent, new UiModalConfig());\\r\\n\\r\\n        modalRef.result.then(\\r\\n            // Do something here\\r\\n            (result?: any) => {\\r\\n                this._modalService.dismissAll();\\r\\n                this.openPrivacyModal(this.auth0);\\r\\n            },\\r\\n            (dismiss?) => {\\r\\n                this._consentService.logout();\\r\\n            }\\r\\n        );\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n#background {\\r\\n    background-image: url(/assets/images/login-background-top-right.svg), url(/assets/images/login-background-bottom-left.svg),        $blue-to-green;\\r\\n    background-position: left top, right bottom, left;\\r\\n    background-repeat: no-repeat, no-repeat, no-repeat;\\r\\n    height: 100vh;\\r\\n    overflow: auto;\\r\\n}\\r\\n ","styleUrl":"./user-consent-page.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_consentService","type":"IUiConsentService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_consentService","type":"IUiConsentService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div id=\\"background\\"></div>"},{"name":"UiCustomHeaderComponent","id":"component-UiCustomHeaderComponent-ce750657e3e998024135f3aab3664d4add207025305c94661d8be93b2978432c03a186822cd1d83a8dcb1deb6b174680985d00d5ba9dbb73d6d908103d2a71f3","file":"libs/ui/src/lib/modules/grid/components/custom-header/custom-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-custom-header","styleUrls":["./custom-header.component.scss"],"styles":[],"templateUrl":["./custom-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"ascSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"descSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"menuButton","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'menuButton\', {read: ElementRef}"}],"modifierKind":[123]},{"name":"noSort","defaultValue":"\'active\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"IHeaderParams","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"sortDirection","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onMenuClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSortChanged","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSortRequested","args":[{"name":"order","type":"\\"asc\\" | \\"desc\\"","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"order","type":"\\"asc\\" | \\"desc\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refresh","args":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, OnInit, ViewChild } from \'@angular/core\';\\r\\nimport { IHeaderAngularComp } from \'ag-grid-angular\';\\r\\nimport { IHeaderParams } from \'ag-grid-community\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-custom-header\',\\r\\n    templateUrl: \'./custom-header.component.html\',\\r\\n    styleUrls: [\'./custom-header.component.scss\'],\\r\\n})\\r\\nexport class UiCustomHeaderComponent implements OnInit, IHeaderAngularComp {\\r\\n\\r\\n    public params: IHeaderParams;\\r\\n\\r\\n    public ascSort: string;\\r\\n    public descSort: string;\\r\\n    public noSort= \'active\';\\r\\n\\r\\n    public sortDirection: string;\\r\\n\\r\\n    @ViewChild(\'menuButton\', {read: ElementRef}) public menuButton;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public agInit(params: IHeaderParams): void {\\r\\n        this.params = params;\\r\\n        params.column.addEventListener(\'sortChanged\', this.onSortChanged.bind(this));\\r\\n    }\\r\\n\\r\\n    public onClick(){\\r\\n\\r\\n        if(this.params.enableSorting === true){\\r\\n\\r\\n            let sortDirection: \'asc\'|\'desc\';\\r\\n\\r\\n            if(this.params.column.getSort() === undefined) {\\r\\n                sortDirection = \'desc\';\\r\\n            }\\r\\n            else if(this.params.column.getSort() === \'desc\')\\r\\n            {\\r\\n                sortDirection = \'asc\';\\r\\n            }\\r\\n            else if(this.params.column.getSort() === \'asc\'){\\r\\n                sortDirection = null;\\r\\n            }\\r\\n\\r\\n            this.sortDirection = sortDirection;\\r\\n\\r\\n            this.params.columnApi.applyColumnState({\\r\\n                state: [\\r\\n                    { colId: this.params.column.getColId(), sort: sortDirection, sortIndex: 0 },\\r\\n                ],\\r\\n                defaultState: { sort: null },\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public refresh(params: IHeaderParams) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    public onMenuClicked() {\\r\\n        this.params.showColumnMenu(this.menuButton.nativeElement);\\r\\n    };\\r\\n\\r\\n    public onSortChanged() {\\r\\n        this.ascSort = this.descSort = this.noSort = \'inactive\';\\r\\n        if (this.params.column.isSortAscending()) {\\r\\n            this.ascSort = \'active\';\\r\\n        } else if (this.params.column.isSortDescending()) {\\r\\n            this.descSort = \'active\';\\r\\n        } else {\\r\\n            this.noSort = \'active\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onSortRequested(order: \'asc\' | \'desc\', event: any) {\\r\\n        this.params.setSort(order, event.shiftKey);\\r\\n    }\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}","styleUrl":"./custom-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":20},"implements":["OnInit","IHeaderAngularComp"],"templateData":"<div class=\\"d-flex align-items-center w-100 h-100\\" (click)=\\"onClick()\\">\\r\\n    <div class=\\"customHeaderLabel\\">{{ params?.displayName }}</div>\\r\\n    <div *ngIf=\\"params !== undefined && params[\'infoText\'] !== undefined\\" class=\\"ps-3\\">\\r\\n        <i class=\\"bi bi-question-circle-fill ms-2\\" placement=\\"top\\" [ngbTooltip]=\\"params[\'infoText\']\\" container = \\"body\\" ></i>\\r\\n    </div>\\r\\n    \x3c!-- {{ascSort}}-{{descSort}}-{{noSort}} --\x3e\\r\\n    <div *ngIf=\\"params !== undefined && params.enableSorting && ascSort === \'active\'\\" class=\\"ps-3\\">\\r\\n        <i class=\\"bi bi-caret-up-fill\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\"params !== undefined && params.enableSorting && descSort === \'active\'\\" class=\\"ps-3\\">\\r\\n        <i class=\\"bi bi-caret-down-fill\\"></i>\\r\\n    </div>\\r\\n    <div *ngIf=\\"params !== undefined && params.enableSorting && noSort === \'active\'\\" class=\\"bi-caret-up-down-fill ps-3\\">\\r\\n        <i class=\\"bi bi-caret-up-fill params\\"></i>\\r\\n        <i class=\\"bi bi-caret-down-fill\\"></i>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiCustomLoadingCellRendererComponent","id":"component-UiCustomLoadingCellRendererComponent-5a909431d8ac60eb436d4d83089e1a96b6d7c7a7693abe97437cf304191595cba7a79b8ce8314d2265a30b81a881dc66f9534f4cd299ca1ac9834bf6dd05992c","file":"libs/ui/src/lib/modules/grid/components/custom-loading-cell-renderer/custom-loading-cell-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-custom-loading-cell-renderer","styleUrls":["./custom-loading-cell-renderer.component.scss"],"styles":[],"templateUrl":["./custom-loading-cell-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { GridApi, ILoadingCellRendererParams } from \'ag-grid-community\';\\r\\nimport { Component, OnInit } from \'@angular/core\';\\r\\nimport { ILoadingCellRendererAngularComp } from \'ag-grid-angular\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-custom-loading-cell-renderer\',\\r\\n    templateUrl: \'./custom-loading-cell-renderer.component.html\',\\r\\n    styleUrls: [\'./custom-loading-cell-renderer.component.scss\'],\\r\\n})\\r\\nexport class UiCustomLoadingCellRendererComponent implements ILoadingCellRendererAngularComp {\\r\\n    // any is used instead of ILoadingCellRendererParams\\r\\n    // because it does not support loadingMessage which is used in the markup\\r\\n    public params: any;\\r\\n\\r\\n    public agInit(params: any): void {\\r\\n        this.params = params;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./custom-loading-cell-renderer.component.scss"}],"stylesData":"","implements":["ILoadingCellRendererAngularComp"],"templateData":"<div class=\\"d-flex align-items-center ag-custom-loading-cell ms-2\\">\\r\\n    <div class=\\"spinner-border spinner-border-sm text-primary me-3\\"></div>\\r\\n    <span> {{ params.loadingMessage | translate }} </span>\\r\\n</div>"},{"name":"UiCustomMultiSelectHeaderComponent","id":"component-UiCustomMultiSelectHeaderComponent-e5e0935df30dc17d710bd3d957f9fda4a132f0c8cb792e8226820314fc601e646b728821a82bfc6c4b031c38a3146a3f83336357ffeac9c7cb7709613479c815","file":"libs/ui/src/lib/modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-custom-multiselect-header","styleUrls":["./custom-multiselect-header.component.scss"],"styles":[],"templateUrl":["./custom-multiselect-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"ariaCheckedState","deprecated":false,"deprecationMessage":"","type":" |  | \\"mixed\\"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"ascSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"checkedState","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"descSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"gridApi","deprecated":false,"deprecationMessage":"","type":"GridApi","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"headerCheckboxLabel","defaultValue":"this._translateService.instant(\'COMMON.SELECT\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"id","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"indeterminateState","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"multiSelectCheckbox","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":16,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'multiSelectCheckbox\'"}],"modifierKind":[123]},{"name":"noSort","defaultValue":"\'active\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"IHeaderParams","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"rowModelType","deprecated":false,"deprecationMessage":"","type":"\\"infinite\\" | \\"viewport\\" | \\"clientSide\\" | \\"serverSide\\"","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"selectedRows","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"RowNode[]","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"selectionChange$","defaultValue":"new EventEmitter<IUiSelectionChangeParams>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"sortDirection","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"totalRowsInGrid","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"visibleRowsLastIndex","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"IUiMultiSelectHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IUiMultiSelectHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCellClick","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onColumnHeaderClick","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSee: `UiCustomHeaderComponent` onClick() for reference\\n","description":"<p>See: <code>UiCustomHeaderComponent</code> onClick() for reference</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4871,"end":4876,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4865,"end":4870,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Click event in column header</p>\\n"}]},{"name":"onRowSelected","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onToggle","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refresh","args":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggleAll","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","modifierKind":[121]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\r\\n// Ag-Grid\\r\\nimport { RowNode, GridApi, IHeaderParams } from \'ag-grid-community\';\\r\\n// Ngx Translate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Interfaces\\r\\nimport { IUiMultiSelectHeaderParams, IUiSelectionChangeParams } from \'../grid/interfaces\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-custom-multiselect-header\',\\r\\n    templateUrl: \'./custom-multiselect-header.component.html\',\\r\\n    styleUrls: [\'./custom-multiselect-header.component.scss\'],\\r\\n})\\r\\nexport class UiCustomMultiSelectHeaderComponent implements OnInit, OnDestroy {\\r\\n    @ViewChild(\'multiSelectCheckbox\') public multiSelectCheckbox: ElementRef;\\r\\n\\r\\n    public headerCheckboxLabel = this._translateService.instant(\'COMMON.SELECT\');\\r\\n    public id: any;\\r\\n    public disabled = false;\\r\\n    public params: IHeaderParams;\\r\\n    public gridApi: GridApi;\\r\\n    public visibleRowsLastIndex: number; // TODO: can this come from the grid observable?\\r\\n    public totalRowsInGrid: number; // TODO: can this come from the grid observable?\\r\\n    public selectedRows: RowNode[] = [];\\r\\n    public ariaCheckedState: true | false | \'mixed\';\\r\\n    public checkedState: boolean;\\r\\n    public indeterminateState: boolean;\\r\\n\\r\\n    public ascSort: string;\\r\\n    public descSort: string;\\r\\n    public noSort = \'active\';\\r\\n    public rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\r\\n    public sortDirection: string;\\r\\n\\r\\n    public selectionChange$ = new EventEmitter<IUiSelectionChangeParams>();\\r\\n\\r\\n    constructor(private _translateService: TranslateService) {\\r\\n        const a = 1;\\r\\n    }\\r\\n\\r\\n    public agInit(params: IUiMultiSelectHeaderParams): void {\\r\\n        this.gridApi = params.api;\\r\\n        this.params = params;\\r\\n        this.id = params.gridId + \'-multi-select-header\';\\r\\n        this.selectionChange$ = params.selectionChange;\\r\\n        this.rowModelType = params.rowModelType;\\r\\n\\r\\n        /* Please keep this code for future reference\\r\\n            Not required at this time since only the checkbox is being used for selection * /\\r\\n        params.api.addEventListener(\'rowClicked\', (event) => {\\r\\n            event.node.setSelected(!event.node.selected);\\r\\n            this.onRowSelected(event);\\r\\n        }); */\\r\\n\\r\\n        params.api.addEventListener(\'filterChanged\', (event) => {\\r\\n            setTimeout(() => {\\r\\n                this.gridApi.deselectAll();\\r\\n            });\\r\\n        });\\r\\n\\r\\n        // Fires when the checkbox is clicked or selected event\\r\\n        params.api.addEventListener(\'rowSelected\', (event) => {\\r\\n            this.onRowSelected(event);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public onRowSelected(event: any) {\\r\\n        if (event.node.selectable) {\\r\\n            const totalFilteredRows = this.gridApi.getDisplayedRowCount();\\r\\n            const currentPageRows = this.gridApi.paginationGetPageSize();\\r\\n\\r\\n            this.indeterminateState = this.multiSelectCheckbox.nativeElement.indeterminate;\\r\\n            this.checkedState = this.multiSelectCheckbox.nativeElement.checked;\\r\\n\\r\\n            this.selectedRows = this.gridApi.getSelectedRows();\\r\\n\\r\\n            if (this.selectedRows.length === 0) {\\r\\n                this.checkedState = false;\\r\\n                this.indeterminateState = false;\\r\\n                this.ariaCheckedState = false;\\r\\n            } else if (this.selectedRows.length === totalFilteredRows) {\\r\\n                this.checkedState = true;\\r\\n                this.indeterminateState = false;\\r\\n                this.ariaCheckedState = true;\\r\\n            } else if (this.selectedRows.length === currentPageRows) {\\r\\n                this.checkedState = true;\\r\\n                this.indeterminateState = false;\\r\\n                this.ariaCheckedState = true;\\r\\n            } else if (this.selectedRows.length < totalFilteredRows) {\\r\\n                this.checkedState = false;\\r\\n                this.indeterminateState = true;\\r\\n                this.ariaCheckedState = \'mixed\';\\r\\n            } else {\\r\\n                console.error(\'rowSelected: error determining checkbox state\');\\r\\n            }\\r\\n\\r\\n            // Emit the selection change event\\r\\n            if (this.selectionChange$) {\\r\\n                this.selectionChange$.emit({\\r\\n                    gridId: this.id,\\r\\n                    selectedRows: this.selectedRows,\\r\\n                });\\r\\n            }\\r\\n        } else {\\r\\n            console.error(`row is not selectable (row# = ${event.rowIndex}`);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onToggle(event: Event): void {\\r\\n        event.preventDefault();\\r\\n        event.stopPropagation();\\r\\n\\r\\n        this.indeterminateState = this.multiSelectCheckbox.nativeElement.indeterminate;\\r\\n        this.checkedState = this.multiSelectCheckbox.nativeElement.checked;\\r\\n        this.toggleAll();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @see: `UiCustomHeaderComponent` onClick() for reference\\r\\n     * @param event Click event in column header\\r\\n     */\\r\\n    public onColumnHeaderClick(event: any) {\\r\\n        event.preventDefault();\\r\\n        event.stopPropagation();\\r\\n\\r\\n        if (this.params.enableSorting === true) {\\r\\n            let sortDirection: \'asc\' | \'desc\';\\r\\n\\r\\n            if (this.params.column.getSort() === undefined) {\\r\\n                sortDirection = \'desc\';\\r\\n            } else if (this.params.column.getSort() === \'desc\') {\\r\\n                sortDirection = \'asc\';\\r\\n            } else if (this.params.column.getSort() === \'asc\') {\\r\\n                sortDirection = null;\\r\\n            }\\r\\n\\r\\n            this.sortDirection = sortDirection;\\r\\n\\r\\n            this.params.columnApi.applyColumnState({\\r\\n                state: [{ colId: this.params.column.getColId(), sort: sortDirection, sortIndex: 0 }],\\r\\n                defaultState: { sort: null },\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onCellClick(event: Event): void {\\r\\n        event.preventDefault();\\r\\n        event.stopPropagation();\\r\\n\\r\\n        this.checkedState = !this.multiSelectCheckbox.nativeElement.checked;\\r\\n        this.indeterminateState = false;\\r\\n        this.toggleAll();\\r\\n    }\\r\\n\\r\\n    public refresh(params: IHeaderParams) {\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this.selectionChange$.unsubscribe();\\r\\n    }\\r\\n\\r\\n    private toggleAll() {\\r\\n        if (this.rowModelType !== \'clientSide\') {\\r\\n            console.error(\'toggleAll: Multi-Select is only supported for client-side row models.\');\\r\\n        } else {\\r\\n            if (this.indeterminateState) {\\r\\n                console.error(\'toggleAll: checkbox in \\"mixed\\" state.\');\\r\\n            } else if (this.checkedState) {\\r\\n                this.gridApi.selectAllFiltered();\\r\\n            } else if (!this.checkedState) {\\r\\n                this.gridApi.deselectAllFiltered();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".grid-multiselect-checkbox {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: relative;\\r\\n\\r\\n    margin-right: 0.5rem;\\r\\n\\r\\n    display: flex;\\r\\n    flex-wrap: nowrap;\\r\\n    align-items: center;\\r\\n\\r\\n    input.form-check-input {\\r\\n        width: 1rem;\\r\\n        height: 1rem;\\r\\n    }\\r\\n}\\r\\n","styleUrl":"./custom-multiselect-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div class=\\"d-flex align-items-center w-100 h-100\\">\\r\\n    <div class=\\"grid-multiselect-checkbox\\" [ngClass]=\\"{ \'d-none\': this.rowModelType !== \'clientSide\' }\\">\\r\\n        <input\\r\\n            #multiSelectCheckbox\\r\\n            [id]=\\"id + \'_MultiSelectCheckbox\'\\"\\r\\n            type=\\"checkbox\\"\\r\\n            (change)=\\"onToggle($event)\\"\\r\\n            class=\\"form-check-input\\"\\r\\n            role=\\"checkbox\\"\\r\\n            [attr.aria-checked]=\\"ariaCheckedState\\"\\r\\n            [attr.aria-label]=\\"headerCheckboxLabel\\"\\r\\n            [disabled]=\\"disabled\\"\\r\\n            [checked]=\\"checkedState\\"\\r\\n            [indeterminate]=\\"indeterminateState\\"\\r\\n        />\\r\\n    </div>\\r\\n    \x3c!-- Sort template copied from @lib/...grid/components/custom-header/custom-header.component.html --\x3e\\r\\n    <div class=\\"d-flex align-items-center w-100 h-100\\" (click)=\\"onColumnHeaderClick($event)\\">\\r\\n        <div class=\\"customHeaderLabel\\">{{ params?.displayName }}</div>\\r\\n        <div *ngIf=\\"params !== undefined && params[\'infoText\'] !== undefined\\" class=\\"ps-3\\">\\r\\n            <i class=\\"bi bi-question-circle-fill ms-2\\" placement=\\"top\\" [ngbTooltip]=\\"params[\'infoText\']\\" container=\\"body\\"></i>\\r\\n        </div>\\r\\n        \x3c!-- {{ascSort}}-{{descSort}}-{{noSort}} --\x3e\\r\\n        <div *ngIf=\\"params !== undefined && params.enableSorting && ascSort === \'active\'\\" class=\\"ps-3\\">\\r\\n            <i class=\\"bi bi-caret-up-fill\\"></i>\\r\\n        </div>\\r\\n        <div *ngIf=\\"params !== undefined && params.enableSorting && descSort === \'active\'\\" class=\\"ps-3\\">\\r\\n            <i class=\\"bi bi-caret-down-fill\\"></i>\\r\\n        </div>\\r\\n        <div *ngIf=\\"params !== undefined && params.enableSorting && noSort === \'active\'\\" class=\\"bi-caret-up-down-fill ps-3\\">\\r\\n            <i class=\\"bi bi-caret-up-fill params\\"></i>\\r\\n            <i class=\\"bi bi-caret-down-fill\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiDashboardComponent","id":"component-UiDashboardComponent-bf77221684f6643c65533803fc15c571f9fb2e877f3cd99d186b264ce2a3d0651591027b3ae3f565a53fbbd2c0120e6740729d3f903a6f0a023e04e2a335c037","file":"libs/ui/src/lib/modules/dashboard/dashboard.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dashboard","styleUrls":["./dashboard.component.scss"],"styles":[],"templateUrl":["./dashboard.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"contactSupportLink","defaultValue":"\'#\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"goToProductDeclarations","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"goToProfileManager","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"returnUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"smallDashboardPage","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"UiButtonIconLocationEnum","defaultValue":"UiButtonIconLocationEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"UiButtonSizeEnum","defaultValue":"UiButtonSizeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"UiButtonTypeEnum","defaultValue":"UiButtonTypeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { UiButtonSizeEnum } from \'../button/enums/action-button-size.enum\';\\r\\nimport { UiButtonTypeEnum } from \'../button/enums/action-button-type.enum\';\\r\\nimport { UiButtonIconLocationEnum } from \'../button/enums/action-button-icon-location.enum\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-dashboard\',\\r\\n    templateUrl: \'./dashboard.component.html\',\\r\\n    styleUrls: [\'./dashboard.component.scss\'],\\r\\n})\\r\\nexport class UiDashboardComponent implements OnInit {\\r\\n    public returnUrl = \'\';\\r\\n    public contactSupportLink = \'#\';\\r\\n    public smallDashboardPage = false;\\r\\n    public UiButtonTypeEnum = UiButtonTypeEnum;\\r\\n    public UiButtonSizeEnum = UiButtonSizeEnum;\\r\\n    public UiButtonIconLocationEnum = UiButtonIconLocationEnum;\\r\\n\\r\\n    constructor(private _location: Location, private _layoutService: UiLayoutService, private _router: Router) {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this._layoutService.showContainer = true;\\r\\n    }\\r\\n\\r\\n    public goBack() {\\r\\n        this._location.back();\\r\\n    }\\r\\n\\r\\n    public goToProfileManager = ($event) => {\\r\\n        this._router.navigate([\'/profile-manager\']);\\r\\n    };\\r\\n\\r\\n    public goToProductDeclarations = ($event) => {\\r\\n        this._router.navigate([\'/customer-requests/product-declarations-customer-specific\']);\\r\\n    };\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.windmill {\\r\\n    position: absolute;\\r\\n    width: 33%;\\r\\n    min-width: 100px;\\r\\n    right: 20px;\\r\\n    bottom: -40px;\\r\\n    z-index: 0;\\r\\n\\r\\n    &.small {\\r\\n        width: 66%;\\r\\n    }\\r\\n}\\r\\n\\r\\n.title {\\r\\n    font-size: 56px;\\r\\n    color: $gray-700;\\r\\n    font-weight: 700;\\r\\n    line-height: 110%;\\r\\n    padding-bottom: 20px;\\r\\n\\r\\n    &.small {\\r\\n        font-size: 32px;\\r\\n        letter-spacing: -0.01em;\\r\\n    }\\r\\n}\\r\\n\\r\\n.error-number {\\r\\n    padding-top: 32px;\\r\\n    padding-bottom: 32px;\\r\\n    font-size: 16px;\\r\\n    color: $gray-700;\\r\\n}\\r\\n\\r\\n.main-error-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: flex-start;\\r\\n    max-width: 500px;\\r\\n}\\r\\n\\r\\n.error-page {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    min-height: 350px;\\r\\n\\r\\n    &.small {\\r\\n        justify-content: flex-start;\\r\\n    }\\r\\n}\\r\\n\\r\\n.feedback-text-wrapper {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.main-dashboard-content {\\r\\n    margin-top: -20px;\\r\\n\\r\\n    .welcome-banner {\\r\\n        display: flex;\\r\\n        padding: 32px;\\r\\n        flex-direction: row;\\r\\n        align-items: flex-start;\\r\\n        gap: 32px;\\r\\n        align-self: stretch;\\r\\n        border-radius: 4px;\\r\\n        border: 1px solid var(--neutral-gray-500, #D2D6DA);\\r\\n        background: $secondary-tertiary-135;\\r\\n        position: relative;\\r\\n\\r\\n        .triangle-div {\\r\\n            position: absolute;\\r\\n        }\\r\\n\\r\\n        .triangles {\\r\\n            position: absolute;\\r\\n            right: 0px;\\r\\n            bottom: 0.001px;\\r\\n        }\\r\\n\\r\\n        .welcome-banner-content {\\r\\n            display: flex;\\r\\n            max-width: 650px;\\r\\n            flex-direction: column;\\r\\n            align-items: flex-start;\\r\\n            gap: 16px;\\r\\n            align-self: stretch;\\r\\n            text-wrap: pretty;\\r\\n        }\\r\\n\\r\\n        .welcome-banner-title {\\r\\n            color: $white;\\r\\n            font-family: Roboto;\\r\\n            font-size: 32px;\\r\\n            font-style: normal;\\r\\n            font-weight: 700;\\r\\n            line-height: 110%;\\r\\n            letter-spacing: -0.64px;\\r\\n        }\\r\\n\\r\\n        .welcome-banner-text {\\r\\n            color: $white;\\r\\n            font-family: Roboto;\\r\\n            font-size: 16px;\\r\\n            font-style: normal;\\r\\n            font-weight: 400;\\r\\n            line-height: 150%;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .main-content {\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        align-items: flex-start;\\r\\n        align-self: stretch;\\r\\n        padding-top: 32px;\\r\\n\\r\\n        .main-content-header {\\r\\n            color: $gray-900;\\r\\n            font-family: Roboto;\\r\\n            font-size: 28px;\\r\\n            font-style: normal;\\r\\n            font-weight: 700;\\r\\n            line-height: 115%;\\r\\n            letter-spacing: -0.28px;\\r\\n        }\\r\\n\\r\\n        .row>* {\\r\\n            padding-right: 0px;\\r\\n            padding-left: 0px;\\r\\n        }\\r\\n\\r\\n        .card-row {\\r\\n            display: flex;\\r\\n            align-items: flex-start;\\r\\n            align-content: flex-start;\\r\\n            gap: 16px;\\r\\n            align-self: stretch;\\r\\n            flex-wrap: wrap;\\r\\n            padding-top: 16px;\\r\\n            padding-bottom: 10px;\\r\\n            padding-left: 13px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ui-card {\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        justify-content: space-between;\\r\\n        flex: 1 0 0;\\r\\n        align-self: stretch;\\r\\n\\r\\n        ui-button {\\r\\n            margin-left: -12px;\\r\\n        }\\r\\n\\r\\n        .card-inner {\\r\\n            display: flex;\\r\\n            padding: 20px;\\r\\n            flex-direction: column;\\r\\n            justify-content: space-between;\\r\\n            align-items: flex-start;\\r\\n            flex: 1 0 0;\\r\\n            align-self: stretch;\\r\\n        }\\r\\n\\r\\n        .card-main-content {\\r\\n            display: flex;\\r\\n            flex-direction: column;\\r\\n            align-items: flex-start;\\r\\n            gap: 8px;\\r\\n            align-self: stretch;\\r\\n            justify-content: space-around;\\r\\n            min-height: 16rem;\\r\\n            height: 100%;\\r\\n\\r\\n            @include media-breakpoint-down(lg) {\\r\\n                height: auto;\\r\\n            }\\r\\n\\r\\n            i {\\r\\n                display: flex;\\r\\n                width: 32px;\\r\\n                height: 24px;\\r\\n                flex-direction: column;\\r\\n                justify-content: center;\\r\\n                align-items: center;\\r\\n                color: $primary;\\r\\n                font-size: 32px;\\r\\n            }\\r\\n\\r\\n            .card-text {\\r\\n                font-size: 14px;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        .gradient-bar {\\r\\n            width: 100%;\\r\\n            height: 8px;\\r\\n            background: $secondary-primary-90;\\r\\n            border-bottom-left-radius: 4px;\\r\\n            border-bottom-right-radius: 4px;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","styleUrl":"./dashboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div id=\\"dashboard-page\\" class=\\"dashboard-page p-4\\" [ngClass]=\\"{ small: smallDashboardPage === true }\\">\\r\\n    <div class=\\"main-dashboard-content pt-2\\">\\r\\n        <div class=\\"welcome-banner\\">\\r\\n            <div class=\\"welcome-banner-content\\">\\r\\n                <div class=\\"welcome-banner-title\\">{{ \'COMMON.HOMEPAGE.WELCOME_TO_ASP\' | translate }}</div>\\r\\n                <div class=\\"welcome-banner-text\\">\\r\\n                    {{ \'COMMON.HOMEPAGE.THE_ASP_IS\' | translate }}\\r\\n                </div>\\r\\n            </div>\\r\\n            <img class=\\"triangles\\" alt=\\"Triangles\\" src=\\"assets/images/triangles.svg\\" />\\r\\n        </div>\\r\\n        <div class=\\"main-content\\">\\r\\n            <div class=\\"main-content-header\\">\\r\\n                <h2>{{ \'COMMON.HOMEPAGE.SEE_WHATS_POSSIBLE\' | translate }}</h2>\\r\\n            </div>\\r\\n            <div class=\\"main-content-subtitle\\">{{ \'COMMON.HOMEPAGE.QUICKLY_ACCESS_YOUR\' | translate }}</div>\\r\\n            <div class=\\"row card-row\\">\\r\\n                <div class=\\"col-lg-3 flex-grow-1\\">\\r\\n                    <ui-card id=\\"card_a\\" [showCustomLayout]=\\"true\\" class=\\"h-100\\">\\r\\n                        <div class=\\"card-inner\\">\\r\\n                            <div class=\\"card-main-content h-100\\">\\r\\n                                <i class=\\"bi bi-envelope-fill\\"></i>\\r\\n                                <h4 class=\\"card-title\\">{{ \'MENU.CUSTOMER_REQUESTS\' | translate }}</h4>\\r\\n                                <p class=\\"card-text\\">\\r\\n                                    {{ \'COMMON.HOMEPAGE.RECEIVE_CUSTOMER_REQUESTS\' | translate }}\\r\\n                                </p>\\r\\n                                <ui-button\\r\\n                                    [text]=\\"\'COMMON.HOMEPAGE.VIEW_CUSTOMER_REQUESTS\' | translate\\"\\r\\n                                    [type]=\\"UiButtonTypeEnum.LINK\\"\\r\\n                                    [size]=\\"UiButtonSizeEnum.SMALL\\"\\r\\n                                    [icon]=\\"\'bi bi-chevron-right\'\\"\\r\\n                                    [iconLocation]=\\"UiButtonIconLocationEnum.suffix\\"\\r\\n                                    [clicked]=\\"goToProductDeclarations\\"\\r\\n                                >\\r\\n                                </ui-button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\"gradient-bar\\"></div>\\r\\n                    </ui-card>\\r\\n                </div>\\r\\n                <div class=\\"col-lg-3 flex-grow-1\\">\\r\\n                    <ui-card id=\\"card_b\\" [showCustomLayout]=\\"true\\" class=\\"h-100\\">\\r\\n                        <div class=\\"card-inner\\">\\r\\n                            <div class=\\"card-main-content h-100\\">\\r\\n                                <i class=\\"bi bi-person-fill\\"></i>\\r\\n                                <h4 class=\\"card-title\\">{{ \'COMMON.HOMEPAGE.ACCOUNT_PREFERENCES\' | translate }}</h4>\\r\\n                                <p class=\\"card-text\\">\\r\\n                                    {{ \'COMMON.HOMEPAGE.BUILD_YOUR_IDENTITY\' | translate }}\\r\\n                                </p>\\r\\n                                <ui-button\\r\\n                                    [text]=\\"\'COMMON.HOMEPAGE.VIEW_ACCOUNT_PREFERENCES\' | translate\\"\\r\\n                                    [type]=\\"UiButtonTypeEnum.LINK\\"\\r\\n                                    [size]=\\"UiButtonSizeEnum.SMALL\\"\\r\\n                                    [icon]=\\"\'bi bi-chevron-right\'\\"\\r\\n                                    [iconLocation]=\\"UiButtonIconLocationEnum.suffix\\"\\r\\n                                    [clicked]=\\"goToProfileManager\\"\\r\\n                                >\\r\\n                                </ui-button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\"gradient-bar\\"></div>\\r\\n                    </ui-card>\\r\\n                </div>\\r\\n                <div class=\\"col-lg-3 flex-grow-1\\">\\r\\n                    <ui-card id=\\"card_c\\" [showCustomLayout]=\\"true\\" class=\\"h-100\\">\\r\\n                        <div class=\\"card-inner\\">\\r\\n                            <div class=\\"card-main-content h-100\\">\\r\\n                                <i class=\\"bi bi-box-fill\\"></i>\\r\\n                                <h4 class=\\"card-title\\">{{ \'PRODUCT_CATALOG.PRODUCT_CATALOG\' | translate }}</h4>\\r\\n                                <p class=\\"card-text\\">\\r\\n                                    {{ \'COMMON.HOMEPAGE.IMPORT_PRODUCT_INFORMATION\' | translate }}\\r\\n                                </p>\\r\\n                                <ui-pill pillText=\\"{{ \'COMMON.COMING_SOON\' | translate }}\\"></ui-pill>\\r\\n                                \x3c!--Button is commented out until product catalog is ready--\x3e\\r\\n                                \x3c!-- <ui-button\\r\\n                                    [text]=\\"\'COMMON.HOMEPAGE.VIEW_PRODUCT_CATALOG\' | translate\\"\\r\\n                                    [type]=\\"UiButtonTypeEnum.LINK\\"\\r\\n                                    [size]=\\"UiButtonSizeEnum.SMALL\\"\\r\\n                                    [icon]=\\"\'bi bi-chevron-right\'\\"\\r\\n                                    [iconLocation]=\\"\'suffix\'\\"\\r\\n                                    >\\r\\n                                </ui-button> --\x3e\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\"gradient-bar\\"></div>\\r\\n                    </ui-card>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiDatepickerComponent","id":"component-UiDatepickerComponent-2451e7351a484fce76560ed7c655c7db9e228bb229f05c5ab3db3b11a72cb24cb50438563ea9819cadfbaa2bd914e4fc330fa90eb06300d68015dd725a7d50d6","file":"libs/ui/src/lib/modules/form-controls/datepicker/datepicker.component.ts","encapsulation":["ViewEncapsulation.None"],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: UiDatepickerComponent,\\n}","type":"component"},{"name":"{\\n    provide: NG_VALIDATORS, multi: true, useExisting: UiDatepickerComponent,\\n}","type":"component"},{"name":"{\\n    provide: NgbDateAdapter, useClass: NgbDateNativeAdapter,\\n}"}],"selector":"ui-datepicker","styleUrls":["./datepicker.component.scss"],"styles":[],"templateUrl":["./datepicker.component.html"],"viewProviders":[],"inputsClass":[{"name":"maxDate","deprecated":false,"deprecationMessage":"","line":34,"type":"Date","decorators":[]},{"name":"minDate","deprecated":false,"deprecationMessage":"","line":33,"type":"Date","decorators":[]},{"name":"placeholder","defaultValue":"\'mm/dd/yyyy\'","deprecated":false,"deprecationMessage":"","line":31,"type":"string","decorators":[]},{"name":"placement","defaultValue":"\'bottom-left top-left\'","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"requiredDate","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":36,"type":"boolean","decorators":[]},{"name":"showIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":37,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"dateString","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"dpMaxDate","deprecated":false,"deprecationMessage":"","type":"NgbDateStruct","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"dpMinDate","deprecated":false,"deprecationMessage":"","type":"NgbDateStruct","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"dpModel","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"formField","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"onValidationChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"startDate","deprecated":false,"deprecationMessage":"","type":"NgbDate","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"touched","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]}],"methodsClass":[{"name":"clearValue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":178,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClears the selected date\\n","description":"<p>Clears the selected date</p>\\n","modifierKind":[123]},{"name":"extractDpModelValue","args":[{"name":"data","type":"Date | literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Date","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nExtracts the Date value from the input\\nIt is needed because of the different ways to create Angular forms\\n\\n","description":"<p>Extracts the Date value from the input\\nIt is needed because of the different ways to create Angular forms</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":6501,"end":6505,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"Date | literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":6495,"end":6500,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>input value</p>\\n"},{"tagName":{"pos":6527,"end":6534,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>actual date value</p>\\n"}]},{"name":"isValidDate","args":[{"name":"date","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":229,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if given object is valid date\\n\\n","description":"<p>Checks if given object is valid date</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":6998,"end":7002,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":6992,"end":6997,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMarks the component as touched\\n","description":"<p>Marks the component as touched</p>\\n","modifierKind":[123]},{"name":"navigateByMonth","args":[{"name":"datepicker","type":"NgbDatepicker","deprecated":false,"deprecationMessage":""},{"name":"number","type":" | \\"1\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens the previous(-1) or the next(1) month in the datepicker\\n\\n","description":"<p>Opens the previous(-1) or the next(1) month in the datepicker</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5661,"end":5671,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"datepicker"},"type":"NgbDatepicker","deprecated":false,"deprecationMessage":"","tagName":{"pos":5655,"end":5660,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":5687,"end":5693,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":146,"escapedText":"number"},"type":" | \\"1\\"","deprecated":false,"deprecationMessage":"","tagName":{"pos":5681,"end":5686,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>-1 for previous or 1 for the next month</p>\\n"}]},{"name":"navigateByYear","args":[{"name":"datepicker","type":"NgbDatepicker","deprecated":false,"deprecationMessage":""},{"name":"number","type":" | \\"1\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":200,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens the previous(-1) or the next(1) year in the datepicker\\n\\n","description":"<p>Opens the previous(-1) or the next(1) year in the datepicker</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6055,"end":6065,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"datepicker"},"type":"NgbDatepicker","deprecated":false,"deprecationMessage":"","tagName":{"pos":6049,"end":6054,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":6081,"end":6087,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":146,"escapedText":"number"},"type":" | \\"1\\"","deprecated":false,"deprecationMessage":"","tagName":{"pos":6075,"end":6080,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>-1 for previous or 1 for the next month</p>\\n"}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onDateSelect","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSelects the date from the datepicker\\n\\n","description":"<p>Selects the date from the datepicker</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4686,"end":4690,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"pos":4680,"end":4685,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"onTodayClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSelect Today\\n","description":"<p>Select Today</p>\\n","modifierKind":[123]},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor method\\n\\n","description":"<p>ControlValueAccessor method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3031,"end":3033,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":3025,"end":3030,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The callback function to register</p>\\n"}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor method\\n\\n","description":"<p>ControlValueAccessor method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3223,"end":3225,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":3217,"end":3222,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The callback function to register</p>\\n"}]},{"name":"registerOnValidatorChange","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[]}],"optional":true,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidator optional method\\n\\n","description":"<p>Validator optional method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4470,"end":4472,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"function","deprecated":false,"deprecationMessage":"","function":[],"tagName":{"pos":4464,"end":4469,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The callback function</p>\\n"}]},{"name":"setDatepickerLimits","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":299,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets datepicker minDate and maxDate limits\\n","description":"<p>Sets datepicker minDate and maxDate limits</p>\\n","modifierKind":[121]},{"name":"setDateString","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":309,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets this.dateSting in \'MM/DD/YYYY\' format\\n\\n","description":"<p>Sets this.dateSting in &#39;MM/DD/YYYY&#39; format</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9319,"end":9323,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"pos":9313,"end":9318,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor optional method\\n\\n","description":"<p>ControlValueAccessor optional method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3426,"end":3436,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":3420,"end":3425,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The disabled status to set on the element</p>\\n"}]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidator method\\n\\n","description":"<p>Validator method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3643,"end":3650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"control"},"type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"pos":3637,"end":3642,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The control to validate against</p>\\n"}]},{"name":"validateDate","args":[{"name":"date","type":"Date","deprecated":false,"deprecationMessage":""},{"name":"prefix","type":"\\"min\\" | \\"max\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidates date (this.dpModel Date) based on this.minDate and this.maxDate validators\\n\\n","description":"<p>Validates date (this.dpModel Date) based on this.minDate and this.maxDate validators</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":7880,"end":7884,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"pos":7874,"end":7879,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>this.dpModel</p>\\n"},{"name":{"pos":7913,"end":7919,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"prefix"},"type":"\\"min\\" | \\"max\\"","deprecated":false,"deprecationMessage":"","tagName":{"pos":7907,"end":7912,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>choose this.minDate or this.minDate</p>\\n"},{"tagName":{"pos":7965,"end":7972,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"validateRequiredDate","args":[{"name":"date","type":"Date","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":246,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidates date(this.dpModel) to have a value\\nWe have to use this method, because the default required validator\\nrecognizes { value: null } as a valid value\\n\\n","description":"<p>Validates date(this.dpModel) to have a value\\nWe have to use this method, because the default required validator\\nrecognizes { value: null } as a valid value</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":7447,"end":7451,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"pos":7441,"end":7446,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>this.dpModel</p>\\n"},{"tagName":{"pos":7474,"end":7481,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"writeValue","args":[{"name":"data","type":"Date | literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor method\\n\\n","description":"<p>ControlValueAccessor method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"data","type":"Date | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation } from \'@angular/core\';\\r\\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from \'@angular/forms\';\\r\\n// Ng Bootstrap\\r\\nimport { NgbCalendar, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDatepicker, NgbDateStruct } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-datepicker\',\\r\\n    templateUrl: \'./datepicker.component.html\',\\r\\n    styleUrls: [\'./datepicker.component.scss\'],\\r\\n    // eslint-disable-next-line @angular-eslint/use-component-view-encapsulation\\r\\n    encapsulation: ViewEncapsulation.None, // needed for popoverClass\\r\\n    providers: [\\r\\n        {\\r\\n            provide: NG_VALUE_ACCESSOR,\\r\\n            multi: true,\\r\\n            useExisting: UiDatepickerComponent,\\r\\n        },\\r\\n        {\\r\\n            provide: NG_VALIDATORS,\\r\\n            multi: true,\\r\\n            useExisting: UiDatepickerComponent,\\r\\n        },\\r\\n        {\\r\\n            provide: NgbDateAdapter,\\r\\n            useClass: NgbDateNativeAdapter,\\r\\n        },\\r\\n    ],\\r\\n})\\r\\nexport class UiDatepickerComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\\r\\n    @Input() public placeholder = \'mm/dd/yyyy\';\\r\\n    @Input() public placement = \'bottom-left top-left\';\\r\\n    @Input() public minDate: Date;\\r\\n    @Input() public maxDate: Date;\\r\\n    // Hint: Use this property instead of the default required Validator to recognize { value: null } as empty value\\r\\n    @Input() public requiredDate = false;\\r\\n    @Input() public showIcon = false;\\r\\n    public disabled = false;\\r\\n    public touched = false;\\r\\n    public formField: AbstractControl;\\r\\n\\r\\n    public dpModel: Date;\\r\\n    public dateString: string;\\r\\n    public startDate: NgbDate;\\r\\n    public dpMinDate: NgbDateStruct;\\r\\n    public dpMaxDate: NgbDateStruct;\\r\\n\\r\\n    constructor(private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>) {}\\r\\n\\r\\n    public onChange = ({ value }) => {};\\r\\n    public onTouched = () => {};\\r\\n    public onValidationChange = () => {};\\r\\n\\r\\n    public ngOnInit() {}\\r\\n\\r\\n    public ngOnChanges(changes: SimpleChanges) {\\r\\n        // Checks if this is the initial value\\r\\n        if (\\r\\n            (changes.minDate && !changes.minDate.isFirstChange()) ||\\r\\n            (changes.maxDate && !changes.maxDate.isFirstChange()) ||\\r\\n            (changes.requiredDate && !changes.requiredDate.isFirstChange())\\r\\n        ) {\\r\\n            this.touched = true;\\r\\n            this.onValidationChange();\\r\\n        }\\r\\n        this.setDatepickerLimits();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * ControlValueAccessor method\\r\\n     *\\r\\n     * @param obj The new value for the element\\r\\n     */\\r\\n    public writeValue(data: Date | { value: Date }) {\\r\\n        this.dpModel = this.extractDpModelValue(data);\\r\\n        const ngbDate = this._dateAdapter.fromModel(this.dpModel) as NgbDate;\\r\\n        this.setDateString(ngbDate);\\r\\n        this.startDate = ngbDate;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * ControlValueAccessor method\\r\\n     *\\r\\n     * @param fn The callback function to register\\r\\n     */\\r\\n    public registerOnChange(fn: any) {\\r\\n        this.onChange = fn;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * ControlValueAccessor method\\r\\n     *\\r\\n     * @param fn The callback function to register\\r\\n     */\\r\\n    public registerOnTouched(fn: any) {\\r\\n        this.onTouched = fn;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * ControlValueAccessor optional method\\r\\n     *\\r\\n     * @param isDisabled The disabled status to set on the element\\r\\n     */\\r\\n    public setDisabledState(isDisabled: boolean) {\\r\\n        this.disabled = isDisabled;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Validator method\\r\\n     *\\r\\n     * @param control The control to validate against\\r\\n     */\\r\\n    public validate(control: AbstractControl): ValidationErrors | null {\\r\\n        this.formField = control;\\r\\n\\r\\n        if (this.dpModel && !this.isValidDate(this.dpModel)) {\\r\\n            throw new Error(\'Invalid Date type\');\\r\\n        }\\r\\n\\r\\n        let error: ValidationErrors | null = null;\\r\\n        // Checks requiredDate error even before the component is touched\\r\\n        // Follows the default required Validator behavior\\r\\n        error = this.validateRequiredDate(this.dpModel);\\r\\n        if (this.touched) {\\r\\n            error = error ? error : this.validateDate(this.dpModel, \'min\');\\r\\n            error = error ? error : this.validateDate(this.dpModel, \'max\');\\r\\n        }\\r\\n\\r\\n        return error;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Validator optional method\\r\\n     *\\r\\n     * @param fn The callback function\\r\\n     */\\r\\n    public registerOnValidatorChange?(fn: () => void) {\\r\\n        this.onValidationChange = fn;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Selects the date from the datepicker\\r\\n     *\\r\\n     * @param date\\r\\n     */\\r\\n    public onDateSelect(date: NgbDate) {\\r\\n        const formattedDate = this._dateAdapter.toModel(date);\\r\\n        this.markAsTouched();\\r\\n        this.startDate = date;\\r\\n        this.setDateString(date);\\r\\n        this.onChange({\\r\\n            value: formattedDate,\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Select Today\\r\\n     */\\r\\n    public onTodayClick() {\\r\\n        const today = this._calendar.getToday();\\r\\n        this.dpModel = this._dateAdapter.toModel(today);\\r\\n        this.onDateSelect(today);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Marks the component as touched\\r\\n     */\\r\\n    public markAsTouched() {\\r\\n        if (!this.touched) {\\r\\n            this.onTouched();\\r\\n            this.touched = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Clears the selected date\\r\\n     */\\r\\n    public clearValue() {\\r\\n        this.dpModel = null;\\r\\n        this.onDateSelect(null);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Opens the previous(-1) or the next(1) month in the datepicker\\r\\n     *\\r\\n     * @param datepicker\\r\\n     * @param number -1 for previous or 1 for the next month\\r\\n     */\\r\\n    public navigateByMonth(datepicker: NgbDatepicker, number: -1 | 1) {\\r\\n        const { state, calendar } = datepicker;\\r\\n        datepicker.navigateTo(calendar.getNext(state.firstDate, \'m\', number));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Opens the previous(-1) or the next(1) year in the datepicker\\r\\n     *\\r\\n     * @param datepicker\\r\\n     * @param number -1 for previous or 1 for the next month\\r\\n     */\\r\\n    public navigateByYear(datepicker: NgbDatepicker, number: -1 | 1) {\\r\\n        const { state, calendar } = datepicker;\\r\\n        datepicker.navigateTo(calendar.getNext(state.firstDate, \'y\', number));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Extracts the Date value from the input\\r\\n     * It is needed because of the different ways to create Angular forms\\r\\n     *\\r\\n     * @param data input value\\r\\n     * @returns actual date value\\r\\n     */\\r\\n    private extractDpModelValue(data: Date | { value: Date }): Date {\\r\\n        let value = null;\\r\\n        if (data) {\\r\\n            value = data.hasOwnProperty(\'value\') ? (data as { value: Date }).value : data;\\r\\n            if (typeof value === \'string\') {\\r\\n                value = new Date(value);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return value;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if given object is valid date\\r\\n     *\\r\\n     * @param date\\r\\n     */\\r\\n    private isValidDate(date: any): boolean {\\r\\n        let valid = false;\\r\\n        if (date instanceof Date && typeof date.getMonth === \'function\') {\\r\\n            valid = true;\\r\\n        }\\r\\n\\r\\n        return valid;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Validates date(this.dpModel) to have a value\\r\\n     * We have to use this method, because the default required validator\\r\\n     * recognizes { value: null } as a valid value\\r\\n     *\\r\\n     * @param date this.dpModel\\r\\n     * @returns\\r\\n     */\\r\\n    private validateRequiredDate(date: Date): ValidationErrors | null {\\r\\n        let error = null;\\r\\n        if (this.requiredDate && !date) {\\r\\n            error = {\\r\\n                requiredDate: true,\\r\\n            };\\r\\n        }\\r\\n\\r\\n        return error;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Validates date (this.dpModel Date) based on this.minDate and this.maxDate validators\\r\\n     *\\r\\n     * @param date this.dpModel\\r\\n     * @param prefix choose this.minDate or this.minDate\\r\\n     * @returns\\r\\n     */\\r\\n    private validateDate(date: Date, prefix: \'min\' | \'max\'): ValidationErrors | null {\\r\\n        const limitDate = this[prefix + \'Date\'];\\r\\n        if (!limitDate || !date) {\\r\\n            return null;\\r\\n        }\\r\\n\\r\\n        if (!this.isValidDate(limitDate)) {\\r\\n            throw new Error(\'Invalid Date type\');\\r\\n        }\\r\\n\\r\\n        let valid: ValidationErrors | null = null;\\r\\n        const copiedLimit = new Date(limitDate.getTime());\\r\\n        const copiedDate = new Date(date.getTime());\\r\\n        copiedLimit.setHours(0, 0, 0, 0);\\r\\n        copiedDate.setHours(0, 0, 0, 0);\\r\\n        if (prefix === \'min\' && copiedLimit > copiedDate) {\\r\\n            valid = {\\r\\n                minDate: {\\r\\n                    min: this.minDate,\\r\\n                },\\r\\n            };\\r\\n        } else if (prefix === \'max\' && copiedLimit < copiedDate) {\\r\\n            valid = {\\r\\n                maxDate: {\\r\\n                    max: this.maxDate,\\r\\n                },\\r\\n            };\\r\\n        }\\r\\n\\r\\n        return valid;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets datepicker minDate and maxDate limits\\r\\n     */\\r\\n    private setDatepickerLimits() {\\r\\n        this.dpMinDate = this._dateAdapter.fromModel(this.minDate);\\r\\n        this.dpMaxDate = this._dateAdapter.fromModel(this.maxDate);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets this.dateSting in \'MM/DD/YYYY\' format\\r\\n     *\\r\\n     * @param date\\r\\n     */\\r\\n    private setDateString(date: NgbDate) {\\r\\n        let formattedDate: string;\\r\\n        if (date) {\\r\\n            formattedDate = (\'0\' + date.month).slice(-2) + \'/\' + (\'0\' + date.day).slice(-2) + \'/\' + date.year;\\r\\n        } else {\\r\\n            formattedDate = this.placeholder;\\r\\n        }\\r\\n\\r\\n        this.dateString = formattedDate;\\r\\n    }\\r\\n\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.form-control[readonly] {\\r\\n    background-color: $white;\\r\\n\\r\\n    &:disabled {\\r\\n        background-color: $gray-200;\\r\\n    }\\r\\n}\\r\\n\\r\\n.clear-icon {\\r\\n    border: 0;\\r\\n    color: $gray-600;\\r\\n    cursor: pointer;\\r\\n    font-size: 1rem;\\r\\n    line-height: 1.5rem;\\r\\n    // padding: 0.375rem 0.75rem;\\r\\n    position: absolute;\\r\\n    right: 40px;\\r\\n    top: 7px;\\r\\n    vertical-align: middle;\\r\\n    // visibility: hidden;\\r\\n    z-index: 3;\\r\\n}\\r\\n\\r\\n.clear-icon:hover {\\r\\n    visibility: visible;\\r\\n}\\r\\n\\r\\n.datepicker-input:hover + .clear-icon {\\r\\n    visibility: visible;\\r\\n}\\r\\n\\r\\n.datepicker-input:focus + .clear-icon {\\r\\n    visibility: visible;\\r\\n}\\r\\n\\r\\n.custom-popover {\\r\\n    border-color: $gray-400;\\r\\n    border-radius: 2px;\\r\\n    border: 0;\\r\\n    box-shadow: 0px 9px 12px rgba(0, 0, 0, 0.14), 0px 3px 16px rgba(0, 0, 0, 0.12), 0px 5px 6px rgba(0, 0, 0, 0.2);\\r\\n    .arrow {\\r\\n        display: none;\\r\\n    }\\r\\n    .popover-body {\\r\\n        padding: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.custom-datepicker {\\r\\n    border: 0;\\r\\n    border-radius: 0;\\r\\n\\r\\n    .ngb-dp-header {\\r\\n        background-color: $white;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-weekday {\\r\\n        color: $primary;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-content .ng-star-inserted {\\r\\n        .custom-datepicker-month {\\r\\n            border-bottom: 1px solid $gray-400;\\r\\n            border-top: 1px solid $gray-400;\\r\\n            padding: 0 0.5rem;\\r\\n            .ngb-dp-weekdays {\\r\\n                background-color: $white;\\r\\n                border-bottom: 0;\\r\\n                padding: 0.1rem 0;\\r\\n                .ngb-dp-weekday {\\r\\n                    color: $gray-900;\\r\\n                    font-style: normal;\\r\\n                    font-weight: normal;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.custom-day {\\r\\n    border-radius: 0.25rem;\\r\\n    border: 0.1rem;\\r\\n    box-sizing: border-box;\\r\\n    color: $gray-900;\\r\\n    display: inline-block;\\r\\n    padding: 0.185rem 0.25rem;\\r\\n    text-align: center;\\r\\n    width: 2rem;\\r\\n}\\r\\n\\r\\n.custom-day:hover {\\r\\n    background-color: $gray-200;\\r\\n}\\r\\n\\r\\n.selected-day {\\r\\n    border: 0.1rem solid $primary;\\r\\n    background-color: $white;\\r\\n}\\r\\n\\r\\n.disabled-day {\\r\\n    color: $gray-400;\\r\\n}\\r\\n\\r\\n.another-month {\\r\\n    color: $gray-600;\\r\\n}\\r\\n\\r\\n.footer-container {\\r\\n    padding: 0.5rem;\\r\\n    text-align: center;\\r\\n\\r\\n    .custom-footer {\\r\\n        color: $primary;\\r\\n        cursor: pointer;\\r\\n        display: inline-block;\\r\\n    }\\r\\n}\\r\\n\\r\\n.inner-addon { \\r\\n    position: relative; \\r\\n}\\r\\n\\r\\n/* style icon */\\r\\n.inner-addon .bi-calendar3 {\\r\\n  position: absolute;\\r\\n  padding: 10px;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n/* align icon */\\r\\n.left-addon .bi  { left:  5px;}\\r\\n.right-addon .bi { right: 5px;}\\r\\n\\r\\n/* add padding  */\\r\\n.left-addon input  { padding-left:  40px; }\\r\\n.right-addon input { padding-right: 40px; }\\r\\n\\r\\n.was-validated .form-control:valid, .was-validated .acp-form-control:valid, .form-control.is-valid,  .ng-valid, .ng-invalid, .is-valid.acp-form-control, .acp-form-control.ng-valid.ng-touched, .acp-form-control.ng-valid.ng-dirty {\\r\\n    .right-addon .bi { right: 30px;}\\r\\n    .right-addon  .bi.clear-icon { right: 65px;}\\r\\n}\\r\\n\\r\\n.input-group {\\r\\n    .inner-addon {\\r\\n        position: relative;\\r\\n        flex: 1 1 auto;\\r\\n        width: 1%;\\r\\n        min-width: 0;\\r\\n        input {\\r\\n            margin-left: -1px;\\r\\n            border-top-left-radius: 0;\\r\\n            border-bottom-left-radius: 0;\\r\\n        }\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n.input-group > .form-control, .input-group > .acp-form-control, .input-group > .form-select {\\r\\n    position: relative;\\r\\n    flex: 1 1 auto;\\r\\n    width: 1%;\\r\\n    min-width: 0;\\r\\n}","styleUrl":"./datepicker.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":""},{"name":"_dateAdapter","type":"NgbDateAdapter<any>","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_dateAdapter","type":"NgbDateAdapter<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnChanges","ControlValueAccessor","Validator"],"templateData":" <div class=\\"input-group\\">\\r\\n    \\r\\n    \x3c!-- <i *ngIf=\\"!disabled && dpModel\\" class=\\"bi bi-x clear-icon\\" (click)=\\"clearValue()\\"></i>     --\x3e\\r\\n    <input\\r\\n        class=\\"form-control\\"\\r\\n        [ngClass]=\\"{\\r\\n            \'is-invalid\': formField !== undefined && formField.invalid && (formField.touched || formField.dirty)\\r\\n        }\\"\\r\\n        autocomplete=\\"off\\"\\r\\n        [placeholder]=\\"placeholder\\"\\r\\n        [readonly]=\\"!showIcon\\"\\r\\n        [disabled]=\\"disabled\\"\\r\\n        [value]=\\"dateString\\"\\r\\n        [ngbPopover]=\\"datepickerContent\\"\\r\\n        #popover=\\"ngbPopover\\"\\r\\n        popoverClass=\\"custom-popover\\"\\r\\n        container=\\"body\\"\\r\\n        [placement]=\\"placement\\"\\r\\n        autoClose=\\"outside\\"\\r\\n        (blur)=\\"onTouched()\\"\\r\\n        (keydown.backspace)=\\"!disabled && clearValue()\\">  \\r\\n    \\r\\n    <span class=\\"input-group-text\\"> \\r\\n        <i class=\\"bi bi-calendar3\\" aria-hidden=\\"true\\"></i>\\r\\n    </span>\\r\\n    \x3c!-- <button\\r\\n        *ngIf=\\"showIcon && !disabled\\"\\r\\n        class=\\"btn btn-outline-secondary pointer\\"\\r\\n        type=\\"button\\"\\r\\n        [ngbPopover]=\\"datepickerContent\\"\\r\\n        #popover=\\"ngbPopover\\"\\r\\n        popoverClass=\\"custom-popover\\"\\r\\n        container=\\"body\\"\\r\\n        [placement]=\\"placement\\"\\r\\n        (blur)=\\"onTouched()\\"\\r\\n        autoClose=\\"outside\\">\\r\\n        <i class=\\"fa fa-calendar\\"></i>\\r\\n    </button> --\x3e\\r\\n</div>\\r\\n\\r\\n<ng-template #datepickerContent>\\r\\n    <ngb-datepicker\\r\\n        #d\\r\\n        name=\\"dp\\"\\r\\n        class=\\"custom-datepicker\\"\\r\\n        navigation=\\"none\\"\\r\\n        [dayTemplate]=\\"dayTemplate\\"\\r\\n        [footerTemplate]=\\"footerTemplate\\"\\r\\n        [disabled]=\\"disabled\\"\\r\\n        [minDate]=\\"dpMinDate\\"\\r\\n        [maxDate]=\\"dpMaxDate\\"\\r\\n        [(ngModel)]=\\"dpModel\\"\\r\\n        [startDate]=\\"startDate\\"\\r\\n        (dateSelect)=\\"onDateSelect($event); popover.close()\\">\\r\\n        <ng-template ngbDatepickerContent>\\r\\n            <div *ngFor=\\"let month of d.state.months\\">\\r\\n                <div class=\\"text-primary px-1 py-2 fw-bold text-center\\">\\r\\n                    <i class=\\"bi bi-chevron-double-left float-start px-1\\" role=\\"button\\" (click)=\\"navigateByYear(d, -1)\\"></i>\\r\\n                    <i class=\\"bi bi-chevron-left float-start px-1\\" role=\\"button\\" (click)=\\"navigateByMonth(d, -1)\\"></i>\\r\\n                    {{month.month | monthNamePipe}} {{ month.year }}\\r\\n                    <i class=\\"bi bi-chevron-double-right float-end px-1\\" role=\\"button\\" (click)=\\"navigateByYear(d, 1)\\"></i>\\r\\n                    <i class=\\"bi bi-chevron-right float-end px-1\\" role=\\"button\\" (click)=\\"navigateByMonth(d, 1)\\"></i>\\r\\n                </div>\\r\\n                <ngb-datepicker-month class=\\"custom-datepicker-month\\" [month]=\\"month\\"></ngb-datepicker-month>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </ngb-datepicker>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template\\r\\n    #dayTemplate\\r\\n    let-date\\r\\n    let-currentMonth=\\"currentMonth\\"\\r\\n    let-selected=\\"selected\\"\\r\\n    let-disabled=\\"disabled\\">\\r\\n    <span class=\\"custom-day\\"\\r\\n        [class.selected-day]=\\"selected\\"\\r\\n        [class.disabled-day]=\\"disabled\\"\\r\\n        [class.another-month]=\\"!disabled && date.month !== currentMonth\\">\\r\\n        {{ date.day }}\\r\\n    </span>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #footerTemplate>\\r\\n    <div class=\\"footer-container\\">\\r\\n        <span class=\\"custom-footer\\" (click)=\\"onTodayClick(); popover.close()\\">\\r\\n            Today\\r\\n        </span>\\r\\n    </div>\\r\\n</ng-template>\\r\\n"},{"name":"UiDatePickerPlusComponent","id":"component-UiDatePickerPlusComponent-4cd49602c4f541d00cef685fb0f0b2a1950862e982d2954e3f4935caf0790c429d48e15f6a3b6cdb026fee1207d81326e51501cb90c9184cf34bec07d0f04484","file":"libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-date-picker-plus-component","styleUrls":["./ui-date-picker-plus.component.scss"],"styles":[],"templateUrl":["./ui-date-picker-plus.component.html"],"viewProviders":[],"inputsClass":[{"name":"displayMonths","defaultValue":"2","deprecated":false,"deprecationMessage":"","line":12,"type":"number","decorators":[]},{"name":"footerTemplate","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]},{"name":"fromDate","deprecated":false,"deprecationMessage":"","line":14,"type":"literal type","decorators":[]},{"name":"toDate","deprecated":false,"deprecationMessage":"","line":22,"type":"literal type","decorators":[]}],"outputsClass":[{"name":"dateSelectionChange","defaultValue":"new EventEmitter<{\\r\\n        fromDate: { day: number; month: number; year: number };\\r\\n        toDate?: { day: number; month: number; year: number };\\r\\n    }>()","deprecated":false,"deprecationMessage":"","line":30,"type":"EventEmitter"}],"propertiesClass":[{"name":"_fromDate","deprecated":false,"deprecationMessage":"","type":"NgbDate","optional":false,"description":"","line":42,"modifierKind":[121]},{"name":"_toDate","deprecated":false,"deprecationMessage":"","type":"NgbDate","optional":false,"description":"","line":43,"modifierKind":[121]},{"name":"hoveredDate","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"NgbDate | null","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"maxDays","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"navigation","defaultValue":"\'select\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"outsideDays","defaultValue":"\'hidden\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"showWeekNumbers","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"weekdays","defaultValue":"TranslationWidth.Abbreviated","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]}],"methodsClass":[{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"formatDateString","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFromDate","args":[],"optional":false,"returnType":"NgbDate","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getToDate","args":[],"optional":false,"returnType":"NgbDate","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isHovered","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isInside","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isRange","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onDateSelection","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { TranslationWidth } from \'@angular/common\';\\r\\nimport { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\r\\nimport { NgbCalendar, NgbDate } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-date-picker-plus-component\',\\r\\n    templateUrl: \'./ui-date-picker-plus.component.html\',\\r\\n    styleUrls: [\'./ui-date-picker-plus.component.scss\'],\\r\\n})\\r\\nexport class UiDatePickerPlusComponent implements OnInit {\\r\\n    @Input() public footerTemplate = false;\\r\\n    @Input() public displayMonths = 2;\\r\\n\\r\\n    @Input() public set fromDate(date: { day: number; month: number; year: number }) {\\r\\n        this._fromDate = new NgbDate(date.year, date.month, date.day);\\r\\n    }\\r\\n\\r\\n    public get fromDate() {\\r\\n        return { day: this._fromDate.day, month: this._fromDate.month, year: this._fromDate.year };\\r\\n    }\\r\\n\\r\\n    @Input() public set toDate(date: { day: number; month: number; year: number }) {\\r\\n        this._toDate = new NgbDate(date.year, date.month, date.day);\\r\\n    }\\r\\n\\r\\n    public get toDate() {\\r\\n        return { day: this._toDate.day, month: this._toDate.month, year: this._toDate.year };\\r\\n    }\\r\\n\\r\\n    @Output() public dateSelectionChange = new EventEmitter<{\\r\\n        fromDate: { day: number; month: number; year: number };\\r\\n        toDate?: { day: number; month: number; year: number };\\r\\n    }>();\\r\\n\\r\\n    public navigation = \'select\';\\r\\n    public showWeekNumbers = false;\\r\\n    public outsideDays = \'hidden\';\\r\\n    public hoveredDate: NgbDate | null = null;\\r\\n    public weekdays = TranslationWidth.Abbreviated;\\r\\n    public maxDays;\\r\\n\\r\\n    private _fromDate: NgbDate;\\r\\n    private _toDate: NgbDate;\\r\\n\\r\\n    constructor(private _calendar: NgbCalendar) {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        if (this.displayMonths === 1) {\\r\\n            this.toDate = new NgbDate(null, null, null);\\r\\n            this.maxDays = 1;\\r\\n        }\\r\\n        if ((this.fromDate === undefined || this.fromDate.year === null, this.fromDate.month === null, this.fromDate.day === null)) {\\r\\n            this._fromDate = this._calendar.getToday();\\r\\n        } else {\\r\\n            this._fromDate = new NgbDate(this.fromDate.year, this.fromDate.month, this.fromDate.day);\\r\\n        }\\r\\n\\r\\n        if (\\r\\n            this.displayMonths === 2 &&\\r\\n            (this.toDate === undefined || this.toDate === null || this.toDate.year === null,\\r\\n            this.toDate.month === null,\\r\\n            this.toDate.day === null)\\r\\n        ) {\\r\\n            this._toDate = this._calendar.getNext(this._calendar.getToday(), \'d\', 10);\\r\\n        } else {\\r\\n            this._toDate = new NgbDate(this.toDate.year, this.toDate.month, this.toDate.day);\\r\\n        }\\r\\n\\r\\n        this.dateSelectionChange.emit({ fromDate: this.fromDate, toDate: this.toDate });\\r\\n    }\\r\\n\\r\\n    public onDateSelection(date: NgbDate) {\\r\\n        if (\\r\\n            (!this._fromDate || (this._fromDate.year === null, this._fromDate.month === null, this._fromDate.day === null)) &&\\r\\n            !this._toDate\\r\\n        ) {\\r\\n            this._fromDate = new NgbDate(date.year, date.month, date.day);\\r\\n            this._toDate = new NgbDate(null, null, null);\\r\\n        } else if (\\r\\n            this._fromDate &&\\r\\n            !(this._fromDate.year === null, this._fromDate.month === null, this._fromDate.day === null) &&\\r\\n            (!this._toDate || (this._toDate.year === null, this._toDate.month === null, this._toDate.day === null)) &&\\r\\n            date.after(this._fromDate)\\r\\n        ) {\\r\\n            if (this.displayMonths === 2) {\\r\\n                this._toDate = new NgbDate(date.year, date.month, date.day);\\r\\n            } else {\\r\\n                this._fromDate = new NgbDate(date.year, date.month, date.day);\\r\\n                this._toDate = new NgbDate(null, null, null);\\r\\n            }\\r\\n        } else {\\r\\n            this._fromDate = new NgbDate(date.year, date.month, date.day);\\r\\n            this._toDate = new NgbDate(null, null, null);\\r\\n        }\\r\\n        this.dateSelectionChange.emit({ fromDate: this.fromDate, toDate: this.toDate });\\r\\n    }\\r\\n\\r\\n    public getFromDate() {\\r\\n        return this._fromDate;\\r\\n    }\\r\\n\\r\\n    public getToDate() {\\r\\n        return this._toDate;\\r\\n    }\\r\\n\\r\\n    public formatDateString(date: NgbDate) {\\r\\n        if (date !== undefined && date !== null) {\\r\\n            const year = date.year;\\r\\n            const month = date.month <= 9 ? \'0\' + date.month : date.month;\\r\\n            const day = date.day <= 9 ? \'0\' + date.day : date.day;\\r\\n            const finalDate = year + \'-\' + month + \'-\' + day;\\r\\n            return finalDate;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public isHovered(date: NgbDate) {\\r\\n        return this._fromDate && !this._toDate && this.hoveredDate && date.after(this._fromDate) && date.before(this.hoveredDate);\\r\\n    }\\r\\n\\r\\n    public isInside(date: NgbDate) {\\r\\n        return this._toDate && date.after(this._fromDate) && date.before(this._toDate);\\r\\n    }\\r\\n\\r\\n    public isRange(date: NgbDate) {\\r\\n        return date.equals(this._fromDate) || (this._toDate && date.equals(this._toDate)) || this.isInside(date) || this.isHovered(date);\\r\\n    }\\r\\n\\r\\n    public clear() {\\r\\n        this._fromDate = new NgbDate(null, null, null);\\r\\n        this._toDate = new NgbDate(null, null, null);\\r\\n        this.dateSelectionChange.emit({ fromDate: this.fromDate, toDate: this.toDate });\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.footer-controls {\\r\\n    gap: 0.375rem;\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n    padding: 0px 16px 8px 16px;\\r\\n    margin-top: -8px; //To remove extra space from hr line padding above\\r\\n}\\r\\n\\r\\n:host ::ng-deep ngb-datepicker {\\r\\n    min-width: 15rem;\\r\\n    width: 15rem;\\r\\n    border-color: $gray-500;\\r\\n    //box-shadow: 0px 4px 8px 0px #00000026;\\r\\n    //Add box shadow back for non-inline\\r\\n\\r\\n    .ngb-dp-month {\\r\\n        width: 15rem;\\r\\n        padding: 8px;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-weekday {\\r\\n        color: $gray-700;\\r\\n        font-style: normal;\\r\\n        line-height: 1.31rem;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-month:last-child .ngb-dp-week {\\r\\n        padding-right: 0;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,\\r\\n    .ngb-dp-month+.ngb-dp-month .ngb-dp-week {\\r\\n        padding-left: 0;\\r\\n    }\\r\\n\\r\\n    &.ranged {\\r\\n        width: 30rem;\\r\\n\\r\\n        .ngb-dp-months {\\r\\n            display: flex;\\r\\n            justify-content: center;\\r\\n            align-content: center;\\r\\n            flex-direction: row;\\r\\n            flex-wrap: nowrap;\\r\\n        }\\r\\n\\r\\n        .ngb-dp-month {\\r\\n            width: 18.75rem;\\r\\n            padding: 8px;\\r\\n        }\\r\\n\\r\\n        .ngb-dp-weekday {\\r\\n            color: $gray-700;\\r\\n            font-style: normal;\\r\\n            line-height: 1.31rem;\\r\\n        }\\r\\n\\r\\n        .ngb-dp-week {\\r\\n            justify-content: space-between;\\r\\n        }\\r\\n\\r\\n        .ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,\\r\\n        .ngb-dp-month+.ngb-dp-month .ngb-dp-week {\\r\\n            padding-left: 0;\\r\\n        }\\r\\n\\r\\n        .ngb-dp-day {\\r\\n            font-size: 14px;\\r\\n            height: 1.9rem;\\r\\n            display: flex;\\r\\n            align-items: center;\\r\\n            justify-content: center;\\r\\n\\r\\n            &.focused {\\r\\n                background-color: $primary-500;\\r\\n                color: $white;\\r\\n                width: 2rem;\\r\\n\\r\\n                &:hover {\\r\\n                    color: $white;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            &.range {\\r\\n                background-color: $primary-500;\\r\\n                color: $white;\\r\\n\\r\\n                &:hover {\\r\\n                    border: 1px solid $primary-500;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            &.faded {\\r\\n                background-color: $primary-100 !important;\\r\\n                color: $black;\\r\\n                width: 2.5rem;\\r\\n\\r\\n                &:hover {\\r\\n                    border: 1px solid $primary-500;\\r\\n                    background-color: $primary-100;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            :hover {\\r\\n                border: 1px solid $primary-500;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        ngb-datepicker-navigation-select {\\r\\n            padding: 0px 4px 0px 4px;\\r\\n            gap: 8px;\\r\\n            display: flex;\\r\\n\\r\\n            .form-select {\\r\\n                width: 12rem;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        .ngb-dp-navigation-chevron {\\r\\n            border-style: solid;\\r\\n            border-width: 0.1em .1em 0 0;\\r\\n            display: inline-block;\\r\\n            width: .75em;\\r\\n            height: .75em;\\r\\n            color: $gray-900;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //end range\\r\\n\\r\\n    .ngb-dp-weekdays {\\r\\n        margin-bottom: 8px;\\r\\n        padding-top: 8px;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-month-name {\\r\\n        font-size: 16px;\\r\\n        font-weight: 400;\\r\\n        line-height: 24px;\\r\\n        padding: 8px;\\r\\n        gap: 8px;\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n        height: 2.5rem;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-header {\\r\\n        background-color: $white;\\r\\n        padding: 8px 8px 0px 8px;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-content {\\r\\n\\r\\n        .ngb-dp-month-name,\\r\\n        .ngb-dp-week {\\r\\n            background-color: $white;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    ngb-datepicker-navigation-select {\\r\\n        padding: 0px 4px 0px 4px;\\r\\n        display: flex;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-navigation-chevron {\\r\\n        border-style: solid;\\r\\n        border-width: 0.1em .1em 0 0;\\r\\n        display: inline-block;\\r\\n        width: .75em;\\r\\n        height: .75em;\\r\\n        color: $gray-900;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-month:first-child .ngb-dp-week {\\r\\n        padding-left: 0;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-months {\\r\\n        display: flex;\\r\\n        justify-content: center;\\r\\n        align-content: center;\\r\\n        flex-direction: column;\\r\\n        flex-wrap: nowrap;\\r\\n    }\\r\\n\\r\\n    .ngb-dp-day {\\r\\n        font-size: 14px;\\r\\n        width: 2rem;\\r\\n        display: flex;\\r\\n        align-items: center;\\r\\n        justify-content: center;\\r\\n\\r\\n        &.range {\\r\\n            background-color: $primary-500;\\r\\n            color: $white;\\r\\n\\r\\n            &.faded {\\r\\n                background-color: $white;\\r\\n                color: $black;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        .focused {\\r\\n            background-color: $primary-500;\\r\\n            color: $white;\\r\\n            z-index: 4;\\r\\n        }\\r\\n\\r\\n        &.range {\\r\\n\\r\\n            &:hover {\\r\\n                border: 1px solid $primary-500;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        :hover {\\r\\n            border: 1px solid $primary-500;\\r\\n        }\\r\\n    }\\r\\n\\r\\n}","styleUrl":"./ui-date-picker-plus.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":""}],"line":43,"jsdoctags":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"fromDate":{"name":"fromDate","setSignature":{"name":"fromDate","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":14,"jsdoctags":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"fromDate","type":"","returnType":"","line":18}},"toDate":{"name":"toDate","setSignature":{"name":"toDate","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":22,"jsdoctags":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"toDate","type":"","returnType":"","line":26}}},"templateData":"    <ngb-datepicker\\r\\n        #datePicker\\r\\n        [ngClass]=\\"{ ranged: displayMonths === 2 }\\"\\r\\n        (dateSelect)=\\"onDateSelection($event)\\"\\r\\n        [displayMonths]=\\"displayMonths\\"\\r\\n        [navigation]=\\"navigation\\"\\r\\n        [showWeekNumbers]=\\"showWeekNumbers\\"\\r\\n        [weekdays]=\\"weekdays\\"\\r\\n        [outsideDays]=\\"outsideDays\\"\\r\\n        [footerTemplate]=\\"footerTemplate\\" \\r\\n        [dayTemplate]=\\"dayTemplate\\"\\r\\n        strictMode=\'true\'\\r\\n    >\\r\\n        <ng-template #footerTemplate [ngIf]=\\"footerTemplate\\">\\r\\n            <hr />\\r\\n            <div class=\\"footer-controls\\">\\r\\n                <button class=\\"btn btn-link btn-sm\\" (click)=\\"clear()\\">Clear</button>\\r\\n                <button class=\\"btn btn-link btn-sm\\">Apply</button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </ngb-datepicker>\\r\\n\\r\\n    <ng-template #dayTemplate let-date let-focused=\\"focused\\">\\r\\n        <span\\r\\n            class=\\"ngb-dp-day\\"\\r\\n            [class.focused]=\\"focused\\"\\r\\n            [class.range]=\\"isRange(date)\\"\\r\\n            [class.faded]=\\"isHovered(date) || isInside(date)\\"\\r\\n            (mouseenter)=\\"hoveredDate = date\\"\\r\\n            (mouseleave)=\\"hoveredDate = null\\"\\r\\n        >\\r\\n            {{ date.day }}\\r\\n        </span>\\r\\n    </ng-template>\\r\\n"},{"name":"UiDropdownComponent","id":"component-UiDropdownComponent-d31ced57350e90209d17a559a5cbd054e9d4665c581c25080d3a4b8fb527d011cb26a0e9926383a2f1098bb0a6b8291c5be826194d53e725a9c11566d30183b0","file":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown","styleUrls":["./dropdown-multi-select.component.scss"],"styles":[],"templateUrl":["./dropdown-multi-select.component.html"],"viewProviders":[],"inputsClass":[{"name":"maxItemsShown","defaultValue":"5","deprecated":false,"deprecationMessage":"","line":45,"type":"number","decorators":[]},{"name":"multiSelect","deprecated":false,"deprecationMessage":"","line":44,"type":"any","decorators":[]},{"name":"optionClicked","defaultValue":"() => { }","deprecated":false,"deprecationMessage":"","line":101,"type":"() => void","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDropdown options\\nold `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown-new\'/\'ui-dropdown-old-form\'\\nold `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown\'/\'ui-dropdown-old\'\\n","description":"<p>Dropdown options\\nold <code>{ label: string; value: string; disabled: boolean }[]</code> from &#39;ui-dropdown-new&#39;/&#39;ui-dropdown-old-form&#39;\\nold <code>{ label: string; value: string; disabled: boolean }[]</code> from &#39;ui-dropdown&#39;/&#39;ui-dropdown-old&#39;</p>\\n","line":42,"type":"IUiDropdownOption[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":49,"type":"string","decorators":[]},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":48,"type":"boolean","decorators":[]},{"name":"showSearch","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":46,"type":"boolean","decorators":[]},{"name":"showSelectClearBtns","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":47,"type":"boolean","decorators":[]},{"name":"type","defaultValue":"\'input\'","deprecated":false,"deprecationMessage":"","line":36,"type":"\\"input\\" | \\"button\\" | \\"button-outline\\"","decorators":[]},{"name":"w100","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":43,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_displayValue","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":56,"modifierKind":[121]},{"name":"_dropdownPlusOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":79,"modifierKind":[121]},{"name":"_firstClick","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":99,"modifierKind":[121]},{"name":"_optionsBackup","deprecated":false,"deprecationMessage":"","type":"IUiDropdownOption[]","optional":false,"description":"","line":98,"modifierKind":[121]},{"name":"button","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":28,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'button\'"}],"modifierKind":[123]},{"name":"dropdownMultiSelect","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdownMultiSelect\'"}],"modifierKind":[123]},{"name":"dropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":33,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdownRef\'"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"multipillRef","deprecated":false,"deprecationMessage":"","type":"UiMultiPillComponent","optional":false,"description":"","line":31,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'multipillRef\'"}],"modifierKind":[123]},{"name":"nbgDropdown","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":34,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'nbgDropdown\'"}],"modifierKind":[123]},{"name":"pills","deprecated":false,"deprecationMessage":"","type":"UiPillComponent[]","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"searchText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"selectedValues","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":30,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'selectedValues\'"}],"modifierKind":[123]},{"name":"textInput","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":27,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'textInput\'"}],"modifierKind":[123]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"valuesDisplay","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'valuesDisplay\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"convertOptionsToValue","args":[{"name":"incomingOptions","type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiDropdownOption[]","typeParameters":[],"line":391,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet form return value from selected options\\n\\n","description":"<p>Set form return value from selected options</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":15310,"end":15325,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingOptions"},"type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":15304,"end":15309,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Options selected in the dropdown</p>\\n"},{"tagName":{"pos":15368,"end":15375,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>IUiDropdownOption[]</code></p>\\n"}]},{"name":"convertStringToValue","args":[{"name":"incomingValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":376,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFind the value option based on the incoming value\\n\\n","description":"<p>Find the value option based on the incoming value</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":14866,"end":14879,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingValue"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":14860,"end":14865,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Incoming value</p>\\n"},{"tagName":{"pos":14904,"end":14911,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>string</p>\\n"}]},{"name":"getPillsFromValue","args":[],"optional":false,"returnType":"UiPillComponent[]","typeParameters":[],"line":422,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet the pills to display from the value\\n\\n","description":"<p>Get the pills to display from the value</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":16642,"end":16649,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiValuePill[]</p>\\n"}]},{"name":"markOptionAsSelected","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"option","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the DropdownPlus option as selected\\n\\n","description":"<p>Sets the DropdownPlus option as selected</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":13333,"end":13338,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":13327,"end":13332,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Current value</p>\\n"},{"name":{"pos":13368,"end":13374,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"option"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":13362,"end":13367,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>DropdownPlus option</p>\\n"},{"tagName":{"pos":13404,"end":13411,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>boolean</p>\\n"}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onKeyDown","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":244,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle keyboard event\\n\\n","description":"<p>Handle keyboard event</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10140,"end":10145,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":10134,"end":10139,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Keyboard Event</p>\\n"}]},{"name":"onSelectedOptionsChanged","args":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":190,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle the click event on an option\\n\\n","description":"<p>Handle the click event on an option</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":8152,"end":8157,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":8146,"end":8151,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Mouse Event (can be any)</p>\\n"}]},{"name":"onTriggerClicked","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle the click event to trigger the dropdown\\n","description":"<p>Handle the click event to trigger the dropdown</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onValueFocus","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":257,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle focus event\\n\\n","description":"<p>Handle focus event</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10494,"end":10499,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":10488,"end":10493,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Keyboard Event</p>\\n"}]},{"name":"processIncomingValue","args":[{"name":"incomingValue","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":357,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the value from the incoming value\\n\\n","description":"<p>Set the value from the incoming value</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":14077,"end":14090,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingValue"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":14071,"end":14076,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Incoming value</p>\\n"},{"tagName":{"pos":14115,"end":14122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Form value</p>\\n"}]},{"name":"resizeMultiPills","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":230,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle pills on window resize\\n","description":"<p>Handle pills on window resize</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"setNewOptions","args":[{"name":"newOptions","type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":271,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the dropdown options with the provided new options.\\n\\n","description":"<p>Updates the dropdown options with the provided new options.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10936,"end":10946,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"newOptions"},"type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":10930,"end":10935,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>An array of new dropdown options to be set.</li>\\n</ul>\\n"}]},{"name":"updateOptions","args":[{"name":"changedValues","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiDropdownOption[]","typeParameters":[],"line":284,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the dropdown options when form control value changes\\n\\n","description":"<p>Update the dropdown options when form control value changes</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":11354,"end":11367,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"changedValues"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":11348,"end":11353,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Changed form control values</p>\\n"},{"tagName":{"pos":11405,"end":11412,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiDropdownOption[]</p>\\n"}]},{"name":"writeValue","args":[{"name":"incomingValue","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite the form values into the component\\nNote: this fires when the component is initialized BEFORE ngOnInit\\n\\n","description":"<p>Write the form values into the component\\nNote: this fires when the component is initialized BEFORE ngOnInit</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7234,"end":7247,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingValue"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":7228,"end":7233,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Incoming value</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle pills on window resize\\n","description":"<p>Handle pills on window resize</p>\\n","line":230}],"description":"<p>Dropdown Multi Select Component\\nNote: This component is used for both single and multi-select dropdowns</p>\\n","rawdescription":"\\n\\nDropdown Multi Select Component\\nNote: This component is used for both single and multi-select dropdowns\\n\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\r\\n// Ngb Bootstrap\\r\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Enums\\r\\nimport { UiPillClassEnum } from \'@lib/modules/grid/components/pill-renderer/pill-renderer.component\';\\r\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\r\\n// Components & Interfaces\\r\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\r\\nimport { UiPillComponent } from \'@lib/modules/form-controls/pills/components/pill/pill.component\';\\r\\nimport { UiMultiPillComponent } from \'@lib/modules/form-controls/pills/components/multi-pill/multi-pill.component\';\\r\\nimport { IUiDropdownOption } from \'./interfaces/dropdown.interface\';\\r\\nimport { UiFormControlBaseComponent as OldFormBase } from \'@lib/modules/form-controls/form-control-base/form-control-base.component\';\\r\\n\\r\\n/**\\r\\n * Dropdown Multi Select Component\\r\\n * Note: This component is used for both single and multi-select dropdowns\\r\\n *\\r\\n * @returns `IUiDropdownOption[]`\\r\\n */\\r\\n@Component({\\r\\n    selector: \'ui-dropdown\',\\r\\n    templateUrl: \'./dropdown-multi-select.component.html\',\\r\\n    styleUrls: [\'./dropdown-multi-select.component.scss\'],\\r\\n})\\r\\nexport class UiDropdownComponent extends OldFormBase implements OnInit, OnDestroy {\\r\\n    @ViewChild(\'textInput\') public textInput: ElementRef;\\r\\n    @ViewChild(\'button\') public button: ElementRef;\\r\\n    @ViewChild(\'valuesDisplay\') public valuesDisplay: ElementRef;\\r\\n    @ViewChild(\'selectedValues\') public selectedValues: ElementRef;\\r\\n    @ViewChild(\'multipillRef\') public multipillRef: UiMultiPillComponent;\\r\\n    @ViewChild(\'dropdownMultiSelect\') public dropdownMultiSelect: ElementRef;\\r\\n    @ViewChild(\'dropdownRef\') public dropdownRef: UiDropdownPlusComponent;\\r\\n    @ViewChild(\'nbgDropdown\') public nbgDropdown: NgbDropdown;\\r\\n\\r\\n    @Input() public type: \'input\' | \'button\' | \'button-outline\' = \'input\';\\r\\n    /**\\r\\n     * Dropdown options\\r\\n     * old `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown-new\'/\'ui-dropdown-old-form\'\\r\\n     * old `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown\'/\'ui-dropdown-old\'\\r\\n     */\\r\\n    @Input() public options: IUiDropdownOption[];\\r\\n    @Input() public w100 = true;\\r\\n    @Input() public multiSelect;\\r\\n    @Input() public maxItemsShown = 5;\\r\\n    @Input() public showSearch = true;\\r\\n    @Input() public showSelectClearBtns = true;\\r\\n    @Input() public setValueOnChange = true;\\r\\n    @Input() public placeholder: string;\\r\\n\\r\\n    public menuOpen = false;\\r\\n    public searchText = \'\';\\r\\n    public tooltipText = \'\';\\r\\n    public pills: UiPillComponent[];\\r\\n\\r\\n    private _displayValue: string[];\\r\\n    public get displayValue(): string[] {\\r\\n        return this._displayValue;\\r\\n    }\\r\\n    public set displayValue(setVal: any) {\\r\\n        if (setVal && typeof setVal === \'string\' && this.multiSelect === false) {\\r\\n            const foundVal = this.options.find((option) => option.readValue === setVal);\\r\\n            this._displayValue = foundVal && foundVal.label ? [foundVal.label] : [\'\'];\\r\\n        } else if (setVal && setVal instanceof Array && setVal.length > 0) {\\r\\n            this._displayValue = setVal.map((val) => {\\r\\n                if (val.label) {\\r\\n                    return val.label;\\r\\n                } else {\\r\\n                    return \'\';\\r\\n                }\\r\\n            });\\r\\n        } else if (setVal && typeof setVal === \'object\' && this.multiSelect === false) {\\r\\n            this._displayValue = [setVal.label];\\r\\n        } else {\\r\\n            this._displayValue = this.placeholder ? [this.placeholder] : [\'\'];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private _dropdownPlusOptions: IUiDropdownPlusOption[] = [];\\r\\n    public get dropdownPlusOptions(): IUiDropdownPlusOption[] {\\r\\n        return this._dropdownPlusOptions;\\r\\n    }\\r\\n    public set dropdownPlusOptions(setOpts: any[]) {\\r\\n        if (setOpts === undefined || setOpts === null || (setOpts && setOpts.length === 0)) {\\r\\n            console.warn(`Dropdown options are empty for ${this.formControlName}`);\\r\\n        } else {\\r\\n            this._dropdownPlusOptions = setOpts.map((setOpt) => {\\r\\n                return {\\r\\n                    id: setOpt.id,\\r\\n                    label: setOpt.label,\\r\\n                    disabled: setOpt.disabled,\\r\\n                    value: this.markOptionAsSelected(this.value, setOpt),\\r\\n                } as IUiDropdownPlusOption;\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private _optionsBackup: IUiDropdownOption[];\\r\\n    private _firstClick = true;\\r\\n\\r\\n    @Input() public optionClicked = () => { };\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        if (this.options && this.options.length > 0) {\\r\\n            this.dropdownPlusOptions = this.options;\\r\\n            this._optionsBackup = this.options;\\r\\n\\r\\n            if (this.options.length < this.maxItemsShown) {\\r\\n                this.showSearch = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.form.controls[this.formControlName].valueChanges.subscribe((changedValues) => {\\r\\n            this.dropdownPlusOptions = this.updateOptions(changedValues);\\r\\n        });\\r\\n\\r\\n        // Note: Must wait 1 tick for the dropdown to be initialized before setting the dropdown properties\\r\\n        setTimeout(() => {\\r\\n            this.dropdownRef.view = null;\\r\\n            this.dropdownRef.nbgDropdown.display = \'static\';\\r\\n            this.dropdownRef.nbgDropdown.placement = \'bottom-start\';\\r\\n            this.dropdownRef.nbgDropdown.container = null;\\r\\n            this.dropdownRef.nbgDropdown.dropdownClass = \'dropdown-component-dropdown-menu\';\\r\\n            this.dropdownRef.nbgDropdown.autoClose = \'outside\';\\r\\n\\r\\n            this.dropdownRef.selectionChange.subscribe((event) => {\\r\\n                this.onSelectedOptionsChanged(event as { id: string; selectedOptions: IUiDropdownOption[] });\\r\\n                if (this.optionClicked) {\\r\\n                    this.optionClicked();\\r\\n                }\\r\\n            });\\r\\n\\r\\n            this.dropdownRef.openChange.subscribe((event) => {\\r\\n                this.menuOpen = event.open;\\r\\n            });\\r\\n\\r\\n            this.dropdownRef.optionsCleared.subscribe((event) => {\\r\\n                this.options.forEach((option) => {\\r\\n                    if (option.disabled === false) {\\r\\n                        option.value = false;\\r\\n                    }\\r\\n                });\\r\\n                this.dropdownPlusOptions = this.options;\\r\\n                setTimeout(() => {\\r\\n                    this.dropdownRef.clearSelection();\\r\\n                    this.onSelectedOptionsChanged({ id: this.id, selectedOptions: [] });\\r\\n                });\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        this.dropdownRef.selectionChange.unsubscribe();\\r\\n        this.dropdownRef.openChange.unsubscribe();\\r\\n        this.dropdownRef.optionsCleared.unsubscribe();\\r\\n        if (this.form.controls[this.formControlName]) {\\r\\n            this.form.controls[this.formControlName].valueChanges.unsubscribe();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Write the form values into the component\\r\\n     * Note: this fires when the component is initialized BEFORE ngOnInit\\r\\n     *\\r\\n     * @param incomingValue Incoming value\\r\\n     */\\r\\n    public writeValue(incomingValue): void {\\r\\n        if (incomingValue === null || incomingValue.length === 0) {\\r\\n            this._firstClick = true;\\r\\n            const defaultValue = this.form.controls[this.formControlName].defaultValue;\\r\\n            // default to the last form control value or default value if set\\r\\n            this.value = defaultValue ? defaultValue : this.form.controls[this.formControlName].value;\\r\\n        } else {\\r\\n            this.value = this.processIncomingValue(incomingValue);\\r\\n        }\\r\\n        this.pills = this.getPillsFromValue();\\r\\n        this.resizeMultiPills();\\r\\n        setTimeout(() => {\\r\\n            this.displayValue = this.value;\\r\\n            this.valueChange.emit(this.value);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handle the click event on an option\\r\\n     *\\r\\n     * @param clickedOption The option that was clicked\\r\\n     * @param event Mouse Event (can be any)\\r\\n     */\\r\\n    public onSelectedOptionsChanged(event: { id: string; selectedOptions: IUiDropdownOption[] }): void {\\r\\n        if (this._firstClick) {\\r\\n            this._firstClick = false;\\r\\n        }\\r\\n        this.value = this.processIncomingValue(event.selectedOptions);\\r\\n        this.pills = this.getPillsFromValue();\\r\\n        this.resizeMultiPills();\\r\\n        setTimeout(() => {\\r\\n            this.displayValue = this.value;\\r\\n            if (this.setValueOnChange) {\\r\\n                this.form.controls[this.formControlName].setValue(event.selectedOptions, { emitEvent: false });\\r\\n                this.form.controls[this.formControlName].markAsTouched();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handle the click event to trigger the dropdown\\r\\n     */\\r\\n    public onTriggerClicked(event: Event): void {\\r\\n        event.preventDefault();\\r\\n        if (this.disabled !== true && this.dropdownRef.nbgDropdown !== undefined && this.menuOpen === false) {\\r\\n            this.dropdownRef.nbgDropdown.open();\\r\\n        }\\r\\n        const triggerEle = document.getElementById(this.dropdownRef.externalTriggerEleId);\\r\\n        if (this.dropdownRef.externalTriggerEleId !== undefined && this.dropdownRef.externalTriggerEleId !== null) {\\r\\n            if (triggerEle !== undefined && triggerEle !== null) {\\r\\n                this.dropdownRef.triggerClicked.emit({\\r\\n                    id: this.id,\\r\\n                    open: this.menuOpen,\\r\\n                    selectedOptions: this.dropdownRef.getSelectedItems(),\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handle pills on window resize\\r\\n     */\\r\\n    @HostListener(\'window:resize\')\\r\\n    public resizeMultiPills(): void {\\r\\n        setTimeout(() => {\\r\\n            if (this.multipillRef) {\\r\\n                this.multipillRef.addPillWidth();\\r\\n                this.multipillRef.onResize();\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handle keyboard event\\r\\n     *\\r\\n     * @param event Keyboard Event\\r\\n     */\\r\\n    public onKeyDown(event) {\\r\\n        if (this.disabled === false && (event.key === \'Enter\' || event.key === \'ArrowDown\')) {\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n            this.onTriggerClicked(event);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handle focus event\\r\\n     *\\r\\n     * @param event Keyboard Event\\r\\n     */\\r\\n    public onValueFocus(event) {\\r\\n        const ele: HTMLElement = event.target.getElementsByClassName(\'value-display\')[0];\\r\\n        if (ele && ele.scrollWidth > ele.offsetWidth) {\\r\\n            this.tooltipText = event.target.innerText;\\r\\n        } else {\\r\\n            this.tooltipText = \'\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Updates the dropdown options with the provided new options.\\r\\n     *\\r\\n     * @param newOptions - An array of new dropdown options to be set.\\r\\n     */\\r\\n    public setNewOptions(newOptions: IUiDropdownOption[]): void {\\r\\n        this.options = newOptions;\\r\\n        this.dropdownPlusOptions = newOptions;\\r\\n        this.dropdownRef.setOptions = newOptions;\\r\\n        this.updateOptions(newOptions);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Update the dropdown options when form control value changes\\r\\n     *\\r\\n     * @param changedValues Changed form control values\\r\\n     * @returns IUiDropdownOption[]\\r\\n     */\\r\\n    private updateOptions(changedValues): IUiDropdownOption[] {\\r\\n        // console.debug(`Dropdown options updated for ${this.formControlName}`);\\r\\n        const updatedOptions = this._optionsBackup || changedValues;\\r\\n\\r\\n        if (changedValues && typeof changedValues === \'string\' && this.multiSelect === false) {\\r\\n            updatedOptions.map((option) => {\\r\\n                if (option.disabled === false && option.readValue === changedValues) {\\r\\n                    option.value = false;\\r\\n                    return option;\\r\\n                }\\r\\n            });\\r\\n        } else if (changedValues && changedValues instanceof Array && changedValues.length > 0) {\\r\\n            updatedOptions.forEach((option) => {\\r\\n                changedValues.map((changedValue) => {\\r\\n                    if (option.disabled === false && option.readValue === changedValue.readValue) {\\r\\n                        option.value = true;\\r\\n                        return option;\\r\\n                    }\\r\\n                });\\r\\n            });\\r\\n        } else if (changedValues && typeof changedValues === \'object\' && this.multiSelect === false) {\\r\\n            updatedOptions.map((option) => {\\r\\n                if (option.disabled === false && option.readValue === changedValues.readValue) {\\r\\n                    option.value = true;\\r\\n                    return option;\\r\\n                }\\r\\n            });\\r\\n        } else if (updatedOptions === undefined || updatedOptions === null || updatedOptions.length === 0) {\\r\\n            console.warn(`No Dropdown options available for ${this.formControlName}`);\\r\\n            return null;\\r\\n        } else {\\r\\n            updatedOptions.map((option) => {\\r\\n                option.value = false;\\r\\n                return option;\\r\\n            });\\r\\n        }\\r\\n\\r\\n        return updatedOptions;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Sets the DropdownPlus option as selected\\r\\n     *\\r\\n     * @param value Current value\\r\\n     * @param option DropdownPlus option\\r\\n     * @returns boolean\\r\\n     */\\r\\n    private markOptionAsSelected(value: any, option): boolean {\\r\\n        if (value === null || value === undefined) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        if (this.value && typeof value === \'string\') {\\r\\n            if (this.value === option.readValue) {\\r\\n                return true;\\r\\n            } else {\\r\\n                return false;\\r\\n            }\\r\\n        } else if (this.value && this.value.find((v) => {\\r\\n            return v.id === option.id;\\r\\n        })) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set the value from the incoming value\\r\\n     *\\r\\n     * @param incomingValue Incoming value\\r\\n     * @returns Form value\\r\\n     */\\r\\n    private processIncomingValue(incomingValue: any) {\\r\\n        if (typeof incomingValue === \'string\' && this.multiSelect === false) {\\r\\n            const optionValue = this.convertStringToValue(incomingValue);\\r\\n            return optionValue ? optionValue : null;\\r\\n        } else if (incomingValue instanceof Array && incomingValue.length > 0) {\\r\\n            return this.convertOptionsToValue(incomingValue);\\r\\n        } else if (typeof incomingValue === \'object\' && incomingValue.length > 0) {\\r\\n            return this.convertOptionsToValue([incomingValue]);\\r\\n        } else {\\r\\n            return incomingValue;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Find the value option based on the incoming value\\r\\n     *\\r\\n     * @param incomingValue Incoming value\\r\\n     * @returns string\\r\\n     */\\r\\n    private convertStringToValue(incomingValue: string): string {\\r\\n        const foundOption = this.options.find((option) => option.readValue === incomingValue);\\r\\n        if (foundOption) {\\r\\n            return foundOption.readValue;\\r\\n        } else {\\r\\n            return null;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set form return value from selected options\\r\\n     *\\r\\n     * @param incomingOptions Options selected in the dropdown\\r\\n     * @returns `IUiDropdownOption[]`\\r\\n     */\\r\\n    private convertOptionsToValue(incomingOptions: IUiDropdownOption[]): IUiDropdownOption[] {\\r\\n        let newFormControlValue: IUiDropdownOption[] = [];\\r\\n        incomingOptions.forEach((selectedOption) => {\\r\\n            // Find the option with matching label so that the \'readValue\' can be used\\r\\n            const optionLookup = this.options.find((option) => option.label === selectedOption.label);\\r\\n            if (!optionLookup) {\\r\\n                console.error(\'Option not found in dropdown options\');\\r\\n                return;\\r\\n            }\\r\\n            const newOption: IUiDropdownOption = {\\r\\n                id: optionLookup.id,\\r\\n                label: optionLookup.label,\\r\\n                readValue: optionLookup.readValue,\\r\\n                value: true,\\r\\n                disabled: false,\\r\\n            };\\r\\n            this.options.map((option) => {\\r\\n                if (option.label === optionLookup.label) {\\r\\n                    option.value = true;\\r\\n                }\\r\\n            });\\r\\n            newFormControlValue = this.multiSelect ? [...newFormControlValue, newOption] : [newOption];\\r\\n        });\\r\\n        return newFormControlValue;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Get the pills to display from the value\\r\\n     *\\r\\n     * @returns IUiValuePill[]\\r\\n     */\\r\\n    private getPillsFromValue(): UiPillComponent[] {\\r\\n        if (this.value === null) {\\r\\n            return [];\\r\\n        } else {\\r\\n            if (this.multiSelect === true) {\\r\\n                return this.value.map((val) => ({\\r\\n                    value: val.readValue,\\r\\n                    pillText: val.label,\\r\\n                    color: UiPillClassEnum.neutral,\\r\\n                    size: UiPillSizeEnum.md,\\r\\n                    hasCloseButton: false, // Note: Close button is not needed for value display\\r\\n                    icon: null,\\r\\n                }));\\r\\n            } else {\\r\\n                return [];\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.dropdown-component {\\r\\n    .disabled {\\r\\n        pointer-events: none !important; // if disabled then cannot click\\r\\n        text-decoration: none;\\r\\n        background-color: $gray-200 !important;\\r\\n        border-color: $gray-400;\\r\\n        color: $gray-600 !important;\\r\\n        opacity: $btn-disabled-opacity;\\r\\n        @include box-shadow(none);\\r\\n\\r\\n        &-dark {\\r\\n            background-color: $gray-600 !important;\\r\\n            border-color: $gray-600 !important;\\r\\n            color: $white !important;\\r\\n            opacity: $btn-disabled-opacity;\\r\\n        }\\r\\n        &-light {\\r\\n            background-color: transparent !important;\\r\\n            border-color: $gray-400;\\r\\n            color: $gray-600 !important;\\r\\n            opacity: $btn-disabled-opacity;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","styleUrl":"./dropdown-multi-select.component.scss"}],"stylesData":"","extends":"OldFormBase","implements":["OnInit","OnDestroy"],"accessors":{"displayValue":{"name":"displayValue","setSignature":{"name":"displayValue","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"setVal","type":"any","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":60,"jsdoctags":[{"name":"setVal","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"displayValue","type":"[]","returnType":"string[]","line":57}},"dropdownPlusOptions":{"name":"dropdownPlusOptions","setSignature":{"name":"dropdownPlusOptions","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"setOpts","type":"any[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":83,"jsdoctags":[{"name":"setOpts","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"dropdownPlusOptions","type":"[]","returnType":"IUiDropdownPlusOption[]","line":80}}},"templateData":"<ng-container [formGroup]=\\"form\\">\\r\\n    \x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\r\\n    <ui-form-control-base\\r\\n        [formControlName]=\\"formControlName\\"\\r\\n        [form]=\\"form\\"\\r\\n        [label]=\\"label\\"\\r\\n        [placeholder]=\\"placeholder\\"\\r\\n        [showHelpText]=\\"showHelpText\\"\\r\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n        [showErrorValidation]=\\"showErrorValidation\\"\\r\\n        [showInfoIcon]=\\"showInfoIcon\\"\\r\\n        [infoText]=\\"infoText\\"\\r\\n        [helpText]=\\"helpText\\"\\r\\n    >\\r\\n        <div *ngIf=\\"form !== undefined\\" class=\\"dropdown-component\\" #dropdownMultiSelect>\\r\\n            \x3c!-- INPUT DISPLAY TYPE --\x3e\\r\\n            <div\\r\\n                *ngIf=\\"type === \'input\'\\"\\r\\n                #textInput\\r\\n                [id]=\\"id + \'_trigger\'\\"\\r\\n                autocomplete=\\"off\\"\\r\\n                type=\\"text\\"\\r\\n                class=\\"form-control dropdown-toggl dropdown-trigger\\"\\r\\n                [ngClass]=\\"{\\r\\n                    pointer: disabled === false,\\r\\n                    disabled: disabled,\\r\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\r\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation,\\r\\n                    open: menuOpen === true,\\r\\n                    \'multi-select\': multiSelect === true,\\r\\n                    \'is-placeholder\': value === undefined || value === null || value.length <= 0\\r\\n                }\\"\\r\\n                (click)=\\"onTriggerClicked($event)\\"\\r\\n                (mouseenter)=\\"onValueFocus($event)\\"\\r\\n                tabindex=\\"0\\"\\r\\n                [attr.aria-invalid]=\\"form.controls[formControlName].invalid\\"\\r\\n                [attr.aria-required]=\\"form.controls[formControlName].hasValidator(Validators.required)\\"\\r\\n                (keyup)=\\"onKeyDown($event)\\"\\r\\n            >\\r\\n                <ng-container [ngTemplateOutlet]=\\"valuesDisplay\\"></ng-container>\\r\\n            </div>\\r\\n            \x3c!-- INPUT DISPLAY TYPE end --\x3e\\r\\n\\r\\n            \x3c!-- BUTTON DISPLAY TYPE --\x3e\\r\\n            <button\\r\\n                *ngIf=\\"type === \'button\' || type === \'button-outline\'\\"\\r\\n                #button\\r\\n                [id]=\\"id + \'_trigger\'\\"\\r\\n                type=\\"button\\"\\r\\n                class=\\"btn form-control dropdown-toggl dropdown-trigger\\"\\r\\n                [ngClass]=\\"{\\r\\n                    \'btn-outline-primary\': type === \'button-outline\',\\r\\n                    \'btn-primary\': type === \'button\',\\r\\n                    \'w-100\': w100 === true,\\r\\n                    \'disabled-dark\': disabled && type === \'button\',\\r\\n                    \'disabled-light\': disabled && type === \'button-outline\',\\r\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\r\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation,\\r\\n                    \'multi-select\': multiSelect === true,\\r\\n                    \'is-placeholder\': value === undefined || value === null || value.length <= 0\\r\\n                }\\"\\r\\n                (click)=\\"onTriggerClicked($event)\\"\\r\\n                (mouseenter)=\\"onValueFocus($event)\\"\\r\\n                [attr.aria-invalid]=\\"form.controls[formControlName].invalid\\"\\r\\n                [attr.aria-required]=\\"form.controls[formControlName].hasValidator(Validators.required)\\"\\r\\n            >\\r\\n                <ng-container [ngTemplateOutlet]=\\"valuesDisplay\\"></ng-container>\\r\\n            </button>\\r\\n            \x3c!-- BUTTON DISPLAY TYPE end --\x3e\\r\\n\\r\\n            <ui-dropdown-plus\\r\\n                #dropdownRef\\r\\n                [id]=\\"id\\"\\r\\n                [externalTriggerEleId]=\\"id + \'_trigger\'\\"\\r\\n                [animIcon]=\\"true\\"\\r\\n                [setOptions]=\\"dropdownPlusOptions\\"\\r\\n                [disabled]=\\"disabled\\"\\r\\n                [small]=\\"true\\"\\r\\n                [paddingTop]=\\"3\\"\\r\\n                [showSearch]=\\"showSearch\\"\\r\\n                [multiSelect]=\\"multiSelect\\"\\r\\n                [maxItemsShown]=\\"maxItemsShown\\"\\r\\n                [showSelectClearBtns]=\\"showSelectClearBtns\\"\\r\\n                [view]=\\"\'none\'\\"\\r\\n                [ngClass]=\\"{\\r\\n                    \'w-100\': w100 === true,\\r\\n                    \'show-search\': showSearch === true,\\r\\n                    \'show-buttons\': showSelectClearBtns === true,\\r\\n                    \'multi-select\': multiSelect === true\\r\\n                }\\"\\r\\n                class=\\"dropdown-plus\\"\\r\\n            >\\r\\n            </ui-dropdown-plus>\\r\\n        </div>\\r\\n    </ui-form-control-base>\\r\\n</ng-container>\\r\\n\\r\\n<ng-template #valuesDisplay>\\r\\n    <ng-container *ngIf=\\"value && value.length > 0 && multiSelect === true\\">\\r\\n        <ng-container [ngTemplateOutlet]=\\"selectedValues\\"></ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\"value && value.length > 0 && multiSelect !== true\\">\\r\\n        <ng-container [ngTemplateOutlet]=\\"selectedValues\\"></ng-container>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\"value === undefined || value === null || value.length <= 0\\">\\r\\n        <span class=\\"value-display\\" ngbTooltip=\\"{{ placeholder }}\\">{{ placeholder | translate }}</span>\\r\\n    </ng-container>\\r\\n\\r\\n    \x3c!-- DROPDOWN CARET ICON --\x3e\\r\\n    <i\\r\\n        class=\\"d-inline-block anim bi trigger-icon\\"\\r\\n        [id]=\\"id + \'_triggerIcon\'\\"\\r\\n        [ngClass]=\\"{\\r\\n            \'bi-caret-down-fill\': menuOpen === false,\\r\\n            \'bi-caret-up-fill\': menuOpen === true\\r\\n        }\\"\\r\\n    >\\r\\n    </i>\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #selectedValues>\\r\\n    \x3c!-- DISPLAY VALUES AS TEXT --\x3e\\r\\n    <ng-container *ngIf=\\"multiSelect === false\\">\\r\\n        <span *ngFor=\\"let value of displayValue\\"\\r\\n            class=\\"value-display\\"\\r\\n            [ngbTooltip]=\\"tooltipText\\"\\r\\n            [tooltipClass]=\\"\'tooltip-sm\'\\"\\r\\n        >\\r\\n            {{ value | translate }}\\r\\n        </span>\\r\\n    </ng-container>\\r\\n\\r\\n    \x3c!-- DISPLAY VALUES AS PILLS --\x3e\\r\\n    <ng-container *ngIf=\\"multiSelect === true\\">\\r\\n        <ui-multi-pill\\r\\n            class=\\"value-display\\"\\r\\n            #multipillRef\\r\\n            [pills]=\\"pills\\"\\r\\n            [isAggregated]=\\"true\\"\\r\\n        ></ui-multi-pill>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n"},{"name":"UiDropdownOldFormControlsComponent","id":"component-UiDropdownOldFormControlsComponent-d0162eb8b0dfb29ba13242b60503fe1d1713bee92e5850fe716a44610a48ce86b22c664defecbf4e24715abaecda38f6ffb33f8cf7b23c2020dfe2807b065b89","file":"libs/ui/src/lib/modules/form-controls/dropdown/dropdown.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown-old","styleUrls":["./dropdown.component.scss"],"styles":[],"templateUrl":["./dropdown.component.html"],"viewProviders":[],"inputsClass":[{"name":"options","deprecated":false,"deprecationMessage":"","line":19,"type":"literal type[]","decorators":[]},{"name":"type","defaultValue":"\'input\'","deprecated":false,"deprecationMessage":"","line":18,"type":"\\"input\\" | \\"button\\" | \\"button-outline\\"","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"w100","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_firstClick","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[121]},{"name":"button","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":16,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'button\'"}],"modifierKind":[123]},{"name":"textInput","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":15,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'textInput\'"}],"modifierKind":[123]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"changeSelectedOption","args":[{"name":"option","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOptionFocus","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onValueFocus","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showTooltip","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":true,"deprecationMessage":"Use `UiDropdownComponent` instead","hostBindings":[],"hostListeners":[],"description":"<p>OLD Dropdown form-controls component</p>\\n","rawdescription":"\\n\\nOLD Dropdown form-controls component\\n\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n/**\\r\\n * OLD Dropdown form-controls component\\r\\n *\\r\\n * @deprecated Use `UiDropdownComponent` instead\\r\\n */\\r\\n@Component({\\r\\n    selector: \'ui-dropdown-old\', // was \'ui-dropdown\'\\r\\n    templateUrl: \'./dropdown.component.html\',\\r\\n    styleUrls: [\'./dropdown.component.scss\'],\\r\\n})\\r\\nexport class UiDropdownOldFormControlsComponent extends UiFormControlBaseComponent {\\r\\n    @ViewChild(\'textInput\') public textInput: ElementRef;\\r\\n    @ViewChild(\'button\') public button: ElementRef;\\r\\n\\r\\n    @Input() public type: \'input\' | \'button\' | \'button-outline\' = \'input\';\\r\\n    @Input() public options: { label: string; value: string; disabled: boolean }[];\\r\\n    @Input() public w100 = true;\\r\\n\\r\\n    public tooltipText = \'\';\\r\\n\\r\\n    private _firstClick = true;\\r\\n\\r\\n    public onValueFocus(e) {\\r\\n        this.showTooltip(e);\\r\\n    }\\r\\n    public onOptionFocus(e) {\\r\\n        this.showTooltip(e);\\r\\n    }\\r\\n\\r\\n    public showTooltip(e) {\\r\\n        const ele: HTMLElement = e.target.getElementsByClassName(\'text-truncate\')[0];\\r\\n        if (ele.scrollWidth > ele.offsetWidth) {\\r\\n            this.tooltipText = e.target.innerText;\\r\\n        }\\r\\n        else {\\r\\n            this.tooltipText = \'\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public writeValue(value: string) {\\r\\n        if (value === null) {\\r\\n            this._firstClick = true;\\r\\n            if (this.options.length > 0) {\\r\\n                this.value = this.options[0];\\r\\n            }\\r\\n        } else {\\r\\n            this.value = this.options.find((option) => option.value === value) || this.options[0];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public changeSelectedOption(option: { label: string; value: string; disabled: boolean }) {\\r\\n        if (this._firstClick) {\\r\\n            this._firstClick = false;\\r\\n        }\\r\\n        this.value = option;\\r\\n        this.valueChange.emit(option);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".dropdown-toggle {\\r\\n    text-align: left;\\r\\n\\r\\n    position: relative;\\r\\n    &::after {\\r\\n        /* keeping old CSS for reference\\r\\n        float: right;\\r\\n        margin-top: 10px;\\r\\n        */\\r\\n        position: absolute;\\r\\n        right: 0.5rem;\\r\\n        top: 1rem;\\r\\n    }\\r\\n\\r\\n    &.dropdown-old-trigger {\\r\\n        padding-top: 0.625rem;\\r\\n        padding-bottom: 0.25rem;\\r\\n        padding-left: 0.75rem;\\r\\n        padding-right: 0.75rem;\\r\\n\\r\\n        .text-truncate {\\r\\n            max-width: 100%;\\r\\n            padding-right: 0.625rem;\\r\\n            display: inline-block;\\r\\n            line-height: 1;\\r\\n            text-overflow: ellipsis;\\r\\n            white-space: nowrap;\\r\\n            overflow: hidden;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.dropdown-menu {\\r\\n    .dropdown-old-option-label {\\r\\n        .text-truncate {\\r\\n            max-width: 100%;\\r\\n            display: inline-block;\\r\\n            text-overflow: ellipsis;\\r\\n            white-space: nowrap;\\r\\n            overflow: hidden;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","styleUrl":"./dropdown.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"<div *ngIf=\\"form !== undefined\\">\\r\\n    \x3c!-- Label --\x3e\\r\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\r\\n        {{ label }}\\r\\n        \x3c!-- Required Asterix --\x3e\\r\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\r\\n    </label>\\r\\n\\r\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\r\\n    <i\\r\\n        [id]=\\"id + \'_InfoIcon\'\\"\\r\\n        *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\r\\n        class=\\"bi bi-question-circle-fill\\"\\r\\n        placement=\\"top\\"\\r\\n        [ngbTooltip]=\\"infoText\\"\\r\\n    ></i>\\r\\n\\r\\n    \x3c!-- ngb dropdown --\x3e\\r\\n    <div [id]=\\"id + \'_Dropdown\'\\" ngbDropdown>\\r\\n        <i\\r\\n            *ngIf=\\"type === \'input\'\\"\\r\\n            class=\\"fa fa-caret-down\\"\\r\\n            [ngClass]=\\"{ \'text-muted\': disabled === true }\\"\\r\\n            style=\\"position: absolute; top: 10px; right: 13px\\"\\r\\n            aria-hidden=\\"true\\"\\r\\n        ></i>\\r\\n        <input\\r\\n            [id]=\\"id + \'_TriggerInput\'\\"\\r\\n            #textInput\\r\\n            *ngIf=\\"type === \'input\'\\"\\r\\n            autocomplete=\\"off\\"\\r\\n            type=\\"text\\"\\r\\n            readonly\\r\\n            class=\\"form-control dropdown-toggl\\"\\r\\n            ngbDropdownToggle\\r\\n            [value]=\\"value.label\\"\\r\\n            [disabled]=\\"disabled\\"\\r\\n            [ngClass]=\\"{ pointer: disabled === false }\\"\\r\\n        />\\r\\n        <button\\r\\n            [id]=\\"id + \'_TriggerButton\'\\"\\r\\n            #button\\r\\n            *ngIf=\\"type === \'button\' || type === \'button-outline\'\\"\\r\\n            type=\\"button\\"\\r\\n            class=\\"btn form-control dropdown-old-trigger\\"\\r\\n            [ngClass]=\\"{ \'btn-outline-primary\': type === \'button-outline\', \'btn-primary\': type === \'button\', \'w-100\': w100 === true }\\"\\r\\n            ngbDropdownToggle\\r\\n            [disabled]=\\"disabled\\"\\r\\n            (mouseenter)=\\"onValueFocus($event)\\"\\r\\n        >\\r\\n            <span\\r\\n                class=\\"text-truncate\\"\\r\\n                [ngbTooltip]=\\"tooltipText\\"\\r\\n                [tooltipClass]=\\"\'tooltip-sm\'\\"\\r\\n            >\\r\\n            {{ value.label }}\\r\\n            </span>\\r\\n\\r\\n        </button>\\r\\n        <div ngbDropdownMenu [ngClass]=\\"{ \'w-100\': w100 === true || type === \'input\' }\\">\\r\\n            <button\\r\\n                [id]=\\"id + \'_Option_\' + i\\"\\r\\n                ngbDropdownItem\\r\\n                *ngFor=\\"let option of options; let i = index\\"\\r\\n                [ngClass]=\\"{ \'d-none\': option === value || option.disabled === true }\\"\\r\\n                (click)=\\"changeSelectedOption(option)\\"\\r\\n                class=\\"dropdown-old-option-label\\"\\r\\n                (mouseenter)=\\"onOptionFocus($event)\\"\\r\\n            >\\r\\n                <span\\r\\n                    class=\\"text-truncate\\"\\r\\n                    [ngbTooltip]=\\"tooltipText\\"\\r\\n                    [tooltipClass]=\\"\'tooltip-sm\'\\"\\r\\n                >\\r\\n                    {{ option.label }}\\r\\n                </span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"feedback\\">\\r\\n        \x3c!-- Success Feedback Text --\x3e\\r\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\r\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Error Feedback Text --\x3e\\r\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && showErrorValidation\\">\\r\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.required\\">\\r\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Help Text --\x3e\\r\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\r\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && showErrorValidation)\\">\\r\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{ helpText }}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiDropdownPlusComponent","id":"component-UiDropdownPlusComponent-323de872693e222003dc52a7e29feb9a0f2b7a9ac2ec8c9778da815b72688e37aec12a9012adb773fcc1880a060d35462df8a5c19a7fe7102e62ea59191dfd51","file":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown-plus","styleUrls":["./dropdown-plus.component.scss"],"styles":[],"templateUrl":["./dropdown-plus.component.html"],"viewProviders":[],"inputsClass":[{"name":"animIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":46,"type":"boolean","decorators":[]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":53,"type":"boolean","decorators":[]},{"name":"externalTriggerEleId","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"icon","defaultValue":"\'bi-filter\'","deprecated":false,"deprecationMessage":"","line":47,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":26,"type":"string","decorators":[]},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":54,"type":"boolean","decorators":[]},{"name":"maxItemsShown","defaultValue":"5","deprecated":false,"deprecationMessage":"","line":48,"type":"number","decorators":[]},{"name":"multiSelect","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":42,"type":"boolean","decorators":[]},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":44,"type":"boolean","decorators":[]},{"name":"paddingTop","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":55,"type":"number","decorators":[]},{"name":"setOptions","deprecated":false,"deprecationMessage":"","line":37,"type":"IUiDropdownPlusOption[]","decorators":[]},{"name":"showCheckbox","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":52,"type":"boolean","decorators":[]},{"name":"showSearch","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":50,"type":"boolean","decorators":[]},{"name":"showSelectClearBtns","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":51,"type":"boolean","decorators":[]},{"name":"singleSelectAutoClose","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":43,"type":"boolean","decorators":[]},{"name":"small","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":49,"type":"boolean","decorators":[]},{"name":"view","defaultValue":"\'button\'","deprecated":false,"deprecationMessage":"","line":45,"type":"string","decorators":[]}],"outputsClass":[{"name":"openChange","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":60,"type":"EventEmitter<literal type>"},{"name":"optionsCleared","defaultValue":"new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":69,"type":"EventEmitter<literal type>"},{"name":"searchChange","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":66,"type":"EventEmitter<literal type>"},{"name":"selectionChange","defaultValue":"new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":57,"type":"EventEmitter<literal type>"},{"name":"triggerClicked","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":63,"type":"EventEmitter<literal type>"}],"propertiesClass":[{"name":"_hilighted","deprecated":false,"deprecationMessage":"","type":"HTMLElement","optional":false,"description":"","line":89,"modifierKind":[121]},{"name":"_label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":88,"modifierKind":[121]},{"name":"_loading","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":91,"modifierKind":[121]},{"name":"_optionsBackup","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":90,"modifierKind":[121]},{"name":"disabledItemsLength","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":80,"modifierKind":[123]},{"name":"focusIndex","defaultValue":"-1","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":85,"modifierKind":[123]},{"name":"iconClass","defaultValue":"[\'anim\', \'bi-caret-down-fill\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":84,"modifierKind":[123]},{"name":"menuItemsRef","deprecated":false,"deprecationMessage":"","type":"QueryList<ElementRef>","optional":false,"description":"","line":74,"decorators":[{"name":"ViewChildren","stringifiedArguments":"\'menuItemsRef\'"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":81,"modifierKind":[123]},{"name":"nbgDropdown","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":72,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'nbgDropdown\'"}],"modifierKind":[123]},{"name":"ngbDropPanel","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":73,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'ngbDropPanel\'"}],"modifierKind":[123]},{"name":"options","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":76,"modifierKind":[123]},{"name":"optionTooltips","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":82,"modifierKind":[123]},{"name":"searchText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":78,"modifierKind":[123]},{"name":"selectedList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":86,"modifierKind":[123]},{"name":"selectedOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":77,"modifierKind":[123]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":83,"modifierKind":[123]},{"name":"triggerLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":79,"modifierKind":[123]}],"methodsClass":[{"name":"checkHeight","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"checkWidth","args":[{"name":"element","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":275,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"element","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearHilighted","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearSearch","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearSelection","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSelectedItems","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis will fetch the current selected list of items. It will use a snapshot of the options and compare the\\n  stored selected items with the current ones.\\n\\n","description":"<p>This will fetch the current selected list of items. It will use a snapshot of the options and compare the\\n  stored selected items with the current ones.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":4976,"end":4983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiDropdownPlusOption[] - The list of selected items</p>\\n"}]},{"name":"isElementVisible","args":[{"name":"el","type":"","deprecated":false,"deprecationMessage":""},{"name":"holder","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":225,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"el","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"holder","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClearClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":380,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClickedOutside","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":397,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMouseOver","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":336,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOpenChange","args":[{"name":"open","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":238,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"open","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOptionClick","args":[{"name":"option","type":"IUiDropdownPlusOption","deprecated":false,"deprecationMessage":""},{"name":"event","type":"PointerEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":340,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"IUiDropdownPlusOption","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"PointerEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOptionFocus","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSearchChange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":306,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSearchClearClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":392,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelectAllClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":368,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setFocusOnFirstMenuItem","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showTooltip","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":213,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"triggerClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"unSelectItem","args":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateTriggerLabel","args":[{"name":"selectionChanged","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectionChanged","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\r\\n    AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input,\\r\\n    OnInit, Output, QueryList, ViewChild, ViewChildren\\r\\n} from \'@angular/core\';\\r\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\nimport { BehaviorSubject } from \'rxjs\';\\r\\nimport { debounceTime } from \'rxjs/operators\';\\r\\n\\r\\nexport interface IUiDropdownPlusOption {\\r\\n    id: string;\\r\\n    label: string;\\r\\n    disabled: boolean;\\r\\n    value: boolean;\\r\\n    data?: unknown;\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-dropdown-plus\',\\r\\n    templateUrl: \'./dropdown-plus.component.html\',\\r\\n    styleUrls: [\'./dropdown-plus.component.scss\'],\\r\\n})\\r\\nexport class UiDropdownPlusComponent implements OnInit {\\r\\n    @Input() public externalTriggerEleId: string;\\r\\n    @Input() public id: string;\\r\\n\\r\\n    @Input() public set label(label: string) {\\r\\n        this._label = label;\\r\\n        this.triggerLabel = label;\\r\\n        setTimeout(() => {\\r\\n            this.updateTriggerLabel();\\r\\n        });\\r\\n    };\\r\\n    public get label() {\\r\\n        return this._label;\\r\\n    }\\r\\n\\r\\n    @Input() public set setOptions(options: IUiDropdownPlusOption[]) {\\r\\n        this.options = options;\\r\\n        this._optionsBackup = this.options;\\r\\n        this.updateTriggerLabel();\\r\\n    };\\r\\n    @Input() public multiSelect = true;\\r\\n    @Input() public singleSelectAutoClose = true;\\r\\n    @Input() public noBorder = false;\\r\\n    @Input() public view = \'button\';\\r\\n    @Input() public animIcon = true;\\r\\n    @Input() public icon = \'bi-filter\';\\r\\n    @Input() public maxItemsShown = 5;\\r\\n    @Input() public small = false;\\r\\n    @Input() public showSearch = false;\\r\\n    @Input() public showSelectClearBtns = false;\\r\\n    @Input() public showCheckbox = true;\\r\\n    @Input() public disabled = false;\\r\\n    @Input() public loading = false;\\r\\n    @Input() public paddingTop = 0;\\r\\n\\r\\n    @Output() public selectionChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public openChange: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public triggerClicked: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public searchChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public optionsCleared: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @ViewChild(\'nbgDropdown\') public nbgDropdown: NgbDropdown;\\r\\n    @ViewChild(\'ngbDropPanel\') public ngbDropPanel: ElementRef;\\r\\n    @ViewChildren(\'menuItemsRef\') public menuItemsRef: QueryList<ElementRef>;\\r\\n\\r\\n    public options: IUiDropdownPlusOption[];\\r\\n    public selectedOptions: IUiDropdownPlusOption[] = [];\\r\\n    public searchText = \'\';\\r\\n    public triggerLabel = \'\';\\r\\n    public disabledItemsLength = 0;\\r\\n    public menuOpen = false;\\r\\n    public optionTooltips = [];\\r\\n    public tooltipText = \'\';\\r\\n    public iconClass = [\'anim\', \'bi-caret-down-fill\'];\\r\\n    public focusIndex = -1;\\r\\n    public selectedList: IUiDropdownPlusOption[] = [];\\r\\n\\r\\n    private _label = \'\';\\r\\n    private _hilighted: HTMLElement;\\r\\n    private _optionsBackup;\\r\\n    private _loading = new BehaviorSubject<boolean>(false);\\r\\n\\r\\n    constructor() { }\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.triggerLabel = this._label;\\r\\n\\r\\n        this._optionsBackup = this.options;\\r\\n\\r\\n        this._loading.pipe(debounceTime(500)).subscribe((value) => {\\r\\n            this.loading = false;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public onClickedOutside(e) {\\r\\n        // console.log(\'onClickedOutside\')\\r\\n    }\\r\\n\\r\\n    public setFocusOnFirstMenuItem(): void {\\r\\n\\r\\n        setTimeout(() => {\\r\\n            if (document.getElementById(this.id + \'_searchTextInput\') !== null) {\\r\\n                document.getElementById(this.id + \'_searchTextInput\').focus();\\r\\n            }\\r\\n        }, 200);\\r\\n    }\\r\\n\\r\\n    public clearHilighted() {\\r\\n        this.focusIndex = -1;\\r\\n        if (this._hilighted !== undefined) {\\r\\n\\r\\n            this._hilighted.classList.remove(\'hilighted-item\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public unSelectItem(itemId: string) {\\r\\n        this.options.find((item) => { return item.id === itemId; }).value = false;\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * This will fetch the current selected list of items. It will use a snapshot of the options and compare the\\r\\n     *   stored selected items with the current ones.\\r\\n     *\\r\\n     * @returns IUiDropdownPlusOption[] - The list of selected items\\r\\n     */\\r\\n    public getSelectedItems() {\\r\\n\\r\\n        // Get the selected items by comparing the options with the backup/snapshot\\r\\n        if (this._optionsBackup !== undefined) {\\r\\n            this.selectedList = this._optionsBackup.filter((name) => {\\r\\n                return name.value === true;\\r\\n            });\\r\\n        }\\r\\n\\r\\n        return this.selectedList;\\r\\n    }\\r\\n\\r\\n    public clearSelection() {\\r\\n        this.options.forEach((option) => { option.value = false; });\\r\\n        this.clearHilighted();\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    public clearSearch() {\\r\\n        this.searchText = \'\';\\r\\n        this.options = this._optionsBackup;\\r\\n    }\\r\\n\\r\\n    public updateTriggerLabel(selectionChanged = true) {\\r\\n\\r\\n        setTimeout(() => {\\r\\n            const prevSelectedOptions = this.selectedOptions;\\r\\n\\r\\n            this.selectedOptions = this._optionsBackup.filter((name) => {\\r\\n                return name.value === true;\\r\\n            });\\r\\n\\r\\n            if (this.selectedOptions.length === 0) {\\r\\n                this.triggerLabel = this._label;\\r\\n            }\\r\\n            else if (this.selectedOptions.length === 1) {\\r\\n                this.triggerLabel = this.selectedOptions[0].label;\\r\\n            }\\r\\n            else {\\r\\n                this.triggerLabel = this._label + ` (${this.selectedOptions.length})`;\\r\\n            }\\r\\n\\r\\n            this.disabledItemsLength = this._optionsBackup.filter((name) => {\\r\\n                return name.disabled === true;\\r\\n            }).length;\\r\\n        }, 100);\\r\\n\\r\\n    }\\r\\n\\r\\n    public triggerClick() {\\r\\n        if (this.disabled === false && this.nbgDropdown !== undefined && this.menuOpen === false) {\\r\\n            this.nbgDropdown.open();\\r\\n        }\\r\\n\\r\\n        const triggerEle = document.getElementById(this.externalTriggerEleId);\\r\\n\\r\\n        if (this.externalTriggerEleId !== undefined && this.externalTriggerEleId !== null) {\\r\\n\\r\\n            if (triggerEle !== undefined && triggerEle !== null) {\\r\\n\\r\\n                const dropPanelEle = document.getElementById(this.id + \'_drop-panel\');\\r\\n\\r\\n                dropPanelEle.style.top = triggerEle.offsetTop + triggerEle.offsetHeight + this.paddingTop + \'px\';\\r\\n                dropPanelEle.style.left = triggerEle.offsetLeft + \'px\';\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.triggerClicked.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    public onOptionFocus(e) {\\r\\n        this.showTooltip(e);\\r\\n    }\\r\\n\\r\\n    public showTooltip(e) {\\r\\n\\r\\n        const ele: HTMLElement = e.target.getElementsByClassName(\'text-truncate\')[0];\\r\\n\\r\\n        if (ele.scrollWidth > ele.offsetWidth) {\\r\\n            this.tooltipText = e.target.innerText;\\r\\n        }\\r\\n        else {\\r\\n            this.tooltipText = \'\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public isElementVisible(el, holder) {\\r\\n        holder = holder || document.body;\\r\\n        const { top, bottom, height } = el.getBoundingClientRect();\\r\\n        const holderRect = holder.getBoundingClientRect();\\r\\n\\r\\n        if (bottom > holderRect.bottom) {\\r\\n            return false;\\r\\n        }\\r\\n        else {\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onOpenChange(open: boolean) {\\r\\n\\r\\n        if (this.disabled === false) {\\r\\n            this.menuOpen = open;\\r\\n\\r\\n            const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\r\\n            const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\r\\n\\r\\n            if (dropPanel !== null) {\\r\\n                dropPanel.style.visibility = \'hidden\';\\r\\n                optionsPanel.style.maxHeight = \'0\';\\r\\n\\r\\n                if (open === true) {\\r\\n\\r\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\r\\n                    this.focusIndex = -1;\\r\\n                    this.setFocusOnFirstMenuItem();\\r\\n                    setTimeout(() => {\\r\\n                        this.checkHeight();\\r\\n                        dropPanel.style.visibility = \'visible\';\\r\\n                        if (optionsPanel !== null) {\\r\\n                            document.getElementById(this.id + \'_options-panel\').focus();\\r\\n                        }\\r\\n                    }, 50);\\r\\n                }\\r\\n                else {\\r\\n                    this.clearHilighted();\\r\\n                    this.clearSearch();\\r\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            this.menuOpen = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkWidth(element) {\\r\\n\\r\\n        if (element.scrollWidth > element.offsetWidth) {\\r\\n            return true;\\r\\n        }\\r\\n        else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkHeight() {\\r\\n\\r\\n        const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\r\\n        const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\r\\n\\r\\n        if (optionsPanel !== null && dropPanel !== null && this.options.length !== 0) {\\r\\n            dropPanel.style.visibility = \'hidden\';\\r\\n            const menuItemHeight = Math.ceil(this.menuItemsRef.get(0).nativeElement.getBoundingClientRect().height);\\r\\n\\r\\n            if (this.options.length < this.maxItemsShown) {\\r\\n                optionsPanel.style.height = String(menuItemHeight * this.options.length + \'px\');\\r\\n            }\\r\\n            else {\\r\\n                optionsPanel.style.height = String(menuItemHeight * this.maxItemsShown + \'px\');\\r\\n            }\\r\\n\\r\\n            optionsPanel.style.maxHeight = String(menuItemHeight * this.maxItemsShown + \'px\');\\r\\n            dropPanel.style.visibility = \'visible\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onSearchChange() {\\r\\n\\r\\n        this.focusIndex = -1;\\r\\n        if (this.searchText.length !== 0) {\\r\\n            const tempSearch = this.searchText.toLowerCase();\\r\\n            const temp = this._optionsBackup.filter((name) => name.label.toLowerCase().includes(tempSearch));\\r\\n\\r\\n            this.loading = true;\\r\\n            this._loading.next(true);\\r\\n            if (temp.length !== 0) {\\r\\n                this.options = temp;\\r\\n            }\\r\\n            else {\\r\\n                this.options = [];\\r\\n            }\\r\\n        }\\r\\n        else {\\r\\n            this.options = this._optionsBackup;\\r\\n        }\\r\\n\\r\\n        setTimeout(() => {\\r\\n\\r\\n            this.updateTriggerLabel(false);\\r\\n            this.checkHeight();\\r\\n            this.searchChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n        });\\r\\n\\r\\n        this._loading.next(true);\\r\\n    }\\r\\n\\r\\n    public onMouseOver(event) {\\r\\n        this.showTooltip(event);\\r\\n    }\\r\\n\\r\\n    public onOptionClick(option: IUiDropdownPlusOption, event: PointerEvent) {\\r\\n\\r\\n        event.preventDefault();\\r\\n        setTimeout(() => {\\r\\n            option.value = !option.value;\\r\\n\\r\\n            this.clearHilighted();\\r\\n            this.focusIndex = this.options.findIndex((tempOption) => { return tempOption.id === option.id; });\\r\\n            if (option.disabled === false || option.disabled === null) {\\r\\n                if (this.multiSelect === false) {\\r\\n\\r\\n                    // Set all others to false\\r\\n                    this.options.forEach((tempOption) => {\\r\\n                        if (tempOption.id !== option.id) {\\r\\n                            tempOption.value = false;\\r\\n                        }\\r\\n                    });\\r\\n                    // Close the dropdown panel\\r\\n                    if (this.singleSelectAutoClose === true) {\\r\\n                        this.nbgDropdown.close();\\r\\n                    }\\r\\n                }\\r\\n                this.updateTriggerLabel();\\r\\n                this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n            }\\r\\n        }, 50);\\r\\n    }\\r\\n\\r\\n    public onSelectAllClick() {\\r\\n\\r\\n        this.options.forEach((option) => {\\r\\n            if (option.disabled === false) {\\r\\n                option.value = true;\\r\\n            }\\r\\n        });\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n        this.clearHilighted();\\r\\n    }\\r\\n\\r\\n    public onClearClick() {\\r\\n        this.options.forEach((option) => {\\r\\n            if (option.disabled === false) {\\r\\n                option.value = false;\\r\\n            }\\r\\n        });\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n        this.clearHilighted();\\r\\n        this.optionsCleared.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\r\\n    }\\r\\n\\r\\n    public onSearchClearClick() {\\r\\n        this.searchText = \'\';\\r\\n        this.onSearchChange();\\r\\n    }\\r\\n\\r\\n    public onKeyDown(event: KeyboardEvent) {\\r\\n\\r\\n        if (event.key === \'Escape\') {\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n        }\\r\\n\\r\\n        this.updateTriggerLabel();\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.search-input-icon {\\r\\n    background-color: $white;\\r\\n    border-style: none;\\r\\n    color: $gray-600;\\r\\n    z-index: 1001;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n    padding-left: 40px;\\r\\n    padding-right: 30px;\\r\\n}\\r\\n\\r\\n.form-group .bi {\\r\\n    position: absolute;\\r\\n    color: $gray-500;\\r\\n\\r\\n    &.left {\\r\\n        padding-left: 15px;\\r\\n    }\\r\\n\\r\\n    &.right {\\r\\n        left: inherit;\\r\\n        right: 20px;\\r\\n\\r\\n        &:hover {\\r\\n            color: $body-color;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    &.trigger {\\r\\n        &.no-border {\\r\\n            border: none;\\r\\n            box-shadow: none !important;\\r\\n            padding-left: 0px;\\r\\n            padding-right: 0px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.hi-lite {\\r\\n        border: 1px solid $primary;\\r\\n    }\\r\\n\\r\\n    &.btn-link {\\r\\n\\r\\n        padding: 0;\\r\\n        &:hover {\\r\\n            text-decoration: underline;\\r\\n        }\\r\\n\\r\\n        &:focus {\\r\\n            text-decoration: underline;\\r\\n            color: $primary-600;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.dropdown-menu {\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.dropdown-item {\\r\\n    min-height: 40px;\\r\\n    padding: 0.25rem 1rem;\\r\\n    padding-left: 0.5rem;\\r\\n    &.selected-item {\\r\\n        background-color: $primary-050;\\r\\n        &:focus{\\r\\n            background-color: $primary-100;\\r\\n        }\\r\\n        &:hover{\\r\\n            background-color: $primary-100;\\r\\n        }\\r\\n    }\\r\\n    &.hilighted-item {\\r\\n        background-color: $gray-500;\\r\\n        &:focus{\\r\\n            background-color: $gray-600;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.dropdown {\\r\\n    cursor: pointer;\\r\\n\\r\\n    &.disabled {\\r\\n        .quick-filter {\\r\\n            color: $gray-600;\\r\\n            cursor:default;\\r\\n        }\\r\\n        .quick-filter.option-selected {\\r\\n            color: $gray-600;\\r\\n            cursor:default;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .quick-filter.option-selected {\\r\\n        color: $primary;\\r\\n    }\\r\\n}\\r\\n\\r\\n.form-check {\\r\\n    padding-left: 0;\\r\\n}\\r\\n\\r\\n.small * {\\r\\n    font-size: $font-size-md;\\r\\n}\\r\\n\\r\\n.h-0{\\r\\n    max-height: 0;\\r\\n}\\r\\n\\r\\n.dropup, .dropend, .dropdown, .dropstart {\\r\\n    &.trigger-position {\\r\\n        position: inherit;\\r\\n    }\\r\\n}\\r\\n\\r\\n","styleUrl":"./dropdown-plus.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":91},"implements":["OnInit"],"accessors":{"label":{"name":"label","setSignature":{"name":"label","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":26,"jsdoctags":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"label","type":"","returnType":"","line":33}},"setOptions":{"name":"setOptions","setSignature":{"name":"setOptions","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":37,"jsdoctags":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div [id]=\\"id + \'_dropdown_container\'\\" class=\\"d-flex\\" (clickOutside)=\\"onClickedOutside($event)\\"  >\\r\\n\\r\\n    <div\\r\\n        [id]=\\"id + \'_Dropdown\'\\"\\r\\n        ngbDropdown\\r\\n        display=\\"static\\"\\r\\n        #nbgDropdown=\\"ngbDropdown\\"\\r\\n        class=\\"d-inline-block dropdown\\"\\r\\n        [ngClass]=\\"{\'small\': small === true, \'disabled\': disabled === true, \'trigger-position\': externalTriggerEleId !== undefined }\\"\\r\\n        [placement]=\\"\'bottom-left\'\\"\\r\\n        [autoClose]=\\"\'outside\'\\"\\r\\n        (openChange)=\\"onOpenChange($event)\\"\\r\\n    >\\r\\n\\r\\n        \x3c!-- Button Trigger --\x3e\\r\\n        <button\\r\\n            *ngIf=\\"view === \'button\'\\"\\r\\n            ngbDropdownToggle\\r\\n            type=\\"button\\"\\r\\n            [ngClass]=\\"{\'no-border\': noBorder === true, \'open\': menuOpen === true}\\"\\r\\n            class=\\"btn btn-outline-primary trigger d-flex align-items-center\\"\\r\\n            [id]=\\"id + \'_trigger\'\\"\\r\\n            >\\r\\n            <div style=\\"max-width: 200px;\\" class=\\"d-inline-block text-truncate\\">\\r\\n                {{triggerLabel}}\\r\\n            </div>\\r\\n            <i [ngClass]=\\"{\'anim\': animIcon === true}\\" class=\\"bi bi-caret-down-fill ms-1 d-inline-block bi-sm\\"></i>\\r\\n        </button>\\r\\n\\r\\n        \x3c!-- Quick Filter Trigger --\x3e\\r\\n        <div\\r\\n            *ngIf=\\"view === \'quick-filter\'\\"\\r\\n            ngbDropdownToggle\\r\\n            class=\\"d-flex align-items-center quick-filter\\"\\r\\n            [id]=\\"id + \'_trigger\'\\"\\r\\n            [ngClass]=\\"{\'open\': menuOpen === true, \'option-selected\': getSelectedItems().length !== 0}\\"\\r\\n            (click)=\\"triggerClick();\\"\\r\\n        >\\r\\n            <div class=\\"label d-inline-block text-truncate\\" >\\r\\n                {{triggerLabel}}\\r\\n            </div>\\r\\n            <div>\\r\\n                <i\\r\\n                    class=\\"bi ms-1 d-inline-block anim\\"\\r\\n                    [ngClass]=\\"{\'bi-caret-down-fill\': getSelectedItems().length === 0, \'bi-filter\': getSelectedItems().length !== 0}\\"\\r\\n                >\\r\\n                </i>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- None Filter Trigger --\x3e\\r\\n        <div\\r\\n            *ngIf=\\"view === \'none\'\\"\\r\\n            [id]=\\"id + \'_triggerNone\'\\"\\r\\n            class=\\"d-none\\"\\r\\n            ngbDropdownToggle\\r\\n        >\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- drop-panel --\x3e\\r\\n        <div style=\\"position: absolute;\\" [id]=\\"this.id + \'_drop-panel\'\\" class=\\"drop-panel h-auto\\" ngbDropdownMenu #ngbDropPanel (keyup)=\\"onKeyDown($event)\\">\\r\\n\\r\\n            \x3c!-- Search Input --\x3e\\r\\n            <div *ngIf=\\"showSearch === true\\" class=\\"m-2 form-group d-flex align-items-center\\">\\r\\n                <i class=\\"bi bi-search bi-md left\\"></i>\\r\\n                <input [(ngModel)]=\\"searchText\\" (ngModelChange)=\\"onSearchChange()\\" type=\\"email\\" class=\\"form-control\\" [id]=\\"id + \'_searchTextInput\'\\" placeholder=\\"{{\'COMMON.SEARCH\' | translate}}\\" autocomplete=\\"off\\">\\r\\n                <i *ngIf=\\"searchText.length !== 0\\" class=\\"bi bi-x-lg bi-md right\\" (click)=\\"onSearchClearClick()\\"></i>\\r\\n            </div>\\r\\n            \x3c!-- <div *ngIf=\\"loading === false\\"> --\x3e\\r\\n\\r\\n            <div [ngClass]=\\"{\'invisible h-0\': loading === true}\\" >\\r\\n\\r\\n                \x3c!-- Select All Button --\x3e\\r\\n                \x3c!--  --\x3e\\r\\n                <div class=\\"select-all-clear\\" *ngIf=\\"options.length !== 0\\">\\r\\n\\r\\n                    <button\\r\\n                        type=\\"button\\"\\r\\n                        class=\\"btn btn-link btn-md d-inline-block select-all m-2 ms-3 select-all-btn\\"\\r\\n                        *ngIf=\\"showSelectClearBtns === true && multiSelect === true && selectedOptions.length !== this.options.length - this.disabledItemsLength\\"\\r\\n                        [id]=\\"id + \'SelectAllBtn\'\\"\\r\\n                        [disabled]=\\"selectedOptions.length === this.options.length - this.disabledItemsLength\\"\\r\\n                        (click)=\\"onSelectAllClick()\\"\\r\\n                    >\\r\\n                        {{\'COMMON.SELECT_ALL\' | translate}}\\r\\n                    </button>\\r\\n\\r\\n                    \x3c!-- Clear Button --\x3e\\r\\n                    <button\\r\\n                        type=\\"button\\"\\r\\n                        class=\\"btn btn-link btn-md d-inline-block select-all m-2 ms-3 clear-btn\\"\\r\\n                        *ngIf=\\"showSelectClearBtns === true && multiSelect === true && selectedOptions.length !== 0\\"\\r\\n                        [id]=\\"id + \'clearBtn\'\\"\\r\\n                        [disabled]=\\"selectedOptions.length === 0\\"\\r\\n                        (click)=\\"onClearClick()\\"\\r\\n                    >\\r\\n                        {{\'COMMON.CLEAR\' | translate}}\\r\\n                    </button>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                \x3c!-- Divider --\x3e\\r\\n                <div *ngIf=\\"showSearch || showSelectClearBtns\\" class=\\"dropdown-divider mt-0 mb-0\\"></div>\\r\\n\\r\\n                \x3c!-- Option Panel --\x3e\\r\\n                <div\\r\\n                    class=\\"options-panel h-auto\\"\\r\\n                    [id]=\\"this.id + \'_options-panel\'\\"\\r\\n                    [ngClass]=\\"{\'invisible\': options.length === 0}\\"\\r\\n                >\\r\\n                    \x3c!-- Option Buttons --\x3e\\r\\n                    <button\\r\\n                        class=\\"ps-3\\"\\r\\n                        container=\\"body\\"\\r\\n                        ngbDropdownItem\\r\\n                        #menuItemsRef\\r\\n                        *ngFor=\\"let option of options; let i = index;\\"\\r\\n                        [ngClass]=\\"{\'selected-item\': option.value === true}\\"\\r\\n                        [id]=\\"id + \'_Option_\' + option.id\\"\\r\\n                        [disabled]=\\"option.disabled\\"\\r\\n                        [placement]=\\"\'top\'\\"\\r\\n                        [ngbTooltip]=\\"tooltipText\\"\\r\\n                        (click)=\\"onOptionClick(option, $event)\\"\\r\\n                        (mouseenter)=\\"onMouseOver($event)\\"\\r\\n                        (focus)=\\"onOptionFocus($event)\\"\\r\\n                        >\\r\\n                        <div class=\\"form-check pt-2\\" [ngClass]=\\"{\'ps-4\': multiSelect === true}\\">\\r\\n                            <input *ngIf=\\"multiSelect === true\\" tabindex=\\"-1\\" class=\\"form-check-input pointer\\" type=\\"checkbox\\" [(ngModel)]=\\"option.value\\" [id]=\\"id + \'_Option_Checkbox_\' + option.id\\" >\\r\\n                            <label class=\\"form-check-label w-100 pointer\\" [for]=\\"id + \'_Option_Checkbox_\' + option.id\\">\\r\\n                                <ngb-highlight [id]=\\"id + \'_Option_Text_\' + option.id\\" class=\\"d-block text-truncate\\" result=\\"{{option.label | translate: option.labelParams}}\\" [term]=\\"searchText\\"></ngb-highlight>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                \x3c!-- No result --\x3e\\r\\n                <div [id]=\\"id + \'_noResult\'\\" *ngIf=\\"options.length === 0\\" class=\\"m-3 text-gray-700 d-flex align-items-center\\">\\r\\n                    {{\'COMMON.NO_RESULT_FOUND\' | translate}}\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div [ngClass]=\\"{\'d-none\': loading === false}\\">\\r\\n\\r\\n                \x3c!-- Divider --\x3e\\r\\n                <div class=\\"dropdown-divider mt-0 mb-0\\"></div>\\r\\n\\r\\n                <div [id]=\\"id + \'_loading\'\\" *ngIf=\\"loading === true\\" class=\\"m-3 text-gray-700 d-flex align-items-center\\">\\r\\n                    <div class=\\"spinner-border spinner-border-sm me-2\\" role=\\"status\\"></div>\\r\\n                    {{\'COMMON.LOADING_RESULTS\' | translate}}\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiDropdownRendererComponent","id":"component-UiDropdownRendererComponent-76214693c3eef1f3aa180a88635410d4eb5b1eab5535b1e3d683a18607ea34bda7fbd6feca88ca9311366d22bcd60a755596df8ded5d12d8c3e4f15965c79a1a","file":"libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown-renderer","styleUrls":["./dropdown-renderer.component.scss"],"styles":[],"templateUrl":["./dropdown-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_subscriptions","defaultValue":"new Subscription()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[121]},{"name":"itemsArray","defaultValue":"[\\r\\n        {id: 1, label: \'Item 1\', labelParams: \'param1\'},\\r\\n        {id: 2, label: \'Item 2\', labelParams: \'param2\'},\\r\\n        {id: 3, label: \'Item 3\', labelParams: \'param3\'},\\r\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"selectedItemId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"selectedOption","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectOption","args":[{"name":"option","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ElementRef, ViewChild } from \'@angular/core\';\\r\\nimport { AfterViewInit, OnDestroy } from \'@angular/core/core\';\\r\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\r\\nimport { ICellRendererParams } from \'ag-grid-community\';\\r\\nimport { Subscription } from \'rxjs\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-dropdown-renderer\',\\r\\n    templateUrl: \'./dropdown-renderer.component.html\',\\r\\n    styleUrls: [\'./dropdown-renderer.component.scss\'],\\r\\n})\\r\\nexport class UiDropdownRendererComponent implements OnDestroy, ICellRendererAngularComp {\\r\\n\\r\\n    public params: any;\\r\\n    public selectedItemId: string;\\r\\n    public selectedOption = {};\\r\\n\\r\\n    public itemsArray = [\\r\\n        {id: 1, label: \'Item 1\', labelParams: \'param1\'},\\r\\n        {id: 2, label: \'Item 2\', labelParams: \'param2\'},\\r\\n        {id: 3, label: \'Item 3\', labelParams: \'param3\'},\\r\\n    ];\\r\\n\\r\\n    private _subscriptions = new Subscription();\\r\\n\\r\\n    public constructor() {}\\r\\n\\r\\n    public onChange = (e) => {};\\r\\n\\r\\n    public refresh(params: ICellRendererParams): boolean {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._subscriptions.unsubscribe();\\r\\n    }\\r\\n\\r\\n    public agInit(params: any): void {\\r\\n        this.params = params;\\r\\n\\r\\n        this.selectedItemId = params.selectedItemId;\\r\\n        this.itemsArray = params.itemsArray;\\r\\n        this.selectedOption = this.itemsArray.find((item) => { return item.id === params.selectedItemId; });\\r\\n\\r\\n        this.onChange = params.onChange;\\r\\n    }\\r\\n\\r\\n    public selectOption(option){\\r\\n        this.selectedOption = option;\\r\\n        this.onChange(option);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./dropdown-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":24,"modifierKind":[123]},"implements":["OnDestroy","ICellRendererAngularComp"],"templateData":"<div ngbDropdown class=\\"d-inline-block\\" container=\\"body\\" >\\r\\n    <div ngbDropdownToggle>\\r\\n        {{selectedOption[\'label\'] | translate: selectedOption[\'labelParams\']}}\\r\\n    </div>\\r\\n    <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\r\\n        <button *ngFor=\\"let item of itemsArray\\" [ngClass]=\\"{\'active\': selectedOption === item}\\" ngbDropdownItem (click)=\\"selectOption(item)\\">{{item.label | translate: item.labelParams}}</button>\\r\\n    </div>\\r\\n</div>"},{"name":"UiErrorComponent","id":"component-UiErrorComponent-73100d9c17925cdc17d056a38be1efff1bd51cab5af3c623d88aac22066fa30f91e14c6134db6900cfe910c4a87ce028a03c3f8b970aba5bb9bb0ad0bae9170b","file":"libs/ui/src/lib/modules/error/error.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-error","styleUrls":["./error.component.scss"],"styles":[],"templateUrl":["./error.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"contactSupportLink","defaultValue":"\'#\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"returnUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"smallErrorPage","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"openModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"updateSize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":41}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, HostListener, OnDestroy, OnInit } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\nimport { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { UiSupportModalComponent } from \'../layout/components/support-modal/support-modal.component\';\\r\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-error\',\\r\\n    templateUrl: \'./error.component.html\',\\r\\n    styleUrls: [\'./error.component.scss\'],\\r\\n})\\r\\nexport class UiErrorComponent implements OnInit, AfterViewInit, OnDestroy {\\r\\n    public returnUrl = \'\';\\r\\n    public contactSupportLink = \'#\';\\r\\n    public smallErrorPage = false;\\r\\n\\r\\n    constructor(\\r\\n        private _location: Location,\\r\\n        private _breakpointObserver: BreakpointObserver,\\r\\n        private _modalService: NgbModal,\\r\\n        private _layoutService: UiLayoutService\\r\\n    ) {\\r\\n        this._breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small]).subscribe((result) => {\\r\\n            this.smallErrorPage = result.matches;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._layoutService.showMargins = true;\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit(): void {\\r\\n        setTimeout(() => {\\r\\n            this.updateSize();\\r\\n        });\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        this.updateSize();\\r\\n    }\\r\\n\\r\\n    public updateSize() {\\r\\n        const h = window.innerHeight - document.getElementById(\'error-page\').getClientRects()[0].top - 55;\\r\\n        document.getElementById(\'error-page\').style.height = h.toString() + \'px\';\\r\\n        document.getElementById(\'error-page\').style.visibility = \'visible\';\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        document.getElementById(\'error-page\').style.visibility = \'hidden\';\\r\\n\\r\\n        this._layoutService.showMargins = false;\\r\\n        this._layoutService.calcTop = false;\\r\\n\\r\\n        this._layoutService.onUpdateLayout.subscribe(() => {\\r\\n            document.getElementById(\'error-page\').style.visibility = \'hidden\';\\r\\n            setTimeout(() => {\\r\\n                this.onResize();\\r\\n                document.getElementById(\'error-page\').style.visibility = \'visible\';\\r\\n            }, 200);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public openModal() {\\r\\n        const modalRef = this._modalService.open(UiSupportModalComponent, new UiModalConfig());\\r\\n\\r\\n        modalRef.result.then(\\r\\n            (result?: any) => {},\\r\\n            (dismiss?) => {}\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public goBack() {\\r\\n        this._location.back();\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.windmill {\\r\\n    position: absolute;\\r\\n    width: 33%;\\r\\n    min-width: 100px;\\r\\n    right: 20px;\\r\\n    bottom: -40px;\\r\\n    z-index: 0;\\r\\n\\r\\n    &.small {\\r\\n        width: 66%;\\r\\n    }\\r\\n}\\r\\n\\r\\n.title {\\r\\n    font-size: 56px;\\r\\n    color: $gray-700;\\r\\n    font-weight: 700;\\r\\n    line-height: 110%;\\r\\n    padding-bottom: 20px;\\r\\n\\r\\n    &.small {\\r\\n        font-size: 32px;\\r\\n        letter-spacing: -0.01em;\\r\\n    }\\r\\n}\\r\\n\\r\\n.error-number {\\r\\n    padding-top: 32px;\\r\\n    padding-bottom: 32px;\\r\\n    font-size: 16px;\\r\\n    color: $gray-700;\\r\\n}\\r\\n\\r\\n.main-error-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: flex-start;\\r\\n    max-width: 500px;\\r\\n}\\r\\n\\r\\n.error-page {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    min-height: 350px;\\r\\n\\r\\n    &.small {\\r\\n        justify-content: flex-start;\\r\\n    }\\r\\n}\\r\\n\\r\\n.feedback-text-wrapper {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}","styleUrl":"./error.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","AfterViewInit","OnDestroy"],"templateData":"<div id=\\"error-page\\" class=\\"error-page p-4\\" [ngClass]=\\"{ small: smallErrorPage === true }\\">\\r\\n    <div class=\\"main-error-content\\">\\r\\n        <h1 class=\\"title \\" [ngClass]=\\"{ small: smallErrorPage === true }\\">{{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_TITLE\' | translate }}</h1>\\r\\n\\r\\n        <div class=\\"feedback-text-wrapper\\">\\r\\n            <div innerHTML=\\"{{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_SUBTEXT_PT1\' | translate }}\\"></div>\\r\\n            <a href=\\"javascript:void(0);\\" (click)=\\"openModal()\\"> {{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_SUBTEXT_PT2\' | translate }}</a>\\r\\n            <div innerHTML=\\"{{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_SUBTEXT_PT3\' | translate }}\\"></div>\\r\\n        </div>\\r\\n        \x3c!--- Add in when error handling service is used\\r\\n        <span class=\\"error-number\\">Error #000</span>\\r\\n        --\x3e\\r\\n        <button class=\\"btn btn-primary btn-md mt-5\\" (click)=\\"goBack()\\">{{ \'COMMON.GO_BACK\' | translate }}</button>\\r\\n    </div>\\r\\n    <img class=\\"windmill\\" alt=\\"Windmill on hill\\" [ngClass]=\\"{ small: smallErrorPage === true }\\" src=\\"assets/images/windmill.svg\\" />\\r\\n</div>\\r\\n"},{"name":"UiFeedbackFormComponent","id":"component-UiFeedbackFormComponent-2f5677adada56883a3ccce5e8b9170e70064186a5831af9e2ff027f59b53a1de4496c09c377b74e5c2b0d6d88b8122bc365b88491ffe402fb966b12b2b568499","file":"libs/ui/src/lib/modules/layout/components/feedback-form/feedback-form.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-feedback-form","styleUrls":["./feedback-form.component.scss"],"styles":[],"templateUrl":["./feedback-form.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":36,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"rate","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { Validators } from \'@angular/forms\';\\r\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\r\\nimport { NgbRatingModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-feedback-form\',\\r\\n    templateUrl: \'./feedback-form.component.html\',\\r\\n    styleUrls: [\'./feedback-form.component.scss\'],\\r\\n})\\r\\nexport class UiFeedbackFormComponent extends UiFormBaseComponent implements OnInit {\\r\\n    public rate = 0;\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.formControls = {\\r\\n            currentRate: {\\r\\n                value: null,\\r\\n                validators: [Validators.required],\\r\\n            },\\r\\n            description: {\\r\\n                value: \'\',\\r\\n                validators: [Validators.maxLength(500)],\\r\\n            },\\r\\n            subject: { value: \'User Feedback\', validators: []},\\r\\n            type: { value: \'ESG Feedback\', validators: []},\\r\\n            recordType: { value: \'0128X000001Im9Y\', validators: []}, // Supplier Success\\r\\n        };\\r\\n\\r\\n        this.createForm(this.formControls);\\r\\n        this.editMode = true;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.rating-text {\\r\\n    font-family: \'Roboto\';\\r\\n    font-style: normal;\\r\\n    font-weight: 700;\\r\\n    font-size: 16px;\\r\\n    line-height: 150%;\\r\\n    color: $gray-900;\\r\\n}\\r\\n\\r\\n.rating-legend {\\r\\n    font-size: 14px;\\r\\n    width: 410px;\\r\\n    height: 21px;\\r\\n    color: $gray-800;\\r\\n}\\r\\n\\r\\nngb-rating {\\r\\n    font-size: 48px;\\r\\n    height: 48px;\\r\\n    color: $primary;\\r\\n}\\r\\n\\r\\n.rating {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    align-items: flex-start;\\r\\n    padding: 0px;\\r\\n    gap: 16px;\\r\\n\\r\\n    width: 410px;\\r\\n    height: 48px;\\r\\n    padding-right: 15px;\\r\\n}\\r\\n\\r\\n.filled {\\r\\n    color: $primary;\\r\\n    padding-right: 15px;\\r\\n}\\r\\n\\r\\n.painted-star {\\r\\n    font-size: 48px;\\r\\n    position: absolute;\\r\\n    display: inline-block;\\r\\n    overflow: hidden;\\r\\n    color: $primary;\\r\\n    padding-right: 0px;\\r\\n}\\r\\n\\r\\n.default-star {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    color: $gray-600;\\r\\n    padding-right: 15px;\\r\\n}\\r\\n\\r\\n.comments {\\r\\n    padding-top: 30px;\\r\\n    max-height: 86px;\\r\\n}","styleUrl":"./feedback-form.component.scss"}],"stylesData":"","extends":"UiFormBaseComponent","implements":["OnInit"],"templateData":"<form [formGroup]=\\"form\\" autocomplete=\\"off\\">\\r\\n    <div class=\\"row form-group\\">\\r\\n        \x3c!-- Rating START --\x3e\\r\\n        <div class=\\"rating-div\\">\\r\\n            <div class=\\"rating-text\\">{{ \'COMMON.OVERALL_IMPRESSION\' | translate }}</div>\\r\\n            <div class=\\"rating-legend\\">{{ \'COMMON.RATING_LEGEND\' | translate }}</div>\\r\\n            <div class=\\"rating\\">\\r\\n                <ngb-rating [(rate)]=\\"rate\\" [formControlName]=\\"\'currentRate\'\\" max=\\"5\\">\\r\\n                    <ng-template let-fill=\\"fill\\">\\r\\n                        <span class=\\"default-star\\" [class.filled]=\\"fill === 100\\">\\r\\n                            <span class=\\"painted-star\\" [style.width.%]=\\"fill\\"> <i class=\\"bi bi-star-fill\\"></i></span>\\r\\n                            <i class=\\"bi bi-star\\"></i>\\r\\n                        </span>\\r\\n                    </ng-template>\\r\\n                </ngb-rating>\\r\\n            </div>\\r\\n        </div>\\r\\n        \x3c!-- Rating END --\x3e\\r\\n        \x3c!-- Text Area 1 START --\x3e\\r\\n        <div class=\\"col-12 comments\\">\\r\\n            <ui-text-area\\r\\n                [formControlName]=\\"\'description\'\\"\\r\\n                [label]=\\"\'COMMON.SUGGESTIONS_WELCOME\' | translate\\"\\r\\n                [placeholder]=\\"\'COMMON.TYPE_SUGGESTION\' | translate\\"\\r\\n                [form]=\\"form\\"\\r\\n                [showHelpText]=\\"false\\"\\r\\n                [showInfoIcon]=\\"false\\"\\r\\n                [rows]=\\"3\\"\\r\\n            >\\r\\n            </ui-text-area>\\r\\n        </div>\\r\\n        \x3c!--  Text Area 1 END --\x3e\\r\\n        <input type=\\"hidden\\" name=\\"orgid\\" value=\\"00D61000000e6A7\\" />\\r\\n        <input type=\\"hidden\\" name=\\"retURL\\" value=\\"TBD\\" />\\r\\n        <input type=\\"hidden\\" name=\\"type\\" value=\\"Feedback\\" />\\r\\n        <input type=\\"hidden\\" name=\\"subject\\" value=\\"global\\" />\\r\\n    </div>\\r\\n</form>\\r\\n"},{"name":"UiFeedbackModalComponent","id":"component-UiFeedbackModalComponent-09601ec7991c9c11cac27fdd8f9e3bf1b064f20dd5ba8e4809b38476f60256a7743ca063515614f96d541d2a06ae6cc144b8c3f97f6096bd56f397b5b758953a","file":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-feedback-modal","styleUrls":["./feedback-modal.component.scss"],"styles":[],"templateUrl":["./feedback-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":25,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"feedbackForm","deprecated":false,"deprecationMessage":"","type":"UiFeedbackFormComponent","optional":false,"description":"","line":19,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'feedbackForm\'"}],"modifierKind":[123]},{"name":"formState","defaultValue":"UiFormState.notSubmitted","deprecated":false,"deprecationMessage":"","type":"UiFormState","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"FormState","defaultValue":"UiFormState","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"saveBtnDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onformSubmitted","args":[{"name":"data","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1821,"end":1825,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1815,"end":1820,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2020,"end":2024,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2014,"end":2019,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient, HttpHeaders } from \'@angular/common/http\';\\r\\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from \'@angular/core\';\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiFeedbackFormComponent } from \'../feedback-form/feedback-form.component\';\\r\\nimport { UiModalBaseComponent } from \'../../../modal/components/modal-base/modal-base.component\';\\r\\n\\r\\nexport enum UiFormState{\\r\\n    notSubmitted = 0,\\r\\n    waiting = 1,\\r\\n    submitted = 2\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-feedback-modal\',\\r\\n    templateUrl: \'./feedback-modal.component.html\',\\r\\n    styleUrls: [\'./feedback-modal.component.scss\']\\r\\n})\\r\\nexport class UiFeedbackModalComponent extends UiModalBaseComponent implements AfterViewInit {\\r\\n    @ViewChild(\'feedbackForm\') public feedbackForm: UiFeedbackFormComponent;\\r\\n    public saveBtnDisabled = true;\\r\\n\\r\\n    public formState: UiFormState = UiFormState.notSubmitted;\\r\\n    public FormState = UiFormState;\\r\\n\\r\\n    public constructor(private _layoutService: UiLayoutService, public activeModal: NgbActiveModal) {\\r\\n        super(activeModal);\\r\\n    }\\r\\n    public ngAfterViewInit(): void {\\r\\n        super.ngAfterViewInit();\\r\\n\\r\\n        this.feedbackForm.form.valueChanges.subscribe((d) => {\\r\\n            this.saveBtnDisabled = !this.feedbackForm.form.valid;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public onformSubmitted(data) {\\r\\n\\r\\n        this._layoutService.salesforceWebToCase(data);\\r\\n        this.formState = UiFormState.waiting;\\r\\n\\r\\n        setTimeout(() => {\\r\\n            this.updateBorder();\\r\\n        });\\r\\n\\r\\n        // Simulate loading time\\r\\n        setTimeout(() => {\\r\\n            this.formState = UiFormState.submitted;\\r\\n        }, 2000);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n\\r\\n.modal-body {\\r\\n    height: 350px;\\r\\n}\\r\\n\\r\\n.action-buttons {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: flex-end;\\r\\n    align-items: center;\\r\\n    gap: 10px;\\r\\n}\\r\\n\\r\\n.modal-title {\\r\\n    // font-weight: 700;\\r\\n    // font-size: 24px;\\r\\n    // line-height: 120%;\\r\\n    // width: 384px;\\r\\n    // height: 29px;\\r\\n}\\r\\n\\r\\n.feedback-instructions {\\r\\n    font-weight: 400;\\r\\n    font-size: 14px;\\r\\n    color: $gray-800;\\r\\n}\\r\\n\\r\\n.spinner-page {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    // padding: 20px;\\r\\n    gap: 8px;\\r\\n    width: 450px;\\r\\n    height: 300px;\\r\\n}\\r\\n\\r\\n.submitted-page {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    // padding: 20px;\\r\\n    gap: 16px;\\r\\n    width: 450px;\\r\\n    height: 300px;\\r\\n}\\r\\n\\r\\n.help-text {\\r\\n    font-style: normal;\\r\\n    font-weight: 400;\\r\\n    font-size: 16px;\\r\\n    line-height: 150%;\\r\\n    text-align: center;\\r\\n    color: $gray-800;\\r\\n}","styleUrl":"./feedback-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":23,"modifierKind":[123],"jsdoctags":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","implements":["AfterViewInit"],"templateData":"\\r\\n<div class=\\"modal-header\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\r\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\r\\n        <div>\\r\\n            <h3 class=\\"modal-title\\">{{ \'COMMON.YOUR_FEEDBACK\' | translate }}</h3>\\r\\n            <div class=\\"feedback-instructions\\">{{ \'COMMON.SUBMIT_FEEDBACK_PLEASE\' | translate }}</div>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <button type=\\"button\\" class=\\"btn-close\\" aria-label=\\"Close\\" (click)=\\"dismiss()\\"></button>\\r\\n</div>\\r\\n<div #modalBody class=\\"modal-body\\">\\r\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\r\\n        \x3c!--Form START--\x3e\\r\\n        <ui-feedback-form #feedbackForm (formSubmitted)=\\"onformSubmitted($event)\\"></ui-feedback-form>\\r\\n        \x3c!--Form END--\x3e\\r\\n    </ng-container>\\r\\n\\r\\n    \x3c!--SPINNER PAGE START--\x3e\\r\\n    <div class=\\"spinner-page\\" *ngIf=\\"formState === FormState.waiting\\">\\r\\n        <div class=\\"spinner-border spinner-border-lg\\" role=\\"status\\"></div>\\r\\n        <div>{{ \'COMMON.SUBMITTING\' | translate }}</div>\\r\\n    </div>\\r\\n    \x3c!--SPINNER PAGE END--\x3e\\r\\n\\r\\n    \x3c!--Submitted page START--\x3e\\r\\n    <div class=\\"submitted-page\\" *ngIf=\\"formState === FormState.submitted\\">\\r\\n        <i class=\\"bi bi-check-circle-fill bi-3x text-success\\"></i>\\r\\n        <h3>{{ \'COMMON.THANKS_SUBMIT_FEEDBACK\' | translate }}</h3>\\r\\n        <div class=\\"help-text\\" innerHTML=\\"{{ \'COMMON.FEEDBACK_CONTRIBUTION\' | translate }}\\"></div>\\r\\n        \x3c!-- <button  type=\\"button\\" class=\\"btn btn-primary w-100\\">{{ \'COMMON.OK_THANKS\' | translate }}</button> --\x3e\\r\\n    </div>\\r\\n    \x3c!--Submitted page END--\x3e\\r\\n</div>\\r\\n\\r\\n\x3c!-- Footer START --\x3e\\r\\n<div class=\\"modal-footer\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\r\\n    <div class=\\"action-buttons w-100\\">\\r\\n\\r\\n        \x3c!--Action buttons footer START--\x3e\\r\\n        <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primary btn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"dismiss()\\">\\r\\n            {{ \'COMMON.DISMISS\' | translate }}\\r\\n        </button>\\r\\n        <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary btn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"feedbackForm.submitForm()\\" [disabled]=\\"saveBtnDisabled\\">\\r\\n            {{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}\\r\\n        </button>\\r\\n        <button id=\\"btnThankYou\\" type=\\"button\\" class=\\"btn btn-primary w-100\\" *ngIf=\\"formState === FormState.submitted\\" (click)=\\"dismiss()\\">{{ \'COMMON.OK_THANKS\' | translate }}</button>\\r\\n        \x3c!--Action buttons footer END--\x3e\\r\\n    </div>\\r\\n</div>\\r\\n\x3c!-- Footer END --\x3e\\r\\n"},{"name":"UiFileUploadComponent","id":"component-UiFileUploadComponent-08523c65f9b87a4b6a21b3e8218665a2d6f0ae4f3eb551dc089c31cee8a12d0344eab82296c40868c5dfb54f9e1e2e3ffc7f9bd150d4c213c99524caeee94307","file":"libs/ui/src/lib/modules/file-upload/components/file-upload/file-upload.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-file-upload","styleUrls":["./file-upload.component.scss"],"styles":[],"templateUrl":["./file-upload.component.html"],"viewProviders":[],"inputsClass":[{"name":"acceptFileTypes","defaultValue":"[\\r\\n        \'text/plain\', // txt\\r\\n        // \'application/pdf\', // pdf\\r\\n        // \'application/msword\', // doc\\r\\n        // \'application/vnd.ms-excel\', // xls\\r\\n        // \'application/vnd.openxmlformats-officedocument.wordprocessingml.document\', // docx\\r\\n        // \'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\', // xlsx\\r\\n        // \'application/rtf\', // rtf\\r\\n        // \'image/jpeg\', // jpg/jpeg\\r\\n        // \'image/png\', // png\\r\\n        // \'application/json\', // json\\r\\n    ]","deprecated":false,"deprecationMessage":"","line":30,"type":"{}","decorators":[]},{"name":"buttonView","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"endpoint","deprecated":false,"deprecationMessage":"","line":44,"type":"string","decorators":[]},{"name":"files","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":43,"type":"UiFileItemModel[]","decorators":[]},{"name":"folder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":45,"type":"string","decorators":[]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"helpText","deprecated":false,"deprecationMessage":"","line":25,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"infoText","defaultValue":"\'FILE_UPLOAD.DRAG_DROP_CLICK\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'FILE_UPLOAD.UPLOAD_FILES\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"loadingText","defaultValue":"\'FILE_UPLOAD.LOADING\'","deprecated":false,"deprecationMessage":"","line":42,"type":"string","decorators":[]},{"name":"mainText","defaultValue":"\'FILE_UPLOAD.DRAG_DROP_CLICK\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"maxFileSize","defaultValue":"20000","deprecated":false,"deprecationMessage":"","line":28,"type":"number","decorators":[]},{"name":"maximumFilesAllowed","defaultValue":"5","deprecated":false,"deprecationMessage":"","line":29,"type":"number","decorators":[]},{"name":"showFiles","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"showInfoIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"handleDocumentProcessedError","defaultValue":"new EventEmitter<UiDocumentModel>()","deprecated":false,"deprecationMessage":"","line":52,"type":"EventEmitter<UiDocumentModel>"},{"name":"handleDocumentProcessedResult","defaultValue":"new EventEmitter<UiDocumentModel>()","deprecated":false,"deprecationMessage":"","line":51,"type":"EventEmitter<UiDocumentModel>"},{"name":"handleDocumentRemoved","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<UiFileItemModel>"},{"name":"handleDocumentScanError","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":48,"type":"EventEmitter<UiFileItemModel>"},{"name":"handleDocumentScanResult","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":47,"type":"EventEmitter<UiFileItemModel>"},{"name":"handleDocumentValidationError","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":49,"type":"EventEmitter<UiFileItemModel>"}],"propertiesClass":[{"name":"_fileScanConfig","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":62,"modifierKind":[121]},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"fileUploaded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"handleError","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":235,"modifierKind":[121]},{"name":"isFileScanning","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"isScanClean","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"safeFiles","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"UiButtonTypeEnum","defaultValue":"UiButtonTypeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]}],"methodsClass":[{"name":"extensionAccepted","args":[{"name":"extension","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"extension","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"fileBrowseHandler","args":[{"name":"files","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"files","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"formatBytes","args":[{"name":"bytes","type":"","deprecated":false,"deprecationMessage":""},{"name":"decimals","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":224,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"bytes","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"decimals","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSafeCount","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleCleanScan","args":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":""},{"name":"scanResult","type":"IUiFileScanResult","deprecated":false,"deprecationMessage":""},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<UiDocumentModel>","typeParameters":[],"line":257,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"scanResult","type":"IUiFileScanResult","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleDirtyScan","args":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":246,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onFileDropped","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"prepareFilesList","args":[{"name":"files","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"files","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"processDocument","args":[{"name":"document","type":"UiDocumentModel","deprecated":false,"deprecationMessage":""},{"name":"params","type":"HttpParams","deprecated":false,"deprecationMessage":"","optional":true},{"name":"headers","type":"HttpHeaders","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<UiDocumentModel>","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"document","type":"UiDocumentModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"params","type":"HttpParams","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"headers","type":"HttpHeaders","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"removeFile","args":[{"name":"thisFile","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"thisFile","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"uploadFile","args":[{"name":"files","type":"FileList | Array<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"files","type":"FileList | Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient, HttpContext, HttpErrorResponse, HttpHeaders, HttpParams } from \'@angular/common/http\';\\r\\nimport { Component, EventEmitter, Input, Output } from \'@angular/core\';\\r\\nimport { catchError, map, mergeMap, Observable, of, tap } from \'rxjs\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { SKIP_INTERCEPTOR } from \'@app/interceptors\';\\r\\nimport { UiButtonTypeEnum } from \'@lib/modules/button/enums/action-button-type.enum\';\\r\\nimport { UiFileScanService, IUiFileScanResult } from \'@lib/modules/file-upload/services/file-scan.service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiFileItemModel } from \'../models/file-item.model\';\\r\\nimport { UiDocumentModel } from \'../models/document.model\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-file-upload\',\\r\\n    templateUrl: \'./file-upload.component.html\',\\r\\n    styleUrls: [\'./file-upload.component.scss\'],\\r\\n})\\r\\nexport class UiFileUploadComponent {\\r\\n    @Input() public id: string;\\r\\n    @Input() public disabled = false;\\r\\n    @Input() public buttonView = false;\\r\\n    @Input() public forceDisabled = false;\\r\\n    @Input() public label = \'FILE_UPLOAD.UPLOAD_FILES\';\\r\\n    @Input() public mainText = \'FILE_UPLOAD.DRAG_DROP_CLICK\';\\r\\n    @Input() public infoText = \'FILE_UPLOAD.DRAG_DROP_CLICK\';\\r\\n    @Input() public helpText;\\r\\n    @Input() public showInfoIcon = false;\\r\\n    @Input() public showFiles = true;\\r\\n    @Input() public maxFileSize = 20000; // In bytes\\r\\n    @Input() public maximumFilesAllowed = 5;\\r\\n    @Input() public acceptFileTypes = [\\r\\n        \'text/plain\', // txt\\r\\n        // \'application/pdf\', // pdf\\r\\n        // \'application/msword\', // doc\\r\\n        // \'application/vnd.ms-excel\', // xls\\r\\n        // \'application/vnd.openxmlformats-officedocument.wordprocessingml.document\', // docx\\r\\n        // \'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\', // xlsx\\r\\n        // \'application/rtf\', // rtf\\r\\n        // \'image/jpeg\', // jpg/jpeg\\r\\n        // \'image/png\', // png\\r\\n        // \'application/json\', // json\\r\\n    ];\\r\\n    @Input() public loadingText = \'FILE_UPLOAD.LOADING\';\\r\\n    @Input() public files: UiFileItemModel[] = [];\\r\\n    @Input() public endpoint: string; // Optional endpoint to proceed the file after scan.\\r\\n    @Input() public folder = \'\'; // Optional folder.\\r\\n\\r\\n    @Output() public handleDocumentScanResult: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\r\\n    @Output() public handleDocumentScanError: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\r\\n    @Output() public handleDocumentValidationError: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\r\\n    @Output() public handleDocumentRemoved: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\r\\n    @Output() public handleDocumentProcessedResult: EventEmitter<UiDocumentModel> = new EventEmitter<UiDocumentModel>();\\r\\n    @Output() public handleDocumentProcessedError: EventEmitter<UiDocumentModel> = new EventEmitter<UiDocumentModel>();\\r\\n\\r\\n    public error = false;\\r\\n    public safeFiles: any[] = [];\\r\\n    public isFileScanning: boolean;\\r\\n    public isScanClean: boolean;\\r\\n    public isLoading = false;\\r\\n    public fileUploaded: boolean;\\r\\n    public UiButtonTypeEnum = UiButtonTypeEnum;\\r\\n\\r\\n    private _fileScanConfig: {\\r\\n        scanIdentityPoolId: string;\\r\\n        scanBucketRegion: string;\\r\\n        scanUrl: string;\\r\\n        scanBucketName: string;\\r\\n        awsS3ServiceURL: string;\\r\\n        enabled: boolean;\\r\\n    };\\r\\n\\r\\n    constructor(\\r\\n        private _fileScanService: UiFileScanService,\\r\\n        private _httpClient: HttpClient,\\r\\n        private _translateService: TranslateService,\\r\\n        private _configurationService: UiConfigurationService\\r\\n    ) {\\r\\n        this._fileScanConfig = this._configurationService.appConfig[\'file-scan\'];\\r\\n    }\\r\\n\\r\\n    public fileBrowseHandler(files) {\\r\\n        this.prepareFilesList(files);\\r\\n    }\\r\\n\\r\\n    public prepareFilesList(files: Array<any>) {\\r\\n        for (const item of files) {\\r\\n            item.progress = 0;\\r\\n            item.typeRejected = null;\\r\\n            item.safe = false;\\r\\n            item.index = Date.now().toString(36) + Math.random().toString(36).substring(2);\\r\\n\\r\\n            if (this.getSafeCount() < this.maximumFilesAllowed) {\\r\\n                if (this.extensionAccepted(item.type)) {\\r\\n                    item.isLoading = true;\\r\\n                    item.isFileScanning = true;\\r\\n                    if (item.size >= this.maxFileSize) {\\r\\n                        item.typeRejected = \'FILE_UPLOAD.EXCEEDED_MAX_FILE_SIZE\';\\r\\n                        item.message = \'FILE_UPLOAD.EXCEEDED_MAX_FILE_SIZE\';\\r\\n                        item.isLoading = false;\\r\\n                        item.isFileScanning = false;\\r\\n                        this.handleDocumentValidationError.emit(item);\\r\\n                    }\\r\\n                } else {\\r\\n                    item.typeRejected = \'FILE_UPLOAD.FILE_TYPE_REJECTED\';\\r\\n                    item.message = \'FILE_UPLOAD.FILE_TYPE_REJECTED\';\\r\\n                    item.isLoading = false;\\r\\n                    item.isFileScanning = false;\\r\\n                    this.handleDocumentValidationError.emit(item);\\r\\n                }\\r\\n            } else {\\r\\n                item.typeRejected = \'FILE_UPLOAD.EXCEEDED_MAX_FILES\';\\r\\n                item.message = \'FILE_UPLOAD.EXCEEDED_MAX_FILES\';\\r\\n                item.isLoading = false;\\r\\n                this.handleDocumentValidationError.emit(item);\\r\\n            }\\r\\n            this.files.push(item);\\r\\n        }\\r\\n        this.uploadFile(this.files);\\r\\n        this.disabled = this.getSafeCount() >= this.maximumFilesAllowed;\\r\\n    }\\r\\n\\r\\n    public getSafeCount() {\\r\\n        return this.files.filter((obj) => obj.safe === true || (obj.uploaded === undefined && obj.typeRejected === null)).length;\\r\\n    }\\r\\n\\r\\n    public onFileDropped($event) {\\r\\n        this.prepareFilesList($event);\\r\\n        this.disabled = this.getSafeCount() >= this.maximumFilesAllowed;\\r\\n    }\\r\\n\\r\\n    public removeFile(thisFile) {\\r\\n        this.files.splice(\\r\\n            this.files.findIndex((item) => item.index === thisFile.index),\\r\\n            1\\r\\n        );\\r\\n        this.handleDocumentRemoved.emit(thisFile);\\r\\n        this.disabled = this.getSafeCount() >= this.maximumFilesAllowed;\\r\\n    }\\r\\n\\r\\n    public extensionAccepted(extension: string) {\\r\\n        return this.acceptFileTypes.some((fileType) => {\\r\\n            return extension.includes(fileType);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public uploadFile(files: FileList | Array<any>) {\\r\\n        this.isLoading = true;\\r\\n\\r\\n        // If no document is uploading\\r\\n        const loadingDocumentCount = this.files.filter((obj) => obj.isLoading === true).length;\\r\\n        if (loadingDocumentCount === 0) {\\r\\n            this.isLoading = false;\\r\\n        }\\r\\n        // If no document is scanning\\r\\n        const isFileScanning = this.files.filter((obj) => obj.isFileScanning === true).length;\\r\\n        if (isFileScanning === 0) {\\r\\n            this.isFileScanning = false;\\r\\n        }\\r\\n\\r\\n        setTimeout(() => {\\r\\n            for (let i = 0; i < files.length; ++i) {\\r\\n                if (files[i].typeRejected === null && files[i].uploaded === undefined) {\\r\\n                    const fileName = files[i].name.split(\'.\').slice(0, -1).join(\'.\');\\r\\n                    const fileType = files[i].type;\\r\\n                    const fileExt = files[i].name.split(\'.\').pop();\\r\\n                    this._fileScanService\\r\\n                        .uploadFile(files[i], this.folder)\\r\\n                        .pipe(\\r\\n                            tap(() => {\\r\\n                                if (this._fileScanService.fileScan) {\\r\\n                                    this.isFileScanning = true;\\r\\n                                }\\r\\n                            }),\\r\\n                            mergeMap(() => this._fileScanService.fileScan),\\r\\n                            mergeMap((result) => {\\r\\n                                if (result.scanResultClean === true) {\\r\\n                                    files[i].isLoading = false;\\r\\n                                    files[i].isFileScanning = false;\\r\\n                                    files[i].safe = true;\\r\\n                                    files[i].uploaded = true;\\r\\n                                    files[i].bucket = this._fileScanConfig.scanBucketName;\\r\\n                                    files[i].scanResult = result;\\r\\n                                    files[i].fileExt = fileExt;\\r\\n                                    files[i].mimeType = fileType;\\r\\n                                    return this.handleCleanScan(files[i], result, fileName);\\r\\n                                } else {\\r\\n                                    files[i].isLoading = false;\\r\\n                                    files[i].isFileScanning = false;\\r\\n                                    files[i].safe = false;\\r\\n                                    files[i].uploaded = true;\\r\\n                                    files[i].bucket = this._fileScanConfig.scanBucketName;\\r\\n                                    files[i].scanResult = result;\\r\\n                                    this.handleDirtyScan(files[i]);\\r\\n                                }\\r\\n                                return of(null);\\r\\n                            }),\\r\\n                            map((doc) => {\\r\\n                                if (doc) {\\r\\n                                    return true;\\r\\n                                }\\r\\n                            })\\r\\n                        )\\r\\n                        .subscribe((value) => {});\\r\\n                }\\r\\n            }\\r\\n        }, 2000);\\r\\n    }\\r\\n\\r\\n    public processDocument(document: UiDocumentModel, params?: HttpParams, headers?: HttpHeaders): Observable<UiDocumentModel> {\\r\\n        const options = { headers, params, context: new HttpContext().set(SKIP_INTERCEPTOR, true) };\\r\\n        return this._httpClient.post(`${this.endpoint}`, document, options).pipe(\\r\\n            catchError((error) => this.handleError(error, document)),\\r\\n            map((res: UiDocumentModel) => {\\r\\n                for (let i = 0; i < this.files.length; i++) {\\r\\n                    if (this.files[i].name === res.fileName + \'.\' + res.fileExt) {\\r\\n                        this.files[i].processed = true;\\r\\n                    }\\r\\n                    this.handleDocumentProcessedResult.emit(document);\\r\\n                }\\r\\n                return res;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public formatBytes(bytes, decimals) {\\r\\n        if (bytes === 0) {\\r\\n            return \'0 Bytes\';\\r\\n        }\\r\\n        const k = 1024;\\r\\n        const dm = decimals <= 0 ? 0 : decimals || 2;\\r\\n        const sizes = [\'Bytes\', \'KB\', \'MB\', \'GB\', \'TB\', \'PB\', \'EB\', \'ZB\', \'YB\'];\\r\\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\\r\\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \' \' + sizes[i];\\r\\n    }\\r\\n\\r\\n    private handleError = (error: HttpErrorResponse, fileItem: UiDocumentModel) => {\\r\\n        for (let i = 0; i < this.files.length; i++) {\\r\\n            if (this.files[i].name === fileItem.fileName + \'.\' + fileItem.fileExt) {\\r\\n                this.files[i].error = this._translateService.instant(\'FILE_UPLOAD.SERVER_ERROR\') + \': \' + error.statusText;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.handleDocumentProcessedError.emit(fileItem);\\r\\n        return of();\\r\\n    };\\r\\n\\r\\n    private handleDirtyScan(file: UiFileItemModel) {\\r\\n        this.isFileScanning = false;\\r\\n        this.fileUploaded = true;\\r\\n        this.isScanClean = false;\\r\\n        this.isLoading = false;\\r\\n        file.message = \'FILE_UPLOAD.FILE_UNSAFE\';\\r\\n\\r\\n        this._fileScanService.completeFileScan();\\r\\n        this.handleDocumentScanError.emit(file);\\r\\n    }\\r\\n\\r\\n    private handleCleanScan(\\r\\n        file: UiFileItemModel,\\r\\n        scanResult: IUiFileScanResult,\\r\\n        fileName: string,\\r\\n    ): Observable<UiDocumentModel> {\\r\\n        this.isFileScanning = false;\\r\\n        this.isScanClean = true;\\r\\n        this.fileUploaded = true;\\r\\n        this.isLoading = false;\\r\\n\\r\\n        const s3Key = scanResult.key.split(\'+\').join(\'\');\\r\\n        const uniqueFileName = s3Key.split(\'/\').pop();\\r\\n        const documentToSave = new UiDocumentModel();\\r\\n\\r\\n        documentToSave.fileName = fileName;\\r\\n        documentToSave.fileExt = file.fileExt;\\r\\n        documentToSave.mimeType = file.mimeType;\\r\\n        documentToSave.s3Key = s3Key;\\r\\n        documentToSave.uniqueFileName = uniqueFileName;\\r\\n        documentToSave.bucket = this._fileScanConfig.scanBucketName;\\r\\n\\r\\n        this._fileScanService.completeFileScan();\\r\\n        this.handleDocumentScanResult.emit(file);\\r\\n\\r\\n        // If endpoint not undefined and not empty, saveDocument(proceed server side document) using that specified endpoint.\\r\\n        if (this.endpoint !== undefined && this.endpoint !== \'\') {\\r\\n            return this.processDocument(documentToSave);\\r\\n        } else {\\r\\n            return of(documentToSave);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.drop-box {\\r\\n    width: 100%;\\r\\n    min-height: 150px;\\r\\n    border: 2px solid $primary;\\r\\n    border-radius: 4px;\\r\\n    padding: 20px;\\r\\n    background-color: $white;\\r\\n    -webkit-user-select: none; /* Safari */\\r\\n    -ms-user-select: none; /* IE 10 and IE 11 */\\r\\n    user-select: none; /* Standard syntax */\\r\\n\\r\\n    &.disabled {\\r\\n        border-color: $gray-500;\\r\\n    }\\r\\n    &.disabled * {\\r\\n        color: $gray-500;\\r\\n    }\\r\\n}\\r\\n\\r\\n.file-box {    \\r\\n    width: 100%;\\r\\n    border-radius: 4px;\\r\\n    background-color: $gray-200;\\r\\n    margin-top: 1rem;\\r\\n    .bi {\\r\\n        line-height: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.loading-container {\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\n.error {\\r\\n    outline: 1px solid $danger-500;\\r\\n}\\r\\n\\r\\n.error-icon {\\r\\n    padding-right: 3px;\\r\\n}\\r\\n\\r\\n.success-icon {\\r\\n    font-size: 1.3rem;\\r\\n}\\r\\n\\r\\n.file {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n}\\r\\n  \\r\\ninput {\\r\\n    position: absolute;\\r\\n    font-size: 50px;\\r\\n    opacity: 0;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n}\\r\\n/* CSS */\\r\\n.spin {\\r\\n    animation: spin 2s linear infinite;\\r\\n}\\r\\n\\r\\n.curs {\\r\\n    cursor: default;\\r\\n}\\r\\n  \\r\\n@keyframes spin {\\r\\n    0% { transform: rotate(0deg); }\\r\\n    100% { transform: rotate(360deg); }\\r\\n}","styleUrl":"./file-upload.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_fileScanService","type":"UiFileScanService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":69,"jsdoctags":[{"name":"_fileScanService","type":"UiFileScanService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div class=\\"form\\" [disabled]=\\"disabled\\" uiDragDrop (fileDropped)=\\"onFileDropped($event)\\">  \\r\\n    \x3c!-- Label and info icon --\x3e\\r\\n    <div class=\\"d-flex align-items-center\\">\\r\\n        \x3c!-- Label --\x3e\\r\\n        <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\r\\n            {{label | translate}}\\r\\n            \x3c!-- Required Asterix --\x3e\\r\\n            \x3c!-- <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span> --\x3e\\r\\n        </label>\\r\\n        <br>\\r\\n        \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\r\\n        <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== undefined && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill ps-2\\"\\r\\n            placement=\\"top\\" [ngbTooltip]=\\"infoText | translate\\">\\r\\n        </i>\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Upload Button --\x3e\\r\\n    <div *ngIf=\\"buttonView === true\\" class=\\"file btn btn-primary\\">\\r\\n        {{loadingText | translate}}\\r\\n        <input class=\\"pointer\\" type=\\"file\\" #fileDropRef id=\\"fileDropRef\\" multiple (change)=\\"prepareFilesList($event.target[\'files\'])\\" />\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Upload Drag and Drop box --\x3e\\r\\n    <div *ngIf=\\"buttonView === false\\" class=\\"drop-box d-flex align-items-center\\" [ngClass]=\\"{\'disabled\': disabled === true || isLoading === true}\\">\\r\\n        <div *ngIf=\\"!isLoading\\" class=\\"d-flex flex-column align-items-center justify-content-center w-100\\">\\r\\n                <div>\\r\\n                    <i class=\\"bi bi-upload bi-lg h-100\\" [ngClass]=\\"{\'text-primary\': disabled === false}\\"></i>\\r\\n                </div>\\r\\n                <div class=\\"file btn\\" [ngClass]=\\"{\'btn-link\': disabled === false}\\">\\r\\n                    {{mainText | translate}}\\r\\n                    <input [disabled]=\\"disabled\\" [ngClass]=\\"{\'pointer\': disabled === false}\\" type=\\"file\\" #fileDropRef id=\\"fileDropRef\\" multiple (change)=\\"fileBrowseHandler($event.target[\'files\'])\\" />\\r\\n                </div>\\r\\n                <div class=\\"text-gray-700 text-center\\" *ngIf=\\"helpText !== null && helpText !== \'\'\\">{{helpText | translate}}</div>        \\r\\n                <input hidden #fileInput type=\\"file\\" [multiple]=\\"false\\">\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\"w-100\\" *ngIf=\\"isLoading\\">            \\r\\n            <div class=\\"d-flex align-items-center flex-column\\">\\r\\n                <div class=\\"spinner-border\\"></div>\\r\\n                <span class=\\"pt-2\\">{{loadingText | translate}}</span>\\r\\n            </div> \\r\\n        </div>\\r\\n    </div>        \\r\\n</div>\\r\\n<ng-container *ngIf=\\"showFiles === true\\">\\r\\n    <div class=\\"file-box d-flex bd-highlight align-items-center ps-2 pe-2\\" *ngFor=\\"let item of files; let i = index\\" [ngClass]=\\"item.typeRejected || item.error || (item.safe === false && item.uploaded === true) ? \'error\' : \'normal\'\\">    \\r\\n        <div class=\\"p-2 flex-grow-1 bd-highlight\\">\\r\\n            {{item.name}}\\r\\n            \x3c!--             \\r\\n            <ng-container *ngIf=\\"item?.isFileScanning === true\\"> - <span class=\\"text-success\\"> Scanning</span></ng-container>\\r\\n            <ng-container *ngIf=\\"item?.uploaded === true\\"> - <span class=\\"text-success\\"> {{\'FILE_UPLOAD.FILE_UPLOADED\' | translate}}</span></ng-container>\\r\\n             --\x3e\\r\\n            <ng-container *ngIf=\\"item?.safe === false && item?.uploaded === true\\"> - <span class=\\"text-danger\\"> {{\'FILE_UPLOAD.FILE_UNSAFE\' | translate}} </span></ng-container>\\r\\n            <ng-container *ngIf=\\"item?.typeRejected !== null\\"> - <span class=\\"text-danger\\"> {{\'FILE_UPLOAD.FILE_REJECTED\' | translate}} - {{item?.typeRejected | translate}} </span></ng-container>\\r\\n            <ng-container *ngIf=\\"item?.error !== undefined\\"> - <span class=\\"text-danger\\">{{item?.error}}</span></ng-container>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\"p-2 bd-highlight d-flex gap-3 align-items-center\\">\\r\\n            <i *ngIf=\\"item?.error !== undefined || item?.typeRejected !== null\\" class=\\"error-icon bi bi-exclamation-triangle-fill text-danger-600\\"></i>\\r\\n            <i *ngIf=\\"item?.isLoading === false\\" class=\\"bi bi-x-lg pointer\\" (click)=\\"removeFile(item)\\"></i>\\r\\n            <div *ngIf=\\"item?.isLoading === true\\" class=\\"spinner-border spinner-border-sm\\"></div>        \\r\\n        </div>    \\r\\n    </div>\\r\\n</ng-container>\\r\\n"},{"name":"UiFormBaseComponent","id":"component-UiFormBaseComponent-0bf78514bbc43b747ea506a0743a377f0b4b7e3b4446413a5d5f464ad13b67e520d126d55788bd13707d99cef1efeeb6b1d800d2594a647abe0bde2cbd340874","file":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-base","styleUrls":["./form-base.component.scss"],"styles":[],"templateUrl":["./form-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter"},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter"},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":36,"type":"EventEmitter"}],"propertiesClass":[{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[121]},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[121]},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[122]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]}],"methodsClass":[{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\r\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\nexport class UiFormControlConfig {\\r\\n    public formControlName? = \'\';\\r\\n    public disabled? = false;\\r\\n    public forceDisabled? = false;\\r\\n    public label?: \'Test\'; // TODO: Is type supposed to be \'Test\'? Should it be string?\\r\\n    public placeholder? = \'\';\\r\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\r\\n    public form?: any;\\r\\n    public prefixIcon? = \'\';\\r\\n    public suffixIcon? = \'\';\\r\\n    public prefixText? = \'\';\\r\\n    public suffixText? = \'\';\\r\\n    public helpText? = \'\';\\r\\n    public infoText? = \'\';\\r\\n    public showHelpText? = true;\\r\\n    public showSuccessValidation? = false;\\r\\n    public showErrorValidation? = true;\\r\\n    public showInfoIcon? = true;\\r\\n    public patternErrorText? = \'patternErrorText\';\\r\\n    public errorStrings? = {};\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-form-base\',\\r\\n    templateUrl: \'./form-base.component.html\',\\r\\n    styleUrls: [\'./form-base.component.scss\'],\\r\\n})\\r\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\r\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\r\\n\\r\\n    @Output() public formStatusChange = new EventEmitter<any>();\\r\\n    @Output() public formClosed = new EventEmitter<any>();\\r\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\r\\n\\r\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\r\\n        this._editMode = value;\\r\\n        if (this._editMode === true) {\\r\\n            this.enableAllInputs();\\r\\n        } else {\\r\\n            this.disableAllInputs();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public get editMode(): boolean {\\r\\n        return this._editMode;\\r\\n    }\\r\\n\\r\\n    public form: FormGroup;\\r\\n    public payload: any = {};\\r\\n\\r\\n    public modeChanged = false;\\r\\n    public formControls: { [name: string]: { value: any; validators: Validators; config?: UiFormControlConfig } };\\r\\n\\r\\n    public showSuccessValidation = false;\\r\\n    public showErrorValidation = true;\\r\\n    public showHelpText = true;\\r\\n    public showInfoIcon = true;\\r\\n\\r\\n    public Validators = Validators;\\r\\n\\r\\n    protected _ngUnsubscribe = new Subject();\\r\\n\\r\\n    private _initialValues;\\r\\n    private _editMode = false;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._ngUnsubscribe.next(null);\\r\\n        this._ngUnsubscribe.complete();\\r\\n    }\\r\\n\\r\\n    public createForm(formControls: { [name: string]: { value: any; validators: any; config?: UiFormControlConfig } }) {\\r\\n        this.form = new FormGroup({});\\r\\n        for (const [key, value] of Object.entries(formControls)) {\\r\\n            const newControl = new FormControl(value.value, { validators: value.validators });\\r\\n            this.form.setControl(key, newControl);\\r\\n        }\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public setValues(FormValues: any) {\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.form.controls[key].setValue(FormValues[key]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public viewForm() {\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public editForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.editMode = true;\\r\\n    }\\r\\n\\r\\n    public clearForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.form.reset();\\r\\n        this.payload = {};\\r\\n    }\\r\\n\\r\\n    public cancelForm() {\\r\\n        this.form.reset(this._initialValues);\\r\\n        this.payload = {};\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public closeForm() {\\r\\n        this.editMode = false;\\r\\n        this.formClosed.emit();\\r\\n    }\\r\\n\\r\\n    public submitForm(): FormData {\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.payload[key] = this.form.controls[key].value;\\r\\n        });\\r\\n        this.editMode = false;\\r\\n\\r\\n        this.formSubmitted.emit(this.form.value);\\r\\n\\r\\n        return this.form.value;\\r\\n    }\\r\\n\\r\\n    public onClearBtnClick() {\\r\\n        this.clearForm();\\r\\n    }\\r\\n\\r\\n    public onEditBtnClick() {\\r\\n        this.editForm();\\r\\n    }\\r\\n\\r\\n    public onCancelBtnClick() {\\r\\n        this.cancelForm();\\r\\n    }\\r\\n\\r\\n    public onCloseBtnClick() {\\r\\n        this.closeForm();\\r\\n    }\\r\\n\\r\\n    public onSaveBtnClick() {\\r\\n        this.submitForm();\\r\\n    }\\r\\n\\r\\n    public onFormOptionsChanged(e: { showInfoIcon: boolean; showHelpText: boolean }) {\\r\\n        this.showInfoIcon = e.showInfoIcon;\\r\\n        this.showHelpText = e.showHelpText;\\r\\n    }\\r\\n\\r\\n    private disableAllInputs() {\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n                    this.form.controls[control].disable();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private enableAllInputs() {\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n                    // Enable only the form controls that don\'t have forceDisabled\\r\\n                    if (this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined) {\\r\\n                        if (this.formControls[control].config.forceDisabled === false) {\\r\\n                            this.form.controls[control].enable();\\r\\n                            this.form.controls[control].markAsUntouched();\\r\\n                        }\\r\\n                    } else {\\r\\n                        this.form.controls[control].enable();\\r\\n                        this.form.controls[control].markAsUntouched();\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":67},"implements":["OnInit","OnDestroy"],"accessors":{"editMode":{"name":"editMode","setSignature":{"name":"editMode","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":38,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"editMode","type":"boolean","returnType":"boolean","line":47}}},"templateData":"<p>Implement your form template in your extended component.</p>\\r\\n"},{"name":"UiFormBaseComponent","id":"component-UiFormBaseComponent-f0ca6c7f67242d541413f32675de663f0399e988a09bafc7adb4e48a6c344bcfa90629c03e2d9e05532298723244a75ff7285bad0390f93f446ca7c161930bda-1","file":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-base","styleUrls":["./form-base.component.scss"],"styles":[],"templateUrl":["./form-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter"},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter"},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":39,"type":"EventEmitter"}],"propertiesClass":[{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121]},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121]},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[122]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123]}],"methodsClass":[{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\r\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\r\\nimport { Subject } from \'rxjs\';\\r\\n\\r\\n/**\\r\\n * @deprecated: Use UiFormControlConfig from @lib/modules/form/form-base/form-base.component.ts\\r\\n */\\r\\nexport class UiFormControlConfigObsolete {\\r\\n    public formControlName? = \'\';\\r\\n    public disabled? = false;\\r\\n    public forceDisabled? = false;\\r\\n    public label?: \'Test\';\\r\\n    public placeholder? = \'\';\\r\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\r\\n    public form?: any;\\r\\n    public prefixIcon? = \'\';\\r\\n    public suffixIcon? = \'\';\\r\\n    public prefixText? = \'\';\\r\\n    public suffixText? = \'\';\\r\\n    public helpText? = \'\';\\r\\n    public infoText? = \'\';\\r\\n    public showHelpText? = true;\\r\\n    public showSuccessValidation? = false;\\r\\n    public showErrorValidation? = true;\\r\\n    public showInfoIcon? = true;\\r\\n    public patternErrorText? = \'patternErrorText\';\\r\\n    public errorStrings? = {};\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-form-base\',\\r\\n    templateUrl: \'./form-base.component.html\',\\r\\n    styleUrls: [\'./form-base.component.scss\'],\\r\\n})\\r\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\r\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\r\\n\\r\\n    @Output() public formStatusChange = new EventEmitter<any>();\\r\\n    @Output() public formClosed = new EventEmitter<any>();\\r\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\r\\n\\r\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\r\\n        this._editMode = value;\\r\\n        if (this._editMode === true) {\\r\\n            this.enableAllInputs();\\r\\n        } else {\\r\\n            this.disableAllInputs();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public get editMode(): boolean {\\r\\n        return this._editMode;\\r\\n    }\\r\\n\\r\\n    public form: FormGroup;\\r\\n    public payload: any = {};\\r\\n\\r\\n    public modeChanged = false;\\r\\n    public formControls: { [name: string]: {value: any; validators: Validators; config?: UiFormControlConfigObsolete} };\\r\\n\\r\\n    public showSuccessValidation = false;\\r\\n    public showErrorValidation = true;\\r\\n    public showHelpText = true;\\r\\n    public showInfoIcon = true;\\r\\n\\r\\n    public Validators = Validators;\\r\\n\\r\\n    protected _ngUnsubscribe = new Subject();\\r\\n\\r\\n    private _initialValues;\\r\\n    private _editMode = false;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void {  }\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._ngUnsubscribe.next(null);\\r\\n        this._ngUnsubscribe.complete();\\r\\n    }\\r\\n\\r\\n    public createForm(formControls: { [name: string]: {value: any; validators: any; config?: UiFormControlConfigObsolete} }) {\\r\\n        this.form = new FormGroup({});\\r\\n        for (const [key, value] of Object.entries(formControls)) {\\r\\n            const newControl = new FormControl(value.value, {validators: value.validators});\\r\\n            this.form.setControl(key, newControl);\\r\\n        }\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public setValues(FormValues: any){\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.form.controls[key].setValue(FormValues[key]);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public viewForm() {\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public editForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.editMode = true;\\r\\n    }\\r\\n\\r\\n    public clearForm() {\\r\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\r\\n        this.form.reset();\\r\\n        this.payload = {};\\r\\n    }\\r\\n\\r\\n    public cancelForm() {\\r\\n        this.form.reset(this._initialValues);\\r\\n        this.payload = {};\\r\\n        this.editMode = false;\\r\\n    }\\r\\n\\r\\n    public closeForm() {\\r\\n        this.editMode = false;\\r\\n        this.formClosed.emit();\\r\\n    }\\r\\n\\r\\n    public submitForm(): FormData {\\r\\n        Object.keys(this.form.controls).forEach((key) => {\\r\\n            this.payload[key] = this.form.controls[key].value;\\r\\n        });\\r\\n        this.editMode = false;\\r\\n\\r\\n        this.formSubmitted.emit(this.form.value);\\r\\n\\r\\n        return this.form.value;\\r\\n    }\\r\\n\\r\\n    public onClearBtnClick() {\\r\\n        this.clearForm();\\r\\n    }\\r\\n\\r\\n    public onEditBtnClick() {\\r\\n        this.editForm();\\r\\n    }\\r\\n\\r\\n    public onCancelBtnClick() {\\r\\n        this.cancelForm();\\r\\n    }\\r\\n\\r\\n    public onCloseBtnClick() {\\r\\n        this.closeForm();\\r\\n    }\\r\\n\\r\\n    public onSaveBtnClick() {\\r\\n        this.submitForm();\\r\\n    }\\r\\n\\r\\n    public onFormOptionsChanged(e: {showInfoIcon: boolean; showHelpText: boolean}){\\r\\n        this.showInfoIcon = e.showInfoIcon;\\r\\n        this.showHelpText = e.showHelpText;\\r\\n    }\\r\\n\\r\\n    private disableAllInputs() {\\r\\n\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n                    this.form.controls[control].disable();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private enableAllInputs() {\\r\\n        if (this.form !== undefined) {\\r\\n            for (const control in this.form.controls) {\\r\\n                if (this.form.controls.hasOwnProperty(control)) {\\r\\n\\r\\n                    // Enable only the form controls that don\'t have forceDisabled\\r\\n                    if(this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined){\\r\\n\\r\\n                        if(this.formControls[control].config.forceDisabled === false){\\r\\n                            this.form.controls[control].enable();\\r\\n                            this.form.controls[control].markAsUntouched();\\r\\n                        }\\r\\n                    }\\r\\n                    else{\\r\\n                        this.form.controls[control].enable();\\r\\n                        this.form.controls[control].markAsUntouched();\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":70},"implements":["OnInit","OnDestroy"],"accessors":{"editMode":{"name":"editMode","setSignature":{"name":"editMode","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":41,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"editMode","type":"boolean","returnType":"boolean","line":50}}},"isDuplicate":true,"duplicateId":1,"duplicateName":"UiFormBaseComponent-1","templateData":"<p>Implement your form template in your extended component.</p>\\r\\n"},{"name":"UiFormControlBaseComponent","id":"component-UiFormControlBaseComponent-daf20c2cf79c34b2efa1e185a5088a4fb8c3257220b4301c7fe3cae43d138f478cac75669583dec662e7515cc5281c69f09b382a9469fbd9018301ba925eda75","file":"libs/ui/src/lib/modules/form/form-control-base/form-control-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-control-base","styleUrls":["./form-control-base.component.scss"],"styles":[],"templateUrl":["./form-control-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[]},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[]},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[]},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>"}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121]},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121]},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123]}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Optional, Output, Self } from \'@angular/core\';\\r\\nimport { ControlValueAccessor, NgControl, Validators } from \'@angular/forms\';\\r\\nimport { Subscription } from \'rxjs\';\\r\\nimport { UiFormBaseComponent } from \'../form-base/form-base.component\';\\r\\n@Component({\\r\\n    selector: \'ui-form-control-base\',\\r\\n    templateUrl: \'./form-control-base.component.html\',\\r\\n    styleUrls: [\'./form-control-base.component.scss\'],\\r\\n})\\r\\nexport class UiFormControlBaseComponent implements OnInit, OnDestroy, ControlValueAccessor {\\r\\n    @Input(\'formControlName\') public formControlName;\\r\\n    @Input() public id: string;\\r\\n    @Input() public disabled: boolean;\\r\\n    @Input() public forceDisabled = false;\\r\\n    @Input() public label = \'\';\\r\\n    @Input() public placeholder = \'\';\\r\\n    @Input() public type: string;\\r\\n    @Input() public form: any;\\r\\n    @Input() public formComponent: UiFormBaseComponent;\\r\\n    @Input() public prefixIcon = \'\';\\r\\n    @Input() public suffixIcon = \'\';\\r\\n    @Input() public prefixText = \'\';\\r\\n    @Input() public suffixText = \'\';\\r\\n    @Input() public helpText = \'\';\\r\\n    @Input() public showHelpText = true;\\r\\n    @Input() public showSuccessValidation = false;\\r\\n    @Input() public showErrorValidation = true;\\r\\n    @Input() public showInfoIcon = true;\\r\\n    @Input() public infoText = \'\';\\r\\n    @Input() public patternErrorText = \'\';\\r\\n    @Input() public errorStrings = {};\\r\\n    @Input() public content;\\r\\n    @Input() public tag;\\r\\n    @Input() public setValueOnChange = true;\\r\\n\\r\\n    @Input() public set config(config) {\\r\\n        this._config = config;\\r\\n\\r\\n        // This fill this component properties with config values.\\r\\n        if (config !== undefined) {\\r\\n            for (const [key, value] of Object.entries(this._config)) {\\r\\n                if (value !== null && value !== \'\') {\\r\\n                    this[key] = value;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public get config() {\\r\\n        return this._config;\\r\\n    }\\r\\n\\r\\n    @Output() public valueChange: EventEmitter<any> = new EventEmitter<any>();\\r\\n\\r\\n    public value: any = \'\';\\r\\n    public defaultErrorStrings = {};\\r\\n    public Validators = Validators;\\r\\n\\r\\n    private _config: any;\\r\\n    private _subscription: Subscription;\\r\\n\\r\\n    constructor(\\r\\n        // Retrieve the dependency only from the local injector,\\r\\n        // not from parent or ancestors.\\r\\n        @Self()\\r\\n        // We want to be able to use the component without a form,\\r\\n        // so we mark the dependency as optional.\\r\\n        @Optional()\\r\\n        private ngControl: NgControl\\r\\n    ) {\\r\\n        if (this.ngControl) {\\r\\n            this.ngControl.valueAccessor = this;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        if (this.formComponent !== undefined && this.formComponent.formControls[this.formControlName].config !== undefined) {\\r\\n            this.config = this.formComponent.formControls[this.formControlName].config;\\r\\n        }\\r\\n\\r\\n        if (this.form !== undefined) {\\r\\n            this._subscription = this.form.controls[this.formControlName].valueChanges.subscribe((e: any) => {\\r\\n                if (this.setValueOnChange) {\\r\\n                    this.form.controls[this.formControlName].setValue(e, { emitEvent: false });\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n\\r\\n        this.defaultErrorStrings = {\\r\\n            minlength: {\\r\\n                stringCode: \'COMMON.MIN_LENGTH_OF\',\\r\\n            },\\r\\n            maxlength: {\\r\\n                stringCode: \'COMMON.MAX_LENGTH_OF\',\\r\\n            },\\r\\n            min: {\\r\\n                stringCode: \'COMMON.MIN_VALUE_OF\',\\r\\n            },\\r\\n            max: {\\r\\n                stringCode: \'COMMON.MAX_VALUE_OF\',\\r\\n            },\\r\\n            required: {\\r\\n                stringCode: \'COMMON.FIELD_IS_REQUIRED\',\\r\\n            },\\r\\n            email: {\\r\\n                stringCode: \'COMMON.ENTER_VALID_EMAIL\',\\r\\n            },\\r\\n            pattern: {\\r\\n                stringCode: this.patternErrorText,\\r\\n            },\\r\\n        };\\r\\n\\r\\n        this.setErrorString();\\r\\n    }\\r\\n\\r\\n    public setErrorString() {\\r\\n        this.errorStrings = { ...this.defaultErrorStrings, ...this.errorStrings };\\r\\n        if (this.form !== undefined && this.form.controls[this.formControlName].errors !== null) {\\r\\n            // If component have config with errorStrings from parent.\\r\\n            if (this.config !== undefined && this.config.errorStrings !== undefined) {\\r\\n                // Merge defaultErrorStrings with provided errorStrings\\r\\n                this.errorStrings = { ...this.errorStrings, ...this.config.errorStrings };\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        this._subscription?.unsubscribe();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Write form value to the DOM element (model => view)\\r\\n     */\\r\\n    public writeValue(value: any): void {\\r\\n        this.value = value;\\r\\n        this.setErrorString();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Write form disabled state to the DOM element (model => view)\\r\\n     */\\r\\n    public setDisabledState(isDisabled: boolean): void {\\r\\n        this.disabled = isDisabled;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Update form when DOM element value changes (view => model)\\r\\n     */\\r\\n    public registerOnChange(fn: any): void {\\r\\n        // Store the provided function as an internal method.\\r\\n        this.onChange = fn;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Update form when DOM element is blurred (view => model)\\r\\n     */\\r\\n    public registerOnTouched(fn: any): void {\\r\\n        // Store the provided function as an internal method.\\r\\n        this.onTouched = fn;\\r\\n    }\\r\\n\\r\\n    public onChange(e: any) {}\\r\\n    public onTouched() {}\\r\\n\\r\\n    public concatErrors(arr1: object, arr2: object) {\\r\\n        if (!arr1) {\\r\\n            return arr2;\\r\\n        }\\r\\n        if (!arr2) {\\r\\n            return arr1;\\r\\n        }\\r\\n        return { ...arr1, ...arr2 };\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-control-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""}],"line":60,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","ControlValueAccessor"],"accessors":{"config":{"name":"config","setSignature":{"name":"config","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"config","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":36,"jsdoctags":[{"name":"config","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"config","type":"","returnType":"","line":49}}},"templateData":"<div *ngIf=\\"form !== undefined\\">\\r\\n\\r\\n    \x3c!-- Label --\x3e\\r\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\r\\n        {{label}}\\r\\n        \x3c!-- Required Asterix --\x3e\\r\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\r\\n    </label>\\r\\n\\r\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\r\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\r\\n\\r\\n    <div class=\\"input-group\\">\\r\\n\\r\\n        \x3c!-- Prefix Icon --\x3e\\r\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Prefix Text --\x3e\\r\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{prefixText}}\\r\\n        </span>\\r\\n\\r\\n        <div #contentWrapper class=\\"w-100\\">\\r\\n            <ng-content></ng-content>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Suffix Icon --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Suffix Text --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{suffixText}}\\r\\n        </span>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"feedback\\">\\r\\n\\r\\n        \x3c!-- Success Feedback Text --\x3e\\r\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\r\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Error Feedback Text --\x3e\\r\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\r\\n            <div *ngFor=\\"let item of form.controls[formControlName].errors | keyvalue\\">\\r\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined\\">\\r\\n                    {{errorStrings[item.key].stringCode | translate: concatErrors(errorStrings[item.key].stringParams, form.controls[formControlName].errors[item.key]) }} \\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Help Text --\x3e\\r\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\r\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\r\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>"},{"name":"UiFormControlBaseComponent","id":"component-UiFormControlBaseComponent-5ce0149b25420ce62a118c1dd6391dbc38dcf82beb9cbb1664748074c3347c6aad715d779cd638b2c5030171057745ceb67e26f76a06054b5951dd06ff3cf8cb-1","file":"libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-control-base","styleUrls":["./form-control-base.component.scss"],"styles":[],"templateUrl":["./form-control-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[]},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>"}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121]},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121]},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Optional, Output, Self } from \'@angular/core\';\\r\\nimport { ControlValueAccessor, NgControl, Validators } from \'@angular/forms\';\\r\\nimport { Subscription } from \'rxjs\';\\r\\nimport { UiFormBaseComponent } from \'../form-base/form-base.component\';\\r\\n@Component({\\r\\n    selector: \'ui-form-control-base\',\\r\\n    templateUrl: \'./form-control-base.component.html\',\\r\\n    styleUrls: [\'./form-control-base.component.scss\'],\\r\\n})\\r\\nexport class UiFormControlBaseComponent implements OnInit, OnDestroy, ControlValueAccessor {\\r\\n    @Input(\'formControlName\') public formControlName;\\r\\n    @Input() public id: string;\\r\\n    @Input() public disabled: boolean;\\r\\n    @Input() public forceDisabled = false;\\r\\n    @Input() public label = \'\';\\r\\n    @Input() public placeholder = \'\';\\r\\n    @Input() public type: string;\\r\\n    @Input() public form: any;\\r\\n    @Input() public formComponent: UiFormBaseComponent;\\r\\n    @Input() public prefixIcon = \'\';\\r\\n    @Input() public suffixIcon = \'\';\\r\\n    @Input() public prefixText = \'\';\\r\\n    @Input() public suffixText = \'\';\\r\\n    @Input() public helpText = \'\';\\r\\n    @Input() public showHelpText = true;\\r\\n    @Input() public showSuccessValidation = false;\\r\\n    @Input() public showErrorValidation = true;\\r\\n    @Input() public showInfoIcon = true;\\r\\n    @Input() public infoText = \'\';\\r\\n    @Input() public patternErrorText = \'\';\\r\\n    @Input() public errorStrings = {};\\r\\n\\r\\n    @Input() public set config(config) {\\r\\n        this._config = config;\\r\\n\\r\\n        // This fill this component properties with config values.\\r\\n        if (config !== undefined) {\\r\\n            for (const [key, value] of Object.entries(this._config)) {\\r\\n                if (value !== null && value !== \'\') {\\r\\n                    this[key] = value;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public get config() {\\r\\n        return this._config;\\r\\n    }\\r\\n\\r\\n    @Output() public valueChange: EventEmitter<any> = new EventEmitter<any>();\\r\\n\\r\\n    public value: any = \'\';\\r\\n    public defaultErrorStrings = {};\\r\\n    public Validators = Validators;\\r\\n\\r\\n    private _config: any;\\r\\n    private _subscription: Subscription;\\r\\n\\r\\n    constructor(\\r\\n        // Retrieve the dependency only from the local injector,\\r\\n        // not from parent or ancestors.\\r\\n        @Self()\\r\\n        // We want to be able to use the component without a form,\\r\\n        // so we mark the dependency as optional.\\r\\n        @Optional()\\r\\n        private ngControl: NgControl\\r\\n    ) {\\r\\n        if (this.ngControl) {\\r\\n            this.ngControl.valueAccessor = this;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        if (this.formComponent !== undefined && this.formComponent.formControls[this.formControlName].config !== undefined) {\\r\\n            this.config = this.formComponent.formControls[this.formControlName].config;\\r\\n        }\\r\\n\\r\\n        if (this.form !== undefined) {\\r\\n            this._subscription = this.form.controls[this.formControlName].valueChanges.subscribe((e: any) => {\\r\\n                this.form.controls[this.formControlName].setValue(e, { emitEvent: false });\\r\\n            });\\r\\n        }\\r\\n\\r\\n        this.defaultErrorStrings = {\\r\\n            minlength: {\\r\\n                stringCode: \'COMMON.MIN_LENGTH_OF\',\\r\\n            },\\r\\n            maxlength: {\\r\\n                stringCode: \'COMMON.MAX_LENGTH_OF\',\\r\\n            },\\r\\n            required: {\\r\\n                stringCode: \'COMMON.FIELD_IS_REQUIRED\',\\r\\n            },\\r\\n            email: {\\r\\n                stringCode: \'COMMON.ENTER_VALID_EMAIL\',\\r\\n            },\\r\\n            pattern: {\\r\\n                stringCode: this.patternErrorText,\\r\\n            },\\r\\n        };\\r\\n\\r\\n        this.setErrorString();\\r\\n    }\\r\\n\\r\\n    public setErrorString() {\\r\\n        if (this.form !== undefined && this.form.controls[this.formControlName].errors !== null) {\\r\\n            this.errorStrings = this.defaultErrorStrings;\\r\\n\\r\\n            // If component have config with errorStrings from parent.\\r\\n            if (this.config !== undefined && this.config.errorStrings !== undefined) {\\r\\n                // Merge defaultErrorStrings with provided errorStrings\\r\\n                this.errorStrings = { ...this.defaultErrorStrings, ...this.config.errorStrings };\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        this._subscription?.unsubscribe();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Write form value to the DOM element (model => view)\\r\\n     */\\r\\n    public writeValue(value: any): void {\\r\\n        this.value = value;\\r\\n        this.setErrorString();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Write form disabled state to the DOM element (model => view)\\r\\n     */\\r\\n    public setDisabledState(isDisabled: boolean): void {\\r\\n        this.disabled = isDisabled;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Update form when DOM element value changes (view => model)\\r\\n     */\\r\\n    public registerOnChange(fn: any): void {\\r\\n        // Store the provided function as an internal method.\\r\\n\\r\\n        this.onChange = fn;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Update form when DOM element is blurred (view => model)\\r\\n     */\\r\\n    public registerOnTouched(fn: any): void {\\r\\n        // Store the provided function as an internal method.\\r\\n        this.onTouched = fn;\\r\\n    }\\r\\n\\r\\n    public onChange(e: any) {}\\r\\n    public onTouched() {}\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-control-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""}],"line":57,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","ControlValueAccessor"],"accessors":{"config":{"name":"config","setSignature":{"name":"config","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"config","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":33,"jsdoctags":[{"name":"config","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"config","type":"","returnType":"","line":46}}},"isDuplicate":true,"duplicateId":1,"duplicateName":"UiFormControlBaseComponent-1","templateData":"<div *ngIf=\\"form !== undefined\\">\\r\\n\\r\\n    \x3c!-- Label --\x3e\\r\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\r\\n        {{label}}\\r\\n        \x3c!-- Required Asterix --\x3e\\r\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\r\\n    </label>\\r\\n\\r\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\r\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\r\\n\\r\\n    <div class=\\"input-group\\">\\r\\n\\r\\n        \x3c!-- Prefix Icon --\x3e\\r\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Prefix Text --\x3e\\r\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{prefixText}}\\r\\n        </span>\\r\\n\\r\\n        <div #contentWrapper class=\\"w-100\\">\\r\\n            <ng-content></ng-content>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Suffix Icon --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Suffix Text --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{suffixText}}\\r\\n        </span>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"feedback\\">\\r\\n\\r\\n        \x3c!-- Success Feedback Text --\x3e\\r\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\r\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Error Feedback Text --\x3e\\r\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\r\\n            <div *ngFor=\\"let item of form.controls[formControlName].errors | keyvalue\\">\\r\\n                \x3c!-- If errorString have NO parameters --\x3e\\r\\n                <ng-container *ngIf=\\"defaultErrorStrings[item.key] !== undefined && defaultErrorStrings[item.key].stringParams === undefined\\">\\r\\n                    {{errorStrings[item.key].stringCode | translate: form.controls[formControlName].errors[item.key] }}\\r\\n                </ng-container>\\r\\n                \x3c!-- If errorString HAVE parameters --\x3e\\r\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams !== undefined\\">\\r\\n                 {{errorStrings[item.key].stringCode | translate: concatErrors(form.controls[formControlName].errors[item.key], errorStrings[item.key].stringParams) }}\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Help Text --\x3e\\r\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\r\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\r\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiGlobalSearchComponent","id":"component-UiGlobalSearchComponent-03f22cb84260142117e31639ff3ee8d53ca12529a57c9e57fc71db5147f9af1c0c1a34f6f234709787ae18eb68ddc9d63750ad5a82c03d1870a2c875aa943aeb","file":"libs/ui/src/lib/modules/global-search/global-search.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-global-search","styleUrls":["./global-search.component.scss"],"styles":[],"templateUrl":["./global-search.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_debounceTime","defaultValue":"300","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30,"modifierKind":[121,144]},{"name":"_globalSearchInput","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'globalSearchInput\', {static: true}"}],"modifierKind":[121]},{"name":"_minSearchSymbols","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32,"modifierKind":[121,144]},{"name":"_ngUnsubscribe$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":33,"modifierKind":[121,144]},{"name":"_resultsUrl","defaultValue":"\'acp/company-search/results\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31,"modifierKind":[121,144]},{"name":"focus$","defaultValue":"new Subject<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"inputFormatterFn","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72,"modifierKind":[123]},{"name":"isSearchFocused","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"noResultSearch","defaultValue":"{\\r\\n        noResultsFound: this._translateService.instant(\'GLOBAL_SEARCH.NO_RESULTS_FOUND\'),\\r\\n        tryDifferentKeyword: this._translateService.instant(\'GLOBAL_SEARCH.TRY_DIFFERENT_KEYWORD\'),\\r\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiNoResultSearch","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"searchFn","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"searchPlaceholder","defaultValue":"this._translateService.instant(\'COMMON.SEARCH_FOR_A_COMPANY\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"searchTerm","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21,"modifierKind":[123]}],"methodsClass":[{"name":"clearSearchTerm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"hideSearchFocus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEnterPress","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelect","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openCompanyTab","args":[{"name":"companyId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"companyId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showSearchFocus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\n// Rxjs\\r\\nimport { merge, Observable, of, Subject } from \'rxjs\';\\r\\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, skip, switchMap, takeUntil } from \'rxjs/operators\';\\r\\n// Ngx Translate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Interfaces\\r\\nimport { IUiCompanySearchResponse, IUiNoResultSearch } from \'@lib/modules/global-search/interfaces\';\\r\\n// Services\\r\\nimport { UiSearchService } from \'@lib/modules/global-search/services\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-global-search\',\\r\\n    templateUrl: \'./global-search.component.html\',\\r\\n    styleUrls: [\'./global-search.component.scss\'],\\r\\n})\\r\\nexport class UiGlobalSearchComponent implements OnInit, OnDestroy {\\r\\n    public isSearchFocused = false;\\r\\n    public searchTerm = \'\';\\r\\n    public noResultSearch: IUiNoResultSearch = {\\r\\n        noResultsFound: this._translateService.instant(\'GLOBAL_SEARCH.NO_RESULTS_FOUND\'),\\r\\n        tryDifferentKeyword: this._translateService.instant(\'GLOBAL_SEARCH.TRY_DIFFERENT_KEYWORD\'),\\r\\n    };\\r\\n    public searchPlaceholder = this._translateService.instant(\'COMMON.SEARCH_FOR_A_COMPANY\');\\r\\n    public focus$ = new Subject<string>();\\r\\n\\r\\n    @ViewChild(\'globalSearchInput\', { static: true }) private _globalSearchInput: ElementRef;\\r\\n    private readonly _debounceTime: number = 300;\\r\\n    private readonly _resultsUrl = \'acp/company-search/results\';\\r\\n    private readonly _minSearchSymbols = 2;\\r\\n    private readonly _ngUnsubscribe$: Subject<void> = new Subject<void>();\\r\\n\\r\\n    constructor(private _searchService: UiSearchService, private _translateService: TranslateService, private _router: Router) {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this._searchService.focusGlobalSearch$\\r\\n            .pipe(debounceTime(this._debounceTime), skip(1), takeUntil(this._ngUnsubscribe$))\\r\\n            .subscribe(() => {\\r\\n                this._globalSearchInput.nativeElement.focus();\\r\\n            });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        this._ngUnsubscribe$.next(null);\\r\\n        this._ngUnsubscribe$.complete();\\r\\n    }\\r\\n\\r\\n    public searchFn = (input$: Observable<string>) => {\\r\\n        const debouncedText$ = input$.pipe(debounceTime(this._debounceTime), distinctUntilChanged());\\r\\n        const inputFocus$ = this.focus$;\\r\\n\\r\\n        return merge(debouncedText$, inputFocus$).pipe(\\r\\n            filter((searchStr: string) => {\\r\\n                return searchStr.length >= this._minSearchSymbols;\\r\\n            }),\\r\\n            switchMap((searchStr: string) =>\\r\\n                this._searchService.getCompaniesBySearchTerm(searchStr).pipe(\\r\\n                    map((res: IUiCompanySearchResponse) => {\\r\\n                        const searchResult = res.companySearchResult;\\r\\n                        return searchResult.length ? searchResult : [this.noResultSearch];\\r\\n                    }),\\r\\n                    catchError(() => {\\r\\n                        return of([this.noResultSearch]);\\r\\n                    })\\r\\n                )\\r\\n            )\\r\\n        );\\r\\n    };\\r\\n\\r\\n    public inputFormatterFn = () => {\\r\\n        return this.searchTerm;\\r\\n    };\\r\\n\\r\\n    public clearSearchTerm() {\\r\\n        this.searchTerm = \'\';\\r\\n    }\\r\\n\\r\\n    public showSearchFocus() {\\r\\n        this.isSearchFocused = true;\\r\\n    }\\r\\n\\r\\n    public hideSearchFocus() {\\r\\n        this.isSearchFocused = false;\\r\\n    }\\r\\n\\r\\n    public openCompanyTab(companyId: number) {\\r\\n        this._router.navigateByUrl(`/acp/company-profile/company/${companyId}`);\\r\\n    }\\r\\n\\r\\n    public onEnterPress() {\\r\\n        if (this.searchTerm.length < this._minSearchSymbols) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        this._router.navigate([this._resultsUrl]);\\r\\n        this._searchService.setSearchTerm(this.searchTerm);\\r\\n    }\\r\\n\\r\\n    public onSelect(event: Event) {\\r\\n        // We don\'t want to change the input value with selected item\\r\\n        // Prevents searchTerm value to be converted from string to IUiCompanySearchItem or IUiNoResultSearch\\r\\n        event.preventDefault();\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.search-input-icon {\\r\\n    background-color: $white;\\r\\n    border-style: none;\\r\\n    color: $gray-600;\\r\\n    z-index: 1001;\\r\\n}\\r\\n\\r\\n.domain-result {\\r\\n    color: $gray-700;\\r\\n}\\r\\n\\r\\n.company-icon {\\r\\n    color: $gray-600;\\r\\n    width: 16px;\\r\\n    height: 16px;\\r\\n}\\r\\n\\r\\n#globalSearch-input {\\r\\n    border-style: none;\\r\\n    height: 40px;\\r\\n    z-index: 1001;\\r\\n}\\r\\n\\r\\n.search-field {\\r\\n    transition: width 300ms;\\r\\n}\\r\\n\\r\\n.search-field-focused {\\r\\n    border: 1px $primary !important;\\r\\n    box-shadow: 0px 0px 0px 2px $primary-200;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 449px) {\\r\\n    #globalSearch-input {\\r\\n        margin-left: 5px;\\r\\n    }\\r\\n\\r\\n    .search-field {\\r\\n        width: 235px;\\r\\n    }\\r\\n\\r\\n    .search-field-wider {\\r\\n        width: 235px;\\r\\n    }\\r\\n\\r\\n    .search-icon {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 450px) {\\r\\n    .search-field {\\r\\n        width: 384px;\\r\\n    }\\r\\n\\r\\n    .search-field-wider {\\r\\n        width: 384px;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 600px) {\\r\\n    .search-field {\\r\\n        width: 384px;\\r\\n    }\\r\\n\\r\\n    .search-field-wider {\\r\\n        width: 512px;\\r\\n    }\\r\\n}","styleUrl":"./global-search.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div\\r\\n    class=\\"input-group search-field ms-1 border rounded justify-content-between\\"\\r\\n    [ngClass]=\\"{\\r\\n        \'search-field-focused\': isSearchFocused,\\r\\n        \'search-field-opened-results\': isSearchFocused && instance.isPopupOpen(),\\r\\n        \'search-field-wider\': isSearchFocused || searchTerm\\r\\n    }\\"\\r\\n>\\r\\n    <span class=\\"input-group-text search-input-icon\\">\\r\\n        <i class=\\"bi bi-search bi-md\\" aria-hidden=\\"true\\"></i>\\r\\n    </span>\\r\\n\\r\\n    <input\\r\\n        autocomplete=\\"off\\"\\r\\n        class=\\"flex-grow-1\\"\\r\\n        id=\\"globalSearch-input\\"\\r\\n        [placeholder]=\\"searchPlaceholder\\"\\r\\n        type=\\"text\\"\\r\\n        [(ngModel)]=\\"searchTerm\\"\\r\\n        (focus)=\\"focus$.next($any($event).target.value); showSearchFocus()\\"\\r\\n        (focusout)=\\"hideSearchFocus()\\"\\r\\n        [ngbTypeahead]=\\"searchFn\\"\\r\\n        [resultTemplate]=\\"rt\\"\\r\\n        [inputFormatter]=\\"inputFormatterFn\\"\\r\\n        placement=\\"bottom-left\\"\\r\\n        #instance=\\"ngbTypeahead\\"\\r\\n        #globalSearchInput\\r\\n        (keydown.enter)=\\"onEnterPress()\\"\\r\\n        (selectItem)=\\"onSelect($event)\\"\\r\\n    />\\r\\n    <span class=\\"input-group-text search-input-icon\\" [style.visibility]=\\"searchTerm ? \'visible\' : \'hidden\'\\" (click)=\\"clearSearchTerm()\\">\\r\\n        <i class=\\"bi bi-x bi-lg\\" aria-hidden=\\"true\\"></i>\\r\\n    </span>\\r\\n</div>\\r\\n<ng-template #rt let-r=\\"result\\" let-t=\\"term\\">\\r\\n    <div *ngIf=\\"r.companyId\\" class=\\"d-flex align-items-center\\" (click)=\\"openCompanyTab(r.companyId)\\">\\r\\n        <i class=\\"bi bi-briefcase-fill bi-md me-2 company-icon\\" aria-hidden=\\"true\\"></i>\\r\\n        <div class=\\"d-inline-block\\">\\r\\n            <ngb-highlight class=\\"d-block\\" [result]=\\"r.companyName\\" [term]=\\"t\\"></ngb-highlight>\\r\\n            <small class=\\"d-block domain-result\\">\\r\\n                \x3c!-- ToDo should use Pipe --\x3e\\r\\n                <ngb-highlight [result]=\\"r.domainNames.join(\', \')\\" [term]=\\"t\\"></ngb-highlight>\\r\\n            </small>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\"!r.companyId\\">\\r\\n        <b><ngb-highlight [result]=\\"r.noResultsFound\\"></ngb-highlight></b>\\r\\n        <ngb-highlight [result]=\\"r.tryDifferentKeyword\\"></ngb-highlight>\\r\\n    </div>\\r\\n</ng-template>\\r\\n"},{"name":"UiGlobalSearchResultsItemComponent","id":"component-UiGlobalSearchResultsItemComponent-1de01ccd5a30e6a335f59c3605344539d7fe515c6807e7bc0bfb8e42b5c7dedd5700eae5c67f122d10587176ae0c09c81fbf441e49532d04572d1cad53e1acca","file":"libs/ui/src/lib/modules/global-search/components/global-search-results-item/global-search-results-item.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-global-search-results-item","styleUrls":["./global-search-results-item.component.scss"],"styles":[],"templateUrl":["global-search-results-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"item","deprecated":false,"deprecationMessage":"","line":13,"type":"IUiCompanySearchItem","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onItemClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\nimport { Router } from \'@angular/router\';\\r\\n// Interfaces\\r\\nimport { IUiCompanySearchItem } from \'@lib/modules/global-search/interfaces\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-global-search-results-item\',\\r\\n    templateUrl: \'global-search-results-item.component.html\',\\r\\n    styleUrls: [\'./global-search-results-item.component.scss\'],\\r\\n})\\r\\nexport class UiGlobalSearchResultsItemComponent {\\r\\n    @Input() public item: IUiCompanySearchItem;\\r\\n\\r\\n    constructor(private _router: Router) {}\\r\\n\\r\\n    public onItemClick() {\\r\\n        this._router.navigate([`acp/company-profile/company/${this.item.companyId}`]);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.item-container {\\r\\n    background: $white;\\r\\n    border-bottom: 1px solid $gray-300;\\r\\n    // Virtual scroll requires item height in pixels\\r\\n    padding-bottom: 32px;\\r\\n    padding-top: 32px;\\r\\n\\r\\n    &:hover {\\r\\n        background: $blue-200;\\r\\n        color: $gray-900;\\r\\n        cursor: pointer;\\r\\n    }\\r\\n}\\r\\n\\r\\n.company-info {\\r\\n    flex: 1;\\r\\n    width: 1rem;\\r\\n}\\r\\n\\r\\n.logo-container {\\r\\n    background: $blue-300;\\r\\n    border-radius: 4px;\\r\\n    height: 96px;\\r\\n    width: 173px;\\r\\n}\\r\\n\\r\\n.base-info {\\r\\n    margin: 0;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n.subsidiary {\\r\\n    @extend .base-info;\\r\\n    color: $gray-900;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.additional-info {\\r\\n    @extend .base-info;\\r\\n    color: $gray-800;\\r\\n}\\r\\n","styleUrl":"./global-search-results-item.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div  class=\\"row justify-content-start px-5 item-container\\" (click)=\\"onItemClick()\\">\\r\\n    <div class=\\"col-12\\">\\r\\n        <div class=\\"row\\">\\r\\n            <div class=\\"logo-container\\">\\r\\n                <img src=\\"assets/images/search-result-placeholder.svg\\" alt=\\"Company Logo\\" class=\\"h-100 w-100\\">\\r\\n            </div>\\r\\n            <div class=\\"ps-3 company-info\\" *ngIf=\\"item\\">\\r\\n                <h6 class=\\"fw-bold\\">{{ item.companyName }}</h6>\\r\\n                <p class=\\"subsidiary\\">\\r\\n                    <span *ngIf=\\"item.rootCompanyName; then subsidiary else emptySubsidiary\\"></span>\\r\\n                    <ng-template #subsidiary>{{ \'COMMON.SUBSIDIARY_TO\' | translate }} {{ item.rootCompanyName }}</ng-template>\\r\\n                    <ng-template #emptySubsidiary>&nbsp;</ng-template>\\r\\n                </p>\\r\\n                <p class=\\"additional-info\\">\\r\\n                    <span *ngIf=\\"item.domainNames.length; then domains else emptyDomains\\"></span>\\r\\n                    <ng-template #domains>{{ item.domainNames | uiJoin}}</ng-template>\\r\\n                    <ng-template #emptyDomains>{{ \'GLOBAL_SEARCH.NO_DOMAINS_FOUND\' | translate }}</ng-template>\\r\\n                </p>\\r\\n                <p class=\\"additional-info\\">\\r\\n                    <span *ngIf=\\"item.companyTradeNames.length; then tradeNames else emptyTradeNames\\"></span>\\r\\n                    <ng-template #tradeNames>{{ item.companyTradeNames | uiJoin}}</ng-template>\\r\\n                    <ng-template #emptyTradeNames>{{ \'GLOBAL_SEARCH.NO_TRADENAMES_FOUND\' | translate }}</ng-template>\\r\\n                </p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiGlobalSearchResultsPageComponent","id":"component-UiGlobalSearchResultsPageComponent-2dfd76387155d168b1d17cc9e7e6980121dc05276b79f9d56fb7528887010d5335c991fb4ec6ca3e28220125a07f737d77fceacc4c969f7d7fe7ee11d153df23","file":"libs/ui/src/lib/modules/global-search/components/global-search-results-page/global-search-results-page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-global-search-results-page","styleUrls":["./global-search-results-page.component.scss"],"styles":[],"templateUrl":["global-search-results-page.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_debounceTime","defaultValue":"300","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38,"modifierKind":[121,144]},{"name":"_ngUnsubscribe","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":39,"modifierKind":[121,144]},{"name":"_pageNumber","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36,"modifierKind":[121]},{"name":"_pageSize","defaultValue":"10","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":37,"modifierKind":[121,144]},{"name":"_successfulSearchTerm","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35,"modifierKind":[121]},{"name":"_virtualScroll","deprecated":false,"deprecationMessage":"","type":"CdkVirtualScrollViewport","optional":false,"description":"","line":34,"decorators":[{"name":"ViewChild","stringifiedArguments":"CdkVirtualScrollViewport"}],"modifierKind":[121]},{"name":"editSearchLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"editSearchSuggestionLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"loading$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"noResultsLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"resultsCount$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"searchResults","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiCompanySearchItem[]","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"searchResultsLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"searchTerm$","deprecated":false,"deprecationMessage":"","type":"Observable<string>","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"templateName$","deprecated":false,"deprecationMessage":"","type":"Observable<UiTemplateNamesEnum>","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"templateNames","defaultValue":"UiTemplateNamesEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEditSearchClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"setNoResults","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"setResponseResults","args":[{"name":"res","type":"IUiCompanySearchResponse","deprecated":false,"deprecationMessage":""},{"name":"currentSearchTerm","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"res","type":"IUiCompanySearchResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"currentSearchTerm","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setTemplateName","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[121]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\r\\nimport { CdkVirtualScrollViewport, ScrollDispatcher } from \'@angular/cdk/scrolling\';\\r\\n// RxJS\\r\\nimport { BehaviorSubject, combineLatest, Observable, Subject } from \'rxjs\';\\r\\nimport { debounceTime, distinctUntilChanged, filter, finalize, map, switchMap, takeUntil, withLatestFrom } from \'rxjs/operators\';\\r\\n// Services\\r\\nimport { UiSearchService } from \'@lib/modules/global-search/services\';\\r\\n// Enums\\r\\nimport { UiTemplateNamesEnum } from \'@lib/modules/global-search/enums\';\\r\\n// Interfaces\\r\\nimport { IUiCompanySearchResponse, IUiCompanySearchItem } from \'@lib/modules/global-search/interfaces\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-global-search-results-page\',\\r\\n    templateUrl: \'global-search-results-page.component.html\',\\r\\n    styleUrls: [\'./global-search-results-page.component.scss\'],\\r\\n})\\r\\nexport class UiGlobalSearchResultsPageComponent implements OnInit, OnDestroy, AfterViewInit {\\r\\n    // Data\\r\\n    public searchTerm$: Observable<string>;\\r\\n    public searchResults: IUiCompanySearchItem[] = [];\\r\\n    public resultsCount$: BehaviorSubject<number> = new BehaviorSubject(0);\\r\\n    public loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n    // Templates\\r\\n    public templateName$: Observable<UiTemplateNamesEnum>;\\r\\n    public templateNames = UiTemplateNamesEnum;\\r\\n    // Text Labels\\r\\n    public searchResultsLabel = \'\';\\r\\n    public noResultsLabel = \'\';\\r\\n    public editSearchLabel = \'\';\\r\\n    public editSearchSuggestionLabel = \'\';\\r\\n\\r\\n    @ViewChild(CdkVirtualScrollViewport) private _virtualScroll: CdkVirtualScrollViewport;\\r\\n    private _successfulSearchTerm = \'\';\\r\\n    private _pageNumber = 1;\\r\\n    private readonly _pageSize = 10;\\r\\n    private readonly _debounceTime: number = 300;\\r\\n    private readonly _ngUnsubscribe: Subject<void> = new Subject<void>();\\r\\n\\r\\n    constructor(\\r\\n        private _searchService: UiSearchService,\\r\\n        private _scrollDispatcher: ScrollDispatcher,\\r\\n        private _changeDetectorRef: ChangeDetectorRef\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.searchTerm$ = this._searchService.searchTerm$;\\r\\n\\r\\n        this.setData();\\r\\n        this.setTemplateName();\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        this._ngUnsubscribe.next(null);\\r\\n        this._ngUnsubscribe.complete();\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit() {\\r\\n        let loadingNextPage = false;\\r\\n        this._scrollDispatcher\\r\\n            .scrolled()\\r\\n            .pipe(\\r\\n                withLatestFrom(this.resultsCount$),\\r\\n                filter(([event, resultsCount]) => {\\r\\n                    const renderedRangeEnd = this._virtualScroll.getRenderedRange().end;\\r\\n                    return renderedRangeEnd === this._virtualScroll.getDataLength() && renderedRangeEnd < resultsCount && !loadingNextPage;\\r\\n                }),\\r\\n                switchMap(() => {\\r\\n                    this._pageNumber++;\\r\\n                    loadingNextPage = true;\\r\\n                    return this._searchService.getCompaniesBySearchTerm(this._successfulSearchTerm, this._pageSize, this._pageNumber);\\r\\n                }),\\r\\n                finalize(() => {\\r\\n                    this.setNoResults();\\r\\n                }),\\r\\n                takeUntil(this._ngUnsubscribe)\\r\\n            )\\r\\n            .subscribe((data) => {\\r\\n                this.searchResults = [...this.searchResults, ...data.companySearchResult];\\r\\n                loadingNextPage = false;\\r\\n                this._changeDetectorRef.detectChanges();\\r\\n            });\\r\\n    }\\r\\n\\r\\n    public onEditSearchClick() {\\r\\n        this._searchService.focusGlobalSearchInput();\\r\\n    }\\r\\n\\r\\n    private setData() {\\r\\n        let currentSearchTerm: string;\\r\\n        this.searchTerm$\\r\\n            .pipe(\\r\\n                debounceTime(this._debounceTime),\\r\\n                distinctUntilChanged(),\\r\\n                switchMap((term: string) => {\\r\\n                    currentSearchTerm = term;\\r\\n                    this._pageNumber = 1;\\r\\n                    if (this.searchResults.length) {\\r\\n                        this._virtualScroll.scrollToIndex(0);\\r\\n                    }\\r\\n                    this.searchResults = [];\\r\\n                    this.resultsCount$.next(0);\\r\\n                    this.loading$.next(true);\\r\\n                    return this._searchService.getCompaniesBySearchTerm(term, this._pageSize, this._pageNumber);\\r\\n                }),\\r\\n                finalize(() => {\\r\\n                    this.setNoResults();\\r\\n                }),\\r\\n                takeUntil(this._ngUnsubscribe)\\r\\n            )\\r\\n            .subscribe((res: IUiCompanySearchResponse) => {\\r\\n                this.setResponseResults(res, currentSearchTerm);\\r\\n            });\\r\\n    }\\r\\n\\r\\n    private setTemplateName() {\\r\\n        this.templateName$ = combineLatest([this.loading$, this.resultsCount$]).pipe(\\r\\n            map(([loading, count]) => {\\r\\n                let template = UiTemplateNamesEnum.noResults;\\r\\n                if (loading) {\\r\\n                    template = UiTemplateNamesEnum.loading;\\r\\n                } else if (count) {\\r\\n                    template = UiTemplateNamesEnum.results;\\r\\n                }\\r\\n\\r\\n                return template;\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private setResponseResults(res: IUiCompanySearchResponse, currentSearchTerm: string) {\\r\\n        this._successfulSearchTerm = res.totalCount ? currentSearchTerm : this._successfulSearchTerm;\\r\\n        this.searchResults = res.companySearchResult;\\r\\n        this.resultsCount$.next(res.totalCount);\\r\\n        this.loading$.next(false);\\r\\n    }\\r\\n\\r\\n    private setNoResults() {\\r\\n        this.searchResults = [];\\r\\n        this.resultsCount$.next(0);\\r\\n        this.loading$.next(false);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.no-results-icon {\\r\\n    color: $gray-700;\\r\\n    font-size: 64px;\\r\\n    padding-top: 4rem;\\r\\n}\\r\\n\\r\\n.loading-icon {\\r\\n    height: 100px;\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n.loading-icon-container {\\r\\n    padding-top: 6rem;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.virtual-scroll-viewport {\\r\\n    // The the whole view height minus heights of the toolbar and search results label\\r\\n    height: calc(100vh - 3rem - 82px);\\r\\n    width: 100%;\\r\\n}\\r\\n","styleUrl":"./global-search-results-page.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":""},{"name":"_scrollDispatcher","type":"ScrollDispatcher","deprecated":false,"deprecationMessage":""},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":39,"jsdoctags":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_scrollDispatcher","type":"ScrollDispatcher","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","AfterViewInit"],"templateData":"<div [ngSwitch]=\\"templateName$ | async\\" class=\\"row align-items-center justify-content-center\\">\\r\\n    \x3c!-- Loading Template --\x3e\\r\\n    <div *ngSwitchCase=\\"templateNames.loading\\" class=\\"col-12\\">\\r\\n        <div class=\\"spinner-wrapper loading-icon-container\\">\\r\\n            <div class=\\"spinner-border text-primary loading-icon\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \x3c!-- Results Template --\x3e\\r\\n    <div *ngSwitchCase=\\"templateNames.results\\" class=\\"col-12\\">\\r\\n        <h6 class=\\"mb-4\\">\\r\\n            {{ resultsCount$ | async }} {{ \'GLOBAL_SEARCH.SEARCH_RESULTS_FOR\' | translate }} &quot;{{ searchTerm$ | async }}&quot;\\r\\n        </h6>\\r\\n        <cdk-virtual-scroll-viewport itemSize=\\"163\\" class=\\"virtual-scroll-viewport\\">\\r\\n            <div *cdkVirtualFor=\\"let item of searchResults\\">\\r\\n                <ui-global-search-results-item [item]=\\"item\\"></ui-global-search-results-item>\\r\\n            </div>\\r\\n        </cdk-virtual-scroll-viewport>\\r\\n    </div>\\r\\n    \x3c!-- No Results Template --\x3e\\r\\n    <div *ngSwitchCase=\\"templateNames.noResults\\" class=\\"col-12 text-center\\">\\r\\n        <div class=\\"pb-5 no-results-icon\\">\\r\\n            <i class=\\"bi bi-search bi-lg\\" aria-hidden=\\"true\\"></i>\\r\\n        </div>\\r\\n\\r\\n        <h6 class=\\"fw-bold\\">\\r\\n            {{ \'GLOBAL_SEARCH.NO_RESULTS_FOR\' | translate }} &quot;{{ searchTerm$ | async }}&quot;.\\r\\n        </h6>\\r\\n        <h6>\\r\\n            {{ \'GLOBAL_SEARCH.EDIT_SEARCH_SUGGESTION\' | translate }}\\r\\n        </h6>\\r\\n        <button class=\\"btn btn-primary mt-4\\" (click)=\\"onEditSearchClick()\\">\\r\\n            {{ \'GLOBAL_SEARCH.EDIT_SEARCH\' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiGridComponent","id":"component-UiGridComponent-697718bd11c60dead299898cb81f2a093208e37487072e4b682dacbb826575820069603ad4056643a55a91cec9c0b67eba1ac8557d08dbd732fc45cf9188fe9f","file":"libs/ui/src/lib/modules/grid/components/grid/grid.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid","styleUrls":["./grid.component.scss"],"styles":[],"templateUrl":["./grid.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionsColumnVisible","deprecated":false,"deprecationMessage":"","line":74,"type":"boolean","decorators":[]},{"name":"autoSizeColumnArr","deprecated":false,"deprecationMessage":"","line":53,"type":"[]","decorators":[]},{"name":"checkboxSelection","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":52,"type":"boolean","decorators":[]},{"name":"collapsedGridHeaderButtonLabel","deprecated":false,"deprecationMessage":"","line":56,"type":"string","decorators":[]},{"name":"collapseGridHeaderButtons","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":55,"type":"boolean","decorators":[]},{"name":"columnDefsMethod","deprecated":false,"deprecationMessage":"","line":59,"type":"any","decorators":[]},{"name":"getActionButtons","defaultValue":"(thisItemData, thisRowId): IUiActionBtnConfig => {\\r\\n        return null;\\r\\n    }","deprecated":false,"deprecationMessage":"","line":151,"type":"(thisItemData: any, thisRowId: any) => IUiActionBtnConfig","decorators":[]},{"name":"getContextMenuItems","defaultValue":"(params: GetContextMenuItemsParams): (string | MenuItemDef)[] => {\\r\\n        return [];\\r\\n    }","deprecated":false,"deprecationMessage":"","line":155,"type":"(params: GetContextMenuItemsParams) => {}","decorators":[]},{"name":"gridHeaderButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":3806,"end":3875,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":3807,"end":3811,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"todo"},"comment":"<p>Can be swapped out with new interface buttons when ready</p>\\n"}],"rawdescription":"\\n\\nArray of header buttons to be displayed in the grid header\\n\\n","description":"<p>Array of header buttons to be displayed in the grid header</p>\\n","line":83,"type":"IUiHeaderButton[]","decorators":[]},{"name":"gridHeight","deprecated":false,"deprecationMessage":"","line":54,"type":"any","decorators":[]},{"name":"gridOptions","defaultValue":"{\\r\\n        rowSelection: \'single\',\\r\\n        pagination: true,\\r\\n        paginationAutoPageSize: true,\\r\\n        cacheBlockSize: 100,\\r\\n        rowModelType: UiRowModelTypeEnum.serverSide,\\r\\n        serverSideStoreType: \'partial\',\\r\\n        rowMultiSelectWithClick: true,\\r\\n        unSortIcon: true,\\r\\n        getRowId: (params) => params.data[this.rowId],\\r\\n    }","deprecated":false,"deprecationMessage":"","line":63,"type":"GridOptions","decorators":[]},{"name":"gridReadyMethod","defaultValue":"(params) => { }","deprecated":false,"deprecationMessage":"","line":149,"type":"(params: any) => void","decorators":[]},{"name":"id","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":50,"type":"string","decorators":[]},{"name":"rowId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":51,"type":"string","decorators":[]},{"name":"rowModelType","defaultValue":"UiRowModelTypeEnum.serverSide","deprecated":false,"deprecationMessage":"","line":58,"type":"UiRowModelTypeEnum","decorators":[]},{"name":"rowSelection","defaultValue":"UiRowSelectTypeEnum.single","deprecated":false,"deprecationMessage":"","line":60,"type":"UiRowSelectTypeEnum","decorators":[]},{"name":"tooltipShowDelay","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":84,"type":"number","decorators":[]}],"outputsClass":[{"name":"cellValueChangedEvent","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":86,"type":"EventEmitter"},{"name":"rowClickEvent","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":87,"type":"EventEmitter"},{"name":"selectionChange","defaultValue":"new EventEmitter<{\\r\\n        gridId: string;\\r\\n        selectedRows: RowNode[];\\r\\n    }>()","deprecated":false,"deprecationMessage":"","line":88,"type":"EventEmitter"}],"propertiesClass":[{"name":"_actionButtonListener","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":126,"modifierKind":[121]},{"name":"_actionMenuEvents","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":124,"modifierKind":[121]},{"name":"_actionMenuListener","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":127,"modifierKind":[121]},{"name":"_actionsColumnVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":125,"modifierKind":[121]},{"name":"_noDataStr","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":130,"modifierKind":[121]},{"name":"_noDataStrColorClass","defaultValue":"\'text-gray-700\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":128,"modifierKind":[121]},{"name":"_noDataSubStr","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":131,"modifierKind":[121]},{"name":"_noDataSubStrColorClass","defaultValue":"\'text-gray-700\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":129,"modifierKind":[121]},{"name":"_subscriptions","defaultValue":"new Subscription()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":123,"modifierKind":[121]},{"name":"actionMenuOpened","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":110,"modifierKind":[123]},{"name":"autoHeight","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":112,"modifierKind":[123]},{"name":"calculatedGridHeight","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":113,"modifierKind":[123]},{"name":"colElements","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":109,"modifierKind":[123]},{"name":"columnDefs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":96,"modifierKind":[123]},{"name":"components","defaultValue":"{ agColumnHeader: UiCustomHeaderComponent }","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":108,"modifierKind":[123]},{"name":"defaultColDef","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"modifierKind":[123]},{"name":"gridApi","deprecated":false,"deprecationMessage":"","type":"GridApi","optional":false,"description":"","line":93,"modifierKind":[123]},{"name":"gridColumnApi","deprecated":false,"deprecationMessage":"","type":"ColumnApi","optional":false,"description":"","line":94,"modifierKind":[123]},{"name":"gridTop","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":107,"modifierKind":[123]},{"name":"hasAnyFilter$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":121,"modifierKind":[123]},{"name":"headerCountFilteredShown$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":120,"modifierKind":[123]},{"name":"headerCountFilteredTotal$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":119,"modifierKind":[123]},{"name":"headerCountSelected$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":118,"modifierKind":[123]},{"name":"headerCountText$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":117,"modifierKind":[123]},{"name":"headerInfoText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":114,"modifierKind":[123]},{"name":"loadingCellRenderer","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":102,"modifierKind":[123]},{"name":"loadingCellRendererParams","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":103,"modifierKind":[123]},{"name":"noDataIconClass","defaultValue":"UiIconTypeEnum.neutral","deprecated":false,"deprecationMessage":"","type":"UiIconTypeEnum.neutral | UiIconTypeEnum.danger | UiIconTypeEnum.success | UiIconTypeEnum.warning","optional":false,"description":"","line":100,"modifierKind":[123]},{"name":"noDataStrKey","defaultValue":"\'COMMON.NO_DATA_TO_DISPLAY\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":97,"modifierKind":[123]},{"name":"noDataSubStrKey","defaultValue":"\' \'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":98,"modifierKind":[123]},{"name":"noRowsTemplate","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":104,"modifierKind":[123]},{"name":"selectedRows","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"RowNode[]","optional":false,"description":"","line":115,"modifierKind":[123]},{"name":"showNoData","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":105,"modifierKind":[123]},{"name":"sortingIcons","defaultValue":"UiSortingIconsConst","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":106,"modifierKind":[123]},{"name":"titleText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":111,"modifierKind":[123]}],"methodsClass":[{"name":"applyColumnState","args":[{"name":"params","type":"ApplyColumnStateParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":303,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ApplyColumnStateParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"autoSizeColumns","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":476,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"gridSizeChanged","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":307,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":250,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCellMouseOut","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onCellMouseOver","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":311,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onCellValueChanged","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":286,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onFirstDataRendered","args":[{"name":"params","type":"FirstDataRenderedEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":367,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"FirstDataRenderedEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onGridReady","args":[{"name":"params","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":266,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onModelUpdated","args":[{"name":"e","type":"ModelUpdatedEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":297,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"ModelUpdatedEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"onRowClicked","args":[{"name":"event","type":"RowClickedEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":342,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"RowClickedEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChanged","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":290,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setColumnDef","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":374,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"setDomLayout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":490,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"setNoDataTemplate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":346,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":160}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from \'@angular/core\';\\r\\n// RxJS\\r\\nimport { BehaviorSubject, Subscription } from \'rxjs\';\\r\\n// Ag-Grid\\r\\nimport { GetContextMenuItemsParams, LicenseManager, MenuItemDef } from \'ag-grid-enterprise\';\\r\\nimport {\\r\\n    RowClickedEvent,\\r\\n    GridOptions,\\r\\n    ApplyColumnStateParams,\\r\\n    GridApi,\\r\\n    ColumnApi,\\r\\n    FirstDataRenderedEvent,\\r\\n    ModelUpdatedEvent,\\r\\n    RowNode,\\r\\n} from \'ag-grid-community\';\\r\\n// NGX Translate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Services\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { UiPageFooterService } from \'@lib/modules/layout/services/page-footer-service/page-footer.service\';\\r\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\r\\n// Custom Cell Renderers\\r\\nimport { UiCustomLoadingCellRendererComponent } from \'../custom-loading-cell-renderer/custom-loading-cell-renderer.component\';\\r\\nimport { UiCustomHeaderComponent } from \'../custom-header/custom-header.component\';\\r\\n// Enums\\r\\nimport { UiRowModelTypeEnum, UiRowSelectTypeEnum } from \'./enums\';\\r\\nimport { UiIconTypeEnum } from \'@lib/enums/icon-type.enum\';\\r\\n// Grid Constants\\r\\nimport { UiSortingIconsConst } from \'@lib/modules/grid/constants/sorting-icons.const\';\\r\\n// Components\\r\\nimport { UiActionButtonsRendererComponent } from \'../action-buttons-renderer/action-buttons-renderer.component\';\\r\\nimport { UiCustomMultiSelectHeaderComponent } from \'../custom-multiselect-header/custom-multiselect-header.component\';\\r\\n// Interfaces\\r\\nimport { IUiActionBtnConfig } from \'./interfaces/grid.interface\';\\r\\nimport { IUiHeaderButton } from \'../grid-header-buttons/grid-header-buttons.component\';\\r\\n\\r\\n// Ag-Grid License\\r\\nLicenseManager.setLicenseKey(\\r\\n    // eslint-disable-next-line max-len\\r\\n    \'CompanyName=Assent Compliance Inc,LicensedApplication=ACP,LicenseType=SingleApplication,LicensedConcurrentDeveloperCount=15,LicensedProductionInstancesCount=1,AssetReference=AG-023554,ExpiryDate=1_February_2023_[v2]_MTY3NTIwOTYwMDAwMA==5c744bd8669298207bad0bc10f8dde50\'\\r\\n);\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-grid\',\\r\\n    templateUrl: \'./grid.component.html\',\\r\\n    styleUrls: [\'./grid.component.scss\'],\\r\\n})\\r\\nexport class UiGridComponent implements OnInit, OnChanges, OnDestroy {\\r\\n    @Input() public id = \'\';\\r\\n    @Input() public rowId = \'\';\\r\\n    @Input() public checkboxSelection = true;\\r\\n    @Input() public autoSizeColumnArr: [];\\r\\n    @Input() public gridHeight; // Note: In pixels\\r\\n    @Input() public collapseGridHeaderButtons = false;\\r\\n    @Input() public collapsedGridHeaderButtonLabel: string;\\r\\n    // Hint: This property overrides rowModelType property in grid options\\r\\n    @Input() public rowModelType: UiRowModelTypeEnum = UiRowModelTypeEnum.serverSide;\\r\\n    @Input() public columnDefsMethod; // = () => { return {}};\\r\\n    @Input() public rowSelection: UiRowSelectTypeEnum = UiRowSelectTypeEnum.single;\\r\\n    // Note: A setting method will be created in the next version to allows adding or updating\\r\\n    // default properties without erasing the other default properties of the gridOptions object.\\r\\n    @Input() public gridOptions: GridOptions = {\\r\\n        rowSelection: \'single\',\\r\\n        pagination: true,\\r\\n        paginationAutoPageSize: true,\\r\\n        cacheBlockSize: 100,\\r\\n        rowModelType: UiRowModelTypeEnum.serverSide,\\r\\n        serverSideStoreType: \'partial\',\\r\\n        rowMultiSelectWithClick: true,\\r\\n        unSortIcon: true,\\r\\n        getRowId: (params) => params.data[this.rowId],\\r\\n    };\\r\\n    @Input() public set actionsColumnVisible(val: boolean) {\\r\\n        this._actionsColumnVisible = val;\\r\\n        this.setColumnDef();\\r\\n    }\\r\\n    /**\\r\\n     * Array of header buttons to be displayed in the grid header\\r\\n     *\\r\\n     * @todo Can be swapped out with new interface buttons when ready\\r\\n     */\\r\\n    @Input() public gridHeaderButtons: IUiHeaderButton[] = [];\\r\\n    @Input() public tooltipShowDelay = 0;\\r\\n\\r\\n    @Output() public cellValueChangedEvent = new EventEmitter<any>();\\r\\n    @Output() public rowClickEvent = new EventEmitter<any>();\\r\\n    @Output() public selectionChange = new EventEmitter<{\\r\\n        gridId: string;\\r\\n        selectedRows: RowNode[];\\r\\n    }>();\\r\\n\\r\\n    public gridApi: GridApi;\\r\\n    public gridColumnApi: ColumnApi;\\r\\n    public defaultColDef;\\r\\n    public columnDefs = [];\\r\\n    public noDataStrKey = \'COMMON.NO_DATA_TO_DISPLAY\';\\r\\n    public noDataSubStrKey = \' \';\\r\\n    // eslint-disable-next-line max-len\\r\\n    public noDataIconClass: UiIconTypeEnum.neutral | UiIconTypeEnum.danger | UiIconTypeEnum.success | UiIconTypeEnum.warning =\\r\\n        UiIconTypeEnum.neutral;\\r\\n    public loadingCellRenderer;\\r\\n    public loadingCellRendererParams;\\r\\n    public noRowsTemplate;\\r\\n    public showNoData = false;\\r\\n    public sortingIcons = UiSortingIconsConst;\\r\\n    public gridTop = 0;\\r\\n    public components: { [p: string]: any } = { agColumnHeader: UiCustomHeaderComponent };\\r\\n    public colElements = [];\\r\\n    public actionMenuOpened = false;\\r\\n    public titleText;\\r\\n    public autoHeight = true;\\r\\n    public calculatedGridHeight = 0;\\r\\n    public headerInfoText;\\r\\n    public selectedRows: RowNode[] = [];\\r\\n\\r\\n    public headerCountText$: BehaviorSubject<number> = new BehaviorSubject(0);\\r\\n    public headerCountSelected$: BehaviorSubject<number> = new BehaviorSubject(0);\\r\\n    public headerCountFilteredTotal$: BehaviorSubject<number> = new BehaviorSubject(0);\\r\\n    public headerCountFilteredShown$: BehaviorSubject<number> = new BehaviorSubject(0);\\r\\n    public hasAnyFilter$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\r\\n\\r\\n    private _subscriptions = new Subscription();\\r\\n    private _actionMenuEvents;\\r\\n    private _actionsColumnVisible = false;\\r\\n    private _actionButtonListener;\\r\\n    private _actionMenuListener;\\r\\n    private _noDataStrColorClass = \'text-gray-700\';\\r\\n    private _noDataSubStrColorClass = \'text-gray-700\';\\r\\n    private _noDataStr = \'\';\\r\\n    private _noDataSubStr = \'\';\\r\\n\\r\\n    constructor(\\r\\n        private _layoutService: UiLayoutService,\\r\\n        private _translateService: TranslateService,\\r\\n        private _pageFooterService: UiPageFooterService\\r\\n    ) { }\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._subscriptions.unsubscribe();\\r\\n\\r\\n        this.headerCountText$.unsubscribe();\\r\\n        this.headerCountSelected$.unsubscribe();\\r\\n        this.headerCountFilteredTotal$.unsubscribe();\\r\\n        this.headerCountFilteredShown$.unsubscribe();\\r\\n        this.hasAnyFilter$.unsubscribe();\\r\\n    }\\r\\n\\r\\n    @Input() public gridReadyMethod = (params) => { };\\r\\n\\r\\n    @Input() public getActionButtons = (thisItemData, thisRowId): IUiActionBtnConfig => {\\r\\n        return null;\\r\\n    };\\r\\n\\r\\n    @Input() public getContextMenuItems = (params: GetContextMenuItemsParams): (string | MenuItemDef)[] => {\\r\\n        return [];\\r\\n    };\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        if (this.gridHeight === undefined) {\\r\\n            this.gridTop = document.querySelector(\'ag-grid-angular\').getBoundingClientRect().top;\\r\\n\\r\\n            let footerHeight = 0;\\r\\n            if (this._pageFooterService.showPageFooter === true && document.getElementById(\'footer\') !== null) {\\r\\n                footerHeight = document.getElementById(\'footer\').clientHeight;\\r\\n            }\\r\\n            this.calculatedGridHeight = window.innerHeight - (this.gridTop + 20) - footerHeight;\\r\\n            const viewport = document.querySelector(\'.ag-center-cols-viewport\');\\r\\n            viewport.setAttribute(\'style\', \'height: 100%\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        if (this.gridHeight !== undefined) {\\r\\n            this.autoHeight = false;\\r\\n        }\\r\\n        this._layoutService.hideOverflow = this.autoHeight; // Hide scrollbar for fullscreen grid\\r\\n\\r\\n        this.loadingCellRenderer = UiCustomLoadingCellRendererComponent;\\r\\n        this.loadingCellRendererParams = { loadingMessage: \'COMMON.LOADING_DATA\' };\\r\\n        this.defaultColDef = {\\r\\n            flex: 1,\\r\\n            sortable: true,\\r\\n            editable: false,\\r\\n            suppressMenu: true,\\r\\n            suppressMovable: true,\\r\\n            /* Note: Keeping those commented line as reference\\r\\n                resizable: true,\\r\\n                wrapText: true,\\r\\n                autoHeight: true,\\r\\n                sort: \'desc\',\\r\\n                maxWidth: 400,\\r\\n                minWidth: 30,\\r\\n                checkboxSelection: false,\\r\\n                filter: false,\\r\\n                floatingFilter: false, // Filter input row\\r\\n                cellClass: [\'cell-text-left\'],\\r\\n                headerClass: \'header-text-left\',\\r\\n            */\\r\\n        };\\r\\n\\r\\n        this.setColumnDef();\\r\\n        this.setNoDataTemplate();\\r\\n\\r\\n        this._subscriptions.add(\\r\\n            this._translateService.onLangChange.subscribe(() => {\\r\\n                this.setColumnDef();\\r\\n                this.autoSizeColumns();\\r\\n\\r\\n                if (this.showNoData) {\\r\\n                    this.setNoDataTemplate();\\r\\n                }\\r\\n\\r\\n                if (this.gridOptions.api !== undefined && this.gridOptions.api !== null) {\\r\\n                    this.gridOptions.api.redrawRows();\\r\\n                }\\r\\n            })\\r\\n        );\\r\\n\\r\\n        this._subscriptions.add(\\r\\n            this._layoutService.onUpdateLayout.subscribe(() => {\\r\\n                setTimeout(() => {\\r\\n                    this.onResize();\\r\\n                }, 200);\\r\\n            })\\r\\n        );\\r\\n\\r\\n        this._subscriptions.add(\\r\\n            this._pageFooterService.showPageFooter$.subscribe(() => {\\r\\n                this.onResize();\\r\\n            })\\r\\n        );\\r\\n\\r\\n        this._subscriptions.add(\\r\\n            this.selectionChange.subscribe((event) => {\\r\\n                this.headerCountSelected$.next(event.selectedRows.length);\\r\\n                this.selectedRows = event.selectedRows;\\r\\n            })\\r\\n        );\\r\\n\\r\\n        this.gridOptions.getContextMenuItems = this.getContextMenuItems.bind(this);\\r\\n\\r\\n        this.gridOptions = {\\r\\n            ...this.gridOptions,\\r\\n            rowMultiSelectWithClick: false,\\r\\n        };\\r\\n    }\\r\\n\\r\\n    public ngOnChanges(changes: SimpleChanges) {\\r\\n        if (changes.rowModelType?.currentValue || changes.gridOptions?.currentValue) {\\r\\n            this.gridOptions.rowModelType = this.rowModelType;\\r\\n        }\\r\\n        if (changes.rowSelection?.currentValue || changes.gridOptions?.currentValue) {\\r\\n            this.gridOptions.rowSelection = this.rowSelection;\\r\\n            if (this.rowSelection === \'multiple\') {\\r\\n                this.gridOptions.rowClass = this.rowSelection === \'multiple\' ? \'grid-multiselect-row\' : \'grid-row\';\\r\\n                this.gridOptions.rowMultiSelectWithClick = false; // do not allow selection on row click, only checkbox\\r\\n                this.gridOptions.suppressRowClickSelection = true; // do not allow selection on row click, only checkbox\\r\\n                this.gridOptions.viewportRowModelPageSize = 1;\\r\\n                this.gridOptions.viewportRowModelBufferSize = 0;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onGridReady(params) {\\r\\n        this.gridApi = params.api;\\r\\n        this.gridColumnApi = params.columnApi;\\r\\n        this.gridReadyMethod(params);\\r\\n        this.autoSizeColumns();\\r\\n        this.setDomLayout();\\r\\n\\r\\n        this._subscriptions.add(\\r\\n            this.gridApi.addEventListener(\'filterChanged\', (event) => {\\r\\n                const currentPageRows = this.gridApi.paginationGetPageSize();\\r\\n                this.headerCountFilteredShown$.next(currentPageRows);\\r\\n                this.headerCountFilteredTotal$.next(this.gridApi.getDisplayedRowCount());\\r\\n                this.hasAnyFilter$.next(this.gridApi.isAnyFilterPresent());\\r\\n                if (this.rowSelection === UiRowSelectTypeEnum.multiple) {\\r\\n                    this.gridApi.deselectAll();\\r\\n                }\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public onCellValueChanged(event) {\\r\\n        this.cellValueChangedEvent.emit(event);\\r\\n    }\\r\\n\\r\\n    public onSelectionChanged(event: any) {\\r\\n        this.selectionChange.emit({\\r\\n            gridId: this.id,\\r\\n            selectedRows: this.gridApi.getSelectedRows()\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public onModelUpdated(e: ModelUpdatedEvent) {\\r\\n        if (e.api !== null) {\\r\\n            this.headerCountText$.next(e.api.getDisplayedRowCount());\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public applyColumnState(params: ApplyColumnStateParams) {\\r\\n        this.gridOptions.columnApi.applyColumnState(params);\\r\\n    }\\r\\n\\r\\n    public gridSizeChanged(e) {\\r\\n        this.onResize();\\r\\n    }\\r\\n\\r\\n    public onCellMouseOver(e) {\\r\\n        const actionButton = document.querySelector(\'#\' + \'actionBtn-\' + e.rowIndex);\\r\\n        const actionMenu = document.querySelector(\'#\' + \'actionMenu\');\\r\\n\\r\\n        if (this._actionButtonListener !== undefined) {\\r\\n            this._actionButtonListener.remove();\\r\\n            this._actionMenuListener.remove();\\r\\n        }\\r\\n\\r\\n        this._actionButtonListener = actionButton?.addEventListener(\'click\', () => {\\r\\n            this.actionMenuOpened = true;\\r\\n        });\\r\\n\\r\\n        this._actionMenuListener = actionMenu?.addEventListener(\'click\', () => {\\r\\n            this.actionMenuOpened = false;\\r\\n        });\\r\\n\\r\\n        actionMenu?.classList.remove(\'visually-hidden\');\\r\\n    }\\r\\n\\r\\n    public onCellMouseOut(e) {\\r\\n        if (this._actionButtonListener !== undefined) {\\r\\n            this._actionButtonListener.remove();\\r\\n            this._actionMenuListener.remove();\\r\\n        }\\r\\n\\r\\n        if (this.actionMenuOpened === true) {\\r\\n            this.actionMenuOpened = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onRowClicked(event: RowClickedEvent) {\\r\\n        this.rowClickEvent.emit(event);\\r\\n    }\\r\\n\\r\\n    public setNoDataTemplate() {\\r\\n        this._noDataStr = this._translateService.instant(this.noDataStrKey);\\r\\n        this._noDataSubStr = this._translateService.instant(this.noDataSubStrKey);\\r\\n\\r\\n        // eslint-disable-next-line max-len\\r\\n        this.noRowsTemplate = `<div><i class=\\"${this.noDataIconClass}\\"></i><br><h5 class=\\"mt-2 ${this._noDataStrColorClass}\\">${this._noDataStr}</h5><span class=\\"${this._noDataSubStrColorClass}\\">${this._noDataSubStr}</span></div>`;\\r\\n\\r\\n        if (this.gridApi) {\\r\\n            this.gridApi.hideOverlay();\\r\\n\\r\\n            // Note: Using setTimeout to let the translation switch to occur.\\r\\n            setTimeout(() => {\\r\\n                const rowData = [];\\r\\n                this.gridApi.forEachNode((node) => rowData.push(node.data));\\r\\n                if (rowData.length === 0) {\\r\\n                    this.gridApi.showNoRowsOverlay();\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onFirstDataRendered(params: FirstDataRenderedEvent) {\\r\\n        setTimeout(() => {\\r\\n            this.onResize();\\r\\n            this.autoSizeColumns();\\r\\n        }, 500);\\r\\n    }\\r\\n\\r\\n    protected setColumnDef() {\\r\\n        if (this.columnDefsMethod !== null && this.columnDefsMethod !== undefined) {\\r\\n            this.columnDefs = this.columnDefsMethod();\\r\\n\\r\\n            // Append checkboxes to first column if rowSelection is set to \\"multiple\\"\\r\\n            if (this.rowSelection === UiRowSelectTypeEnum.multiple) {\\r\\n                // Update columnDefs to include the checkbox column and events\\r\\n                this.columnDefs[0] = {\\r\\n                    ...this.columnDefs[0],\\r\\n                    checkboxSelection: true,\\r\\n                    cellClass: \'grid-multiselect-cell\',\\r\\n                    headerCheckboxSelectionFilteredOnly: true,\\r\\n                    headerClass: \'grid-multiselect-header\',\\r\\n                    /* Please keep for reference - this will make the entire cell with the checkbox \'clickable\'\\r\\n                    onCellClicked: (event) => {\\r\\n                        // Listens for cell click event and toggles the row selection\\r\\n                        event.node.setSelected(!event.node.isSelected());\\r\\n                    },\\r\\n                    */\\r\\n                    onCellValueChanged: (event) => {\\r\\n                        this.selectionChange.emit({\\r\\n                            gridId: event.node.gridOptions.id,\\r\\n                            selectedRows: this.selectedRows,\\r\\n                        });\\r\\n                    },\\r\\n                };\\r\\n                // If the rowModelType is clientSide, we can use the Ag-Grid headerCheckboxSelection\\r\\n                if (this.rowModelType === UiRowModelTypeEnum.clientSide) {\\r\\n                    this.columnDefs[0].headerCheckboxSelection = (params) => {\\r\\n                        const displayedColumns = params.columnApi.getAllDisplayedColumns();\\r\\n                        return displayedColumns[0] === params.column;\\r\\n                    };\\r\\n                }\\r\\n                // If the rowModelType is serverSide, we need to use a custom header component\\r\\n                if (this.rowModelType === UiRowModelTypeEnum.serverSide) {\\r\\n                    this.columnDefs[0].headerComponent = UiCustomMultiSelectHeaderComponent;\\r\\n                    this.columnDefs[0].headerComponentParams = {\\r\\n                        gridId: this.id,\\r\\n                        selectionChange: this.selectionChange,\\r\\n                        rowModelType: this.rowModelType,\\r\\n                    };\\r\\n                    // Note: this property will show a console warning that has been suppressed in the unit tests\\r\\n                    this.columnDefs[0].headerCheckboxSelectionCurrentPageOnly = true;\\r\\n                }\\r\\n\\r\\n                /* Please leave for reference -- these are the initial params for a \\"checkbox column\\" if needed.\\r\\n                const multiSelectCellWidth = 40;\\r\\n                this.columnDefs.unshift({\\r\\n                    pinned: \'left\', // Always pin to the left the primary info column\\r\\n                    lockPinned: true, // Lock the pinned column\\r\\n                    lockPosition: \'left\',\\r\\n                    suppressMovable: true, // do not want this column to be moved\\r\\n                    resizable: false, // do not want this column to be resized\\r\\n                    suppressSizeToFit: true,\\r\\n                    suppressAutoSize: false,\\r\\n                    cellCLass: \'grid-multiselect-cell\',\\r\\n                    checkboxSelection: true,\\r\\n                    showDisabledCheckboxes: true,\\r\\n                    width: multiSelectCellWidth,\\r\\n                    minWidth: multiSelectCellWidth,\\r\\n                    maxWidth: multiSelectCellWidth,\\r\\n                    headerComponent: UiCustomMultiSelectHeaderComponent,\\r\\n                    headerComponentParams: {\\r\\n                        gridId: this.id,\\r\\n                        selectionChange: this.selectionChange,\\r\\n                    },\\r\\n                    headerClass: \'grid-multiselect-header\',\\r\\n                    onCellClicked: (params) => {\\r\\n                        params.node.setSelected(!params.node.isSelected());\\r\\n                    }\\r\\n                });\\r\\n                */\\r\\n            }\\r\\n\\r\\n            // This empty column is a filler\\r\\n            this.columnDefs[this.columnDefs.length] = {\\r\\n                field: \'empty-column\',\\r\\n                headerName: \'\',\\r\\n                sortable: false,\\r\\n                suppressMovable: true,\\r\\n            };\\r\\n\\r\\n            // Adding actions column\\r\\n            if (this._actionsColumnVisible === true) {\\r\\n                this.columnDefs[this.columnDefs.length] = {\\r\\n                    field: \'row-actions\',\\r\\n                    headerName: this._translateService.instant(\'COMMON.ACTIONS\'),\\r\\n                    headerClass: [\'header-text-center\'],\\r\\n                    suppressMovable: true,\\r\\n                    cellRendererSelector: (params) => {\\r\\n                        return {\\r\\n                            component: UiActionButtonsRendererComponent,\\r\\n                            params: this.getActionButtons(params.data, params.rowIndex),\\r\\n                        };\\r\\n                    },\\r\\n                    sortable: false, // Make it unsortable\\r\\n                    pinned: \'right\', // Always pin the action buttons column to the right,\\r\\n                };\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    protected autoSizeColumns() {\\r\\n        setTimeout(() => {\\r\\n            if (this.gridColumnApi !== undefined && Array.isArray(this.autoSizeColumnArr) && this.autoSizeColumnArr.length > 0) {\\r\\n                const containActions = this.autoSizeColumnArr.find((item) => item === \'row-actions\');\\r\\n                if (containActions === undefined) {\\r\\n                    this.autoSizeColumnArr[String(this.autoSizeColumnArr.length)] = \'row-actions\';\\r\\n                }\\r\\n\\r\\n                this.gridColumnApi.autoSizeColumns(this.autoSizeColumnArr, false);\\r\\n                this.onResize();\\r\\n            }\\r\\n        }, 200);\\r\\n    }\\r\\n\\r\\n    private setDomLayout() {\\r\\n        if (this.autoHeight) {\\r\\n            this.gridApi.setDomLayout(\'autoHeight\');\\r\\n        } else {\\r\\n            this.gridApi.setDomLayout(\'normal\');\\r\\n        }\\r\\n        this.gridApi.setDomLayout(\'normal\');\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"::ng-deep .ag-root .ag-cell {\\r\\n    user-select: text;\\r\\n    -webkit-user-select: text;\\r\\n    -ms-user-select: text;\\r\\n    cursor: text;\\r\\n}","styleUrl":"./grid.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""}],"line":131,"jsdoctags":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnChanges","OnDestroy"],"accessors":{"actionsColumnVisible":{"name":"actionsColumnVisible","setSignature":{"name":"actionsColumnVisible","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":74,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<ui-grid-header\\r\\n    [countText]=\\"headerCountText$ | async\\"\\r\\n    [countSelectedItems]=\\"headerCountSelected$ | async\\"\\r\\n    [countFilteredItems]=\\"headerCountFilteredTotal$ | async\\"\\r\\n    [countFilteredShown]=\\"headerCountFilteredShown$ | async\\"\\r\\n    [hasAnyFilter]=\\"hasAnyFilter$ | async\\"\\r\\n    [titleText]=\\"titleText\\"\\r\\n    [infoText]=\\"headerInfoText\\"\\r\\n    [gridHeaderButtons]=\\"gridHeaderButtons\\"\\r\\n    [collapseHeaderButtons]=\\"collapseGridHeaderButtons\\"\\r\\n    [collapseHeaderButtonLabel]=\\"collapsedGridHeaderButtonLabel\\"\\r\\n></ui-grid-header>\\r\\n<ag-grid-angular\\r\\n    class=\\"ag-theme-material w-100\\"\\r\\n    [style.height]=\\"autoHeight ? calculatedGridHeight + \'px\' : gridHeight + \'px\'\\"\\r\\n    [id]=\\"\'ag-grid-\' + id\\"\\r\\n    [gridOptions]=\\"gridOptions\\"\\r\\n    [defaultColDef]=\\"defaultColDef\\"\\r\\n    [columnDefs]=\\"columnDefs\\"\\r\\n    [rowModelType]=\\"rowModelType\\"\\r\\n    [loadingCellRenderer]=\\"loadingCellRenderer\\"\\r\\n    [loadingCellRendererParams]=\\"loadingCellRendererParams\\"\\r\\n    [icons]=\\"sortingIcons\\"\\r\\n    [overlayNoRowsTemplate]=\\"noRowsTemplate\\"\\r\\n    [suppressCellFocus]=\\"true\\"\\r\\n    (gridReady)=\\"onGridReady($event)\\"\\r\\n    (rowClicked)=\\"onRowClicked($event)\\"\\r\\n    (gridSizeChanged)=\\"gridSizeChanged($event)\\"\\r\\n    (modelUpdated)=\\"onModelUpdated($event)\\"\\r\\n    (cellMouseOut)=\\"onCellMouseOut($event)\\"\\r\\n    (cellMouseOver)=\\"onCellMouseOver($event)\\"\\r\\n    (firstDataRendered)=\\"onFirstDataRendered($event)\\"\\r\\n    (selectionChanged)=\\"onSelectionChanged($event)\\"\\r\\n    [components]=\\"components\\"\\r\\n    [tooltipShowDelay]=\\"tooltipShowDelay\\"\\r\\n    (cellValueChanged)=\\"onCellValueChanged($event)\\"\\r\\n>\\r\\n</ag-grid-angular>\\r\\n"},{"name":"UiGridFilterComponent","id":"component-UiGridFilterComponent-ce12a85418f724414d22368c17e4136a89e91b550bfb09039f9f4f6def066dece0bbbfddabcd41419d59cbd452b011666a44936faf079d0db94d7bb9170c721b","file":"libs/ui/src/lib/modules/filter/grid-filter/grid-filter.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid-filter","styleUrls":["./grid-filter.component.scss"],"styles":[],"templateUrl":["./grid-filter.component.html"],"viewProviders":[],"inputsClass":[{"name":"filters","deprecated":false,"deprecationMessage":"","line":18,"type":"IUiQuickFilter","decorators":[]},{"name":"uiGrid","deprecated":false,"deprecationMessage":"","line":17,"type":"UiGridComponent","decorators":[]}],"outputsClass":[{"name":"filterChange","defaultValue":"new EventEmitter<object>()","deprecated":false,"deprecationMessage":"","line":31,"type":"EventEmitter<object>"}],"propertiesClass":[{"name":"_filters","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"IUiQuickFilter","optional":false,"description":"","line":38,"modifierKind":[121]},{"name":"filterCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"filterRefs","deprecated":false,"deprecationMessage":"","type":"QueryList<UiQuickFilterComponent>","optional":false,"description":"","line":33,"decorators":[{"name":"ViewChildren","stringifiedArguments":"UiQuickFilterComponent"}],"modifierKind":[123]},{"name":"filtersArray","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":36,"modifierKind":[123]}],"methodsClass":[{"name":"applyFiltersData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearAllFilters","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getFilterByRowModel","args":[{"name":"values","type":"IUiQuickFilterOption[]","deprecated":false,"deprecationMessage":""},{"name":"rowModelType","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"UiRowModelTypeEnum.serverSide"}],"optional":false,"returnType":"IUiServerSideFilter | IUiClientSideFilter","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"values","type":"IUiQuickFilterOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rowModelType","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"UiRowModelTypeEnum.serverSide","tagName":{"text":"param"}}]},{"name":"onOpenChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTriggerClicked","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateTotalFilterCount","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output, QueryList, ViewChildren } from \'@angular/core\';\\r\\n// Enums\\r\\nimport { UiRowModelTypeEnum } from \'@lib/modules/grid/components/grid/enums\';\\r\\n// Interfaces\\r\\nimport { IUiClientSideFilter, IUiFilterModel, IUiQuickFilter, IUiQuickFilterOption, IUiServerSideFilter } from \'../interfaces\';\\r\\n// Components\\r\\nimport { UiGridComponent } from \'@lib/modules/grid/components\';\\r\\nimport { UiQuickFilterComponent } from \'../quick-filter/quick-filter.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-grid-filter\',\\r\\n    templateUrl: \'./grid-filter.component.html\',\\r\\n    styleUrls: [\'./grid-filter.component.scss\'],\\r\\n})\\r\\nexport class UiGridFilterComponent {\\r\\n    @Input() public uiGrid: UiGridComponent;\\r\\n    @Input() public set filters(value: IUiQuickFilter) {\\r\\n        this._filters = value;\\r\\n        this.filtersArray = [];\\r\\n        for (const prop in value) {\\r\\n            if (value.hasOwnProperty(prop)) {\\r\\n                this.filtersArray.push({ name: prop, filters: value[prop] });\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    public get filters(): IUiQuickFilter {\\r\\n        return this._filters;\\r\\n    }\\r\\n\\r\\n    @Output() public filterChange: EventEmitter<object> = new EventEmitter<object>();\\r\\n\\r\\n    @ViewChildren(UiQuickFilterComponent) public filterRefs: QueryList<UiQuickFilterComponent>;\\r\\n\\r\\n    public filterCount = 0;\\r\\n    public filtersArray = [];\\r\\n\\r\\n    private _filters: IUiQuickFilter = {};\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    // Filters Methods START\\r\\n    public clearAllFilters() {\\r\\n        for (const prop in this.filters) {\\r\\n            if (this.filters.hasOwnProperty(prop)) {\\r\\n                for (let i = 0; i < this.filters[prop].options.length; i++) {\\r\\n                    this.filters[prop].options[i].value = false;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        this.filterRefs.forEach((filterRef) => {\\r\\n            filterRef.clearSelection();\\r\\n        });\\r\\n\\r\\n        this.applyFiltersData();\\r\\n    }\\r\\n\\r\\n    public applyFiltersData() {\\r\\n        const tempFilters: IUiFilterModel = {};\\r\\n        const rowModelType: UiRowModelTypeEnum = this.uiGrid.rowModelType;\\r\\n\\r\\n        for (const prop in this.filters) {\\r\\n            if (this.filters.hasOwnProperty(prop)) {\\r\\n                const filter = this.filters[prop].options;\\r\\n\\r\\n                if (filter.filter((option) => option.value === true).length !== 0) {\\r\\n                    const values = this.filters[prop].options.filter((option) => option.value === true);\\r\\n\\r\\n                    tempFilters[prop] = this.getFilterByRowModel(values, rowModelType);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (this.uiGrid !== undefined && this.uiGrid.gridOptions !== undefined && this.uiGrid.gridOptions.api !== undefined) {\\r\\n            this.uiGrid.gridOptions.api.setFilterModel(tempFilters);\\r\\n            this.uiGrid.gridOptions.api.onFilterChanged();\\r\\n        }\\r\\n\\r\\n        this.filterChange.emit(tempFilters);\\r\\n        this.updateTotalFilterCount();\\r\\n    }\\r\\n\\r\\n    public updateTotalFilterCount() {\\r\\n        this.filterCount = 0;\\r\\n\\r\\n        for (const prop in this.filters) {\\r\\n            if (this.filters.hasOwnProperty(prop)) {\\r\\n                const filter = this.filters[prop].options;\\r\\n\\r\\n                for (let j = 0; j < filter.length; j++) {\\r\\n                    if (filter[j].value === true) {\\r\\n                        this.filterCount += 1;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Events\\r\\n    public onOpenChange(event) {\\r\\n        // console.log(\'onOpenChange\');\\r\\n    }\\r\\n\\r\\n    public onTriggerClicked(event) {\\r\\n        // console.log(\'onTriggerClicked\');\\r\\n    }\\r\\n\\r\\n    public onSelectionChange(event) {\\r\\n        // console.log(\'onSelectionChange\');\\r\\n        this.applyFiltersData();\\r\\n        this.filterChange.emit({ options: this.filters });\\r\\n    }\\r\\n    // Filters Methods END\\r\\n\\r\\n    private getFilterByRowModel(\\r\\n        values: IUiQuickFilterOption[],\\r\\n        rowModelType = UiRowModelTypeEnum.serverSide\\r\\n    ): IUiServerSideFilter | IUiClientSideFilter {\\r\\n        let tempFilter: IUiServerSideFilter | IUiClientSideFilter;\\r\\n\\r\\n        if (rowModelType === UiRowModelTypeEnum.clientSide) {\\r\\n            tempFilter = { filterType: \'set\', values: values.map((v) => v.id) };\\r\\n        } else {\\r\\n            let filterString = \'\';\\r\\n            for (let i = 0; i < values.length; i++) {\\r\\n                filterString += values[i].id;\\r\\n                if (i < values.length - 1 && values.length > 1) {\\r\\n                    filterString += \',\';\\r\\n                }\\r\\n            }\\r\\n\\r\\n            tempFilter = { filterType: \'text\', type: \'contains\', filter: filterString };\\r\\n        }\\r\\n\\r\\n        return tempFilter;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./grid-filter.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":38},"accessors":{"filters":{"name":"filters","setSignature":{"name":"filters","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiQuickFilter","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":18,"jsdoctags":[{"name":"value","type":"IUiQuickFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"filters","type":"","returnType":"IUiQuickFilter","line":27}}},"templateData":"<div class=\\"card mb-3 overflow-visible\\">\\r\\n    <div class=\\"row\\">\\r\\n        <div class=\\"col-sm-9\\">\\r\\n            <div class=\\"filters gap-20 m-3 d-flex flex-wrap flex-row align-items-center\\">\\r\\n                <span class=\\"text-gray-700\\">{{\\"COMMON.FILTERS\\" | translate}}:</span>\\r\\n                <ui-quick-filter *ngFor=\\"let item of filtersArray\\"\\r\\n                    [id]=\\"\'filter_\'+item.name\\"\\r\\n                    [label]=\\"item.filters.label\\"\\r\\n                    [setOptions]=\\"item.filters.options\\"\\r\\n                    [showSelectClearBtns]=\\"item.filters.showSelectClearBtns\\"\\r\\n                    [multiSelect]=\\"item.filters.multiSelect??true\\"\\r\\n                    [showSearch]=\\"item.filters.showSearch\\"\\r\\n                    (selectionChange)=\\"onSelectionChange($event)\\"\\r\\n                    (openChange)=\\"onOpenChange($event)\\"\\r\\n                    (triggerClicked)=\\"onTriggerClicked($event)\\"\\r\\n                >\\r\\n                </ui-quick-filter>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\"col-sm-3\\">\\r\\n            <div class=\\"filters gap-20 d-flex flex-wrap flex-row align-items-center justify-content-end pe-2 h-100\\">\\r\\n                <button id=\\"clearBtn\\" *ngIf=\\"filterCount > 0\\" type=\\"button\\" class=\\"btn btn-link btn-md\\" (click)=\\"clearAllFilters()\\">\\r\\n                    <i class=\\"bi bi-arrow-clockwise\\"></i>{{\'COMMON.CLEAR_FILTERS\' | translate}}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiGridHeaderButtonsComponent","id":"component-UiGridHeaderButtonsComponent-adf913cfe1e63441db9824637a0780a2903d8995f1047b55a0617b9ff59e1ac5099f47854957ab6492ee1a407b0fdeeeaf5028280649cd801a155ac5dc3244eb","file":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid-header-buttons","styleUrls":["./grid-header-buttons.component.scss"],"styles":[],"templateUrl":["./grid-header-buttons.component.html"],"viewProviders":[],"inputsClass":[{"name":"buttons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nArray of buttons to be displayed in the grid header\\n","description":"<p>Array of buttons to be displayed in the grid header</p>\\n","line":40,"type":"IUiHeaderButton[]","decorators":[]},{"name":"collapseButtons","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1278,"end":1355,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1279,"end":1290,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Default to false until bulk action feature is implemented</p>\\n"}],"rawdescription":"\\n\\nBoolean to collapse the buttons into a dropdown menu\\n\\n","description":"<p>Boolean to collapse the buttons into a dropdown menu</p>\\n","line":47,"type":"boolean","decorators":[]},{"name":"dropdownButtonLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLabel for the dropdown button\\n","description":"<p>Label for the dropdown button</p>\\n","line":52,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"setButtonClasses","args":[{"name":"button","type":"IUiHeaderButton","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerates a string of CSS classes for a given button based on its properties.\\n\\n","description":"<p>Generates a string of CSS classes for a given button based on its properties.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1632,"end":1638,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"button"},"type":"IUiHeaderButton","deprecated":false,"deprecationMessage":"","tagName":{"pos":1626,"end":1631,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The button object containing properties to determine the CSS classes.</li>\\n</ul>\\n"},{"tagName":{"pos":1720,"end":1727,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A string of CSS classes to be applied to the button.</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\n\\r\\n/**\\r\\n * Interface for the parameters used by the grid header action buttons\\r\\n *\\r\\n * @todo This will be swapped out for the new interface for UiActionButtons when ready\\r\\n * @description see also IUiActionButton and IUiActionBtn\\r\\n */\\r\\nexport interface IUiHeaderButton {\\r\\n    id?: string;\\r\\n    icon?: string;\\r\\n    text?: string;\\r\\n    disabled?: boolean;\\r\\n    visible?: boolean;\\r\\n    iconVisible?: boolean;\\r\\n    iconPosition?: \'suffix\' | \'prefix\';\\r\\n    color?:\\r\\n        | \'btn-outline-primary\'\\r\\n        | \'btn-outline-secondary\'\\r\\n        | \'btn-outline-success\'\\r\\n        | \'btn-outline-danger\'\\r\\n        | \'btn-outline-warning\'\\r\\n        | \'btn-primary\'\\r\\n        | \'btn-outline-info\';\\r\\n    divider?: boolean;\\r\\n    tooltipText?: string;\\r\\n    clicked?: (params: any) => void;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-grid-header-buttons\',\\r\\n    templateUrl: \'./grid-header-buttons.component.html\',\\r\\n    styleUrls: [\'./grid-header-buttons.component.scss\'],\\r\\n})\\r\\nexport class UiGridHeaderButtonsComponent {\\r\\n    /**\\r\\n     * Array of buttons to be displayed in the grid header\\r\\n     */\\r\\n    @Input() public buttons: IUiHeaderButton[] = [];\\r\\n\\r\\n    /**\\r\\n     * Boolean to collapse the buttons into a dropdown menu\\r\\n     *\\r\\n     * @description Default to false until bulk action feature is implemented\\r\\n     */\\r\\n    @Input() public collapseButtons = false;\\r\\n\\r\\n    /**\\r\\n     * Label for the dropdown button\\r\\n     */\\r\\n    @Input() public dropdownButtonLabel: string;\\r\\n\\r\\n    /**\\r\\n     * Generates a string of CSS classes for a given button based on its properties.\\r\\n     *\\r\\n     * @param button - The button object containing properties to determine the CSS classes.\\r\\n     * @returns A string of CSS classes to be applied to the button.\\r\\n     */\\r\\n    public setButtonClasses(button: IUiHeaderButton): string {\\r\\n        let buttonClasses = \' \';\\r\\n        buttonClasses += this.collapseButtons ? \'dropdown-item \' : \'\';\\r\\n        buttonClasses += this.collapseButtons !== true && button.color ? button.color : \'btn-outline-primary \';\\r\\n        buttonClasses += button.iconPosition === \'prefix\' ? \' prefix \' : \' suffix \';\\r\\n        return buttonClasses;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".grid-header-buttons-wrapper {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    justify-content: flex-end;\\r\\n    gap: 0.5rem;\\r\\n\\r\\n    button.grid-header-button {\\r\\n        i.bi.suffix{\\r\\n            margin-left: 0.375rem;\\r\\n        }\\r\\n        i.bi.prefix{\\r\\n            margin-right: 0.375rem;\\r\\n        }\\r\\n    }\\r\\n    button.dropdown-toggle {\\r\\n        span {\\r\\n            padding-right: 0.5rem;\\r\\n        }\\r\\n        &.dropdown-label-empty {\\r\\n            &::after {\\r\\n                content: none;\\r\\n                display: none;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.grid-header-dropdown {\\r\\n    .grid-header-button.dropdown-item {\\r\\n        position: relative;\\r\\n        border: none;\\r\\n        i.bi {\\r\\n            position: absolute;\\r\\n            left: 0.5rem;\\r\\n            top: 0.5rem;\\r\\n        }\\r\\n        span {\\r\\n            margin-left: 1rem;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","styleUrl":"./grid-header-buttons.component.scss"}],"stylesData":"","templateData":"\x3c!-- Button template for Grid Header Buttons --\x3e\\r\\n<ng-template #gridHeaderButtons>\\r\\n    <ng-container *ngFor=\\"let button of buttons\\">\\r\\n        <button\\r\\n            [id]=\\"button.id\\"\\r\\n            *ngIf=\\"button.divider !== true && button.visible !== false\\"\\r\\n            type=\\"button\\"\\r\\n            class=\\"grid-header-button btn btn-sm d-inline-block\\"\\r\\n            [ngClass]=\\"setButtonClasses(button)\\"\\r\\n            ngbTooltip=\\"{{ button.tooltipText ?? button.text | translate }}\\"\\r\\n            container=\\"body\\"\\r\\n            [placement]=\\"\'top\'\\"\\r\\n            [disabled]=\\"button.disabled === true\\"\\r\\n            (click)=\\"button.clicked($event)\\"\\r\\n            >\\r\\n            <i *ngIf=\\"button.icon !== undefined && button.iconVisible !== false && button.iconPosition ===  \'prefix\'\\" class=\\"prefix bi\\" [ngClass]=\\"button.icon\\"></i>\\r\\n            <span>{{ button.text | translate }}</span>\\r\\n            <i *ngIf=\\"button.icon !== undefined && button.iconVisible !== false && button.iconPosition !==  \'prefix\'\\" class=\\"suffix bi\\" [ngClass]=\\"button.icon\\"></i>\\r\\n        </button>\\r\\n        <div *ngIf=\\"collapseButtons === true && button.divider === true\\" class=\\"dropdown-divider\\"></div>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\x3c!-- END button template --\x3e\\r\\n\\r\\n<div *ngIf=\\"buttons !== undefined\\" class=\\"grid-header-buttons-wrapper\\">\\r\\n    <ng-container *ngIf=\\"collapseButtons ?? true; then menuButtons; else inlineButtons\\"></ng-container>\\r\\n\\r\\n    \x3c!-- Display each button inline in grid header --\x3e\\r\\n    <ng-template #inlineButtons>\\r\\n        <ng-container *ngTemplateOutlet=\\"gridHeaderButtons\\"></ng-container>\\r\\n    </ng-template>\\r\\n\\r\\n    \x3c!-- Display buttons within a dropdown menu --\x3e\\r\\n    <ng-template #menuButtons>\\r\\n        <div ngbDropdown display=\\"dynamic\\" container=\\"body\\" dropdownClass=\\"grid-header-dropdown\\">\\r\\n            <button\\r\\n            type=\\"button\\"\\r\\n            class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\r\\n            [ngClass]=\\"{\'dropdown-label-empty\': !dropdownButtonLabel || dropdownButtonLabel === \'\' }\\"\\r\\n            container=\\"body\\"\\r\\n            ngbDropdownToggle\\r\\n            >\\r\\n                <span>{{ dropdownButtonLabel | translate }}</span>\\r\\n                <i\\r\\n                    *ngIf=\\"!dropdownButtonLabel || dropdownButtonLabel === \'\'\\"\\r\\n                    class=\\"bi bi-three-dots-vertical\\"\\r\\n                ></i>\\r\\n            </button>\\r\\n            <div ngbDropdownMenu>\\r\\n                <ng-container *ngTemplateOutlet=\\"gridHeaderButtons\\"></ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n</div>\\r\\n"},{"name":"UiGridHeaderComponent","id":"component-UiGridHeaderComponent-d9630938454da092cf793a1c4be2e692d515d4dfde48884ce53564641dc8f8ddd817bd8480b79a646a4f05b1d5aee944409b3c1172b76a76db2dac44d3d75a4d","file":"libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid-header","styleUrls":["./grid-header.component.scss"],"styles":[],"templateUrl":["./grid-header.component.html"],"viewProviders":[],"inputsClass":[{"name":"collapseHeaderButtonLabel","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"collapseHeaderButtons","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"countFilteredItems","deprecated":false,"deprecationMessage":"","line":16,"type":"any","decorators":[]},{"name":"countFilteredShown","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]},{"name":"countSelectedItems","deprecated":false,"deprecationMessage":"","line":15,"type":"any","decorators":[]},{"name":"countText","deprecated":false,"deprecationMessage":"","line":14,"type":"any","decorators":[]},{"name":"getHeaderButtons","defaultValue":"(thisItemData, thisRowId): IUiHeaderButton => {\\r\\n        return null;\\r\\n    }","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1195,"end":1223,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":1196,"end":1201,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":1202,"end":1214,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"thisItemData"},"isNameFirst":true,"isBracketed":false},{"pos":1223,"end":1248,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":1224,"end":1229,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":1230,"end":1239,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"thisRowId"},"isNameFirst":true,"isBracketed":false},{"pos":1248,"end":1282,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":1249,"end":1256,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiActionBtnConfig</p>\\n"}],"rawdescription":"\\n\\nFunction to get header buttons\\n\\n","description":"<p>Function to get header buttons</p>\\n","line":40,"type":"(thisItemData: any, thisRowId: any) => IUiHeaderButton","decorators":[]},{"name":"gridHeaderButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":993,"end":1062,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":994,"end":998,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"todo"},"comment":"<p>Can be swapped out with new interface buttons when ready</p>\\n"}],"rawdescription":"\\n\\nArray of header buttons to be displayed in the grid header\\n\\n","description":"<p>Array of header buttons to be displayed in the grid header</p>\\n","line":31,"type":"IUiHeaderButton[]","decorators":[]},{"name":"hasAnyFilter","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"infoText","deprecated":false,"deprecationMessage":"","line":13,"type":"any","decorators":[]},{"name":"titleText","deprecated":false,"deprecationMessage":"","line":12,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"gridHeaderNumber","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"headerEle","deprecated":false,"deprecationMessage":"","type":"HTMLElement","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"isTooltipDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"isEllipsisActive","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks to see if title has ellipsed text,\\nIf true, shows tooltip of full title\\n","description":"<p>Checks to see if title has ellipsed text,\\nIf true, shows tooltip of full title</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks to see if header title has ellipsed text on page load,\\nset Timeout lets element fully load before check\\n","description":"<p>Checks to see if header title has ellipsed text on page load,\\nset Timeout lets element fully load before check</p>\\n","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":62}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, HostListener, Input, OnInit } from \'@angular/core\';\\r\\n// Interfaces\\r\\nimport { IUiHeaderButton } from \'../grid-header-buttons/grid-header-buttons.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-grid-header\',\\r\\n    templateUrl: \'./grid-header.component.html\',\\r\\n    styleUrls: [\'./grid-header.component.scss\'],\\r\\n})\\r\\nexport class UiGridHeaderComponent implements OnInit, AfterViewInit {\\r\\n    @Input() public titleText;\\r\\n    @Input() public infoText;\\r\\n    @Input() public countText;\\r\\n    @Input() public countSelectedItems;\\r\\n    @Input() public countFilteredItems;\\r\\n    @Input() public countFilteredShown;\\r\\n    @Input() public hasAnyFilter;\\r\\n    @Input() public collapseHeaderButtons: boolean;\\r\\n    @Input() public collapseHeaderButtonLabel: string;\\r\\n\\r\\n    public gridHeaderNumber = 0;\\r\\n    public isTooltipDisabled = true;\\r\\n    public headerEle: HTMLElement;\\r\\n\\r\\n    /**\\r\\n     * Array of header buttons to be displayed in the grid header\\r\\n     *\\r\\n     * @todo Can be swapped out with new interface buttons when ready\\r\\n     */\\r\\n    @Input() public gridHeaderButtons: IUiHeaderButton[] = [];\\r\\n\\r\\n    /**\\r\\n     * Function to get header buttons\\r\\n     *\\r\\n     * @param thisItemData\\r\\n     * @param thisRowId\\r\\n     * @returns IUiActionBtnConfig\\r\\n     */\\r\\n    @Input() public getHeaderButtons = (thisItemData, thisRowId): IUiHeaderButton => {\\r\\n        return null;\\r\\n    };\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        // Adds class to ensure correct positioning of grid when header is shown\\r\\n        setTimeout(() => {\\r\\n            document.querySelector(\'.ag-root\').classList.add(\'grid-header-shown\');\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks to see if header title has ellipsed text on page load,\\r\\n     * set Timeout lets element fully load before check\\r\\n     */\\r\\n    public ngAfterViewInit(): void {\\r\\n        setTimeout(() => {\\r\\n            this.isEllipsisActive();\\r\\n        }, 100);\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        this.headerEle = document.getElementById(\'header-title\');\\r\\n        this.isEllipsisActive();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks to see if title has ellipsed text,\\r\\n     * If true, shows tooltip of full title\\r\\n     */\\r\\n    public isEllipsisActive() {\\r\\n        this.headerEle = document.getElementById(\'header-title\');\\r\\n\\r\\n        if (this.headerEle && this.headerEle.offsetWidth < this.headerEle.scrollWidth) {\\r\\n            this.isTooltipDisabled = false;\\r\\n        } else {\\r\\n            this.isTooltipDisabled = true;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.grid-header-content {\\r\\n    border: 1px solid $gray;\\r\\n    border-bottom: none;\\r\\n    border-top-right-radius: 4px;\\r\\n    border-top-left-radius: 4px;\\r\\n    text-overflow: ellipsis;\\r\\n    background-color: $white;\\r\\n    align-items: center;\\r\\n    padding: 0px 24px 0px 24px;\\r\\n    gap: 8px;\\r\\n    height: 56px;\\r\\n    min-height: 56px;\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n\\r\\n    .grid-header-content-right,\\r\\n    .grid-header-content-left {\\r\\n        flex: 1 1 auto;\\r\\n        display: flex;\\r\\n    }\\r\\n\\r\\n    .grid-header-content-left {\\r\\n        justify-content: flex-start;\\r\\n        gap: 0.5rem;\\r\\n    }\\r\\n\\r\\n    .grid-header-content-right {\\r\\n        justify-content: flex-end;\\r\\n    }\\r\\n\\r\\n    .header-count {\\r\\n        color: $gray-700;\\r\\n    }\\r\\n}\\r\\n\\r\\n.header-title {\\r\\n    text-overflow: ellipsis;\\r\\n    overflow: hidden;\\r\\n    display: inline-block;\\r\\n}\\r\\n","styleUrl":"./grid-header.component.scss"}],"stylesData":"","implements":["OnInit","AfterViewInit"],"templateData":"<div *ngIf=\\"titleText !== undefined\\" id=\\"grid-header\\" class=\\"grid-header\\">\\r\\n    <div class=\\"grid-header-content ag-header\\">\\r\\n        \x3c!-- LEFT SIDE --\x3e\\r\\n        <div class=\\"grid-header-content-left\\">\\r\\n            <div\\r\\n                id=\\"header-title\\"\\r\\n                class=\\"header-title\\"\\r\\n                container=\\"body\\"\\r\\n                ngbTooltip=\\"{{ titleText | translate }}\\"\\r\\n                [disableTooltip]=\\"isTooltipDisabled\\"\\r\\n                [placement]=\\"\'top\'\\"\\r\\n            >\\r\\n                {{ titleText | translate }}\\r\\n            </div>\\r\\n            \x3c!-- Please keep code for now; changing this to only show selected count, not the filtered count\\r\\n            <ng-container *ngIf=\\"hasAnyFilter === true\\">\\r\\n                <div *ngIf=\\"(countFilteredShown !== undefined && countFilteredShown > 0) && countSelectedItems <= 0\\" class=\\"header-count\\">\\r\\n                    ({{countFilteredShown}} {{ \'COMMON.AG_GRID.OF\' | translate }} {{ countText }})\\r\\n                </div>\\r\\n                <div *ngIf=\\"countSelectedItems !== undefined && countSelectedItems > 0\\" class=\\"header-count\\">\\r\\n                    ({{countSelectedItems}} of {{ countFilteredItems }} selected)\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\"hasAnyFilter === false\\">\\r\\n            </ng-container>\\r\\n            --\x3e\\r\\n                <div *ngIf=\\"countSelectedItems !== undefined && countSelectedItems > 0\\" class=\\"header-count\\">\\r\\n                    ({{countSelectedItems}} of {{ countText }} selected)\\r\\n                    \x3c!-- {{ \'GRID.MULTISELECT_SELECTED\' | translate: { selected: countSelectedItems, total: countText } }} --\x3e\\r\\n                </div>\\r\\n                <div *ngIf=\\"countSelectedItems === undefined || countSelectedItems === 0\\" class=\\"header-count\\">({{ countText }})</div>\\r\\n            <div>\\r\\n                <i\\r\\n                    *ngIf=\\"infoText !== undefined\\"\\r\\n                    class=\\"bi bi-question-circle-fill bi-sm\\"\\r\\n                    placement=\\"top\\"\\r\\n                    ngbTooltip=\\"{{ infoText | translate }}\\"\\r\\n                    container=\\"body\\"\\r\\n                ></i>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- RIGHT SIDE --\x3e\\r\\n        <div class=\\"grid-header-content-right\\">\\r\\n            <ui-grid-header-buttons\\r\\n                class=\\"grid-header-buttons\\"\\r\\n                [buttons]=\\"gridHeaderButtons\\"\\r\\n                [collapseButtons]=\\"collapseHeaderButtons\\"\\r\\n                [dropdownButtonLabel]=\\"collapseHeaderButtonLabel\\"\\r\\n            ></ui-grid-header-buttons>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiHeaderDropDownComponent","id":"component-UiHeaderDropDownComponent-64aef9861116d6216e7b3eca8587d567630172e495791affaaec19806d034e89eb0e509f46fe4c2573f046af577a725bdf0c527968dad1bc761c814a03b6d664","file":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-header-drop-down","styleUrls":["./drop-down.component.scss"],"styles":[],"templateUrl":["./drop-down.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","defaultValue":"{} as IUiDropdownConfig","deprecated":false,"deprecationMessage":"","line":22,"type":"IUiDropdownConfig","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"isOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"changeSelectedOption","args":[{"name":"option","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onOpenChange","args":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { IUiPageHeaderItem } from \'@lib/modules/layout/services/page-header-service/page-header.service\';\\r\\n\\r\\nexport interface IUiDropdownConfig {\\r\\n    id: string;\\r\\n    options: Array<IUiPageHeaderItem>;\\r\\n    selectedItem: IUiPageHeaderItem;\\r\\n    disabled: boolean;\\r\\n    type?: string;\\r\\n    tooltip?: string;\\r\\n    allCaps?: boolean;\\r\\n    placeHolderText?: string;\\r\\n    onChange?: (e: any) => void;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-header-drop-down\',\\r\\n    templateUrl: \'./drop-down.component.html\',\\r\\n    styleUrls: [\'./drop-down.component.scss\'],\\r\\n})\\r\\nexport class UiHeaderDropDownComponent implements OnInit {\\r\\n    @Input() public config: IUiDropdownConfig = {} as IUiDropdownConfig;\\r\\n    public isOpen = false;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        if (this.config !== undefined && this.config.selectedItem === undefined && this.config.options !== undefined) {\\r\\n            this.config.selectedItem = this.config.options[0];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onOpenChange(state: boolean) {\\r\\n        this.isOpen = state;\\r\\n    }\\r\\n\\r\\n    public changeSelectedOption(option: any) {\\r\\n        this.config.selectedItem = option;\\r\\n        if (this.config.onChange !== undefined) {\\r\\n            this.config.onChange(option);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\r\\n@import \'../../../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n// Note: These dropdown styles will be replace by global ui-dropdown styles when the variation available.\\r\\n\\r\\n.dropdown-menu {\\r\\n    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.15));\\r\\n}\\r\\n\\r\\n.dropdown-toggle::after {\\r\\n    margin-left: 0.6rem;\\r\\n}\\r\\n\\r\\n.btn-outline-primary {\\r\\n    color: $body-color;\\r\\n    border-color: $gray-400;\\r\\n}\\r\\n\\r\\n.btn-sm {\\r\\n    padding: 1px 20px;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n\\r\\n.dropdown-item {\\r\\n    &.selected-item {\\r\\n        background-color: $primary-050;\\r\\n        font-weight: 700;\\r\\n\\r\\n        &.active{\\r\\n            background-color: $primary-100;\\r\\n        }\\r\\n    }\\r\\n    &.active, &:active {\\r\\n        background-color: $primary-100;\\r\\n        color: inherit;\\r\\n    }\\r\\n}\\r\\n","styleUrl":"./drop-down.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":23},"implements":["OnInit"],"templateData":"<div *ngIf=\\"config !== undefined\\" ngbDropdown class=\\"d-inline-block\\" [placement]=\\"\'bottom-start\'\\" (openChange)=\\"onOpenChange($event)\\">\\r\\n    \x3c!-- <button\\r\\n        id=\\"languageSwitcherBtn\\"\\r\\n        type=\\"button\\"\\r\\n        class=\\"btn btn-outline-primary language-switcher-btn d-flex align-items-center justify-content-center btn-sm\\"\\r\\n        ngbDropdownToggle\\r\\n        container=\\"body\\"\\r\\n        [placement]=\\"\'top\'\\"\\r\\n        [ngbTooltip]=\\"config.tooltip | translate\\"\\r\\n        [ngClass]=\\"{\'dropdown-toggle-active\': isOpen === true, \'text-uppercase\': this.config.allCaps === true}\\"\\r\\n        [disabled]=\\"config.disabled\\">\\r\\n        <div>\\r\\n            <span *ngIf=\\"config.selectedItem !== null && config.selectedItem.type !== undefined\\" class=\\"dot sm me-2\\" [ngClass]=\\"config.selectedItem.type\\"></span>\\r\\n            <span *ngIf=\\"config.selectedItem !== null\\">\\r\\n                <ng-container *ngIf=\\"config.selectedItem.labelParams !== undefined\\">{{config.selectedItem.label | translate: config.selectedItem.labelParams }}</ng-container>\\r\\n                <ng-container *ngIf=\\"config.selectedItem.labelParams === undefined\\">{{config.selectedItem.label | translate }}</ng-container>\\r\\n            </span>\\r\\n            <span *ngIf=\\"config.selectedItem === null\\">\\r\\n                <ng-container *ngIf=\\"config.placeHolderText !== undefined\\">{{config.placeHolderText | translate}}</ng-container>\\r\\n                <ng-container *ngIf=\\"config.placeHolderText === undefined\\">{{\'COMMON.PLEASE_SELECT\' | translate}}</ng-container>\\r\\n            </span>\\r\\n        </div>\\r\\n    </button> --\x3e\\r\\n    \x3c!-- <div ngbDropdownMenu>\\r\\n        <button [id]=\\"\'languageSwitcherOptionBtn-\' + i\\"\\r\\n            class=\\"w-100 d-flex justify-content-between align-items-center\\"\\r\\n            ngbDropdownItem\\r\\n            *ngFor=\\"let option of config.options; let i = index\\"\\r\\n            [ngClass]=\\"{\'selected-item\': option === config.selectedItem}\\"\\r\\n            (click)=\\"changeSelectedOption(option)\\"\\r\\n            [disabled]=\\"option.disabled\\"\\r\\n            >\\r\\n            <div>\\r\\n                <span *ngIf=\\"option.type !== undefined\\" class=\\"dot sm me-2\\" [ngClass]=\\"option.type\\"></span>\\r\\n                <span [ngClass]=\\"{\'text-uppercase\': this.config.allCaps === true}\\" >{{option.label | translate: option.labelParams}}</span>\\r\\n            </div>\\r\\n        </button>\\r\\n    </div> --\x3e\\r\\n</div>"},{"name":"UiLanguageSwitcherComponent","id":"component-UiLanguageSwitcherComponent-96b0fec423b0501e906b546e4b44ef29d3f01bd8085f761f9e4da2c70664f173634029686a089068a9657326e9ae4799ed0415ad0f5034b6de56df71359b8f34","file":"libs/ui/src/lib/modules/layout/components/language-switcher/language-switcher.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-language-switcher","styleUrls":["./language-switcher.component.scss"],"styles":[],"templateUrl":["./language-switcher.component.html"],"viewProviders":[],"inputsClass":[{"name":"selectedLang","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"isOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"languageOptions","defaultValue":"[\\r\\n        { label: \'Deutsch\', labelCode: AcpSupportedLanguesLongCodeEnum.de, value: AcpSupportedLanguesEnum.de, disabled: false },\\r\\n        { label: \'English\', labelCode: AcpSupportedLanguesLongCodeEnum.en, value: AcpSupportedLanguesEnum.en, disabled: false },\\r\\n        { label: \'Español\', labelCode: AcpSupportedLanguesLongCodeEnum.es, value: AcpSupportedLanguesEnum.es, disabled: false },\\r\\n        { label: \'Français\', labelCode: AcpSupportedLanguesLongCodeEnum.fr, value: AcpSupportedLanguesEnum.fr, disabled: false },\\r\\n        { label: \'日本語\', labelCode: AcpSupportedLanguesLongCodeEnum.ja, value: AcpSupportedLanguesEnum.ja, disabled: false },\\r\\n        { label: \'Português\', labelCode: AcpSupportedLanguesLongCodeEnum.pt, value: AcpSupportedLanguesEnum.pt, disabled: false },\\r\\n        { label: \'中文\', labelCode: AcpSupportedLanguesLongCodeEnum.zh, value: AcpSupportedLanguesEnum.zh, disabled: false },\\r\\n        { label: \'한국인\', labelCode: AcpSupportedLanguesLongCodeEnum.ko, value: AcpSupportedLanguesEnum.ko, disabled: false },\\r\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"selectedOption","defaultValue":"this.languageOptions[1]","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123]}],"methodsClass":[{"name":"changeSelectedOption","args":[{"name":"option","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initializeLocalization","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onOpenChange","args":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\n// RxJs\\r\\nimport { Subject, take, takeUntil } from \'rxjs\';\\r\\n// Enums\\r\\nimport { AcpSupportedLanguesEnum, AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\r\\nimport { UiUserService } from \'@lib/services/user\';\\r\\n// Services\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-language-switcher\',\\r\\n    templateUrl: \'./language-switcher.component.html\',\\r\\n    styleUrls: [\'./language-switcher.component.scss\'],\\r\\n})\\r\\nexport class UiLanguageSwitcherComponent implements OnInit {\\r\\n    @Input() public selectedLang = \'\';\\r\\n\\r\\n    // Language Codes\\r\\n    // fr = fra = french\\r\\n    // zh = zho = chinese\\r\\n    // de = deu = german\\r\\n    // ja = jpn = japanese\\r\\n    // pt = por = portuguese\\r\\n    // es = esp = spanish\\r\\n    public languageOptions = [\\r\\n        { label: \'Deutsch\', labelCode: AcpSupportedLanguesLongCodeEnum.de, value: AcpSupportedLanguesEnum.de, disabled: false },\\r\\n        { label: \'English\', labelCode: AcpSupportedLanguesLongCodeEnum.en, value: AcpSupportedLanguesEnum.en, disabled: false },\\r\\n        { label: \'Español\', labelCode: AcpSupportedLanguesLongCodeEnum.es, value: AcpSupportedLanguesEnum.es, disabled: false },\\r\\n        { label: \'Français\', labelCode: AcpSupportedLanguesLongCodeEnum.fr, value: AcpSupportedLanguesEnum.fr, disabled: false },\\r\\n        { label: \'日本語\', labelCode: AcpSupportedLanguesLongCodeEnum.ja, value: AcpSupportedLanguesEnum.ja, disabled: false },\\r\\n        { label: \'Português\', labelCode: AcpSupportedLanguesLongCodeEnum.pt, value: AcpSupportedLanguesEnum.pt, disabled: false },\\r\\n        { label: \'中文\', labelCode: AcpSupportedLanguesLongCodeEnum.zh, value: AcpSupportedLanguesEnum.zh, disabled: false },\\r\\n        { label: \'한국인\', labelCode: AcpSupportedLanguesLongCodeEnum.ko, value: AcpSupportedLanguesEnum.ko, disabled: false },\\r\\n    ];\\r\\n\\r\\n    public selectedOption = this.languageOptions[1]; // English\\r\\n    public isOpen = false;\\r\\n\\r\\n    public constructor(private _translateService: TranslateService) {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.initializeLocalization();\\r\\n    }\\r\\n\\r\\n    public initializeLocalization() {\\r\\n        let languageOptionFound;\\r\\n        const navigatorLanguageSmallCode = window.navigator.language.slice(0, 2);\\r\\n        const userLang = localStorage.getItem(\'userLang\');\\r\\n\\r\\n        // If userLang is in local storage\\r\\n        if (userLang !== null) {\\r\\n            this._translateService.use(userLang);\\r\\n            this.selectedLang = userLang;\\r\\n            languageOptionFound = this.languageOptions.find((x) => x.value === this.selectedLang);\\r\\n            this.selectedOption = languageOptionFound;\\r\\n        }\\r\\n        // If not userLang in local storage, use navigator language\\r\\n        else if (this.languageOptions.find((x) => x.value === navigatorLanguageSmallCode) !== undefined) {\\r\\n            languageOptionFound = this.languageOptions.find((x) => x.value === navigatorLanguageSmallCode);\\r\\n            this.selectedOption = languageOptionFound;\\r\\n        }\\r\\n        // If naviator language not in supported languages list, use english.\\r\\n        else {\\r\\n            languageOptionFound = this.languageOptions.find((x) => x.value === \'en\');\\r\\n            this.selectedOption = languageOptionFound;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public changeSelectedOption(option) {\\r\\n        this.selectedOption = option;\\r\\n        localStorage.setItem(\'userLang\', this.selectedOption.value);\\r\\n        this._translateService.use(this.selectedOption.value);\\r\\n\\r\\n        // Commented for now but may be needed eventually\\r\\n        // this._userService\\r\\n        //     .savePreferredLanguage(this.selectedOption.labelCode)\\r\\n        //     .pipe(take(1))\\r\\n        //     .subscribe(() => {\\r\\n        //         localStorage.setItem(\'userLang\', this.selectedOption.value);\\r\\n        //         this._translateService.use(this.selectedOption.value);\\r\\n        //     });\\r\\n    }\\r\\n\\r\\n    public onOpenChange(state: boolean) {\\r\\n        this.isOpen = state;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.dropdown-menu {\\r\\n    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.15));\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    padding: inherit;\\r\\n    border-radius: 2px;\\r\\n\\r\\n    &.btn-outline-secondary:hover{\\r\\n        color: $secondary;\\r\\n        background-color: $white;\\r\\n    }\\r\\n\\r\\n    &.btn-outline-secondary:focus{\\r\\n        box-shadow: none;\\r\\n    }\\r\\n\\r\\n    .btn-code-text {\\r\\n        width: 26px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.language-switcher-btn {\\r\\n    width: 52px;\\r\\n    height: 26px;\\r\\n    font-size: 12px;\\r\\n    line-height: 12px;\\r\\n}\\r\\n\\r\\n.dropdown-item {\\r\\n    color: $gray-900;\\r\\n    height: 40px;\\r\\n\\r\\n    .code{\\r\\n        font-size: 0.75rem;\\r\\n    }\\r\\n\\r\\n    &.selected-item {\\r\\n        background-color: $primary-050;\\r\\n        font-weight: 700;\\r\\n\\r\\n        &.active{\\r\\n            background-color: $primary-100;\\r\\n        }\\r\\n\\r\\n        .code{\\r\\n            font-weight: normal;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.active, &:active {\\r\\n        background-color: $primary-100;\\r\\n        color: inherit;\\r\\n    }\\r\\n}\\r\\n\\r\\n .dropdown-toggle::after {\\r\\n    display: inline-block;\\r\\n    content: \\"\\";\\r\\n    background-image: url(\'data:image/svg+xml,<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"16\\" height=\\"16\\" fill=\\"currentColor\\" class=\\"bi bi-chevron-down\\" viewBox=\\"0 0 16 16\\"><path fill-rule=\\"evenodd\\" d=\\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\\"/></svg>\');\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: 0.7rem 0.7rem;\\r\\n    width: 0.7rem;\\r\\n    height: 0.7rem;\\r\\n    padding-left: 5px;\\r\\n    border: none;\\r\\n    transition: 150ms ease-in-out;\\r\\n    transform: rotate(0deg);\\r\\n}\\r\\n\\r\\n.dropdown-toggle-active::after {\\r\\n    transition: 250ms ease-in-out;\\r\\n    transform: rotate(180deg);\\r\\n}\\r\\n","styleUrl":"./language-switcher.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":38,"modifierKind":[123],"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div ngbDropdown class=\\"d-inline-block\\" [placement]=\\"\'bottom-end\'\\" (openChange)=\\"onOpenChange($event)\\">\\r\\n    <button\\r\\n        id=\\"languageSwitcherBtn\\"\\r\\n        type=\\"button\\"\\r\\n        class=\\"btn btn-outline-secondary text-uppercase language-switcher-btn d-flex align-items-center justify-content-center\\"\\r\\n        ngbDropdownToggle\\r\\n        container=\\"body\\"\\r\\n        [placement]=\\"\'bottom\'\\"\\r\\n        [ngbTooltip]=\\"\'Change language\'\\"\\r\\n        [ngClass]=\\"{\'dropdown-toggle-active\': isOpen === true}\\" >\\r\\n        <div class=\\"btn-code-text\\">{{selectedOption.labelCode}}</div>\\r\\n    </button>\\r\\n    <div ngbDropdownMenu>\\r\\n        <button [id]=\\"\'languageSwitcherOptionBtn-\' + i\\"\\r\\n            class=\\"w-100 d-flex justify-content-between align-items-center\\"\\r\\n            ngbDropdownItem\\r\\n            *ngFor=\\"let option of languageOptions; let i = index\\"\\r\\n            (click)=\\"changeSelectedOption(option)\\"\\r\\n            [ngClass]=\\"{\'selected-item\': option === selectedOption}\\">\\r\\n            <div>{{option.label}}</div>\\r\\n            <div class=\\"code text-uppercase\\">{{option.labelCode}}</div>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiLayout2Component","id":"component-UiLayout2Component-4b48f3518374e31baaab6b1c33b7b014b7c57c2a174aeb287e4abffa398691e35757f20fc14f988bde2b632b582a716b123a11d3c59c5eb2eaa3afe74a5ddf7b","file":"libs/ui/src/lib/modules/layout2/components/layout2/layout2.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-layout2","styleUrls":["./layout2.component.scss"],"styles":[],"templateUrl":["./layout2.component.html"],"viewProviders":[],"inputsClass":[{"name":"logoutRedirectUri","deprecated":false,"deprecationMessage":"","line":35,"type":"string","decorators":[]},{"name":"subsidairyList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":36,"type":"IUiDropdownPlusOption[]","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_ngUnsubscribe$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76,"modifierKind":[121,144]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"ActionItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":72,"modifierKind":[123]},{"name":"alignLeft","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"clientLogoUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"currentLang","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"featureFlagService","deprecated":false,"deprecationMessage":"","type":"UiFeatureFlagService","optional":false,"description":"","line":82,"modifierKind":[123]},{"name":"forceMenuClose","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"isAuthenticated","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":75,"modifierKind":[121]},{"name":"isFirstLogin","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"isHandset","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"isLoggedIn","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[123]},{"name":"isProductionEnv","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"isSupplier","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"isUserInternalRole","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"","line":80,"modifierKind":[123]},{"name":"linkBtnType","defaultValue":"UiButtonTypeEnum.LINK","deprecated":false,"deprecationMessage":"","type":"UiButtonTypeEnum","optional":false,"description":"","line":68,"modifierKind":[123]},{"name":"mdBtnSize","defaultValue":"UiButtonSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","type":"UiButtonSizeEnum","optional":false,"description":"","line":66,"modifierKind":[123]},{"name":"menuButtonTooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"menuItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiMenuItem>","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"onLogoutClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":244,"modifierKind":[123]},{"name":"onManageAssentAccountClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":249,"modifierKind":[123]},{"name":"outlineBtnType","defaultValue":"UiButtonTypeEnum.OUTLINE_PRIMARY","deprecated":false,"deprecationMessage":"","type":"UiButtonTypeEnum","optional":false,"description":"","line":69,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"","line":81,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":79,"modifierKind":[123]},{"name":"pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"profileManager","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"shouldLoadSubsidiarySelector","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":73,"modifierKind":[123]},{"name":"showAlert","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"showAppContainer","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"showMargin","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"showSideNav","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"smallMenu","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"smBtnSize","defaultValue":"UiButtonSizeEnum.SMALL","deprecated":false,"deprecationMessage":"","type":"UiButtonSizeEnum","optional":false,"description":"","line":67,"modifierKind":[123]},{"name":"subsidiarySelector","deprecated":false,"deprecationMessage":"","type":"UiSubsidiarySelectorComponent","optional":false,"description":"","line":37,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'subsidiarySelector\'"}],"modifierKind":[123]},{"name":"supplierHelpCenterUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"tabItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTab>","optional":false,"description":"","line":70,"modifierKind":[123]},{"name":"termsOfServiceUrl","defaultValue":"\'https://www.assent.com/terms-of-use-supplier-portal/\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"toolItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":71,"modifierKind":[123]},{"name":"tooltipDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"userEmailFirstLetter","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]}],"methodsClass":[{"name":"disableTooltip","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":261,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"hasPermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":197,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initializePendoIfReady","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":312,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"isShowAlertTrue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":304,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"isValidUri","args":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":323,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123,131]},{"name":"onScroll","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":274,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSubsidairyChanged","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":"","modifierKind":[123,131],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setFirstLoginFalse","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":238,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setProfile","args":[{"name":"user","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":278,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"user","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setTooltipText","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":228,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPendo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":201,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpen","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":224,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpenWhenDropdownClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":254,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavSize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":219,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\r\\nimport { Component, Input, OnInit, TemplateRef, ViewChild, HostListener, ElementRef, AfterViewInit } from \'@angular/core\';\\r\\nimport { NavigationEnd, Router } from \'@angular/router\';\\r\\n// Auth0\\r\\nimport { AuthService } from \'@auth0/auth0-angular\';\\r\\n// RxJS\\r\\nimport { Observable, Subject, filter, map, switchMap, takeUntil, tap } from \'rxjs\';\\r\\n// NGX Translate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Services\\r\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { UiFeatureFlagService } from \'@lib/modules/feature-flags/services/feature-flag.service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiPendoService } from \'@lib/services/analytics/pendo\';\\r\\nimport { UiPageHeaderService } from \'../../services/page-header-service/page-header.service\';\\r\\nimport { UiPageFooterService } from \'../../services/page-footer-service/page-footer.service\';\\r\\n// Components\\r\\nimport { UiSubsidiarySelectorComponent } from \'../subsidiary-selector/subsidiary-selector.component\';\\r\\n// Enums\\r\\nimport { UiButtonSizeEnum } from \'@lib/modules/button/enums/action-button-size.enum\';\\r\\nimport { UiButtonTypeEnum } from \'@lib/modules/button/enums/action-button-type.enum\';\\r\\n// Interfaces\\r\\nimport { IUiDropdownPlusOption } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\r\\nimport { IUiSubHeaderTab, IUiSubHeaderTool } from \'@lib/services/layout/header/header.service\';\\r\\nimport { IUiMenuItem } from \'@lib/services/menu/menu.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-layout2\',\\r\\n    templateUrl: \'./layout2.component.html\',\\r\\n    styleUrls: [\'./layout2.component.scss\'],\\r\\n})\\r\\nexport class UiLayout2Component implements OnInit {\\r\\n    @Input() public logoutRedirectUri?: string;\\r\\n    @Input() public subsidairyList: IUiDropdownPlusOption[] = [];\\r\\n    @ViewChild(\'subsidiarySelector\') public subsidiarySelector: UiSubsidiarySelectorComponent;\\r\\n\\r\\n    public actionBtnsRef: TemplateRef<any>;\\r\\n    public pageTitle = \'\';\\r\\n    public isHandset = false;\\r\\n    public showSideNav = true;\\r\\n    public smallMenu = false;\\r\\n    public forceMenuClose = false;\\r\\n    public showAppContainer = false;\\r\\n    public alignLeft = false;\\r\\n    public tooltipDisabled = false;\\r\\n    public menuButtonTooltipText = \'\';\\r\\n    public userEmail;\\r\\n    public userEmailFirstLetter;\\r\\n    public clientLogoUrl = \'\';\\r\\n    public currentLang = \'\';\\r\\n    public isSupplier = false;\\r\\n    public isFirstLogin = false;\\r\\n    public isUserInternalRole = false;\\r\\n    public showAlert = false;\\r\\n    public supplierHelpCenterUrl = \'\';\\r\\n    public termsOfServiceUrl = \'https://www.assent.com/terms-of-use-supplier-portal/\';\\r\\n    public profileManager = true;\\r\\n    public showMargin = true;\\r\\n\\r\\n    public menuItems: Array<IUiMenuItem> = [];\\r\\n    public isProductionEnv = false;\\r\\n    public isLoggedIn = false;\\r\\n\\r\\n    public mdBtnSize: UiButtonSizeEnum = UiButtonSizeEnum.MEDIUM;\\r\\n    public smBtnSize: UiButtonSizeEnum = UiButtonSizeEnum.SMALL;\\r\\n    public linkBtnType: UiButtonTypeEnum = UiButtonTypeEnum.LINK;\\r\\n    public outlineBtnType: UiButtonTypeEnum = UiButtonTypeEnum.OUTLINE_PRIMARY;\\r\\n    public tabItems: Array<IUiSubHeaderTab> = [];\\r\\n    public toolItems: Array<IUiSubHeaderTool> = [];\\r\\n    public ActionItems: Array<IUiSubHeaderTool> = [];\\r\\n    public shouldLoadSubsidiarySelector = false;\\r\\n\\r\\n    private isAuthenticated = false;\\r\\n    private readonly _ngUnsubscribe$ = new Subject();\\r\\n\\r\\n    constructor(\\r\\n        public pageHeaderService: UiPageHeaderService,\\r\\n        public layoutService: UiLayoutService,\\r\\n        public pageFooterService: UiPageFooterService,\\r\\n        public featureFlagService: UiFeatureFlagService,\\r\\n        private _httpClient: HttpClient,\\r\\n        private _translateService: TranslateService,\\r\\n        private _router: Router,\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _auth0Service: AuthService,\\r\\n        private _authService: UiAuthService,\\r\\n        private _pendoService: UiPendoService\\r\\n    ) {}\\r\\n\\r\\n    public async ngOnInit() {\\r\\n        this.shouldLoadSubsidiarySelector = false;\\r\\n\\r\\n        // Manage layout elements based on the user\'s authentication status\\r\\n        // TODO: Manage user authentication status in the user service?\\r\\n        this._auth0Service.isAuthenticated$\\r\\n            .pipe(\\r\\n                takeUntil(this._ngUnsubscribe$),\\r\\n                tap((isAuthenticated: boolean) => {\\r\\n                    this.isAuthenticated = isAuthenticated;\\r\\n                }),\\r\\n                filter((isAuthenticated: boolean) => isAuthenticated), // Only continue if authenticated\\r\\n                switchMap(() => this._auth0Service.user$),\\r\\n                tap((user: any) => {\\r\\n                    this.userEmail = user.email;\\r\\n                    this.setProfile(user);\\r\\n                    this.initializePendoIfReady();\\r\\n                })\\r\\n            )\\r\\n            .subscribe();\\r\\n\\r\\n        this.isProductionEnv = this._configurationService.environmentVariables.production;\\r\\n        this.pageHeaderService.pageTitle = \'Welcome to Assent\';\\r\\n        this.pageHeaderService.showPageHeader = false;\\r\\n        this.termsOfServiceUrl = this._configurationService.appConfig.links.termsOfService;\\r\\n\\r\\n        // Layout Service Events START\\r\\n        this.layoutService.onCloseSideNav.subscribe(() => {\\r\\n            this.forceMenuClose = true;\\r\\n            this.showSideNav = false;\\r\\n        });\\r\\n\\r\\n        this.layoutService.showMargins = this.showMargin;\\r\\n        this.layoutService.showContainer = this.showAppContainer;\\r\\n        this.layoutService.alignLeft = this.alignLeft;\\r\\n\\r\\n        this._authService.permissionsLoaded$.subscribe((loaded) => {\\r\\n            if (loaded) {\\r\\n                setTimeout(() => {\\r\\n                    this.menuItems = this.layoutService.appMenu as IUiMenuItem[];\\r\\n                    this.isLoggedIn = loaded && this.isAuthenticated;\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n\\r\\n        this._authService.subsidiariesLoaded$.subscribe((subsidiaries) => {\\r\\n            try {\\r\\n                if (subsidiaries && subsidiaries.length > 0) {\\r\\n                    // Get the stored activeOrgGuid from local storage\\r\\n                    const currentOrgGuid = this._authService.activeOrgGuid;\\r\\n\\r\\n                    // Map subsidiaries and set the \'value\' (selected state) based on storedOrgGuid\\r\\n                    this.subsidairyList = subsidiaries.map((subsidiary) => {\\r\\n                        return {\\r\\n                            label: subsidiary.name,\\r\\n                            value: subsidiary.partyGuid === currentOrgGuid, // Select if it matches storedOrgGuid\\r\\n                            id: subsidiary.partyGuid,\\r\\n                            disabled: false,\\r\\n                            data: subsidiary.name,\\r\\n                        };\\r\\n                    });\\r\\n\\r\\n                    this.shouldLoadSubsidiarySelector = true;\\r\\n\\r\\n                    setTimeout(() => {\\r\\n                        if (currentOrgGuid) {\\r\\n                            // Find the index of the stored subsidiary\\r\\n                            const indexToSelect = this.subsidairyList.findIndex((subsidiary) => subsidiary.id === currentOrgGuid);\\r\\n                            if (indexToSelect !== -1) {\\r\\n                                // Select the stored subsidiary\\r\\n                                this.subsidiarySelector.selectOptionByIndex(indexToSelect);\\r\\n                            } else {\\r\\n                                // If storedOrgGuid not found, select the first subsidiary\\r\\n                                this.subsidiarySelector.selectOptionByIndex(0);\\r\\n                            }\\r\\n                        } else {\\r\\n                            // No storedOrgGuid, select the first subsidiary\\r\\n                            this.subsidiarySelector.selectOptionByIndex(0);\\r\\n                        }\\r\\n                    }, 100);\\r\\n                }\\r\\n            } catch (error) {\\r\\n                console.error(\' Error -> Subsidiaries not loaded.\');\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public async onSubsidairyChanged($event) {\\r\\n        // If the selector component is loaded and selected subsidiary is different from the current one\\r\\n        if (this.shouldLoadSubsidiarySelector && this._authService.activeOrgGuid !== this.subsidiarySelector.selectedOption.id) {\\r\\n            // Show loading screen\\r\\n            const loadingScreen: HTMLElement = document.getElementById(\'loading-screen\');\\r\\n            loadingScreen.classList.remove(\'d-none\');\\r\\n            const aspRoot: HTMLElement = document.getElementById(\'asp-root\');\\r\\n            aspRoot.classList.add(\'invisible\');\\r\\n\\r\\n            // Navigate to application home\\r\\n            this._router.navigate([\'\']);\\r\\n            this._authService.activeOrgGuid = this.subsidiarySelector.selectedOption.id;\\r\\n\\r\\n            // Subsidiary changed - now call initializeApp to reload permissions\\r\\n            this._authService.initializeApp();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public hasPermission(permission: string): boolean {\\r\\n        return this._authService.hasPermission(permission);\\r\\n    }\\r\\n\\r\\n    public setupPendo() {\\r\\n        // If user is authenticated and Pendo key is set in config then initialize Pendo\\r\\n        if (this.isAuthenticated && this._pendoService.pendoApiKey) {\\r\\n            this._pendoService.initVisitorInfo();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Logout the user\\r\\n    public logout(): void {\\r\\n        // Temporary Logout capability for Pilot\\r\\n        if (this.isValidUri(this.logoutRedirectUri)) {\\r\\n            if (this.isAuthenticated && this._pendoService.pendoApiKey) {\\r\\n                this._pendoService.anonymizeVisitorInfo();\\r\\n            }\\r\\n            this._auth0Service.logout({ logoutParams: { returnTo: this.logoutRedirectUri } });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public toggleSideNavSize() {\\r\\n        this.smallMenu = !this.smallMenu;\\r\\n        // this.layoutService.onOpenSideNav.emit(this.smallMenu);\\r\\n    }\\r\\n\\r\\n    public toggleSideNavOpen() {\\r\\n        // this.layoutService.toogleSideNav();\\r\\n    }\\r\\n\\r\\n    public setTooltipText() {\\r\\n        if (this.smallMenu) {\\r\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.EXPAND_MENU\');\\r\\n        } else {\\r\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.COLLAPSE_MENU\');\\r\\n        }\\r\\n        return this.menuButtonTooltipText;\\r\\n    }\\r\\n\\r\\n    //Sets the first login to false after pilot alert is dismissed - alert will not show again\\r\\n    public setFirstLoginFalse() {\\r\\n        this.isFirstLogin = false;\\r\\n        localStorage.setItem(\'isFirstLogin\', \'false\');\\r\\n        this.layoutService.updateLayout();\\r\\n    }\\r\\n\\r\\n    public onLogoutClick = () => {\\r\\n        // this._authenticationService.logout(true);\\r\\n        this.logout();\\r\\n    };\\r\\n\\r\\n    public onManageAssentAccountClick = () => {\\r\\n        this._router.navigate([\'/profile-manager\']);\\r\\n    };\\r\\n\\r\\n    // When sidenav is collapsed, child items are hidden. When dropdown icon is clicked, sidenav expands to show children\\r\\n    public toggleSideNavOpenWhenDropdownClicked() {\\r\\n        if (this.smallMenu) {\\r\\n            this.smallMenu = !this.smallMenu;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Only enable tooltips when sidenav is collapsed\\r\\n    public disableTooltip() {\\r\\n        if (this.smallMenu) {\\r\\n            this.tooltipDisabled = false;\\r\\n        } else {\\r\\n            this.tooltipDisabled = true;\\r\\n        }\\r\\n        return this.tooltipDisabled;\\r\\n    }\\r\\n\\r\\n    // public openModalFeedback() {\\r\\n    //     this._modalService.open(UiFeedbackModalComponent, new UiModalConfig());\\r\\n    // }\\r\\n\\r\\n    public onScroll($event) {\\r\\n        this.layoutService.onScroll.emit($event);\\r\\n    }\\r\\n\\r\\n    private setProfile(user: any) {\\r\\n        if (user !== null && user.email !== null && user.email !== undefined) {\\r\\n            this.userEmailFirstLetter = user.email.charAt(0); // TODO: does this need to be 2 chars?\\r\\n\\r\\n            // Checks if user is internal based on the email domain - if true will not show feedback alert\\r\\n            if (user && user.email) {\\r\\n                const emailDomain = user.email.split(\'@\')[1];\\r\\n                const allowedDomains = [\'assent.com\', \'assentcompliance.com\'];\\r\\n                if (allowedDomains.includes(emailDomain)) {\\r\\n                    this.isUserInternalRole = true;\\r\\n                } else {\\r\\n                    this.isUserInternalRole = false;\\r\\n                }\\r\\n            } else {\\r\\n                this.isUserInternalRole = false;\\r\\n            }\\r\\n            this.isShowAlertTrue();\\r\\n        } else {\\r\\n            this.userEmailFirstLetter = \'\';\\r\\n        }\\r\\n\\r\\n        if (user !== null && user.picture !== null && user.picture !== undefined) {\\r\\n            this.clientLogoUrl = user.picture;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private isShowAlertTrue() {\\r\\n        if (this.isUserInternalRole === false && this.isFirstLogin === true && !this.layoutService.isDeveloperHub) {\\r\\n            this.showAlert = true;\\r\\n        } else {\\r\\n            this.showAlert = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private initializePendoIfReady() {\\r\\n        // Check if both pendoApiKey and isAuthenticated are set\\r\\n        if (this._pendoService.pendoApiKey && this.isAuthenticated) {\\r\\n            this._pendoService.initializePendo(\\r\\n                this.userEmail,\\r\\n                this._pendoService.pendoApiKey,\\r\\n                this._configurationService.environmentVariables.production ? \'production\' : \'non-prod\'\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private isValidUri(val: string): boolean {\\r\\n        if (!val) {\\r\\n            return false;\\r\\n        }\\r\\n\\r\\n        // Check for relative paths like /callback\\r\\n        if (val.startsWith(\'/\')) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        try {\\r\\n            new URL(val);\\r\\n            return true;\\r\\n        } catch (e) {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n#footer {\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    width: calc(100% - 280px);\\r\\n    z-index: 100;\\r\\n    padding-right: $window-scrollbar-width;\\r\\n\\r\\n    &.scrollbar-is-visible {\\r\\n        width: calc(100% - 280px - 8px);\\r\\n    }\\r\\n\\r\\n    &.hide-overflow {\\r\\n        // No scrollbar\\r\\n        width: calc(100% - 280px);\\r\\n    }\\r\\n\\r\\n    &.small-side-nav {\\r\\n        // Small side menu\\r\\n        width: calc(100% - 52px);\\r\\n        &.scrollbar-is-visible {\\r\\n            width: calc(100% - 52px - 8px);\\r\\n        }\\r\\n        &.hide-overflow {\\r\\n            // No scrollbar\\r\\n            width: calc(100% - 52px);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n.container {\\r\\n    padding-right: 0;\\r\\n    padding-left: 0;\\r\\n\\r\\n    &.alignLeft {\\r\\n        margin-left: 0 !important;\\r\\n        margin-right: 0 !important;\\r\\n    }\\r\\n}\\r\\n\\r\\n.toasts-container {\\r\\n    left: calc(50% - 80px);\\r\\n    width: $toast-width;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 0.5rem;\\r\\n    margin-top: 24px;\\r\\n\\r\\n    &.small {\\r\\n        left: calc(50% - 180px);\\r\\n    }\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n    width: 280px;\\r\\n    background: $secondary-primary-90-subtle !important;\\r\\n    //overflow: hidden;\\r\\n\\r\\n    //-moz-box-shadow: inset 0 5px 5px $gray-500;\\r\\n    //-webkit-box-shadow: inset 0 5px 5px $gray-500;\\r\\n    //box-shadow: inset 0 5px 5px $gray-500;\\r\\n\\r\\n    .item-div {\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        align-items: center;\\r\\n        gap: 8px;\\r\\n        padding-top: 8px;\\r\\n        padding-bottom: 8px;\\r\\n        justify-content: center;\\r\\n\\r\\n        .bi {\\r\\n            font-size: 16px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .item-child {\\r\\n        padding: 8px;\\r\\n        margin-bottom: 4px;\\r\\n        margin-left: 28px;\\r\\n        font-size: 14px;\\r\\n        width: 160px;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        width: 52px;\\r\\n\\r\\n        .item-div {\\r\\n            text-align: center;\\r\\n            align-items: center;\\r\\n            flex-direction: column;\\r\\n            gap: 8px;\\r\\n            width: 32px;\\r\\n\\r\\n            .bi {\\r\\n                font-size: 22px;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        .parent {\\r\\n            .item-div {\\r\\n                padding-bottom: 0px;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        .item-child {\\r\\n            padding-left: 0 !important;\\r\\n            justify-content: center;\\r\\n        }\\r\\n\\r\\n        .nav-children {\\r\\n            text-align: center;\\r\\n            justify-content: center;\\r\\n            height: auto;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.nav-head {\\r\\n    width: 248px;\\r\\n\\r\\n    &.small {\\r\\n        width: 42px;\\r\\n        padding-right: 0px;\\r\\n        padding-left: 8px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.left-nav-divider {\\r\\n    color: $gray-500;\\r\\n    border: 0.5px;\\r\\n    opacity: 0.25;\\r\\n\\r\\n    &.small {\\r\\n        width: 34px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.app-logo {\\r\\n    height: 26px;\\r\\n    margin-top: 32px;\\r\\n    margin-bottom: 24px;\\r\\n    padding-right: 5px;\\r\\n}\\r\\n\\r\\n.app-logo-small {\\r\\n    height: 32px;\\r\\n    width: 32px;\\r\\n    margin-top: 16px;\\r\\n    margin-bottom: 16px;\\r\\n}\\r\\n\\r\\n.left-side-menu {\\r\\n    height: calc(100vh - 150px);\\r\\n    width: 100%;\\r\\n    overflow-y: auto;\\r\\n\\r\\n    .nav {\\r\\n        gap: 4px;\\r\\n    }\\r\\n\\r\\n    &::-webkit-scrollbar {\\r\\n        width: 8px;\\r\\n        background-color: transparent;\\r\\n        border: none;\\r\\n        box-shadow: none;\\r\\n    }\\r\\n\\r\\n    &::-webkit-scrollbar-thumb {\\r\\n        background: $gray-400;\\r\\n        border-radius: 8px;\\r\\n    }\\r\\n\\r\\n    &::-webkit-scrollbar-thumb:hover {\\r\\n        background: $gray-600;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        height: calc(100vh - 298px);\\r\\n        margin-top: 0;\\r\\n        margin-bottom: 88px;\\r\\n        padding-top: 0px;\\r\\n\\r\\n        .row > * {\\r\\n            padding-left: 2px;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.help-group {\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding-right: 16px;\\r\\n    padding-bottom: 32px;\\r\\n    width: $side-nav-width;\\r\\n    //overflow: hidden;\\r\\n\\r\\n    &.small {\\r\\n        width: 50px;\\r\\n        padding: 0px;\\r\\n        margin-left: -2px;\\r\\n        align-items: center;\\r\\n\\r\\n        .row > * {\\r\\n            padding-left: 0px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .left-nav-bottom-divider {\\r\\n        color: $gray-500;\\r\\n        border: 0.5px;\\r\\n        width: 248px;\\r\\n        display: flex;\\r\\n        align-items: center;\\r\\n        align-content: center;\\r\\n        opacity: 0.25;\\r\\n\\r\\n        &.small {\\r\\n            width: 34px;\\r\\n            margin-left: 4px !important;\\r\\n\\r\\n            .row > * {\\r\\n                padding-left: 0px;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .help-item {\\r\\n        color: $gray-500 !important;\\r\\n        font-weight: normal !important;\\r\\n        background-color: transparent;\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        align-items: center;\\r\\n        padding: 8px 16px;\\r\\n        gap: 8px;\\r\\n\\r\\n        &.small {\\r\\n            padding: 0px 7px 7px 7px;\\r\\n            flex-direction: row;\\r\\n            justify-content: flex-start;\\r\\n            align-items: center;\\r\\n            gap: 10px;\\r\\n\\r\\n            &.bottom {\\r\\n                padding: 0px 7px 32px 7px;\\r\\n            }\\r\\n\\r\\n            .bi {\\r\\n                padding: 9px 7px;\\r\\n                font-size: 22px;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    a {\\r\\n        color: $gray-500;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n\\r\\n        &:hover {\\r\\n            color: $gray-200 !important;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n    color: $gray-500;\\r\\n    font-size: 16px;\\r\\n    height: auto;\\r\\n    padding: 4px 8px 4px 16px;\\r\\n    width: 95%;\\r\\n    text-decoration: none;\\r\\n\\r\\n    .is-active {\\r\\n        background-color: $secondary-700;\\r\\n        color: $white !important;\\r\\n        font-weight: bold !important;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n\\r\\n    &:hover {\\r\\n        background-color: $secondary-700;\\r\\n        color: $gray-500;\\r\\n        border-radius: 4px;\\r\\n        cursor: pointer;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        display: flex;\\r\\n        color: $gray-500;\\r\\n        margin-left: 6px;\\r\\n        padding: 4px 8px 4px 8px;\\r\\n        width: 36px;\\r\\n        height: 40px;\\r\\n\\r\\n        .is-active {\\r\\n            color: $white;\\r\\n        }\\r\\n\\r\\n        &:hover {\\r\\n            background-color: $secondary-700;\\r\\n            color: $gray-500 !important;\\r\\n            font-weight: bold !important;\\r\\n            border-radius: 4px;\\r\\n        }\\r\\n\\r\\n        &.parent {\\r\\n            height: fit-content;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.is-active {\\r\\n    background-color: $secondary-700;\\r\\n    color: $white !important;\\r\\n    font-weight: bold !important;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.menu-button {\\r\\n    transition: 300ms ease-in-out;\\r\\n    transform: rotate(0deg);\\r\\n}\\r\\n\\r\\n.menu-button.rotated {\\r\\n    transform: rotate(180deg);\\r\\n}\\r\\n\\r\\n.main-container {\\r\\n    height: 100%;\\r\\n    overflow: hidden;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    position: absolute;\\r\\n\\r\\n    .row > * {\\r\\n        padding-right: 2px;\\r\\n        padding-left: 16px;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        .row > * {\\r\\n            padding-left: 0px;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.main-content-wrapper {\\r\\n    width: calc(100% - $side-nav-width); // Second operant must be the width of the side bar\\r\\n    height: 100vh;\\r\\n    overflow-y: auto;\\r\\n\\r\\n    &.small-side-nav {\\r\\n        width: calc(100% - $side-nav-sm-width); // Second operant must be the width of the small side bar\\r\\n    }\\r\\n\\r\\n    &.no-side-nav {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    &.hide-overflow {\\r\\n        overflow-y: inherit;\\r\\n    }\\r\\n}\\r\\n\\r\\n.main-content {\\r\\n    position: relative;\\r\\n\\r\\n    &.calc-top {\\r\\n        height: calc(100% - 104px); // Note: This is causing scrollbar issue that will need to be adressed.\\r\\n    }\\r\\n\\r\\n    &.has-subheader {\\r\\n        padding-top: 0px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.alert-info {\\r\\n    margin: 20px 20px 0px 20px;\\r\\n}\\r\\n\\r\\n.feedback-text-wrapper {\\r\\n    display: inline;\\r\\n    flex-wrap: wrap;\\r\\n    text-align: justify;\\r\\n}\\r\\n\\r\\n.toolbar {\\r\\n    background-color: $white;\\r\\n    min-height: 56px;\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n    z-index: 3;\\r\\n    display: flex;\\r\\n    box-sizing: border-box;\\r\\n    flex-direction: column;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-header {\\r\\n    display: flex;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n    white-space: nowrap;\\r\\n    min-height: 56px;\\r\\n    height: 56px;\\r\\n    box-shadow: 0px 0px 5px $gray-500;\\r\\n    background-color: $white;\\r\\n    padding-left: 16px;\\r\\n}\\r\\n\\r\\n.title-bar-button {\\r\\n    border-radius: 0;\\r\\n    border: 0;\\r\\n    background: transparent;\\r\\n    padding: 0;\\r\\n    min-width: 0;\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    flex-shrink: 0;\\r\\n    line-height: 40px;\\r\\n\\r\\n    &.small {\\r\\n        margin-top: 32px;\\r\\n    }\\r\\n\\r\\n    .title-bar-icon {\\r\\n        width: 30px;\\r\\n        height: 30px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.menu-icon {\\r\\n    border-radius: 50px;\\r\\n    background: transparent;\\r\\n    border-color: $secondary-600;\\r\\n    background-color: $secondary-600;\\r\\n    color: $white;\\r\\n    flex-direction: row;\\r\\n    display: flex;\\r\\n    place-content: center;\\r\\n    align-items: center;\\r\\n\\r\\n    &:active {\\r\\n        background-color: $secondary-800;\\r\\n    }\\r\\n\\r\\n    &:hover {\\r\\n        background-color: $secondary-700;\\r\\n    }\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.screen-size-badge {\\r\\n    font-weight: bold;\\r\\n    font-size: 13px;\\r\\n}\\r\\n\\r\\n.text-uppercase {\\r\\n    padding: 0;\\r\\n\\r\\n    &:hover {\\r\\n        color: $white;\\r\\n    }\\r\\n}\\r\\n\\r\\n$avatarColours: (\\r\\n    \'primary-100\': $primary-100,\\r\\n    \'primary-200\': $primary-200,\\r\\n    \'primary-300\': $primary-300,\\r\\n    \'primary-400\': $primary-400,\\r\\n    \'primary-500\': $primary-500,\\r\\n    \'primary-600\': $primary-600,\\r\\n    \'primary-700\': $primary-700,\\r\\n    \'primary-800\': $primary-800,\\r\\n    \'primary-900\': $primary-900,\\r\\n    \'secondary-100\': $secondary-100,\\r\\n    \'secondary-200\': $secondary-200,\\r\\n    \'secondary-300\': $secondary-300,\\r\\n    \'secondary-400\': $secondary-400,\\r\\n    \'secondary-500\': $secondary-500,\\r\\n    \'secondary-600\': $secondary-600,\\r\\n    \'secondary-700\': $secondary-700,\\r\\n    \'secondary-800\': $secondary-800,\\r\\n    \'secondary-900\': $secondary-900,\\r\\n    \'tertiary-100\': $tertiary-100,\\r\\n    \'tertiary-200\': $tertiary-200,\\r\\n    \'tertiary-300\': $tertiary-300,\\r\\n    \'tertiary-400\': $tertiary-400,\\r\\n    \'tertiary-500\': $tertiary-500,\\r\\n    \'tertiary-600\': $tertiary-600,\\r\\n    \'tertiary-700\': $tertiary-700,\\r\\n    \'tertiary-800\': $tertiary-800,\\r\\n    \'tertiary-900\': $tertiary-900,\\r\\n    \'quaternary-100\': $quaternary-100,\\r\\n    \'quaternary-200\': $quaternary-200,\\r\\n    \'quaternary-300\': $quaternary-300,\\r\\n    \'quaternary-400\': $quaternary-400,\\r\\n    \'quaternary-500\': $quaternary-500,\\r\\n    \'quaternary-600\': $quaternary-600,\\r\\n    \'quaternary-700\': $quaternary-700,\\r\\n    \'quaternary-800\': $quaternary-800,\\r\\n    \'quaternary-900\': $quaternary-900,\\r\\n    \'quinary-100\': $quinary-100,\\r\\n    \'quinary-200\': $quinary-200,\\r\\n    \'quinary-300\': $quinary-300,\\r\\n    \'quinary-400\': $quinary-400,\\r\\n    \'quinary-500\': $quinary-500,\\r\\n    \'quinary-600\': $quinary-600,\\r\\n    \'quinary-700\': $quinary-700,\\r\\n    \'quinary-800\': $quinary-800,\\r\\n    \'quinary-900\': $quinary-900,\\r\\n);\\r\\n@mixin avatarHeaderImage ($size: \'lg\', $colour: \'tertiary\', $shade: 500) {\\r\\n    $circleSize: 2rem;\\r\\n    $borderSize: 3px;\\r\\n    @if $size == \\"xl\\" {\\r\\n        $circleSize: 3rem;\\r\\n        $borderSize: 3px;\\r\\n    } @else if $size == \\"lg\\" {\\r\\n        $circleSize: 2rem;\\r\\n        $borderSize: 3px;\\r\\n    } @else if $size == \\"md\\" {\\r\\n        $circleSize: 1.5rem;\\r\\n        $borderSize: 2px;\\r\\n    } @else if $size == \\"sm\\" {\\r\\n        $circleSize: 1rem;\\r\\n        $borderSize: 1px;\\r\\n    }\\r\\n\\r\\n    border-radius: 50%;\\r\\n    height: $circleSize;\\r\\n    width: $circleSize;\\r\\n    border: solid $borderSize $white;\\r\\n    background-color: map-get($map: $avatarColours, $key: #{$colour+\'-\'+$shade});\\r\\n    font-size: 14px;\\r\\n    color: $white;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: space-evenly;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.user-info {\\r\\n    cursor: pointer;\\r\\n    margin: 12px 32px 12px 0px;\\r\\n\\r\\n    //Profile image on top bar\\r\\n    .avatar-header-image {\\r\\n        @include avatarHeaderImage(\'lg\'); //ex. avatarHeaderImage(\'lg\',\'quinary\',600);\\r\\n    }\\r\\n\\r\\n    .username {\\r\\n        color: $primary;\\r\\n        text-decoration: none;\\r\\n        font-weight: bold;\\r\\n        cursor: pointer;\\r\\n\\r\\n        text-decoration: none;\\r\\n        font-weight: 700;\\r\\n        font-size: 14px;\\r\\n        line-height: 21px;\\r\\n        padding-bottom: 16px;\\r\\n    }\\r\\n}\\r\\n\\r\\n//Dropdown menu\\r\\n.dropdown-menu {\\r\\n    padding-top: 0;\\r\\n    padding-bottom: 0;\\r\\n    box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.15);\\r\\n    top: 8px !important;\\r\\n\\r\\n    //Content of dropdown menu\\r\\n    .profile-dropdown {\\r\\n        // width: 350px;\\r\\n        // height: 240px;\\r\\n        padding: 1rem;\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        justify-content: center;\\r\\n        align-items: center;\\r\\n\\r\\n        //Profile image inside of dropdown menu\\r\\n        .avatar-header-image {\\r\\n            @include avatarHeaderImage(\'xl\'); //ex. avatarHeaderImage(\'lg\',\'quinary\',600);\\r\\n        }\\r\\n\\r\\n        .profile-dropdown-divider {\\r\\n            margin-top: 0.5rem;\\r\\n            margin-bottom: 0.5rem;\\r\\n            width: 100%;\\r\\n            justify-content: center;\\r\\n            align-items: center;\\r\\n        }\\r\\n\\r\\n        .profile-log-out, .profile-manage-account-dropdown {\\r\\n            margin: 15px;\\r\\n            width: fit-content;\\r\\n        }\\r\\n\\r\\n        .statement-links {\\r\\n            display: flex;\\r\\n            align-items: center;\\r\\n            text-align: center;\\r\\n            font-size: 12px;\\r\\n\\r\\n            //The dot icon between \'Privacy policy\' and \'Terms of service\'\\r\\n            .bi-dot {\\r\\n                size: 12px;\\r\\n                color: $gray-700;\\r\\n                font-weight: 400;\\r\\n            }\\r\\n\\r\\n            a {\\r\\n                margin-right: 8px;\\r\\n                margin-left: 8px;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n// Removes NgbDropdown arrow\\r\\n.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.tools-navigation-container {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.sub-header {\\r\\n    // min-height: 56px;\\r\\n    height: 56px;\\r\\n    // padding-top: 5px;\\r\\n    // box-shadow: 0px 0px 2px $gray-500;\\r\\n    background-color: $gray-100;\\r\\n    z-index: -1;\\r\\n    // padding: 0 0;\\r\\n    padding-left: 24px;\\r\\n    display: flex;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n    white-space: nowrap;\\r\\n\\r\\n    .row {\\r\\n        --bs-gutter-x: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.tools-navigation-container {\\r\\n    flex-direction: row;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    place-content: center flex-end;\\r\\n    align-items: center;\\r\\n    height: 40px;\\r\\n}\\r\\n\\r\\n.hide-alert {\\r\\n    animation: fade-anim 0.3s 1;\\r\\n    -webkit-animation: fade-anim 0.3s 1;\\r\\n    animation-fill-mode: forwards;\\r\\n\\r\\n    animation-delay: 0s;\\r\\n    -webkit-animation-delay: 0s;\\r\\n    /* Safari and Chrome */\\r\\n    -webkit-animation-fill-mode: forwards;\\r\\n}\\r\\n\\r\\n.btn:focus {\\r\\n    box-shadow: none;\\r\\n}\\r\\n\\r\\n@keyframes fade-anim {\\r\\n    from {\\r\\n        opacity: 1;\\r\\n    }\\r\\n\\r\\n    to {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fade-anim {\\r\\n    from {\\r\\n        opacity: 1;\\r\\n    }\\r\\n\\r\\n    to {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.pendo-resource-center {\\r\\n    position: absolute;\\r\\n    bottom: 10px;\\r\\n    left: 10px;\\r\\n    max-height: 50px;\\r\\n    max-width: 50px;\\r\\n    z-index: 18999;\\r\\n}\\r\\n","styleUrl":"./layout2.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""}],"line":76,"jsdoctags":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"\x3c!-- Application Container --\x3e\\r\\n<div\\r\\n    class=\\"container-fluid main-container\\"\\r\\n    [ngClass]=\\"{ small: smallMenu === true, \'bg-gray-100\': layoutService.showGrayBackground === true }\\"\\r\\n>    \\r\\n    <div class=\\"row flex-xl-nowrap h-100\\">\\r\\n        \x3c!-- Left Side Nav --\x3e\\r\\n        <div *ngIf=\\"showSideNav === true\\" class=\\"sidenav\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n            <div class=\\"nav-head\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                <div class=\\"app-logo-container\\">\\r\\n                    <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                        <div class=\\"d-flex align-items-center justify-content-start\\">\\r\\n                            <img\\r\\n                                class=\\"app-logo\\"\\r\\n                                src=\\"assets/images/Assent-Logo.svg\\"\\r\\n                                alt=\\"Assent Logo\\"\\r\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                            />\\r\\n                            <div class=\\"w-100 text-end\\">\\r\\n                                <button\\r\\n                                    [ngbTooltip]=\\"setTooltipText()\\"\\r\\n                                    placement=\\"end\\"\\r\\n                                    class=\\"text-primary title-bar-button\\"\\r\\n                                    [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                    type=\\"button\\"\\r\\n                                    aria-label=\\"Toggle Size\\"\\r\\n                                    (click)=\\"toggleSideNavSize()\\"\\r\\n                                    *ngIf=\\"showSideNav === true\\"\\r\\n                                >\\r\\n                                    <div class=\\"title-bar-icon menu-icon\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                                        <i *ngIf=\\"smallMenu === true\\" class=\\"bi bi-chevron-double-right\\" aria-hidden=\\"true\\"></i>\\r\\n                                        <i *ngIf=\\"smallMenu === false\\" class=\\"bi bi-chevron-double-left\\" aria-hidden=\\"true\\"></i>\\r\\n                                    </div>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                        <button\\r\\n                            class=\\"text-primary title-bar-button mt-3\\"\\r\\n                            type=\\"button\\"\\r\\n                            aria-label=\\"Toggle sidenav\\"\\r\\n                            [ngbTooltip]=\\"setTooltipText()\\"\\r\\n                            (click)=\\"toggleSideNavSize()\\"\\r\\n                        >\\r\\n                            <div class=\\"title-bar-icon menu-icon mb-2\\">\\r\\n                                <i *ngIf=\\"smallMenu === true\\" class=\\"bi bi-chevron-double-right\\" aria-hidden=\\"true\\"></i>\\r\\n                                <i *ngIf=\\"smallMenu === false\\" class=\\"bi bi-chevron-double-left\\" aria-hidden=\\"true\\"></i>\\r\\n                            </div>\\r\\n                        </button>\\r\\n                        <img class=\\"app-logo-small\\" src=\\"assets/images/Assent-favicon.svg\\" alt=\\"Assent Logo\\" />\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <ui-subsidiary-selector\\r\\n                    *ngIf=\\"shouldLoadSubsidiarySelector\\"\\r\\n                    #subsidiarySelector\\r\\n                    [small]=\\"smallMenu\\"\\r\\n                    [options]=\\"subsidairyList\\"\\r\\n                    (selectionChanged)=\\"onSubsidairyChanged($event)\\"\\r\\n                >\\r\\n                </ui-subsidiary-selector>\\r\\n                <hr class=\\"left-nav-divider\\" />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\"left-side-menu\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                <nav class=\\"nav flex-column\\">\\r\\n                    <ng-container *ngFor=\\"let item of menuItems\\">\\r\\n                        \x3c!-- *ngIf=\\"item.flag !== null\\" --\x3e\\r\\n                        <ng-container *uiIsFlagOn=\\"item.flag\\">\\r\\n                            <ng-container *ngIf=\\"hasPermission(item.permission) || item.permission === null || item.permission === undefined\\">\\r\\n                                \x3c!-- Without children elements --\x3e                                \\r\\n                                <ng-container *ngIf=\\"item.children.length === 0\\">\\r\\n                                    <a\\r\\n                                        ngbTooltip=\\"{{ item.name | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        [disableTooltip]=\\"disableTooltip()\\"\\r\\n                                        class=\\"nav-link\\"\\r\\n                                        [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                        [routerLink]=\\"\'/\' + item.route\\"\\r\\n                                        [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                                        [routerLinkActiveOptions]=\\"{ exact: true }\\"\\r\\n                                    >\\r\\n                                        <div class=\\"item-div w-100\\">\\r\\n                                            <i class=\\"bi bi-lg\\" [ngClass]=\\"item.icon\\" aria-hidden=\\"true\\"></i>\\r\\n                                            \x3c!--Only adds text to side nav if it isn\'t small--\x3e\\r\\n                                            <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                                <span class=\\"w-100\\" *ngIf=\\"item.children.length === 0\\">{{ item.name | translate }}</span>\\r\\n                                            </ng-container>\\r\\n                                            <i\\r\\n                                                class=\\"bi bi-chevron-down menu-button\\"\\r\\n                                                [ngClass]=\\"{ rotated: item.isOpen }\\"\\r\\n                                                *ngIf=\\"item.children.length > 0\\"\\r\\n                                                aria-hidden=\\"true\\"\\r\\n                                            ></i>\\r\\n                                        </div>\\r\\n                                    </a>\\r\\n                                </ng-container>\\r\\n                                \x3c!-- With children elements --\x3e                                \\r\\n                                <ng-container *ngIf=\\"item.children.length !== 0\\">\\r\\n                                    <a\\r\\n                                        ngbTooltip=\\"{{ item.name | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        [disableTooltip]=\\"disableTooltip()\\"\\r\\n                                        class=\\"nav-link parent\\"\\r\\n                                        [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                        (click)=\\"item.isOpen = !item.isOpen; toggleSideNavOpenWhenDropdownClicked()\\"\\r\\n                                        [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                                    >\\r\\n                                        <div class=\\"item-div w-100\\">\\r\\n                                            <i\\r\\n                                                class=\\"bi bi-lg\\"\\r\\n                                                [ngClass]=\\"item.icon\\"\\r\\n                                                aria-hidden=\\"true\\"\\r\\n                                                (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\r\\n                                            ></i>\\r\\n\\r\\n                                            <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                                <span class=\\"w-100\\">{{ item.name | translate }}</span>\\r\\n                                            </ng-container>\\r\\n                                            <i\\r\\n                                                class=\\"bi bi-chevron-down menu-button\\"\\r\\n                                                [ngClass]=\\"{ rotated: item.isOpen }\\"\\r\\n                                                *ngIf=\\"item.children.length > 0\\"\\r\\n                                                (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\r\\n                                                aria-hidden=\\"true\\"\\r\\n                                            ></i>\\r\\n                                        </div>\\r\\n                                    </a>\\r\\n                                </ng-container>                                \\r\\n                                \x3c!-- Children elements --\x3e                                \\r\\n                                <div *ngIf=\\"item.children.length !== 0\\" [style.display]=\\"item.isOpen ? \'block\' : \'none\'\\">\\r\\n                                    <div class=\\"nav w-100 nav-children\\" *ngFor=\\"let itemChild of item.children\\">\\r\\n                                        <ng-container *uiIsFlagOn=\\"itemChild.flag\\">\\r\\n                                            <ng-container *ngIf=\\"hasPermission(itemChild.permission) || itemChild.permission === null || itemChild.permission === undefined\\">\\r\\n                                                <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                                    <a\\r\\n                                                        class=\\"nav-link item-child\\"\\r\\n                                                        [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                                        [routerLink]=\\"\'/\' + itemChild.route\\"\\r\\n                                                        [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                                                        [routerLinkActiveOptions]=\\"{ exact: true }\\"\\r\\n                                                    >\\r\\n                                                        {{ itemChild.name | translate }}\\r\\n                                                    </a>\\r\\n                                                </ng-container>\\r\\n                                            </ng-container>\\r\\n                                        </ng-container>                                            \\r\\n                                    </div>\\r\\n                                </div>                                \\r\\n                            </ng-container>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n\\r\\n                    \x3c!-- Note: Menu Footer items are deactived for now --\x3e\\r\\n                    \x3c!-- <div class=\\"help-group\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                        <hr class=\\"left-nav-bottom-divider\\" [ngClass]=\\"{ small: smallMenu === true }\\" />\\r\\n\\r\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\r\\n                            <a class=\\"help-item\\" (click)=\\"openModalFeedback()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-star-fill\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                        ngbTooltip=\\"{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        container=\\"body\\"\\r\\n                                    ></i>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                    <i class=\\"bi bi-star-fill\\" aria-hidden=\\"true\\"></i>\\r\\n                                </ng-container>\\r\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}</span>\\r\\n                            </a>\\r\\n                        </div>\\r\\n\\r\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\r\\n                            <a class=\\"help-item\\" (click)=\\"openSupportModal()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-headset\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                        ngbTooltip=\\"{{ \'COMMON.GET_SUPPORT\' | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        container=\\"body\\"\\r\\n                                    ></i>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                    <i class=\\"bi bi-headset\\" aria-hidden=\\"true\\"></i>\\r\\n                                </ng-container>\\r\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.GET_SUPPORT\' | translate }}</span>\\r\\n                            </a>\\r\\n                        </div>\\r\\n\\r\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                            <a\\r\\n                                class=\\"help-item\\"\\r\\n                                target=\\"_blank\\"\\r\\n                                [href]=\\"supplierHelpCenterUrl\\"\\r\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                                [routerLinkActiveOptions]=\\"{ exact: false }\\"\\r\\n                            >\\r\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-question-circle-fill bottom\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                        ngbTooltip=\\"{{ \'COMMON.HELP_CENTER\' | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        container=\\"body\\"\\r\\n                                    ></i>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                    <i class=\\"bi bi-question-circle-fill\\" aria-hidden=\\"true\\"></i>\\r\\n                                </ng-container>\\r\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.HELP_CENTER\' | translate }}</span>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div> --\x3e\\r\\n                </nav>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Main Wrapper --\x3e\\r\\n        <div\\r\\n            (scroll)=\\"onScroll($event)\\"\\r\\n            id = \\"mainContentWrapper\\"\\r\\n            class=\\"main-content-wrapper px-0\\"\\r\\n            [ngClass]=\\"{\\r\\n                \'small-side-nav\': smallMenu === true,\\r\\n                \'no-side-nav\': showSideNav === false,\\r\\n                \'hide-overflow\': layoutService.hideOverflow\\r\\n            }\\"\\r\\n        >\\r\\n            \x3c!-- Application Toolbar and Page Header --\x3e\\r\\n            <div class=\\"toolbar\\">\\r\\n                \x3c!-- App Header --\x3e\\r\\n                <div class=\\"main-header\\">\\r\\n                    \x3c!-- Global Search --\x3e\\r\\n                    \x3c!--\\r\\n                    <ng-container *ngIf=\\"!isSupplier\\">\\r\\n                        <ui-global-search></ui-global-search>\\r\\n                    </ng-container> --\x3e\\r\\n\\r\\n                    <span class=\\"spacer\\"></span>\\r\\n\\r\\n\\r\\n                    \x3c!--Top nav profile sections START--\x3e\\r\\n                    \x3c!-- Language Switcher --\x3e\\r\\n                    <ui-language-switcher\\r\\n                        class=\\"me-3\\"\\r\\n                        [ngClass]=\\"{ \'me-5\': this.userEmailFirstLetter === \'\' }\\"\\r\\n                        [selectedLang]=\\"currentLang\\">\\r\\n                    </ui-language-switcher>\\r\\n\\r\\n                    \x3c!-- User Widget START --\x3e\\r\\n                    <div\\r\\n                        *ngIf=\\"isLoggedIn === true && this.userEmailFirstLetter !== \'\'\\"\\r\\n                        ngbDropdown\\r\\n                        #settingsDropdown=\\"ngbDropdown\\"\\r\\n                        placement=\\"bottom-right\\"\\r\\n                        class=\\"d-inline-block\\"\\r\\n                    >\\r\\n                        <div\\r\\n                            ngbDropdownAnchor\\r\\n                            class=\\"user-info\\"\\r\\n                            id=\\"profileDropdown\\"\\r\\n                            (click)=\\"$event.stopPropagation(); settingsDropdown.open()\\"\\r\\n                        >\\r\\n                            <div class=\\"text-end\\"></div>\\r\\n                            <div class=\\"profile-box\\">\\r\\n                                <div class=\\"avatar-header-image\\" ngbTooltip=\\"{{ \'MENU.PROFILE\' | translate }}\\" placement=\\"bottom\\">\\r\\n                                    {{ userEmailFirstLetter | uppercase }}\\r\\n                                </div>\\r\\n                                \x3c!-- TODO: enable auth0 user picture?\\r\\n                                <img class=\\"tenant-logo\\" *ngIf=\\"clientLogoUrl\\" src=\\"{{ clientLogoUrl }}\\" />\\r\\n                                --\x3e\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \x3c!--Dropdown Card START--\x3e\\r\\n                        <div ngbDropdownMenu aria-labelledby=\\"settingsDropdown\\">\\r\\n                            <div class=\\"profile-dropdown\\">\\r\\n                                <div class=\\"avatar-header-image\\">{{ userEmailFirstLetter | uppercase }}</div>\\r\\n                                <span id=\\"username\\" class=\\"username\\">\\r\\n                                    {{ userEmail }}\\r\\n                                </span>\\r\\n                                <ui-button\\r\\n                                    *ngIf=\\"profileManager\\"\\r\\n                                    [size]=\\"smBtnSize\\"\\r\\n                                    [type]=\\"outlineBtnType\\"\\r\\n                                    [text]=\\"\'COMMON.MANAGE_YOUR_ASSENT_ACCOUNT\' | translate\\"\\r\\n                                    [id]=\\"\'aspProfileBtn\'\\"\\r\\n                                    class=\\"profile-manage-account-dropdown\\"\\r\\n                                    [clicked]=\\"onManageAssentAccountClick\\">\\r\\n                                </ui-button>\\r\\n                                <ui-button\\r\\n                                    [size]=\\"smBtnSize\\"\\r\\n                                    [type]=\\"outlineBtnType\\"\\r\\n                                    [text]=\\"\'COMMON.LOG_OUT\' | translate\\"\\r\\n                                    [id]=\\"\'aspLogoutBtn\'\\"\\r\\n                                    class=\\"profile-log-out\\"\\r\\n                                    [clicked]=\\"onLogoutClick\\">\\r\\n                                </ui-button>\\r\\n                                <div class=\\"statement-links\\">\\r\\n                                    <a [href]=\\"termsOfServiceUrl\\" id=\\"link-terms-of-service\\" target=\\"_blank\\">\\r\\n                                        {{\'USER_CONSENT.TERMS_OF_SERVICE\' | translate}}\\r\\n                                    </a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \x3c!--Dropdown Card END--\x3e\\r\\n                        \x3c!-- User Widget END --\x3e\\r\\n                    </div>\\r\\n\\r\\n                    \x3c!-- Logout button for Pilot  --\x3e\\r\\n                    <div *ngIf=\\"logoutRedirectUri && isLoggedIn !== true\\">\\r\\n                        <button type=\\"button\\" class=\\"btn btn-outline-primary btn-sm me-4\\" id=\\"aspLogoutBtn\\" (click)=\\"logout()\\">\\r\\n                            {{ \'COMMON.LOG_OUT\' | translate }}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    \x3c!--Top nav profile sections END--\x3e\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\"pageHeaderService.showPageHeader === true\\" class=\\"w-100 border-bottom\\">\\r\\n                    <ui-page-header></ui-page-header>\\r\\n                </div>\\r\\n\\r\\n                \x3c!-- Page Footer Component (Using page footer service) --\x3e\\r\\n                <div\\r\\n                    id=\\"footer\\"\\r\\n                    [ngClass]=\\"{\\r\\n                        \'small-side-nav\': smallMenu === true,\\r\\n                        \'no-side-nav\': showSideNav === false,\\r\\n                        \'hide-overflow\': layoutService.hideOverflow,\\r\\n                        \'scrollbar-is-visible\': layoutService.scrollBarIsVisible === true\\r\\n                    }\\"\\r\\n                    *ngIf=\\"pageFooterService.showPageFooter === true\\"\\r\\n                >\\r\\n                    <ui-page-footer></ui-page-footer>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div\\r\\n                (scroll)=\\"onScroll($event)\\"\\r\\n                class=\\"main-content\\"\\r\\n                [ngClass]=\\"{ \'m-4\': (layoutService.showMargins$ | async) === true, \'calc-top\': (layoutService.calcTop$ | async) === true }\\"\\r\\n            >\\r\\n                <div\\r\\n                    [ngClass]=\\"{\\r\\n                        container: (layoutService.showContainer$ | async) === true,\\r\\n                        alignLeft: (layoutService.alignLeft$ | async) === true\\r\\n                    }\\"\\r\\n                >\\r\\n                    \x3c!-- Main Application Router Outlet --\x3e\\r\\n                    \x3c!-- Entry point for Feature Module --\x3e\\r\\n                    <router-outlet></router-outlet>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"pendo-resource-center\\">\\r\\n        <a href=\\"https://assentcompliance.my.site.com/SupplierCustomerPortal/s/?language=en_US\\" target=\\"_blank\\">\\r\\n            <img\\r\\n                style=\\"height: 50px; width: 50px\\"\\r\\n                class=\\"reference-logo\\"\\r\\n                src=\\"assets/images/pendo-resource-center.svg\\"\\r\\n                alt=\\"Meridian logo\\"\\r\\n            />\\r\\n        </a>\\r\\n    </div>\\r\\n\\r\\n    <ui-toasts-container\\r\\n        class=\\"toasts-container\\"\\r\\n        aria-live=\\"polite\\"\\r\\n        aria-atomic=\\"true\\"\\r\\n        [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n    ></ui-toasts-container>\\r\\n</div>\\r\\n"},{"name":"UiLayoutComponent","id":"component-UiLayoutComponent-846700d6603df6ab406b0015076793429c4424f8b348fede46d3a84bc9a11e1a0b5851045daff93410434ada26429f2351ebd0caea7f7e77965b6d2223742d07","file":"libs/ui/src/lib/modules/layout/layout.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-layout","styleUrls":["./layout.component.scss"],"styles":[],"templateUrl":["./layout.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_ngUnsubscribe$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121,144]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"ActionItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"authenticatedUser$","defaultValue":"this._userService.authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"currentEnv","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"currentLang","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[123]},{"name":"currentUser","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"email","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"environmentVariables","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":67,"modifierKind":[123]},{"name":"forceMenuClose","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"hasSubheader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":68,"modifierKind":[123]},{"name":"isFirstLogin","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"isHandset","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"isSupplier","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"isUserInternalRole","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"","line":74,"modifierKind":[123]},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123]},{"name":"menuButtonTooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"menuItems$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiMenuItem[]>","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"modalService","deprecated":false,"deprecationMessage":"","type":"UiModalService","optional":false,"description":"","line":77,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"","line":76,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":75,"modifierKind":[123]},{"name":"pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"preToolsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"profileManager","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"showAlert","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"showAppContainer","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"showSideNav","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"smallMenu","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"supplierHelpCenterUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"tabItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTab>","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"termsOfServiceUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"toolItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"tooltipDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"userEmailFirstLetter","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":49,"modifierKind":[123]}],"methodsClass":[{"name":"disableTooltip","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":388,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isShowAlertTrue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":333,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isUserInternal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":323,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":411,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":275,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":280,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onLogoutClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":299,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onManageAssentAccountClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":295,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":286,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"onRouterEvent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":419,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"onScroll","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":415,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openModalFeedback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":317,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"openSupportModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":312,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setFirstLoginFalse","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":342,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setPilotAlert","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":407,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setProfile","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":348,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setTooltipText","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":397,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpen","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":303,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpenWhenDropdownClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":381,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavSize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":307,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":286}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, HostListener, OnDestroy, OnInit, TemplateRef } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\nimport { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\r\\nimport { NavigationEnd, Router } from \'@angular/router\';\\r\\n// RxJS\\r\\nimport { forkJoin, Observable, of, Subject, switchMap, take } from \'rxjs\';\\r\\nimport { map, takeUntil } from \'rxjs/operators\';\\r\\n// Ngx Translate\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n// Services\\r\\nimport { IUiMenuItem, UiMenuService } from \'@lib/services/menu/menu.service\';\\r\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\r\\nimport { UiHeaderService, IUiSubHeaderTab, IUiSubHeaderTool } from \'@lib//services/layout/header/header.service\';\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\nimport { UiAuthenticationService } from \'@lib/services/authentication/authentication.service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiModalService } from \'@lib/modules/modal/services/modal.service\';\\r\\n// Enums\\r\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\r\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiSupportModalComponent } from \'./components/support-modal/support-modal.component\';\\r\\nimport { UiFeedbackModalComponent } from \'./components/feedback-modal/feedback-modal.component\';\\r\\nimport { UiPendoService } from \'@lib/services/analytics/pendo\';\\r\\nimport { UiPageHeaderService } from \'./services/page-header-service/page-header.service\';\\r\\nimport { UiPermissionsEnum } from \'@lib/services/user\';\\r\\nimport { AcpConsentService } from \'@app/services/consent/consent.service\';\\r\\nimport { UiPageFooterService } from \'./services/page-footer-service/page-footer.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-layout\',\\r\\n    templateUrl: \'./layout.component.html\',\\r\\n    styleUrls: [\'./layout.component.scss\'],\\r\\n})\\r\\nexport class UiLayoutComponent implements OnInit, OnDestroy, AfterViewInit {\\r\\n    public actionBtnsRef: TemplateRef<any>;\\r\\n    public preToolsRef: TemplateRef<any>;\\r\\n    public pageTitle = \'\';\\r\\n    public menuItems$: Observable<IUiMenuItem[]>;\\r\\n    public authenticatedUser$ = this._userService.authenticatedUser$;\\r\\n    public isHandset = false;\\r\\n    public showSideNav = true;\\r\\n    public smallMenu = false;\\r\\n    public forceMenuClose = false;\\r\\n    public showAppContainer = false;\\r\\n    public tooltipDisabled = false;\\r\\n    public menuButtonTooltipText = \'\';\\r\\n    public userEmailFirstLetter = \'\';\\r\\n    public email;\\r\\n    public isSupplier = false;\\r\\n    public isFirstLogin = false;\\r\\n    public supplierHelpCenterUrl = \'\';\\r\\n    public isUserInternalRole = false;\\r\\n    public showAlert = false;\\r\\n    public termsOfServiceUrl = \'\';\\r\\n    public profileManager = false;\\r\\n\\r\\n    public tabItems: Array<IUiSubHeaderTab> = [];\\r\\n    public toolItems: Array<IUiSubHeaderTool> = [];\\r\\n    public ActionItems: Array<IUiSubHeaderTool> = [];\\r\\n    public currentUser;\\r\\n    public currentEnv;\\r\\n    public currentLang;\\r\\n    public loading = false;\\r\\n\\r\\n    public environmentVariables: { production: boolean; devhub: boolean; devhubonly: boolean };\\r\\n    public hasSubheader = false;\\r\\n\\r\\n    private readonly _ngUnsubscribe$ = new Subject();\\r\\n\\r\\n    // eslint-disable-next-line @typescript-eslint/member-ordering\\r\\n    public constructor(\\r\\n        public layoutService: UiLayoutService,\\r\\n        public pageHeaderService: UiPageHeaderService,\\r\\n        public pageFooterService: UiPageFooterService,\\r\\n        public modalService: UiModalService,\\r\\n        private _translateService: TranslateService,\\r\\n        private _headerService: UiHeaderService,\\r\\n        private _userService: UiUserService,\\r\\n        private _breakpointObserver: BreakpointObserver,\\r\\n        private _router: Router,\\r\\n        private _menuService: UiMenuService,\\r\\n        private _location: Location,\\r\\n        private _authenticationService: UiAuthenticationService,\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _pendoService: UiPendoService,\\r\\n    ) {\\r\\n        this._breakpointObserver.observe([Breakpoints.XSmall]).subscribe((result) => {\\r\\n            this.isHandset = result.matches;\\r\\n        });\\r\\n\\r\\n        this._breakpointObserver.observe([Breakpoints.XSmall]).subscribe((result) => {\\r\\n            this.smallMenu = result.matches;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.setProfile();\\r\\n        this.environmentVariables = this._configurationService.environmentVariables;\\r\\n        this.currentEnv = this._configurationService.appConfig.environmentName;\\r\\n        this.profileManager = this._configurationService.appConfig.profileManager;\\r\\n\\r\\n        // Translation Service Events\\r\\n        this._translateService.onLangChange.subscribe(() => {\\r\\n            this.currentLang = this._translateService.currentLang;\\r\\n            //This is to localize the grid if it is available in the page\\r\\n            this.layoutService.updateGridLocalization();\\r\\n        });\\r\\n\\r\\n        // Header Service Events START\\r\\n        this._headerService.actionBtnsChange.subscribe((tlpRef) => {\\r\\n            this.actionBtnsRef = tlpRef;\\r\\n        });\\r\\n        this._headerService.loading$.subscribe((loading) => {\\r\\n            this.loading = loading;\\r\\n        });\\r\\n        this._headerService.preToolsChange.subscribe((tlpRef) => {\\r\\n            this.preToolsRef = tlpRef;\\r\\n        });\\r\\n\\r\\n        this._headerService.subHeaderChange.subscribe((items) => {\\r\\n            this.tabItems = items.tabItem;\\r\\n            this.toolItems = items.toolItems;\\r\\n\\r\\n            if (this.tabItems.length !== 0) {\\r\\n                this.hasSubheader = true;\\r\\n            } else {\\r\\n                this.hasSubheader = false;\\r\\n            }\\r\\n        });\\r\\n\\r\\n        this._headerService.titleChange.subscribe((title: string) => {\\r\\n            this.pageTitle = title;\\r\\n        });\\r\\n        // Header Service Events END\\r\\n\\r\\n        // Layout Service Events START\\r\\n        this.layoutService.onCloseSideNav.subscribe(() => {\\r\\n            this.forceMenuClose = true;\\r\\n            this.showSideNav = false;\\r\\n        });\\r\\n\\r\\n        this.layoutService.onOpenSideNav.subscribe(() => {\\r\\n            this.forceMenuClose = false;\\r\\n            this.showSideNav = true;\\r\\n        });\\r\\n        // Layout Service Events END\\r\\n\\r\\n        this.setPilotAlert();\\r\\n\\r\\n        this._userService.isSupplierUser().subscribe((isSupplier) => (this.isSupplier = isSupplier));\\r\\n\\r\\n        this.supplierHelpCenterUrl = this.layoutService.supplierHelpCenterUrl;\\r\\n        this.termsOfServiceUrl = this.layoutService.termsOfServiceUrl;\\r\\n\\r\\n        if (\\r\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopsprod ||\\r\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopssandbox\\r\\n        ) {\\r\\n            if (window.location.pathname === \'/\') {\\r\\n                this._router.navigate([\'/meridian/hub/dashboard\']);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // Menu Service Events START\\r\\n        if (\\r\\n            this._configurationService.environmentVariables.devhubonly === true ||\\r\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopsprod ||\\r\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopssandbox\\r\\n        ) {\\r\\n            this.menuItems$ = this._menuService.getLeftSideMenuDevHub();\\r\\n        } else {\\r\\n            this.menuItems$ = this._menuService.getLeftSideMenu().pipe(\\r\\n                switchMap((menus) => {\\r\\n                    // Array to hold all the observables for each menu item\\r\\n                    const menuPermissionChecks = menus.map((menu) => {\\r\\n                        if (menu.children && menu.children.length > 0) {\\r\\n                            // Array to hold observables for each child menu item\\r\\n                            const childPermissionChecks = menu.children.map((child) => {\\r\\n                                if (child.permission) {\\r\\n                                    return this._userService.hasPermission([UiPermissionsEnum[child.permission]]).pipe(take(1));\\r\\n                                }\\r\\n                                // Always return true if permission is null\\r\\n                                return of(true);\\r\\n                            });\\r\\n\\r\\n                            return forkJoin(childPermissionChecks).pipe(\\r\\n                                map((permissions) => {\\r\\n                                    // Filter out child items that don\'t have permissions\\r\\n                                    const permittedChildren = menu.children.filter((_, index) => permissions[index]);\\r\\n\\r\\n                                    if (permittedChildren.length === 1) {\\r\\n                                        // Update main menu\'s route and clear children if only one permitted child\\r\\n                                        menu.route = permittedChildren[0].route;\\r\\n                                        menu.children = [];\\r\\n                                        return menu;\\r\\n                                    } else if (permittedChildren.length > 1) {\\r\\n                                        // Otherwise, just update the children list\\r\\n                                        menu.children = permittedChildren;\\r\\n                                        return menu;\\r\\n                                    } else {\\r\\n                                        // If there are no permitted children, don\'t display the parent either\\r\\n                                        return null;\\r\\n                                    }\\r\\n                                })\\r\\n                            );\\r\\n                        }\\r\\n\\r\\n                        if (menu.permission === null) {\\r\\n                            return of(menu);\\r\\n                        }\\r\\n\\r\\n                        if (menu.permission) {\\r\\n                            return this._userService.hasPermission([UiPermissionsEnum[menu.permission]]).pipe(\\r\\n                                take(1),\\r\\n                                map((permission) => {\\r\\n                                    if (permission) {\\r\\n                                        return menu;\\r\\n                                    }\\r\\n                                    // Don\'t return the menu if the user doesn\'t have permission\\r\\n                                    return null;\\r\\n                                })\\r\\n                            );\\r\\n                        }\\r\\n\\r\\n                        return of(null);\\r\\n                    });\\r\\n\\r\\n                    return forkJoin(menuPermissionChecks).pipe(\\r\\n                        map((items) =>\\r\\n                            items.filter((item) => {\\r\\n                                // Filter out null menu items (menus that the user doesn\'t have permission to view)\\r\\n                                if (!item) {\\r\\n                                    return false;\\r\\n                                }\\r\\n\\r\\n                                let isVisible = true;\\r\\n\\r\\n                                // If Environment is AcpEnvironmentNameEnum.localdev\\r\\n                                // Show only Developer Hub\\r\\n\\r\\n                                // Show Developer Hub only on AcpEnvironmentNameEnum.localdev\\r\\n                                if (\\r\\n                                    this.currentEnv === UiEnvironmentNameEnum.localdev &&\\r\\n                                    this._configurationService.environmentVariables.devhub === true\\r\\n                                ) {\\r\\n                                    if (item.name === \'APP_MODULES.DEVELOPER_HUB.APP_NAME\') {\\r\\n                                        isVisible = true;\\r\\n                                    }\\r\\n                                }\\r\\n                                // If Environment is NOT AcpEnvironmentNameEnum.localdev\\r\\n                                // Don\'t show Developer Hub\\r\\n                                else {\\r\\n                                    isVisible = item.name !== \'APP_MODULES.DEVELOPER_HUB.APP_NAME\';\\r\\n                                }\\r\\n                                return isVisible;\\r\\n                            })\\r\\n                        )\\r\\n                    );\\r\\n                })\\r\\n            );\\r\\n        }\\r\\n\\r\\n        // Menu Service Events END\\r\\n        // Router Events\\r\\n        setTimeout(() => {\\r\\n            this.onResize(); // Note: This make sure the scroll bars is updated after page load\\r\\n        }, 1);\\r\\n\\r\\n        this.onRouterEvent();\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit() {\\r\\n        this.layoutService.updateGridLocalization();\\r\\n        this.onResize();\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._ngUnsubscribe$.next(null);\\r\\n        this._ngUnsubscribe$.complete();\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        const mainContentWrapper = document.getElementsByClassName(\'main-content-wrapper\')[0] as HTMLDivElement;\\r\\n        if (mainContentWrapper.scrollHeight > mainContentWrapper.clientHeight) {\\r\\n            this.layoutService.scrollBarIsVisible = true;\\r\\n        } else {\\r\\n            this.layoutService.scrollBarIsVisible = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onManageAssentAccountClick() {\\r\\n        this._router.navigate([\'/acp/profile-manager\']);\\r\\n    }\\r\\n\\r\\n    public onLogoutClick() {\\r\\n        this._authenticationService.logout(true);\\r\\n    }\\r\\n\\r\\n    public toggleSideNavOpen() {\\r\\n        this.layoutService.toogleSideNav();\\r\\n    }\\r\\n\\r\\n    public toggleSideNavSize() {\\r\\n        this.smallMenu = !this.smallMenu;\\r\\n        this.layoutService.onOpenSideNav.emit(this.smallMenu);\\r\\n    }\\r\\n\\r\\n    public openSupportModal() {\\r\\n        // NOTE: this is using the NgbModal, not the UiModalService\\r\\n        this._modalService.open(UiSupportModalComponent, new UiModalConfig());\\r\\n    }\\r\\n\\r\\n    public openModalFeedback() {\\r\\n        // NOTE: this is using the NgbModal, not the UiModalService\\r\\n        this._modalService.open(UiFeedbackModalComponent, new UiModalConfig());\\r\\n    }\\r\\n\\r\\n    // Checks if user is internal based on the end of the email - if true will not show feedback alert\\r\\n    public isUserInternal() {\\r\\n        this.authenticatedUser$.pipe(takeUntil(this._ngUnsubscribe$)).subscribe((data) => {\\r\\n            if (data && data.email && (data.email.endsWith(\'@assent.com\') || data.email.endsWith(\'@assentcompliance.com\'))) {\\r\\n                this.isUserInternalRole = true;\\r\\n            } else {\\r\\n                this.isUserInternalRole = false;\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public isShowAlertTrue() {\\r\\n        if (this.isUserInternalRole === false && this.isFirstLogin === true && !this.layoutService.isDeveloperHub) {\\r\\n            this.showAlert = true;\\r\\n        } else {\\r\\n            this.showAlert = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //Sets the first login to false after pilot alert is dismissed - alert will not show again\\r\\n    public setFirstLoginFalse() {\\r\\n        this.isFirstLogin = false;\\r\\n        localStorage.setItem(\'isFirstLogin\', \'false\');\\r\\n        this.layoutService.updateLayout();\\r\\n    }\\r\\n\\r\\n    public setProfile() {\\r\\n        this.authenticatedUser$.pipe(takeUntil(this._ngUnsubscribe$)).subscribe((data) => {\\r\\n            if (data !== null && data.email !== null && data.email !== undefined) {\\r\\n                this.userEmailFirstLetter = data.email.charAt(0);\\r\\n\\r\\n                // Checks if user is internal based on the end of the email - if true will not show feedback alert\\r\\n                if (data && data.email && (data.email.includes(\'assent.com\') || data.email.includes(\'assentcompliance.com\'))) {\\r\\n                    this.isUserInternalRole = true;\\r\\n                } else {\\r\\n                    this.isUserInternalRole = false;\\r\\n                }\\r\\n                this.isShowAlertTrue();\\r\\n\\r\\n                // If user authenticated, inititlize Pendo\\r\\n                if (this._configurationService.appConfig.enablePendoAcpUi) {\\r\\n                    // Initialize Pendo\\r\\n                    this._pendoService.initializePendo(\\r\\n                        data.email,\\r\\n                        this._configurationService.appConfig.pendoApiKey,\\r\\n                        this._configurationService.appConfig.environmentName\\r\\n                    );\\r\\n                }\\r\\n            } else {\\r\\n                this.userEmailFirstLetter = \'\';\\r\\n            }\\r\\n\\r\\n            if (data !== null && data.preferredLanguage !== null && data.preferredLanguage !== undefined) {\\r\\n                this.currentLang = data.preferredLanguage;\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // When sidenav is collapsed, child items are hidden. When dropdown icon is clicked, sidenav expands to show children\\r\\n    public toggleSideNavOpenWhenDropdownClicked() {\\r\\n        if (this.smallMenu) {\\r\\n            this.smallMenu = !this.smallMenu;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Only enable tooltips when sidenav is collapsed\\r\\n    public disableTooltip() {\\r\\n        if (this.smallMenu) {\\r\\n            this.tooltipDisabled = false;\\r\\n        } else {\\r\\n            this.tooltipDisabled = true;\\r\\n        }\\r\\n        return this.tooltipDisabled;\\r\\n    }\\r\\n\\r\\n    public setTooltipText() {\\r\\n        if (this.smallMenu) {\\r\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.EXPAND_MENU\');\\r\\n        } else {\\r\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.COLLAPSE_MENU\');\\r\\n        }\\r\\n        return this.menuButtonTooltipText;\\r\\n    }\\r\\n\\r\\n    // Will only show pilot alert if it is users first time logging in\\r\\n    public setPilotAlert() {\\r\\n        this.isFirstLogin = this.layoutService.isFirstTimeLogin();\\r\\n    }\\r\\n\\r\\n    public navigateBack() {\\r\\n        this._location.back();\\r\\n    }\\r\\n\\r\\n    public onScroll($event) {\\r\\n        this.layoutService.onScroll.emit($event);\\r\\n    }\\r\\n\\r\\n    private onRouterEvent() {\\r\\n        this._router.events.subscribe((evt) => {\\r\\n            if (evt instanceof NavigationEnd) {\\r\\n                const contentContainer = document.querySelector(\'.main-content-wrapper\');\\r\\n                if (contentContainer) {\\r\\n                    document.querySelector(\'.main-content-wrapper\').scroll({ top: 0, left: 0, behavior: \'auto\' });\\r\\n                } else {\\r\\n                    window.scroll({ top: 0, left: 0, behavior: \'auto\' });\\r\\n                }\\r\\n            }\\r\\n            // This is to localize the grid if it is available in the page\\r\\n            setTimeout(() => {\\r\\n                this.layoutService.updateGridLocalization();\\r\\n                this.onResize();\\r\\n            });\\r\\n        });\\r\\n\\r\\n        // Always Open Side Nav by default\\r\\n        // Page that don\'t need Side Nav can close it on ngOnInit()\\r\\n        this.layoutService.openSideNav();\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n\\r\\n#footer {\\r\\n    position: fixed; \\r\\n    bottom: 0;\\r\\n    width: calc(100% - 280px);    \\r\\n    z-index: 100;\\r\\n\\r\\n    &.scrollbar-is-visible\\r\\n    {\\r\\n        width: calc(100% - 280px - 8px);\\r\\n    }    \\r\\n    \\r\\n    &.hide-overflow {    \\r\\n        // No scrollbar    \\r\\n        width: calc(100% - 280px);\\r\\n    }\\r\\n    \\r\\n    &.small-side-nav {   \\r\\n            \\r\\n        // Small side menu     \\r\\n        width: calc(100% - 52px);\\r\\n        &.scrollbar-is-visible\\r\\n        {\\r\\n            width: calc(100% - 52px - 8px);\\r\\n        }\\r\\n        &.hide-overflow{                  \\r\\n            // No scrollbar      \\r\\n            width: calc(100% - 52px);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.toasts-container {\\r\\n    left: calc(50% - 80px);\\r\\n    width: $toast-width;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 0.5rem;\\r\\n    margin-top: 24px;\\r\\n\\r\\n    &.small {\\r\\n        left: calc(50% - 180px);\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n.sidenav {\\r\\n    width: 280px;\\r\\n    background: $secondary-primary-90-subtle !important;\\r\\n    //overflow: hidden;\\r\\n\\r\\n    //-moz-box-shadow: inset 0 5px 5px $gray-500;\\r\\n    //-webkit-box-shadow: inset 0 5px 5px $gray-500;\\r\\n    //box-shadow: inset 0 5px 5px $gray-500;\\r\\n\\r\\n    .item-div {\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        align-items: center;\\r\\n        gap: 8px;\\r\\n        padding-top: 8px;\\r\\n        padding-bottom: 8px;\\r\\n        justify-content: center;\\r\\n\\r\\n        .bi {\\r\\n            font-size: 16px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .item-child {\\r\\n        padding: 8px;\\r\\n        margin-bottom: 4px;\\r\\n        margin-left: 28px;\\r\\n        font-size: 14px;\\r\\n        width: 139px;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        width: 52px;\\r\\n\\r\\n        .item-div {\\r\\n            text-align: center;\\r\\n            align-items: center;\\r\\n            flex-direction: column;\\r\\n            gap: 8px;\\r\\n            width: 32px;\\r\\n\\r\\n            .bi {\\r\\n                font-size: 22px;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        .parent {\\r\\n            .item-div {\\r\\n                padding-bottom: 0px;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        .item-child {\\r\\n            padding-left: 0 !important;\\r\\n            justify-content: center;\\r\\n        }\\r\\n\\r\\n        .nav-children {\\r\\n            text-align: center;\\r\\n            justify-content: center;\\r\\n            height: auto;\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n.nav-head {\\r\\n    gap: 24px;\\r\\n    width: 248px;\\r\\n    height: 52px;\\r\\n\\r\\n    &.small {\\r\\n        width: 36px;\\r\\n        height: 124px;\\r\\n        padding-right: 0px;\\r\\n        padding-left: 8px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.left-nav-divider {\\r\\n    color: $gray-500;\\r\\n    border: 0.5px;\\r\\n    opacity: 0.25;\\r\\n\\r\\n    &.small {\\r\\n        width: 34px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.app-logo {\\r\\n    height: 26px;\\r\\n    margin-top: 32px;\\r\\n    margin-bottom: 24px;\\r\\n    padding-right: 117px;\\r\\n}\\r\\n\\r\\n.app-logo-small {\\r\\n    height: 32px;\\r\\n    width: 32px;\\r\\n    margin-top: 16px;\\r\\n    margin-bottom: 16px;\\r\\n}\\r\\n\\r\\n.left-side-menu {\\r\\n    height: calc(100vh - 150px);\\r\\n    width: 100%;\\r\\n    // overflow-x: hidden;\\r\\n    overflow-y: auto;\\r\\n    margin-top: 30px;\\r\\n    margin-bottom: 66px;\\r\\n    padding-bottom: 117px;\\r\\n    padding-top: 16px;\\r\\n\\r\\n    .nav {\\r\\n        gap: 4px;\\r\\n    }\\r\\n\\r\\n    &::-webkit-scrollbar {\\r\\n        width: 8px;\\r\\n        background-color: transparent;\\r\\n        border: none;\\r\\n        box-shadow: none;\\r\\n        z-index: 0;\\r\\n    }\\r\\n\\r\\n    &::-webkit-scrollbar-thumb {\\r\\n        background: $gray-400;\\r\\n        border-radius: 8px;\\r\\n    }\\r\\n\\r\\n    &::-webkit-scrollbar-thumb:hover {\\r\\n        background: $gray-600;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        height: calc(100vh - 298px);\\r\\n        margin-top: 4px;\\r\\n        margin-bottom: 88px;\\r\\n\\r\\n        .row>* {\\r\\n            padding-left: 2px;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.help-group {\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding-right: 16px;\\r\\n    padding-bottom: 32px;\\r\\n    width: $side-nav-width;\\r\\n    //overflow: hidden;\\r\\n\\r\\n    &.small {\\r\\n        width: 50px;\\r\\n        padding: 0px;\\r\\n        margin-left: -2px;\\r\\n        align-items: center;\\r\\n\\r\\n        .row>* {\\r\\n            padding-left: 0px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .left-nav-bottom-divider {\\r\\n        color: $gray-500;\\r\\n        border: 0.5px;\\r\\n        width: 248px;\\r\\n        display: flex;\\r\\n        align-items: center;\\r\\n        align-content: center;\\r\\n        opacity: 0.25;\\r\\n\\r\\n        &.small {\\r\\n            width: 34px;\\r\\n            margin-left: 4px !important;\\r\\n\\r\\n            .row>* {\\r\\n                padding-left: 0px;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .help-item {\\r\\n        color: $gray-500 !important;\\r\\n        font-weight: normal !important;\\r\\n        background-color: transparent;\\r\\n        display: flex;\\r\\n        flex-direction: row;\\r\\n        align-items: center;\\r\\n        padding: 8px 16px;\\r\\n        gap: 8px;\\r\\n\\r\\n        &.small {\\r\\n            padding: 0px 7px 7px 7px;\\r\\n            flex-direction: row;\\r\\n            justify-content: flex-start;\\r\\n            align-items: center;\\r\\n            gap: 10px;\\r\\n\\r\\n            &.bottom {\\r\\n                padding: 0px 7px 32px 7px;\\r\\n            }\\r\\n\\r\\n            .bi {\\r\\n                padding: 9px 7px;\\r\\n                font-size: 22px;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    a {\\r\\n        color: $gray-500;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n\\r\\n        &:hover {\\r\\n            color: $gray-200 !important;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n    color: $gray-500;\\r\\n    font-size: 16px;\\r\\n    height: auto;\\r\\n    padding: 4px 8px 4px 16px;\\r\\n    width: 95%;\\r\\n    text-decoration: none;\\r\\n\\r\\n    .is-active {\\r\\n        background-color: $secondary-700 ;\\r\\n        color: $white !important;\\r\\n        font-weight: bold !important;\\r\\n        border-radius: 4px;\\r\\n    }\\r\\n\\r\\n    &:hover {\\r\\n        background-color: $secondary-700;\\r\\n        color: $gray-500;\\r\\n        border-radius: 4px;\\r\\n        cursor: pointer;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        display: flex;\\r\\n        color: $gray-500;\\r\\n        margin-left: 6px;\\r\\n        padding: 4px 8px 4px 8px;\\r\\n        width: 36px;\\r\\n        height: 40px;\\r\\n\\r\\n        .is-active {\\r\\n            color: $white;\\r\\n        }\\r\\n\\r\\n        &:hover {\\r\\n            background-color: $secondary-700 ;\\r\\n            color: $gray-500 !important;\\r\\n            font-weight: bold !important;\\r\\n            border-radius: 4px;\\r\\n        }\\r\\n\\r\\n        &.parent {\\r\\n            height: fit-content;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.is-active {\\r\\n    background-color: $secondary-700;\\r\\n    color: $white !important;\\r\\n    font-weight: bold !important;\\r\\n    border-radius: 4px;\\r\\n}\\r\\n\\r\\n.menu-button {\\r\\n    transition: 300ms ease-in-out;\\r\\n    transform: rotate(0deg);\\r\\n}\\r\\n\\r\\n.menu-button.rotated {\\r\\n    transform: rotate(180deg);\\r\\n}\\r\\n\\r\\n.main-container {\\r\\n    height: 100%;\\r\\n    overflow: hidden;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n    position: absolute;\\r\\n\\r\\n    .row>* {\\r\\n        padding-right: 2px;\\r\\n        padding-left: 16px;\\r\\n    }\\r\\n\\r\\n    &.small {\\r\\n        .row>* {\\r\\n            padding-left: 0px;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n.main-content-wrapper {\\r\\n    width: calc(100% - $side-nav-width); // Second operant must be the width of the side bar\\r\\n    height: 100vh;\\r\\n    overflow-y: auto;\\r\\n\\r\\n    &.small-side-nav {\\r\\n        width: calc(100% - $side-nav-sm-width); // Second operant must be the width of the small side bar\\r\\n    }\\r\\n\\r\\n    &.no-side-nav {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    &.hide-overflow {\\r\\n        overflow-y: inherit;\\r\\n    }\\r\\n}\\r\\n\\r\\n.main-content {\\r\\n    position: relative;\\r\\n\\r\\n    &.calc-top{\\r\\n        height: calc(100% - 104px); // Note: This is causing scrollbar issue that will need to be adressed.\\r\\n    }\\r\\n\\r\\n    &.has-subheader {\\r\\n        padding-top: 0px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.alert-info {\\r\\n    margin: 20px 20px 0px 20px;\\r\\n}\\r\\n\\r\\n.feedback-text-wrapper {\\r\\n    display: inline;\\r\\n    flex-wrap: wrap;\\r\\n    text-align: justify;\\r\\n}\\r\\n\\r\\n.toolbar {\\r\\n    background-color: $white;\\r\\n    min-height: 56px;\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n    z-index: 3;\\r\\n    display: flex;\\r\\n    box-sizing: border-box;\\r\\n    flex-direction: column;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-header {\\r\\n    display: flex;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n    white-space: nowrap;\\r\\n    min-height: 56px;\\r\\n    height: 56px;\\r\\n    box-shadow: 0px 0px 5px $gray-500;\\r\\n    background-color: $white;\\r\\n    border-top-left-radius: 12px;\\r\\n    padding-left: 16px;\\r\\n}\\r\\n\\r\\n.title-bar-button {\\r\\n    border-radius: 0;\\r\\n    border: 0;\\r\\n    background: transparent;\\r\\n    padding: 0;\\r\\n    min-width: 0;\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    flex-shrink: 0;\\r\\n    line-height: 40px;\\r\\n\\r\\n    &.small {\\r\\n        margin-top: 32px;\\r\\n    }\\r\\n\\r\\n    .title-bar-icon {\\r\\n        width: 30px;\\r\\n        height: 30px;\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n.menu-icon {\\r\\n    border-radius: 50px;\\r\\n    background: transparent;\\r\\n    border-color: $secondary-600;\\r\\n    background-color: $secondary-600;\\r\\n    color: $white;\\r\\n    flex-direction: row;\\r\\n    display: flex;\\r\\n    place-content: center;\\r\\n    align-items: center;\\r\\n\\r\\n    &:active {\\r\\n        background-color: $secondary-800;\\r\\n    }\\r\\n\\r\\n    &:hover {\\r\\n        background-color: $secondary-700;\\r\\n    }\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.screen-size-badge {\\r\\n    font-weight: bold;\\r\\n    font-size: 13px;\\r\\n}\\r\\n\\r\\n.user-info {\\r\\n    cursor: pointer;\\r\\n    margin: 12px 32px 12px 0px;\\r\\n\\r\\n    //Profile image on top bar\\r\\n    .avatar-header-image {\\r\\n        border-radius: 50%;\\r\\n        height: 32px;\\r\\n        width: 32px;\\r\\n        border: solid 2px $white;\\r\\n        background-color: $tertiary-500;\\r\\n        font-size: 14px;\\r\\n        color: $white;\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        justify-content: space-evenly;\\r\\n        align-items: center;\\r\\n    }\\r\\n\\r\\n    .username {\\r\\n        color: $primary;\\r\\n        text-decoration: none;\\r\\n        font-weight: bold;\\r\\n        cursor: pointer;\\r\\n    }\\r\\n}\\r\\n\\r\\n.username {\\r\\n    text-decoration: none;\\r\\n    font-weight: 700;\\r\\n    font-size: 14px;\\r\\n    line-height: 21px;\\r\\n    padding-bottom: 16px;\\r\\n}\\r\\n\\r\\n.text-uppercase {\\r\\n    padding: 0;\\r\\n\\r\\n    &:hover {\\r\\n        color: $white;\\r\\n    }\\r\\n}\\r\\n\\r\\n//Dropdown menu\\r\\n.dropdown-menu {\\r\\n    padding-top: 0;\\r\\n    padding-bottom: 0;\\r\\n    box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.15);\\r\\n    top: 8px !important;\\r\\n}\\r\\n\\r\\n//Content of dropdown menu\\r\\n.profile-dropdown {\\r\\n    width: 350px;\\r\\n    height: 240px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n\\r\\n    //Profile image inside of dropdown menu\\r\\n    .avatar-header-image {\\r\\n        height: 48px;\\r\\n        width: 48px;\\r\\n        border: solid 3px $white;\\r\\n        font-size: 20px;\\r\\n        color: $white;\\r\\n        align-items: center;\\r\\n        border-radius: 50%;\\r\\n        background-color: $tertiary-500;\\r\\n        display: flex;\\r\\n        flex-direction: column;\\r\\n        justify-content: space-evenly;\\r\\n        margin-bottom: 10px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.profile-dropdown-divider {\\r\\n    margin-top: 16px;\\r\\n    margin-bottom: 8px;\\r\\n    width: 300px;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.profile-log-out {\\r\\n    margin: 15px;\\r\\n    width: fit-content;\\r\\n}\\r\\n\\r\\n.statement-links {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n    font-size: 12px;\\r\\n\\r\\n    //The dot icon between \'Privacy policy\' and \'Terms of service\'\\r\\n    .bi-dot {\\r\\n        size: 12px;\\r\\n        color: $gray-700;\\r\\n        font-weight: 400;\\r\\n    }\\r\\n\\r\\n    a {\\r\\n        margin-right: 8px;\\r\\n        margin-left: 8px;\\r\\n    }\\r\\n}\\r\\n\\r\\n// Removes NgbDropdown arrow\\r\\n.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.tools-navigation-container {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.sub-header {\\r\\n    // min-height: 56px;\\r\\n    height: 56px;\\r\\n    // padding-top: 5px;\\r\\n    // box-shadow: 0px 0px 2px $gray-500;\\r\\n    background-color: $gray-100;\\r\\n    z-index: -1;\\r\\n    // padding: 0 0;\\r\\n    padding-left: 24px;\\r\\n    display: flex;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n    white-space: nowrap;\\r\\n\\r\\n    .row {\\r\\n        --bs-gutter-x: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.tools-navigation-container {\\r\\n    flex-direction: row;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    place-content: center flex-end;\\r\\n    align-items: center;\\r\\n    height: 40px;\\r\\n}\\r\\n\\r\\n\\r\\n.hide-alert {\\r\\n    animation: fade-anim 0.3s 1;\\r\\n    -webkit-animation: fade-anim 0.3s 1;\\r\\n    animation-fill-mode: forwards;\\r\\n\\r\\n    animation-delay: 0s;\\r\\n    -webkit-animation-delay: 0s;\\r\\n    /* Safari and Chrome */\\r\\n    -webkit-animation-fill-mode: forwards;\\r\\n}\\r\\n\\r\\n.btn:focus {\\r\\n    box-shadow: none;\\r\\n}\\r\\n\\r\\n@keyframes fade-anim {\\r\\n    from {\\r\\n        opacity: 1;\\r\\n    }\\r\\n\\r\\n    to {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n@-webkit-keyframes fade-anim {\\r\\n    from {\\r\\n        opacity: 1;\\r\\n    }\\r\\n\\r\\n    to {\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n.pendo-resource-center {\\r\\n    position: absolute; \\r\\n    bottom: 10px; \\r\\n    left: 10px; \\r\\n    max-height: 50px; \\r\\n    max-width: 50px; \\r\\n    z-index: 18999;\\r\\n}","styleUrl":"./layout.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"modalService","type":"UiModalService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_menuService","type":"UiMenuService","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_authenticationService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""}],"line":70,"modifierKind":[123],"jsdoctags":[{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"modalService","type":"UiModalService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_menuService","type":"UiMenuService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authenticationService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","AfterViewInit"],"templateData":"\x3c!-- Application Container --\x3e\\r\\n<div class=\\"container-fluid main-container\\" [ngClass]=\\"{\'small\': smallMenu === true, \'bg-gray-100\': layoutService.showGrayBackground === true}\\">\\r\\n    \x3c!--  --\x3e\\r\\n    <div class=\\"row flex-xl-nowrap h-100\\">\\r\\n        \x3c!-- Left Side Nav --\x3e\\r\\n        <div *ngIf=\\"showSideNav === true\\" class=\\"sidenav\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n            <div class=\\"nav-head\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                <div class=\\"app-logo-container\\">\\r\\n                    <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                        <img\\r\\n                            class=\\"app-logo\\"\\r\\n                            src=\\"assets/images/Assent-Logo.svg\\"\\r\\n                            alt=\\"Assent Logo\\"\\r\\n                            [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                        />\\r\\n                    </ng-container>\\r\\n\\r\\n                    \x3c!-- Sidenav Button START--\x3e\\r\\n                    <button\\r\\n                        class=\\"text-primary title-bar-button\\"\\r\\n                        type=\\"button\\"\\r\\n                        aria-label=\\"Toggle sidenav\\"\\r\\n                        (click)=\\"toggleSideNavOpen()\\"\\r\\n                        *ngIf=\\"(showSideNav === false && isHandset) || forceMenuClose\\"\\r\\n                    >\\r\\n                        <div class=\\"title-bar-icon menu-icon\\">\\r\\n                            <i class=\\"bi bi-list\\" aria-hidden=\\"true\\"></i>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <button\\r\\n                        [ngbTooltip]=\\"setTooltipText()\\"\\r\\n                        placement=\\"end\\"\\r\\n                        class=\\"text-primary title-bar-button\\"\\r\\n                        [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                        type=\\"button\\"\\r\\n                        aria-label=\\"Toggle Size\\"\\r\\n                        (click)=\\"toggleSideNavSize()\\"\\r\\n                        *ngIf=\\"showSideNav === true\\"\\r\\n                    >\\r\\n                        <div class=\\"title-bar-icon menu-icon\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                            <i *ngIf=\\"smallMenu === true\\" class=\\"bi bi-chevron-double-right\\" aria-hidden=\\"true\\"></i>\\r\\n                            <i *ngIf=\\"smallMenu === false\\" class=\\"bi bi-chevron-double-left\\" aria-hidden=\\"true\\"></i>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    \x3c!-- Sidenav Button END--\x3e\\r\\n                    <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                        <img class=\\"app-logo-small\\" src=\\"assets/images/Assent-favicon.svg\\" alt=\\"Assent Logo\\" />\\r\\n                    </ng-container>\\r\\n                    <hr class=\\"left-nav-divider\\" [ngClass]=\\"{ small: smallMenu === true }\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\"left-side-menu\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                <nav class=\\"nav flex-column\\">\\r\\n                    <ng-container *ngFor=\\"let item of menuItems$ | async\\">\\r\\n                        \x3c!-- Without children elements --\x3e\\r\\n                        <ng-container *ngIf=\\"item.children.length === 0\\">\\r\\n                            <a\\r\\n                                ngbTooltip=\\"{{ item.name | translate }}\\"\\r\\n                                placement=\\"end\\"\\r\\n                                [disableTooltip]=\\"disableTooltip()\\"\\r\\n                                class=\\"nav-link\\"\\r\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                [routerLink]=\\"\'/\' + item.route\\"\\r\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                                [routerLinkActiveOptions]=\\"{ exact: false }\\"\\r\\n                            >\\r\\n                                <div class=\\"item-div w-100\\">\\r\\n                                    <i class=\\"bi bi-lg\\" [ngClass]=\\"item.icon\\" aria-hidden=\\"true\\"></i>\\r\\n                                    \x3c!--Only adds text to side nav if it isn\'t small--\x3e\\r\\n                                    <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                        <span class=\\"w-100\\" *ngIf=\\"item.children.length === 0\\">{{ item.name | translate }}</span>\\r\\n                                    </ng-container>\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-chevron-down menu-button\\"\\r\\n                                        [ngClass]=\\"{ rotated: item.isOpen }\\"\\r\\n                                        *ngIf=\\"item.children.length > 0\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                    ></i>\\r\\n                                </div>\\r\\n                            </a>\\r\\n                        </ng-container>\\r\\n\\r\\n                        \x3c!-- With children elements --\x3e\\r\\n                        <ng-container *ngIf=\\"item.children.length !== 0 && item.permission\\">\\r\\n                            <a\\r\\n                                ngbTooltip=\\"{{ item.name | translate }}\\"\\r\\n                                placement=\\"end\\"\\r\\n                                [disableTooltip]=\\"disableTooltip()\\"\\r\\n                                class=\\"nav-link parent\\"\\r\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                (click)=\\"item.isOpen = !item.isOpen; toggleSideNavOpenWhenDropdownClicked()\\"\\r\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                            >\\r\\n                                <div class=\\"item-div w-100\\">\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-lg\\"\\r\\n                                        [ngClass]=\\"item.icon\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                        (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\r\\n                                    ></i>\\r\\n                                    <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                        <span class=\\"w-100\\">{{ item.name | translate }}</span>\\r\\n                                    </ng-container>\\r\\n                                    <ng-container *ngIf=\\"ngClass === small\\"> </ng-container>\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-chevron-down menu-button\\"\\r\\n                                        [ngClass]=\\"{ rotated: item.isOpen }\\"\\r\\n                                        *ngIf=\\"item.children.length > 0\\"\\r\\n                                        (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                    ></i>\\r\\n                                </div>\\r\\n                            </a>\\r\\n                        </ng-container>\\r\\n\\r\\n                        \x3c!-- Children elements --\x3e\\r\\n                        <ng-container *uiHasPermission=\\"[]\\">\\r\\n                            <div *ngIf=\\"item.children.length !== 0\\" [style.display]=\\"item.isOpen ? \'block\' : \'none\'\\">\\r\\n                                <div class=\\"nav w-100 nav-children\\" *ngFor=\\"let itemChild of item.children\\">\\r\\n                                    <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                        <a\\r\\n                                            class=\\"nav-link item-child\\"\\r\\n                                            [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                            [routerLink]=\\"\'/\' + itemChild.route\\"\\r\\n                                            [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                                            [routerLinkActiveOptions]=\\"{exact: true}\\"\\r\\n                                        >\\r\\n                                            {{ itemChild.name | translate }}\\r\\n                                        </a>\\r\\n                                    </ng-container>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </ng-container>\\r\\n                    \x3c!-- Note: Keep commented code for now.\\r\\n                    <div class=\\"help-group\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                        <hr class=\\"left-nav-bottom-divider\\" [ngClass]=\\"{ small: smallMenu === true }\\" />\\r\\n\\r\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\r\\n                            <a class=\\"help-item\\" (click)=\\"openModalFeedback()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-star-fill\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                        ngbTooltip=\\"{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        container=\\"body\\"\\r\\n                                    ></i>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                    <i class=\\"bi bi-star-fill\\" aria-hidden=\\"true\\"></i>\\r\\n                                </ng-container>\\r\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}</span>\\r\\n                            </a>\\r\\n                        </div>\\r\\n\\r\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\r\\n                            <a class=\\"help-item\\" (click)=\\"openSupportModal()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-headset\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                        ngbTooltip=\\"{{ \'COMMON.GET_SUPPORT\' | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        container=\\"body\\"\\r\\n                                    ></i>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                    <i class=\\"bi bi-headset\\" aria-hidden=\\"true\\"></i>\\r\\n                                </ng-container>\\r\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.GET_SUPPORT\' | translate }}</span>\\r\\n                            </a>\\r\\n                        </div>\\r\\n\\r\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\">\\r\\n                            <a\\r\\n                                class=\\"help-item\\"\\r\\n                                target=\\"_blank\\"\\r\\n                                [href]=\\"supplierHelpCenterUrl\\"\\r\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\r\\n                                [routerLinkActiveOptions]=\\"{ exact: false }\\"\\r\\n                            >\\r\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\r\\n                                    <i\\r\\n                                        class=\\"bi bi-question-circle-fill bottom\\"\\r\\n                                        aria-hidden=\\"true\\"\\r\\n                                        ngbTooltip=\\"{{ \'COMMON.HELP_CENTER\' | translate }}\\"\\r\\n                                        placement=\\"end\\"\\r\\n                                        container=\\"body\\"\\r\\n                                    ></i>\\r\\n                                </ng-container>\\r\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\r\\n                                    <i class=\\"bi bi-question-circle-fill\\" aria-hidden=\\"true\\"></i>\\r\\n                                </ng-container>\\r\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.HELP_CENTER\' | translate }}</span>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    --\x3e\\r\\n                </nav>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        \x3c!-- Main Wrapper --\x3e\\r\\n        <div\\r\\n            (scroll)=\\"onScroll($event)\\"\\r\\n            class=\\"main-content-wrapper px-0\\"\\r\\n\\r\\n            [ngClass]=\\"{\\r\\n                \'small-side-nav\': smallMenu === true,\\r\\n                \'no-side-nav\': showSideNav === false,\\r\\n                \'hide-overflow\': layoutService.hideOverflow\\r\\n            }\\"\\r\\n        >\\r\\n\\r\\n            \x3c!-- Application Toolbar and Page Header --\x3e\\r\\n            <div class=\\"toolbar\\">\\r\\n                \x3c!-- App Header --\x3e\\r\\n                <div class=\\"main-header\\">\\r\\n                    \x3c!-- Global Search --\x3e\\r\\n                    <ng-container *ngIf=\\"!isSupplier\\">\\r\\n                        <ui-global-search></ui-global-search>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <span class=\\"spacer\\"></span>\\r\\n\\r\\n                    \x3c!-- Current UI Breakpoint (Only visible in Developer Hub enviroment deployment) --\x3e\\r\\n                    <ng-container *ngIf=\\"environmentVariables.devhub === true\\">\\r\\n                        \x3c!-- Screen size widget START --\x3e\\r\\n                        <div class=\\"disable-select\\">\\r\\n                            <span class=\\"badge bg-dark d-xl-inline d-none me-3 screen-size-badge\\">XL</span>\\r\\n                            <span class=\\"badge bg-success d-lg-inline d-xl-none d-none me-3 screen-size-badge\\">LG</span>\\r\\n                            <span class=\\"badge bg-warning d-md-inline d-lg-none d-none me-3 screen-size-badge\\">MD</span>\\r\\n                            <span class=\\"badge bg-info d-sm-inline d-md-none d-none me-3 screen-size-badge\\">SM</span>\\r\\n                            <span class=\\"badge bg-danger d-inline d-sm-none me-3 screen-size-badge\\">XS</span>\\r\\n                        </div>\\r\\n                        \x3c!--Screen size widget END --\x3e\\r\\n                    </ng-container>\\r\\n\\r\\n                    \x3c!-- Language Switcher --\x3e\\r\\n                    <ui-language-switcher class=\\"me-3\\" [ngClass]=\\"{\'me-5\': this.userEmailFirstLetter === \'\'}\\" [selectedLang]=\\"currentLang\\"></ui-language-switcher>\\r\\n\\r\\n                    \x3c!-- User Widget START --\x3e\\r\\n                    <div\\r\\n                        *ngIf=\\"this.userEmailFirstLetter !== \'\'\\"\\r\\n                        ngbDropdown\\r\\n                        #settingsDropdown=\\"ngbDropdown\\"\\r\\n                        placement=\\"bottom-right\\"\\r\\n                        class=\\"d-inline-block\\"\\r\\n                    >\\r\\n                        <div\\r\\n                            ngbDropdownAnchor\\r\\n                            class=\\"user-info\\"\\r\\n                            id=\\"settingsDropdown\\"\\r\\n                            (click)=\\"$event.stopPropagation(); settingsDropdown.open()\\"\\r\\n                        >\\r\\n                            <div class=\\"text-end\\"></div>\\r\\n                            <div class=\\"profile-box\\">\\r\\n                                <div class=\\"avatar-header-image\\" ngbTooltip=\\"{{ \'MENU.PROFILE\' | translate }}\\" placement=\\"bottom\\">\\r\\n                                    {{ userEmailFirstLetter | uppercase }}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \x3c!--Dropdown Card START--\x3e\\r\\n                        <div ngbDropdownMenu aria-labelledby=\\"settingsDropdown\\">\\r\\n                            <div class=\\"profile-dropdown\\">\\r\\n                                <div class=\\"avatar-header-image\\">{{ userEmailFirstLetter | uppercase }}</div>\\r\\n                                <span id=\\"username\\" class=\\"username\\">\\r\\n                                    {{ (authenticatedUser$ | async)?.email }}\\r\\n                                </span>\\r\\n                                <button type=\\"button\\" class=\\"btn btn-outline-primary btn-sm profile-manage-account-dropdown\\" (click)=\\"onManageAssentAccountClick()\\" *ngIf=\\"profileManager\\">\\r\\n                                {{ \'COMMON.MANAGE_YOUR_ASSENT_ACCOUNT\' | translate }}\\r\\n                                </button>\\r\\n                                <button type=\\"button\\" class=\\"btn btn-outline-primary btn-sm profile-log-out\\" (click)=\\"onLogoutClick()\\">\\r\\n                                    {{ \'COMMON.LOG_OUT\' | translate }}\\r\\n                                </button>\\r\\n                                <hr class=\\"profile-dropdown-divider\\" />\\r\\n                                <div class=\\"statement-links\\">\\r\\n                                    <a [href]=\\"\'https://www.assent.com/privacy\'\\" target=\\"_blank\\">{{ \'MENU.PRIVACY_POLICY\' | translate }}</a>\\r\\n                                    <i class=\\"bi bi-dot\\"></i>\\r\\n                                    \x3c!--TODO add ToS link when it\'s been made--\x3e\\r\\n                                    <a [href]=\\"termsOfServiceUrl\\" target=\\"_blank\\">{{\\r\\n                                        \'MENU.TERMS_OF_SERVICE\' | translate\\r\\n                                    }}</a>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \x3c!--Dropdown Card END--\x3e\\r\\n\\r\\n                        \x3c!-- User Widget END --\x3e\\r\\n                        \x3c!--Top nav profile sections END--\x3e\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                \x3c!-- Page Header Component (Using page header service) --\x3e\\r\\n                <div *ngIf=\\"pageHeaderService.showPageHeader === true\\" class=\\"w-100 border-bottom\\">\\r\\n                    <ui-page-header></ui-page-header>\\r\\n                </div>\\r\\n\\r\\n                \x3c!-- Page Footer Component (Using page footer service) --\x3e\\r\\n                <div id=\\"footer\\" [ngClass]=\\"{\\r\\n                    \'small-side-nav\': smallMenu === true,\\r\\n                    \'no-side-nav\': showSideNav === false,\\r\\n                    \'hide-overflow\': layoutService.hideOverflow,\\r\\n                    \'scrollbar-is-visible\': layoutService.scrollBarIsVisible === true\\r\\n                }\\"  *ngIf=\\"pageFooterService.showPageFooter === true\\">\\r\\n                    <ui-page-footer></ui-page-footer>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            \x3c!-- Main Application Router Outlet --\x3e\\r\\n            \x3c!-- Entry point for Feature Module --\x3e\\r\\n            <div\\r\\n                (scroll)=\\"onScroll($event)\\"\\r\\n                class=\\"main-content\\"\\r\\n                [ngClass]=\\"{\'m-4\': (layoutService.showMargins$ | async) === true, \'calc-top\': (layoutService.calcTop$ | async) === true}\\"\\r\\n            >\\r\\n                <router-outlet></router-outlet>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\"pendo-resource-center\\">\\r\\n    <a href=\\"https://assentcompliance.my.site.com/SupplierCustomerPortal/s/?language=en_US\\" target=\\"_blank\\">\\r\\n        <img style=\\"height: 50px; width: 50px\\" class=\\"reference-logo\\" src=\\"assets/images/pendo-resource-center.svg\\" alt=\\"Meridian logo\\" />\\r\\n    </a>\\r\\n</div>\\r\\n\\r\\n<ui-toasts-container\\r\\n    class=\\"toasts-container\\"\\r\\n    aria-live=\\"polite\\"\\r\\n    aria-atomic=\\"true\\"\\r\\n    [ngClass]=\\"{ small: smallMenu === true }\\"\\r\\n></ui-toasts-container>\\r\\n"},{"name":"UiModalBaseComponent","id":"component-UiModalBaseComponent-934fbd9578c14c31a01e058a5da9b5465e4f96b80ba7a0a3dc7fdec6dd2f332101529d29dc427edb4913a7c82f083d695bc74a62d46550e10cf377cf0e6a43ed","file":"libs/ui/src/lib/modules/modal/components/modal-base/modal-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-modal-base","styleUrls":["./modal-base.component.scss"],"styles":[],"templateUrl":["./modal-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123]},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123]}],"methodsClass":[{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1821,"end":1825,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1815,"end":1820,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2020,"end":2024,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2014,"end":2019,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}]},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123]}],"deprecated":true,"deprecationMessage":"Use `UiModalComponent` instead","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48}],"description":"<p>Modal Base Component</p>\\n","rawdescription":"\\n\\nModal Base Component\\n\\n","type":"component","sourceCode":"import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from \'@angular/core\';\\r\\n// Ngx\\r\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Services\\r\\n//TODO-remove import { UiModalService } from \'@lib/modules/modal/services/modal.service\';\\r\\n\\r\\n/**\\r\\n * Modal Base Component\\r\\n *\\r\\n * @deprecated Use `UiModalComponent` instead\\r\\n */\\r\\n@Component({\\r\\n    selector: \'ui-modal-base\',\\r\\n    templateUrl: \'./modal-base.component.html\',\\r\\n    styleUrls: [\'./modal-base.component.scss\'],\\r\\n})\\r\\nexport class UiModalBaseComponent implements AfterViewInit {\\r\\n    /**\\r\\n     * Reference to the modal body\\r\\n     */\\r\\n    @ViewChild(\'modalBody\') public myNameElem: ElementRef;\\r\\n\\r\\n    /**\\r\\n     * Data to be passed to the modal\\r\\n     */\\r\\n    @Input() public data: any = null;\\r\\n\\r\\n    /**\\r\\n     * Flag to show/hide the border in the modal\\r\\n     */\\r\\n    public noBorder = false;\\r\\n\\r\\n    constructor(public activeModal: NgbActiveModal) {}\\r\\n\\r\\n    /**\\r\\n     * On window resize event\\r\\n     */\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        this.updateBorder();\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit(): void {\\r\\n        setTimeout(() => {\\r\\n            this.updateBorder();\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Update the border of the modal\\r\\n     */\\r\\n    public updateBorder() {\\r\\n        // Show Header and Footer border only when the vertical scrollbar is activated.\\r\\n        if (this.myNameElem.nativeElement.scrollHeight <= this.myNameElem.nativeElement.offsetHeight) {\\r\\n            this.noBorder = true;\\r\\n        } else {\\r\\n            this.noBorder = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Dismiss the modal\\r\\n     *\\r\\n     * @param data - Data to be passed to the parent component\\r\\n     */\\r\\n    public dismiss(data?: any) {\\r\\n        this.activeModal.dismiss(data);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Submit the modal\\r\\n     *\\r\\n     * @param data - Data to be passed to the parent component\\r\\n     */\\r\\n    public submit(data?: any) {\\r\\n        this.activeModal.close(data);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./modal-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"templateData":""},{"name":"UiModalComponent","id":"component-UiModalComponent-8a4c814299e0bc17a999f7c10879cfddc1c2ab6c27f3b9f6973985afcba3a603c5a72a2d09c1bebdde146df69afcabdad7f98ec5baa93c43af38dac43d136a05","file":"libs/ui/src/lib/modules/modal/components/modal/modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-modal","styleUrls":["./modal.component.scss"],"styles":[],"templateUrl":["./modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","deprecated":false,"deprecationMessage":"","line":18,"type":"Array<IUiActionButton>","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"showCloseButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"showFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"showHeader","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"titleText","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]},{"name":"type","defaultValue":"UiModalTypeEnum.Modal","deprecated":false,"deprecationMessage":"","line":19,"type":"UiModalTypeEnum","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"card","deprecated":false,"deprecationMessage":"","type":"UiCardComponent","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'card\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, ViewChild } from \'@angular/core\';\\r\\nimport { UiModalTypeEnum } from \'@lib/enums/modal-type.enum\';\\r\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\r\\nimport { UiCardComponent } from \'@lib/modules/card/components/card/card.component\';\\r\\nimport { UiModalService } from \'@lib/modules/modal/services/modal.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-modal\',\\r\\n    templateUrl: \'./modal.component.html\',\\r\\n    styleUrls: [\'./modal.component.scss\'],\\r\\n})\\r\\nexport class UiModalComponent implements OnInit {\\r\\n    @Input() public id: string;\\r\\n    @Input() public showHeader = false;\\r\\n    @Input() public showFooter = false;\\r\\n    @Input() public showCloseButton = true;\\r\\n    @Input() public titleText;\\r\\n    @Input() public actionButtons: Array<IUiActionButton>;\\r\\n    @Input() public type: UiModalTypeEnum = UiModalTypeEnum.Modal;\\r\\n    @ViewChild(\'card\') public card: UiCardComponent;\\r\\n\\r\\n    constructor(private _modalService: UiModalService) {}\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public onCloseBtnClick(){\\r\\n        this._modalService.dismiss(\'This modal was dismissed\');\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_modalService","type":"UiModalService","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_modalService","type":"UiModalService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<ui-card \\r\\n    #card \\r\\n    id=\\"{{id}}_card\\" \\r\\n    [showHeader]=\\"showHeader\\" \\r\\n    [showFooter]=\\"showFooter\\" \\r\\n    [titleText]=\\"titleText\\" \\r\\n    [showCloseButton]=\\"showCloseButton\\" \\r\\n    [actionButtons]=\\"actionButtons\\" \\r\\n    (closeButtonClick)=\\"onCloseBtnClick()\\"\\r\\n>\\r\\n    <ng-content></ng-content>\\r\\n</ui-card>\\r\\n"},{"name":"UiMultiPillComponent","id":"component-UiMultiPillComponent-32a749aadb800c2652e6428a06ba342aa82c85eb192f216698b1dc01cf77a020149b720523ceb67c5fbb336286cbf9c41c2a77d7845da32617614e84d16083bb","file":"libs/ui/src/lib/modules/form-controls/pills/components/multi-pill/multi-pill.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-multi-pill","styleUrls":["./multi-pill.component.scss"],"styles":[],"templateUrl":["./multi-pill.component.html"],"viewProviders":[],"inputsClass":[{"name":"isAggregated","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"pills","defaultValue":"new Array<UiPillComponent>()","deprecated":false,"deprecationMessage":"","line":13,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"aggregatePillColor","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"aggregatePillCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"aggregatePillTextArray","defaultValue":"new Array<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"aggregatePillWidth","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"container","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":14,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'container\'"}],"modifierKind":[123]},{"name":"pillEle","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"size","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"sizeArray","defaultValue":"new Array<any>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"uiPill","deprecated":false,"deprecationMessage":"","type":"QueryList<ElementRef>","optional":false,"description":"<p>A QueryList of ElementRef objects representing the UI pills in the component.</p>\\n","line":18,"rawdescription":"\\n\\nA QueryList of ElementRef objects representing the UI pills in the component.\\n","decorators":[{"name":"ViewChildren","stringifiedArguments":"\'uiPill\', {read: ElementRef}"}],"modifierKind":[123]},{"name":"uiPillList","deprecated":false,"deprecationMessage":"","type":"QueryList<UiPillComponent>","optional":false,"description":"<p>A QueryList of <code>UiPillComponent</code> instances that are children of this component.</p>\\n","line":22,"rawdescription":"\\n\\nA QueryList of `UiPillComponent` instances that are children of this component.\\n","decorators":[{"name":"ViewChildren","stringifiedArguments":"\'uiPill\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"addPill","args":[{"name":"newPills","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"newPills","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addPillWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"checkColumnWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getPillData","args":[{"name":"id","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"id","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"pillConfig","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"removePill","args":[{"name":"pill","type":"UiPillComponent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"pill","type":"UiPillComponent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPillId","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":135}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, ElementRef, HostListener, Input,\\r\\n    OnInit, QueryList, ViewChild, ViewChildren } from \'@angular/core\';\\r\\nimport { UiPillComponent } from \'../pill/pill.component\';\\r\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-multi-pill\',\\r\\n    templateUrl: \'./multi-pill.component.html\',\\r\\n    styleUrls: [\'./multi-pill.component.scss\'],\\r\\n})\\r\\nexport class UiMultiPillComponent implements OnInit, AfterViewInit {\\r\\n    @Input() public isAggregated = true;\\r\\n    @Input() public pills = new Array<UiPillComponent>();\\r\\n    @ViewChild(\'container\') public container: ElementRef;\\r\\n    /**\\r\\n     * A QueryList of ElementRef objects representing the UI pills in the component.\\r\\n     */\\r\\n    @ViewChildren(\'uiPill\', { read: ElementRef }) public uiPill: QueryList<ElementRef>;\\r\\n    /**\\r\\n     * A QueryList of `UiPillComponent` instances that are children of this component.\\r\\n     */\\r\\n    @ViewChildren(\'uiPill\') public uiPillList: QueryList<UiPillComponent>;\\r\\n\\r\\n    public pillEle;\\r\\n    public aggregatePillCount = 0;\\r\\n    public aggregatePillTextArray = new Array<string>();\\r\\n    public aggregatePillWidth;\\r\\n    public aggregatePillColor;\\r\\n    public size;\\r\\n    public sizeArray = new Array<any>();\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.sizeArray = new Array<any>();\\r\\n        this.pillConfig();\\r\\n    }\\r\\n\\r\\n    public pillConfig() {\\r\\n        this.setPillId();\\r\\n\\r\\n        if (this.isAggregated) {\\r\\n            setTimeout(() => {\\r\\n                this.aggregatePillCount = 0;\\r\\n                this.checkColumnWidth();\\r\\n            }, 10);\\r\\n        }\\r\\n        //If any pill has close button configured, all will contain close button\\r\\n        //If pills have aggregated configuration set to true, close button config will be ignored\\r\\n        if (this.isAggregated === true) {\\r\\n            for (let i = 0; i < this.pills.length; i++) {\\r\\n                this.pills[i].hasCloseButton = false;\\r\\n            }\\r\\n        } else if (this.isAggregated === false) {\\r\\n            if (this.pills.some((e) => e.hasCloseButton === true)) {\\r\\n                for (let i = 0; i < this.pills.length; i++) {\\r\\n                    this.pills[i].hasCloseButton = true;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        //All pills must have the same size\\r\\n        //If more than one size is provided, all pills will be set to medium\\r\\n        if (new Set(this.pills).size === this.pills.length) {\\r\\n            for (let i = 0; i < this.pills.length; i++) {\\r\\n                this.pills[i].size = UiPillSizeEnum.md;\\r\\n            }\\r\\n        }\\r\\n        //The color of the aggregated pill will be the color of the last pill\\r\\n        this.aggregatePillColor = this.pills[this.pills.length - 1].color;\\r\\n    }\\r\\n\\r\\n    public removePill(pill: UiPillComponent) {\\r\\n        this.pills.splice(this.pills.indexOf(pill), 1);\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit() {\\r\\n        this.addPillWidth();\\r\\n    }\\r\\n\\r\\n    //Saves the width of each pill - when \'hidden\' class is applied, width = 0\\r\\n    //This way, we can still use the pills width to calculate against the width of the container for aggregate state\\r\\n    public addPillWidth() {\\r\\n        this.sizeArray = new Array<any>();\\r\\n\\r\\n        for (let i = 0; i < this.pills.length; i++) {\\r\\n            if (this.container !== null) {\\r\\n                this.sizeArray.push(this.uiPill.toArray()[i].nativeElement.offsetWidth);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public checkColumnWidth() {\\r\\n        this.size = 0;\\r\\n        if (this.isAggregated === true) {\\r\\n            for (let i = 0; i < this.uiPill.length; i++) {\\r\\n                //size is the sum of all pill widths\\r\\n                this.size += this.sizeArray[i];\\r\\n                if (this.size < this.container.nativeElement.clientWidth - 50) {\\r\\n                    this.uiPill.toArray()[i].nativeElement.classList.remove(\'hidden-pill\');\\r\\n                    this.uiPill.toArray()[i].nativeElement.querySelector(\'.rounded-pill\').classList.remove(\'hidden\');\\r\\n                } else {\\r\\n                    this.uiPill.toArray()[i].nativeElement.classList.add(\'hidden-pill\');\\r\\n                    this.uiPill.toArray()[i].nativeElement.querySelector(\'.rounded-pill\').classList.add(\'hidden\');\\r\\n                    this.aggregatePillCount++;\\r\\n                    this.aggregatePillTextArray.push(\' \' + this.uiPill.toArray()[i].nativeElement.textContent);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public setPillId() {\\r\\n        for (let i = 0; i < this.pills.length; i++) {\\r\\n            this.pills[i].id = \'pills\' + \'-\' + i;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public addPill(newPills: Array<any>) {\\r\\n        this.aggregatePillTextArray = new Array<any>();\\r\\n\\r\\n        for (let i = 0; i < newPills.length; i++) {\\r\\n            this.pills.push(newPills[i]);\\r\\n        }\\r\\n        setTimeout(() => {\\r\\n            this.addPillWidth();\\r\\n        }, 10);\\r\\n        this.pillConfig();\\r\\n    }\\r\\n\\r\\n    public getPillData(id) {\\r\\n        return this.pills[id];\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        this.aggregatePillCount = 0;\\r\\n        this.aggregatePillTextArray = new Array<any>();\\r\\n        this.checkColumnWidth();\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".multi-pill-container {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    align-items: flex-start;\\r\\n    justify-content: flex-start;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: nowrap;\\r\\n    white-space: nowrap;\\r\\n    overflow: hidden;\\r\\n    gap: 0.3rem;\\r\\n\\r\\n    .hidden-pill {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n","styleUrl":"./multi-pill.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":30},"implements":["OnInit","AfterViewInit"],"templateData":"\\r\\n<div [ngClass]=\\"{ \'multi-pill-container\': isAggregated === true }\\" id=\\"multi-pill-container\\" #container>\\r\\n    <ui-pill\\r\\n    #uiPill\\r\\n        *ngFor=\\"let pill of pills\\"\\r\\n        [pillText]=\\"pill.pillText\\"\\r\\n        [hasCloseButton]=\\"pill.hasCloseButton\\"\\r\\n        [color]=\\"pill.color\\"\\r\\n        [icon]=\\"pill.icon\\"\\r\\n        [size]=\\"pill.size\\"\\r\\n        [value]=\\"pill.value\\"\\r\\n        [id]=\\"pill.id\\"\\r\\n        [isAggregated]=\\"isAggregated\\"\\r\\n        [ngClass]=\\"{ \'is-aggregated\': isAggregated === true }\\"\\r\\n        (xButtonClick)=\\"removePill(pill)\\"\\r\\n    >\\r\\n    </ui-pill>\\r\\n    <span\\r\\n        *ngIf=\\"isAggregated && aggregatePillCount > 0\\"\\r\\n        id=\\"aggregate-pill\\"\\r\\n        class=\\"badge {{ aggregatePillColor }} rounded-pill float-start noHover {{ pills.size }}\\"\\r\\n        [ngbTooltip]=\\"aggregatePillTextArray\\"\\r\\n        tooltipClass=\\"pill-tooltip\\"\\r\\n    >\\r\\n        +{{ aggregatePillCount }}\\r\\n    </span>\\r\\n</div>\\r\\n"},{"name":"UiOffcanvasComponent","id":"component-UiOffcanvasComponent-b760354179d3901770554fbe3831fea6812dfb7dd67cc5967386d80a67f8041598f0cb62bb2a5ac59201b51f4ddce646e8020ca5335c8e81d278a46ba46ee68f","file":"libs/ui/src/lib/modules/user-auth-manager/components/offcanvas/offcanvas.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-offcanvas","styleUrls":[],"styles":[],"templateUrl":["./offcanvas.component.html"],"viewProviders":[],"inputsClass":[{"name":"cancelButtonLabel","defaultValue":"\'COMMON.CANCEL\'","deprecated":false,"deprecationMessage":"","line":33,"type":"string","decorators":[]},{"name":"domId","defaultValue":"\'offcanvasComponentId\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe id of the offcanvas component\\nThis is used to be able to open it from other components.\\n\\"data-bs-toggle\\"=\\"\'#\' + domId\\" attribute has to be added to <button> or <a> element that opens the offcanvas\\nExample: <button type=\\"button\\" [attr.data-bs-target]=\\"\'#\' + domId\\">Open Offcanvas</button>\\n\\n","description":"<p>The id of the offcanvas component\\nThis is used to be able to open it from other components.\\n&quot;data-bs-toggle&quot;=&quot;&#39;#&#39; + domId&quot; attribute has to be added to <button> or <a> element that opens the offcanvas\\nExample: &lt;button type=&quot;button&quot; [attr.data-bs-target]=&quot;&#39;#&#39; + domId&quot;&gt;Open Offcanvas</button></p>\\n","line":24,"type":"string","decorators":[]},{"name":"saveButtonLabel","defaultValue":"\'COMMON.SAVE\'","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"showFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis configuration is used to show the footer section of the offcanvas\\nWhen it\'s disabled, the following configurations are not in use\\n\\n","description":"<p>This configuration is used to show the footer section of the offcanvas\\nWhen it&#39;s disabled, the following configurations are not in use</p>\\n","line":31,"type":"boolean","decorators":[]},{"name":"title","defaultValue":"\'COMMON.TITLE\'","deprecated":false,"deprecationMessage":"","line":25,"type":"string","decorators":[]}],"outputsClass":[{"name":"saveClicked","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter<void>"}],"propertiesClass":[],"methodsClass":[{"name":"onSaveClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-offcanvas\',\\r\\n    templateUrl: \'./offcanvas.component.html\',\\r\\n})\\r\\n\\r\\n/**\\r\\n * Offcanvas component\\r\\n * This component is based on Bootstrap 5 offcanvas component\\r\\n * https://getbootstrap.com/docs/5.3/components/offcanvas/\\r\\n * The offcanvas element is always placed on the right of the viewport\\r\\n *\\r\\n */\\r\\nexport class UiOffcanvasComponent {\\r\\n    /**\\r\\n     * The id of the offcanvas component\\r\\n     * This is used to be able to open it from other components.\\r\\n     * \\"data-bs-toggle\\"=\\"\'#\' + domId\\" attribute has to be added to <button> or <a> element that opens the offcanvas\\r\\n     * Example: <button type=\\"button\\" [attr.data-bs-target]=\\"\'#\' + domId\\">Open Offcanvas</button>\\r\\n     *\\r\\n     */\\r\\n    @Input() public domId = \'offcanvasComponentId\';\\r\\n    @Input() public title = \'COMMON.TITLE\';\\r\\n    /**\\r\\n     * This configuration is used to show the footer section of the offcanvas\\r\\n     * When it\'s disabled, the following configurations are not in use\\r\\n     *\\r\\n     */\\r\\n    @Input() public showFooter = false;\\r\\n    @Input() public saveButtonLabel = \'COMMON.SAVE\';\\r\\n    @Input() public cancelButtonLabel = \'COMMON.CANCEL\';\\r\\n    @Output() public saveClicked: EventEmitter<void> = new EventEmitter<void>();\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public onSaveClicked() {\\r\\n        this.saveClicked.emit();\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":34},"templateData":"<div class=\\"offcanvas offcanvas-end vh-100 d-flex flex-column overflow-hidden\\" tabindex=\\"-1\\" [id]=\\"domId\\"\\r\\n    aria-labelledby=\\"offcanvasRegulationsLabel\\">\\r\\n    <div class=\\"modal-header offcanvas-header flex-shrink-1\\">\\r\\n        <h5 class=\\"offcanvas-title\\" [id]=\\"domId + \'Title\'\\">\\r\\n            {{ title | translate }}\\r\\n        </h5>\\r\\n        <button type=\\"button\\" class=\\"btn-close\\" data-bs-dismiss=\\"offcanvas\\" aria-label=\\"Close\\"></button>\\r\\n    </div>\\r\\n    <div class=\\"offcanvas-body d-flex flex-row overflow-auto\\">\\r\\n        <div class=\\"d-flex flex-column\\">\\r\\n            <ng-content></ng-content>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\"showFooter\\" class=\\"modal-footer flex-shrink-1\\">\\r\\n        <button [id]=\\"domId + \'CloseButton\'\\" type=\\"button\\" class=\\"btn btn-outline-primary\\" data-bs-dismiss=\\"offcanvas\\"\\r\\n            aria-label=\\"Close\\">\\r\\n            {{ cancelButtonLabel | translate }}\\r\\n        </button>\\r\\n        <button [id]=\\"domId + \'SaveButton\'\\" type=\\"button\\" class=\\"btn btn-primary\\" data-bs-dismiss=\\"offcanvas\\"\\r\\n            (click)=\\"onSaveClicked()\\">\\r\\n            {{ saveButtonLabel | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>"},{"name":"UiOneTimePinComponent","id":"component-UiOneTimePinComponent-d24630729c063373bb9a11a37d521390ea35409ff2a5a123a97b85425925bf884a1f1fc6279fd184be68f8b79e8ea5bfaf25ade4025f8214c57f0ebb8f5e33e1","file":"libs/ui/src/lib/modules/authentification/components/login/one-time-pin.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-one-time-pin","styleUrls":["./one-time-pin.component.scss"],"styles":[],"templateUrl":["./one-time-pin.component.html"],"viewProviders":[],"inputsClass":[{"name":"state","deprecated":false,"deprecationMessage":"","line":48,"type":"UiOneTimePinComponentStateEnum","decorators":[]},{"name":"editMode","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":36,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"_acpDashboardPath","defaultValue":"\'acp/corrective-actions/tasks/open-tasks\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51,"modifierKind":[121]},{"name":"_assenteeLoginPath","defaultValue":"\'/login\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53,"modifierKind":[121]},{"name":"_cookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":55,"modifierKind":[121]},{"name":"_enterPinPath","defaultValue":"\'/passcode\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[121]},{"name":"_secureFlag","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[121]},{"name":"allStates","defaultValue":"UiOneTimePinComponentStateEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"buttonText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"currentYear","defaultValue":"new Date().getFullYear()","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"email","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"errorMessage","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"hasErrors","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"hidePassword","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"isModalOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"mainTitle","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"passcodeClass","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"subTitle","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"displayUserLogoutNotification","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":353,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"generatePin","args":[{"name":"redirect","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":396,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"redirect","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getConsentErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":339,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getUsernameValue","args":[{"name":"rememberMe","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":329,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"rememberMe","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"numberOnly","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":374,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSubmit","args":[{"name":"buttonType","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"buttonType","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openSupportModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":320,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"redirectAssentees","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":383,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\r\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\r\\nimport { HttpErrorResponse } from \'@angular/common/http\';\\r\\n// Bootstrap\\r\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Classes\\r\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\r\\n// RxJS\\r\\nimport { of } from \'rxjs\';\\r\\nimport { catchError, take, takeUntil, tap } from \'rxjs/operators\';\\r\\n// Ngx\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { CookieService } from \'ngx-cookie-service\';\\r\\n// enum\\r\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\r\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\r\\n// const\\r\\nimport { REGEX_CONST } from \'@app/shared/constants/common.const\';\\r\\n// Services\\r\\nimport { UiAuthenticationService } from \'@lib/services/authentication/authentication.service\';\\r\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\r\\nimport { UiPasswordlessLoginService } from \'@lib/modules/authentification/services/passwordless-login.service\';\\r\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\r\\n// Component\\r\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\r\\nimport { UiSupportModalComponent } from \'@lib/modules/layout/components/support-modal/support-modal.component\';\\r\\nimport { UiPendoService } from \'@lib/services/analytics/pendo\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-one-time-pin\',\\r\\n    templateUrl: \'./one-time-pin.component.html\',\\r\\n    styleUrls: [\'./one-time-pin.component.scss\'],\\r\\n})\\r\\nexport class UiOneTimePinComponent extends UiFormBaseComponent implements OnInit {\\r\\n    public loading = false;\\r\\n    public hasErrors = false;\\r\\n    public hidePassword = true;\\r\\n    public currentYear: number = new Date().getFullYear();\\r\\n    public mainTitle: string;\\r\\n    public subTitle: string;\\r\\n    public buttonText: string;\\r\\n    public errorMessage: string;\\r\\n    public passcodeClass: string;\\r\\n    public allStates = UiOneTimePinComponentStateEnum;\\r\\n    public email = \'\';\\r\\n    @Input() public state: UiOneTimePinComponentStateEnum;\\r\\n    public isModalOpen = false;\\r\\n\\r\\n    private _acpDashboardPath = \'acp/corrective-actions/tasks/open-tasks\';\\r\\n    private _enterPinPath = \'/passcode\';\\r\\n    private _assenteeLoginPath = \'/login\';\\r\\n    private _secureFlag = false;\\r\\n    private _cookieDomain: string;\\r\\n\\r\\n    constructor(\\r\\n        private _router: Router,\\r\\n        private _authService: UiAuthenticationService,\\r\\n        private _passwordlessLoginService: UiPasswordlessLoginService,\\r\\n        private _configurationService: UiConfigurationService,\\r\\n        private _translateService: TranslateService,\\r\\n        private _cookieService: CookieService,\\r\\n        private _route: ActivatedRoute,\\r\\n        private _toastService: UiToastService,\\r\\n        private _modalService: NgbModal,\\r\\n        private _pendoService: UiPendoService,\\r\\n    ) {\\r\\n        super();\\r\\n        // this language will be used as a fallback when a translation isn\'t found in the current language\\r\\n        this._translateService.setDefaultLang(\'en\');\\r\\n        // the lang to use, if the lang isn\'t available, it will use the current loader to get them\\r\\n        this._translateService.use(\'en\');\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this._cookieDomain = this._passwordlessLoginService.getCookieDomain();\\r\\n        if (this._authService.isLoggedIn()) {\\r\\n            this._router.navigate([this._acpDashboardPath]);\\r\\n        }\\r\\n\\r\\n        // If supplier login is not enabled, then enable only acp login mode\\r\\n        if (this._configurationService.appConfig.supplierLoginEnabled) {\\r\\n            const navigatorLanguageSmallCode = window.navigator.language.slice(0, 2);\\r\\n            this._translateService.use(navigatorLanguageSmallCode);\\r\\n        } else {\\r\\n            this.state = UiOneTimePinComponentStateEnum.acp;\\r\\n        }\\r\\n        // Initialize the form group\\r\\n        this.form = new FormGroup({\\r\\n            username: new FormControl(\'\'),\\r\\n        });\\r\\n\\r\\n        switch (this.state) {\\r\\n            case UiOneTimePinComponentStateEnum.generatePin:\\r\\n                const rememberMe = this._cookieService.get(this._configurationService.appConfig.rememberMe);\\r\\n                // Form setup\\r\\n                this.formControls = {\\r\\n                    username: {\\r\\n                        value: this.getUsernameValue(rememberMe),\\r\\n                        validators: [Validators.required, Validators.pattern(REGEX_CONST.EMAIL)],\\r\\n                    },\\r\\n                    rememberMe: {\\r\\n                        value: rememberMe === \'true\' ? \'true\' : null,\\r\\n                        validators: [],\\r\\n                    },\\r\\n                    passcode: {\\r\\n                        value: \'\',\\r\\n                        validators: [Validators.required, Validators.pattern(\'[0-9]{6}\')],\\r\\n                    },\\r\\n                };\\r\\n                this.createForm(this.formControls);\\r\\n\\r\\n                // Get resource strings\\r\\n                this._translateService.get(\'COMMON.ASSENT_SUSTAINABILITY_PLATFORM\').subscribe((res: string) => {\\r\\n                    this.mainTitle = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.CONFIRM_EMAIL\').subscribe((res: string) => {\\r\\n                    this.subTitle = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.NEXT\').subscribe((res: string) => {\\r\\n                    this.buttonText = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\r\\n                    this.errorMessage = res;\\r\\n                });\\r\\n\\r\\n                this.displayUserLogoutNotification();\\r\\n                break;\\r\\n            case UiOneTimePinComponentStateEnum.enterPin:\\r\\n                // Check if the user\'s email has been set on the previous step (generate PIN). If not, redirect to the root page.\\r\\n                if (!this._cookieService.get(this._configurationService.appConfig.emailCookieId)) {\\r\\n                    // No email cookie found. Redirecting to the root page.\\r\\n                    this._router.navigate([\'\']);\\r\\n                }\\r\\n\\r\\n                this.formControls = {\\r\\n                    passcode: {\\r\\n                        value: \'\',\\r\\n                        validators: [Validators.required, Validators.pattern(\'[0-9]{6}\')],\\r\\n                    },\\r\\n                };\\r\\n                this.createForm(this.formControls);\\r\\n\\r\\n                this._translateService.get(\'AUTHENTICATION.ENTER_YOUR_CODE\').subscribe((res: string) => {\\r\\n                    this.mainTitle = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.SIGN_IN_BELOW_PIN\').subscribe((res: string) => {\\r\\n                    this.subTitle = res + \' \' + this._cookieService.get(this._configurationService.appConfig.emailCookieId);\\r\\n                });\\r\\n                this._translateService.get(\'COMMON.CONTINUE\').subscribe((res: string) => {\\r\\n                    this.buttonText = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\r\\n                    this.errorMessage = res;\\r\\n                });\\r\\n\\r\\n                this.form.get(\'passcode\').valueChanges.subscribe((x) => {\\r\\n                    if (x.length === 6) {\\r\\n                        this.passcodeClass = \'no-cursor\';\\r\\n                    } else {\\r\\n                        this.passcodeClass = \'\';\\r\\n                    }\\r\\n                });\\r\\n                break;\\r\\n            default:\\r\\n                this.formControls = {\\r\\n                    username: {\\r\\n                        value: \'\',\\r\\n                        validators: [Validators.required, Validators.pattern(REGEX_CONST.EMAIL)],\\r\\n                    },\\r\\n                    password: {\\r\\n                        value: \'\',\\r\\n                        validators: [Validators.required],\\r\\n                    },\\r\\n                };\\r\\n                this.createForm(this.formControls);\\r\\n\\r\\n                if (this._configurationService.environmentVariables.devhub) {\\r\\n                    this._acpDashboardPath = \'/acp/developer-hub/dashboard\';\\r\\n                }\\r\\n\\r\\n                this._translateService.get(\'COMMON.WELCOME\').subscribe((res: string) => {\\r\\n                    this.mainTitle = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.SIGN_IN_BELOW_TEXT\').subscribe((res: string) => {\\r\\n                    this.subTitle = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.NEXT\').subscribe((res: string) => {\\r\\n                    this.buttonText = res;\\r\\n                });\\r\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.INVALID_CREDENTIALS\').subscribe((res: string) => {\\r\\n                    this.errorMessage = res;\\r\\n                });\\r\\n\\r\\n                this.displayUserLogoutNotification();\\r\\n        }\\r\\n        this.editMode = true;\\r\\n        this.loading = false;\\r\\n    }\\r\\n\\r\\n    public onSubmit(buttonType) {\\r\\n        this.loading = true;\\r\\n        this.hasErrors = false;\\r\\n        this.errorMessage = \'\';\\r\\n\\r\\n        switch (this.state) {\\r\\n            case UiOneTimePinComponentStateEnum.generatePin: {\\r\\n                const userName = this.form.controls.username.value.trim().toLowerCase();\\r\\n                this.form.controls.username.setValue(userName);\\r\\n                if (this.form.controls.username.invalid) {\\r\\n                    this.loading = false;\\r\\n                    return;\\r\\n                }\\r\\n                this.form.controls.username.markAsTouched();\\r\\n\\r\\n                const expiryDate = new Date();\\r\\n                expiryDate.setFullYear(expiryDate.getFullYear() + 1);\\r\\n                const rememberMe = this.form.controls.rememberMe.value === true;\\r\\n\\r\\n                this._cookieService.set(\\r\\n                    this._configurationService.appConfig.rememberMe,\\r\\n                    rememberMe.toString(),\\r\\n                    expiryDate,\\r\\n                    \'\',\\r\\n                    this._cookieDomain,\\r\\n                    this._secureFlag\\r\\n                );\\r\\n\\r\\n                this._cookieService.set(\\r\\n                    this._configurationService.appConfig.emailCookieId,\\r\\n                    userName,\\r\\n                    expiryDate,\\r\\n                    \'\',\\r\\n                    this._cookieDomain,\\r\\n                    this._secureFlag\\r\\n                );\\r\\n\\r\\n                if (!this.redirectAssentees()) {\\r\\n                    if (this._configurationService.appConfig.enablePendoAcpUi) {\\r\\n                        this._pendoService.initializePendo(\\r\\n                            userName,\\r\\n                            this._configurationService.appConfig.pendoApiKey,\\r\\n                            this._configurationService.appConfig.environmentName\\r\\n                        );\\r\\n                    }\\r\\n                    // generate OTP\\r\\n                    this.generatePin(true);\\r\\n                }\\r\\n\\r\\n                break;\\r\\n            }\\r\\n            case UiOneTimePinComponentStateEnum.enterPin: {\\r\\n                if (buttonType === \'codeBtn\') {\\r\\n                    this.form.controls.passcode.setValue(\'\');\\r\\n                    this.generatePin(false);\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                if (this.form.invalid) {\\r\\n                    this.loading = false;\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                this._passwordlessLoginService\\r\\n                    .verifyToken(\\r\\n                        this._cookieService.get(this._configurationService.appConfig.emailCookieId),\\r\\n                        this._passwordlessLoginService.sessionKey,\\r\\n                        this.form.controls.passcode.value,\\r\\n                        navigator.language.substring(0, 2)\\r\\n                    )\\r\\n                    .pipe(take(1), takeUntil(this._ngUnsubscribe))\\r\\n                    .subscribe(\\r\\n                        (res) => {\\r\\n                            if (!res.session) {\\r\\n                                this.hasErrors = true;\\r\\n                                this.loading = false;\\r\\n                            } else {\\r\\n                                this.loading = false;\\r\\n                                this._cookieService.set(this._configurationService.appConfig.isSupplier, \'true\');\\r\\n                                if (res.session.consentGiven) {\\r\\n                                    this._cookieService.set(this._configurationService.appConfig.isConsentGiven, \'true\');\\r\\n                                }\\r\\n                                this._toastService.clear();\\r\\n                                this._router.navigate([this._acpDashboardPath]);\\r\\n                            }\\r\\n                        },\\r\\n                        (err) => {\\r\\n                            this.hasErrors = true;\\r\\n                            this.errorMessage = err;\\r\\n                            this.loading = false;\\r\\n                        }\\r\\n                    );\\r\\n                break;\\r\\n            }\\r\\n            default: {\\r\\n                // Assentee\\r\\n                if (this.form.controls.username.invalid || this.form.controls.password.invalid) {\\r\\n                    this.loading = false;\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                this._authService\\r\\n                    .loginCoreAuth(this.form.controls.username.value, this.form.controls.password.value)\\r\\n                    .pipe(take(1), takeUntil(this._ngUnsubscribe))\\r\\n                    .subscribe(\\r\\n                        () => {\\r\\n                            this.loading = false;\\r\\n                            this._router.navigate([this._acpDashboardPath]);\\r\\n                        },\\r\\n                        () => {\\r\\n                            this.hasErrors = true;\\r\\n                            this.loading = false;\\r\\n                        }\\r\\n                    );\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public openSupportModal() {\\r\\n        const modalRef = this._modalService.open(UiSupportModalComponent, new UiModalConfig());\\r\\n\\r\\n        modalRef.result.then(\\r\\n            (result?: any) => {},\\r\\n            (dismiss?) => {}\\r\\n        );\\r\\n    }\\r\\n\\r\\n    private getUsernameValue(rememberMe: string): any {\\r\\n        if (this._route.snapshot.queryParams.email) {\\r\\n            return this._route.snapshot.queryParams.email.trim().toLowerCase();\\r\\n        } else if (rememberMe === \'true\') {\\r\\n            return this._cookieService.get(this._configurationService.appConfig.emailCookieId);\\r\\n        } else {\\r\\n            return \'\';\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private getConsentErrorMessage(error: HttpErrorResponse): string {\\r\\n        let message: string;\\r\\n        switch (error.status) {\\r\\n            // TODO - add error states\\r\\n            case 500:\\r\\n            default: {\\r\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\r\\n                    message = res;\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n        return message;\\r\\n    }\\r\\n\\r\\n    private displayUserLogoutNotification() {\\r\\n        if (this._cookieService.get(this._configurationService.appConfig.manualLogoutCookieName)\\r\\n        && (!this._cookieService.get(this._configurationService.appConfig.forceAllSessionsLogoutCookieName))) {\\r\\n            this._cookieService.delete(this._configurationService.appConfig.manualLogoutCookieName);\\r\\n            this._translateService\\r\\n                .get(\'AUTHENTICATION.MANUAL_LOGOUT\')\\r\\n                .pipe(take(1), takeUntil(this._ngUnsubscribe))\\r\\n                .subscribe((res: string) => {\\r\\n                    this._toastService.show(res, UiToastTypesEnum.success);\\r\\n                });\\r\\n        } else if (this._cookieService.get(this._configurationService.appConfig.manualLogoutCookieName)\\r\\n            && (this._cookieService.get(this._configurationService.appConfig.forceAllSessionsLogoutCookieName))) {\\r\\n            this._cookieService.delete(this._configurationService.appConfig.manualLogoutCookieName);\\r\\n            this._cookieService.delete(this._configurationService.appConfig.forceAllSessionsLogoutCookieName);\\r\\n            this._translateService.get(\'AUTHENTICATION.MANUAL_LOGOUT_FROM_ALL_SESSIONS\')\\r\\n                .subscribe((text: string) => {\\r\\n                    this._toastService.show(text, UiToastTypesEnum.success);\\r\\n                });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private numberOnly(event): boolean {\\r\\n        const charCode = event.which ? event.which : event.keyCode;\\r\\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\\r\\n            return false;\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    // if the user has an assent domain email then redirect to the acm login page\\r\\n    private redirectAssentees(): boolean {\\r\\n        if (\\r\\n            (this.form.controls.username.value.endsWith(\'assent.com\') ||\\r\\n                this.form.controls.username.value.endsWith(\'assentcompliance.com\')) &&\\r\\n            !this._route.snapshot.queryParams.external\\r\\n        ) {\\r\\n            this._assenteeLoginPath = this._configurationService.appConfig.coreAuthenticationLogin;\\r\\n            window.location.href = this._assenteeLoginPath;\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    private generatePin(redirect: boolean): void {\\r\\n        const username = this._cookieService.get(this._configurationService.appConfig.emailCookieId);\\r\\n        this._passwordlessLoginService\\r\\n            .signIn(username, navigator.language.substring(0, 2))\\r\\n            .pipe(take(1), takeUntil(this._ngUnsubscribe))\\r\\n            .pipe(\\r\\n                catchError((error) => {\\r\\n                    this.hasErrors = true;\\r\\n                    this.form.controls.username.setErrors({ incorrect: true });\\r\\n                    this.loading = false;\\r\\n                    return of([]);\\r\\n                })\\r\\n            )\\r\\n            .subscribe(\\r\\n                (res) => {\\r\\n                    if (res !== 220) {\\r\\n                        this.loading = false;\\r\\n                        if (!this.hasErrors && redirect) {\\r\\n                            this._router.navigate([this._enterPinPath]);\\r\\n                        }\\r\\n                    }\\r\\n                },\\r\\n                (err) => {\\r\\n                    this.hasErrors = true;\\r\\n                    this.errorMessage = err;\\r\\n                    this.loading = false;\\r\\n                }\\r\\n            );\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"// The login pages are cards with fixed pixel-based dimentions. It was agreed not to use relative units for desktop.\\r\\n@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n// wraps the whole page\\r\\n.wrapper {\\r\\n  height: 100vh;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n// login pages background image\\r\\n.login-background {\\r\\n  background-image: url(/assets/images/login-background-top-right.svg),\\r\\n  url(/assets/images/login-background-bottom-left.svg),\\r\\n  $blue-to-green;\\r\\n  background-position: left top, right bottom, left;\\r\\n  background-repeat: no-repeat, no-repeat, no-repeat;\\r\\n}\\r\\n\\r\\n// login card wrapper mobile\\r\\n.login-wrapper {  \\r\\n  width: 100%;  \\r\\n}  \\r\\n\\r\\n// login card wrapper desktop\\r\\n@include media-breakpoint-up(sm) {\\r\\n  .login-wrapper {\\r\\n    margin-top: 10px;\\r\\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 4px rgba(0, 0, 0, 0.2);  \\r\\n    width: 450px;\\r\\n  }\\r\\n}\\r\\n\\r\\n// login card face mobile\\r\\n.login-panel {\\r\\n  background-color: $white;    \\r\\n  padding: 1em;\\r\\n}\\r\\n\\r\\n// login card face desktop\\r\\n@include media-breakpoint-up(sm) {\\r\\n  .login-panel {\\r\\n    background-color: $white;    \\r\\n    padding: 64px 64px 5px 64px;\\r\\n    border-radius: 4px 4px 0 0;\\r\\n  }\\r\\n}\\r\\n\\r\\n// form elements\\r\\n.form-group {\\r\\n    input[type=checkbox] {\\r\\n        margin-right: ($spacer * .5) !important; \\r\\n    }\\r\\n}\\r\\n\\r\\n#loginPasswordInput {\\r\\n    padding-right: calc(1.5em + 1rem);\\r\\n}\\r\\n\\r\\n// Pin container styling\\r\\n.pin-container {    \\r\\n    overflow: hidden;\\r\\n    display: grid;\\r\\n    text-align: left;\\r\\n    width: 110%;   \\r\\n    \\r\\n    svg {\\r\\n      z-index: -1;\\r\\n      stroke: $gray-500;\\r\\n    }\\r\\n      \\r\\n    &.is-invalid svg {\\r\\n      stroke: $danger;\\r\\n    }\\r\\n    \\r\\n    .layer {\\r\\n      grid-column: 1;\\r\\n      grid-row: 1;    \\r\\n    }\\r\\n\\r\\n    .feedback {\\r\\n        padding-top: 5px;\\r\\n        text-align: left;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n.pin-container input {\\r\\n  z-index: 1;\\r\\n  letter-spacing: 44px;\\r\\n  font-family: $font-family-monospace;\\r\\n  font-size: 130%;\\r\\n  font-weight: bold;\\r\\n  height: 46px;  \\r\\n  border: 0;\\r\\n  background-color: transparent;\\r\\n  outline: 0;  \\r\\n  padding-left: 16px;\\r\\n  width: 450px;\\r\\n}\\r\\n\\r\\n// generic classes for the login pages\\r\\n.no-cursor {\\r\\n  caret-color: transparent;\\r\\n}\\r\\n\\r\\n// copyright section\\r\\n.copyright {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;  \\r\\n  height: 43px;\\r\\n  background-color: $gray-200;\\r\\n  font-size: $font-size-xs;\\r\\n}\\r\\n  \\r\\n@include media-breakpoint-up(sm) {\\r\\n  .copyright {\\r\\n    border-radius: 0 0 4px 4px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.font-md {\\r\\n  font-size: $font-size-md;\\r\\n}\\r\\n\\r\\n.app-logo {\\r\\n  width: 200px;\\r\\n  height: auto;\\r\\n}","styleUrl":"./one-time-pin.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":""},{"name":"_passwordlessLoginService","type":"UiPasswordlessLoginService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""},{"name":"_route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""}],"line":55,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_passwordlessLoginService","type":"UiPasswordlessLoginService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiFormBaseComponent","implements":["OnInit"],"templateData":"<div class=\\"wrapper d-flex flex-column login-background\\">\\r\\n    <div class=\\"mx-auto my-auto\\">\\r\\n        <div *ngIf=\\"!this.isModalOpen\\" class=\\"login-wrapper\\">\\r\\n            <div class=\\"login-panel\\">\\r\\n                <div class=\\"text-center mb-5\\">\\r\\n                    <img class=\\"app-logo\\" src=\\"assets/images/Assent-Logo-Colored.svg\\" alt=\\"Assent Logo\\" />\\r\\n                </div>\\r\\n                <h4 class=\\"text-center mb-1\\">{{ this.mainTitle }}</h4>\\r\\n                <div class=\\"text-center mb-4\\">{{ this.subTitle }}</div>\\r\\n                <form class=\\"form-group\\" [formGroup]=\\"form\\" (ngSubmit)=\\"onSubmit($event.submitter.id)\\">\\r\\n                    \x3c!-- Enter email controls --\x3e\\r\\n                    <div *ngIf=\\"this.state !== allStates.enterPin\\">\\r\\n                        <ui-text-input                            \\r\\n                            [label]=\\"\'AUTHENTICATION.EMAIL_ADDRESS\' | translate\\"\\r\\n                            [id]=\\"\'username\'\\"\\r\\n                            [formControlName]=\\"\'username\'\\"\\r\\n                            [form]=\\"form\\"\\r\\n                            [required]=\\"true\\"\\r\\n                            [email]=\\"true\\"\\r\\n                        >\\r\\n                        </ui-text-input>\\r\\n                        <div *ngIf=\\"this.hasErrors\\" class=\\"error-text\\">{{ \'AUTHENTICATION.ERRORS.SOMETHING_WRONG\' | translate }}</div>    \\r\\n                    </div>\\r\\n                    \x3c!-- Assentee password --\x3e\\r\\n                    <div *ngIf=\\"this.state === allStates.acp\\" class=\\"pb-5\\">\\r\\n                        <ui-text-input\\r\\n                            [label]=\\"\'AUTHENTICATION.PASSWORD\' | translate\\"\\r\\n                            [id]=\\"\'password\'\\"\\r\\n                            [formControlName]=\\"\'password\'\\"\\r\\n                            [form]=\\"form\\"\\r\\n                            [required]=\\"true\\"\\r\\n                            [type]=\\"\'password\'\\"\\r\\n                        >\\r\\n                        </ui-text-input>\\r\\n                    </div>\\r\\n                    \x3c!-- Passcode --\x3e\\r\\n                    <div *ngIf=\\"this.state === allStates.enterPin\\" class=\\"pb-3\\">\\r\\n                        <div class=\\"text-center pb-1\\">\\r\\n                            <p [id]=\\"\'passcode_Label\'\\" class=\\"fw-bold\\" innerHtml=\\"{{ \'AUTHENTICATION.ENTER_CODE\' | translate }}\\"></p>\\r\\n                        </div>\\r\\n                        <div class=\\"pin-container\\" [ngClass]=\\"{ \'is-invalid\': form.touched && form.controls.passcode.errors }\\">\\r\\n                            <div class=\\"layer\\">\\r\\n                                <svg width=\\"322\\" height=\\"47\\" viewBox=\\"0 0 322 47\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\r\\n                                    <rect x=\\"0.5\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\r\\n                                    <rect x=\\"56.1\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\r\\n                                    <rect x=\\"111.7\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\r\\n                                    <rect x=\\"167.3\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\r\\n                                    <rect x=\\"222.9\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\r\\n                                    <rect x=\\"278.5\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\r\\n                                </svg>\\r\\n                            </div>\\r\\n                            <div class=\\"layer\\">\\r\\n                                <input\\r\\n                                    id=\\"passcode\\"\\r\\n                                    type=\\"text\\"\\r\\n                                    formControlName=\\"passcode\\"\\r\\n                                    pattern=\\"\\\\d*\\"\\r\\n                                    minlength=\\"6\\"\\r\\n                                    maxlength=\\"6\\"\\r\\n                                    [class]=\\"this.passcodeClass\\"\\r\\n                                    autocomplete=\\"off\\"\\r\\n                                    (keypress)=\\"numberOnly($event)\\"\\r\\n                                    autofocus\\r\\n                                />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\"(form.touched && form.controls.passcode.errors) || this.hasErrors\\" class=\\"feedback error-text\\">\\r\\n                            {{ \'AUTHENTICATION.ERRORS.INVALID_CODE\' | translate }}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \x3c!-- Remember me checkbox --\x3e\\r\\n                    <div *ngIf=\\"this.state === allStates.generatePin\\" class=\\"pb-2\\">\\r\\n                        <ui-checkbox\\r\\n                            [label]=\\"\'AUTHENTICATION.REMEMBER_ME\' | translate\\"\\r\\n                            [id]=\\"\'rememberMe\'\\"\\r\\n                            [formControlName]=\\"\'rememberMe\'\\"\\r\\n                            [form]=\\"form\\"\\r\\n                            [showHelpText]=\\"false\\"\\r\\n                        >\\r\\n                        </ui-checkbox>\\r\\n                    </div>\\r\\n                    \x3c!-- Submit button --\x3e\\r\\n                    <div class=\\"d-flex justify-content-center pb-4\\">\\r\\n                        <button id=\\"loginBtn\\" class=\\"btn btn-primary col-12\\" [disabled]=\\"loading\\">\\r\\n                            <span *ngIf=\\"loading\\" class=\\"spinner-border spinner-border-sm me-1\\"></span>\\r\\n                            {{ this.buttonText }}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\"text-center pb-1\\" *ngIf=\\"this.state === allStates.enterPin\\">\\r\\n                        <p class=\\"font-md\\" innerHtml=\\"{{ \'AUTHENTICATION.CODE_NOT_RECEIVED\' | translate }}\\"></p>\\r\\n                    </div>\\r\\n                    \x3c!-- Send Another Code --\x3e\\r\\n                    <div class=\\"d-flex justify-content-center pb-4\\" *ngIf=\\"this.state === allStates.enterPin\\">\\r\\n                        <button id=\\"codeBtn\\" class=\\"btn btn btn-outline-primary col-12\\" [disabled]=\\"loading\\">\\r\\n                            <span *ngIf=\\"loading\\" class=\\"spinner-border spinner-border-sm me-1\\"></span>\\r\\n                            {{ \'AUTHENTICATION.SEND_ANOTHER_CODE\' | translate }}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    \x3c!-- Terms of service --\x3e\\r\\n                    <p *ngIf=\\"this.state === allStates.generatePin\\" innerHtml=\\"{{ \'AUTHENTICATION.TERMS_OF_SERVICE\' | translate }}\\" class=\\"text-center pb-5\\"></p>\\r\\n                </form>\\r\\n            </div>\\r\\n            \x3c!-- Copyright --\x3e\\r\\n            <div class=\\"copyright\\">© {{ this.currentYear }} Assent Inc.</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiOneTimePinGenerationComponent","id":"component-UiOneTimePinGenerationComponent-a619f3e9f32693dffaf16c214b8ae85da0567c85984683f233b29f8d8434b40dd96cb2ac19191442c517272f1e25ada26996de39ebbcba54da5fccfbfec90d6e","file":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-generation/one-time-pin-generation.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./one-time-pin-generation.component.scss"],"styles":[],"templateUrl":["./one-time-pin-generation.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"state","deprecated":false,"deprecationMessage":"","type":"UiOneTimePinComponentStateEnum","optional":false,"description":"","line":9,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\r\\n\\r\\n@Component({\\r\\n    templateUrl: \'./one-time-pin-generation.component.html\',\\r\\n    styleUrls: [\'./one-time-pin-generation.component.scss\']\\r\\n})\\r\\nexport class UiOneTimePinGenerationComponent implements OnInit {\\r\\n  public state: UiOneTimePinComponentStateEnum;\\r\\n\\r\\n  public ngOnInit(): void {\\r\\n      this.state = UiOneTimePinComponentStateEnum.generatePin;\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".toasts-container {\\r\\n    left: calc(50% - 168px);\\r\\n    width: 324px !important;\\r\\n}\\r\\n\\r\\n.ngb-toasts {\\r\\n    top: 20px !important;\\r\\n    right: 20px !important;\\r\\n}\\r\\n","styleUrl":"./one-time-pin-generation.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<ui-toasts-container class=\\"toasts-container\\" aria-live=\\"polite\\" aria-atomic=\\"true\\"></ui-toasts-container>\\r\\n<ui-one-time-pin [state]=\\"state\\"></ui-one-time-pin>"},{"name":"UiOneTimePinInputComponent","id":"component-UiOneTimePinInputComponent-b7cf5380e233fb51e43de1159581c3b6dd96002587b942aab4500825927cb22e9a404b3451c9f3839895c3c880bb94c0c901a6f14aae77a4470fd421c5f6b2f4","file":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-input/one-time-pin-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./one-time-pin-input.component.scss"],"styles":[],"templateUrl":["./one-time-pin-input.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"state","deprecated":false,"deprecationMessage":"","type":"UiOneTimePinComponentStateEnum","optional":false,"description":"","line":9,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\r\\n\\r\\n@Component({\\r\\n    templateUrl: \'./one-time-pin-input.component.html\',\\r\\n    styleUrls: [\'./one-time-pin-input.component.scss\'],\\r\\n})\\r\\nexport class UiOneTimePinInputComponent implements OnInit {\\r\\n    public state: UiOneTimePinComponentStateEnum;\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.state = UiOneTimePinComponentStateEnum.enterPin;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./one-time-pin-input.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<ui-one-time-pin [state]=\\"state\\"></ui-one-time-pin>"},{"name":"UiPageFooterComponent","id":"component-UiPageFooterComponent-f493cbb2718be87a2eaac743e3d18139cab210a5771884449b042f33edc98a79fc65e6658ffdcd5314a793d0bf2f66fc8079d602d56bfb8008a4ff26a53720ac","file":"libs/ui/src/lib/modules/layout2/components/page-footer/page-footer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-footer","styleUrls":["./page-footer.component.scss"],"styles":[],"templateUrl":["./page-footer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"- Service to manage the current route.","line":39,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"<p>Indicates whether the footer is active.</p>\\n","line":22,"rawdescription":"\\n\\nIndicates whether the footer is active.\\n","modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"- Service to manage layout changes.","line":40,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"- Service to manage footer visibility.","line":38,"modifierKind":[123]},{"name":"scrollBarIsVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Indicates whether the scrollbar is visible.</p>\\n","line":27,"rawdescription":"\\n\\nIndicates whether the scrollbar is visible.\\n","modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nNavigates back to the previous location in the browser\'s history.\\n","description":"<p>Navigates back to the previous location in the browser&#39;s history.</p>\\n","modifierKind":[123]},{"name":"isFooterShown","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the footer is currently shown.\\n","description":"<p>Checks if the footer is currently shown.</p>\\n","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nNavigates to a specified link relative to the current route.\\n","description":"<p>Navigates to a specified link relative to the current route.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLifecycle hook that is called after data-bound properties are initialized.\\nSubscribes to footer visibility changes and adjusts the body\'s padding accordingly.\\n","description":"<p>Lifecycle hook that is called after data-bound properties are initialized.\\nSubscribes to footer visibility changes and adjusts the body&#39;s padding accordingly.</p>\\n","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandles the action button click event.\\n","description":"<p>Handles the action button click event.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostListener, OnInit } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\nimport { UiLayoutService } from \'../../../../services/layout/layout.service\';\\r\\nimport { UiPageFooterService } from \'../../services/page-footer-service/page-footer.service\';\\r\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-page-footer\',\\r\\n    templateUrl: \'./page-footer.component.html\',\\r\\n    styleUrls: [\'./page-footer.component.scss\'],\\r\\n})\\r\\n/**\\r\\n * @class UiPageFooterComponent\\r\\n * @implements OnInit\\r\\n *\\r\\n * This component handles the functionality and visibility of the page footer.\\r\\n */\\r\\nexport class UiPageFooterComponent implements OnInit {\\r\\n    /**\\r\\n     * Indicates whether the footer is active.\\r\\n     */\\r\\n    public active: any;\\r\\n\\r\\n    /**\\r\\n     * Indicates whether the scrollbar is visible.\\r\\n     */\\r\\n    public scrollBarIsVisible = false;\\r\\n\\r\\n    /**\\r\\n     * @constructor\\r\\n     * @param pageFooterService - Service to manage footer visibility.\\r\\n     * @param activatedRoute - Service to manage the current route.\\r\\n     * @param layoutService - Service to manage layout changes.\\r\\n     * @param _location - Angular service to interact with the browser\'s URL.\\r\\n     * @param _router - Angular service to navigate between routes.\\r\\n     */\\r\\n    constructor(\\r\\n        public pageFooterService: UiPageFooterService,\\r\\n        public activatedRoute: ActivatedRoute,\\r\\n        public layoutService: UiLayoutService,\\r\\n        private _location: Location,\\r\\n        private _router: Router\\r\\n    ) {}\\r\\n\\r\\n    /**\\r\\n     * Lifecycle hook that is called after data-bound properties are initialized.\\r\\n     * Subscribes to footer visibility changes and adjusts the body\'s padding accordingly.\\r\\n     */\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    /**\\r\\n     * Navigates back to the previous location in the browser\'s history.\\r\\n     */\\r\\n    public goBack(): void {\\r\\n        this._location.back();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Navigates to a specified link relative to the current route.\\r\\n     */\\r\\n    public navigate(link: string): void {\\r\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Handles the action button click event.\\r\\n     */\\r\\n    public onActionButtonClick(e: any): void {\\r\\n        if (e.clicked !== undefined) {\\r\\n            e.clicked(e);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Checks if the footer is currently shown.\\r\\n     */\\r\\n    public isFooterShown(): boolean {\\r\\n        return this.pageFooterService.showPageFooter;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\r\\n@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.page-footer{\\r\\n     background-color: $white;\\r\\n \\r\\n}","styleUrl":"./page-footer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":27,"rawdescription":"\\n\\n","jsdoctags":[{"name":{"pos":952,"end":969,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"pageFooterService"},"type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"pos":946,"end":951,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Service to manage footer visibility.</li>\\n</ul>\\n"},{"name":{"pos":1024,"end":1038,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"activatedRoute"},"type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"pos":1018,"end":1023,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Service to manage the current route.</li>\\n</ul>\\n"},{"name":{"pos":1093,"end":1106,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"layoutService"},"type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"pos":1087,"end":1092,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Service to manage layout changes.</li>\\n</ul>\\n"},{"name":{"pos":1158,"end":1167,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"_location"},"type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"pos":1152,"end":1157,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Angular service to interact with the browser&#39;s URL.</li>\\n</ul>\\n"},{"name":{"pos":1237,"end":1244,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"_router"},"type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"pos":1231,"end":1236,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Angular service to navigate between routes.</li>\\n</ul>\\n"}]},"implements":["OnInit"],"templateData":"<div class=\\"page-footer border-top w-100 ps-4\\">\\r\\n    <div class=\\"row w-100\\">\\r\\n        <div class=\\"col-6 d-flex flex-column justify-content-left mt-3 mb-3\\">\\r\\n            \x3c!-- //<div>{{ this.pageFooterService.titleText$.getValue() }}</div> --\x3e\\r\\n        </div>\\r\\n        \x3c!-- right side --\x3e\\r\\n        <div class=\\"col-6 d-flex flex-column flex-row-reverse mt-3 mb-3\\">\\r\\n            <ui-action-buttons-new [actionButtons]=\\"pageFooterService.actionButtons\\"></ui-action-buttons-new>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiPageFooterComponent","id":"component-UiPageFooterComponent-d7f7bdd3fb73835ee9303b770899bd7eca9ea5ebff5d7328f948ee60a25974f1b305e80fa63ef673d438cc20fb6fa8fe900406bb21bc5fd20c8fa983796bedd1-1","file":"libs/ui/src/lib/modules/layout/components/page-footer/page-footer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-footer","styleUrls":["./page-footer.component.scss"],"styles":[],"templateUrl":["./page-footer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"scrollBarIsVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostListener, OnInit } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\nimport { UiLayoutService } from \'../../../../services/layout/layout.service\';\\r\\n\\r\\nimport { UiPageFooterService } from \'../../services/page-footer-service/page-footer.service\';\\r\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-page-footer\',\\r\\n    templateUrl: \'./page-footer.component.html\',\\r\\n    styleUrls: [\'./page-footer.component.scss\'],\\r\\n})\\r\\nexport class UiPageFooterComponent implements OnInit {\\r\\n    public active: any;\\r\\n    public scrollBarIsVisible = false;\\r\\n\\r\\n    constructor(\\r\\n        public pageFooterService: UiPageFooterService,\\r\\n        public activatedRoute: ActivatedRoute,\\r\\n        public layoutService: UiLayoutService,\\r\\n        private _location: Location,\\r\\n        private _router: Router\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public goBack() {\\r\\n        this._location.back();\\r\\n    }\\r\\n\\r\\n    public navigate(link: string) {\\r\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\r\\n    }\\r\\n\\r\\n    public onActionButtonClick(e: any) {\\r\\n        if (e.clicked !== undefined) {\\r\\n            e.clicked(e);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\r\\n@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.page-footer{\\r\\n     background-color: $white;\\r\\n \\r\\n}","styleUrl":"./page-footer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageFooterComponent-1","templateData":"<div class=\\"page-footer border-top w-100 ps-4\\">\\r\\n    <div class=\\"row w-100\\">\\r\\n        <div class=\\"col-6 d-flex flex-column justify-content-left mt-3 mb-3\\">\\r\\n            \x3c!-- //<div>{{ this.pageFooterService.titleText$.getValue() }}</div> --\x3e\\r\\n        </div>\\r\\n        \x3c!-- right side --\x3e\\r\\n        <div class=\\"col-6 d-flex flex-column flex-row-reverse mt-3 mb-3\\">\\r\\n            <ui-action-buttons-new [actionButtons]=\\"pageFooterService.actionButtons\\"></ui-action-buttons-new>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiPageHeaderComponent","id":"component-UiPageHeaderComponent-1d84e3f891c7bf4afe913e83b68c765c876cfa941cb8da165790eac720224296cff1b7b723bf8e5b28fbbf1e35601502608a1f059dbbd2500df05555dff4df91","file":"libs/ui/src/lib/modules/layout2/components/page-header/page-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-header","styleUrls":["./page-header.component.scss"],"styles":[],"templateUrl":["./page-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\r\\nimport { UiPageHeaderService } from \'../../services/page-header-service/page-header.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-page-header\',\\r\\n    templateUrl: \'./page-header.component.html\',\\r\\n    styleUrls: [\'./page-header.component.scss\'],\\r\\n})\\r\\nexport class UiPageHeaderComponent implements OnInit {\\r\\n\\r\\n    public active: any;\\r\\n\\r\\n    constructor(\\r\\n        public pageHeaderService: UiPageHeaderService,\\r\\n        public activatedRoute: ActivatedRoute,\\r\\n        private _location: Location,\\r\\n        private _router: Router\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit(): void { }\\r\\n\\r\\n    public goBack() {\\r\\n        this._location.back();\\r\\n    }\\r\\n\\r\\n    public navigate(link: string){\\r\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\r\\n    }\\r\\n\\r\\n    public onActionButtonClick(e: any){\\r\\n        if(e.clicked !== undefined){\\r\\n            e.clicked(e);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".breadcrumb {\\r\\n    margin-bottom: 0.3rem;\\r\\n}\\r\\n.row {\\r\\n    --bs-gutter-x: 0rem;\\r\\n}\\r\\n.actions.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.nav-tabs {\\r\\n    border-bottom: 0px;\\r\\n}\\r\\n","styleUrl":"./page-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div *ngIf=\\"\\r\\n    (pageHeaderService !== undefined && pageHeaderService.showPageHeader === true)\\r\\n    && (pageHeaderService.pageTitle !== \'\'\\r\\n    || pageHeaderService.pageSubTitle !== \'\'\\r\\n    || pageHeaderService.showBackButton === true\\r\\n    || pageHeaderService.pills.length !== 0\\r\\n    || pageHeaderService.status.length !== 0\\r\\n    || pageHeaderService.dropdowns.length !== 0\\r\\n    || pageHeaderService.tabsets.length !== 0\\r\\n    || pageHeaderService.subNavs.length !== 0 && pageHeaderService.showSubNav === true\\r\\n    || pageHeaderService.feedbackText !== \'\'\\r\\n    || pageHeaderService.actionButtons.length !== 0\\r\\n    || pageHeaderService.actionDropdowns.length !== 0\\r\\n    )\\"\\r\\n    class=\\"ms-4 me-4\\"\\r\\n    >\\r\\n\\r\\n    <div *ngIf=\\"\\r\\n        pageHeaderService.pageTitle !== \'\'\\r\\n        || pageHeaderService.pageSubTitle !== \'\'\\r\\n        || pageHeaderService.showBackButton === true\\r\\n        || pageHeaderService.pills.length !== 0\\r\\n        || pageHeaderService.status.length !== 0\\r\\n        || pageHeaderService.dropdowns.length !== 0\\r\\n        || pageHeaderService.feedbackText !== \'\'\\r\\n        || pageHeaderService.actionButtons.length !== 0\\r\\n        || pageHeaderService.actionDropdowns.length !== 0\\"\\r\\n        class=\\"row w-100\\"\\r\\n        style=\\"min-height: 85px\\"\\r\\n    >\\r\\n\\r\\n        \x3c!-- Left Side --\x3e\\r\\n        <div class=\\"col-6 d-flex flex-column justify-content-center mt-3 mb-3\\" >\\r\\n            \x3c!-- Back Button / Breadcrumb --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.showBackButton === true || pageHeaderService.showBreadcrumb === true\\">\\r\\n                \x3c!-- Back button --\x3e\\r\\n                <button\\r\\n                    *ngIf=\\"pageHeaderService.showBackButton === true\\"\\r\\n                    type=\\"button\\"\\r\\n                    class=\\"btn btn-link m-0 p-0\\"\\r\\n                    (click)=\\"goBack()\\">\\r\\n                    <i class=\\"bi bi-chevron-left me-1\\"></i>\\r\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText === \'\'\\">{{pageHeaderService.backButtonText | translate}}</span>\\r\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText !== \'\'\\">Back to {{pageHeaderService.backToButtonText | translate}}</span>\\r\\n                </button>\\r\\n                \x3c!-- Breadcrumbs --\x3e\\r\\n                <nav class=\\"mt-2\\"\\r\\n                    *ngIf=\\"pageHeaderService.showBreadcrumb === true\\r\\n                    && pageHeaderService.breadcrumbString !== \'\'\\"\\r\\n                    aria-label=\\"breadcrumb\\">\\r\\n                    <ol class=\\"breadcrumb\\">\\r\\n                        <li class=\\"breadcrumb-item\\"><a href=\\"#\\">{{pageHeaderService.breadcrumbString | translate}}</a></li>\\r\\n                        \x3c!-- Keep for future implemetation of Breadcrumbs --\x3e\\r\\n                        \x3c!-- <li *ngFor=\\"let item of pageHeaderService.breadcrumbs\\" class=\\"breadcrumb-item\\"><a [routerLink]=\\"item.link\\">{{item.title | translate}}</a></li> --\x3e\\r\\n                        \x3c!-- <li class=\\"breadcrumb-item\\"><a href=\\"#\\">Library</a></li>\\r\\n                        <li class=\\"breadcrumb-item active\\" aria-current=\\"page\\">Data</li> --\x3e\\r\\n                    </ol>\\r\\n                </nav>\\r\\n            </div>\\r\\n\\r\\n            \x3c!-- Page Title --\x3e\\r\\n            <h2 *ngIf=\\"pageHeaderService.pageTitle !== \'\'\\" class=\\"pb-2 pt-2\\">{{pageHeaderService.pageTitle | translate: pageHeaderService.pageTitleParams}}</h2>\\r\\n\\r\\n            \x3c!-- Description / Subtitle --\x3e\\r\\n            <small *ngIf=\\"pageHeaderService.pageSubTitle !== \'\'\\" class=\\"\\">{{pageHeaderService.pageSubTitle | translate: pageHeaderService.pageSubTitleParams}}</small>\\r\\n\\r\\n            \x3c!-- Pills --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.pills.length !== 0\\" class=\\"d-flex mt-3 mb-2\\">\\r\\n                <span *ngFor=\\"let item of pageHeaderService.pills\\" class=\\"badge rounded-pill noHover me-1\\" [ngClass]=\\"item.type!\\">{{item.label | translate}}</span>\\r\\n            </div>\\r\\n\\r\\n            \x3c!-- Status --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.status.length !== 0\\" class=\\"d-flex gap-10 mt-2 mb-3\\">\\r\\n                <span *ngFor=\\"let item of pageHeaderService.status\\" class=\\"dot sm\\" [ngClass]=\\"item.type!\\">\\r\\n                    <span class=\\"dot-text sm\\">{{item.label! | translate}}</span>\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            \x3c!-- Dropdowns --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.showDropdowns === true && pageHeaderService.dropdowns.length !== 0\\" class=\\"d-flex gap-10 mt-3 mb-1\\">\\r\\n                \x3c!-- <ui-drop-down *ngFor=\\"let item of pageHeaderService.dropdowns\\" [config]=\\"item\\"></ui-drop-down> --\x3e\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Right Side --\x3e\\r\\n        <div class=\\"col-6 mt-3 mb-3 d-flex align-items-center justify-content-end \\">\\r\\n            \x3c!-- Action Buttons --\x3e\\r\\n            <div class=\\"d-flex justify-content-between align-items-end flex-column gap-10\\">\\r\\n                \x3c!-- Feedback --\x3e\\r\\n                <div *ngIf=\\"pageHeaderService.feedbackText !== \'\'\\" class=\\"d-flex justify-content-end align-items-center\\">\\r\\n                    <i *ngIf=\\"pageHeaderService.feedbackIcon !== \'\'\\" class=\\"bi default me-1\\" [ngClass]=\\"[pageHeaderService.feedbackIcon, pageHeaderService.feedbackIconColor]\\"></i>\\r\\n                    <span class=\\"small\\">{{pageHeaderService.feedbackText | translate: pageHeaderService.feedbackTextParams}}</span>\\r\\n                </div>\\r\\n                \x3c!-- Action Buttons and More Action Dropdown --\x3e\\r\\n                <div *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0 || pageHeaderService.actionButtons.length !== 0\\" class=\\"d-flex justify-content-end gap-10\\">\\r\\n                    \x3c!-- More Dropdown --\x3e\\r\\n                    <ng-container *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0\\">\\r\\n                        <div ngbDropdown  placement=\\"bottom-end\\">\\r\\n                            <button\\r\\n                            type=\\"button\\"\\r\\n                            class=\\"btn btn-outline-primary btn-md actions\\"\\r\\n                            container=\\"body\\"\\r\\n                            id=\\"dotButton\\"\\r\\n                            ngbDropdownToggle\\r\\n                            >\\r\\n                                <i class=\\"bi bi-three-dots-vertical\\"></i>\\r\\n                            </button>\\r\\n                            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\r\\n                                <button [id]=\\"item.id\\" *ngFor=\\"let item of pageHeaderService.actionDropdowns; let i = index;\\" ngbDropdownItem (click)=\\"onActionButtonClick(item)\\" [disabled]=\\"item.disabled!\\">\\r\\n                                    <ng-container>{{item.text | translate}}</ng-container>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    \x3c!-- Action Buttons --\x3e                     \\r\\n                    <ui-action-buttons-new [actionButtons]=\\"pageHeaderService.actionButtons\\"></ui-action-buttons-new>   \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Sub Nav Buttons --\x3e\\r\\n    <div class=\\"row pt-3\\" *ngIf=\\"pageHeaderService.showSubNav && pageHeaderService.subNavs.length !== 0\\">\\r\\n        <div class=\\"col-12\\">\\r\\n            <div class=\\"d-flex flex-wrap mb-2\\">\\r\\n                <button\\r\\n                    (click)=\\"navigate(item.routerLink!)\\"\\r\\n                    [routerLinkActive]=\\"[\'active\']\\"\\r\\n                    *ngFor=\\"let item of pageHeaderService.subNavs\\"\\r\\n                    type=\\"button\\"\\r\\n                    class=\\"btn btn-sm me-2 mb-1\\"\\r\\n                    [ngClass]=\\"item.type!\\">\\r\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\">{{item.label | translate}}</ng-container>\\r\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\">{{item.label | translate: item.labelParams}}</ng-container>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Tabset --\x3e\\r\\n    <div *ngIf=\\"pageHeaderService.showTabsets === true && pageHeaderService.tabsets.length !== 0\\" class=\\"row mt-2\\">\\r\\n        <div class=\\"col-12\\">\\r\\n            <ul ngbNav #nav=\\"ngbNav\\" [(activeId)]=\\"active\\" class=\\"nav-tabs\\">\\r\\n                <li *ngFor=\\"let item of pageHeaderService.tabsets; let i = index;\\" [ngbNavItem]=\\"i\\">\\r\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate}}</a></ng-container>\\r\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate: item.labelParams}}</a></ng-container>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiPageHeaderComponent","id":"component-UiPageHeaderComponent-1d84e3f891c7bf4afe913e83b68c765c876cfa941cb8da165790eac720224296cff1b7b723bf8e5b28fbbf1e35601502608a1f059dbbd2500df05555dff4df91-1","file":"libs/ui/src/lib/modules/layout/components/page-header/page-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-header","styleUrls":["./page-header.component.scss"],"styles":[],"templateUrl":["./page-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { Location } from \'@angular/common\';\\r\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\r\\nimport { UiPageHeaderService } from \'../../services/page-header-service/page-header.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-page-header\',\\r\\n    templateUrl: \'./page-header.component.html\',\\r\\n    styleUrls: [\'./page-header.component.scss\'],\\r\\n})\\r\\nexport class UiPageHeaderComponent implements OnInit {\\r\\n\\r\\n    public active: any;\\r\\n\\r\\n    constructor(\\r\\n        public pageHeaderService: UiPageHeaderService,\\r\\n        public activatedRoute: ActivatedRoute,\\r\\n        private _location: Location,\\r\\n        private _router: Router\\r\\n    ) {}\\r\\n\\r\\n    public ngOnInit(): void { }\\r\\n\\r\\n    public goBack() {\\r\\n        this._location.back();\\r\\n    }\\r\\n\\r\\n    public navigate(link: string){\\r\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\r\\n    }\\r\\n\\r\\n    public onActionButtonClick(e: any){\\r\\n        if(e.clicked !== undefined){\\r\\n            e.clicked(e);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".breadcrumb {\\r\\n    margin-bottom: 0.3rem;\\r\\n}\\r\\n.row {\\r\\n    --bs-gutter-x: 0rem;\\r\\n}\\r\\n.actions.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.nav-tabs {\\r\\n    border-bottom: 0px;\\r\\n}\\r\\n","styleUrl":"./page-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageHeaderComponent-1","templateData":"<div *ngIf=\\"\\r\\n    (pageHeaderService !== undefined && pageHeaderService.showPageHeader === true)\\r\\n    && (pageHeaderService.pageTitle !== \'\'\\r\\n    || pageHeaderService.pageSubTitle !== \'\'\\r\\n    || pageHeaderService.showBackButton === true\\r\\n    || pageHeaderService.pills.length !== 0\\r\\n    || pageHeaderService.status.length !== 0\\r\\n    || pageHeaderService.dropdowns.length !== 0\\r\\n    || pageHeaderService.tabsets.length !== 0\\r\\n    || pageHeaderService.subNavs.length !== 0 && pageHeaderService.showSubNav === true\\r\\n    || pageHeaderService.feedbackText !== \'\'\\r\\n    || pageHeaderService.actionButtons.length !== 0\\r\\n    || pageHeaderService.actionDropdowns.length !== 0\\r\\n    )\\"\\r\\n    class=\\"ms-4 me-4\\"\\r\\n    >\\r\\n\\r\\n    <div *ngIf=\\"\\r\\n        pageHeaderService.pageTitle !== \'\'\\r\\n        || pageHeaderService.pageSubTitle !== \'\'\\r\\n        || pageHeaderService.showBackButton === true\\r\\n        || pageHeaderService.pills.length !== 0\\r\\n        || pageHeaderService.status.length !== 0\\r\\n        || pageHeaderService.dropdowns.length !== 0\\r\\n        || pageHeaderService.feedbackText !== \'\'\\r\\n        || pageHeaderService.actionButtons.length !== 0\\r\\n        || pageHeaderService.actionDropdowns.length !== 0\\"\\r\\n        class=\\"row w-100\\"\\r\\n        style=\\"min-height: 85px\\"\\r\\n    >\\r\\n\\r\\n        \x3c!-- Left Side --\x3e\\r\\n        <div class=\\"col-6 d-flex flex-column justify-content-center mt-3 mb-3\\" >\\r\\n            \x3c!-- Back Button / Breadcrumb --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.showBackButton === true || pageHeaderService.showBreadcrumb === true\\">\\r\\n                \x3c!-- Back button --\x3e\\r\\n                <button\\r\\n                    *ngIf=\\"pageHeaderService.showBackButton === true\\"\\r\\n                    type=\\"button\\"\\r\\n                    class=\\"btn btn-link m-0 p-0\\"\\r\\n                    (click)=\\"goBack()\\">\\r\\n                    <i class=\\"bi bi-chevron-left me-1\\"></i>\\r\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText === \'\'\\">{{pageHeaderService.backButtonText | translate}}</span>\\r\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText !== \'\'\\">Back to {{pageHeaderService.backToButtonText | translate}}</span>\\r\\n                </button>\\r\\n                \x3c!-- Breadcrumbs --\x3e\\r\\n                <nav class=\\"mt-2\\"\\r\\n                    *ngIf=\\"pageHeaderService.showBreadcrumb === true\\r\\n                    && pageHeaderService.breadcrumbString !== \'\'\\"\\r\\n                    aria-label=\\"breadcrumb\\">\\r\\n                    <ol class=\\"breadcrumb\\">\\r\\n                        <li class=\\"breadcrumb-item\\"><a href=\\"#\\">{{pageHeaderService.breadcrumbString | translate}}</a></li>\\r\\n                        \x3c!-- Keep for future implemetation of Breadcrumbs --\x3e\\r\\n                        \x3c!-- <li *ngFor=\\"let item of pageHeaderService.breadcrumbs\\" class=\\"breadcrumb-item\\"><a [routerLink]=\\"item.link\\">{{item.title | translate}}</a></li> --\x3e\\r\\n                        \x3c!-- <li class=\\"breadcrumb-item\\"><a href=\\"#\\">Library</a></li>\\r\\n                        <li class=\\"breadcrumb-item active\\" aria-current=\\"page\\">Data</li> --\x3e\\r\\n                    </ol>\\r\\n                </nav>\\r\\n            </div>\\r\\n\\r\\n            \x3c!-- Page Title --\x3e\\r\\n            <h2 *ngIf=\\"pageHeaderService.pageTitle !== \'\'\\" class=\\"pb-2 pt-2\\">{{pageHeaderService.pageTitle | translate: pageHeaderService.pageTitleParams}}</h2>\\r\\n\\r\\n            \x3c!-- Description / Subtitle --\x3e\\r\\n            <small *ngIf=\\"pageHeaderService.pageSubTitle !== \'\'\\" class=\\"\\">{{pageHeaderService.pageSubTitle | translate: pageHeaderService.pageSubTitleParams}}</small>\\r\\n\\r\\n            \x3c!-- Pills --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.pills.length !== 0\\" class=\\"d-flex mt-3 mb-2\\">\\r\\n                <span *ngFor=\\"let item of pageHeaderService.pills\\" class=\\"badge rounded-pill noHover me-1\\" [ngClass]=\\"item.type!\\">{{item.label | translate}}</span>\\r\\n            </div>\\r\\n\\r\\n            \x3c!-- Status --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.status.length !== 0\\" class=\\"d-flex gap-10 mt-2 mb-3\\">\\r\\n                <span *ngFor=\\"let item of pageHeaderService.status\\" class=\\"dot sm\\" [ngClass]=\\"item.type!\\">\\r\\n                    <span class=\\"dot-text sm\\">{{item.label! | translate}}</span>\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            \x3c!-- Dropdowns --\x3e\\r\\n            <div *ngIf=\\"pageHeaderService.showDropdowns === true && pageHeaderService.dropdowns.length !== 0\\" class=\\"d-flex gap-10 mt-3 mb-1\\">\\r\\n                \x3c!-- <ui-drop-down *ngFor=\\"let item of pageHeaderService.dropdowns\\" [config]=\\"item\\"></ui-drop-down> --\x3e\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Right Side --\x3e\\r\\n        <div class=\\"col-6 mt-3 mb-3 d-flex align-items-center justify-content-end \\">\\r\\n            \x3c!-- Action Buttons --\x3e\\r\\n            <div class=\\"d-flex justify-content-between align-items-end flex-column gap-10\\">\\r\\n                \x3c!-- Feedback --\x3e\\r\\n                <div *ngIf=\\"pageHeaderService.feedbackText !== \'\'\\" class=\\"d-flex justify-content-end align-items-center\\">\\r\\n                    <i *ngIf=\\"pageHeaderService.feedbackIcon !== \'\'\\" class=\\"bi default me-1\\" [ngClass]=\\"[pageHeaderService.feedbackIcon, pageHeaderService.feedbackIconColor]\\"></i>\\r\\n                    <span class=\\"small\\">{{pageHeaderService.feedbackText | translate: pageHeaderService.feedbackTextParams}}</span>\\r\\n                </div>\\r\\n                \x3c!-- Action Buttons and More Action Dropdown --\x3e\\r\\n                <div *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0 || pageHeaderService.actionButtons.length !== 0\\" class=\\"d-flex justify-content-end gap-10\\">\\r\\n                    \x3c!-- More Dropdown --\x3e\\r\\n                    <ng-container *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0\\">\\r\\n                        <div ngbDropdown  placement=\\"bottom-end\\">\\r\\n                            <button\\r\\n                            type=\\"button\\"\\r\\n                            class=\\"btn btn-outline-primary btn-md actions\\"\\r\\n                            container=\\"body\\"\\r\\n                            id=\\"dotButton\\"\\r\\n                            ngbDropdownToggle\\r\\n                            >\\r\\n                                <i class=\\"bi bi-three-dots-vertical\\"></i>\\r\\n                            </button>\\r\\n                            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\r\\n                                <button [id]=\\"item.id\\" *ngFor=\\"let item of pageHeaderService.actionDropdowns; let i = index;\\" ngbDropdownItem (click)=\\"onActionButtonClick(item)\\" [disabled]=\\"item.disabled!\\">\\r\\n                                    {{item.text | translate}}\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    \x3c!-- Action Buttons --\x3e                     \\r\\n                    <ui-action-buttons-new [actionButtons]=\\"pageHeaderService.actionButtons\\"></ui-action-buttons-new>                    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Sub Nav Buttons --\x3e\\r\\n    <div class=\\"row pt-3\\" *ngIf=\\"pageHeaderService.showSubNav && pageHeaderService.subNavs.length !== 0\\">\\r\\n        <div class=\\"col-12\\">\\r\\n            <div class=\\"d-flex flex-wrap mb-2\\">\\r\\n                <button\\r\\n                    (click)=\\"navigate(item.routerLink!)\\"\\r\\n                    [routerLinkActive]=\\"[\'active\']\\"\\r\\n                    *ngFor=\\"let item of pageHeaderService.subNavs\\"\\r\\n                    type=\\"button\\"\\r\\n                    class=\\"btn btn-sm me-2 mb-1\\"\\r\\n                    [ngClass]=\\"item.type!\\">\\r\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\">{{item.label | translate}}</ng-container>\\r\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\">{{item.label | translate: item.labelParams}}</ng-container>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Tabset --\x3e\\r\\n    <div *ngIf=\\"pageHeaderService.showTabsets === true && pageHeaderService.tabsets.length !== 0\\" class=\\"row mt-2\\">\\r\\n        <div class=\\"col-12\\">\\r\\n            <ul ngbNav #nav=\\"ngbNav\\" [(activeId)]=\\"active\\" class=\\"nav-tabs\\">\\r\\n                <li *ngFor=\\"let item of pageHeaderService.tabsets; let i = index;\\" [ngbNavItem]=\\"i\\">\\r\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate}}</a></ng-container>\\r\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate: item.labelParams}}</a></ng-container>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiPillComponent","id":"component-UiPillComponent-a91580a004ff1058aa360472262d98ec4cda1b5dbf3e51eda6eb5885c83d8bd514ff56873b882866d4eabe21ab6f4324b2bc72f8170d383be3baec9e796cab6e","file":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-pill","styleUrls":["./pill.component.scss"],"styles":[],"templateUrl":["./pill.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","defaultValue":"UiPillColorEnum.neutral","deprecated":false,"deprecationMessage":"","line":25,"type":"UiPillColorEnum","decorators":[]},{"name":"hasCloseButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","line":29,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":31,"type":"any","decorators":[]},{"name":"isAggregated","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf the pill is part of a group of pills that are aggregated, this will be true.\\n\\nUsed by `UiMultiSelectPillComponent` to determine if the pill should be removed from the list\\n","description":"<p>If the pill is part of a group of pills that are aggregated, this will be true.</p>\\n<p>Used by <code>UiMultiSelectPillComponent</code> to determine if the pill should be removed from the list</p>\\n","line":37,"type":"boolean","decorators":[]},{"name":"noHover","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"pillText","deprecated":false,"deprecationMessage":"","line":24,"type":"any","decorators":[]},{"name":"size","defaultValue":"UiPillSizeEnum.md","deprecated":false,"deprecationMessage":"","line":26,"type":"UiPillSizeEnum","decorators":[]},{"name":"value","deprecated":false,"deprecationMessage":"","line":30,"type":"any","decorators":[]}],"outputsClass":[{"name":"xButtonClick","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":22,"type":"EventEmitter"}],"propertiesClass":[{"name":"generatedId","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"isTooltipDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"pill","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'pill\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"checkColumnWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":65}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from \'@angular/core\';\\r\\nimport { UiPillColorEnum } from \'@lib/modules/form-controls/pills/enums/pill-color.enum\';\\r\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\r\\n\\r\\nexport interface IUiPillComponent {\\r\\n    pillText: string;\\r\\n    color: UiPillColorEnum;\\r\\n    size: UiPillSizeEnum;\\r\\n    icon: string;\\r\\n    value: number;\\r\\n    hasCloseButton: boolean;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-pill\',\\r\\n    templateUrl: \'./pill.component.html\',\\r\\n    styleUrls: [\'./pill.component.scss\'],\\r\\n})\\r\\nexport class UiPillComponent implements OnInit, AfterViewInit {\\r\\n    @ViewChild(\'pill\') public pill: ElementRef;\\r\\n\\r\\n    @Output() public xButtonClick = new EventEmitter<any>();\\r\\n\\r\\n    @Input() public pillText; //Text is required\\r\\n    @Input() public color: UiPillColorEnum = UiPillColorEnum.neutral;\\r\\n    @Input() public size: UiPillSizeEnum = UiPillSizeEnum.md;\\r\\n    @Input() public hasCloseButton = false;\\r\\n    @Input() public noHover = true;\\r\\n    @Input() public icon;\\r\\n    @Input() public value; //Optional\\r\\n    @Input() public id;\\r\\n    /**\\r\\n     * If the pill is part of a group of pills that are aggregated, this will be true.\\r\\n     *\\r\\n     * Used by `UiMultiSelectPillComponent` to determine if the pill should be removed from the list\\r\\n     */\\r\\n    @Input() public isAggregated: boolean;\\r\\n\\r\\n    public generatedId;\\r\\n    public isTooltipDisabled = true;\\r\\n\\r\\n    public constructor() { }\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        //Need a unique ID for inner div of pill to check if tooltip is enabled for each pill\\r\\n        this.generatedId = \'pill-inner-\' + this.id;\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit(): void {\\r\\n        setTimeout(() => {\\r\\n            this.checkColumnWidth();\\r\\n        }, 100);\\r\\n    }\\r\\n\\r\\n    //Checks width of inner div of pill to determine if tooltip is needed\\r\\n    public checkColumnWidth() {\\r\\n        if (this.pill && this.pill.nativeElement.firstChild.offsetWidth >= this.pill.nativeElement.firstChild.scrollWidth) {\\r\\n            this.isTooltipDisabled = true;\\r\\n        } else {\\r\\n            this.isTooltipDisabled = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    @HostListener(\'window:resize\')\\r\\n    public onResize() {\\r\\n        this.checkColumnWidth();\\r\\n    }\\r\\n\\r\\n    public onCloseClick() {\\r\\n        this.pill.nativeElement.remove();\\r\\n        this.xButtonClick.emit(this);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./pill.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":40,"modifierKind":[123]},"implements":["OnInit","AfterViewInit"],"templateData":"<span class=\\"pill\\">\\r\\n    <span\\r\\n        #pill\\r\\n        class=\\"badge {{ color }} rounded-pill {{ size }} float-start\\"\\r\\n        [ngClass]=\\"{ noHover: noHover === true }\\"\\r\\n        *ngIf=\\"pillText !== undefined || null\\"\\r\\n        [id]=\\"id\\"\\r\\n        [ngbTooltip]=\\"pillText\\"\\r\\n        [disableTooltip]=\\"isTooltipDisabled\\"\\r\\n    >\\r\\n        <span class=\\"pill-inner\\" [id]=\\"generatedId\\">\\r\\n            <i *ngIf=\\"icon !== undefined\\" class=\\"bi {{ icon }}\\"></i>\\r\\n            <span class=\\"pill-text\\">{{ pillText }}</span>\\r\\n        </span>\\r\\n        <i *ngIf=\\"hasCloseButton === true\\" class=\\"bi bi-x-lg\\" (click)=\\"onCloseClick()\\"></i>\\r\\n    </span>\\r\\n</span>\\r\\n"},{"name":"UiPillRendererComponent","id":"component-UiPillRendererComponent-44c7bad3129708b28041e608044ff8a4e5fc0f6a1ae19ccf301b14e5734b68e7362c3d57147f637d49af68b7a0e34d5431725f1c36ad2d913018ab7a59ea32c4","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-pill-renderer","styleUrls":["./pill-renderer.component.scss"],"styles":[],"templateUrl":["./pill-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"cls","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":110,"modifierKind":[123]},{"name":"color","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":108,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":104,"modifierKind":[123]},{"name":"pillClasses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":105,"modifierKind":[123]},{"name":"pillText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":106,"modifierKind":[123]},{"name":"pillTextTranslationId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":107,"modifierKind":[123]},{"name":"type","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":109,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clickedHandler","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"update","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnDestroy, OnInit } from \'@angular/core\';\\r\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\r\\nimport { ICellRendererParams } from \'ag-grid-community\';\\r\\n\\r\\nexport enum UiBadgeTypeEnum {\\r\\n    status = \'status\',\\r\\n    package = \'package\',\\r\\n    notification = \'notification\',\\r\\n    identifier = \'identifier\',\\r\\n    pill = \'pill\'\\r\\n}\\r\\n\\r\\nexport enum UiPackageEnum {\\r\\n    gold = \'gold\',\\r\\n    silver = \'silver\',\\r\\n    platinum = \'platinum\'\\r\\n}\\r\\n\\r\\nexport enum UiPackageClassEnum {\\r\\n    gold = \'dot-gold\',\\r\\n    silver = \'dot-silver\',\\r\\n    platinum = \'dot-platinum\',\\r\\n}\\r\\n\\r\\nexport enum UiStatusEnum {\\r\\n    neutral = \'neutral\',\\r\\n    success = \'success\',\\r\\n    info = \'info\',\\r\\n    danger = \'danger\',\\r\\n    caution = \'caution\',\\r\\n    warning = \'warning\',\\r\\n    tertiary = \'tertiary\',\\r\\n    dimgrey = \'dimgrey\'\\r\\n}\\r\\n\\r\\nexport enum UiStatusClassEnum {\\r\\n    neutral = \'dot-neutral\',\\r\\n    success = \'dot-success\',\\r\\n    caution = \'dot-caution\',\\r\\n    warning = \'dot-warning\',\\r\\n    danger = \'dot-danger\',\\r\\n    info = \'dot-info\',\\r\\n    tertiary = \'dot-tertiary\',\\r\\n    dimgrey = \'dot-dimgrey\'\\r\\n}\\r\\n\\r\\nexport enum UiIdentifierEnum {\\r\\n    neutral = \'neutral\',\\r\\n    category1 = \'category1\',\\r\\n    category2 = \'category2\',\\r\\n    category3 = \'category3\',\\r\\n    category4 = \'category4\',\\r\\n    category5 = \'category5\',\\r\\n    category6 = \'category6\'\\r\\n}\\r\\n\\r\\nexport enum UiIdentifierClassEnum {\\r\\n    Neutral = \'identifier-neutral\',\\r\\n    category1 = \'identifier-category-1\',\\r\\n    category2 = \'identifier-category-2\',\\r\\n    category3 = \'identifier-category-3\',\\r\\n    category4 = \'identifier-category-4\',\\r\\n    category5 = \'identifier-category-5\',\\r\\n    category6 = \'identifier-category-6\',\\r\\n}\\r\\n\\r\\nexport enum UiPillEnum {\\r\\n    neutral = \'neutral\',\\r\\n    category1 = \'category1\',\\r\\n    category2 = \'category2\',\\r\\n    category3 = \'category3\',\\r\\n    category4 = \'category4\',\\r\\n    category5 = \'category5\',\\r\\n    category6 = \'category6\',\\r\\n    success = \'success\',\\r\\n    warning = \'warning\',\\r\\n    danger = \'danger\',\\r\\n    info = \'info\',\\r\\n    extreme = \'extreme\',\\r\\n}\\r\\n\\r\\nexport enum UiPillClassEnum {\\r\\n    neutral = \'badge-neutral\',\\r\\n    category1 = \'badge-category-1\',\\r\\n    category2 = \'badge-category-2\',\\r\\n    category3 = \'badge-category-3\',\\r\\n    category4 = \'badge-category-4\',\\r\\n    category5 = \'badge-category-5\',\\r\\n    category6 = \'badge-category-6\',\\r\\n    success = \'badge-success\',\\r\\n    warning = \'badge-warning\',\\r\\n    danger = \'badge-danger\',\\r\\n    info = \'badge-info\',\\r\\n    extreme = \'badge-extreme\',\\r\\n}\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-pill-renderer\',\\r\\n    templateUrl: \'./pill-renderer.component.html\',\\r\\n    styleUrls: [\'./pill-renderer.component.scss\'],\\r\\n})\\r\\nexport class UiPillRendererComponent implements OnInit, ICellRendererAngularComp, OnDestroy {\\r\\n\\r\\n    public params: any;\\r\\n    public pillClasses = [];\\r\\n    public pillText = \'\';\\r\\n    public pillTextTranslationId = \'\';\\r\\n    public color = \'\';\\r\\n    public type = \'\';\\r\\n    public cls = \'\';\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public refresh(params: ICellRendererParams): boolean {\\r\\n        this.update(params);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public agInit(params: any): void {\\r\\n        this.update(params);\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        // no need to remove the button click handler as angular does this under the hood\\r\\n    }\\r\\n\\r\\n    public clickedHandler(e) {\\r\\n        if(this.params.clicked !== undefined) {\\r\\n            this.params.clicked(this.params.value);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    private update(params: any) {\\r\\n        this.params = params;\\r\\n\\r\\n        this.pillClasses = params.pillClasses;\\r\\n        this.pillText = params.pillText;\\r\\n        this.pillTextTranslationId = params.pillTextTranslationId;\\r\\n        this.type = params.type;\\r\\n        this.color = params.color;\\r\\n        this.cls = \'\';\\r\\n\\r\\n        if(this.type === UiBadgeTypeEnum.status){\\r\\n            this.cls = UiStatusClassEnum[this.color];\\r\\n        }\\r\\n\\r\\n        if(this.type === UiBadgeTypeEnum.package){\\r\\n            this.cls = UiPackageClassEnum[this.color];\\r\\n        }\\r\\n\\r\\n        if(this.type === UiBadgeTypeEnum.pill){\\r\\n            this.cls = UiPillClassEnum[this.color];\\r\\n        }\\r\\n\\r\\n        if(this.type === UiBadgeTypeEnum.notification){\\r\\n            // this.cls = PillClassEnum[this.color];\\r\\n        }\\r\\n        if(this.type === UiBadgeTypeEnum.identifier){\\r\\n            // this.cls = PillClassEnum[this.color];\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./pill-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":110},"implements":["OnInit","ICellRendererAngularComp","OnDestroy"],"templateData":"\x3c!-- Status --\x3e\\r\\n<div class=\\"\\" (click)=\\"clickedHandler($event)\\" *ngIf=\\"type=== \'status\'\\">\\r\\n    <span class=\\"dot sm\\" [ngClass]=\\"cls\\"></span>\\r\\n    <span class=\\"dot-text sm\\">\\r\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\r\\n            {{pillText | translate}}\\r\\n        </ng-container>\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n\x3c!-- Pill --\x3e\\r\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type=== \'pill\'\\">\\r\\n    <span class=\\"badge rounded-pill noHover sm\\" [ngClass]=\\"cls\\">\\r\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\r\\n            {{pillText | translate}}\\r\\n        </ng-container>\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n\x3c!-- Package --\x3e\\r\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type=== \'package\'\\">\\r\\n    <span class=\\"dot md\\" [ngClass]=\\"cls\\"></span>\\r\\n    <span class=\\"package-text\\">\\r\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\r\\n            {{pillText | translate}}\\r\\n        </ng-container>\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n\x3c!-- Notification --\x3e\\r\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type === \'notification\'\\">\\r\\n    <span class=\\"dot-notification sm\\">\\r\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\r\\n            {{pillText | translate}}\\r\\n        </ng-container>\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n\x3c!-- Identifier --\x3e\\r\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type === \'identifier\'\\">\\r\\n    <span class=\\"identifier identifier-neutral sm\\">\\r\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\r\\n            {{pillText | translate}}\\r\\n        </ng-container>\\r\\n    </span>\\r\\n</div>"},{"name":"UiPrivacyAgreementModalComponent","id":"component-UiPrivacyAgreementModalComponent-53e6f3935b5e5b7d14c2501e08f25662e3904d96a8bdb08afb633420145bfe9918aa8d7ed8c8616d76be0329f29045b5bf6accbba1a4bea1dedab1bd94bb3819","file":"libs/ui/src/lib/modules/authentification/components/modals/privacy-agreement-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./privacy-agreement-modal.component.scss"],"styles":[],"templateUrl":["./privacy-agreement-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":13,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"onAgreeClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onDisagreeClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1821,"end":1825,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1815,"end":1820,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2020,"end":2024,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2014,"end":2019,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\r\\nimport { UiModalBaseComponent } from \'@lib/modules/modal/components/modal-base/modal-base.component\';\\r\\n// Ngb\\r\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\n@Component({\\r\\n    templateUrl: \'./privacy-agreement-modal.component.html\',\\r\\n    styleUrls: [\'./privacy-agreement-modal.component.scss\']\\r\\n})\\r\\nexport class UiPrivacyAgreementModalComponent extends UiModalBaseComponent {\\r\\n\\r\\n    public constructor(public activeModal: NgbActiveModal) {\\r\\n        super(activeModal);\\r\\n    }\\r\\n\\r\\n    public onDisagreeClick() {\\r\\n        this.dismiss(\'disagree\');\\r\\n    }\\r\\n\\r\\n    public onAgreeClick() {\\r\\n        this.submit(\'agree\');\\r\\n    }\\r\\n\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".termsandconditions {\\r\\n    font-size: 14px;\\r\\n    margin: 16px 16px;\\r\\n}\\r\\n","styleUrl":"./privacy-agreement-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":11,"modifierKind":[123],"jsdoctags":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","templateData":"\x3c!-- Header START --\x3e\\r\\n<div class=\\"modal-header\\" [ngClass]=\\"{ \'border-0\': noBorder === true }\\">\\r\\n    <div class=\\"d-flex justify-content-between w-100\\">\\r\\n        <div>\\r\\n            \x3c!-- Optional Title --\x3e\\r\\n            <h3 class=\\"modal-title\\">{{ \'AUTHENTICATION.CONSENT_TITLE\' | translate }}</h3>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\x3c!-- Header END --\x3e\\r\\n\\r\\n\x3c!-- Body START --\x3e\\r\\n<div #modalBody class=\\"modal-body\\">\\r\\n    <section id=\\"overview\\" class=\\"ac-privacy-info-section\\">\\r\\n        <p>By using this platform you may receive compliance related requests to your email from Assent Inc. excluding materials for marketing or sales purposes unless you have opted-in to those requests separately.</p>\\r\\n        <p><u><b>PRIVACY AND TERMS</b></u></p>\\r\\n        <p>To use the supplier portal you&rsquo;ll need to agree to the Terms of Service and Privacy Policy below.&nbsp;</p>\\r\\n        <p><b>Your Obligations</b></p>\\r\\n        <p>By accessing the Assent website and Supplier Portal you consent to the collection and use of certain information about you as specified in the Privacy Policy.</p>\\r\\n        <p>You must fully comply with the Code of Conduct as outlined in the Terms of Use.</p>\\r\\n        <p><b>Data We Process and Why</b></p>\\r\\n        <p>Assent has no control over your use of information obtained from the Supplier Portal or website. You shall not access the Website or Services for any purposes or in any manner that is illegal or improper, including, without limitation as outlined in the Terms of Use.</p>\\r\\n        <p>Detailed information about the Personally Identifiable Information (PII) collected is outlined in the Privacy Policy. Information collected includes (but may not be limited to): name, email address, username and password, IP address, location data, use of the service, payment information, usage data in relation to the services, and other information.</p>\\r\\n    </section>\\r\\n</div>\\r\\n\x3c!-- Body END--\x3e\\r\\n\\r\\n<div class=\\"termsandconditions\\">\\r\\n    {{ \'AUTHENTICATION.ACCEPTANCE.BEGINNING\' | translate }} <a href=\\"https://www.assent.com/privacy\\" target=\\"_blank\\">{{ \'AUTHENTICATION.ACCEPTANCE.PRIVACY_POLICY\' | translate }}</a>\\r\\n    {{ \'AUTHENTICATION.ACCEPTANCE.AND\' | translate }} <a href=\\"https://www.assent.com/terms-of-use-supplier-portal/\\" target=\\"_blank\\">{{ \'AUTHENTICATION.ACCEPTANCE.TERMS_OF_USE\' | translate }}</a>\\r\\n    {{ \'AUTHENTICATION.ACCEPTANCE.ENDING\' | translate }}\\r\\n</div>\\r\\n\\r\\n\x3c!-- Footer START --\x3e\\r\\n<div class=\\"modal-footer\\" [ngClass]=\\"{ \'border-0\': noBorder === true }\\">\\r\\n    <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primary\\" (click)=\\"onDisagreeClick()\\">\\r\\n        {{ \'COMMON.I_DISAGREE\' | translate }}\\r\\n    </button>\\r\\n    <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary\\" (click)=\\"onAgreeClick()\\">\\r\\n        {{ \'COMMON.I_AGREE\' | translate }}\\r\\n    </button>\\r\\n</div>\\r\\n\x3c!-- Footer END --\x3e\\r\\n"},{"name":"UiProgressIndicatorComponent","id":"component-UiProgressIndicatorComponent-082b25a1765b54ffbb40c6cafb721354b2f1c1ff66575495b15a33e1cb9847b66bad8bb97200c7c6c395ee2e7f8cbd2b9cd3cb0cbccdbe1c00411d96b0082c9c","file":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-progress-indicator","styleUrls":["./progress-indicator.component.scss"],"styles":[],"templateUrl":["./progress-indicator.component.html"],"viewProviders":[],"inputsClass":[{"name":"steps","defaultValue":"new Array<IUiStep>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nArray includes title and description for each step\\nStep status is set by default\\nTitle is required\\n","description":"<p>Array includes title and description for each step\\nStep status is set by default\\nTitle is required</p>\\n","line":29,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"progressIndicator","deprecated":false,"deprecationMessage":"","type":"UiProgressIndicatorComponent","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'progress\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setLastStepComplete","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse this to set final step as complete before submitting form / doing final action\\nOnly available if last step is current\\n","description":"<p>Use this to set final step as complete before submitting form / doing final action\\nOnly available if last step is current</p>\\n","modifierKind":[123]},{"name":"setNextStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse this to set the next step as current and the current step as complete\\n","description":"<p>Use this to set the next step as current and the current step as complete</p>\\n","modifierKind":[123]},{"name":"setPreviousStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse this to set the previous step as current\\n","description":"<p>Use this to set the previous step as current</p>\\n","modifierKind":[123]},{"name":"stepSetup","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, ViewChild } from \'@angular/core\';\\r\\n\\r\\nexport interface IUiStep {\\r\\n    title: string;\\r\\n    description: string;\\r\\n    stepStatus: \'incomplete\' | \'complete\' | \'current\';\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-progress-indicator\',\\r\\n    templateUrl: \'./progress-indicator.component.html\',\\r\\n    styleUrls: [\'./progress-indicator.component.scss\'],\\r\\n})\\r\\n\\r\\n/**\\r\\n * Progress Indicator Component\\r\\n *\\r\\n * @description Can be used to show the progress of a multi-step process\\r\\n * Can have up to 6 steps\\r\\n * First step is always \'current\'\\r\\n * Can only go up or down one step at a time\\r\\n */\\r\\nexport class UiProgressIndicatorComponent implements OnInit {\\r\\n    @ViewChild(\'progress\') public progressIndicator: UiProgressIndicatorComponent;\\r\\n    /**\\r\\n     * Array includes title and description for each step\\r\\n     * Step status is set by default\\r\\n     * Title is required\\r\\n     */\\r\\n    @Input() public steps = new Array<IUiStep>();\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.stepSetup();\\r\\n    }\\r\\n\\r\\n    public stepSetup() {\\r\\n        //Check if steps are more than 6\\r\\n        //If more than 6, remove the extra steps and throw console error\\r\\n        if (this.steps.length > 6) {\\r\\n            console.error(\'Progress Indicator can only have up to 6 steps\');\\r\\n            this.steps = this.steps.slice(0, 6);\\r\\n            throw new Error(\'Progress Indicator can only have up to 6 steps\');\\r\\n        }\\r\\n        //Check if title is empty\\r\\n        //If empty, throw console error\\r\\n        this.steps.forEach((step, index) => {\\r\\n            if (!step.title) {\\r\\n                console.error(`Title is required for step ${index + 1}`);\\r\\n                throw new Error(`Title is required for step ${index + 1}`);\\r\\n            }\\r\\n            //First step always current by default\\r\\n            step.stepStatus = index === 0 ? \'current\' : \'incomplete\';\\r\\n        });\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Use this to set the next step as current and the current step as complete\\r\\n     */\\r\\n    public setNextStep() {\\r\\n        const currentIndex = this.steps.findIndex((step) => step.stepStatus === \'current\');\\r\\n        if (currentIndex >= 0) {\\r\\n            this.steps[currentIndex].stepStatus = \'complete\';\\r\\n            //If current step is not the last step, set the next step as current\\r\\n            if (currentIndex !== this.steps.length - 1) {\\r\\n                this.steps[currentIndex + 1].stepStatus = \'current\';\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Use this to set the previous step as current\\r\\n     */\\r\\n    public setPreviousStep() {\\r\\n        for (let i = 0; i < this.steps.length; i++) {\\r\\n            if (this.steps[i].stepStatus === \'current\' && i !== 0) {\\r\\n                this.steps[i].stepStatus = \'incomplete\';\\r\\n                this.steps[i - 1].stepStatus = \'current\';\\r\\n                break;\\r\\n            }\\r\\n            //If final step is complete, set it as current\\r\\n            if (this.steps[i].stepStatus === \'complete\' && i === this.steps.length - 1) {\\r\\n                this.steps[i].stepStatus = \'current\';\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Use this to set final step as complete before submitting form / doing final action\\r\\n     * Only available if last step is current\\r\\n     */\\r\\n    public setLastStepComplete() {\\r\\n        if (this.steps[this.steps.length - 1].stepStatus === \'current\') {\\r\\n            this.steps[this.steps.length - 1].stepStatus = \'complete\';\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./progress-indicator.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<div class=\\"progress-indicator ms-4\\">\\r\\n    <div class=\\"progress-border\\">\\r\\n        <div class=\\"progress-indicator-step\\" *ngFor=\\"let step of steps; let i = index\\" #progress>\\r\\n            <div *ngIf=\\"step.title\\" class=\\"progress-step {{ step.stepStatus }}\\">\\r\\n                <div class=\\"progress-main\\">\\r\\n                    <div class=\\"step-row\\">\\r\\n                        <span class=\\"icon\\">\\r\\n                            <i [ngClass]=\\"{\\r\\n                                    \'bi bi-check-circle-fill\': step.stepStatus === \'complete\',\\r\\n                                    \'bi bi-circle\': step.stepStatus === \'incomplete\',\\r\\n                                    \'bi bi-circle-half\': step.stepStatus === \'current\'\\r\\n                                }\\"></i></span>\\r\\n                        <div class=\\"progress-title\\">{{ i + 1 }}. {{ step.title }}</div>\\r\\n                    </div>\\r\\n                    <div class=\\"progress-description\\">\\r\\n                        {{ step.description }}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiQuickFilterComponent","id":"component-UiQuickFilterComponent-6102e9bba91ecce50b08e1a718dd6dbae20d8196aaedfbcf8e1d680670252f25029b6f4d005d9d2626165dedbeb920c02ec39e174dd7798235014783caf6439b","file":"libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-quick-filter","styleUrls":["./quick-filter.component.scss"],"styles":[],"templateUrl":["./quick-filter.component.html"],"viewProviders":[],"inputsClass":[{"name":"disabled","deprecated":false,"deprecationMessage":"","line":29,"type":"boolean","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"multiSelect","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"setOptions","deprecated":false,"deprecationMessage":"","line":39,"type":"IUiDropdownPlusOption[]","decorators":[]},{"name":"showSearch","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"showSelectClearBtns","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]},{"name":"small","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"openChange","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":49,"type":"EventEmitter<literal type>"},{"name":"searchChange","defaultValue":"new EventEmitter<{ id: string; options: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":55,"type":"EventEmitter<literal type>"},{"name":"selectionChange","defaultValue":"new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":46,"type":"EventEmitter<literal type>"},{"name":"triggerClicked","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":52,"type":"EventEmitter<literal type>"}],"propertiesClass":[{"name":"_disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[121]},{"name":"_label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":63,"modifierKind":[121]},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":64,"modifierKind":[121]},{"name":"dropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":58,"decorators":[{"name":"ViewChild","stringifiedArguments":"UiDropdownPlusComponent"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"selectedOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"triggerLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"triggerLabelParams","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"clearSelection","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onOpenChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSearchChange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelectionChange","args":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTriggerClicked","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"unSelectItem","args":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateTriggerLabel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from \'@angular/core\';\\r\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\r\\nimport { LangChangeEvent, TranslateService } from \'@ngx-translate/core\';\\r\\nimport { Subscription } from \'rxjs\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-quick-filter\',\\r\\n    templateUrl: \'./quick-filter.component.html\',\\r\\n    styleUrls: [\'./quick-filter.component.scss\'],\\r\\n})\\r\\nexport class UiQuickFilterComponent implements OnInit, OnDestroy {\\r\\n    @Input() public id: string;\\r\\n    // @Input() public disabled = false;\\r\\n    @Input() public small = false;\\r\\n    @Input() public showSearch = false;\\r\\n    @Input() public multiSelect = true;\\r\\n    @Input() public showSelectClearBtns = false;\\r\\n\\r\\n    @Input() public set label(label: string) {\\r\\n        this._label = label;\\r\\n        this.triggerLabel = label;\\r\\n    };\\r\\n    public get label() {\\r\\n        return this._label;\\r\\n    }\\r\\n    public triggerLabel = \'\';\\r\\n    public triggerLabelParams: unknown;\\r\\n\\r\\n    @Input() public set disabled(val: boolean) {\\r\\n        this._disabled = val;\\r\\n    };\\r\\n\\r\\n    public get disabled() {\\r\\n        return this._disabled;\\r\\n    }\\r\\n\\r\\n    public selectedOptions: any = [];\\r\\n\\r\\n    @Input() public set setOptions(options: IUiDropdownPlusOption[]) {\\r\\n        this.options = options;\\r\\n        setTimeout(() => {\\r\\n            this.onSelectionChange({ id: this.id, selectedOptions: this.options.filter((option) => { return option.value === true; }) });\\r\\n        });\\r\\n    };\\r\\n\\r\\n    @Output() public selectionChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public openChange: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public triggerClicked: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @Output() public searchChange: EventEmitter<{ id: string; options: IUiDropdownPlusOption[] }> =\\r\\n        new EventEmitter<{ id: string; options: IUiDropdownPlusOption[] }>();\\r\\n\\r\\n    @ViewChild(UiDropdownPlusComponent) public dropdownRef: UiDropdownPlusComponent;\\r\\n\\r\\n    public options: IUiDropdownPlusOption[] = [];\\r\\n    public menuOpen = false;\\r\\n\\r\\n    private _label = \'\';\\r\\n    private _subscription: Subscription;\\r\\n    private _disabled = false;\\r\\n\\r\\n    constructor(private _translateService: TranslateService) { }\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this._subscription = this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\\r\\n            this.updateTriggerLabel();\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy() {\\r\\n        this._subscription.unsubscribe();\\r\\n    }\\r\\n\\r\\n    public onSelectionChange(event: { id: string; selectedOptions: IUiDropdownPlusOption[] }) {\\r\\n        this.selectedOptions = event.selectedOptions;\\r\\n        this.updateTriggerLabel();\\r\\n        this.selectionChange.emit(event);\\r\\n    }\\r\\n\\r\\n    public updateTriggerLabel() {\\r\\n\\r\\n        if (this.selectedOptions.length === 0) {\\r\\n            this.triggerLabel = this._label;\\r\\n        }\\r\\n        else if (this.selectedOptions.length === 1) {\\r\\n            this.triggerLabel = this.selectedOptions[0].label;\\r\\n        }\\r\\n        else {\\r\\n            this.triggerLabel = this._label;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public clearSelection() {\\r\\n        this.dropdownRef.clearSelection();\\r\\n    }\\r\\n\\r\\n    public unSelectItem(itemId: string) {\\r\\n        this.dropdownRef.unSelectItem(itemId);\\r\\n    }\\r\\n\\r\\n    public onOpenChange(event) {\\r\\n        this.menuOpen = event.open;\\r\\n        this.openChange.emit(event);\\r\\n    }\\r\\n\\r\\n    public onTriggerClicked(event) {\\r\\n        this.triggerClicked.emit(event);\\r\\n    }\\r\\n\\r\\n    public onSearchChange() { }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n// Trigger Styles\\r\\n.quick-filter {\\r\\n    cursor: pointer;\\r\\n    font-weight: bold;\\r\\n\\r\\n    &.open {\\r\\n        color: $primary;\\r\\n        border-bottom: 1px solid $primary;\\r\\n        margin-bottom: -1px;\\r\\n    }\\r\\n\\r\\n    &:hover {\\r\\n        color: $primary;\\r\\n        border-bottom: 1px solid $primary;\\r\\n        margin-bottom: -1px;\\r\\n    }\\r\\n\\r\\n    &.option-selected {\\r\\n        color: $primary;\\r\\n\\r\\n        &.disabled {\\r\\n            color: $gray-600;\\r\\n            cursor: default;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.disabled {\\r\\n        color: $gray-600;\\r\\n        cursor: default;\\r\\n\\r\\n        &:hover {\\r\\n            border-bottom: none;\\r\\n            margin-bottom: 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.open {\\r\\n        .bi {\\r\\n            // transition: 150ms ease-in-out;\\r\\n            transform: rotate(180deg);\\r\\n            &.anim {\\r\\n                transition: 150ms ease-in-out;\\r\\n            }\\r\\n            margin-bottom: 4px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .bi {\\r\\n        &.anim{\\r\\n            transition: 150ms ease-in-out;\\r\\n        }\\r\\n        transform: rotate(0deg);\\r\\n    }\\r\\n\\r\\n    .btn {\\r\\n        &.trigger {\\r\\n            &.no-border {\\r\\n                border: none;\\r\\n                box-shadow: none !important;\\r\\n                padding-left: 0px;\\r\\n                padding-right: 0px;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        &.hi-lite {\\r\\n            border: 1px solid $primary;\\r\\n        }\\r\\n\\r\\n        &.btn-link {\\r\\n\\r\\n            padding: 0;\\r\\n            &:hover {\\r\\n                text-decoration: underline;\\r\\n            }\\r\\n\\r\\n            &:focus {\\r\\n                text-decoration: underline;\\r\\n                color: $primary-600;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n","styleUrl":"./quick-filter.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":65,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"accessors":{"label":{"name":"label","setSignature":{"name":"label","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":19,"jsdoctags":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"label","type":"","returnType":"","line":23}},"disabled":{"name":"disabled","setSignature":{"name":"disabled","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"disabled","type":"","returnType":"","line":33}},"setOptions":{"name":"setOptions","setSignature":{"name":"setOptions","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div\\r\\n    class=\\"d-flex align-items-center quick-filter\\"\\r\\n    [id]=\\"id + \'_trigger\'\\"\\r\\n    [ngClass]=\\"{ open: menuOpen === true, \'option-selected\': selectedOptions?.length !== 0, disabled: disabled, small: small === true }\\"\\r\\n    (click)=\\"dropdownRef.triggerClick()\\"\\r\\n>\\r\\n    <div [id]=\\"id + \'_triggerLabel\'\\" class=\\"label d-inline-block text-truncate\\">\\r\\n        <span *ngIf=\\"this.selectedOptions.length === 0\\">{{ \'COMMON.ALL\' | translate }}</span>\\r\\n        {{ triggerLabel | translate: triggerLabelParams }}\\r\\n        <span *ngIf=\\"this.selectedOptions.length > 1\\"> ({{ this.selectedOptions.length }})</span>\\r\\n    </div>\\r\\n    <div>\\r\\n        <i\\r\\n            class=\\"bi ms-1 d-inline-block anim\\"\\r\\n            [id]=\\"id + \'_triggerIcon\'\\"\\r\\n            [ngClass]=\\"{ \'bi-caret-down-fill\': selectedOptions.length === 0, \'bi-filter\': selectedOptions.length !== 0 }\\"\\r\\n        >\\r\\n        </i>\\r\\n    </div>\\r\\n</div>\\r\\n<ui-dropdown-plus\\r\\n    #dropdownRef\\r\\n    [id]=\\"id\\"\\r\\n    [view]=\\"\'none\'\\"\\r\\n    [externalTriggerEleId]=\\"id + \'_trigger\'\\"\\r\\n    [animIcon]=\\"true\\"\\r\\n    [setOptions]=\\"options\\"\\r\\n    [disabled]=\\"disabled\\"\\r\\n    [small]=\\"small\\"\\r\\n    [paddingTop]=\\"3\\"\\r\\n    [showSearch]=\\"showSearch\\"\\r\\n    [multiSelect]=\\"multiSelect\\"\\r\\n    [showSelectClearBtns]=\\"showSelectClearBtns\\"\\r\\n    (selectionChange)=\\"onSelectionChange($event)\\"\\r\\n    (openChange)=\\"onOpenChange($event)\\"\\r\\n    (triggerClicked)=\\"onTriggerClicked($event)\\"\\r\\n    (searchChange)=\\"onSearchChange()\\"\\r\\n>\\r\\n</ui-dropdown-plus>\\r\\n"},{"name":"UiRadioButtonComponent","id":"component-UiRadioButtonComponent-4bc3f04a39cc9e27434f9667213a5752e6c750a9d3f11655fd3ab9eb7db419e3333a8fbade4957ede507ef56912d0e8849df2dfda58803c25f907f628bb0a0a6","file":"libs/ui/src/lib/modules/form/radio-button/radio-button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-radio-button-new","styleUrls":["./radio-button.component.scss"],"styles":[],"templateUrl":["./radio-button.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":16,"type":"literal type[]","decorators":[]},{"name":"radioButtons","defaultValue":"new Array<UiRadioButtonComponent>()","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-radio-button-new\',\\r\\n    templateUrl: \'./radio-button.component.html\',\\r\\n    styleUrls: [\'./radio-button.component.scss\'],\\r\\n})\\r\\n/**\\r\\n * Radio button component\\r\\n *\\r\\n * @description This component is used to display a radio button group\\r\\n */\\r\\nexport class UiRadioButtonComponent extends UiFormControlBaseComponent implements OnInit {\\r\\n    @Input() public inline = false;\\r\\n    @Input() public options: { name: string; label: string; value: string; required: boolean }[];\\r\\n\\r\\n    @Input() public radioButtons = new Array<UiRadioButtonComponent>();\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"ui-radio-button-new .form-check-inline {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n}","styleUrl":"./radio-button.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"templateData":"<ng-container [formGroup]=\\"form\\"\\r\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\r\\n    <div>\\r\\n        <ui-form-control-base\\r\\n            [label]=\\"label\\"\\r\\n            [placeholder]=\\"placeholder\\"\\r\\n            [formControlName]=\\"formControlName\\"\\r\\n            [form]=\\"form\\"\\r\\n            [showHelpText]=\\"showHelpText\\"\\r\\n            [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n            [showInfoIcon]=\\"showInfoIcon\\"\\r\\n            [infoText]=\\"infoText\\"\\r\\n            [helpText]=\\"helpText\\" \\r\\n        >\\r\\n            <div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\r\\n                <div\\r\\n                    *ngFor=\\"let radio of radioButtons\\"\\r\\n                    class=\\"form-check\\"\\r\\n                    [ngClass]=\\"{ \'form-check-inline radio-inline\': radio.inline === true }\\"\\r\\n                >\\r\\n                    <input\\r\\n                        [id]=\\"radio.id + \'_Radio\'\\"\\r\\n                        type=\\"radio\\"\\r\\n                        class=\\"form-check-input\\"\\r\\n                        [name]=\\"formControlName\\"\\r\\n                        [formControlName]=\\"formControlName\\"\\r\\n                        [value]=\\"radio.value\\"\\r\\n                        [checked]=\\"value === radio.value\\"\\r\\n                        [placeholder]=\\"placeholder\\"\\r\\n                        [required]=\\"true\\"\\r\\n                    />\\r\\n                    <label\\r\\n                        [id]=\\"radio.id + \'_Label\'\\"\\r\\n                        [for]=\\"radio.id + \'_Radio\'\\"\\r\\n                        class=\\"form-check-label\\"\\r\\n                        [ngClass]=\\"{ \'radio-inline\': radio.inline === true }\\"\\r\\n                    >\\r\\n                        {{ radio.label }}\\r\\n                    </label>\\r\\n                    <i\\r\\n                        *ngIf=\\"radio.showInfoIcon && radio.infoText !== \'\'\\"\\r\\n                        class=\\"bi bi-question-circle-fill d-inline-block\\"\\r\\n                        placement=\\"top\\"\\r\\n                        [ngbTooltip]=\\"radio.infoText\\"\\r\\n                    ></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        </ui-form-control-base>\\r\\n    </div>\\r\\n</ng-container>"},{"name":"UiRichTextEditorComponent","id":"component-UiRichTextEditorComponent-29da2855f6bf268e7804f6e4c9bede4047767b9173aa552f4142a642b75b430f410a137dd67189ae2496bb7d2a0ad84ffe3480f73606627ab0c936d42318f21f","file":"libs/ui/src/lib/modules/form/rich-text-editor/rich-text-editor.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor","styleUrls":["./rich-text-editor.component.scss"],"styles":[],"templateUrl":["./rich-text-editor.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","type":"QuillEditorComponent","optional":false,"description":"","line":17,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'editor\'"}],"modifierKind":[123]},{"name":"modules","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"Quill","defaultValue":"QuillNamespace","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"sanitizedValue","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"UiFormValidators","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"getSanitizedValue","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChangeEditor","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ViewChild, OnInit } from \'@angular/core\';\\r\\n// Quill\\r\\nimport { QuillEditorComponent } from \'ngx-quill\';\\r\\nimport * as QuillNamespace from \'quill\';\\r\\n// Classes\\r\\nimport UiPasteClipboard from \'./classes/paste.class\';\\r\\n// Components\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-rich-text-editor\',\\r\\n    templateUrl: \'./rich-text-editor.component.html\',\\r\\n    styleUrls: [\'./rich-text-editor.component.scss\'],\\r\\n})\\r\\nexport class UiRichTextEditorComponent extends UiFormControlBaseComponent implements OnInit {\\r\\n    @ViewChild(\'editor\') public editor: QuillEditorComponent;\\r\\n    public Quill: any = QuillNamespace;\\r\\n\\r\\n    public modules;\\r\\n    public sanitizedValue;\\r\\n    public UiFormValidators: any;\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.showSuccessValidation = false;\\r\\n        this.modules = {\\r\\n            toolbar: false,\\r\\n        };\\r\\n        this.Quill.register(\'modules/clipboard\', UiPasteClipboard);\\r\\n    }\\r\\n\\r\\n    public getSanitizedValue() {\\r\\n        return this.sanitizedValue;\\r\\n    }\\r\\n\\r\\n    public onChangeEditor($event) {\\r\\n        this.sanitizedValue = $event.text.trim();\\r\\n        this.valueChange.emit($event);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"templateData":"<ng-container [formGroup]=\\"form\\"\\r\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\r\\n    <ui-form-control-base\\r\\n        [label]=\\"label\\"\\r\\n        [formControlName]=\\"formControlName\\"\\r\\n        [form]=\\"form\\"\\r\\n        [placeholder]=\\"placeholder\\"\\r\\n        [showHelpText]=\\"showHelpText\\"\\r\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n        [showInfoIcon]=\\"showInfoIcon\\"\\r\\n        [infoText]=\\"infoText\\"\\r\\n        [helpText]=\\"helpText\\"\\r\\n        [setValueOnChange]=\\"false\\"\\r\\n    >\\r\\n        <div class=\\"rich-text-editor-container\\">\\r\\n            <ui-rich-text-editor-toolbar [editor]=\\"editor\\"></ui-rich-text-editor-toolbar>\\r\\n            <quill-editor\\r\\n                #editor\\r\\n                id=\\"editor\\"\\r\\n                [formControlName]=\\"formControlName\\"\\r\\n                [ngClass]=\\"{\\r\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\r\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation\\r\\n                }\\"\\r\\n                [placeholder]=\\"\'COMMON.TEXT_EDITOR.TYPE_IMPORTANT_INFO_HERE\' | translate\\"\\r\\n                [modules]=\\"modules\\"\\r\\n                (onContentChanged)=\\"onChangeEditor($event)\\"\\r\\n            >\\r\\n            </quill-editor>\\r\\n        </div>\\r\\n    </ui-form-control-base>\\r\\n</ng-container>\\r\\n"},{"name":"UiRichTextEditorComponent","id":"component-UiRichTextEditorComponent-4c0966aee9faab38ff247a95552e2708a285ee9846906dcc9b0ffc041e61f8a858b1ef36e2666ef1aef605e786d8dab25ac75574c7150715487c7f7cc916f836-1","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor-old","styleUrls":["./rich-text-editor.component.scss"],"styles":[],"templateUrl":["./rich-text-editor.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","type":"QuillEditorComponent","optional":false,"description":"","line":21,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'editor\'"}],"modifierKind":[123]},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"modules","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ViewChild, OnInit } from \'@angular/core\';\\r\\n// Quill\\r\\nimport { QuillEditorComponent } from \'ngx-quill\';\\r\\nimport * as QuillNamespace from \'quill\';\\r\\nconst Quill: any = QuillNamespace;\\r\\n// Classes\\r\\nimport UiPasteClipboard from \'./classes/paste.class\';\\r\\n// Components\\r\\nimport { UiFormControlBaseComponent } from \'@lib/modules/form-controls/form-control-base/form-control-base.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-rich-text-editor-old\',\\r\\n    templateUrl: \'./rich-text-editor.component.html\',\\r\\n    styleUrls: [\'./rich-text-editor.component.scss\'],\\r\\n})\\r\\n/**\\r\\n * @deprecated [Use ..form/rich-text-editor/rich-text-editor.component.ts\']\\r\\n */\\r\\nexport class UiRichTextEditorComponent extends UiFormControlBaseComponent implements OnInit {\\r\\n    @ViewChild(\'editor\') public editor: QuillEditorComponent;\\r\\n\\r\\n    public format;\\r\\n    public modules;\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.modules = {\\r\\n            toolbar: false,\\r\\n        };\\r\\n\\r\\n        Quill.register(\'modules/clipboard\', UiPasteClipboard);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiRichTextEditorComponent-1","templateData":"<div *ngIf=\\"form !== undefined\\">\\r\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\r\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\r\\n        {{ label }}\\r\\n        \x3c!-- Required Asterix --\x3e\\r\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\r\\n    </label>\\r\\n    <i\\r\\n        [id]=\\"id + \'_InfoIcon\'\\"\\r\\n        *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\r\\n        class=\\"bi bi-question-circle-fill\\"\\r\\n        placement=\\"top\\"\\r\\n        [ngbTooltip]=\\"infoText\\"\\r\\n    ></i>\\r\\n\\r\\n    <div class=\\"input-group\\">\\r\\n        \x3c!-- Prefix Icon --\x3e\\r\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Prefix Text --\x3e\\r\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\"> </span>\\r\\n        <div class=\\"rich-text-editor-container\\">\\r\\n        <ui-rich-text-editor-toolbar-old [editor]=\\"editor\\"></ui-rich-text-editor-toolbar-old>\\r\\n        <quill-editor\\r\\n            #editor\\r\\n            id=\\"editor\\"\\r\\n            label=\\"edit\\"\\r\\n            [ngClass]=\\"{\\r\\n                \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\r\\n                \'is-valid\': form.controls[formControlName].valid && showSuccessValidation\\r\\n            }\\"\\r\\n            (input)=\\"onChange($event.target.value)\\"\\r\\n            [value]=\\"d\\"\\r\\n            [disabled]=\\"false\\"\\r\\n            [placeholder]=\\"\'COMMON.TEXT_EDITOR.TYPE_IMPORTANT_INFO_HERE\' | translate\\"\\r\\n            [modules]=\\"modules\\"\\r\\n        >\\r\\n        </quill-editor>\\r\\n    </div>\\r\\n        \x3c!-- Suffix Icon --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Suffix Text --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{ suffixText }}\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"feedback\\">\\r\\n        \x3c!-- Success Feedback Text --\x3e\\r\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\r\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Error Feedback Text --\x3e\\r\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && showErrorValidation\\">\\r\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.required\\">\\r\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Help Text --\x3e\\r\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\r\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\r\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{ helpText }}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiRichTextEditorToolbarComponent","id":"component-UiRichTextEditorToolbarComponent-41ec2469cf518502f6046537d80e832f3b39900eb961eab3079d9e6ce552c77000e1b6a524f4ef9ac6297937eb287e8a5cf2d47273e827ff87da14cab7f285a5","file":"libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor-toolbar","styleUrls":["./rich-text-editor-toolbar.component.scss"],"styles":[],"templateUrl":["./rich-text-editor-toolbar.component.html"],"viewProviders":[],"inputsClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","line":23,"type":"QuillEditorComponent","decorators":[]},{"name":"editMode","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"quillValueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":24,"type":"EventEmitter<any>"},{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":36,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"buttons","defaultValue":"{\\r\\n        bold: new UiButtonObject(),\\r\\n        italic: new UiButtonObject(),\\r\\n        underline: new UiButtonObject(),\\r\\n        sub: new UiButtonObject(),\\r\\n        super: new UiButtonObject(),\\r\\n        ordered: new UiButtonObject(),\\r\\n        bullet: new UiButtonObject(),\\r\\n        link: new UiButtonObject(),\\r\\n        clearFormatting: new UiButtonObject(),\\r\\n    }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"dropdownComp","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdown\'"}],"modifierKind":[123]},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"linkText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"linkURL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"popover","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":21,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'popover\', {static: false}"}],"modifierKind":[123]},{"name":"selectedSize","defaultValue":"this.sizeList[1].label","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"sizeList","defaultValue":"[\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\r\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"urlPattern","defaultValue":"REGEX_CONST.URL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"changeDropdownItem","args":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":226,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChanged","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":233,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"populateLinkInput","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"submitLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":210,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild, Input, AfterViewInit, EventEmitter, Output } from \'@angular/core\';\\r\\nimport { UiFormBaseComponent } from \'@lib/modules/form/form-base/form-base.component\';\\r\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { QuillEditorComponent } from \'ngx-quill\';\\r\\nimport { UiButtonObject } from \'../../classes/buttonObject.class\';\\r\\nimport { REGEX_CONST } from \'@app/shared/constants/common.const\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-rich-text-editor-toolbar\',\\r\\n    templateUrl: \'./rich-text-editor-toolbar.component.html\',\\r\\n    styleUrls: [\'./rich-text-editor-toolbar.component.scss\'],\\r\\n})\\r\\nexport class UiRichTextEditorToolbarComponent extends UiFormBaseComponent implements OnInit, AfterViewInit {\\r\\n    public format;\\r\\n    public linkText;\\r\\n    public linkURL;\\r\\n    public urlPattern = REGEX_CONST.URL;\\r\\n\\r\\n    @ViewChild(\'dropdown\') public dropdownComp: NgbDropdown;\\r\\n    @ViewChild(\'popover\', { static: false }) public popover: any;\\r\\n\\r\\n    @Input() public editor: QuillEditorComponent;\\r\\n    @Output() public quillValueChange: EventEmitter<any> = new EventEmitter<any>();\\r\\n\\r\\n    public buttons = {\\r\\n        bold: new UiButtonObject(),\\r\\n        italic: new UiButtonObject(),\\r\\n        underline: new UiButtonObject(),\\r\\n        sub: new UiButtonObject(),\\r\\n        super: new UiButtonObject(),\\r\\n        ordered: new UiButtonObject(),\\r\\n        bullet: new UiButtonObject(),\\r\\n        link: new UiButtonObject(),\\r\\n        clearFormatting: new UiButtonObject(),\\r\\n    };\\r\\n\\r\\n    public sizeList = [\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\r\\n    ];\\r\\n\\r\\n    public selectedSize = this.sizeList[1].label;\\r\\n\\r\\n    constructor(private _translateService: TranslateService) {\\r\\n        super();\\r\\n    }\\r\\n\\r\\n    public onChange(e) {\\r\\n        const range = this.editor.quillEditor.getSelection();\\r\\n        if (range) {\\r\\n            switch (e) {\\r\\n                case \'small\': {\\r\\n                    if (this.sizeList[0].selected === false) {\\r\\n                        this.sizeList[0].selected = true;\\r\\n                        this.editor.quillEditor.format(\'size\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'size\', false);\\r\\n                        this.sizeList[0].selected = false;\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n                //Normal will format full line when header is applied\\r\\n                case false: {\\r\\n                    this.editor.quillEditor.format(\'header\', false);\\r\\n                    if (this.sizeList[1].selected === true) {\\r\\n                        this.sizeList[1].selected = true;\\r\\n                        this.editor.quillEditor.format(\'size\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'size\', false);\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n                case \'4\': {\\r\\n                    if (this.sizeList[2].selected === false) {\\r\\n                        this.sizeList[2].selected = true;\\r\\n                        this.editor.quillEditor.format(\'header\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'header\', false);\\r\\n                        this.sizeList[2].selected = false;\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n                case \'5\': {\\r\\n                    if (this.sizeList[3].selected === false) {\\r\\n                        this.sizeList[3].selected = true;\\r\\n                        this.editor.quillEditor.format(\'header\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'header\', false);\\r\\n                        this.sizeList[3].selected = false;\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public changeDropdownItem(selectedLabel) {\\r\\n        this.selectedSize = selectedLabel;\\r\\n        const index = this.sizeList.findIndex((x) => x.label === selectedLabel);\\r\\n        const item = this.sizeList[index].value;\\r\\n\\r\\n        this.onChange(item);\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.formControls = {\\r\\n            link: { value: \'\', validators: [] },\\r\\n        };\\r\\n        this.createForm(this.formControls);\\r\\n        this.editMode = true;\\r\\n        this.onSaveBtnClick = this.submitLink;\\r\\n\\r\\n        //onclick, check if bold button is already selected. If false, will change to true and format to bold.\\r\\n        //If already selected, will change to false and remove format\\r\\n        this.buttons.bold.onClick = (e) => {\\r\\n            if (this.buttons.bold.selected === false) {\\r\\n                this.buttons.bold.selected = true;\\r\\n                this.editor.quillEditor.format(e, true);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(e, false);\\r\\n                this.buttons.bold.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.italic.onClick = (e) => {\\r\\n            if (this.buttons.italic.selected === false) {\\r\\n                this.buttons.italic.selected = true;\\r\\n                this.editor.quillEditor.format(e, true);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(e, false);\\r\\n                this.buttons.italic.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.underline.onClick = (e) => {\\r\\n            if (this.buttons.underline.selected === false) {\\r\\n                this.buttons.underline.selected = true;\\r\\n                this.editor.quillEditor.format(e, true);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(e, false);\\r\\n                this.buttons.underline.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.sub.onClick = (e) => {\\r\\n            if (this.buttons.sub.selected === false) {\\r\\n                this.buttons.sub.selected = true;\\r\\n                this.editor.quillEditor.format(\'script\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'script\', false);\\r\\n                this.buttons.sub.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.super.onClick = (e) => {\\r\\n            if (this.buttons.super.selected === false) {\\r\\n                this.buttons.super.selected = true;\\r\\n                this.editor.quillEditor.format(\'script\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'script\', false);\\r\\n                this.buttons.super.selected = false;\\r\\n            }\\r\\n        };\\r\\n        this.buttons.ordered.onClick = (e) => {\\r\\n            if (this.buttons.ordered.selected === false) {\\r\\n                this.buttons.ordered.selected = true;\\r\\n                this.editor.quillEditor.format(\'list\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'list\', false);\\r\\n                this.buttons.ordered.selected = false;\\r\\n            }\\r\\n        };\\r\\n        this.buttons.bullet.onClick = (e) => {\\r\\n            if (this.buttons.bullet.selected === false) {\\r\\n                this.buttons.bullet.selected = true;\\r\\n                this.editor.quillEditor.format(\'list\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'list\', false);\\r\\n                this.buttons.bullet.selected = false;\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n\\r\\n    public populateLinkInput() {\\r\\n        const selection = this.editor.quillEditor.getSelection(true);\\r\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\r\\n\\r\\n        if (this.urlPattern.test(this.linkText)) {\\r\\n            this.form.controls.link.setValue(this.linkText);\\r\\n        } else {\\r\\n            this.form.controls.link.setValue(\'\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public editLink() {\\r\\n        const range = this.editor.quillEditor.getSelection();\\r\\n        const selection = this.editor.quillEditor.getSelection(true);\\r\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\r\\n        const format = this.editor.quillEditor.getFormat(range.index, range.length);\\r\\n        if (range && format.link) {\\r\\n            this.form.controls.link.setValue(format.link);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //Submits link, formats it and places it where cursor is\\r\\n    //If no value is inputted when save button is clicked, exits modal\\r\\n    public submitLink() {\\r\\n        if (!!this.form.get(\'link\').value) {\\r\\n            const link = this.submitForm();\\r\\n            const selection = this.editor.quillEditor.getSelection(true);\\r\\n            const text = this.editor.quillEditor.getText(selection.index, selection.length);\\r\\n            this.editor.quillEditor.deleteText(selection.index, selection.length);\\r\\n            // eslint-disable-next-line dot-notation\\r\\n            this.linkURL = link[\'link\'];\\r\\n            this.editor.quillEditor.insertText(selection.index, text, \'link\', this.linkURL);\\r\\n        }\\r\\n\\r\\n        this.form.controls.link.enable();\\r\\n        this.popover.close();\\r\\n        this.onClearBtnClick();\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit() {\\r\\n        //NOTE: This delay allows the editor to completely load before using it.\\r\\n        setTimeout(() => {\\r\\n            this.editor.quillEditor.on(\'selection-change\', (e) => this.onSelectionChanged(e));\\r\\n        }, 500);\\r\\n    }\\r\\n\\r\\n    public onSelectionChanged($event) {\\r\\n        const bounds = this.editor.quillEditor.getSelection($event);\\r\\n        //If selection is inside editor\\r\\n        if (bounds) {\\r\\n            this.format = this.editor.quillEditor.getFormat($event.range);\\r\\n\\r\\n            //Highlights correct button when text with specified format is selected\\r\\n            this.buttons.bold.selected = !!this.format.bold;\\r\\n\\r\\n            this.buttons.italic.selected = !!this.format.italic;\\r\\n\\r\\n            this.buttons.underline.selected = !!this.format.underline;\\r\\n\\r\\n            this.buttons.sub.selected = this.format.script === \'sub\';\\r\\n\\r\\n            this.buttons.super.selected = this.format.script === \'super\';\\r\\n\\r\\n            this.buttons.ordered.selected = this.format.list === \'ordered\';\\r\\n\\r\\n            this.buttons.bullet.selected = this.format.list === \'bullet\';\\r\\n\\r\\n            this.buttons.link.selected = !!this.format.link;\\r\\n\\r\\n            if (!!this.format.link) {\\r\\n                this.popover.open();\\r\\n\\r\\n                this.editLink();\\r\\n            }\\r\\n\\r\\n            this.buttons.clearFormatting.onClick = () => {\\r\\n                this.editor.quillEditor.removeFormat(bounds.index, bounds.length);\\r\\n            };\\r\\n        }\\r\\n\\r\\n        if (this.format.size === \'small\') {\\r\\n            this.sizeList[0].selected = true;\\r\\n            this.selectedSize = this.sizeList[0].label;\\r\\n        } else {\\r\\n            this.sizeList[0].selected = false;\\r\\n        }\\r\\n\\r\\n        if (this.format.size === false) {\\r\\n            this.sizeList[1].selected = true;\\r\\n            this.selectedSize = this.sizeList[1].label;\\r\\n        } else {\\r\\n            this.sizeList[1].selected = false;\\r\\n        }\\r\\n\\r\\n        if (this.format.header === 4) {\\r\\n            this.sizeList[2].selected = true;\\r\\n            this.selectedSize = this.sizeList[2].label;\\r\\n        } else {\\r\\n            this.sizeList[2].selected = false;\\r\\n        }\\r\\n\\r\\n        if (this.format.header === 5) {\\r\\n            this.sizeList[3].selected = true;\\r\\n            this.selectedSize = this.sizeList[3].label;\\r\\n        } else {\\r\\n            this.sizeList[3].selected = false;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor-toolbar.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":45,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiFormBaseComponent","implements":["OnInit","AfterViewInit"],"templateData":"<div class=\\"toolbar\\">\\r\\n    <div>\\r\\n        <div ngbDropdown class=\\"d-inline-block size-dropdown\\" placement=\\"bottom-start\\" #dropdown=\\"ngbDropdown\\">\\r\\n            <button type=\\"button\\" class=\\"acp-form-control small btn-select size-dropdown\\" id=\\"dropdownBasic1\\" ngbDropdownToggle>\\r\\n                <span> {{ selectedSize }} <i class=\\"bi bi-chevron-expand\\"></i></span>\\r\\n            </button>\\r\\n            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\r\\n                <button\\r\\n                    ngbDropdownItem\\r\\n                    *ngFor=\\"let size of sizeList\\"\\r\\n                    value=\\"{{ size.value }}\\"\\r\\n                    (click)=\\"this.changeDropdownItem(size.label)\\"\\r\\n                >\\r\\n                    {{ size.label }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\"text-editor-toolbar-buttons\\">\\r\\n    <div class=\\"button-group-1\\">\\r\\n        <button\\r\\n            value=\\"bold\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BOLD\' | translate\\"\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngClass]=\\"{ selected: buttons.bold.selected }\\"\\r\\n            (click)=\\"buttons.bold.onClick(\'bold\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-type-bold\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ITALIC\' | translate\\"\\r\\n            [ngClass]=\\"{ selected: buttons.italic.selected }\\"\\r\\n            (click)=\\"buttons.italic.onClick(\'italic\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-type-italic\\"></i>\\r\\n        </button>\\r\\n\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.UNDERLINE\' | translate\\"\\r\\n            [ngClass]=\\"{ selected: buttons.underline.selected }\\"\\r\\n            (click)=\\"buttons.underline.onClick(\'underline\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-type-underline\\"></i>\\r\\n        </button>\\r\\n\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUBSCRIPT\' | translate\\"\\r\\n            value=\\"sub\\"\\r\\n            [ngClass]=\\"{ selected: buttons.sub.selected }\\"\\r\\n            (click)=\\"buttons.sub.onClick(\'sub\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-subscript\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUPERSCRIPT\' | translate\\"\\r\\n            value=\\"super\\"\\r\\n            [ngClass]=\\"{ selected: buttons.super.selected }\\"\\r\\n            (click)=\\"buttons.super.onClick(\'super\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-superscript\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"button-group-2\\">\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ORDERED_LIST\' | translate\\"\\r\\n            value=\\"ordered\\"\\r\\n            [ngClass]=\\"{ selected: buttons.ordered.selected }\\"\\r\\n            (click)=\\"buttons.ordered.onClick(\'ordered\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-list-ol\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BULLET_LIST\' | translate\\"\\r\\n            value=\\"bullet\\"\\r\\n            [ngClass]=\\"{ selected: buttons.bullet.selected }\\"\\r\\n            (click)=\\"buttons.bullet.onClick(\'bullet\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-list-ul\\"></i>\\r\\n        </button>\\r\\n    \\r\\n    <div [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.LINK\' | translate\\" placement=\\"top\\">\\r\\n        <button\\r\\n            id=\\"popover\\"\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            placement=\\"bottom\\"\\r\\n            value=\\"link\\"\\r\\n            [ngClass]=\\"{ selected: buttons.link.selected }\\"\\r\\n            data-toggle=\\"popover\\"\\r\\n            [ngbPopover]=\\"popContent\\"\\r\\n            #popover=\\"ngbPopover\\"\\r\\n            [autoClose]=\\"\'outside\'\\"\\r\\n            popoverClass=\\"popover-class\\"\\r\\n            (click)=\\"populateLinkInput()\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-link-45deg\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <button\\r\\n        class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n        [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.CLEAR_FORMATTING\' | translate\\"\\r\\n        value=\\"false\\"\\r\\n        [ngClass]=\\"{ selected: buttons.clearFormatting.selected }\\"\\r\\n        (click)=\\"buttons.clearFormatting.onClick(\'false\')\\"\\r\\n    >\\r\\n        <i class=\\"bi bi-eraser-fill\\"></i>\\r\\n    </button>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n    <div class=\\"body link-pop\\">\\r\\n        <ng-template #popContent class=\\"popstyle\\">\\r\\n            <form [formGroup]=\\"form\\">\\r\\n                <div class=\\"row popover-row\\">\\r\\n                    <p class=\\"col-auto link-text\\">{{ \'COMMON.ENTER_LINK\' | translate }}</p>\\r\\n                    <div class=\\"col-auto pop-url\\">\\r\\n                        <input class=\\"url form-control\\" id=\\"link\\" formControlName=\\"link\\" form=\\"form\\" value=\\"{{ linkText }}\\" />\\r\\n                    </div>\\r\\n                    <div class=\\"col-auto pop-button\\">\\r\\n                        <button type=\\"button\\" class=\\"btn btn-link btn-sm col-2\\" (click)=\\"submitLink()\\">\\r\\n                            {{ \'COMMON.SAVE\' | translate }}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiRichTextEditorToolbarComponent","id":"component-UiRichTextEditorToolbarComponent-4075c284c9744ad3f7d70d2ef06c3d9e9ac65e8518cf4b079d4aa6d5acd4035bae6b04f3db042ef5884b6e93beaec4d02edd1fdc39706be44bb15fce249bd884-1","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor-toolbar-old","styleUrls":["./rich-text-editor-toolbar.component.scss"],"styles":[],"templateUrl":["./rich-text-editor-toolbar.component.html"],"viewProviders":[],"inputsClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","line":23,"type":"QuillEditorComponent","decorators":[]},{"name":"editMode","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":36,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"buttons","defaultValue":"{\\r\\n        bold: new UiButtonObject(),\\r\\n        italic: new UiButtonObject(),\\r\\n        underline: new UiButtonObject(),\\r\\n        sub: new UiButtonObject(),\\r\\n        super: new UiButtonObject(),\\r\\n        ordered: new UiButtonObject(),\\r\\n        bullet: new UiButtonObject(),\\r\\n        link: new UiButtonObject(),\\r\\n        clearFormatting: new UiButtonObject(),\\r\\n    }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"dropdownComp","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdown\'"}],"modifierKind":[123]},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"linkText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"linkURL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"popover","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":21,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'popover\', {static: false}"}],"modifierKind":[123]},{"name":"selectedSize","defaultValue":"this.sizeList[1].label","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"sizeList","defaultValue":"[\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\r\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"urlPattern","defaultValue":"REGEX_CONST.URL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"changeDropdownItem","args":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":197,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":225,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChanged","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":232,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"populateLinkInput","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":186,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"submitLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild, Input, AfterViewInit } from \'@angular/core\';\\r\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\r\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\nimport { QuillEditorComponent } from \'ngx-quill\';\\r\\nimport { UiButtonObject } from \'../../classes/buttonObject.class\';\\r\\nimport { REGEX_CONST } from \'@app/shared/constants/common.const\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-rich-text-editor-toolbar-old\',\\r\\n    templateUrl: \'./rich-text-editor-toolbar.component.html\',\\r\\n    styleUrls: [\'./rich-text-editor-toolbar.component.scss\'],\\r\\n})\\r\\nexport class UiRichTextEditorToolbarComponent extends UiFormBaseComponent implements OnInit, AfterViewInit {\\r\\n    public format;\\r\\n    public linkText;\\r\\n    public linkURL;\\r\\n    public urlPattern = REGEX_CONST.URL;\\r\\n\\r\\n    @ViewChild(\'dropdown\') public dropdownComp: NgbDropdown;\\r\\n    @ViewChild(\'popover\', { static: false }) public popover: any;\\r\\n\\r\\n    @Input() public editor: QuillEditorComponent;\\r\\n\\r\\n    public buttons = {\\r\\n        bold: new UiButtonObject(),\\r\\n        italic: new UiButtonObject(),\\r\\n        underline: new UiButtonObject(),\\r\\n        sub: new UiButtonObject(),\\r\\n        super: new UiButtonObject(),\\r\\n        ordered: new UiButtonObject(),\\r\\n        bullet: new UiButtonObject(),\\r\\n        link: new UiButtonObject(),\\r\\n        clearFormatting: new UiButtonObject(),\\r\\n    };\\r\\n\\r\\n    public sizeList = [\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\r\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\r\\n    ];\\r\\n\\r\\n    public selectedSize = this.sizeList[1].label;\\r\\n\\r\\n    constructor(private _translateService: TranslateService) {\\r\\n        super();\\r\\n    }\\r\\n\\r\\n    public onChange(e) {\\r\\n        const range = this.editor.quillEditor.getSelection();\\r\\n        if (range) {\\r\\n            switch (e) {\\r\\n                case \'small\': {\\r\\n                    if (this.sizeList[0].selected === false) {\\r\\n                        this.sizeList[0].selected = true;\\r\\n                        this.editor.quillEditor.format(\'size\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'size\', false);\\r\\n                        this.sizeList[0].selected = false;\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n                //Normal will format full line when header is applied\\r\\n                case false: {\\r\\n                    this.editor.quillEditor.format(\'header\', false);\\r\\n                    if (this.sizeList[1].selected === true) {\\r\\n                        this.sizeList[1].selected = true;\\r\\n                        this.editor.quillEditor.format(\'size\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'size\', false);\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n                case \'4\': {\\r\\n                    if (this.sizeList[2].selected === false) {\\r\\n                        this.sizeList[2].selected = true;\\r\\n                        this.editor.quillEditor.format(\'header\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'header\', false);\\r\\n                        this.sizeList[2].selected = false;\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n                case \'5\': {\\r\\n                    if (this.sizeList[3].selected === false) {\\r\\n                        this.sizeList[3].selected = true;\\r\\n                        this.editor.quillEditor.format(\'header\', e);\\r\\n                    } else {\\r\\n                        this.editor.quillEditor.format(\'header\', false);\\r\\n                        this.sizeList[3].selected = false;\\r\\n                    }\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public changeDropdownItem(selectedLabel) {\\r\\n        this.selectedSize = selectedLabel;\\r\\n        const index = this.sizeList.findIndex((x) => x.label === selectedLabel);\\r\\n        const item = this.sizeList[index].value;\\r\\n\\r\\n        this.onChange(item);\\r\\n    }\\r\\n\\r\\n    public ngOnInit() {\\r\\n        this.formControls = {\\r\\n            link: { value: \'\', validators: [] },\\r\\n        };\\r\\n        this.createForm(this.formControls);\\r\\n        this.editMode = true;\\r\\n        this.onSaveBtnClick = this.submitLink;\\r\\n\\r\\n        //onclick, check if bold button is already selected. If false, will change to true and format to bold.\\r\\n        //If already selected, will change to false and remove format\\r\\n        this.buttons.bold.onClick = (e) => {\\r\\n            if (this.buttons.bold.selected === false) {\\r\\n                this.buttons.bold.selected = true;\\r\\n                this.editor.quillEditor.format(e, true);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(e, false);\\r\\n                this.buttons.bold.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.italic.onClick = (e) => {\\r\\n            if (this.buttons.italic.selected === false) {\\r\\n                this.buttons.italic.selected = true;\\r\\n                this.editor.quillEditor.format(e, true);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(e, false);\\r\\n                this.buttons.italic.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.underline.onClick = (e) => {\\r\\n            if (this.buttons.underline.selected === false) {\\r\\n                this.buttons.underline.selected = true;\\r\\n                this.editor.quillEditor.format(e, true);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(e, false);\\r\\n                this.buttons.underline.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.sub.onClick = (e) => {\\r\\n            if (this.buttons.sub.selected === false) {\\r\\n                this.buttons.sub.selected = true;\\r\\n                this.editor.quillEditor.format(\'script\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'script\', false);\\r\\n                this.buttons.sub.selected = false;\\r\\n            }\\r\\n        };\\r\\n\\r\\n        this.buttons.super.onClick = (e) => {\\r\\n            if (this.buttons.super.selected === false) {\\r\\n                this.buttons.super.selected = true;\\r\\n                this.editor.quillEditor.format(\'script\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'script\', false);\\r\\n                this.buttons.super.selected = false;\\r\\n            }\\r\\n        };\\r\\n        this.buttons.ordered.onClick = (e) => {\\r\\n            if (this.buttons.ordered.selected === false) {\\r\\n                this.buttons.ordered.selected = true;\\r\\n                this.editor.quillEditor.format(\'list\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'list\', false);\\r\\n                this.buttons.ordered.selected = false;\\r\\n            }\\r\\n        };\\r\\n        this.buttons.bullet.onClick = (e) => {\\r\\n            if (this.buttons.bullet.selected === false) {\\r\\n                this.buttons.bullet.selected = true;\\r\\n                this.editor.quillEditor.format(\'list\', e);\\r\\n            } else {\\r\\n                this.editor.quillEditor.format(\'list\', false);\\r\\n                this.buttons.bullet.selected = false;\\r\\n            }\\r\\n        };\\r\\n    }\\r\\n\\r\\n    public populateLinkInput() {\\r\\n        const selection = this.editor.quillEditor.getSelection(true);\\r\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\r\\n\\r\\n        if (this.urlPattern.test(this.linkText)) {\\r\\n            this.form.controls.link.setValue(this.linkText);\\r\\n        } else {\\r\\n            this.form.controls.link.setValue(\'\');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public editLink() {\\r\\n        const range = this.editor.quillEditor.getSelection();\\r\\n        const selection = this.editor.quillEditor.getSelection(true);\\r\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\r\\n        const format = this.editor.quillEditor.getFormat(range.index, range.length);\\r\\n        if (range && format.link) {\\r\\n            this.form.controls.link.setValue(format.link);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //Submits link, formats it and places it where cursor is\\r\\n    //If no value is inputted when save button is clicked, exits modal\\r\\n    public submitLink() {\\r\\n        if (!!this.form.get(\'link\').value) {\\r\\n            const link = this.submitForm();\\r\\n            const selection = this.editor.quillEditor.getSelection(true);\\r\\n            const text = this.editor.quillEditor.getText(selection.index, selection.length);\\r\\n            this.editor.quillEditor.deleteText(selection.index, selection.length);\\r\\n            // eslint-disable-next-line dot-notation\\r\\n            this.linkURL = link[\'link\'];\\r\\n            this.editor.quillEditor.insertText(selection.index, text, \'link\', this.linkURL);\\r\\n        }\\r\\n\\r\\n        this.form.controls.link.enable();\\r\\n        this.popover.close();\\r\\n        this.onClearBtnClick();\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit() {\\r\\n        //NOTE: This delay allows the editor to completely load before using it.\\r\\n        setTimeout(() => {\\r\\n            this.editor.quillEditor.on(\'selection-change\', (e) => this.onSelectionChanged(e));\\r\\n        }, 500);\\r\\n    }\\r\\n\\r\\n    public onSelectionChanged($event) {\\r\\n        const bounds = this.editor.quillEditor.getSelection($event);\\r\\n        //If selection is inside editor\\r\\n        if (bounds) {\\r\\n            this.format = this.editor.quillEditor.getFormat($event.range);\\r\\n\\r\\n            //Highlights correct button when text with specified format is selected\\r\\n            this.buttons.bold.selected = !!this.format.bold;\\r\\n\\r\\n            this.buttons.italic.selected = !!this.format.italic;\\r\\n\\r\\n            this.buttons.underline.selected = !!this.format.underline;\\r\\n\\r\\n            this.buttons.sub.selected = this.format.script === \'sub\';\\r\\n\\r\\n            this.buttons.super.selected = this.format.script === \'super\';\\r\\n\\r\\n            this.buttons.ordered.selected = this.format.list === \'ordered\';\\r\\n\\r\\n            this.buttons.bullet.selected = this.format.list === \'bullet\';\\r\\n\\r\\n            this.buttons.link.selected = !!this.format.link;\\r\\n\\r\\n            if (!!this.format.link) {\\r\\n                this.popover.open();\\r\\n\\r\\n                this.editLink();\\r\\n            }\\r\\n\\r\\n            this.buttons.clearFormatting.onClick = () => {\\r\\n                this.editor.quillEditor.removeFormat(bounds.index, bounds.length);\\r\\n            };\\r\\n        }\\r\\n\\r\\n        if (this.format.size === \'small\') {\\r\\n            this.sizeList[0].selected = true;\\r\\n            this.selectedSize = this.sizeList[0].label;\\r\\n        } else {\\r\\n            this.sizeList[0].selected = false;\\r\\n        }\\r\\n\\r\\n        if (this.format.size === false) {\\r\\n            this.sizeList[1].selected = true;\\r\\n            this.selectedSize = this.sizeList[1].label;\\r\\n        } else {\\r\\n            this.sizeList[1].selected = false;\\r\\n        }\\r\\n\\r\\n        if (this.format.header === 4) {\\r\\n            this.sizeList[2].selected = true;\\r\\n            this.selectedSize = this.sizeList[2].label;\\r\\n        } else {\\r\\n            this.sizeList[2].selected = false;\\r\\n        }\\r\\n\\r\\n        if (this.format.header === 5) {\\r\\n            this.sizeList[3].selected = true;\\r\\n            this.selectedSize = this.sizeList[3].label;\\r\\n        } else {\\r\\n            this.sizeList[3].selected = false;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor-toolbar.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":44,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiFormBaseComponent","implements":["OnInit","AfterViewInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiRichTextEditorToolbarComponent-1","templateData":"<div class=\\"toolbar\\">\\r\\n    <div>\\r\\n        <div ngbDropdown class=\\"d-inline-block size-dropdown\\" placement=\\"bottom-start\\" #dropdown=\\"ngbDropdown\\">\\r\\n            <button type=\\"button\\" class=\\"acp-form-control small btn-select size-dropdown\\" id=\\"dropdownBasic1\\" ngbDropdownToggle>\\r\\n                <span> {{ selectedSize }} <i class=\\"bi bi-chevron-expand\\"></i></span>\\r\\n            </button>\\r\\n            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\r\\n                <button\\r\\n                    ngbDropdownItem\\r\\n                    *ngFor=\\"let size of sizeList\\"\\r\\n                    value=\\"{{ size.value }}\\"\\r\\n                    (click)=\\"this.changeDropdownItem(size.label)\\"\\r\\n                >\\r\\n                    {{ size.label }}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\"text-editor-toolbar-buttons\\">\\r\\n    <div class=\\"button-group-1\\">\\r\\n        <button\\r\\n            value=\\"bold\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BOLD\' | translate\\"\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngClass]=\\"{ selected: buttons.bold.selected }\\"\\r\\n            (click)=\\"buttons.bold.onClick(\'bold\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-type-bold\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ITALIC\' | translate\\"\\r\\n            [ngClass]=\\"{ selected: buttons.italic.selected }\\"\\r\\n            (click)=\\"buttons.italic.onClick(\'italic\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-type-italic\\"></i>\\r\\n        </button>\\r\\n\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.UNDERLINE\' | translate\\"\\r\\n            [ngClass]=\\"{ selected: buttons.underline.selected }\\"\\r\\n            (click)=\\"buttons.underline.onClick(\'underline\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-type-underline\\"></i>\\r\\n        </button>\\r\\n\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUBSCRIPT\' | translate\\"\\r\\n            value=\\"sub\\"\\r\\n            [ngClass]=\\"{ selected: buttons.sub.selected }\\"\\r\\n            (click)=\\"buttons.sub.onClick(\'sub\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-subscript\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUPERSCRIPT\' | translate\\"\\r\\n            value=\\"super\\"\\r\\n            [ngClass]=\\"{ selected: buttons.super.selected }\\"\\r\\n            (click)=\\"buttons.super.onClick(\'super\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-superscript\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"button-group-2\\">\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ORDERED_LIST\' | translate\\"\\r\\n            value=\\"ordered\\"\\r\\n            [ngClass]=\\"{ selected: buttons.ordered.selected }\\"\\r\\n            (click)=\\"buttons.ordered.onClick(\'ordered\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-list-ol\\"></i>\\r\\n        </button>\\r\\n        <button\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BULLET_LIST\' | translate\\"\\r\\n            value=\\"bullet\\"\\r\\n            [ngClass]=\\"{ selected: buttons.bullet.selected }\\"\\r\\n            (click)=\\"buttons.bullet.onClick(\'bullet\')\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-list-ul\\"></i>\\r\\n        </button>\\r\\n    \\r\\n    <div [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.LINK\' | translate\\" placement=\\"top\\">\\r\\n        <button\\r\\n            id=\\"popover\\"\\r\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n            placement=\\"bottom\\"\\r\\n            value=\\"link\\"\\r\\n            [ngClass]=\\"{ selected: buttons.link.selected }\\"\\r\\n            data-toggle=\\"popover\\"\\r\\n            [ngbPopover]=\\"popContent\\"\\r\\n            #popover=\\"ngbPopover\\"\\r\\n            [autoClose]=\\"\'outside\'\\"\\r\\n            popoverClass=\\"popover-class\\"\\r\\n            (click)=\\"populateLinkInput()\\"\\r\\n        >\\r\\n            <i class=\\"bi bi-link-45deg\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <button\\r\\n        class=\\"btn btn-link btn-md toolbarButton\\"\\r\\n        [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.CLEAR_FORMATTING\' | translate\\"\\r\\n        value=\\"false\\"\\r\\n        [ngClass]=\\"{ selected: buttons.clearFormatting.selected }\\"\\r\\n        (click)=\\"buttons.clearFormatting.onClick(\'false\')\\"\\r\\n    >\\r\\n        <i class=\\"bi bi-eraser-fill\\"></i>\\r\\n    </button>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n    <div class=\\"body link-pop\\">\\r\\n        <ng-template #popContent class=\\"popstyle\\">\\r\\n            <form [formGroup]=\\"form\\">\\r\\n                <div class=\\"row popover-row\\">\\r\\n                    <p class=\\"col-auto link-text\\">{{ \'COMMON.ENTER_LINK\' | translate }}</p>\\r\\n                    <div class=\\"col-auto pop-url\\">\\r\\n                        <input class=\\"url form-control\\" id=\\"link\\" formControlName=\\"link\\" form=\\"form\\" value=\\"{{ linkText }}\\" />\\r\\n                    </div>\\r\\n                    <div class=\\"col-auto pop-button\\">\\r\\n                        <button type=\\"button\\" class=\\"btn btn-link btn-sm col-2\\" (click)=\\"submitLink()\\">\\r\\n                            {{ \'COMMON.SAVE\' | translate }}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiSubsidiarySelectorComponent","id":"component-UiSubsidiarySelectorComponent-95537d55050101bbcdf5b3efddc20e175a7dd393ec384140a969ebabd8be897ae51c248791ea4108b5184f9bf4f44a76972a8e0d5842e3e416b010154251079f","file":"libs/ui/src/lib/modules/layout2/components/subsidiary-selector/subsidiary-selector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-subsidiary-selector","styleUrls":["./subsidiary-selector.component.scss"],"styles":[],"templateUrl":["./subsidiary-selector.component.html"],"viewProviders":[],"inputsClass":[{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":12,"type":"IUiDropdownPlusOption[]","decorators":[]},{"name":"small","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"selectionChanged","defaultValue":"new EventEmitter<IUiDropdownPlusOption>()","deprecated":false,"deprecationMessage":"","line":14,"type":"EventEmitter<IUiDropdownPlusOption>"}],"propertiesClass":[{"name":"companiesDropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":11,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'companiesDropdownRef\', {static: false}"}],"modifierKind":[123]},{"name":"selectedOption","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"subsidiaryDescription","defaultValue":"this._translateService.instant(\'COMMON.SUBSIDIARY_SELECT\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"subsidiaryName","defaultValue":"this._translateService.instant(\'COMMON.SUBSIDIARY_LIST\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"_selectOption","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelectionChange","args":[{"name":"$event","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectOptionById","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectOptionByIndex","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \'@angular/core\';\\r\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\r\\nimport { TranslateService } from \'@ngx-translate/core\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-subsidiary-selector\',\\r\\n    templateUrl: \'./subsidiary-selector.component.html\',\\r\\n    styleUrls: [\'./subsidiary-selector.component.scss\'],\\r\\n})\\r\\nexport class UiSubsidiarySelectorComponent implements OnInit {\\r\\n    @ViewChild(\'companiesDropdownRef\', { static: false }) public companiesDropdownRef: UiDropdownPlusComponent;\\r\\n    @Input() public options: IUiDropdownPlusOption[] = [];\\r\\n    @Input() public small = false;\\r\\n    @Output() public selectionChanged: EventEmitter<IUiDropdownPlusOption> = new EventEmitter<IUiDropdownPlusOption>();\\r\\n\\r\\n    public subsidiaryName = this._translateService.instant(\'COMMON.SUBSIDIARY_LIST\');\\r\\n    public subsidiaryDescription = this._translateService.instant(\'COMMON.SUBSIDIARY_SELECT\');\\r\\n    public selectedOption: IUiDropdownPlusOption;\\r\\n\\r\\n    constructor(private _translateService: TranslateService) {}\\r\\n\\r\\n    public ngOnInit(): void { }\\r\\n\\r\\n    public onSelectionChange($event: { id: string; selectedOptions: IUiDropdownPlusOption[] }) {\\r\\n        if ($event.selectedOptions.length > 0) {\\r\\n            this.selectOptionById($event.selectedOptions[0].id);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public selectOptionByIndex(index: number) {\\r\\n        this.selectedOption = this.options[index];\\r\\n        this._selectOption();\\r\\n    }\\r\\n\\r\\n    public selectOptionById(id: string) {\\r\\n        this.selectedOption = this.options.find((o) => o.id === id);\\r\\n        this._selectOption();\\r\\n    }\\r\\n\\r\\n    private _selectOption() {\\r\\n        if (this.selectedOption !== undefined) {\\r\\n            const data: { description: string } = this.selectedOption.data as { description: string };\\r\\n            this.selectedOption.value = true;\\r\\n            this.subsidiaryName = this.selectedOption.label;\\r\\n            this.subsidiaryDescription = data.description;\\r\\n\\r\\n            // Emit the selected option\\r\\n            this.selectionChanged.emit(this.selectedOption);\\r\\n        } else {\\r\\n            console.error(\'Invalid option selected\');\\r\\n        }\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.subsidary-selector {\\r\\n    \\r\\n    display: flex;\\r\\n    color: $white;\\r\\n    background-color: $secondary-600;\\r\\n    outline: 1px solid white;\\r\\n    border-radius: 0.25rem;;\\r\\n    \\r\\n    &:hover {\\r\\n        background-color: $secondary-700;\\r\\n        outline: 2px solid $primary-200;        \\r\\n        outline-offset: -1px;  \\r\\n    }\\r\\n}\\r\\n\\r\\na {\\r\\n    text-decoration: none; \\r\\n    &:link,:visited,:hover,:active\\r\\n    { \\r\\n        text-decoration: none; \\r\\n    }     \\r\\n}\\r\\n\\r\\n\\r\\n.cursor-pointer { cursor: pointer; }\\r\\n\\r\\n.icon-text {\\r\\n    height: 34px;\\r\\n    text-transform: capitalize;\\r\\n}\\r\\n\\r\\n.caret {\\r\\n    transition: 300ms ease-in-out;\\r\\n    transform: rotate(0deg);\\r\\n}\\r\\n\\r\\n.caret.rotated {\\r\\n    transform: rotate(180deg); \\r\\n}","styleUrl":"./subsidiary-selector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div id=\\"subsidary-selector-trigger\\" class=\\"subsidary-selector cursor-pointer mt-3 mb-3\\" [ngClass]=\\"{small: small === true}\\" (click)=\\"companiesDropdownRef.triggerClick()\\">\\r\\n\\r\\n    \x3c!-- Button --\x3e\\r\\n    <div *ngIf=\\"small === false\\" class=\\"d-flex justify-content-between w-100 ms-2 me-2\\">\\r\\n        <div class=\\"mr-auto mt-2 mb-2 ms-2\\">\\r\\n            <div class=\\"strong\\">{{subsidiaryName}}</div>\\r\\n            <div class=\\"small\\">{{subsidiaryDescription}}</div>\\r\\n        </div>\\r\\n        <div class=\\"h-100 d-flex align-items-center\\">\\r\\n            <i class=\\"bi bi-chevron-down caret me-1\\" [ngClass]=\\"{ rotated: companiesDropdownRef.menuOpen }\\"></i>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Icon --\x3e\\r\\n    <div class=\\"w-100\\" *ngIf=\\"small === true\\">\\r\\n        <a [ngbTooltip]=\\"subsidiaryName\\" class=\\"icon-text text-white d-flex justify-content-center align-items-center w-100\\">\\r\\n            \x3c!-- Display first letter --\x3e\\r\\n            {{subsidiaryName[0]}}\\r\\n        </a>\\r\\n    </div>\\r\\n\\r\\n    \x3c!-- Dropdown Select Panel --\x3e\\r\\n    <ui-dropdown-plus\\r\\n        [externalTriggerEleId]=\\"\'subsidary-selector-trigger\'\\"\\r\\n        #companiesDropdownRef\\r\\n        [id]=\\"\'companiesDropdown\'\\"\\r\\n        [setOptions]=\\"options\\"\\r\\n        [showSearch]=\\"true\\"\\r\\n        [multiSelect]=\\"false\\"\\r\\n        [singleSelectAutoClose]=\\"true\\"\\r\\n        [view]=\\"\'none\'\\"\\r\\n        (selectionChange)=\\"onSelectionChange($event)\\"\\r\\n    >\\r\\n    </ui-dropdown-plus>\\r\\n</div>\\r\\n"},{"name":"UiSupportFormComponent","id":"component-UiSupportFormComponent-7c38c3fd61bf48ea7fff037b6de7384f041aac957ff8ac6b88bb8bac3c172ff1758d8113e04023d00a003191e1001a31faa7ef4b1a28cbbb2e59efc8d8d6e627","file":"libs/ui/src/lib/modules/layout/components/support-form/support-form.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-support-form","styleUrls":["./support-form.component.scss"],"styles":[],"templateUrl":["./support-form.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":36,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { Validators } from \'@angular/forms\';\\r\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-support-form\',\\r\\n    templateUrl: \'./support-form.component.html\',\\r\\n    styleUrls: [\'./support-form.component.scss\'],\\r\\n})\\r\\nexport class UiSupportFormComponent extends UiFormBaseComponent implements OnInit {\\r\\n    public ngOnInit(): void {\\r\\n        this.formControls = {\\r\\n            name: {\\r\\n                value: \'\',\\r\\n                validators: [Validators.required, Validators.minLength(2), Validators.maxLength(80)],\\r\\n            },\\r\\n            email: {\\r\\n                value: \'\',\\r\\n                validators: [Validators.required, Validators.email, Validators.maxLength(80)],\\r\\n            },\\r\\n            companyName: {\\r\\n                value: \'\',\\r\\n                validators: [Validators.required, Validators.maxLength(55)],\\r\\n            },\\r\\n            subject: {\\r\\n                value: \'\',\\r\\n                validators: [Validators.required, , Validators.maxLength(80)],\\r\\n            },\\r\\n            description: { value: \'\', validators: [Validators.required] },\\r\\n            type: { value: \'ESG Support\', validators: [] },\\r\\n            recordType: { value: \'0128X000001Im9Y\', validators: [] }, // Supplier Success\\r\\n        };\\r\\n\\r\\n        this.createForm(this.formControls);\\r\\n        this.editMode = true;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n","styleUrl":"./support-form.component.scss"}],"stylesData":"","extends":"UiFormBaseComponent","implements":["OnInit"],"templateData":"<form [formGroup]=\\"form\\" autocomplete=\\"off\\">\\r\\n    <div class=\\"row form-group\\">\\r\\n        \x3c!-- Text input START --\x3e\\r\\n        <div class=\\"col-12\\">\\r\\n            <ui-text-input\\r\\n                [id]=\\"\'fullName\'\\"\\r\\n                [label]=\\"\'COMMON.FULL_NAME\' | translate\\"\\r\\n                [formControlName]=\\"\'name\'\\"\\r\\n                [form]=\\"form\\"\\r\\n                [showHelpText]=\\"showHelpText\\"\\r\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n                [showInfoIcon]=\\"false\\"\\r\\n                [infoText]=\\"\'Tooltip for extra information when required.\'\\"\\r\\n            >\\r\\n            </ui-text-input>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"col-12\\">\\r\\n            <ui-text-input\\r\\n                [id]=\\"\'address\'\\"\\r\\n                [label]=\\"\'COMMON.EMAIL_ADDRESS\' | translate\\"\\r\\n                [formControlName]=\\"\'email\'\\"\\r\\n                [form]=\\"form\\"\\r\\n                [showHelpText]=\\"showHelpText\\"\\r\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n                [showInfoIcon]=\\"false\\"\\r\\n                [infoText]=\\"\'Tooltip for extra information when required.\'\\"\\r\\n            >\\r\\n            </ui-text-input>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"col-12\\">\\r\\n            <ui-text-input\\r\\n                [id]=\\"\'companyName\'\\"\\r\\n                [label]=\\"\'COMMON.COMPANY_NAME\' | translate\\"\\r\\n                [formControlName]=\\"\'companyName\'\\"\\r\\n                [form]=\\"form\\"\\r\\n                [showHelpText]=\\"showHelpText\\"\\r\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n                [showInfoIcon]=\\"false\\"\\r\\n                [infoText]=\\"\'Tooltip for extra information when required.\'\\"\\r\\n            >\\r\\n            </ui-text-input>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\"col-12\\">\\r\\n            <ui-text-input\\r\\n                [id]=\\"\'subject\'\\"\\r\\n                [label]=\\"\'COMMON.SUBJECT\' | translate\\"\\r\\n                [formControlName]=\\"\'subject\'\\"\\r\\n                [form]=\\"form\\"\\r\\n                [placeholder]=\\"\'COMMON.SUBJECT_PLACEHOLDER\' | translate\\"\\r\\n                [showHelpText]=\\"showHelpText\\"\\r\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n                [showInfoIcon]=\\"false\\"\\r\\n                [infoText]=\\"false\\"\\r\\n            >\\r\\n            </ui-text-input>\\r\\n        </div>\\r\\n        \x3c!-- Text input END --\x3e\\r\\n        \x3c!-- Text Area 1 START --\x3e\\r\\n        <div class=\\"col-12\\">\\r\\n            <ui-text-area\\r\\n                [id]=\\"\'description\'\\"\\r\\n                [formControlName]=\\"\'description\'\\"\\r\\n                [label]=\\"\'COMMON.DETAILS\' | translate\\"\\r\\n                [placeholder]=\\"\'COMMON.DETAILS_PLACEHOLDER\' | translate\\"\\r\\n                [form]=\\"form\\"\\r\\n                [showHelpText]=\\"false\\"\\r\\n                [showInfoIcon]=\\"false\\"\\r\\n                [rows]=\\"5\\"\\r\\n            >\\r\\n            </ui-text-area>\\r\\n        </div>\\r\\n        \x3c!--  Text Area 1 END --\x3e\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n"},{"name":"UiSupportModalComponent","id":"component-UiSupportModalComponent-db457efaf60a2fe10f579310a984569feee3718d902b7145f438d1dc0cb386697d8724f899e5ca2c3b8daeca3690bff138d459c2f4396e1a99b246f82ee3759a","file":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-support-modal","styleUrls":["./support-modal.component.scss"],"styles":[],"templateUrl":["./support-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":25,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"formState","defaultValue":"UiFormState.notSubmitted","deprecated":false,"deprecationMessage":"","type":"UiFormState","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"FormState","defaultValue":"UiFormState","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"saveBtnDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"supportForm","deprecated":false,"deprecationMessage":"","type":"UiSupportFormComponent","optional":false,"description":"","line":19,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'supportForm\'"}],"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onformSubmitted","args":[{"name":"data","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1821,"end":1825,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1815,"end":1820,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2020,"end":2024,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2014,"end":2019,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, OnInit, ViewChild } from \'@angular/core\';\\r\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiModalBaseComponent } from \'../../../modal/components/modal-base/modal-base.component\';\\r\\nimport { HttpClient, HttpContext, HttpHeaders, HttpParams } from \'@angular/common/http\';\\r\\nimport { UiSupportFormComponent } from \'../support-form/support-form.component\';\\r\\nimport { UiLayoutService } from \'@lib/services/layout\';\\r\\n\\r\\nexport enum UiFormState{\\r\\n    notSubmitted = 0,\\r\\n    waiting = 1,\\r\\n    submitted = 2\\r\\n}\\r\\n@Component({\\r\\n    selector: \'ui-support-modal\',\\r\\n    templateUrl: \'./support-modal.component.html\',\\r\\n    styleUrls: [\'./support-modal.component.scss\'],\\r\\n})\\r\\nexport class UiSupportModalComponent extends UiModalBaseComponent implements AfterViewInit {\\r\\n    @ViewChild(\'supportForm\') public supportForm: UiSupportFormComponent;\\r\\n    public saveBtnDisabled = true;\\r\\n\\r\\n    public formState: UiFormState = UiFormState.notSubmitted;\\r\\n    public FormState = UiFormState;\\r\\n\\r\\n    public constructor(private _layoutService: UiLayoutService, public activeModal: NgbActiveModal) {\\r\\n        super(activeModal);\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit(): void {\\r\\n        super.ngAfterViewInit();\\r\\n\\r\\n        this.supportForm.form.valueChanges.subscribe((d) => {\\r\\n            this.saveBtnDisabled = !this.supportForm.form.valid;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public onformSubmitted(data) {\\r\\n\\r\\n        this._layoutService.salesforceWebToCase(data);\\r\\n        this.formState = UiFormState.waiting;\\r\\n\\r\\n        setTimeout(() => {\\r\\n            this.updateBorder();\\r\\n        });\\r\\n\\r\\n        // Simulate loading time\\r\\n        setTimeout(() => {\\r\\n            this.formState = UiFormState.submitted;\\r\\n        }, 2000);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.action-buttons {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: flex-end;\\r\\n    align-items: center;\\r\\n    gap: 10px;\\r\\n}\\r\\n\\r\\n.spinner-page {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    padding: 20px;\\r\\n    gap: 8px;\\r\\n    width: 450px;\\r\\n    height: 300px;\\r\\n}\\r\\n\\r\\n.submitted-page {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    padding: 20px;\\r\\n    gap: 16px;\\r\\n\\r\\n    width: 450px;\\r\\n    height: 300px;\\r\\n}\\r\\n\\r\\n.help-text {\\r\\n    font-style: normal;\\r\\n    font-weight: 400;\\r\\n    font-size: 16px;\\r\\n    line-height: 150%;\\r\\n    text-align: center;\\r\\n    color: $gray-800;\\r\\n}","styleUrl":"./support-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":23,"modifierKind":[123],"jsdoctags":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","implements":["AfterViewInit"],"templateData":"<div class=\\"modal-header\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\r\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\r\\n        <div>\\r\\n            <h3 class=\\"modal-title\\">{{ \'COMMON.GET_SUPPORT\' | translate }}</h3>\\r\\n            <div>{{ \'COMMON.SUBMIT_REQUEST\' | translate }}</div>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <button type=\\"button\\" class=\\"btn-close\\" aria-label=\\"Close\\" (click)=\\"dismiss()\\"></button>\\r\\n</div>\\r\\n<div #modalBody class=\\"modal-body\\">\\r\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\r\\n        \x3c!--Form START--\x3e\\r\\n        <ui-support-form #supportForm (formSubmitted)=\\"onformSubmitted($event)\\"></ui-support-form>\\r\\n        \x3c!--Form END--\x3e\\r\\n    </ng-container>\\r\\n\\r\\n    \x3c!--SPINNER PAGE START--\x3e\\r\\n    <div class=\\"spinner-page\\" *ngIf=\\"formState === FormState.waiting\\">\\r\\n        <div class=\\"spinner-border spinner-border-lg\\" role=\\"status\\">\\r\\n            <span class=\\"visually-hidden\\">Loading...</span>\\r\\n        </div>\\r\\n        <div>{{ \'COMMON.SUBMITTING\' | translate }}</div>\\r\\n    </div>\\r\\n    \x3c!--SPINNER PAGE END--\x3e\\r\\n\\r\\n    \x3c!--Submitted page START--\x3e\\r\\n    <div class=\\"submitted-page\\" *ngIf=\\"formState === FormState.submitted\\">\\r\\n        <i class=\\"bi bi-check-circle-fill bi-3x text-success\\"></i>\\r\\n        <h3>{{ \'COMMON.SUBMITTED_REQUEST\' | translate }}</h3>\\r\\n        <div class=\\"help-text\\" innerHTML=\\"{{ \'COMMON.EXPERT_CONTACT_SHORTLY\' | translate }}\\"></div>\\r\\n    </div>\\r\\n    \x3c!--Submitted page END--\x3e\\r\\n</div>\\r\\n\\r\\n\x3c!-- Footer START --\x3e\\r\\n<div class=\\"modal-footer\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\r\\n\\r\\n    <div class=\\"action-buttons w-100\\">\\r\\n        \x3c!--Action buttons footer START--\x3e\\r\\n        <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primarybtn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"dismiss()\\">\\r\\n            {{ \'COMMON.CLOSE\' | translate }}\\r\\n        </button>\\r\\n        <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary btn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"supportForm.submitForm()\\" [disabled]=\\"saveBtnDisabled\\">\\r\\n            {{ \'COMMON.SUBMIT\' | translate }}\\r\\n        </button>\\r\\n        <button  type=\\"button\\" class=\\"btn btn-primary w-100\\" *ngIf=\\"formState === FormState.submitted\\" (click)=\\"dismiss()\\">{{ \'COMMON.OK_THANKS\' | translate }}</button>\\r\\n        \x3c!--Action buttons footer END--\x3e\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\x3c!-- Footer END --\x3e\\r\\n"},{"name":"UiTabNavComponent","id":"component-UiTabNavComponent-1a094123bc0cd85154176a75360160cad7ae507c248b60205982a84ec83e6a8e2ae84650e1f7c1f19440b8be1cebb086c213c390c458af982447ab56bd36afc4","file":"libs/ui/src/lib/modules/layout/components/tab-nav/tab-nav.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tab-nav","styleUrls":["./tab-nav.component.scss"],"styles":[],"templateUrl":["./tab-nav.component.html"],"viewProviders":[],"inputsClass":[{"name":"tabItems","deprecated":false,"deprecationMessage":"","line":10,"type":"Array<IUiSubHeaderTab>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"headerService","deprecated":false,"deprecationMessage":"","type":"UiHeaderService","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"tabClass","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"tabItemClick","args":[{"name":"item","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiHeaderService, IUiSubHeaderTab } from \'@lib/services/layout/header/header.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-tab-nav\',\\r\\n    templateUrl: \'./tab-nav.component.html\',\\r\\n    styleUrls: [\'./tab-nav.component.scss\'],\\r\\n})\\r\\nexport class UiTabNavComponent implements OnInit {\\r\\n    @Input() public tabItems: Array<IUiSubHeaderTab>;\\r\\n\\r\\n    public tabClass = \'\';\\r\\n\\r\\n    constructor(public headerService: UiHeaderService) {}\\r\\n\\r\\n    public ngOnInit(): void {\\r\\n        this.headerService.subHeaderSelectedTabChange.subscribe((tab: IUiSubHeaderTab) => {\\r\\n            this.tabClass = tab.tabClassColor;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    public tabItemClick(item: IUiSubHeaderTab) {\\r\\n        this.tabClass = item.tabClassColor;\\r\\n        item.onClickEvent(item);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".nav-tabs {\\r\\n    border-bottom: none;\\r\\n    padding-top: 10px;\\r\\n    margin-bottom: -4px;\\r\\n}\\r\\n","styleUrl":"./tab-nav.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<ul class=\\"nav nav-tabs\\">\\r\\n    \x3c!-- ToDo --\x3e\\r\\n    \x3c!-- tabClass --\x3e\\r\\n    \x3c!-- Should tabClass be applied and how it should look --\x3e\\r\\n    <li class=\\"nav-item\\" *ngFor=\\"let tab of tabItems\\">\\r\\n        <a class=\\"nav-link\\" [id]=\\"\'tab_\' + tab.id\\"\\r\\n            (click)=\\"this.headerService.selectedTabId = tab.id; tabItemClick(tab)\\"\\r\\n            [class.active]=\\"this.headerService.selectedTabId === tab.id\\" href=\\"javascript:;\\">\\r\\n            <div *ngIf=\\"tab.label !== undefined\\">\\r\\n                {{ tab.label | translate }}\\r\\n            </div>\\r\\n            <div *ngIf=\\"tab.label2 !== undefined\\">\\r\\n                {{ tab.label2.txt | translate: tab.label2.params }}\\r\\n            </div>\\r\\n        </a>\\r\\n    </li>\\r\\n</ul>\\r\\n"},{"name":"UiTabNavContainerComponent","id":"component-UiTabNavContainerComponent-2c459922cf35faf04b51c97e36a403f2bd5c3b6f8072997b5c863d27711afa0fe5856c4d597b2c6f2373a16801f2d695a0d63014e02d00520e65efee2722ef0d","file":"libs/ui/src/lib/modules/layout/components/tab-nav-container/tab-nav-container.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tab-nav-container","styleUrls":[],"styles":[],"templateUrl":["./tab-nav-container.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"headerService","deprecated":false,"deprecationMessage":"","type":"UiHeaderService","optional":false,"description":"","line":10,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\r\\nimport { UiHeaderService } from \'@lib/services/layout/header/header.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-tab-nav-container\',\\r\\n    templateUrl: \'./tab-nav-container.component.html\',\\r\\n})\\r\\nexport class UiTabNavContainerComponent implements OnInit {\\r\\n\\r\\n    constructor(public headerService: UiHeaderService) { }\\r\\n    public ngOnInit(): void {}\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div *ngIf=\\"headerService.subHeaderTabs !== undefined && headerService.subHeaderTabs.length !== 0\\" class=\\"p-3\\">\\r\\n    <div *ngFor=\\"let tab of headerService.subHeaderTabs\\">\\r\\n        <div>\\r\\n            <div *ngIf=\\"headerService.selectedTabId === tab.id || tab.cacheTabContent !== false\\" [ngClass]=\\"{ \'d-none\': this.headerService.selectedTabId !== tab.id }\\">\\r\\n                <ng-container *ngTemplateOutlet=\\"tab.contentTpl\\"></ng-container>\\r\\n            </div>           \\r\\n        </div>\\r\\n    </div>\\r\\n</div>"},{"name":"UiTagsInputComponent","id":"component-UiTagsInputComponent-20e11eaab5cff786e03f79171ece87c5314be562e4daba08f06c85dc053fe2d664e16cd51b4311c5087eb72209e51eeb8906f37146bc1cede28257b5d90a2a20","file":"libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: UiTagsInputComponent,\\n}","type":"component"},{"name":"{\\n    provide: NG_VALIDATORS, multi: true, useExisting: UiTagsInputComponent,\\n}","type":"component"}],"selector":"ui-tags-input","styleUrls":["./tags-input.component.scss"],"styles":[],"templateUrl":["./tags-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"api","defaultValue":"{\\r\\n        keyField: \'id\',\\r\\n        labelField: \'text\',\\r\\n    }","deprecated":false,"deprecationMessage":"","line":42,"type":"IUiTagsInputObject","decorators":[]},{"name":"emptyStatePlaceholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":39,"type":"string","decorators":[]},{"name":"enableFreeTextAdding","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":40,"type":"boolean","decorators":[]},{"name":"enableMultipleSelect","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[]},{"name":"maxLength","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":31,"type":"any","decorators":[]},{"name":"minLength","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[]},{"name":"optionItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":33,"type":"{}","decorators":[]},{"name":"optionItemsLimit","defaultValue":"10","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse 0 or null for no option items limit.\\n","description":"<p>Use 0 or null for no option items limit.</p>\\n","line":37,"type":"number","decorators":[]},{"name":"searchPlaceholder","defaultValue":"\'Search...\'","deprecated":false,"deprecationMessage":"","line":38,"type":"string","decorators":[]},{"name":"typeaheadContainer","deprecated":false,"deprecationMessage":"","line":47,"type":"string","decorators":[]},{"name":"validateItemCallback","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":48,"type":"function","decorators":[]}],"outputsClass":[{"name":"itemsChanged","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":49,"type":"EventEmitter"}],"propertiesClass":[{"name":"_customErrorKey","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":66,"modifierKind":[121]},{"name":"_defaultColorClass","defaultValue":"\'bg-primary\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":65,"modifierKind":[121,144]},{"name":"click$","defaultValue":"new Subject<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"focus$","defaultValue":"new Subject<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"formField","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"instance","deprecated":false,"deprecationMessage":"","type":"NgbTypeahead","optional":false,"description":"","line":51,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'instance\', {static: true}"}],"modifierKind":[123]},{"name":"isFocus","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71,"modifierKind":[123]},{"name":"onClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72,"modifierKind":[123]},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[123]},{"name":"optionItemsBackup","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"selectedItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"selectedItemsBackup","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"touched","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"typeaheadFormatter","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":119,"modifierKind":[123]},{"name":"typeaheadModel","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"typeaheadSearch","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"OperatorFunction<string | string[]>","optional":false,"description":"","line":80,"modifierKind":[123]}],"methodsClass":[{"name":"getNextAvailableItemId","args":[{"name":"optionItems","type":"any[]","deprecated":false,"deprecationMessage":""},{"name":"selectedItems","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":308,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCalculates next available id for a new item\\nWhen optionItems are provided - it returns their length (preexisting behavior)\\nWhen optionItems are not provided - it returns max id from the selectedItems + 1\\nThis is needed for the case when optionItems are not provided and we need to add new item\\n(enableFreeTextAdding = true and optionItems = [])\\n\\n","description":"<p>Calculates next available id for a new item\\nWhen optionItems are provided - it returns their length (preexisting behavior)\\nWhen optionItems are not provided - it returns max id from the selectedItems + 1\\nThis is needed for the case when optionItems are not provided and we need to add new item\\n(enableFreeTextAdding = true and optionItems = [])</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9953,"end":9964,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"optionItems"},"type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":9947,"end":9952,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>all available predefined items</p>\\n"},{"name":{"pos":10011,"end":10024,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"selectedItems"},"type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":10005,"end":10010,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>only selected items</p>\\n"},{"tagName":{"pos":10054,"end":10061,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>next available id</p>\\n"}]},{"name":"hasCustomValidationError","args":[{"name":"inputTagText","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":279,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"inputTagText","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onModelChange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":186,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onTypeaheadEnterPress","args":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":236,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTypeaheadSelectItem","args":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":214,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnChange","args":[{"name":"onChange","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"onChange","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"onTouched","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"onTouched","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeItem","args":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectItem","args":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":192,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"disabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"disabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"typeaheadOnBlur","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":274,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, Output, ViewChild, EventEmitter } from \'@angular/core\';\\r\\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from \'@angular/forms\';\\r\\n// RxJS\\r\\nimport { merge, Observable, OperatorFunction, Subject } from \'rxjs\';\\r\\nimport { debounceTime, distinctUntilChanged, filter, map, tap } from \'rxjs/operators\';\\r\\n// Ng Bootstrap\\r\\nimport { NgbTypeahead } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Interfaces\\r\\nimport { IUiTagsInputObject } from \'./interfaces\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-tags-input\',\\r\\n    templateUrl: \'./tags-input.component.html\',\\r\\n    styleUrls: [\'./tags-input.component.scss\'],\\r\\n    // encapsulation: ViewEncapsulation.None, // Needed for the custom tooltip\\r\\n    providers: [\\r\\n        {\\r\\n            provide: NG_VALUE_ACCESSOR,\\r\\n            multi: true,\\r\\n            useExisting: UiTagsInputComponent,\\r\\n        },\\r\\n        {\\r\\n            provide: NG_VALIDATORS,\\r\\n            multi: true,\\r\\n            useExisting: UiTagsInputComponent,\\r\\n        },\\r\\n    ],\\r\\n})\\r\\nexport class UiTagsInputComponent implements OnInit, ControlValueAccessor, Validator {\\r\\n    @Input() public maxLength = null;\\r\\n    @Input() public minLength = null;\\r\\n    @Input() public optionItems = [];\\r\\n    /**\\r\\n     * Use 0 or null for no option items limit.\\r\\n     */\\r\\n    @Input() public optionItemsLimit = 10;\\r\\n    @Input() public searchPlaceholder = \'Search...\';\\r\\n    @Input() public emptyStatePlaceholder = \'\';\\r\\n    @Input() public enableFreeTextAdding = true;\\r\\n    @Input() public enableMultipleSelect = false;\\r\\n    @Input() public api?: IUiTagsInputObject = {\\r\\n        keyField: \'id\',\\r\\n        labelField: \'text\',\\r\\n    };\\r\\n    // Hint: use \'body\' value, when UiTagsInputComponent is used in modal dialog\\r\\n    @Input() public typeaheadContainer: string;\\r\\n    @Input() public validateItemCallback: (text: string) => ValidationErrors | null = null;\\r\\n    @Output() public itemsChanged = new EventEmitter();\\r\\n\\r\\n    @ViewChild(\'instance\', { static: true }) public instance: NgbTypeahead;\\r\\n    public disabled = false;\\r\\n    public isFocus = false;\\r\\n    public touched = false;\\r\\n    public selectedItems = [];\\r\\n    public selectedItemsBackup = [];\\r\\n    public optionItemsBackup = [];\\r\\n\\r\\n    public formField: AbstractControl;\\r\\n\\r\\n    public typeaheadModel = {};\\r\\n    public focus$ = new Subject<string>();\\r\\n    public click$ = new Subject<string>();\\r\\n\\r\\n    private readonly _defaultColorClass = \'bg-primary\';\\r\\n    private _customErrorKey = \'\';\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public onTouched = () => {};\\r\\n    public onChange = (quantity) => {};\\r\\n    public onClick = ($event: any) => {\\r\\n        if (this.enableMultipleSelect) {\\r\\n            this.click$.next($event.target.value);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    public ngOnInit() {}\\r\\n\\r\\n    public typeaheadSearch: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) => {\\r\\n        const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\\r\\n        const clicksWithClosedPopup$ = this.enableMultipleSelect\\r\\n            ? this.click$\\r\\n            : this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\\r\\n        const inputFocus$ = this.focus$.pipe(tap(() => {\\r\\n            this.isFocus = true;\\r\\n            this.markAsTouched();\\r\\n        }));\\r\\n\\r\\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\\r\\n            tap((term) => {\\r\\n                if (term === \'\') {\\r\\n                    this.hasCustomValidationError(term);\\r\\n                }\\r\\n            }),\\r\\n            map((term) => {\\r\\n                let options = this.optionItems\\r\\n                    .filter((v) => {\\r\\n                        // ToDo\\r\\n                        // Add ability to have more filtering options\\r\\n                        return (\\r\\n                            !this.disabled &&\\r\\n                            v &&\\r\\n                            v[this.api.labelField] &&\\r\\n                            (!term || v[this.api.labelField].toLowerCase().indexOf(term.toLowerCase()) > -1) &&\\r\\n                            !this.selectedItems.some((s) => s[this.api.keyField] === v[this.api.keyField])\\r\\n                        );\\r\\n                    });\\r\\n\\r\\n                if (this.optionItemsLimit) {\\r\\n                    options = options.slice(0, this.optionItemsLimit);\\r\\n                }\\r\\n\\r\\n                return options;\\r\\n            })\\r\\n        );\\r\\n    };\\r\\n\\r\\n    public typeaheadFormatter = (result: any) => {\\r\\n        return result[this.api.labelField];\\r\\n    };\\r\\n\\r\\n    public writeValue(value: []) {\\r\\n        this.selectedItems = [];\\r\\n        if (value !== null) {\\r\\n            value.forEach((item) => {\\r\\n                this.selectItem(item);\\r\\n            });\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public registerOnChange(onChange: any) {\\r\\n        this.onChange = onChange;\\r\\n    }\\r\\n\\r\\n    public registerOnTouched(onTouched: any) {\\r\\n        this.onTouched = onTouched;\\r\\n    }\\r\\n\\r\\n    public markAsTouched() {\\r\\n        if (!this.touched) {\\r\\n            this.onTouched();\\r\\n            this.touched = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public setDisabledState(disabled: boolean) {\\r\\n        this.disabled = disabled;\\r\\n\\r\\n        if (!disabled) {\\r\\n            this.optionItemsBackup = JSON.parse(JSON.stringify(this.optionItems));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public validate(control: AbstractControl): ValidationErrors | null {\\r\\n        const min = this.minLength;\\r\\n        const max = this.maxLength;\\r\\n\\r\\n        this.formField = control;\\r\\n\\r\\n        if (min !== null && this.selectedItems.length < min) {\\r\\n            return {\\r\\n                minLength: {\\r\\n                    min,\\r\\n                },\\r\\n            };\\r\\n        }\\r\\n\\r\\n        if (max !== null && this.selectedItems.length > max) {\\r\\n            return {\\r\\n                maxLength: {\\r\\n                    max,\\r\\n                },\\r\\n            };\\r\\n        }\\r\\n\\r\\n        if (!this.enableFreeTextAdding) {\\r\\n            if (typeof this.typeaheadModel === \'string\' && this.typeaheadModel.length > 0) {\\r\\n                return {\\r\\n                    valid: false\\r\\n                };\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onModelChange() {\\r\\n        if (!this.enableFreeTextAdding) {\\r\\n            this.formField.updateValueAndValidity();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public selectItem(item: any) {\\r\\n        if (!item) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        item.disabled = item.disabled || false;\\r\\n        item.colorClass = item.colorClass || this._defaultColorClass;\\r\\n        this.selectedItems.push(item);\\r\\n    }\\r\\n\\r\\n    public removeItem(item: any) {\\r\\n        if (this.disabled || item.disabled) {\\r\\n            return;\\r\\n        }\\r\\n        item.disabled = false;\\r\\n        this.selectedItems = this.selectedItems.filter((selectedItem) => selectedItem !== item);\\r\\n\\r\\n        this.markAsTouched();\\r\\n        this.itemsChanged.emit(this.selectedItems);\\r\\n        this.onChange(this.selectedItems);\\r\\n    }\\r\\n\\r\\n    public onTypeaheadSelectItem($event: any): void {\\r\\n        if (this.disabled || !$event.item) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        $event.preventDefault();\\r\\n        const key = this.api.keyField;\\r\\n        const label = this.api.labelField;\\r\\n        this.selectedItems.push({\\r\\n            [key]: $event.item[key],\\r\\n            [label]: $event.item[label],\\r\\n            disabled: typeof $event.item.disabled === \'boolean\' ? $event.item.disabled : false,\\r\\n            colorClass: $event.item.colorClass || this._defaultColorClass,\\r\\n        });\\r\\n        this.itemsChanged.emit(this.selectedItems);\\r\\n        this.onChange(this.selectedItems);\\r\\n        this.markAsTouched();\\r\\n\\r\\n        this.typeaheadModel = {};\\r\\n        this.onModelChange();\\r\\n    }\\r\\n\\r\\n    public onTypeaheadEnterPress($event: any): void {\\r\\n        if (this.disabled || !this.enableFreeTextAdding) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const text: string = $event.target.value;\\r\\n\\r\\n        if (this.hasCustomValidationError(text)) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (!text || !text.trim()) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.selectedItems.some((s) => text.toLowerCase() === s[this.api.labelField].toLowerCase())) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        // ToDo\\r\\n        // What id is needed\\r\\n        const newId = this.getNextAvailableItemId(this.optionItems, this.selectedItems);\\r\\n        const key = this.api.keyField;\\r\\n        const label = this.api.labelField;\\r\\n        this.selectedItems.push({\\r\\n            [key]: newId,\\r\\n            [label]: text,\\r\\n            disabled: false,\\r\\n            colorClass: this._defaultColorClass,\\r\\n        });\\r\\n        this.itemsChanged.emit(this.selectedItems);\\r\\n        this.onChange(this.selectedItems);\\r\\n        this.markAsTouched();\\r\\n\\r\\n        this.typeaheadModel = {};\\r\\n        this.onModelChange();\\r\\n    }\\r\\n\\r\\n    public typeaheadOnBlur() {\\r\\n        this.isFocus = false;\\r\\n    }\\r\\n\\r\\n    // Applies custom validation and sets error if such exist\\r\\n    private hasCustomValidationError(inputTagText: string): boolean {\\r\\n        if (typeof this.validateItemCallback === \'function\') {\\r\\n            const customError = this.validateItemCallback(inputTagText);\\r\\n\\r\\n            if (customError) {\\r\\n                this._customErrorKey = Object.keys(customError)[0];\\r\\n                this.formField.setErrors(customError);\\r\\n\\r\\n                return true;\\r\\n            } else {\\r\\n                this.formField.setErrors({ [this._customErrorKey]: null });\\r\\n                this.formField.updateValueAndValidity();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Calculates next available id for a new item\\r\\n     * When optionItems are provided - it returns their length (preexisting behavior)\\r\\n     * When optionItems are not provided - it returns max id from the selectedItems + 1\\r\\n     * This is needed for the case when optionItems are not provided and we need to add new item\\r\\n     * (enableFreeTextAdding = true and optionItems = [])\\r\\n     *\\r\\n     * @param optionItems all available predefined items\\r\\n     * @param selectedItems only selected items\\r\\n     * @returns next available id\\r\\n     */\\r\\n    private getNextAvailableItemId(optionItems: any[], selectedItems: any[]): number {\\r\\n        return optionItems.length || (Math.max(...selectedItems.map((item) => item.id)) + 1);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\r\\n\\r\\n.grid-item {\\r\\n    flex-grow: 1;\\r\\n    min-width: 10%;\\r\\n}\\r\\n\\r\\n// Removing the arrow\\r\\n.dropdown-toggle::after {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.dropdown-menu {\\r\\n    width: 100%;\\r\\n    padding-left: 0.025em;\\r\\n}\\r\\n\\r\\n.badge {\\r\\n    align-items: center;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    height: 24px;\\r\\n    place-content: center;\\r\\n}\\r\\n\\r\\n.tag-container {\\r\\n    align-items: center;\\r\\n    background-color: $white;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid $gray-400;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    flex-flow: row wrap;\\r\\n    gap: 0.25rem;\\r\\n    place-content: center flex-start;\\r\\n\\r\\n    &.disabled {\\r\\n        // background-color: $warning;\\r\\n        // .form-control:disabled, .form-control[readonly] {\\r\\n        background-color: $gray-200;\\r\\n        opacity: 1;\\r\\n        // }\\r\\n    }\\r\\n\\r\\n    &:invalid,\\r\\n    &.is-invalid {\\r\\n        border-color: $danger;\\r\\n        padding-right: calc(1.5em + 0.75rem);\\r\\n        background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23ff4d4f\' viewBox=\'0 0 12 12\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23ff4d4f\' stroke=\'none\'/%3e%3c/svg%3e\\");\\r\\n        background-repeat: no-repeat;\\r\\n        // background-position: right calc(0.375em + 0.1875rem) center;\\r\\n        background-position: right 10px center;\\r\\n        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\r\\n\\r\\n        &.container-focus {\\r\\n            border-color: $danger;\\r\\n            box-shadow: 0px 0px 0px 3px rgba($danger, 0.2); //inset | offset-x | offset-y | blur-radius | spread-radius | color\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &:valid,\\r\\n    &.is-valid {\\r\\n        border-color: $success;\\r\\n        padding-right: calc(1.5em + 0.75rem);\\r\\n        background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%2350955b\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\\");\\r\\n\\r\\n        background-repeat: no-repeat;\\r\\n        // background-position: right calc(0.375em + 0.1875rem) top;\\r\\n        background-position: right 10px top 10px;\\r\\n        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\r\\n\\r\\n        &.container-focus {\\r\\n            border-color: $success;\\r\\n            box-shadow: 0px 0px 0px 3px rgba($success, 0.2); //inset | offset-x | offset-y | blur-radius | spread-radius | color\\r\\n        }\\r\\n    }\\r\\n\\r\\n    input {\\r\\n        border: none;\\r\\n        box-shadow: none;\\r\\n        outline: none;\\r\\n        background-color: transparent;\\r\\n        padding: 0 6px;\\r\\n        margin: 0;\\r\\n        flex: 1;\\r\\n        width: auto;\\r\\n        max-width: inherit;\\r\\n    }\\r\\n}\\r\\n\\r\\n.bs-tooltip-top .arrow,\\r\\n.bs-tooltip-auto[x-placement^=\'top\'] .arrow {\\r\\n    bottom: 2px;\\r\\n}\\r\\n\\r\\n.tooltip-inner {\\r\\n    max-width: 200px;\\r\\n    padding: 0.25rem 0.5rem;\\r\\n    color: $white;\\r\\n    text-align: center;\\r\\n    background-color: $black;\\r\\n    border-radius: 0.25rem;\\r\\n}\\r\\n","styleUrl":"./tags-input.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":66},"implements":["OnInit","ControlValueAccessor","Validator"],"templateData":"<div\\r\\n    #container\\r\\n    (click)=\\"$event.stopPropagation()\\"\\r\\n    [ngClass]=\\"{\\r\\n        \'disabled\': disabled,\\r\\n        \'is-invalid\': !disabled && formField !== undefined && formField.invalid && (formField.touched || formField.dirty),\\r\\n        \'is-valid\': !disabled && formField !== undefined && !formField.pristine && formField.valid,\\r\\n        \'container-focus\': !disabled && isFocus\\r\\n    }\\"\\r\\n    class=\\"tag-container disable-select form-control\\"\\r\\n    >\\r\\n    <div\\r\\n        [openDelay]=\\"600\\"\\r\\n        [closeDelay]=\\"500\\"\\r\\n        placement=\\"top\\"\\r\\n        [ngbTooltip]=\\"item[api.labelField]\\"\\r\\n        *ngFor=\\"let item of selectedItems\\"\\r\\n        [ngClass]=\\"item.colorClass\\"\\r\\n        class=\\"badge pe-1 ps-1 disable-select\\">\\r\\n        <span>{{item[api.labelField] | truncate:[20, \'...\']}}</span>\\r\\n        <span *ngIf=\\"!disabled && !item.disabled\\" class=\\"ps-1 pointer\\" (click)=\\"$event.stopPropagation(); removeItem(item)\\">\\r\\n            <i class=\\"bi bi-x-circle-fill\\"></i>\\r\\n        </span>\\r\\n    </div>\\r\\n    <input\\r\\n        *ngIf=\\"!disabled\\"\\r\\n        type=\\"text\\"\\r\\n        class=\\"form-control\\"\\r\\n        [container]=\\"typeaheadContainer\\"\\r\\n        [placeholder]=\\"searchPlaceholder\\"\\r\\n        [(ngModel)]=\\"typeaheadModel\\"\\r\\n        (ngModelChange)=\\"onModelChange()\\"\\r\\n        [ngbTypeahead]=\\"typeaheadSearch\\"\\r\\n        [inputFormatter]=\\"typeaheadFormatter\\"\\r\\n        [resultFormatter]=\\"typeaheadFormatter\\"\\r\\n        (focus)=\\"focus$.next($any($event).target.value)\\"\\r\\n        (click)=\\"onClick($event)\\"\\r\\n        (blur)=\\"typeaheadOnBlur($event)\\"\\r\\n        (selectItem)=\\"onTypeaheadSelectItem($event)\\"\\r\\n        (keydown.enter)=\\"onTypeaheadEnterPress($event)\\"/>\\r\\n    \x3c!-- Empty state placeholder --\x3e\\r\\n    <input *ngIf=\\"disabled && selectedItems.length === 0\\" class=\\"form-control\\" [placeholder]=\\"emptyStatePlaceholder\\" disabled/>\\r\\n</div>\\r\\n"},{"name":"UiTextAreaComponent","id":"component-UiTextAreaComponent-b4011e1704df71fb0328f269b17507e4c40d97c065a94a7efc11b35fbf6897aec149af6cbfe016449370d6bb76805276802edc328e31ffbe596d3ceeb670b8a5","file":"libs/ui/src/lib/modules/form/text-area/text-area.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-area-new","styleUrls":["./text-area.component.scss"],"styles":[],"templateUrl":["./text-area.component.html"],"viewProviders":[],"inputsClass":[{"name":"rows","defaultValue":"10","deprecated":false,"deprecationMessage":"","line":10,"type":"number","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-text-area-new\',\\r\\n    templateUrl: \'./text-area.component.html\',\\r\\n    styleUrls: [\'./text-area.component.scss\'],\\r\\n})\\r\\nexport class UiTextAreaComponent extends UiFormControlBaseComponent {\\r\\n    @Input() public rows = 10;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-area.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"<ng-container [formGroup]=\\"form\\">\\r\\n    \x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\r\\n    <ui-form-control-base\\r\\n        [label]=\\"label\\"\\r\\n        [formControlName]=\\"formControlName\\"\\r\\n        [form]=\\"form\\"\\r\\n        [placeholder]=\\"placeholder\\"\\r\\n        [showHelpText]=\\"showHelpText\\"\\r\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n        [showInfoIcon]=\\"showInfoIcon\\"\\r\\n        [infoText]=\\"infoText\\"\\r\\n        [helpText]=\\"helpText\\"\\r\\n    >\\r\\n        \x3c!-- Basic Textarea --\x3e\\r\\n        <textarea\\r\\n            [id]=\\"id + \'_TextArea\'\\"\\r\\n            [rows]=\\"rows\\"\\r\\n            [ngClass]=\\"{\\r\\n                \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\r\\n            }\\"\\r\\n            [placeholder]=\\"placeholder\\"\\r\\n            [value]=\\"value\\"\\r\\n            [disabled]=\\"disabled\\"\\r\\n            (input)=\\"onChange($event.target.value)\\"\\r\\n            (blur)=\\"onTouched()\\"\\r\\n            class=\\"form-control\\"\\r\\n            autocomplete=\\"off\\">\\r\\n        </textarea>\\r\\n    </ui-form-control-base>\\r\\n</ng-container>\\r\\n"},{"name":"UiTextAreaComponent","id":"component-UiTextAreaComponent-610bf7307cacec20f78535176e29e7b2637466f7da702e2446ab2e4b9a1fadfc18e6ca2e6f28c73a9d5d2c0975c8b2a8be983485426bb939794514fa89d22569-1","file":"libs/ui/src/lib/modules/form-controls/text-area/text-area.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-area","styleUrls":["./text-area.component.scss"],"styles":[],"templateUrl":["./text-area.component.html"],"viewProviders":[],"inputsClass":[{"name":"rows","defaultValue":"10","deprecated":false,"deprecationMessage":"","line":13,"type":"number","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":true,"deprecationMessage":"Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form\\\\text-area\\\\text-area.component.ts","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n/**\\r\\n * @deprecated Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form\\\\text-area\\\\text-area.component.ts\\r\\n */\\r\\n@Component({\\r\\n    selector: \'ui-text-area\',\\r\\n    templateUrl: \'./text-area.component.html\',\\r\\n    styleUrls: [\'./text-area.component.scss\'],\\r\\n})\\r\\nexport class UiTextAreaComponent extends UiFormControlBaseComponent {\\r\\n    @Input() public rows = 10;\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-area.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","isDuplicate":true,"duplicateId":1,"duplicateName":"UiTextAreaComponent-1","templateData":"<div *ngIf=\\"form !== undefined\\">\\r\\n\\r\\n    \x3c!-- Label --\x3e\\r\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\r\\n        {{label}}\\r\\n        \x3c!-- Required Asterix --\x3e\\r\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\r\\n    </label>\\r\\n\\r\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\r\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\r\\n\\r\\n    <div class=\\"input-group\\">\\r\\n\\r\\n        \x3c!-- Prefix Icon --\x3e\\r\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Prefix Text --\x3e\\r\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{prefixText}}\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Basic Textarea --\x3e\\r\\n        <textarea\\r\\n            [id]=\\"id + \'_TextArea\'\\"\\r\\n            [rows]=\\"rows\\"\\r\\n            [ngClass]=\\"{ \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation }\\"\\r\\n            [placeholder]=\\"placeholder\\"\\r\\n            [value]=\\"value\\"\\r\\n            [disabled]=\\"disabled\\"\\r\\n            (input)=\\"onChange($event.target.value)\\"\\r\\n            (blur)=\\"onTouched()\\"\\r\\n            class=\\"form-control\\"\\r\\n            autocomplete=\\"off\\"\\r\\n        ></textarea>\\r\\n\\r\\n        \x3c!-- Suffix Icon --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Suffix Text --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{suffixText}}\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"feedback\\">\\r\\n\\r\\n        \x3c!-- Success Feedback Text --\x3e\\r\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\r\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Error Feedback Text --\x3e\\r\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\r\\n            <div [id]=\\"id + \'_MinLengthErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.minlength\\">\\r\\n                {{ \'COMMON.MIN_LENGTH_OF\' | translate: { requiredLength: form.controls[formControlName].errors.minlength.requiredLength } }}\\r\\n            </div>\\r\\n            <div [id]=\\"id + \'_MaxLengthErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.maxlength\\">\\r\\n                {{ \'COMMON.MAX_LENGTH_OF\' | translate: { requiredLength: form.controls[formControlName].errors.maxlength.requiredLength } }}\\r\\n            </div>\\r\\n\\r\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\"  *ngIf=\\"form.controls[formControlName].errors.required\\">\\r\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\r\\n            </div>\\r\\n\\r\\n            <div [id]=\\"id + \'_ValidEmailErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.email\\">\\r\\n                {{ \'COMMON.ENTER_VALID_EMAIL\' | translate }}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Help Text --\x3e\\r\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\r\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\r\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n"},{"name":"UiTextCellRendererComponent","id":"component-UiTextCellRendererComponent-8022cd8b1cf7322625df08521816df2a692e054224b1725e3f3c2c705cf07b6f8e30abd392b9f0836d1ae8252c5e97f41f344313ea9fa1578c49eb7a47220e73","file":"libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-cell-renderer","styleUrls":["./text-cell-renderer.component.scss"],"styles":[],"templateUrl":["./text-cell-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_subscriptions","defaultValue":"new Subscription()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[121]},{"name":"disableTooltip","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"itemId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":13,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'myNameElem\'"}],"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"rulerElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":14,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'ruler\'"}],"modifierKind":[123]},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"checkColumnWidth","args":[{"name":"data","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ElementRef, ViewChild } from \'@angular/core\';\\r\\nimport { AfterViewInit, OnDestroy } from \'@angular/core/core\';\\r\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\r\\nimport { ICellRendererParams } from \'ag-grid-community\';\\r\\nimport { Subscription } from \'rxjs\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-text-cell-renderer\',\\r\\n    templateUrl: \'./text-cell-renderer.component.html\',\\r\\n    styleUrls: [\'./text-cell-renderer.component.scss\'],\\r\\n})\\r\\nexport class UiTextCellRendererComponent implements AfterViewInit, OnDestroy, ICellRendererAngularComp {\\r\\n    @ViewChild(\'myNameElem\') public myNameElem: ElementRef;\\r\\n    @ViewChild(\'ruler\') public rulerElem: ElementRef;\\r\\n\\r\\n    public params: any;\\r\\n    public disableTooltip = true;\\r\\n    public value: string;\\r\\n    public itemId: string;\\r\\n\\r\\n    private _subscriptions = new Subscription();\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public refresh(params: ICellRendererParams): boolean {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    public ngAfterViewInit(): void {\\r\\n\\r\\n        // Note: Using setTimeout to let the time to the cell content to be render before calculation\\r\\n        setTimeout(() => {this.checkColumnWidth(this.params);});\\r\\n\\r\\n        this._subscriptions.add(\\r\\n            this.params.column.eventService.addEventListener(\'widthChanged\', (data) => {\\r\\n                this.checkColumnWidth(data);\\r\\n            })\\r\\n        );\\r\\n    }\\r\\n\\r\\n    public ngOnDestroy(): void {\\r\\n        this._subscriptions.unsubscribe();\\r\\n    }\\r\\n\\r\\n    public checkColumnWidth(data){\\r\\n\\r\\n        if(data !== undefined){\\r\\n\\r\\n            if(data.column.actualWidth >= (this.myNameElem.nativeElement.scrollWidth + 48)){\\r\\n                this.disableTooltip = true;\\r\\n            }\\r\\n            else{\\r\\n                this.disableTooltip = false;\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public agInit(params: any): void {\\r\\n        this.params = params;\\r\\n        this.value = params.value;\\r\\n        this.itemId = params.itemId;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"::ng-deep .tooltip-inner {\\r\\n     max-width: 500px;\\r\\n}\\r\\n\\r\\na:link {\\r\\n     text-decoration: none;\\r\\n}\\r\\n\\r\\n.ellipsis {\\r\\n     white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\\r\\n}","styleUrl":"./text-cell-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":21},"implements":["AfterViewInit","OnDestroy","ICellRendererAngularComp"],"templateData":"<div #myNameElem\\r\\n    class=\\"ellipsis\\"\\r\\n    container=\\"body\\"\\r\\n    ngbTooltip=\\"{{ value }}\\"\\r\\n    [disableTooltip] = \\"disableTooltip\\"\\r\\n    [placement]=\\"\'top\'\\"\\r\\n    [tooltipClass]=\\"\'tooltip-lg\'\\"\\r\\n    (click)=\\"params.clicked(itemId)\\"\\r\\n    >\\r\\n    <span *ngIf=\\"params.isLink !== true\\">\\r\\n        {{ value }}\\r\\n    </span>\\r\\n    <a *ngIf=\\"params.isLink === true\\" class=\\"strong\\" href=\\"javascript: void(0);\\">{{ value }}</a>\\r\\n</div>\\r\\n"},{"name":"UiTextInputComponent","id":"component-UiTextInputComponent-6e52efd6ed8c56bb4b52cffe964b8496c3bed73d7a2c3e72921165218aec006e9e0bd3dc765988e2c2283cc5dc1e36880a4c5a687fd801f03caca606531e9834","file":"libs/ui/src/lib/modules/form/text-input/text-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-input-new","styleUrls":["./text-input.component.scss"],"styles":[],"templateUrl":["./text-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","line":11,"type":"\\"text\\" | \\"email\\" | \\"password\\"","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Optional, Self } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\nimport { ControlValueAccessor, NgControl } from \'@angular/forms\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-text-input-new\',\\r\\n    templateUrl: \'./text-input.component.html\',\\r\\n    styleUrls: [\'./text-input.component.scss\'],\\r\\n})\\r\\nexport class UiTextInputComponent extends UiFormControlBaseComponent {\\r\\n    @Input() public type: \'text\' | \'email\' | \'password\' = \'text\';\\r\\n\\r\\n    public concatErrors(arr1: object, arr2: object) {\\r\\n        return { ...arr1, ...arr2 };\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-input.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"<ng-container [formGroup]=\\"form\\"\\r\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\r\\n    <ui-form-control-base\\r\\n        [label]=\\"label\\"\\r\\n        [formControlName]=\\"formControlName\\"\\r\\n        [form]=\\"form\\"\\r\\n        [placeholder]=\\"placeholder\\"\\r\\n        [showHelpText]=\\"showHelpText\\"\\r\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n        [showInfoIcon]=\\"showInfoIcon\\"\\r\\n        [infoText]=\\"infoText\\"\\r\\n        [helpText]=\\"helpText\\"\\r\\n        [patternErrorText]=\\"patternErrorText\\"\\r\\n        [id]=\\"id\\"\\r\\n        [config]=\\"config\\"\\r\\n    >\\r\\n        <div class=\\"input-group\\">\\r\\n            \x3c!-- Prefix Icon --\x3e\\r\\n            <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n                <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\r\\n            </span>\\r\\n\\r\\n            \x3c!-- Prefix Text --\x3e\\r\\n            <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n                {{ prefixText }}\\r\\n            </span>\\r\\n\\r\\n            \x3c!-- Basic Input --\x3e\\r\\n            <input\\r\\n                [id]=\\"id + \'_TextInput\'\\"\\r\\n                [type]=\\"type\\"\\r\\n                [ngClass]=\\"{\\r\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\r\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation\\r\\n                }\\"\\r\\n                [placeholder]=\\"placeholder\\"\\r\\n                [value]=\\"value\\"\\r\\n                [disabled]=\\"disabled\\"\\r\\n                (input)=\\"onChange($event.target.value)\\"\\r\\n                (blur)=\\"onTouched()\\"\\r\\n                class=\\"form-control w-100\\"\\r\\n                autocomplete=\\"off\\"\\r\\n            />\\r\\n            \x3c!-- Suffix Icon --\x3e\\r\\n            <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n                <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\r\\n            </span>\\r\\n\\r\\n            \x3c!-- Suffix Text --\x3e\\r\\n            <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n                {{ suffixText }}\\r\\n            </span>\\r\\n        </div>\\r\\n    </ui-form-control-base>\\r\\n</ng-container>\\r\\n"},{"name":"UiTextInputComponent","id":"component-UiTextInputComponent-a662629284a6973e33a824892761ae63123e7c979401168f9dac0c7f11ec25671fd93a7143a9a5e60ea3067deddf99350529bd8c17a59e7cb983890185ff52d6-1","file":"libs/ui/src/lib/modules/form-controls/text-input/text-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-input","styleUrls":["./text-input.component.scss"],"styles":[],"templateUrl":["./text-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","line":13,"type":"\\"text\\" | \\"email\\" | \\"password\\"","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":true,"deprecationMessage":"Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form\\\\text-input\\\\text-input.component.ts instead","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n/**\\r\\n * @deprecated Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form\\\\text-input\\\\text-input.component.ts instead\\r\\n */\\r\\n@Component({\\r\\n    selector: \'ui-text-input\',\\r\\n    templateUrl: \'./text-input.component.html\',\\r\\n    styleUrls: [\'./text-input.component.scss\'],\\r\\n})\\r\\nexport class UiTextInputComponent extends UiFormControlBaseComponent {\\r\\n    @Input() public type: \'text\' | \'email\' | \'password\' = \'text\';\\r\\n\\r\\n    public concatErrors(arr1: object, arr2: object){\\r\\n        return {...arr1, ...arr2};\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-input.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","isDuplicate":true,"duplicateId":1,"duplicateName":"UiTextInputComponent-1","templateData":"<div *ngIf=\\"form !== undefined\\">\\r\\n\\r\\n    \x3c!-- Label --\x3e\\r\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\r\\n        {{label}}\\r\\n        \x3c!-- Required Asterix --\x3e\\r\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\r\\n    </label>\\r\\n\\r\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\r\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\r\\n\\r\\n    <div class=\\"input-group\\">\\r\\n\\r\\n        \x3c!-- Prefix Icon --\x3e\\r\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Prefix Text --\x3e\\r\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{prefixText}}\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Basic Input --\x3e\\r\\n        <input\\r\\n            [id]=\\"id + \'_TextInput\'\\"\\r\\n            [type]=\\"type\\"\\r\\n            [ngClass]=\\"{ \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation, \'is-valid\': form.controls[formControlName].valid && showSuccessValidation }\\"\\r\\n            [placeholder]=\\"placeholder\\"\\r\\n            [value]=\\"value\\"\\r\\n            [disabled]=\\"disabled\\"\\r\\n            (input)=\\"onChange($event.target.value)\\"\\r\\n            (blur)=\\"onTouched()\\"\\r\\n            class=\\"form-control\\"\\r\\n            autocomplete=\\"off\\"\\r\\n        />\\r\\n\\r\\n        \x3c!-- Suffix Icon --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\r\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\r\\n        </span>\\r\\n\\r\\n        \x3c!-- Suffix Text --\x3e\\r\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\r\\n            {{suffixText}}\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"feedback\\">\\r\\n\\r\\n        \x3c!-- Success Feedback Text --\x3e\\r\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\r\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Error Feedback Text --\x3e\\r\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\r\\n\\r\\n            <div *ngFor=\\"let item of form.controls[formControlName].errors | keyvalue\\">\\r\\n                \x3c!-- If errorString have NO parameters --\x3e\\r\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams === undefined\\">\\r\\n                    {{errorStrings[item.key].stringCode | translate: form.controls[formControlName].errors[item.key] }}\\r\\n                </ng-container>\\r\\n                \x3c!-- If errorString HAVE parameters --\x3e\\r\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams !== undefined\\">\\r\\n                    {{errorStrings[item.key].stringCode | translate: concatErrors(form.controls[formControlName].errors[item.key], errorStrings[item.key].stringParams) }}\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \x3c!-- Help Text --\x3e\\r\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\r\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\r\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n"},{"name":"UiToastsContainerComponent","id":"component-UiToastsContainerComponent-eb934a39ca9e34f5b497a6e5e8a66b50d804c81f20477e56ce482b76cb108301d929818f9c931866dfae7c91ee59673ec44e7b6f9417cc752f314eb9a727155f","file":"libs/ui/src/lib/services/toast-notification/toast-container/toasts-container.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-toasts-container","styleUrls":["./toasts-container.component.scss"],"styles":[],"templateUrl":["./toasts-container.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"sticky","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'class.ngb-toasts\'"}],"modifierKind":[123]},{"name":"toasts$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiToast[]>","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"toastTypes","defaultValue":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"UiAlertLayoutEnum","defaultValue":"UiAlertLayoutEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123]}],"methodsClass":[{"name":"mapType","args":[{"name":"type","type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"UiAlertTypeEnum","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"type","type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseClick","args":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onHidden","args":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class.ngb-toasts","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]}],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, HostBinding, Input, OnInit, ViewChild } from \'@angular/core\';\\r\\n// RxJs\\r\\nimport { Observable } from \'rxjs/internal/Observable\';\\r\\n// Services\\r\\nimport { UiToastService } from \'../toast.service\';\\r\\n// Interfaces\\r\\nimport { IUiToast } from \'../interfaces\';\\r\\n// Enums\\r\\nimport { UiToastTypesEnum } from \'../enums\';\\r\\nimport { UiAlertTypeEnum } from \'@lib/modules/alert/enums/alert-type.enum\';\\r\\nimport { UiAlertLayoutEnum } from \'@lib/modules/alert/enums/alert-layout.enum\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-toasts-container\',\\r\\n    templateUrl: \'./toasts-container.component.html\',\\r\\n    styleUrls: [\'./toasts-container.component.scss\'],\\r\\n})\\r\\n/**\\r\\n * Toasts container\\r\\n * This component is responsible for displaying toasts\\r\\n * It listens to the toast service and displays toasts using the alert component and styles them as toasts\\r\\n */\\r\\nexport class UiToastsContainerComponent implements OnInit {\\r\\n    @HostBinding(\'class.ngb-toasts\') public sticky = true;\\r\\n    public toasts$: Observable<IUiToast[]>;\\r\\n    public toastTypes = UiToastTypesEnum;\\r\\n    public UiAlertLayoutEnum = UiAlertLayoutEnum;\\r\\n\\r\\n    constructor(private _toastService: UiToastService) {\\r\\n        this.toasts$ = this._toastService.toasts$;\\r\\n    }\\r\\n    public ngOnInit() {\\r\\n        // Auto hide toasts after 5 seconds\\r\\n        // Since we use alerts, we can\'t use NgbToastConfig.autohide. This is a workaround\\r\\n        this.toasts$.subscribe((toasts) => {\\r\\n            toasts.forEach((toast) => {\\r\\n                if (toast.options.autoHide === true || toast.options.autoHide === undefined) {\\r\\n                    setTimeout(() => {\\r\\n                        this.onHidden(toast);\\r\\n                    }, 5000);\\r\\n                }\\r\\n            });\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Map the toast type to the alert type\\r\\n    //Toasts and alerts use different enums with the same values\\r\\n    public mapType(type: UiToastTypesEnum): UiAlertTypeEnum {\\r\\n        switch (type) {\\r\\n            case UiToastTypesEnum.info:\\r\\n                return UiAlertTypeEnum.info;\\r\\n            case UiToastTypesEnum.success:\\r\\n                return UiAlertTypeEnum.success;\\r\\n            case UiToastTypesEnum.warning:\\r\\n                return UiAlertTypeEnum.warning;\\r\\n            case UiToastTypesEnum.danger:\\r\\n                return UiAlertTypeEnum.danger;\\r\\n            default:\\r\\n                return UiAlertTypeEnum.info;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    public onHidden(toast: IUiToast) {\\r\\n        this._toastService.remove(toast);\\r\\n    }\\r\\n\\r\\n    public onCloseClick(toast: IUiToast) {\\r\\n        this._toastService.remove(toast);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../../ui/src/assets/styles/custom-variables.scss\';\\r\\n\\r\\n:host {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    z-index: 1200;\\r\\n}\\r\\n\\r\\n\\r\\n.alert .alert-container {\\r\\n    max-width: 400px;\\r\\n    @extend .toast;\\r\\n}\\r\\n\\r\\n.toast {\\r\\n    box-sizing: border-box;\\r\\n    color: $gray-900;\\r\\n    font-size: 14px;\\r\\n    width: $toast-width;\\r\\n    word-break: break-word;\\r\\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\\r\\n    border-radius: 4px;\\r\\n    border: 1px solid $info;\\r\\n    background-color: $info-100;\\r\\n\\r\\n    &.toast-info {\\r\\n        border: 1px solid $info;\\r\\n        background-color: $info-100;\\r\\n\\r\\n        .type-icon {\\r\\n            color: $info;\\r\\n            font-size: 20px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.toast-success {\\r\\n        border-color: $success;\\r\\n        background-color: $success-100;\\r\\n\\r\\n        .type-icon {\\r\\n            color: $success;\\r\\n            font-size: 20px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.toast-warning {\\r\\n        border-color: $warning-600;\\r\\n        background-color: $warning-100;\\r\\n\\r\\n        .type-icon {\\r\\n            color: $warning-600;\\r\\n            font-size: 20px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    &.toast-danger {\\r\\n        border-color: $danger-600;\\r\\n        background-color: $danger-100;\\r\\n\\r\\n        .type-icon {\\r\\n            color: $danger-600;\\r\\n            font-size: 20px;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    .text-message {\\r\\n        margin: 0 1rem 0 1rem;\\r\\n    }\\r\\n\\r\\n    .btn-close {\\r\\n        color: $gray-900;\\r\\n        margin-left: 1rem;\\r\\n        position: absolute;\\r\\n        right: 0;\\r\\n        top: 0.5rem;\\r\\n\\r\\n        &:focus {\\r\\n            outline: none;\\r\\n            box-shadow: none;\\r\\n        }\\r\\n    }\\r\\n}","styleUrl":"./toasts-container.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<ng-container *ngFor=\\"let toast of toasts$ | async\\">\\r\\n    <ui-alert\\r\\n        (hidden)=\\"onHidden(toast)\\"\\r\\n        [id]=\\"\'toast-id-\' + toast.id\\"\\r\\n        [text]=\\"toast.text\\"\\r\\n        [type]=\\"mapType(toast.type)\\"\\r\\n        [dismissible]=\\"toast.options.autoHide === false\\"\\r\\n        [layout]=\\"UiAlertLayoutEnum.STACKED\\"\\r\\n    >\\r\\n    </ui-alert>\\r\\n</ng-container>"},{"name":"UiToggleComponent","id":"component-UiToggleComponent-e6aa38ae03823ef955f970fb1d28ef2340260509e38d4a91c44be926674c3ce5de7f73f460ad1b36149cdc65656d93fa4a3960b9b91858771f88c56664ee91ea","file":"libs/ui/src/lib/modules/form/toggle/toggle.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-toggle","styleUrls":["./toggle.component.scss"],"styles":[],"templateUrl":["./toggle.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":10,"type":"literal type[]","decorators":[]},{"name":"text","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-toggle\',\\r\\n    templateUrl: \'./toggle.component.html\',\\r\\n    styleUrls: [\'./toggle.component.scss\'],\\r\\n})\\r\\nexport class UiToggleComponent extends UiFormControlBaseComponent implements OnInit {\\r\\n    @Input() public options: { label: string; value: string; disabled: boolean; required: boolean }[];\\r\\n    @Input() public inline = false;\\r\\n\\r\\n    @Input() public text: string;\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-check-inline {\\r\\n    width: max-content;\\r\\n    margin-right: 0.5rem;\\r\\n}","styleUrl":"./toggle.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"templateData":"<ng-container [formGroup]=\\"form\\">\\r\\n    \x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\r\\n    <ui-form-control-base\\r\\n        [formControlName]=\\"formControlName\\"\\r\\n        [form]=\\"form\\"\\r\\n        [label]=\\"label\\"\\r\\n        [showHelpText]=\\"showHelpText\\"\\r\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\r\\n        [showInfoIcon]=\\"false\\"\\r\\n        [infoText]=\\"infoText\\"\\r\\n        [helpText]=\\"helpText\\"\\r\\n    >\\r\\n        <div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\r\\n            <div class=\\"form-switch form-check\\" [ngClass]=\\"{ \'form-check-inline \': inline === true }\\">\\r\\n                <input\\r\\n                    class=\\"form-check-input\\"\\r\\n                    type=\\"checkbox\\"\\r\\n                    role=\\"switch\\"\\r\\n                    [value]=\\"value\\"\\r\\n                    [id]=\\"id + \'_Toggle\'\\"\\r\\n                    [name]=\\"formControlName\\"\\r\\n                    [formControlName]=\\"formControlName\\"\\r\\n                />\\r\\n                <label class=\\"form-check-label\\" [id]=\\"id + \'_Label\'\\" [for]=\\"id + \'_Toggle\'\\">\\r\\n                    {{ text }}<span *ngIf=\\"form.controls[formControlName].hasValidator(Validators.requiredTrue)\\">&nbsp;*</span>\\r\\n                </label>\\r\\n                <i\\r\\n                    *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\r\\n                    class=\\"bi bi-question-circle-fill d-inline-block\\"\\r\\n                    placement=\\"top\\"\\r\\n                    [ngbTooltip]=\\"infoText\\"\\r\\n                ></i>\\r\\n            </div>\\r\\n        </div>\\r\\n    </ui-form-control-base>\\r\\n</ng-container>"},{"name":"UiToolNavComponent","id":"component-UiToolNavComponent-84bd5b01f59ee07cc8cc933e7578380bd69220a8f7f8f606efc8a86785e948b692303f7c0d74a4f9988b6306bfde182e9c741bfb2082b923e2f6a97215a665b3","file":"libs/ui/src/lib/modules/layout/components/tool-nav/tool-nav.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tool-nav","styleUrls":["./tool-nav.component.scss"],"styles":[],"templateUrl":["./tool-nav.component.html"],"viewProviders":[],"inputsClass":[{"name":"toolItems","deprecated":false,"deprecationMessage":"","line":10,"type":"Array<IUiSubHeaderTool>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"headerService","deprecated":false,"deprecationMessage":"","type":"UiHeaderService","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toolItemClick","args":[{"name":"item","type":"IUiSubHeaderTool","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"IUiSubHeaderTool","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\r\\nimport { UiHeaderService, IUiSubHeaderTool } from \'@lib/services/layout/header/header.service\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-tool-nav\',\\r\\n    templateUrl: \'./tool-nav.component.html\',\\r\\n    styleUrls: [\'./tool-nav.component.scss\'],\\r\\n})\\r\\nexport class UiToolNavComponent implements OnInit {\\r\\n    @Input() public toolItems: Array<IUiSubHeaderTool>;\\r\\n\\r\\n    constructor(public headerService: UiHeaderService) {}\\r\\n\\r\\n    public ngOnInit(): void {}\\r\\n\\r\\n    public toolItemClick(item: IUiSubHeaderTool) {\\r\\n        item.onClickEvent(item);\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".tool-nav-container {\\r\\n    align-items: center;\\r\\n    box-sizing: border-box;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    place-content: center flex-end;\\r\\n    width: 100%;\\r\\n}\\r\\n","styleUrl":"./tool-nav.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"tool-nav-container\\">\\r\\n    <ng-container *ngFor=\\"let tool of toolItems\\">\\r\\n        <button class=\\"ms-2 me-2\\" *ngIf=\\"tool.type === \'button\'\\" [ngClass]=\\"tool.class\\" (click)=\\"toolItemClick(tool)\\" [disabled]=\\"tool.disabled\\">{{ tool.label | translate }}</button>\\r\\n        <div *ngIf=\\"tool.type === \'divider\'\\" class=\\"v-line\\" [ngClass]=\\"tool.class\\"></div>\\r\\n        <i\\r\\n            *ngIf=\\"tool.type === \'icon\'\\"\\r\\n            class=\\"fa pointer pe-1 ps-1\\"\\r\\n            [ngClass]=\\"tool.class\\"\\r\\n            style=\\"font-size: 20px;\\"\\r\\n            aria-hidden=\\"true\\"\\r\\n            (click)=\\"toolItemClick(tool)\\"\\r\\n        ></i>\\r\\n        <input *ngIf=\\"tool.type === \'search\'\\" [ngClass]=\\"tool.class\\" autocomplete=\\"off\\" class=\\"form-control\\" id=\\"companyName\\" [placeholder]=\\"tool.label | translate\\" style=\\"max-width: 200px; min-width: 200px;\\" />\\r\\n    </ng-container>\\r\\n</div>"},{"name":"UiTreeViewComponent","id":"component-UiTreeViewComponent-30dd228dd440f3c481792eee99e25ade7d02f66c5e83a6ecd3a4e3a029c212271f48c1d957922f1e03ad9d702c493e5887030d5fd4fc10676fe0783f18523890","file":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/tree-view.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tree-view","styleUrls":["./tree-view.component.scss"],"styles":[],"templateUrl":["./tree-view.component.html"],"viewProviders":[],"inputsClass":[{"name":"collapsedLevels","defaultValue":"[]","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nArray of levels that should be collapsed on init (starting from 0)\\nBy default all levels are expanded\\n","description":"<p>Array of levels that should be collapsed on init (starting from 0)\\nBy default all levels are expanded</p>\\n","line":25,"type":"number[]","decorators":[]},{"name":"treeData","deprecated":false,"deprecationMessage":"","line":12,"type":"IUiTreeData","decorators":[]}],"outputsClass":[{"name":"treeUpdated","defaultValue":"new EventEmitter<IUiTreeData>()","deprecated":false,"deprecationMessage":"","line":27,"type":"EventEmitter<IUiTreeData>"}],"propertiesClass":[{"name":"_treeData","deprecated":false,"deprecationMessage":"","type":"IUiTreeData","optional":false,"description":"","line":29,"modifierKind":[121]}],"methodsClass":[{"name":"assignNodeUid","args":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAssigns a unique identifier to each node in the tree for every instance\\nWe need this to track the nodes in the tree\\n\\n","description":"<p>Assigns a unique identifier to each node in the tree for every instance\\nWe need this to track the nodes in the tree</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":1307,"end":1311,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"node"},"type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"pos":1301,"end":1306,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1321,"end":1328,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"generateNodeUid","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getParentNode","args":[{"name":"nodeUid","type":"string","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""},{"name":"parent","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","defaultValue":"null"}],"optional":false,"returnType":"IUiTreeNode","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"nodeUid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"parent","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","defaultValue":"null","tagName":{"text":"param"}}]},{"name":"onNodeChange","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectNode","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateParentNode","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""},{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \'@angular/core\';\\r\\n// Interfaces\\r\\nimport { IUiTreeData, IUiTreeNode } from \'./interfaces\';\\r\\n\\r\\n@Component({\\r\\n    selector: \'ui-tree-view\',\\r\\n    templateUrl: \'./tree-view.component.html\',\\r\\n    styleUrls: [\'./tree-view.component.scss\'],\\r\\n})\\r\\nexport class UiTreeViewComponent {\\r\\n    @Input() public set treeData(value: IUiTreeData) {\\r\\n        this._treeData = value;\\r\\n        this.assignNodeUid(this._treeData?.root);\\r\\n    }\\r\\n\\r\\n    public get treeData(): IUiTreeData {\\r\\n        return this._treeData;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Array of levels that should be collapsed on init (starting from 0)\\r\\n     * By default all levels are expanded\\r\\n     */\\r\\n    @Input() public collapsedLevels: number[] = [];\\r\\n\\r\\n    @Output() public treeUpdated: EventEmitter<IUiTreeData> = new EventEmitter<IUiTreeData>();\\r\\n\\r\\n    private _treeData: IUiTreeData;\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n    public onNodeChange(value: boolean, node: IUiTreeNode) {\\r\\n        this.selectNode(value, node);\\r\\n        this.updateParentNode(value, node, this.treeData);\\r\\n\\r\\n        this.treeUpdated.emit(this.treeData);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Assigns a unique identifier to each node in the tree for every instance\\r\\n     * We need this to track the nodes in the tree\\r\\n     *\\r\\n     * @param node\\r\\n     * @returns\\r\\n     */\\r\\n    private assignNodeUid(node: IUiTreeNode) {\\r\\n        if (!node) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        node.nodeUid = this.generateNodeUid();\\r\\n        node.children?.forEach((n: IUiTreeNode) => {\\r\\n            this.assignNodeUid(n);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    private generateNodeUid(): string {\\r\\n        // UUIDv4 pattern: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\r\\n        // where x is any hexadecimal digit and y is one of 8, 9, A, or B\\r\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\r\\n            const r = (Math.random() * 16) | 0;\\r\\n            const v = c === \'x\' ? r : (r & 0x3) | 0x8;\\r\\n            return v.toString(16);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    private selectNode(value: boolean, node: IUiTreeNode) {\\r\\n        node.checked = value;\\r\\n        node.indeterminate = false;\\r\\n        node.children?.forEach((n: IUiTreeNode) => {\\r\\n            this.selectNode(value, n);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    private updateParentNode(value: boolean, node: IUiTreeNode, tree: IUiTreeData) {\\r\\n        const parentNode = this.getParentNode(node.nodeUid, tree.root);\\r\\n        if (!parentNode) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const allChildrenHasEqualValue = parentNode.children.every((child: IUiTreeNode) => !!child.checked === value);\\r\\n        const hasIndeterminate = parentNode.children.some((child: IUiTreeNode) => child.indeterminate === true);\\r\\n\\r\\n        parentNode.checked = (allChildrenHasEqualValue && !hasIndeterminate && value) || false;\\r\\n        parentNode.indeterminate = !allChildrenHasEqualValue || hasIndeterminate;\\r\\n\\r\\n        this.updateParentNode(value, parentNode, tree);\\r\\n    }\\r\\n\\r\\n    private getParentNode(nodeUid: string, node: IUiTreeNode, parent: IUiTreeNode = null): IUiTreeNode {\\r\\n        if (node.nodeUid === nodeUid) {\\r\\n            return parent;\\r\\n        }\\r\\n\\r\\n        if (node.children) {\\r\\n            for (const child of node.children) {\\r\\n                const foundParent = this.getParentNode(nodeUid, child, node);\\r\\n                if (foundParent) {\\r\\n                    return foundParent;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n    }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".chevron-btn {\\r\\n    padding-right: 1.25rem;\\r\\n    width: 1rem;\\r\\n\\r\\n    &:focus {\\r\\n        outline: none;\\r\\n        box-shadow: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n.chevron-icon {\\r\\n    transition: transform 300ms;\\r\\n}\\r\\n\\r\\n.chevron-expanded {\\r\\n    transform: rotate(90deg);\\r\\n}","styleUrl":"./tree-view.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":29},"accessors":{"treeData":{"name":"treeData","setSignature":{"name":"treeData","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":12,"jsdoctags":[{"name":"value","type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"treeData","type":"","returnType":"IUiTreeData","line":17}}},"templateData":"\x3c!-- Define the recursive template. --\x3e\\r\\n<ng-template #nodeTemplateRef let-node=\\"node\\" let-level=\\"level\\" let-expanded=\\"expanded\\"\\r\\n    let-childrenCount=\\"node.children?.length\\">\\r\\n    <div class=\\"d-flex\\">\\r\\n        <button #chevronButton [id]=\\"node.nodeUid + \'_chevronBtn\'\\" class=\\"btn chevron-btn\\" type=\\"button\\"\\r\\n            data-bs-toggle=\\"collapse\\" [attr.data-bs-target]=\\"\'#node_\' + node.nodeUid + \'_children\'\\"\\r\\n            [attr.aria-expanded]=\\"expanded\\" aria-controls=\\"collapseNode\\" [disabled]=\\"!childrenCount\\">\\r\\n            \x3c!-- Hint: This approach is used to manage the chevron state\\r\\n            because Bootstrap doesn\'t add \\"collapsed\\" class on init.\\r\\n            This could lead to a wrong default state for the chevron --\x3e\\r\\n            <i *ngIf=\\"childrenCount\\" class=\\"bi bi-chevron-right d-inline-block chevron-icon\\"\\r\\n                [ngClass]=\\"{ \'chevron-expanded\': chevronButton?.attributes[\'aria-expanded\']?.nodeValue === \'true\' }\\"></i>\\r\\n        </button>\\r\\n\\r\\n        <div class=\\"form-check my-2\\">\\r\\n            <input class=\\"form-check-input\\" [id]=\\"node.nodeUid + \'_checkbox\'\\" type=\\"checkbox\\" [ngModel]=\\"node.checked\\"\\r\\n                [indeterminate]=\\"node.indeterminate\\" (ngModelChange)=\\"onNodeChange($event, node)\\" />\\r\\n            <label class=\\"form-check-label\\" [id]=\\"node.nodeUid + \'_checkboxLabel\'\\" [for]=\\"node.nodeUid + \'_checkbox\'\\">\\r\\n                {{ node.label }}\\r\\n            </label>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\"childrenCount\\" class=\\"ms-4 collapse\\" [ngClass]=\\"{ \'show\': expanded }\\"\\r\\n        [id]=\\"\'node_\' + node.nodeUid + \'_children\'\\">\\r\\n        <ng-template ngFor let-child [ngForOf]=\\"node.children\\">\\r\\n            \x3c!-- Invoke the recursive template. --\x3e\\r\\n            <ng-template [ngTemplateOutlet]=\\"nodeTemplateRef\\" [ngTemplateOutletContext]=\\"{\\r\\n                    node: child,\\r\\n                    level: level + 1,\\r\\n                    expanded: !collapsedLevels?.includes(level + 1)\\r\\n                    }\\">\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\x3c!-- Initiate the recursive template rendering. --\x3e\\r\\n<ng-template *ngIf=\\"treeData?.root\\" [ngTemplateOutlet]=\\"nodeTemplateRef\\"\\r\\n    [ngTemplateOutletContext]=\\"{ node: treeData.root, level: 0, expanded: !collapsedLevels?.includes(0) }\\">\\r\\n</ng-template>"}],"modules":[{"name":"UiAcpProfileManagerModule","id":"module-UiAcpProfileManagerModule-ec36ac85f3cfa5cc02e83cf505f6917292fb7c7fa9f53d6225ced863637da7acb9cd30a7223a49a31026b8b87a0dde0d09248692fa8ac0050af8ac6544a61799","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/user-auth-manager/profile-manager.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { RouterModule, Routes } from \'@angular/router\';\\r\\nimport { HttpClientModule } from \'@angular/common/http\';\\r\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\r\\n// Modules\\r\\nimport { UiPipesModule } from \'../pipes/pipe.module\';\\r\\nimport { AcpFeatureManagementModule } from \'@app/modules/shared/feature-management/feature-management.module\';\\r\\n// Components\\r\\nimport { UiAcpProfileManagerComponent } from \'./profile-manager.component\';\\r\\nimport { UiAcpSessionListComponent } from \'./components/session-list/session-list.component\';\\r\\nimport { UiAcpSessionItemComponent } from \'./components/session-item/session-item.component\';\\r\\nimport { UiAcpUserDetailsComponent } from \'./components/user-details/user-details.component\';\\r\\nimport { UiAcpProfileSectionComponent } from \'./components/profile-section/profile-section.component\';\\r\\nimport { UiAcpContactInformationSectionComponent } from \'./components/contact-information-section/contact-information-section.component\';\\r\\nimport { UiAcpOrganizationSectionComponent } from \'./components/organizations-section/organizations-section.component\';\\r\\nimport { UiTreeViewComponent } from \'./components/tree-view/tree-view.component\';\\r\\nimport { UiOffcanvasComponent } from \'./components/offcanvas/offcanvas.component\';\\r\\n// Services\\r\\nimport { AcpHttpUtilsService } from \'@app/core/_base/crud\';\\r\\nimport { UiPersonService } from \'./services/person.service\';\\r\\n// Enums\\r\\nimport { UiAcpAuthUserEnum } from \'./enums/auth-route.enum\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiAcpConfirmDeleteSessionModalComponent } from\\r\\n    \'./components/confirm-delete-session-modal/confirm-delete-session-modal.component\';\\r\\n\\r\\nconst routes: Routes = [\\r\\n    {\\r\\n        path: \'\',\\r\\n        component: UiAcpProfileManagerComponent,\\r\\n    },\\r\\n];\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        UiAcpProfileManagerComponent,\\r\\n        UiAcpSessionListComponent,\\r\\n        UiAcpSessionItemComponent,\\r\\n        UiAcpUserDetailsComponent,\\r\\n        UiAcpProfileSectionComponent,\\r\\n        UiAcpContactInformationSectionComponent,\\r\\n        UiAcpOrganizationSectionComponent,\\r\\n        UiAcpConfirmDeleteSessionModalComponent,\\r\\n        UiTreeViewComponent,\\r\\n        UiOffcanvasComponent,\\r\\n    ],\\r\\n    providers: [AcpHttpUtilsService],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        RouterModule.forChild(routes),\\r\\n        FormsModule,\\r\\n        HttpClientModule,\\r\\n        ReactiveFormsModule,\\r\\n        ReactiveFormsModule,\\r\\n        TranslateModule.forChild(),\\r\\n        NgbModule,\\r\\n        UiPipesModule,\\r\\n        AcpFeatureManagementModule,\\r\\n    ],\\r\\n    exports: [UiOffcanvasComponent, UiTreeViewComponent],\\r\\n})\\r\\nexport class UiAcpProfileManagerModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAcpConfirmDeleteSessionModalComponent"},{"name":"UiAcpContactInformationSectionComponent"},{"name":"UiAcpOrganizationSectionComponent"},{"name":"UiAcpProfileManagerComponent"},{"name":"UiAcpProfileSectionComponent"},{"name":"UiAcpSessionItemComponent"},{"name":"UiAcpSessionListComponent"},{"name":"UiAcpUserDetailsComponent"},{"name":"UiOffcanvasComponent"},{"name":"UiTreeViewComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiOffcanvasComponent"},{"name":"UiTreeViewComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAlertModule","id":"module-UiAlertModule-d03d3bb1f129d181f1537eb172f0bccd7c3214448745be1958330493f97d7940adcd455e4d825af044dd3798dc8e087f83ac891a0eedec33207c43ebdd4c9c2b","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/alert/alert.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { UiAlertComponent } from \'./alert.component\';\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiFormModule } from \'../form/form.module\';\\r\\nimport { UiButtonModule } from \'../button/button.module\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\n@NgModule({\\r\\n    declarations: [UiAlertComponent],\\r\\n    imports: [CommonModule, NgbModule, UiFormModule, UiButtonModule, TranslateModule],\\r\\n    exports: [UiAlertComponent],\\r\\n})\\r\\nexport class UiAlertModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAlertComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiFormModule"}]},{"type":"exports","elements":[{"name":"UiAlertComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAnalyticsModule","id":"module-UiAnalyticsModule-a3b37364b199ed9adaefff216d4f215f3a4cc273767ed797225f59a772ba29e2287c46e814b41892d7ecaaf93921beb990eebd9f9c8e4fa2b9460b8e07ddd278","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/services/analytics/analytics.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\n\\r\\n@NgModule({\\r\\n    imports: [],\\r\\n    exports: [],\\r\\n    declarations: [],\\r\\n    providers: [],\\r\\n})\\r\\n/**\\r\\n * @deprecated\\r\\n */\\r\\nexport class UiAnalyticsModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuth0Module","id":"module-UiAuth0Module-89afcac5265dda3eee54e33e683f7014dd5408b0d46e6ecd5cfbc70c123973d2a2802d4759e8ce37d973281fef911d5fdaa2b54c3e7c0ce38c38fa4dc0226430","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/auth0/auth0.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { UiAuth0CallbackComponent } from \'./components/callback.component\';\\r\\nimport { UiAuth0RoutingModule } from \'./auth0-routing.module\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiAuth0CallbackComponent],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        UiAuth0RoutingModule,\\r\\n    ]\\r\\n})\\r\\nexport class UiAuth0Module { }\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAuth0CallbackComponent"}]},{"type":"imports","elements":[{"name":"UiAuth0RoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuth0RoutingModule","id":"module-UiAuth0RoutingModule-a47f91baba56eaff3f6526951a035266745668fabe0cfc9b8f8a01816af2c8ee61268c56a79dbc13a41cf3b6da0ac787f2df327f4b0bfe74e536a7c91eb1d110","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/auth0/auth0-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { Routes, RouterModule } from \'@angular/router\';\\r\\nimport { UiAuth0CallbackComponent } from \'./components/callback.component\';\\r\\n\\r\\nconst routes: Routes = [\\r\\n    { path: \'\', component: UiAuth0CallbackComponent }\\r\\n];\\r\\n\\r\\n@NgModule({\\r\\n    imports: [\\r\\n        RouterModule.forChild(routes)],\\r\\n    exports: [RouterModule],\\r\\n})\\r\\nexport class UiAuth0RoutingModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuthentificationModule","id":"module-UiAuthentificationModule-4961a19dee50e12f792743b60e45e98b2f3dde5bc501912fd3d381da7a105bd302ed3e1d9c27407a7d8b18218b4ae474f31b31493dc071573ad6dc87d49f56f5","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/authentification.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\r\\nimport { UiAuthentificationRoutingModule } from \'./authentification-routing.module\';\\r\\nimport { TranslateLoader, TranslateModule, TranslatePipe } from \'@ngx-translate/core\';\\r\\nimport { HttpClient } from \'@angular/common/http\';\\r\\nimport { TranslateHttpLoader } from \'@ngx-translate/http-loader\';\\r\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\r\\n\\r\\nimport { UiOneTimePinComponent } from \'./components/login/one-time-pin.component\';\\r\\nimport { UiOneTimePinGenerationComponent } from \'./pages/one-time-pin-generation/one-time-pin-generation.component\';\\r\\nimport { UiOneTimePinInputComponent } from \'./pages/one-time-pin-input/one-time-pin-input.component\';\\r\\nimport { UiAssenteeLoginComponent } from \'./pages/ascentee-login/ascentee-login.component\';\\r\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\r\\nimport { AcpComponentsModule } from \'@app/modules/developer-hub/components/components.module\';\\r\\nimport { UiToastNotificationModule } from \'@lib/services/toast-notification/toast-notification.module\';\\r\\nimport { UiPrivacyAgreementModalComponent } from \'./components/modals/privacy-agreement-modal.component\';\\r\\nimport { UiAreYouSureModalComponent } from \'./components/modals/are-you-sure-modal.component\';\\r\\n\\r\\n// AoT requires an exported function for factories\\r\\nexport const uiHttpLoaderFactory = (httpClient: HttpClient) => {\\r\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\r\\n};\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        UiOneTimePinComponent,\\r\\n        UiOneTimePinGenerationComponent,\\r\\n        UiOneTimePinInputComponent,\\r\\n        UiAssenteeLoginComponent,\\r\\n        UiPrivacyAgreementModalComponent,\\r\\n        UiAreYouSureModalComponent\\r\\n    ],\\r\\n    imports: [\\r\\n        AcpComponentsModule,\\r\\n        CommonModule,\\r\\n        FlexLayoutModule,\\r\\n        FormsModule,\\r\\n        ReactiveFormsModule,\\r\\n        UiAuthentificationRoutingModule,\\r\\n        UiFormControlsModule,\\r\\n        TranslateModule.forChild(),\\r\\n        // TranslateModule.forChild({\\r\\n        //     loader: {\\r\\n        //         provide: TranslateLoader,\\r\\n        //         useFactory: uiHttpLoaderFactory,\\r\\n        //         deps: [HttpClient],\\r\\n        //     },\\r\\n        //     isolate: true,\\r\\n        //     extend: true,\\r\\n        // }),\\r\\n        UiToastNotificationModule\\r\\n    ],\\r\\n    exports: [TranslateModule, UiOneTimePinComponent, UiPrivacyAgreementModalComponent, UiAreYouSureModalComponent],\\r\\n    providers: [TranslatePipe],\\r\\n})\\r\\nexport class UiAuthentificationModule { }\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAreYouSureModalComponent"},{"name":"UiAssenteeLoginComponent"},{"name":"UiOneTimePinComponent"},{"name":"UiOneTimePinGenerationComponent"},{"name":"UiOneTimePinInputComponent"},{"name":"UiPrivacyAgreementModalComponent"}]},{"type":"imports","elements":[{"name":"UiAuthentificationRoutingModule"},{"name":"UiFormControlsModule"},{"name":"UiToastNotificationModule"}]},{"type":"exports","elements":[{"name":"UiAreYouSureModalComponent"},{"name":"UiOneTimePinComponent"},{"name":"UiPrivacyAgreementModalComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuthentificationRoutingModule","id":"module-UiAuthentificationRoutingModule-5163040ab8b2edeb53ba6a6c3dd2ee23baa8d6091b0b7d9649a4ea69aa43c824a444fff56409ebba8b44c5808649600b32189b3b14759e5627d7c6a42dd79bf7","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/authentification-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { Routes, RouterModule } from \'@angular/router\';\\r\\nimport { UiAssenteeLoginComponent } from \'./pages/ascentee-login/ascentee-login.component\';\\r\\nimport { UiOneTimePinGenerationComponent } from \'./pages/one-time-pin-generation/one-time-pin-generation.component\';\\r\\nimport { UiOneTimePinInputComponent } from \'./pages/one-time-pin-input/one-time-pin-input.component\';\\r\\n\\r\\nconst routes: Routes = [\\r\\n    { path: \'\', component: UiOneTimePinGenerationComponent },\\r\\n    { path: \'passcode\', component: UiOneTimePinInputComponent },\\r\\n    { path: \'login\', component: UiAssenteeLoginComponent }\\r\\n];\\r\\n\\r\\n@NgModule({\\r\\n    imports: [RouterModule.forChild(routes)],\\r\\n    exports: [RouterModule],\\r\\n})\\r\\nexport class UiAuthentificationRoutingModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiButtonModule","id":"module-UiButtonModule-195bad01ffb2c49434030f1d6d7243c7539ed4d4a9bb66ca0d355621c1f2fe858f5e40c77d6fd44d7b51f0a03a0e9949f90019ec2b018426aa2c477150773ac1","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/button/button.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { UiButtonComponent } from \'./components/button/button.component\';\\r\\nimport { UiActionButtonsNewComponent } from \'./components/action-buttons/action-buttons.component\';\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiButtonComponent, UiActionButtonsNewComponent],\\r\\n    imports: [CommonModule, NgbModule, TranslateModule.forChild()],\\r\\n    exports: [UiButtonComponent, UiActionButtonsNewComponent],\\r\\n})\\r\\nexport class UiButtonModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiActionButtonsNewComponent"},{"name":"UiButtonComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiActionButtonsNewComponent"},{"name":"UiButtonComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiCardModule","id":"module-UiCardModule-51892e9bce2514ee5051f5d2b6a22943e7149f302d807c219fa46d88334df2c721ec0656982f630560ece0d6fe7d2aea174999df2184be1f7093739fcb9bf093","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/card/card.module.ts","methods":[],"sourceCode":"\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { UiCardComponent } from \'./components/card/card.component\';\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiButtonModule } from \'../button/button.module\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiCardComponent],\\r\\n    imports: [CommonModule, NgbModule, TranslateModule, UiButtonModule],\\r\\n    exports: [TranslateModule, UiCardComponent],\\r\\n})\\r\\nexport class UiCardModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiCardComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"}]},{"type":"exports","elements":[{"name":"UiCardComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiConsentModule","id":"module-UiConsentModule-2f0f9858ceec88eb094f2372a88b356d7b4531094e05d151c0f5d13b927eb7eb0a023224ec99b6a08d721e6bbe9c399eb81055c5d3940c70d0f7657ee81e6a0c","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/consent/user-consent.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { UiConsentPageComponent } from \'./pages/user-consent-page/user-consent-page.component\';\\r\\nimport { UiConsentRoutingModule } from \'./user-consent-routing\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { UiAuthentificationModule } from \'../authentification\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiConsentPageComponent],\\r\\n    imports: [CommonModule, TranslateModule, UiConsentRoutingModule, UiAuthentificationModule],\\r\\n    exports: [TranslateModule, UiConsentPageComponent],\\r\\n})\\r\\nexport class UiConsentModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiConsentPageComponent"}]},{"type":"imports","elements":[{"name":"UiAuthentificationModule"},{"name":"UiConsentRoutingModule"}]},{"type":"exports","elements":[{"name":"UiConsentPageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiConsentRoutingModule","id":"module-UiConsentRoutingModule-51d183d963f0fa066ccdfa2a6dacbced118292ca9da3cb240ddcc5910e70cdef8bf1fb723ddfe16f50005ea8dc833c48b13cf5aeefee08226d0c941e56ac6625","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/consent/user-consent-routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { RouterModule, Routes } from \'@angular/router\';\\r\\n\\r\\nimport { UiConsentPageComponent } from \'./pages/user-consent-page/user-consent-page.component\';\\r\\n\\r\\nconst routes: Routes = [{ path: \'\', component: UiConsentPageComponent}];\\r\\n\\r\\n@NgModule({\\r\\n    imports: [RouterModule.forChild(routes)],\\r\\n    exports: [RouterModule],\\r\\n})\\r\\nexport class UiConsentRoutingModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiDashboardModule","id":"module-UiDashboardModule-e9e6e90c00bca53c5af098ee9d250744e5206a056184732333ecbab852d4b2019c8d99294ebf2d49c89f497dc039e816bbc4e7054808f2c6d52e59ba8992da81","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/dashboard/dashboard.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { UiDashboardRoutingModule } from \'./dashboard-routing.module\';\\r\\nimport { UiDashboardComponent } from \'./dashboard.component\';\\r\\nimport { UiButtonModule } from \'../button/button.module\';\\r\\nimport { UiCardModule } from \'../card/card.module\';\\r\\nimport { UiFormModule } from \'../form/form.module\';\\r\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiDashboardComponent],\\r\\n    imports: [CommonModule, UiDashboardRoutingModule, TranslateModule, UiCardModule, UiFormModule, UiButtonModule, UiFormControlsModule],\\r\\n    exports: [UiDashboardComponent, TranslateModule],\\r\\n})\\r\\nexport class UiDashboardModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiDashboardComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiCardModule"},{"name":"UiDashboardRoutingModule"},{"name":"UiFormControlsModule"},{"name":"UiFormModule"}]},{"type":"exports","elements":[{"name":"UiDashboardComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiDashboardRoutingModule","id":"module-UiDashboardRoutingModule-09893b6b393e052c170ced231c9780294d7d91bd2d5b6e49ebb683d891dab319a89496aba1e29555062e2e822bfe4a4510e9aa03c6f3697412fecd26ebdb6f1c","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/dashboard/dashboard-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { Routes, RouterModule } from \'@angular/router\';\\r\\nimport { UiDashboardComponent } from \'./dashboard.component\';\\r\\n\\r\\nconst routes: Routes = [\\r\\n    {\\r\\n        path: \'\',\\r\\n        component: UiDashboardComponent,\\r\\n    }\\r\\n];\\r\\n\\r\\n@NgModule({\\r\\n    imports: [RouterModule.forChild(routes)],\\r\\n    exports: [RouterModule],\\r\\n})\\r\\nexport class UiDashboardRoutingModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiErrorModule","id":"module-UiErrorModule-c0f7275d5b6cc01764236dc3d837aaf54294ea3f9ee90d74e01eb473028dbc527041e94dcb1bf8b6eb719047ffbb20173ad76af0b4e209847046c466435f4afa","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/error/error.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { UiErrorRoutingModule } from \'./error-routing.module\';\\r\\nimport { UiErrorComponent } from \'./error.component\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiErrorComponent],\\r\\n    imports: [CommonModule, UiErrorRoutingModule, TranslateModule],\\r\\n    exports: [UiErrorComponent, TranslateModule],\\r\\n})\\r\\nexport class UiErrorModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiErrorComponent"}]},{"type":"imports","elements":[{"name":"UiErrorRoutingModule"}]},{"type":"exports","elements":[{"name":"UiErrorComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiErrorRoutingModule","id":"module-UiErrorRoutingModule-d48b8d478068df7dc86469bac02edbca719f2ad67d5e4539b804557b16dcc042d872b796e410d0aaf1c79e4b75b9c3a53f0aa2d3fe2b2756c03afa93a1cbba5e","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/error/error-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { Routes, RouterModule } from \'@angular/router\';\\r\\nimport { UiErrorComponent } from \'./error.component\';\\r\\n\\r\\nconst routes: Routes = [\\r\\n    {\\r\\n        path: \'\',\\r\\n        component: UiErrorComponent,\\r\\n    }\\r\\n];\\r\\n\\r\\n@NgModule({\\r\\n    imports: [RouterModule.forChild(routes)],\\r\\n    exports: [RouterModule],\\r\\n})\\r\\nexport class UiErrorRoutingModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFeatureFlagModule","id":"module-UiFeatureFlagModule-566ee57ed8812703d0cd56c16637cd4a1e579454ae98f0f2fe57d0230d2f6fba8d12e4a1c1dd302e6890e8da53a52c8420cbf18b04bfdb82d52dd6260d5295cc","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/feature-flags/feature-flag.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { UiIsFlagOnDirective } from \'./directives/is-flag-on.directive\';\\r\\nimport { UiIsFlagOffDirective } from \'./directives/is-flag-off.directive\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiIsFlagOnDirective, UiIsFlagOffDirective],\\r\\n    imports: [CommonModule],\\r\\n    exports: [UiIsFlagOnDirective, UiIsFlagOffDirective],\\r\\n})\\r\\nexport class UiFeatureFlagModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiIsFlagOffDirective"},{"name":"UiIsFlagOnDirective"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiIsFlagOffDirective"},{"name":"UiIsFlagOnDirective"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFileUploadModule","id":"module-UiFileUploadModule-ce314365370a5cebdb5ac8d40a2d793ebdeacbe92e198002917cd2c08a18761d497cc7d823541045536fecc1b64ba7cd9c953c76b613476a561f08a344721a14","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/file-upload/file-upload.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { NgbTooltipModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiFormModule } from \'../form/form.module\';\\r\\nimport { UiFileUploadComponent } from \'./components/file-upload/file-upload.component\';\\r\\nimport { UiDragDropDirective } from \'./directives/drag-drop.directive\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiFileUploadComponent, UiDragDropDirective],\\r\\n    imports: [CommonModule, NgbTooltipModule, UiFormModule, TranslateModule],\\r\\n    exports: [UiFileUploadComponent, UiDragDropDirective, TranslateModule],\\r\\n})\\r\\nexport class UiFileUploadModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiDragDropDirective"},{"name":"UiFileUploadComponent"}]},{"type":"imports","elements":[{"name":"UiFormModule"}]},{"type":"exports","elements":[{"name":"UiDragDropDirective"},{"name":"UiFileUploadComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFilterModule","id":"module-UiFilterModule-6d446b9603ec8a8eca30188e43ba2f2c6f80cd8285fabc51d7ba8ca60ecbc45b95f41303239e4d1265dc5e57fece6c316a1b82d1bb229eb5c14c708839d53904","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/filter/filter.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { UiQuickFilterComponent } from \'./quick-filter/quick-filter.component\';\\r\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\r\\nimport { UiGridFilterComponent } from \'./grid-filter/grid-filter.component\';\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { UiGridModule } from \'../grid/grid.module\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiQuickFilterComponent, UiGridFilterComponent],\\r\\n    imports: [CommonModule, UiFormControlsModule, TranslateModule, NgbModule, UiGridModule],\\r\\n    exports: [UiQuickFilterComponent, UiGridFilterComponent],\\r\\n})\\r\\nexport class UiFilterModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiGridFilterComponent"},{"name":"UiQuickFilterComponent"}]},{"type":"imports","elements":[{"name":"UiFormControlsModule"},{"name":"UiGridModule"}]},{"type":"exports","elements":[{"name":"UiGridFilterComponent"},{"name":"UiQuickFilterComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFormControlsModule","id":"module-UiFormControlsModule-50506878ef932c06d7f16fd1358ea97dd90aac81425ecc62b2c447e63cf019c9307897171c4b8017c4ab91c2f4337c09db60683b02003d8a5f11854dcf64e1d3","description":"","deprecationMessage":"Use `UiFormModule` for ASP","deprecated":true,"file":"libs/ui/src/lib/modules/form-controls/form-controls.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\r\\n// Ng Bootstrap\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Ngx Translate\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\n// Quill\\r\\nimport { QuillModule } from \'ngx-quill\';\\r\\n// Modules\\r\\nimport { ClickOutsideModule } from \'ng-click-outside\';\\r\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\r\\n// Pipes\\r\\nimport { UiTruncatePipe } from \'./pipes/truncate.pipe\';\\r\\nimport { UiMonthNamePipe } from \'./pipes/month-name.pipe\';\\r\\n// Components\\r\\nimport { UiActionButtonsComponent } from \'./action-buttons/action-buttons.component\';\\r\\nimport { UiCheckboxComponent } from \'./checkbox/checkbox.component\';\\r\\nimport { UiDatepickerComponent } from \'./datepicker/datepicker.component\';\\r\\nimport { UiDatePickerPlusComponent } from \'@lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component\';\\r\\nimport { UiDropdownPlusComponent } from \'./dropdown-plus/dropdown-plus.component\';\\r\\nimport { UiFormBaseComponent } from \'./form-base/form-base.component\';\\r\\nimport { UiFormControlBaseComponent } from \'./form-control-base/form-control-base.component\';\\r\\nimport { UiMultiPillComponent } from \'@lib/modules/form-controls/pills/components/multi-pill/multi-pill.component\';\\r\\nimport { UiPillComponent } from \'@lib/modules/form-controls/pills/components/pill/pill.component\';\\r\\nimport { UiProgressIndicatorComponent } from \'./progress-indicator/progress-indicator.component\';\\r\\nimport { UiRichTextEditorComponent } from \'./rich-text-editor/rich-text-editor.component\';\\r\\nimport { UiRichTextEditorToolbarComponent } from \'./rich-text-editor/components/toolbar/rich-text-editor-toolbar.component\';\\r\\nimport { UiTagsInputComponent } from \'./tags-input/tags-input.component\';\\r\\nimport { UiTextAreaComponent } from \'./text-area/text-area.component\';\\r\\nimport { UiTextInputComponent } from \'./text-input/text-input.component\';\\r\\nimport { UiDropdownComponent } from \'./dropdown-multi-select/dropdown-multi-select.component\';\\r\\n\\r\\n// Deprecated - Will be removed in the future\\r\\nimport { UiDropdownOldFormControlsComponent } from \'./dropdown/dropdown.component\';\\r\\n\\r\\n/**\\r\\n * @deprecated Use `UiFormModule` for ASP\\r\\n */\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        UiActionButtonsComponent,\\r\\n        UiCheckboxComponent,\\r\\n        UiDatepickerComponent,\\r\\n        UiDatePickerPlusComponent,\\r\\n        UiDropdownOldFormControlsComponent, // use UiDropdownComponent instead\\r\\n        UiDropdownPlusComponent,\\r\\n        UiFormBaseComponent,\\r\\n        UiFormControlBaseComponent,\\r\\n        UiMonthNamePipe,\\r\\n        UiMultiPillComponent,\\r\\n        UiPillComponent,\\r\\n        UiProgressIndicatorComponent,\\r\\n        UiRichTextEditorComponent,\\r\\n        UiRichTextEditorToolbarComponent,\\r\\n        UiTagsInputComponent,\\r\\n        UiTextAreaComponent,\\r\\n        UiTextInputComponent,\\r\\n        UiTruncatePipe,\\r\\n        UiDropdownComponent, // This is the new dropdown component\\r\\n    ],\\r\\n    imports: [\\r\\n        ClickOutsideModule,\\r\\n        CommonModule,\\r\\n        FlexLayoutModule,\\r\\n        FormsModule,\\r\\n        NgbModule,\\r\\n        QuillModule,\\r\\n        ReactiveFormsModule,\\r\\n        TranslateModule,\\r\\n    ],\\r\\n    exports: [\\r\\n        UiActionButtonsComponent,\\r\\n        UiCheckboxComponent,\\r\\n        UiDatepickerComponent,\\r\\n        UiDatePickerPlusComponent,\\r\\n        UiDropdownOldFormControlsComponent, // use UiDropdownComponent instead\\r\\n        UiDropdownPlusComponent,\\r\\n        UiMultiPillComponent,\\r\\n        UiPillComponent,\\r\\n        UiProgressIndicatorComponent,\\r\\n        UiRichTextEditorComponent,\\r\\n        UiRichTextEditorToolbarComponent,\\r\\n        UiTagsInputComponent,\\r\\n        UiTextAreaComponent,\\r\\n        UiTextInputComponent,\\r\\n        UiTruncatePipe,\\r\\n        UiDropdownComponent, // This is the new dropdown component\\r\\n    ],\\r\\n})\\r\\nexport class UiFormControlsModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiActionButtonsComponent"},{"name":"UiDatePickerPlusComponent"},{"name":"UiDatepickerComponent"},{"name":"UiDropdownComponent"},{"name":"UiDropdownOldFormControlsComponent"},{"name":"UiDropdownPlusComponent"},{"name":"UiMonthNamePipe"},{"name":"UiMultiPillComponent"},{"name":"UiPillComponent"},{"name":"UiProgressIndicatorComponent"},{"name":"UiTagsInputComponent"},{"name":"UiTruncatePipe"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiActionButtonsComponent"},{"name":"UiDatePickerPlusComponent"},{"name":"UiDatepickerComponent"},{"name":"UiDropdownComponent"},{"name":"UiDropdownOldFormControlsComponent"},{"name":"UiDropdownPlusComponent"},{"name":"UiMultiPillComponent"},{"name":"UiPillComponent"},{"name":"UiProgressIndicatorComponent"},{"name":"UiTagsInputComponent"},{"name":"UiTruncatePipe"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFormModule","id":"module-UiFormModule-9c6f602bf7a732f389cf2e8f1f7e2a3845e4627a5a17763c3afd945629f00a72f7f67d598e11e6edfaa192d7b4d478491dcc0dda877fc5dd98c596d1298ab8df","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/form/form.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\r\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\r\\n// Ng Bootstrap\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Ngx Translate\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\n// Quill\\r\\nimport { QuillModule } from \'ngx-quill\';\\r\\n// Click Outside\\r\\nimport { ClickOutsideModule } from \'ng-click-outside\';\\r\\n// Components\\r\\nimport { UiFormControlBaseComponent } from \'./form-control-base/form-control-base.component\';\\r\\nimport { UiRadioButtonComponent } from \'./radio-button/radio-button.component\';\\r\\nimport { UiRichTextEditorComponent } from \'./rich-text-editor/rich-text-editor.component\';\\r\\nimport { UiRichTextEditorToolbarComponent } from \'./rich-text-editor/components/toolbar/rich-text-editor-toolbar.component\';\\r\\nimport { UiTextAreaComponent } from \'./text-area/text-area.component\';\\r\\nimport { UiTextInputComponent } from \'./text-input/text-input.component\';\\r\\nimport { UiToggleComponent } from \'./toggle/toggle.component\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        UiFormControlBaseComponent,\\r\\n        UiRadioButtonComponent,\\r\\n        UiRichTextEditorComponent,\\r\\n        UiRichTextEditorToolbarComponent,\\r\\n        UiTextAreaComponent,\\r\\n        UiTextInputComponent,\\r\\n        UiToggleComponent,\\r\\n    ],\\r\\n    imports: [\\r\\n        ClickOutsideModule,\\r\\n        CommonModule,\\r\\n        FlexLayoutModule,\\r\\n        FormsModule,\\r\\n        NgbModule,\\r\\n        QuillModule,\\r\\n        ReactiveFormsModule,\\r\\n        TranslateModule,\\r\\n    ],\\r\\n    exports: [\\r\\n        UiFormControlBaseComponent,\\r\\n        UiRadioButtonComponent,\\r\\n        UiRichTextEditorComponent,\\r\\n        UiRichTextEditorToolbarComponent,\\r\\n        UiTextAreaComponent,\\r\\n        UiTextInputComponent,\\r\\n        UiToggleComponent,\\r\\n    ],\\r\\n})\\r\\nexport class UiFormModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiFormControlBaseComponent"},{"name":"UiRadioButtonComponent"},{"name":"UiRichTextEditorComponent"},{"name":"UiRichTextEditorToolbarComponent"},{"name":"UiTextAreaComponent"},{"name":"UiTextInputComponent"},{"name":"UiToggleComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiFormControlBaseComponent"},{"name":"UiRadioButtonComponent"},{"name":"UiRichTextEditorComponent"},{"name":"UiRichTextEditorToolbarComponent"},{"name":"UiTextAreaComponent"},{"name":"UiTextInputComponent"},{"name":"UiToggleComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiGlobalSearchModule","id":"module-UiGlobalSearchModule-5e4e7e099fd599ee5c9afaf5cbebdbdce8bc2c3a2d2c1583e7078d57486eb592cdb822d5edb4222b23062f9c50ddab137e660abd00a2a55ed38aceb30249ca86","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/global-search/global-search.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { FormsModule } from \'@angular/forms\';\\r\\nimport { RouterModule, Routes } from \'@angular/router\';\\r\\nimport { ScrollingModule } from \'@angular/cdk/scrolling\';\\r\\n// Translate\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\n// Modules\\r\\nimport { UiPipesModule } from \'@lib/modules/pipes/pipe.module\';\\r\\n// Ng Bootstrap\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Components\\r\\nimport { UiGlobalSearchComponent } from \'@lib/modules/global-search/global-search.component\';\\r\\nimport {\\r\\n    UiGlobalSearchResultsPageComponent\\r\\n} from \'@lib/modules/global-search/components/global-search-results-page/global-search-results-page.component\';\\r\\nimport {\\r\\n    UiGlobalSearchResultsItemComponent\\r\\n} from \'@lib/modules/global-search/components/global-search-results-item/global-search-results-item.component\';\\r\\n\\r\\nconst routes: Routes = [{ path: \'\', component: UiGlobalSearchResultsPageComponent }];\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiGlobalSearchComponent, UiGlobalSearchResultsPageComponent, UiGlobalSearchResultsItemComponent],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        NgbModule,\\r\\n        FormsModule,\\r\\n        TranslateModule,\\r\\n        RouterModule.forChild(routes),\\r\\n        ScrollingModule,\\r\\n        UiPipesModule,\\r\\n    ],\\r\\n    exports: [UiGlobalSearchComponent, UiGlobalSearchResultsPageComponent],\\r\\n})\\r\\nexport class UiGlobalSearchModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiGlobalSearchComponent"},{"name":"UiGlobalSearchResultsItemComponent"},{"name":"UiGlobalSearchResultsPageComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiGlobalSearchComponent"},{"name":"UiGlobalSearchResultsPageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiGridModule","id":"module-UiGridModule-7202fc5be847a2d7d94c7e62258aaec1c990ab7b90a2eebdd249532000c42151f529f9a1c957bc616ea32825626e6afd9c4257a49e10d01a78c956dc03122b7e","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/grid/grid.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n// NGX Translate\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\n// NG Bootstrap\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Ag-Grid\\r\\nimport { AgGridModule } from \'ag-grid-angular\';\\r\\n// Components\\r\\nimport { UiActionButtonsRendererComponent } from \'./components/action-buttons-renderer/action-buttons-renderer.component\';\\r\\nimport { UiComboboxRendererComponent } from \'./components/combobox-renderer/combobox-renderer.component\';\\r\\nimport { UiCustomHeaderComponent } from \'./components/custom-header/custom-header.component\';\\r\\nimport { UiCustomMultiSelectHeaderComponent } from \'./components/custom-multiselect-header/custom-multiselect-header.component\';\\r\\nimport { UiDropdownRendererComponent } from \'./components/dropdown-renderer/dropdown-renderer.component\';\\r\\nimport { UiGridComponent } from \'./components/grid/grid.component\';\\r\\nimport { UiGridHeaderButtonsComponent } from \'./components/grid-header-buttons/grid-header-buttons.component\';\\r\\nimport { UiGridHeaderComponent } from \'./components/grid-header/grid-header.component\';\\r\\nimport { UiPillRendererComponent } from \'./components/pill-renderer/pill-renderer.component\';\\r\\nimport { UiTextCellRendererComponent } from \'./components/text-cell-renderer/text-cell-renderer.component\';\\r\\nimport { UiCustomLoadingCellRendererComponent } from \'./components/custom-loading-cell-renderer/custom-loading-cell-renderer.component\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        UiActionButtonsRendererComponent,\\r\\n        UiComboboxRendererComponent,\\r\\n        UiCustomHeaderComponent,\\r\\n        UiCustomMultiSelectHeaderComponent,\\r\\n        UiDropdownRendererComponent,\\r\\n        UiGridComponent,\\r\\n        UiGridHeaderButtonsComponent,\\r\\n        UiGridHeaderComponent,\\r\\n        UiPillRendererComponent,\\r\\n        UiTextCellRendererComponent,\\r\\n        UiCustomLoadingCellRendererComponent\\r\\n    ],\\r\\n    imports: [CommonModule, TranslateModule, NgbModule, AgGridModule],\\r\\n    exports: [\\r\\n        UiActionButtonsRendererComponent,\\r\\n        UiCustomHeaderComponent,\\r\\n        UiCustomMultiSelectHeaderComponent,\\r\\n        UiGridComponent,\\r\\n        UiGridHeaderButtonsComponent,\\r\\n        UiGridHeaderComponent,\\r\\n        UiPillRendererComponent,\\r\\n        UiTextCellRendererComponent,\\r\\n        UiCustomLoadingCellRendererComponent\\r\\n    ],\\r\\n})\\r\\nexport class UiGridModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiActionButtonsRendererComponent"},{"name":"UiComboboxRendererComponent"},{"name":"UiCustomHeaderComponent"},{"name":"UiCustomLoadingCellRendererComponent"},{"name":"UiCustomMultiSelectHeaderComponent"},{"name":"UiDropdownRendererComponent"},{"name":"UiGridComponent"},{"name":"UiGridHeaderButtonsComponent"},{"name":"UiGridHeaderComponent"},{"name":"UiPillRendererComponent"},{"name":"UiTextCellRendererComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiActionButtonsRendererComponent"},{"name":"UiCustomHeaderComponent"},{"name":"UiCustomLoadingCellRendererComponent"},{"name":"UiCustomMultiSelectHeaderComponent"},{"name":"UiGridComponent"},{"name":"UiGridHeaderButtonsComponent"},{"name":"UiGridHeaderComponent"},{"name":"UiPillRendererComponent"},{"name":"UiTextCellRendererComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiLayout2Module","id":"module-UiLayout2Module-26039dae6f6a6c80163a98bc11f4534c863aae3a3d5082637432d4ce2d2f0593bde82b98eef7b94b048a443fb01030b1a28b289fa774fa390fe6c1ddb78321f9","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/layout2/layout2.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { RouterModule } from \'@angular/router\';\\r\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\r\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\nimport { UiLayout2Component } from \'./components/layout2/layout2.component\';\\r\\nimport { UiPageHeaderComponent } from \'./components/page-header/page-header.component\';\\r\\nimport { UiToastNotificationModule } from \'@lib/services/toast-notification/toast-notification.module\';\\r\\nimport { UiLayoutModule } from \'../layout/layout.module\';\\r\\nimport { UiPageFooterComponent } from \'./components/page-footer/page-footer.component\';\\r\\nimport { UiFormModule } from \'../form/form.module\';\\r\\nimport { UiSubsidiarySelectorComponent } from \'./components/subsidiary-selector/subsidiary-selector.component\';\\r\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\r\\nimport { UiButtonModule } from \'../button/button.module\';\\r\\nimport { UiFeatureFlagModule } from \'../feature-flags/feature-flag.module\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiLayout2Component, UiPageHeaderComponent, UiPageFooterComponent, UiSubsidiarySelectorComponent],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        RouterModule,\\r\\n        TranslateModule,\\r\\n        FormsModule,\\r\\n        ReactiveFormsModule,\\r\\n        FlexLayoutModule,\\r\\n        NgbModule,\\r\\n        UiToastNotificationModule,\\r\\n        UiFeatureFlagModule,\\r\\n        UiLayoutModule,\\r\\n        UiFormModule,\\r\\n        UiFormControlsModule,\\r\\n        UiButtonModule\\r\\n    ],\\r\\n    exports: [TranslateModule, UiLayout2Component],\\r\\n})\\r\\nexport class UiLayout2Module {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiLayout2Component"},{"name":"UiPageFooterComponent"},{"name":"UiPageHeaderComponent"},{"name":"UiSubsidiarySelectorComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiFeatureFlagModule"},{"name":"UiFormControlsModule"},{"name":"UiFormModule"},{"name":"UiLayoutModule"},{"name":"UiToastNotificationModule"}]},{"type":"exports","elements":[{"name":"UiLayout2Component"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiLayoutModule","id":"module-UiLayoutModule-04f26518c84e2ad02cdb0f0c953cc459b2ce5ccd75705aaa38f81da3a8a19060254d006f1bebfd8e0be927a77335998595c95bffbc3ad1fbb0b58e3fff505f79","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/layout/layout.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\r\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\r\\nimport { RouterModule } from \'@angular/router\';\\r\\n// Ngb\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Ngx Translate\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\n// Modules\\r\\nimport { UiPermissionsModule } from \'@lib/modules/permissions/permissions.module\';\\r\\nimport { UiGlobalSearchModule } from \'@lib/modules/global-search/global-search.module\';\\r\\nimport { UiToastNotificationModule } from \'@lib/services/toast-notification/toast-notification.module\';\\r\\nimport { UiPipesModule } from \'../pipes/pipe.module\';\\r\\n// Components\\r\\nimport { UiLayoutComponent } from \'./layout.component\';\\r\\nimport { UiTabNavContainerComponent } from \'./components/tab-nav-container/tab-nav-container.component\';\\r\\nimport { UiTabNavComponent } from \'./components/tab-nav/tab-nav.component\';\\r\\nimport { UiToolNavComponent } from \'./components/tool-nav/tool-nav.component\';\\r\\nimport { UiLanguageSwitcherComponent } from \'./components/language-switcher/language-switcher.component\';\\r\\nimport { UiFormControlsModule } from \'@lib/modules/form-controls/form-controls.module\';\\r\\n//TODO-remove: import { UiModalBaseComponent } from \'../modal/components/modal-base/modal-base.component\';\\r\\nimport { UiSupportModalComponent } from \'./components/support-modal/support-modal.component\';\\r\\nimport { UiSupportFormComponent } from \'./components/support-form/support-form.component\';\\r\\nimport { UiFeedbackFormComponent } from \'./components/feedback-form/feedback-form.component\';\\r\\nimport { UiFeedbackModalComponent } from \'./components/feedback-modal/feedback-modal.component\';\\r\\nimport { UiPageHeaderComponent } from \'./components/page-header/page-header.component\';\\r\\nimport { UiPageFooterComponent } from \'./components/page-footer/page-footer.component\';\\r\\nimport { UiFormModule } from \'../form/form.module\';\\r\\nimport { UiButtonModule } from \'../button/button.module\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        UiLayoutComponent,\\r\\n        UiTabNavContainerComponent,\\r\\n        UiTabNavComponent,\\r\\n        UiToolNavComponent,\\r\\n        UiLanguageSwitcherComponent,\\r\\n        //TODO-remove: UiModalBaseComponent,\\r\\n        UiSupportFormComponent,\\r\\n        UiSupportModalComponent,\\r\\n        UiFeedbackFormComponent,\\r\\n        UiFeedbackModalComponent,\\r\\n        UiPageHeaderComponent,\\r\\n        UiPageFooterComponent,\\r\\n    ],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        RouterModule,\\r\\n        TranslateModule,\\r\\n        FormsModule,\\r\\n        ReactiveFormsModule,\\r\\n        FlexLayoutModule,\\r\\n        NgbModule,\\r\\n        UiPermissionsModule,\\r\\n        UiGlobalSearchModule,\\r\\n        UiToastNotificationModule,\\r\\n        UiPipesModule,\\r\\n        UiFormControlsModule,\\r\\n        UiFormControlsModule,\\r\\n        UiFormModule,\\r\\n        UiButtonModule,\\r\\n    ],\\r\\n    exports: [\\r\\n        TranslateModule,\\r\\n        UiLayoutComponent,\\r\\n        UiTabNavContainerComponent,\\r\\n        UiLanguageSwitcherComponent,\\r\\n        //TODO-remove: UiModalBaseComponent,\\r\\n        UiTabNavComponent,\\r\\n    ],\\r\\n})\\r\\nexport class UiLayoutModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiFeedbackFormComponent"},{"name":"UiFeedbackModalComponent"},{"name":"UiLanguageSwitcherComponent"},{"name":"UiLayoutComponent"},{"name":"UiPageHeaderComponent"},{"name":"UiSupportFormComponent"},{"name":"UiSupportModalComponent"},{"name":"UiTabNavComponent"},{"name":"UiTabNavContainerComponent"},{"name":"UiToolNavComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiFormControlsModule"},{"name":"UiFormControlsModule"},{"name":"UiFormModule"},{"name":"UiGlobalSearchModule"},{"name":"UiPermissionsModule"},{"name":"UiToastNotificationModule"}]},{"type":"exports","elements":[{"name":"UiLanguageSwitcherComponent"},{"name":"UiLayoutComponent"},{"name":"UiTabNavComponent"},{"name":"UiTabNavContainerComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiModalModule","id":"module-UiModalModule-ae7ba40864f82ccec08a939394f3c5e9b3fe3a7f95cfa6ceffedc090148077ccb94d0c52f0f2681627a75f9928c7fccf9442509fd26ff96ac50e06769fd33d90","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/modal/modal.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\n// Components\\r\\nimport { UiCardModule } from \'../card/card.module\';\\r\\nimport { UiModalComponent } from \'./components/modal/modal.component\';\\r\\nimport { UiModalBaseComponent } from \'./components/modal-base/modal-base.component\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [\\r\\n        UiModalComponent,\\r\\n        UiModalBaseComponent\\r\\n    ],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        UiCardModule\\r\\n    ],\\r\\n    exports: [\\r\\n        UiModalComponent,\\r\\n        UiModalBaseComponent\\r\\n    ],\\r\\n})\\r\\nexport class UiModalModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiModalBaseComponent"},{"name":"UiModalComponent"}]},{"type":"imports","elements":[{"name":"UiCardModule"}]},{"type":"exports","elements":[{"name":"UiModalBaseComponent"},{"name":"UiModalComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiModule","id":"module-UiModule-b291ee344ca52bffff407001ce4abf12414f95f814d5e358c7775d93c280fefcd800849129e71292e194bbb1e51addc97f8826f5b6b6e4cc770c9ff14aba9d85","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/ui.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { HttpClient, HttpClientModule } from \'@angular/common/http\';\\r\\n// Ngx\\r\\nimport { TranslateModule, TranslateLoader } from \'@ngx-translate/core\';\\r\\nimport { TranslateHttpLoader } from \'@ngx-translate/http-loader\';\\r\\n\\r\\n// AoT requires an exported function for factories\\r\\nexport const uiHttpLoaderFactory = (httpClient: HttpClient) => {\\r\\n    // return new TranslateHttpLoader(httpClient);\\r\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\r\\n};\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [],\\r\\n    imports: [\\r\\n        CommonModule,\\r\\n        TranslateModule.forChild({\\r\\n            loader: {\\r\\n                provide: TranslateLoader,\\r\\n                useFactory: uiHttpLoaderFactory,\\r\\n                deps: [HttpClient],\\r\\n            },\\r\\n            isolate: true,\\r\\n            extend: false,\\r\\n        }),\\r\\n        HttpClientModule,\\r\\n    ],\\r\\n    exports: [],\\r\\n})\\r\\nexport class UiModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiPermissionsModule","id":"module-UiPermissionsModule-0d26490c7ac4db5d20f6ac6841b38efc01635aa19193ad7d0330b802136fe48b4b11649b2000f33e9ad747b8c15d5933901cb995ef33f5b5bc6d60f92a634e3d","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/permissions/permissions.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { UiHasPermissionDirective } from \'./directives/has-permission.directive\';\\r\\n\\r\\n@NgModule({\\r\\n    declarations: [UiHasPermissionDirective],\\r\\n    imports: [CommonModule],\\r\\n    exports: [UiHasPermissionDirective],\\r\\n})\\r\\nexport class UiPermissionsModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiHasPermissionDirective"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiHasPermissionDirective"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiPipesModule","id":"module-UiPipesModule-b30798e4c6069b4a09564d7fb9b56e35b7694403c625b254a7f7856adcbdbf83ee767ea0c3cbbb15549fb16d017dc7fe55afcb0c7bf90a7c6cd01366f2b7f86c","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/pipes/pipe.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { NgModule } from \'@angular/core\';\\r\\n// Array pipes\\r\\nimport { UiJoinPipe, UiPluckPipe } from \'./array\';\\r\\nimport { UiNoSanitizePipe } from \'./nosanitizerpipe\';\\r\\n\\r\\nconst PIPES = [UiJoinPipe, UiPluckPipe, UiNoSanitizePipe];\\r\\n\\r\\n@NgModule({\\r\\n    declarations: PIPES,\\r\\n    exports: PIPES,\\r\\n})\\r\\nexport class UiPipesModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiJoinPipe"},{"name":"UiNoSanitizePipe"},{"name":"UiPluckPipe"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiJoinPipe"},{"name":"UiNoSanitizePipe"},{"name":"UiPluckPipe"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiToastNotificationModule","id":"module-UiToastNotificationModule-0f639e13781e310d7806b3f19e56531e8863731d814e28f0b3cdc601bb716dc3516bf51a10cec31d29787327c1c21015c9ed10b0ab2b860418731e4a570635dc","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/services/toast-notification/toast-notification.module.ts","methods":[],"sourceCode":"// Angular\\r\\nimport { CommonModule } from \'@angular/common\';\\r\\nimport { NgModule } from \'@angular/core\';\\r\\n// Ngb\\r\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\r\\n// Components\\r\\nimport { UiToastsContainerComponent } from \'./toast-container/toasts-container.component\';\\r\\nimport { TranslateModule } from \'@ngx-translate/core\';\\r\\nimport { UiAlertModule } from \'../../modules/alert/alert.module\';\\r\\n\\r\\n@NgModule({\\r\\n    imports: [CommonModule, NgbModule, UiAlertModule],\\r\\n    declarations: [UiToastsContainerComponent],\\r\\n    exports: [UiToastsContainerComponent],\\r\\n})\\r\\nexport class UiToastNotificationModule {}\\r\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiToastsContainerComponent"}]},{"type":"imports","elements":[{"name":"UiAlertModule"}]},{"type":"exports","elements":[{"name":"UiToastsContainerComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"},{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"},{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"ConsentService","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/consent/consent-service.token.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<IUiConsentService>(\'IUIConsentService\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"pendo","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"pendoFunc","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/pipes/pipe.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[UiJoinPipe, UiPluckPipe, UiNoSanitizePipe]"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"},{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/ui.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\r\\n    // return new TranslateHttpLoader(httpClient);\\r\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\r\\n}"},{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/authentification.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\r\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\r\\n}"},{"name":"UiSortingIconsConst","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n    sortAscending: \'<i class=\\"bi bi-caret-up-fill\\"/>\',\\r\\n    sortDescending: \'<i class=\\"bi bi-caret-down-fill\\"/>\',\\r\\n    sortUnSort: \'<div class=\\"bi-caret-up-down-fill\\"><i class=\\"bi bi-caret-up-fill\\"/><br><i class=\\"bi bi-caret-down-fill\\"/></div>\',\\r\\n}"}],"functions":[],"typealiases":[],"enumerations":[{"name":"UiAcceptFileTypes","childs":[{"name":"csv","deprecated":false,"deprecationMessage":"","value":"text/csv"},{"name":"doc","deprecated":false,"deprecationMessage":"","value":"application/msword"},{"name":"docx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.wordprocessingml.document"},{"name":"jpeg","deprecated":false,"deprecationMessage":"","value":"image/jpeg"},{"name":"jpg","deprecated":false,"deprecationMessage":"","value":"image/jpeg"},{"name":"json","deprecated":false,"deprecationMessage":"","value":"application/json"},{"name":"pdf","deprecated":false,"deprecationMessage":"","value":"application/pdf"},{"name":"png","deprecated":false,"deprecationMessage":"","value":"image/png"},{"name":"rtf","deprecated":false,"deprecationMessage":"","value":"application/rtf"},{"name":"txt","deprecated":false,"deprecationMessage":"","value":"text/plain"},{"name":"applicationXml","deprecated":false,"deprecationMessage":"","value":"application/xml"},{"name":"textXml","deprecated":false,"deprecationMessage":"","value":"text/xml"},{"name":"xls","deprecated":false,"deprecationMessage":"","value":"application/vnd.ms-excel"},{"name":"xlsx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},{"name":"zip","deprecated":false,"deprecationMessage":"","value":"application/zip"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/file-upload/enums/accept-file-types.ts"},{"name":"UiAcpAuthUserEnum","childs":[{"name":"home","deprecated":false,"deprecationMessage":"","value":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/auth-route.enum.ts"},{"name":"UiAlertLayoutEnum","childs":[{"name":"STACKED","deprecated":false,"deprecationMessage":"","value":"actionsStacked"},{"name":"INLINE","deprecated":false,"deprecationMessage":"","value":"actionsInline"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts"},{"name":"UiAlertSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"small"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"medium"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-size.enum.ts"},{"name":"UiAlertTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts"},{"name":"UiBadgeTypeEnum","childs":[{"name":"status","deprecated":false,"deprecationMessage":"","value":"status"},{"name":"package","deprecated":false,"deprecationMessage":"","value":"package"},{"name":"notification","deprecated":false,"deprecationMessage":"","value":"notification"},{"name":"identifier","deprecated":false,"deprecationMessage":"","value":"identifier"},{"name":"pill","deprecated":false,"deprecationMessage":"","value":"pill"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiButtonIconLocationEnum","childs":[{"name":"suffix","deprecated":false,"deprecationMessage":"","value":"suffix"},{"name":"prefix","deprecated":false,"deprecationMessage":"","value":"prefix"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-icon-location.enum.ts"},{"name":"UiButtonSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"btn-sm"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"btn-md"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts"},{"name":"UiButtonTypeEnum","childs":[{"name":"PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-primary"},{"name":"OUTLINE_PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-outline-primary"},{"name":"LINK","deprecated":false,"deprecationMessage":"","value":"btn-link"},{"name":"LINK_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-link-danger"},{"name":"DANGER","deprecated":false,"deprecationMessage":"","value":"btn-danger"},{"name":"OUTLINE_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-outline-danger"},{"name":"SEPERATOR","deprecated":false,"deprecationMessage":"","value":"btn-seperator"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts"},{"name":"UiCardTitleSizeEnum","childs":[{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/card/enums/card-title-size-enum.ts"},{"name":"UiColorEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/color.enum.ts"},{"name":"UiEnvironmentNameEnum","childs":[{"name":"localdev","deprecated":false,"deprecationMessage":"","value":"localdev"},{"name":"production","deprecated":false,"deprecationMessage":"","value":"production"},{"name":"eucloudprod","deprecated":false,"deprecationMessage":"","value":"eucloud-prod"},{"name":"qa","deprecated":false,"deprecationMessage":"","value":"qa"},{"name":"qa2","deprecated":false,"deprecationMessage":"","value":"qa2"},{"name":"qa3","deprecated":false,"deprecationMessage":"","value":"qa3"},{"name":"staging","deprecated":false,"deprecationMessage":"","value":"staging"},{"name":"uat","deprecated":false,"deprecationMessage":"","value":"uat"},{"name":"dev112","deprecated":false,"deprecationMessage":"","value":"dev112"},{"name":"devopsprod","deprecated":false,"deprecationMessage":"","value":"devops-prod"},{"name":"devopssandbox","deprecated":false,"deprecationMessage":"","value":"devops-sandbox"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/environment-name.enum.ts"},{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts"},{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts"},{"name":"UiIconTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"bi bi-check-circle-fill bi-lg text-success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-triangle-fill bi-lg text-danger-600"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-circle-fill bi-lg text-warning-600"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"bi bi-dash-circle-fill bi-lg text-gray-600"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/icon-type.enum.ts"},{"name":"UiIdentifierClassEnum","childs":[{"name":"Neutral","deprecated":false,"deprecationMessage":"","value":"identifier-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"identifier-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"identifier-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"identifier-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"identifier-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"identifier-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"identifier-category-6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiIdentifierEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiMenuNamesEnum","childs":[{"name":"devHub","deprecated":false,"deprecationMessage":"","value":"devHub"},{"name":"dev","deprecated":false,"deprecationMessage":"","value":"dev"},{"name":"sin","deprecated":false,"deprecationMessage":"","value":"sin"},{"name":"contactsManager","deprecated":false,"deprecationMessage":"","value":"contactsManager"},{"name":"declarationSearch","deprecated":false,"deprecationMessage":"","value":"declarationSearch"},{"name":"segmentation","deprecated":false,"deprecationMessage":"","value":"segmentation"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/menu/menu.service.ts"},{"name":"UiModalDialogSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"xl","deprecated":false,"deprecationMessage":"","value":"xl"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-dialog-size.enum.ts"},{"name":"UiModalTypeEnum","childs":[{"name":"Modal","deprecated":false,"deprecationMessage":"","value":"modal"},{"name":"Drawer","deprecated":false,"deprecationMessage":"","value":"offcanvas"},{"name":"Offcanvas","deprecated":false,"deprecationMessage":"","value":"offcanvas"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-type.enum.ts"},{"name":"UiOneTimePinComponentStateEnum","childs":[{"name":"acp","deprecated":false,"deprecationMessage":""},{"name":"generatePin","deprecated":false,"deprecationMessage":""},{"name":"enterPin","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/authentification/enums/OneTimePinComponentStateEnum.ts"},{"name":"UiPackageClassEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"dot-gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"dot-silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"dot-platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPackageEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"userManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"exceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"segmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"editCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"viewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"viewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"editContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"accessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"accessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"accessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"accessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"fullViewCorrectiveActionRecords"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"viewAssignedCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"addCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"editCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"deleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"respondToCorrectiveActions"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionsRulesSet"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionTemplates"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"createCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"viewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"viewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"viewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"accessEvidenceReview"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"modifyReview"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"manageEvidenceType"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"manageReviewCriteria"},{"name":"userAuthManager","deprecated":false,"deprecationMessage":"","value":"userAuthManager"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"viewEvidenceReview"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"manageEvidenceTypeMapping"},{"name":"profileManager","deprecated":false,"deprecationMessage":"","value":"profileManager"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessPartLevelCustomerRequests"},{"name":"supplierConsent","deprecated":false,"deprecationMessage":"","value":"supplierConsent"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/permissions.enum.ts"},{"name":"UiPillClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillColorEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts"},{"name":"UiPillEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-size.enum.ts"},{"name":"UiRegulationTierEnum","childs":[{"name":"program","deprecated":false,"deprecationMessage":"","value":1},{"name":"group","deprecated":false,"deprecationMessage":"","value":2},{"name":"topic","deprecated":false,"deprecationMessage":"","value":3},{"name":"all","deprecated":false,"deprecationMessage":"","value":4}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/regulation-tier.enum.ts"},{"name":"UiRolesEnum","childs":[{"name":"sysAdmin","deprecated":false,"deprecationMessage":"","value":1},{"name":"assentee","deprecated":false,"deprecationMessage":"","value":6},{"name":"correctiveActionAdmin","deprecated":false,"deprecationMessage":"","value":10},{"name":"correctiveActionsCreatorEditor","deprecated":false,"deprecationMessage":"","value":11},{"name":"correctiveActionsResponder","deprecated":false,"deprecationMessage":"","value":12},{"name":"correctiveActionsViewer","deprecated":false,"deprecationMessage":"","value":13}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/roles.enum.ts"},{"name":"UiRowModelTypeEnum","childs":[{"name":"clientSide","deprecated":false,"deprecationMessage":"","value":"clientSide"},{"name":"serverSide","deprecated":false,"deprecationMessage":"","value":"serverSide"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-model-type.enum.ts"},{"name":"UiRowSelectTypeEnum","childs":[{"name":"single","deprecated":false,"deprecationMessage":"","value":"single"},{"name":"multiple","deprecated":false,"deprecationMessage":"","value":"multiple"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-selection-type.enum.ts"},{"name":"UiStatusClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"dot-neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"dot-success"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"dot-caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"dot-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"dot-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"dot-info"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"dot-tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dot-dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiStatusEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiTemplateNamesEnum","childs":[{"name":"loading","deprecated":false,"deprecationMessage":"","value":"loading"},{"name":"noResults","deprecated":false,"deprecationMessage":"","value":"noResults"},{"name":"results","deprecated":false,"deprecationMessage":"","value":"results"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/global-search/enums/template-names.enum.ts"},{"name":"UiToastTypesEnum","childs":[{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/toast-notification/enums/toast-types.enum.ts"},{"name":"UiTokenKeyPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessUserManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessExceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"ACP.AccessSegmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.EditCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.ViewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.ViewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.EditContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"ACP.AccessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"ACP.AccessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"ACP.AccessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.FullViewCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.RespondToCorrectiveActions"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionTemplates"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewAssignedCorrectiveActionRecords"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"ACP.CreateCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Access"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Review.Modify"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"ACP.ER.EvidenceType.Manage"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"ACP.ER.ReviewCriteria.Manage"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionsRulesSet"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.View"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"ER.EvidenceTypeMap.Manage"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessPartLevelCustomerRequests"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/token-key-permissions.enum.ts"}],"groupedVariables":{"libs/ui/src/lib/services/authentication/authentication.service.ts":[{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"}],"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts":[{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"}],"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts":[{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"}],"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts":[{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"}],"libs/ui/src/lib/services/consent/consent-service.token.ts":[{"name":"ConsentService","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/consent/consent-service.token.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<IUiConsentService>(\'IUIConsentService\')"}],"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts":[{"name":"pendo","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"pendoFunc","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"}],"libs/ui/src/lib/modules/pipes/pipe.module.ts":[{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/pipes/pipe.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[UiJoinPipe, UiPluckPipe, UiNoSanitizePipe]"}],"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts":[{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"}],"libs/ui/src/lib/ui.module.ts":[{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/ui.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\r\\n    // return new TranslateHttpLoader(httpClient);\\r\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\r\\n}"}],"libs/ui/src/lib/modules/authentification/authentification.module.ts":[{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/authentification.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\r\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\r\\n}"}],"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts":[{"name":"UiSortingIconsConst","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n    sortAscending: \'<i class=\\"bi bi-caret-up-fill\\"/>\',\\r\\n    sortDescending: \'<i class=\\"bi bi-caret-down-fill\\"/>\',\\r\\n    sortUnSort: \'<div class=\\"bi-caret-up-down-fill\\"><i class=\\"bi bi-caret-up-fill\\"/><br><i class=\\"bi bi-caret-down-fill\\"/></div>\',\\r\\n}"}]},"groupedFunctions":{},"groupedEnumerations":{"libs/ui/src/lib/modules/file-upload/enums/accept-file-types.ts":[{"name":"UiAcceptFileTypes","childs":[{"name":"csv","deprecated":false,"deprecationMessage":"","value":"text/csv"},{"name":"doc","deprecated":false,"deprecationMessage":"","value":"application/msword"},{"name":"docx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.wordprocessingml.document"},{"name":"jpeg","deprecated":false,"deprecationMessage":"","value":"image/jpeg"},{"name":"jpg","deprecated":false,"deprecationMessage":"","value":"image/jpeg"},{"name":"json","deprecated":false,"deprecationMessage":"","value":"application/json"},{"name":"pdf","deprecated":false,"deprecationMessage":"","value":"application/pdf"},{"name":"png","deprecated":false,"deprecationMessage":"","value":"image/png"},{"name":"rtf","deprecated":false,"deprecationMessage":"","value":"application/rtf"},{"name":"txt","deprecated":false,"deprecationMessage":"","value":"text/plain"},{"name":"applicationXml","deprecated":false,"deprecationMessage":"","value":"application/xml"},{"name":"textXml","deprecated":false,"deprecationMessage":"","value":"text/xml"},{"name":"xls","deprecated":false,"deprecationMessage":"","value":"application/vnd.ms-excel"},{"name":"xlsx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},{"name":"zip","deprecated":false,"deprecationMessage":"","value":"application/zip"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/file-upload/enums/accept-file-types.ts"}],"libs/ui/src/lib/modules/user-auth-manager/enums/auth-route.enum.ts":[{"name":"UiAcpAuthUserEnum","childs":[{"name":"home","deprecated":false,"deprecationMessage":"","value":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/auth-route.enum.ts"}],"libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts":[{"name":"UiAlertLayoutEnum","childs":[{"name":"STACKED","deprecated":false,"deprecationMessage":"","value":"actionsStacked"},{"name":"INLINE","deprecated":false,"deprecationMessage":"","value":"actionsInline"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts"}],"libs/ui/src/lib/modules/alert/enums/alert-size.enum.ts":[{"name":"UiAlertSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"small"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"medium"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-size.enum.ts"}],"libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts":[{"name":"UiAlertTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts"}],"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts":[{"name":"UiBadgeTypeEnum","childs":[{"name":"status","deprecated":false,"deprecationMessage":"","value":"status"},{"name":"package","deprecated":false,"deprecationMessage":"","value":"package"},{"name":"notification","deprecated":false,"deprecationMessage":"","value":"notification"},{"name":"identifier","deprecated":false,"deprecationMessage":"","value":"identifier"},{"name":"pill","deprecated":false,"deprecationMessage":"","value":"pill"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiIdentifierClassEnum","childs":[{"name":"Neutral","deprecated":false,"deprecationMessage":"","value":"identifier-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"identifier-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"identifier-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"identifier-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"identifier-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"identifier-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"identifier-category-6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiIdentifierEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPackageClassEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"dot-gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"dot-silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"dot-platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPackageEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiStatusClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"dot-neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"dot-success"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"dot-caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"dot-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"dot-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"dot-info"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"dot-tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dot-dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiStatusEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"}],"libs/ui/src/lib/modules/button/enums/action-button-icon-location.enum.ts":[{"name":"UiButtonIconLocationEnum","childs":[{"name":"suffix","deprecated":false,"deprecationMessage":"","value":"suffix"},{"name":"prefix","deprecated":false,"deprecationMessage":"","value":"prefix"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-icon-location.enum.ts"}],"libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts":[{"name":"UiButtonSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"btn-sm"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"btn-md"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts"}],"libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts":[{"name":"UiButtonTypeEnum","childs":[{"name":"PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-primary"},{"name":"OUTLINE_PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-outline-primary"},{"name":"LINK","deprecated":false,"deprecationMessage":"","value":"btn-link"},{"name":"LINK_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-link-danger"},{"name":"DANGER","deprecated":false,"deprecationMessage":"","value":"btn-danger"},{"name":"OUTLINE_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-outline-danger"},{"name":"SEPERATOR","deprecated":false,"deprecationMessage":"","value":"btn-seperator"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts"}],"libs/ui/src/lib/modules/card/enums/card-title-size-enum.ts":[{"name":"UiCardTitleSizeEnum","childs":[{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/card/enums/card-title-size-enum.ts"}],"libs/ui/src/lib/enums/color.enum.ts":[{"name":"UiColorEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/color.enum.ts"}],"libs/ui/src/lib/enums/environment-name.enum.ts":[{"name":"UiEnvironmentNameEnum","childs":[{"name":"localdev","deprecated":false,"deprecationMessage":"","value":"localdev"},{"name":"production","deprecated":false,"deprecationMessage":"","value":"production"},{"name":"eucloudprod","deprecated":false,"deprecationMessage":"","value":"eucloud-prod"},{"name":"qa","deprecated":false,"deprecationMessage":"","value":"qa"},{"name":"qa2","deprecated":false,"deprecationMessage":"","value":"qa2"},{"name":"qa3","deprecated":false,"deprecationMessage":"","value":"qa3"},{"name":"staging","deprecated":false,"deprecationMessage":"","value":"staging"},{"name":"uat","deprecated":false,"deprecationMessage":"","value":"uat"},{"name":"dev112","deprecated":false,"deprecationMessage":"","value":"dev112"},{"name":"devopsprod","deprecated":false,"deprecationMessage":"","value":"devops-prod"},{"name":"devopssandbox","deprecated":false,"deprecationMessage":"","value":"devops-sandbox"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/environment-name.enum.ts"}],"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts":[{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts"}],"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts":[{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts"}],"libs/ui/src/lib/enums/icon-type.enum.ts":[{"name":"UiIconTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"bi bi-check-circle-fill bi-lg text-success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-triangle-fill bi-lg text-danger-600"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-circle-fill bi-lg text-warning-600"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"bi bi-dash-circle-fill bi-lg text-gray-600"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/icon-type.enum.ts"}],"libs/ui/src/lib/services/menu/menu.service.ts":[{"name":"UiMenuNamesEnum","childs":[{"name":"devHub","deprecated":false,"deprecationMessage":"","value":"devHub"},{"name":"dev","deprecated":false,"deprecationMessage":"","value":"dev"},{"name":"sin","deprecated":false,"deprecationMessage":"","value":"sin"},{"name":"contactsManager","deprecated":false,"deprecationMessage":"","value":"contactsManager"},{"name":"declarationSearch","deprecated":false,"deprecationMessage":"","value":"declarationSearch"},{"name":"segmentation","deprecated":false,"deprecationMessage":"","value":"segmentation"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/menu/menu.service.ts"}],"libs/ui/src/lib/enums/modal-dialog-size.enum.ts":[{"name":"UiModalDialogSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"xl","deprecated":false,"deprecationMessage":"","value":"xl"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-dialog-size.enum.ts"}],"libs/ui/src/lib/enums/modal-type.enum.ts":[{"name":"UiModalTypeEnum","childs":[{"name":"Modal","deprecated":false,"deprecationMessage":"","value":"modal"},{"name":"Drawer","deprecated":false,"deprecationMessage":"","value":"offcanvas"},{"name":"Offcanvas","deprecated":false,"deprecationMessage":"","value":"offcanvas"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-type.enum.ts"}],"libs/ui/src/lib/modules/authentification/enums/OneTimePinComponentStateEnum.ts":[{"name":"UiOneTimePinComponentStateEnum","childs":[{"name":"acp","deprecated":false,"deprecationMessage":""},{"name":"generatePin","deprecated":false,"deprecationMessage":""},{"name":"enterPin","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/authentification/enums/OneTimePinComponentStateEnum.ts"}],"libs/ui/src/lib/services/user/enums/permissions.enum.ts":[{"name":"UiPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"userManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"exceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"segmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"editCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"viewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"viewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"editContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"accessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"accessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"accessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"accessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"fullViewCorrectiveActionRecords"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"viewAssignedCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"addCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"editCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"deleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"respondToCorrectiveActions"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionsRulesSet"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionTemplates"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"createCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"viewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"viewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"viewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"accessEvidenceReview"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"modifyReview"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"manageEvidenceType"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"manageReviewCriteria"},{"name":"userAuthManager","deprecated":false,"deprecationMessage":"","value":"userAuthManager"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"viewEvidenceReview"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"manageEvidenceTypeMapping"},{"name":"profileManager","deprecated":false,"deprecationMessage":"","value":"profileManager"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessPartLevelCustomerRequests"},{"name":"supplierConsent","deprecated":false,"deprecationMessage":"","value":"supplierConsent"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/permissions.enum.ts"}],"libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts":[{"name":"UiPillColorEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts"}],"libs/ui/src/lib/modules/form-controls/pills/enums/pill-size.enum.ts":[{"name":"UiPillSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-size.enum.ts"}],"libs/ui/src/lib/modules/user-auth-manager/enums/regulation-tier.enum.ts":[{"name":"UiRegulationTierEnum","childs":[{"name":"program","deprecated":false,"deprecationMessage":"","value":1},{"name":"group","deprecated":false,"deprecationMessage":"","value":2},{"name":"topic","deprecated":false,"deprecationMessage":"","value":3},{"name":"all","deprecated":false,"deprecationMessage":"","value":4}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/regulation-tier.enum.ts"}],"libs/ui/src/lib/services/user/enums/roles.enum.ts":[{"name":"UiRolesEnum","childs":[{"name":"sysAdmin","deprecated":false,"deprecationMessage":"","value":1},{"name":"assentee","deprecated":false,"deprecationMessage":"","value":6},{"name":"correctiveActionAdmin","deprecated":false,"deprecationMessage":"","value":10},{"name":"correctiveActionsCreatorEditor","deprecated":false,"deprecationMessage":"","value":11},{"name":"correctiveActionsResponder","deprecated":false,"deprecationMessage":"","value":12},{"name":"correctiveActionsViewer","deprecated":false,"deprecationMessage":"","value":13}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/roles.enum.ts"}],"libs/ui/src/lib/modules/grid/components/grid/enums/row-model-type.enum.ts":[{"name":"UiRowModelTypeEnum","childs":[{"name":"clientSide","deprecated":false,"deprecationMessage":"","value":"clientSide"},{"name":"serverSide","deprecated":false,"deprecationMessage":"","value":"serverSide"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-model-type.enum.ts"}],"libs/ui/src/lib/modules/grid/components/grid/enums/row-selection-type.enum.ts":[{"name":"UiRowSelectTypeEnum","childs":[{"name":"single","deprecated":false,"deprecationMessage":"","value":"single"},{"name":"multiple","deprecated":false,"deprecationMessage":"","value":"multiple"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-selection-type.enum.ts"}],"libs/ui/src/lib/modules/global-search/enums/template-names.enum.ts":[{"name":"UiTemplateNamesEnum","childs":[{"name":"loading","deprecated":false,"deprecationMessage":"","value":"loading"},{"name":"noResults","deprecated":false,"deprecationMessage":"","value":"noResults"},{"name":"results","deprecated":false,"deprecationMessage":"","value":"results"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/global-search/enums/template-names.enum.ts"}],"libs/ui/src/lib/services/toast-notification/enums/toast-types.enum.ts":[{"name":"UiToastTypesEnum","childs":[{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/toast-notification/enums/toast-types.enum.ts"}],"libs/ui/src/lib/services/user/enums/token-key-permissions.enum.ts":[{"name":"UiTokenKeyPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessUserManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessExceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"ACP.AccessSegmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.EditCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.ViewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.ViewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.EditContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"ACP.AccessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"ACP.AccessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"ACP.AccessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.FullViewCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.RespondToCorrectiveActions"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionTemplates"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewAssignedCorrectiveActionRecords"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"ACP.CreateCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Access"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Review.Modify"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"ACP.ER.EvidenceType.Manage"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"ACP.ER.ReviewCriteria.Manage"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionsRulesSet"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.View"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"ER.EvidenceTypeMap.Manage"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessPartLevelCustomerRequests"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/token-key-permissions.enum.ts"}]},"groupedTypeAliases":{}},"routes":[],"coverage":{"count":6,"status":"low","files":[{"filePath":"libs/ui/src/lib/classes/form-validators.class.ts","type":"class","linktype":"classe","name":"UiFormValidators","coveragePercent":100,"coverageCount":"4/4","status":"very-good"},{"filePath":"libs/ui/src/lib/classes/utils.class.ts","type":"class","linktype":"classe","name":"UiUtils","coveragePercent":58,"coverageCount":"7/12","status":"good"},{"filePath":"libs/ui/src/lib/extensions/observable.extensions.ts","type":"interface","linktype":"interface","name":"Observable","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/interfaces/IUiConsentResponse.ts","type":"interface","linktype":"interface","name":"IUiConsentResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/interfaces/app-config.interface.ts","type":"interface","linktype":"interface","name":"IUiAspAppConfig","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/interfaces/consent-service.interface.ts","type":"interface","linktype":"interface","name":"IUiConsentService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/alert/alert.component.ts","type":"component","linktype":"component","name":"UiAlertComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","type":"interface","linktype":"interface","name":"IUiAudienceConfig","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","type":"interface","linktype":"interface","name":"IUiAuth0Config","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/components/callback.component.ts","type":"component","linktype":"component","name":"UiAuth0CallbackComponent","coveragePercent":12,"coverageCount":"1/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/interceptors/auth.interceptor.ts","type":"interceptor","linktype":"interceptor","name":"UiAuthInterceptor","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","type":"injectable","linktype":"injectable","name":"UiAuthService","coveragePercent":61,"coverageCount":"22/36","status":"good"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","type":"interface","linktype":"interface","name":"IUiAudience","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","type":"interface","linktype":"interface","name":"IUiAuthSubsidiary","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/user.service.ts","type":"injectable","linktype":"injectable","name":"UiAuth0UserService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/authentification.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"uiHttpLoaderFactory","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/components/login/one-time-pin.component.ts","type":"component","linktype":"component","name":"UiOneTimePinComponent","coveragePercent":0,"coverageCount":"0/63","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/components/modals/are-you-sure-modal.component.ts","type":"component","linktype":"component","name":"UiAreYouSureModalComponent","coveragePercent":57,"coverageCount":"8/14","status":"good"},{"filePath":"libs/ui/src/lib/modules/authentification/components/modals/privacy-agreement-modal.component.ts","type":"component","linktype":"component","name":"UiPrivacyAgreementModalComponent","coveragePercent":57,"coverageCount":"8/14","status":"good"},{"filePath":"libs/ui/src/lib/modules/authentification/guards/environment.guard.ts","type":"guard","linktype":"guard","name":"UiAcpEnvironmentGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/pages/ascentee-login/ascentee-login.component.ts","type":"component","linktype":"component","name":"UiAssenteeLoginComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-generation/one-time-pin-generation.component.ts","type":"component","linktype":"component","name":"UiOneTimePinGenerationComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-input/one-time-pin-input.component.ts","type":"component","linktype":"component","name":"UiOneTimePinInputComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"injectable","linktype":"injectable","name":"UiPasswordlessLoginService","coveragePercent":4,"coverageCount":"1/23","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"interface","linktype":"interface","name":"IUiOtpConfirmationResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"interface","linktype":"interface","name":"IUiPasswordLessSignInResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Assent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.ts","type":"component","linktype":"component","name":"UiActionButtonsNewComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/button/components/button/button.component.ts","type":"component","linktype":"component","name":"UiButtonComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"libs/ui/src/lib/modules/button/interfaces/action-button.interface.ts","type":"interface","linktype":"interface","name":"IUiActionButton","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/card/components/card/card.component.ts","type":"component","linktype":"component","name":"UiCardComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"libs/ui/src/lib/modules/card/interfaces/card.interface.ts","type":"interface","linktype":"interface","name":"IUiActionButton","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/consent/pages/user-consent-page/user-consent-page.component.ts","type":"component","linktype":"component","name":"UiConsentPageComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/dashboard/dashboard.component.ts","type":"component","linktype":"component","name":"UiDashboardComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/error/error.component.ts","type":"component","linktype":"component","name":"UiErrorComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-off.directive.ts","type":"directive","linktype":"directive","name":"UiIsFlagOffDirective","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-on.directive.ts","type":"directive","linktype":"directive","name":"UiIsFlagOnDirective","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","type":"injectable","linktype":"injectable","name":"UiFeatureFlagService","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","type":"interface","linktype":"interface","name":"IUiFeatureFlagConfig","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","type":"interface","linktype":"interface","name":"IUiLocalFlagsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/components/file-upload/file-upload.component.ts","type":"component","linktype":"component","name":"UiFileUploadComponent","coveragePercent":0,"coverageCount":"0/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/components/models/document.model.ts","type":"class","linktype":"classe","name":"UiDocumentModel","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/components/models/file-item.model.ts","type":"class","linktype":"classe","name":"UiFileItemModel","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/directives/drag-drop.directive.ts","type":"directive","linktype":"directive","name":"UiDragDropDirective","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","type":"injectable","linktype":"injectable","name":"UiFileScanService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","type":"interface","linktype":"interface","name":"IUiFileScanResult","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/grid-filter/grid-filter.component.ts","type":"component","linktype":"component","name":"UiGridFilterComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","type":"injectable","linktype":"injectable","name":"UiTestService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","type":"interface","linktype":"interface","name":"IUiOldGridPayload","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","type":"interface","linktype":"interface","name":"IUiClientSideFilter","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","type":"interface","linktype":"interface","name":"IUiFilterModel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","type":"interface","linktype":"interface","name":"IUiServerSideFilter","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","type":"interface","linktype":"interface","name":"IUiQuickFilter","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","type":"interface","linktype":"interface","name":"IUiQuickFilterOption","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.ts","type":"component","linktype":"component","name":"UiQuickFilterComponent","coveragePercent":0,"coverageCount":"0/32","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.ts","type":"component","linktype":"component","name":"UiActionButtonsComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"UiCheckboxComponent","coveragePercent":8,"coverageCount":"4/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.ts","type":"component","linktype":"component","name":"UiDatePickerPlusComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/datepicker/datepicker.component.ts","type":"component","linktype":"component","name":"UiDatepickerComponent","coveragePercent":46,"coverageCount":"18/39","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.ts","type":"component","linktype":"component","name":"UiDropdownComponent","coveragePercent":37,"coverageCount":"16/43","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/interfaces/dropdown.interface.ts","type":"interface","linktype":"interface","name":"IUiDropdownOption","coveragePercent":33,"coverageCount":"2/6","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","type":"component","linktype":"component","name":"UiDropdownPlusComponent","coveragePercent":1,"coverageCount":"1/66","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","type":"interface","linktype":"interface","name":"IUiDropdownPlusOption","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown/dropdown.component.ts","type":"component","linktype":"component","name":"UiDropdownOldFormControlsComponent","coveragePercent":7,"coverageCount":"4/52","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","type":"component","linktype":"component","name":"UiFormBaseComponent","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","type":"class","linktype":"classe","name":"UiFormControlConfigObsolete","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts","type":"component","linktype":"component","name":"UiFormControlBaseComponent","coveragePercent":10,"coverageCount":"4/39","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pills/components/multi-pill/multi-pill.component.ts","type":"component","linktype":"component","name":"UiMultiPillComponent","coveragePercent":8,"coverageCount":"2/25","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","type":"component","linktype":"component","name":"UiPillComponent","coveragePercent":4,"coverageCount":"1/21","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","type":"interface","linktype":"interface","name":"IUiPillComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pipes/month-name.pipe.ts","type":"pipe","linktype":"pipe","name":"UiMonthNamePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pipes/truncate.pipe.ts","type":"pipe","linktype":"pipe","name":"UiTruncatePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","type":"component","linktype":"component","name":"UiProgressIndicatorComponent","coveragePercent":50,"coverageCount":"4/8","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","type":"interface","linktype":"interface","name":"IUiStep","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/buttonObject.class.ts","type":"class","linktype":"classe","name":"UiButtonObject","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"class","linktype":"classe","name":"UiPasteClipboard","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Clipboard","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Delta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Quill","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorToolbarComponent","coveragePercent":0,"coverageCount":"0/54","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorComponent","coveragePercent":8,"coverageCount":"4/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Quill","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-item-default.interface.ts","type":"interface","linktype":"interface","name":"IUiTagsInputItemDefault","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-object.interface.ts","type":"interface","linktype":"interface","name":"IUiTagsInputObject","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.ts","type":"component","linktype":"component","name":"UiTagsInputComponent","coveragePercent":4,"coverageCount":"2/47","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/text-area/text-area.component.ts","type":"component","linktype":"component","name":"UiTextAreaComponent","coveragePercent":9,"coverageCount":"4/43","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/text-input/text-input.component.ts","type":"component","linktype":"component","name":"UiTextInputComponent","coveragePercent":9,"coverageCount":"4/42","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"UiCheckboxComponent","coveragePercent":8,"coverageCount":"4/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","type":"component","linktype":"component","name":"UiFormBaseComponent","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","type":"class","linktype":"classe","name":"UiFormControlConfig","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/form-control-base/form-control-base.component.ts","type":"component","linktype":"component","name":"UiFormControlBaseComponent","coveragePercent":9,"coverageCount":"4/43","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/radio-button/radio-button.component.ts","type":"component","linktype":"component","name":"UiRadioButtonComponent","coveragePercent":8,"coverageCount":"4/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/buttonObject.class.ts","type":"class","linktype":"classe","name":"UiButtonObject","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"class","linktype":"classe","name":"UiPasteClipboard","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Clipboard","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Delta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Quill","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorToolbarComponent","coveragePercent":0,"coverageCount":"0/55","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/rich-text-editor.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorComponent","coveragePercent":8,"coverageCount":"4/49","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/text-area/text-area.component.ts","type":"component","linktype":"component","name":"UiTextAreaComponent","coveragePercent":9,"coverageCount":"4/43","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/text-input/text-input.component.ts","type":"component","linktype":"component","name":"UiTextInputComponent","coveragePercent":9,"coverageCount":"4/42","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/toggle/toggle.component.ts","type":"component","linktype":"component","name":"UiToggleComponent","coveragePercent":8,"coverageCount":"4/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/components/global-search-results-item/global-search-results-item.component.ts","type":"component","linktype":"component","name":"UiGlobalSearchResultsItemComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/components/global-search-results-page/global-search-results-page.component.ts","type":"component","linktype":"component","name":"UiGlobalSearchResultsPageComponent","coveragePercent":0,"coverageCount":"0/26","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/global-search.component.ts","type":"component","linktype":"component","name":"UiGlobalSearchComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/interfaces/company-search-item.interface.ts","type":"interface","linktype":"interface","name":"IUiCompanySearchItem","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/interfaces/company-search-response.interface.ts","type":"interface","linktype":"interface","name":"IUiCompanySearchResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/interfaces/no-result-search.interface.ts","type":"interface","linktype":"interface","name":"IUiNoResultSearch","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/services/global-search.service.ts","type":"injectable","linktype":"injectable","name":"UiSearchService","coveragePercent":30,"coverageCount":"3/10","status":"medium"},{"filePath":"libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts","type":"component","linktype":"component","name":"UiActionButtonsRendererComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.ts","type":"component","linktype":"component","name":"UiComboboxRendererComponent","coveragePercent":45,"coverageCount":"10/22","status":"medium"},{"filePath":"libs/ui/src/lib/modules/grid/components/combobox-renderer/interface/combobox-renderer-params.interface.ts","type":"interface","linktype":"interface","name":"IUiComboboxRendererParams","coveragePercent":12,"coverageCount":"1/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/custom-header/custom-header.component.ts","type":"component","linktype":"component","name":"UiCustomHeaderComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/custom-loading-cell-renderer/custom-loading-cell-renderer.component.ts","type":"component","linktype":"component","name":"UiCustomLoadingCellRendererComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.ts","type":"component","linktype":"component","name":"UiCustomMultiSelectHeaderComponent","coveragePercent":3,"coverageCount":"1/29","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.ts","type":"component","linktype":"component","name":"UiDropdownRendererComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","type":"component","linktype":"component","name":"UiGridHeaderButtonsComponent","coveragePercent":80,"coverageCount":"4/5","status":"very-good"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","type":"interface","linktype":"interface","name":"IUiHeaderButton","coveragePercent":8,"coverageCount":"1/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.ts","type":"component","linktype":"component","name":"UiGridHeaderComponent","coveragePercent":20,"coverageCount":"4/20","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/grid.component.ts","type":"component","linktype":"component","name":"UiGridComponent","coveragePercent":1,"coverageCount":"1/76","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionBtn","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionBtnConfig","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionCellRendererParams","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionDivider","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiCustomHeaderParams","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiMultiSelectHeaderParams","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiSelectionChangeParams","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts","type":"component","linktype":"component","name":"UiPillRendererComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts","type":"component","linktype":"component","name":"UiTextCellRendererComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"UiSortingIconsConst","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/feedback-form/feedback-form.component.ts","type":"component","linktype":"component","name":"UiFeedbackFormComponent","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts","type":"component","linktype":"component","name":"UiFeedbackModalComponent","coveragePercent":47,"coverageCount":"8/17","status":"medium"},{"filePath":"libs/ui/src/lib/modules/layout/components/language-switcher/language-switcher.component.ts","type":"component","linktype":"component","name":"UiLanguageSwitcherComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/page-footer/page-footer.component.ts","type":"component","linktype":"component","name":"UiPageFooterComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/page-header/page-header.component.ts","type":"component","linktype":"component","name":"UiPageHeaderComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/support-form/support-form.component.ts","type":"component","linktype":"component","name":"UiSupportFormComponent","coveragePercent":0,"coverageCount":"0/36","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts","type":"component","linktype":"component","name":"UiSupportModalComponent","coveragePercent":47,"coverageCount":"8/17","status":"medium"},{"filePath":"libs/ui/src/lib/modules/layout/components/tab-nav-container/tab-nav-container.component.ts","type":"component","linktype":"component","name":"UiTabNavContainerComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/tab-nav/tab-nav.component.ts","type":"component","linktype":"component","name":"UiTabNavComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/tool-nav/tool-nav.component.ts","type":"component","linktype":"component","name":"UiToolNavComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/layout.component.ts","type":"component","linktype":"component","name":"UiLayoutComponent","coveragePercent":0,"coverageCount":"0/59","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","type":"injectable","linktype":"injectable","name":"UiPageFooterService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","type":"interface","linktype":"interface","name":"IUiPageFooterItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","type":"injectable","linktype":"injectable","name":"UiPageHeaderService","coveragePercent":0,"coverageCount":"0/34","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","type":"interface","linktype":"interface","name":"IUiPageHeaderItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/layout2/layout2.component.ts","type":"component","linktype":"component","name":"UiLayout2Component","coveragePercent":0,"coverageCount":"0/62","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-footer/page-footer.component.ts","type":"component","linktype":"component","name":"UiPageFooterComponent","coveragePercent":83,"coverageCount":"10/12","status":"very-good"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","type":"component","linktype":"component","name":"UiHeaderDropDownComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","type":"interface","linktype":"interface","name":"IUiDropdownConfig","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-header/page-header.component.ts","type":"component","linktype":"component","name":"UiPageHeaderComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/subsidiary-selector/subsidiary-selector.component.ts","type":"component","linktype":"component","name":"UiSubsidiarySelectorComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","type":"injectable","linktype":"injectable","name":"UiPageFooterService","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","type":"interface","linktype":"interface","name":"IUiPageFooterItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","type":"injectable","linktype":"injectable","name":"UiPageHeaderService","coveragePercent":0,"coverageCount":"0/34","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","type":"interface","linktype":"interface","name":"IUiPageHeaderItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/modal/components/modal-base/modal-base.component.ts","type":"component","linktype":"component","name":"UiModalBaseComponent","coveragePercent":75,"coverageCount":"9/12","status":"good"},{"filePath":"libs/ui/src/lib/modules/modal/components/modal/modal.component.ts","type":"component","linktype":"component","name":"UiModalComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/modal/configuration/modal-config.class.ts","type":"class","linktype":"classe","name":"UiModalConfig","coveragePercent":90,"coverageCount":"10/11","status":"very-good"},{"filePath":"libs/ui/src/lib/modules/modal/services/modal.service.ts","type":"injectable","linktype":"injectable","name":"UiModalService","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"libs/ui/src/lib/modules/permissions/directives/has-permission.directive.ts","type":"directive","linktype":"directive","name":"UiHasPermissionDirective","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/permissions/guards/permission.guard.ts","type":"guard","linktype":"guard","name":"UiPermissionGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/array/join.pipe.ts","type":"pipe","linktype":"pipe","name":"UiJoinPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/array/pluck.pipe.ts","type":"pipe","linktype":"pipe","name":"UiPluckPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/nosanitizerpipe.ts","type":"pipe","linktype":"pipe","name":"UiNoSanitizePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/pipe.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PIPES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/confirm-delete-session-modal/confirm-delete-session-modal.component.ts","type":"component","linktype":"component","name":"UiAcpConfirmDeleteSessionModalComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/contact-information-section/contact-information-section.component.ts","type":"component","linktype":"component","name":"UiAcpContactInformationSectionComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/offcanvas/offcanvas.component.ts","type":"component","linktype":"component","name":"UiOffcanvasComponent","coveragePercent":22,"coverageCount":"2/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/organizations-section/organizations-section.component.ts","type":"component","linktype":"component","name":"UiAcpOrganizationSectionComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/profile-section/profile-section.component.ts","type":"component","linktype":"component","name":"UiAcpProfileSectionComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/session-item/session-item.component.ts","type":"component","linktype":"component","name":"UiAcpSessionItemComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/session-list/session-list.component.ts","type":"component","linktype":"component","name":"UiAcpSessionListComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-data.interface.ts","type":"interface","linktype":"interface","name":"IUiTreeData","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-node.interface.ts","type":"interface","linktype":"interface","name":"IUiTreeNode","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/tree-view.component.ts","type":"component","linktype":"component","name":"UiTreeViewComponent","coveragePercent":16,"coverageCount":"2/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/user-details/user-details.component.ts","type":"component","linktype":"component","name":"UiAcpUserDetailsComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/address-details.interface.ts","type":"interface","linktype":"interface","name":"IUiAddressDetails","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-relationship.interface.ts","type":"interface","linktype":"interface","name":"IUiContactRelationship","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-role.interface.ts","type":"interface","linktype":"interface","name":"IUiContactRole","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/language.interface.ts","type":"interface","linktype":"interface","name":"IUiLanguage","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/organization.interface.ts","type":"interface","linktype":"interface","name":"IUiOrganization","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/person-details.interface.ts","type":"interface","linktype":"interface","name":"IUiPersonDetails","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulation-short.interface.ts","type":"interface","linktype":"interface","name":"IUiRegulationShort","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","type":"interface","linktype":"interface","name":"IUiRegulationLeaf","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","type":"interface","linktype":"interface","name":"IUiRegulationsTree","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","type":"class","linktype":"classe","name":"UiAcpUserSession","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","type":"class","linktype":"classe","name":"UiAcpUserSessionItem","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/profile-manager.component.ts","type":"component","linktype":"component","name":"UiAcpProfileManagerComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/services/person.service.ts","type":"injectable","linktype":"injectable","name":"UiPersonService","coveragePercent":40,"coverageCount":"4/10","status":"medium"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/services/profile-manager-service.ts","type":"injectable","linktype":"injectable","name":"UiAcpProfileManagerService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/services/regulation.service.ts","type":"injectable","linktype":"injectable","name":"UiRegulationService","coveragePercent":27,"coverageCount":"3/11","status":"medium"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo-config.ts","type":"interface","linktype":"interface","name":"IUiPendoService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","type":"interface","linktype":"interface","name":"IUiPendoAccountInfo","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","type":"interface","linktype":"interface","name":"IUiPendoVisitorInfo","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","type":"injectable","linktype":"injectable","name":"UiPendoService","coveragePercent":81,"coverageCount":"13/16","status":"very-good"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"pendo","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"pendoFunc","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"injectable","linktype":"injectable","name":"UiAuthenticationService","coveragePercent":23,"coverageCount":"5/21","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"interface","linktype":"interface","name":"IUiAuthResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"interface","linktype":"interface","name":"IUiSession","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Assent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/communication/local-communication/local-communication.service.ts","type":"injectable","linktype":"injectable","name":"UiLocalCommunicationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/communication/remote-communication/remote-communication.service.ts","type":"injectable","linktype":"injectable","name":"UiRemoteCommunicationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/communication/socket-communication/socket-communication.service.ts","type":"injectable","linktype":"injectable","name":"UiSocketCommunicationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/configuration/configuration.service.ts","type":"injectable","linktype":"injectable","name":"UiConfigurationService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/services/configuration/configuration.service.ts","type":"interface","linktype":"interface","name":"IUiAppConfig","coveragePercent":0,"coverageCount":"0/48","status":"low"},{"filePath":"libs/ui/src/lib/services/consent/consent-service.token.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ConsentService","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","type":"injectable","linktype":"injectable","name":"UiCsvParserService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","type":"interface","linktype":"interface","name":"IUiCsvParserConfig","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","type":"injectable","linktype":"injectable","name":"UiFileScanService","coveragePercent":12,"coverageCount":"1/8","status":"low"},{"filePath":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","type":"interface","linktype":"interface","name":"IUiFileScanResult","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/footer/footer.service.ts","type":"injectable","linktype":"injectable","name":"UiFooterService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header-sub/header-sub.service.ts","type":"injectable","linktype":"injectable","name":"UiHeaderSubService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header/header.service.ts","type":"injectable","linktype":"injectable","name":"UiHeaderService","coveragePercent":0,"coverageCount":"0/25","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header/header.service.ts","type":"interface","linktype":"interface","name":"IUiSubHeaderTab","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header/header.service.ts","type":"interface","linktype":"interface","name":"IUiSubHeaderTool","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/layout.service.ts","type":"injectable","linktype":"injectable","name":"UiLayoutService","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/services/localization/localization.service.ts","type":"injectable","linktype":"injectable","name":"UiLocalizationService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/menu/menu.service.ts","type":"injectable","linktype":"injectable","name":"UiMenuService","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"libs/ui/src/lib/services/menu/menu.service.ts","type":"interface","linktype":"interface","name":"IUiMenuItem","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/services/menu/menu.service.ts","type":"interface","linktype":"interface","name":"IUiMenus","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/navigation/interfaces/navigation.service.interface.ts","type":"interface","linktype":"interface","name":"IUiNavigationService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/services/navigation/navigation.service.ts","type":"injectable","linktype":"injectable","name":"UiNavigationService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/notification/notification.service.ts","type":"injectable","linktype":"injectable","name":"UiNotificationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/storage/session/session.service.ts","type":"injectable","linktype":"injectable","name":"UiSessionService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/interfaces/toast-options.interface.ts","type":"interface","linktype":"interface","name":"IUiToastOptions","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/interfaces/toast.interface.ts","type":"interface","linktype":"interface","name":"IUiToast","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/toast-container/toasts-container.component.ts","type":"component","linktype":"component","name":"UiToastsContainerComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/toast.service.ts","type":"injectable","linktype":"injectable","name":"UiToastService","coveragePercent":50,"coverageCount":"3/6","status":"medium"},{"filePath":"libs/ui/src/lib/services/user/interfaces/permissions.interface.ts","type":"interface","linktype":"interface","name":"IUiPermissions","coveragePercent":0,"coverageCount":"0/39","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/role.interface.ts","type":"interface","linktype":"interface","name":"IUiRole","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/user.interface.ts","type":"interface","linktype":"interface","name":"IUiUser","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","type":"interface","linktype":"interface","name":"IUiUserPreference","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","type":"interface","linktype":"interface","name":"IUiUserPreferences","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/user/models/permissions.model.ts","type":"class","linktype":"classe","name":"UiPermissionsModel","coveragePercent":0,"coverageCount":"0/39","status":"low"},{"filePath":"libs/ui/src/lib/services/user/user.service.ts","type":"injectable","linktype":"injectable","name":"UiUserService","coveragePercent":16,"coverageCount":"3/18","status":"low"},{"filePath":"libs/ui/src/lib/ui.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"uiHttpLoaderFactory","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}')}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[421],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-a11y/dist/esm/a11yRunner.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-a11y/dist/esm/a11yHighlight.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/dist/esm/preset/argsEnhancers.js-generated-config-entry.js"),__webpack_exec__("./libs/ui/.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.js"),__webpack_exec__("./libs/ui/src/assets/styles/styles.scss"),__webpack_exec__("./node_modules/bootstrap/scss/bootstrap.scss"),__webpack_exec__("./node_modules/bootstrap/dist/css/bootstrap.min.css"),__webpack_exec__("./node_modules/bootstrap-icons/font/bootstrap-icons.css"),__webpack_exec__("./node_modules/ag-grid-community/dist/styles/ag-grid.min.css"),__webpack_exec__("./node_modules/@angular-devkit/build-angular/node_modules/core-js/proposals/reflect-metadata.js"))));__webpack_require__.O()}]);