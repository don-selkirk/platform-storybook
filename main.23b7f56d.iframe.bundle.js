/*! For license information please see main.23b7f56d.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkplatform_ui=self.webpackChunkplatform_ui||[]).push([[8792],{"./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./modules/button/components/button/button.component.stories.mdx":["./libs/ui/src/lib/modules/button/components/button/button.component.stories.mdx",2462,9651,4598,2340,8607,1119,9503,9698,9991,7114],"./ui.module.stories.mdx":["./libs/ui/src/lib/ui.module.stories.mdx",8607,1119,2408]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackAsyncContext},"./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./modules/alert/alert.component.stories":["./libs/ui/src/lib/modules/alert/alert.component.stories.ts",2462,9651,6224],"./modules/alert/alert.component.stories.ts":["./libs/ui/src/lib/modules/alert/alert.component.stories.ts",2462,9651,6224],"./modules/button/components/action-buttons/action-buttons.component.stories":["./libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.stories.ts",2462,4124],"./modules/button/components/action-buttons/action-buttons.component.stories.ts":["./libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.stories.ts",2462,4124],"./modules/button/components/button/button.component.stories":["./libs/ui/src/lib/modules/button/components/button/button.component.stories.ts",2462,9651,4598,2340,8607,9503,9698,9991,4684],"./modules/button/components/button/button.component.stories.ts":["./libs/ui/src/lib/modules/button/components/button/button.component.stories.ts",2462,9651,4598,2340,8607,9503,9698,9991,4684],"./modules/card/components/card/card.component.stories":["./libs/ui/src/lib/modules/card/components/card/card.component.stories.ts",2462,658],"./modules/card/components/card/card.component.stories.ts":["./libs/ui/src/lib/modules/card/components/card/card.component.stories.ts",2462,658],"./modules/file-upload/components/file-upload/file-upload.component.stories":["./libs/ui/src/lib/modules/file-upload/components/file-upload/file-upload.component.stories.ts",2462,9651,4598,2340,4563,7844,3122,6561,4232],"./modules/file-upload/components/file-upload/file-upload.component.stories.ts":["./libs/ui/src/lib/modules/file-upload/components/file-upload/file-upload.component.stories.ts",2462,9651,4598,2340,4563,7844,3122,6561,4232],"./modules/filter/grid-filter/grid-filter.component.stories":["./libs/ui/src/lib/modules/filter/grid-filter/grid-filter.component.stories.ts",2462,9651,4563,7844,157,7442,9822,1715],"./modules/filter/grid-filter/grid-filter.component.stories.ts":["./libs/ui/src/lib/modules/filter/grid-filter/grid-filter.component.stories.ts",2462,9651,4563,7844,157,7442,9822,1715],"./modules/filter/quick-filter/quick-filter.component.stories":["./libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.stories.ts",2462,9651,7442,8029],"./modules/filter/quick-filter/quick-filter.component.stories.ts":["./libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.stories.ts",2462,9651,7442,8029],"./modules/form-controls/action-buttons/action-buttons.component.stories":["./libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.stories.ts",2462,8444],"./modules/form-controls/action-buttons/action-buttons.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.stories.ts",2462,8444],"./modules/form-controls/checkbox/checkbox.component.stories":["./libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.stories.ts",2462,3354],"./modules/form-controls/checkbox/checkbox.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.stories.ts",2462,3354],"./modules/form-controls/date-picker-plus/ui-date-picker-plus.component.stories":["./libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.stories.ts",2462,9651,4598,2340,3683],"./modules/form-controls/date-picker-plus/ui-date-picker-plus.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.stories.ts",2462,9651,4598,2340,3683],"./modules/form-controls/datepicker/datepicker.component.stories":["./libs/ui/src/lib/modules/form-controls/datepicker/datepicker.component.stories.ts",2462,4598,2340,5064],"./modules/form-controls/datepicker/datepicker.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/datepicker/datepicker.component.stories.ts",2462,4598,2340,5064],"./modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.stories":["./libs/ui/src/lib/modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.stories.ts",2462,7442,6275,2154],"./modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.stories.ts",2462,7442,6275,2154],"./modules/form-controls/dropdown-plus/dropdown-plus.component.stories":["./libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.stories.ts",2462,7442,3754],"./modules/form-controls/dropdown-plus/dropdown-plus.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.stories.ts",2462,7442,3754],"./modules/form-controls/dropdown/dropdown.component.stories":["./libs/ui/src/lib/modules/form-controls/dropdown/dropdown.component.stories.ts",2462,1354],"./modules/form-controls/dropdown/dropdown.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/dropdown/dropdown.component.stories.ts",2462,1354],"./modules/form-controls/form-base/form-base.component.stories":["./libs/ui/src/lib/modules/form-controls/form-base/form-base.component.stories.ts",2462,2234],"./modules/form-controls/form-base/form-base.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/form-base/form-base.component.stories.ts",2462,2234],"./modules/form-controls/form-control-base/form-control-base.component.stories":["./libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.stories.ts",2462,8038],"./modules/form-controls/form-control-base/form-control-base.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.stories.ts",2462,8038],"./modules/form-controls/pills/components/multi-pill/multi-pill.component.stories":["./libs/ui/src/lib/modules/form-controls/pills/components/multi-pill/multi-pill.component.stories.ts",2462,9651,4598,2340,4563,7844,157,9822,9962],"./modules/form-controls/pills/components/multi-pill/multi-pill.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/pills/components/multi-pill/multi-pill.component.stories.ts",2462,9651,4598,2340,4563,7844,157,9822,9962],"./modules/form-controls/pills/components/pill/pill.component.stories":["./libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.stories.ts",2462,4598,2340,7378],"./modules/form-controls/pills/components/pill/pill.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.stories.ts",2462,4598,2340,7378],"./modules/form-controls/progress-indicator/progress-indicator.component.stories":["./libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.stories.ts",2462,3110],"./modules/form-controls/progress-indicator/progress-indicator.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.stories.ts",2462,3110],"./modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories":["./libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts",2462,9651,7969],"./modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts",2462,9651,7969],"./modules/form-controls/rich-text-editor/rich-text-editor.component.stories":["./libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.stories.ts",2462,9614,912],"./modules/form-controls/rich-text-editor/rich-text-editor.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.stories.ts",2462,9614,912],"./modules/form-controls/tags-input/tags-input.component.stories":["./libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.stories.ts",2462,4244],"./modules/form-controls/tags-input/tags-input.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.stories.ts",2462,4244],"./modules/form-controls/text-area/text-area.component.stories":["./libs/ui/src/lib/modules/form-controls/text-area/text-area.component.stories.ts",2462,5502],"./modules/form-controls/text-area/text-area.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/text-area/text-area.component.stories.ts",2462,5502],"./modules/form-controls/text-input/text-input.component.stories":["./libs/ui/src/lib/modules/form-controls/text-input/text-input.component.stories.ts",2462,6528],"./modules/form-controls/text-input/text-input.component.stories.ts":["./libs/ui/src/lib/modules/form-controls/text-input/text-input.component.stories.ts",2462,6528],"./modules/form/form-control-base/form-control-base.component.stories":["./libs/ui/src/lib/modules/form/form-control-base/form-control-base.component.stories.ts",2462,4203],"./modules/form/form-control-base/form-control-base.component.stories.ts":["./libs/ui/src/lib/modules/form/form-control-base/form-control-base.component.stories.ts",2462,4203],"./modules/form/radio-button/radio-button.component.stories":["./libs/ui/src/lib/modules/form/radio-button/radio-button.component.stories.ts",2462,7233],"./modules/form/radio-button/radio-button.component.stories.ts":["./libs/ui/src/lib/modules/form/radio-button/radio-button.component.stories.ts",2462,7233],"./modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories":["./libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts",2462,9651,4598,2340,7844,9614,6412,5900,7442,6275,199,494],"./modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts":["./libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.stories.ts",2462,9651,4598,2340,7844,9614,6412,5900,7442,6275,199,494],"./modules/form/rich-text-editor/rich-text-editor.component.stories":["./libs/ui/src/lib/modules/form/rich-text-editor/rich-text-editor.component.stories.ts",2462,9651,4598,2340,9614,6412,199,5601],"./modules/form/rich-text-editor/rich-text-editor.component.stories.ts":["./libs/ui/src/lib/modules/form/rich-text-editor/rich-text-editor.component.stories.ts",2462,9651,4598,2340,9614,6412,199,5601],"./modules/form/text-area/text-area.component.stories":["./libs/ui/src/lib/modules/form/text-area/text-area.component.stories.ts",2462,4875],"./modules/form/text-area/text-area.component.stories.ts":["./libs/ui/src/lib/modules/form/text-area/text-area.component.stories.ts",2462,4875],"./modules/form/text-input/text-input.component.stories":["./libs/ui/src/lib/modules/form/text-input/text-input.component.stories.ts",2462,5141],"./modules/form/text-input/text-input.component.stories.ts":["./libs/ui/src/lib/modules/form/text-input/text-input.component.stories.ts",2462,5141],"./modules/form/toggle/toggle.component.stories":["./libs/ui/src/lib/modules/form/toggle/toggle.component.stories.ts",2462,7605],"./modules/form/toggle/toggle.component.stories.ts":["./libs/ui/src/lib/modules/form/toggle/toggle.component.stories.ts",2462,7605],"./modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.stories":["./libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.stories.ts",2462,1822],"./modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.stories.ts",2462,1822],"./modules/grid/components/combobox-renderer/combobox-renderer.component.stories":["./libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.stories.ts",2462,9651,7442,2398],"./modules/grid/components/combobox-renderer/combobox-renderer.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.stories.ts",2462,9651,7442,2398],"./modules/grid/components/custom-header/custom-header.component.stories":["./libs/ui/src/lib/modules/grid/components/custom-header/custom-header.component.stories.ts",2462,1986],"./modules/grid/components/custom-header/custom-header.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/custom-header/custom-header.component.stories.ts",2462,1986],"./modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.stories":["./libs/ui/src/lib/modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.stories.ts",2462,9651,5802],"./modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.stories.ts",2462,9651,5802],"./modules/grid/components/dropdown-renderer/dropdown-renderer.component.stories":["./libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.stories.ts",2462,3094],"./modules/grid/components/dropdown-renderer/dropdown-renderer.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.stories.ts",2462,3094],"./modules/grid/components/grid-header-buttons/grid-header-buttons.component.stories":["./libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.stories.ts",2462,594],"./modules/grid/components/grid-header-buttons/grid-header-buttons.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.stories.ts",2462,594],"./modules/grid/components/grid-header/grid-header.component.stories":["./libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.stories.ts",2462,7038],"./modules/grid/components/grid-header/grid-header.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.stories.ts",2462,7038],"./modules/grid/components/grid/grid.component.stories":["./libs/ui/src/lib/modules/grid/components/grid/grid.component.stories.ts",2462,9651,4563,7844,157,9822,7840],"./modules/grid/components/grid/grid.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/grid/grid.component.stories.ts",2462,9651,4563,7844,157,9822,7840],"./modules/grid/components/pill-renderer/pill-renderer.component.stories":["./libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.stories.ts",2462,6750],"./modules/grid/components/pill-renderer/pill-renderer.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.stories.ts",2462,6750],"./modules/grid/components/text-cell-renderer/text-cell-renderer.component.stories":["./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.stories.ts",2462,5036],"./modules/grid/components/text-cell-renderer/text-cell-renderer.component.stories.ts":["./libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.stories.ts",2462,5036],"./modules/layout/components/language-switcher/language-switcher.component.stories":["./libs/ui/src/lib/modules/layout/components/language-switcher/language-switcher.component.stories.ts",2462,9651,9352],"./modules/layout/components/language-switcher/language-switcher.component.stories.ts":["./libs/ui/src/lib/modules/layout/components/language-switcher/language-switcher.component.stories.ts",2462,9651,9352],"./modules/layout/components/page-footer/page-footer.component.stories":["./libs/ui/src/lib/modules/layout/components/page-footer/page-footer.component.stories.ts",2462,9651,4563,7844,9992],"./modules/layout/components/page-footer/page-footer.component.stories.ts":["./libs/ui/src/lib/modules/layout/components/page-footer/page-footer.component.stories.ts",2462,9651,4563,7844,9992],"./modules/layout/components/page-header/page-header.component.stories":["./libs/ui/src/lib/modules/layout/components/page-header/page-header.component.stories.ts",2462,4563,1076],"./modules/layout/components/page-header/page-header.component.stories.ts":["./libs/ui/src/lib/modules/layout/components/page-header/page-header.component.stories.ts",2462,4563,1076],"./modules/layout/components/tab-nav-container/tab-nav-container.component.stories":["./libs/ui/src/lib/modules/layout/components/tab-nav-container/tab-nav-container.component.stories.ts",2462,7464],"./modules/layout/components/tab-nav-container/tab-nav-container.component.stories.ts":["./libs/ui/src/lib/modules/layout/components/tab-nav-container/tab-nav-container.component.stories.ts",2462,7464],"./modules/layout/components/tab-nav/tab-nav.component.stories":["./libs/ui/src/lib/modules/layout/components/tab-nav/tab-nav.component.stories.ts",2462,304],"./modules/layout/components/tab-nav/tab-nav.component.stories.ts":["./libs/ui/src/lib/modules/layout/components/tab-nav/tab-nav.component.stories.ts",2462,304],"./modules/layout/components/tool-nav/tool-nav.component.stories":["./libs/ui/src/lib/modules/layout/components/tool-nav/tool-nav.component.stories.ts",2462,9246],"./modules/layout/components/tool-nav/tool-nav.component.stories.ts":["./libs/ui/src/lib/modules/layout/components/tool-nav/tool-nav.component.stories.ts",2462,9246],"./modules/layout/layout.component.stories":["./libs/ui/src/lib/modules/layout/layout.component.stories.ts",2462,9651,4598,2340,4563,7844,969,6561,3822],"./modules/layout/layout.component.stories.ts":["./libs/ui/src/lib/modules/layout/layout.component.stories.ts",2462,9651,4598,2340,4563,7844,969,6561,3822],"./modules/layout2/components/layout2/layout2.component.stories":["./libs/ui/src/lib/modules/layout2/components/layout2/layout2.component.stories.ts",2462,9651,4563,7844,5051,7442,5292],"./modules/layout2/components/layout2/layout2.component.stories.ts":["./libs/ui/src/lib/modules/layout2/components/layout2/layout2.component.stories.ts",2462,9651,4563,7844,5051,7442,5292],"./modules/layout2/components/page-footer/page-footer.component.stories":["./libs/ui/src/lib/modules/layout2/components/page-footer/page-footer.component.stories.ts",2462,9651,4563,7844,3840],"./modules/layout2/components/page-footer/page-footer.component.stories.ts":["./libs/ui/src/lib/modules/layout2/components/page-footer/page-footer.component.stories.ts",2462,9651,4563,7844,3840],"./modules/layout2/components/page-header/page-header.component.stories":["./libs/ui/src/lib/modules/layout2/components/page-header/page-header.component.stories.ts",2462,4563,364],"./modules/layout2/components/page-header/page-header.component.stories.ts":["./libs/ui/src/lib/modules/layout2/components/page-header/page-header.component.stories.ts",2462,4563,364],"./modules/layout2/components/subsidiary-selector/subsidiary-selector.component.stories":["./libs/ui/src/lib/modules/layout2/components/subsidiary-selector/subsidiary-selector.component.stories.ts",2462,9651,7442,848],"./modules/layout2/components/subsidiary-selector/subsidiary-selector.component.stories.ts":["./libs/ui/src/lib/modules/layout2/components/subsidiary-selector/subsidiary-selector.component.stories.ts",2462,9651,7442,848],"./modules/modal/components/modal-base/modal-base.component.stories":["./libs/ui/src/lib/modules/modal/components/modal-base/modal-base.component.stories.ts",2462,4598,2340,7641],"./modules/modal/components/modal-base/modal-base.component.stories.ts":["./libs/ui/src/lib/modules/modal/components/modal-base/modal-base.component.stories.ts",2462,4598,2340,7641],"./modules/modal/components/modal/modal.component.stories":["./libs/ui/src/lib/modules/modal/components/modal/modal.component.stories.ts",2462,9651,4598,2340,4563,7844,8881],"./modules/modal/components/modal/modal.component.stories.ts":["./libs/ui/src/lib/modules/modal/components/modal/modal.component.stories.ts",2462,9651,4598,2340,4563,7844,8881],"./services/toast-notification/toast-container/toasts-container.component.stories":["./libs/ui/src/lib/services/toast-notification/toast-container/toasts-container.component.stories.ts",2462,9380],"./services/toast-notification/toast-container/toasts-container.component.stories.ts":["./libs/ui/src/lib/services/toast-notification/toast-container/toasts-container.component.stories.ts",2462,9380]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./modules/button/components/button/button.component.stories.mdx":["./libs/ui/src/lib/modules/button/components/button/button.component.stories.mdx",2462,9651,4598,2340,8607,1119,9503,9698,9991,7114],"./ui.module.stories.mdx":["./libs/ui/src/lib/ui.module.stories.mdx",8607,1119,2408]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$",module.exports=webpackAsyncContext},"./libs/ui/.storybook/preview.js":(module,__unused_webpack_exports,__webpack_require__)=>{var compodocJson;compodocJson=__webpack_require__("./libs/ui/.storybook/documentation.json"),__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js").checkValidCompodocJson(compodocJson),__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js").setCompodocJson(compodocJson),module.exports={parameters:{layout:"centered",actions:{argTypesRegex:"^on.*"},viewMode:"story",docs:{inlineStories:!0,tags:["!autodocs"]},previewTabs:{canvas:{hidden:!0,title:"Parameters"},"storybook/docs/panel":{hidden:!0,title:"Documentation"}}}}},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var global_window=__webpack_require__("./node_modules/global/window.js"),window_default=__webpack_require__.n(global_window),composeConfigs=__webpack_require__("./node_modules/@storybook/preview-web/dist/esm/composeConfigs.js"),PreviewWeb=__webpack_require__("./node_modules/@storybook/preview-web/dist/esm/PreviewWeb.js"),ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/addons/dist/esm/index.js"),dist_esm=__webpack_require__("./node_modules/@storybook/channel-postmessage/dist/esm/index.js"),channel_websocket_dist_esm=__webpack_require__("./node_modules/@storybook/channel-websocket/dist/esm/index.js");__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js");function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function define(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{define({},"")}catch(t){define=function define(t,e,r){return t[e]=r}}function wrap(t,e,r,n){var i=e&&e.prototype instanceof Generator?e:Generator,a=Object.create(i.prototype),c=new Context(n||[]);return o(a,"_invoke",{value:makeInvokeMethod(t,r,c)}),a}function tryCatch(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=wrap;var h="suspendedStart",l="suspendedYield",f="executing",s="completed",y={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var p={};define(p,a,(function(){return this}));var d=Object.getPrototypeOf,v=d&&d(d(values([])));v&&v!==r&&n.call(v,a)&&(p=v);var g=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(p);function defineIteratorMethods(t){["next","throw","return"].forEach((function(e){define(t,e,(function(t){return this._invoke(e,t)}))}))}function AsyncIterator(t,e){function invoke(r,o,i,a){var c=tryCatch(t[r],t,o);if("throw"!==c.type){var u=c.arg,h=u.value;return h&&"object"==typeof h&&n.call(h,"__await")?e.resolve(h.__await).then((function(t){invoke("next",t,i,a)}),(function(t){invoke("throw",t,i,a)})):e.resolve(h).then((function(t){u.value=t,i(u)}),(function(t){return invoke("throw",t,i,a)}))}a(c.arg)}var r;o(this,"_invoke",{value:function value(t,n){function callInvokeWithMethodAndArg(){return new e((function(e,r){invoke(t,n,e,r)}))}return r=r?r.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(e,r,n){var o=h;return function(i,a){if(o===f)throw Error("Generator is already running");if(o===s){if("throw"===i)throw a;return{value:t,done:!0}}for(n.method=i,n.arg=a;;){var c=n.delegate;if(c){var u=maybeInvokeDelegate(c,n);if(u){if(u===y)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===h)throw o=s,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=f;var p=tryCatch(e,r,n);if("normal"===p.type){if(o=n.done?s:l,p.arg===y)continue;return{value:p.arg,done:n.done}}"throw"===p.type&&(o=s,n.method="throw",n.arg=p.arg)}}}function maybeInvokeDelegate(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,maybeInvokeDelegate(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),y;var i=tryCatch(o,e.iterator,r.arg);if("throw"===i.type)return r.method="throw",r.arg=i.arg,r.delegate=null,y;var a=i.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,y):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,y)}function pushTryEntry(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function resetTryEntry(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function Context(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(pushTryEntry,this),this.reset(!0)}function values(e){if(e||""===e){var r=e[a];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function next(){for(;++o<e.length;)if(n.call(e,o))return next.value=e[o],next.done=!1,next;return next.value=t,next.done=!0,next};return i.next=i}}throw new TypeError(typeof e+" is not iterable")}return GeneratorFunction.prototype=GeneratorFunctionPrototype,o(g,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),o(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===GeneratorFunction||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,GeneratorFunctionPrototype):(t.__proto__=GeneratorFunctionPrototype,define(t,u,"GeneratorFunction")),t.prototype=Object.create(g),t},e.awrap=function(t){return{__await:t}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,c,(function(){return this})),e.AsyncIterator=AsyncIterator,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new AsyncIterator(wrap(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},defineIteratorMethods(g),define(g,u,"Generator"),define(g,a,(function(){return this})),define(g,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function next(){for(;r.length;){var t=r.pop();if(t in e)return next.value=t,next.done=!1,next}return next.done=!0,next}},e.values=values,Context.prototype={constructor:Context,reset:function reset(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(resetTryEntry),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function stop(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function dispatchException(e){if(this.done)throw e;var r=this;function handle(n,o){return a.type="throw",a.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return handle("end");if(i.tryLoc<=this.prev){var c=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(c&&u){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0);if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}else if(c){if(this.prev<i.catchLoc)return handle(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return handle(i.finallyLoc)}}}},abrupt:function abrupt(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,y):this.complete(a)},complete:function complete(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),y},finish:function finish(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),resetTryEntry(r),y}},catch:function _catch(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;resetTryEntry(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function delegateYield(e,r,n){return this.delegate={iterator:values(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),y}},e}function asyncGeneratorStep(n,t,e,r,o,a,c){try{var i=n[a](c),u=i.value}catch(n){return void e(n)}i.done?t(u):Promise.resolve(u).then(r,o)}function _asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise((function(r,o){var a=n.apply(t,e);function _next(n){asyncGeneratorStep(a,r,o,_next,_throw,"next",n)}function _throw(n){asyncGeneratorStep(a,r,o,_next,_throw,"throw",n)}_next(void 0)}))}}var importers=[function(){var _ref=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(path){var pathRemainder;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(/^\.[\\/](?:libs\/ui\/src\/lib(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.mdx)$/.exec(path)){_context.next=2;break}return _context.abrupt("return");case 2:return pathRemainder=path.substring(18),_context.abrupt("return",__webpack_require__("./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$")("./"+pathRemainder));case 4:case"end":return _context.stop()}}),_callee)})));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(path){var pathRemainder;return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:if(/^\.[\\/](?:libs\/ui\/src\/lib(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path)){_context2.next=2;break}return _context2.abrupt("return");case 2:return pathRemainder=path.substring(18),_context2.abrupt("return",__webpack_require__("./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder));case 4:case"end":return _context2.stop()}}),_callee2)})));return function(_x2){return _ref2.apply(this,arguments)}}(),function(){var _ref3=_asyncToGenerator(_regeneratorRuntime().mark((function _callee3(path){var pathRemainder;return _regeneratorRuntime().wrap((function _callee3$(_context3){for(;;)switch(_context3.prev=_context3.next){case 0:if(/^\.[\\/](?:libs\/ui\/src\/lib(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx))$/.exec(path)){_context3.next=2;break}return _context3.abrupt("return");case 2:return pathRemainder=path.substring(18),_context3.abrupt("return",__webpack_require__("./libs/ui/src/lib lazy recursive ^\\.\\/.*$ include: (?:\\/libs\\/ui\\/src\\/lib(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")("./"+pathRemainder));case 4:case"end":return _context3.stop()}}),_callee3)})));return function(_x3){return _ref3.apply(this,arguments)}}()];function _importFn(){return(_importFn=_asyncToGenerator(_regeneratorRuntime().mark((function _callee4(path){var i,moduleExports;return _regeneratorRuntime().wrap((function _callee4$(_context4){for(;;)switch(_context4.prev=_context4.next){case 0:i=0;case 1:if(!(i<importers.length)){_context4.next=10;break}return _context4.next=4,importers[i](path);case 4:if(!(moduleExports=_context4.sent)){_context4.next=7;break}return _context4.abrupt("return",moduleExports);case 7:i++,_context4.next=1;break;case 10:case"end":return _context4.stop()}}),_callee4)})))).apply(this,arguments)}var SERVER_CHANNEL_URL=window_default().SERVER_CHANNEL_URL,channel=(0,dist_esm.Ay)({page:"preview"});if(esm.MC.setChannel(channel),SERVER_CHANNEL_URL){var serverChannel=(0,channel_websocket_dist_esm.A)({url:SERVER_CHANNEL_URL});esm.MC.setServerChannel(serverChannel),window.__STORYBOOK_SERVER_CHANNEL__=serverChannel}var preview=new PreviewWeb.t;window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel,window.__STORYBOOK_CLIENT_API__=new ClientApi.qT({storyStore:preview.storyStore}),preview.initialize({importFn:function importFn(_x4){return _importFn.apply(this,arguments)},getProjectAnnotations:function getProjectAnnotations(){return(0,composeConfigs.S)([__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js"),__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js"),__webpack_require__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js"),__webpack_require__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js"),__webpack_require__("./node_modules/@storybook/addon-a11y/dist/esm/a11yRunner.js"),__webpack_require__("./node_modules/@storybook/addon-a11y/dist/esm/a11yHighlight.js"),__webpack_require__("./node_modules/@storybook/addon-interactions/dist/esm/preset/argsEnhancers.js"),__webpack_require__("./libs/ui/.storybook/preview.js")])}})},"./libs/ui/src/assets/styles/styles.scss":()=>{},"?4f7e":()=>{},"./libs/ui/.storybook/documentation.json":module=>{"use strict";module.exports=JSON.parse('{"pipes":[{"name":"UiJoinPipe","id":"pipe-UiJoinPipe-c827afc8cb25b4afc569e9323b1fe870a7398dcefa15cfbfbfe2fc9d8274baffc5106ee74cff7b038674b800929fb1f5e3755e16c27791ee08b55a31ffbb5900","file":"libs/ui/src/lib/modules/pipes/array/join.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":""},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\', \'"}],"optional":false,"returnType":"string | any","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":"","defaultValue":"\', \'","tagName":{"text":"param"}}]}],"ngname":"uiJoin","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n// Classes\\nimport UiUtils from \'../../../classes/utils.class\';\\n\\n@Pipe({\\n    name: \'uiJoin\',\\n})\\nexport class UiJoinPipe implements PipeTransform {\\n    public transform(input: any, delimiter: string = \', \'): string | any {\\n        if (!UiUtils.isArray(input)) {\\n            return input;\\n        }\\n\\n        return input.join(delimiter);\\n    }\\n}\\n"},{"name":"UiMonthNamePipe","id":"pipe-UiMonthNamePipe-1c4000f9867dfcd0324dfc632bc2ca1ce17f3b3b7225033ea769d41a5d579b63b042cdf0b9ef6222e8730744fcc78c0bf19cb91e4e9ae8bdc8ba4fd7fc4ebd5e","file":"libs/ui/src/lib/modules/form-controls/pipes/month-name.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns translated full month name\\n\\n","description":"<p>Returns translated full month name</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":364,"end":369,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":358,"end":363,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":378,"end":385,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]}],"ngname":"monthNamePipe","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n// Ng Bootstrap\\nimport { NgbDatepickerI18n } from \'@ng-bootstrap/ng-bootstrap\';\\n\\n@Pipe({\\n    name: \'monthNamePipe\',\\n})\\nexport class UiMonthNamePipe implements PipeTransform {\\n    constructor(private _i18n: NgbDatepickerI18n) {}\\n\\n    /**\\n     * Returns translated full month name\\n     *\\n     * @param value\\n     * @returns\\n     */\\n    public transform(value: number): string {\\n        if (!value || typeof value !== \'number\') {\\n            return \'\';\\n        }\\n\\n        return this._i18n.getMonthFullName(value);\\n    }\\n}\\n"},{"name":"UiNoSanitizePipe","id":"pipe-UiNoSanitizePipe-eeedc68511da96aa004973c7f474e7759b3791199194ac7664882eda5acbfba80cf1d5b25a1801b4c7d4fa30bd14a48147b9e50ec9ae29e8e43af4b8f6885b0b","file":"libs/ui/src/lib/modules/pipes/nosanitizerpipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"html","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SafeHtml","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"html","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"noSanitize","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\nimport { DomSanitizer, SafeHtml } from \'@angular/platform-browser\';\\n\\n@Pipe({ name: \'noSanitize\' })\\nexport class UiNoSanitizePipe implements PipeTransform {\\n    constructor(private domSanitizer: DomSanitizer) {}\\n\\n    public transform(html: string): SafeHtml {\\n        return this.domSanitizer.bypassSecurityTrustHtml(html);\\n    }\\n}\\n"},{"name":"UiPluckPipe","id":"pipe-UiPluckPipe-cbcc63b42d233b992fc102d736e89a9ce60446762111391ea44731395c0a374c143236e5a526e27378d34a5aadbaacdc0760d692629d97a21df1e84ca149bb45","file":"libs/ui/src/lib/modules/pipes/array/pluck.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"input","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"uiPluck","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n// Classes\\nimport UiUtils from \'../../../classes/utils.class\';\\n\\n@Pipe({\\n    name: \'uiPluck\',\\n})\\nexport class UiPluckPipe implements PipeTransform {\\n    public transform(input: any, key: string): any {\\n        if (!UiUtils.isArray(input) || !key) {\\n            return input;\\n        }\\n\\n        return input.map((value: any) => {\\n            return UiUtils.getProperty(value, key);\\n        });\\n    }\\n}\\n"},{"name":"UiTruncatePipe","id":"pipe-UiTruncatePipe-3d38b76ffd8f0446ffb960e374ab5aa51be32cf1edb2aa51f558a4325aad6856b7fd548958b0c8f13be37a596bcec6e664b55b05d4c364e8ce5e5a1ede323222","file":"libs/ui/src/lib/modules/form-controls/pipes/truncate.pipe.ts","type":"pipe","deprecated":true,"deprecationMessage":"This pipe is deprecated and will be removed in future versions.","description":"","rawdescription":"\\n\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"truncate","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n/**\\n * @deprecated This pipe is deprecated and will be removed in future versions.\\n */\\n@Pipe({\\n    name: \'truncate\',\\n})\\nexport class UiTruncatePipe implements PipeTransform {\\n    public transform(value: string, args: any[]): string {\\n        if (!value) {\\n            return \'\';\\n        }\\n\\n        let limit = 20;\\n        if (args.length > 0) {\\n            const parsedLimit = parseInt(args[0], 10);\\n            if (!isNaN(parsedLimit)) {\\n                limit = parsedLimit;\\n            }\\n        }\\n\\n        const trail = args.length > 1 ? String(args[1]) : \'...\';\\n        return value.length > limit ? value.substring(0, limit) + trail : value;\\n    }\\n}\\n"}],"interfaces":[{"name":"IUiActionBtn","id":"interface-IUiActionBtn-e8cf101508e2ae252fb4ffe12c9e6837eb2adb2c0fe52620904221424bd0dc42d3c6dc3f124468915e578ebd17b1ec3f77d7fbb04f6ed4799371dd32b20b1681","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\n\\nexport interface IUiCustomHeaderParams {\\n    menuIcon: string;\\n}\\n\\nexport interface IUiActionBtn {\\n    icon?: string;\\n    text: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    clicked: (params: IUiActionCellRendererParams) => void;\\n}\\n\\nexport interface IUiActionBtnConfig {\\n    itemId: string;\\n    rowId: string;\\n    inlineIcons?: boolean;\\n    showIconsInMenu?: boolean;\\n    showLabel?: boolean;\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\n}\\n\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\n\\nexport interface IUiActionDivider {\\n    divider?: boolean;\\n    visible?: boolean;\\n}\\n\\nexport interface IUiSelectionChangeParams {\\n    gridId: string;\\n    selectedRows: RowNode[];\\n}\\n\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\n    gridId: any;\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n}\\n","properties":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"","line":15},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"iconVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiActionBtnConfig","id":"interface-IUiActionBtnConfig-e8cf101508e2ae252fb4ffe12c9e6837eb2adb2c0fe52620904221424bd0dc42d3c6dc3f124468915e578ebd17b1ec3f77d7fbb04f6ed4799371dd32b20b1681","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\n\\nexport interface IUiCustomHeaderParams {\\n    menuIcon: string;\\n}\\n\\nexport interface IUiActionBtn {\\n    icon?: string;\\n    text: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    clicked: (params: IUiActionCellRendererParams) => void;\\n}\\n\\nexport interface IUiActionBtnConfig {\\n    itemId: string;\\n    rowId: string;\\n    inlineIcons?: boolean;\\n    showIconsInMenu?: boolean;\\n    showLabel?: boolean;\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\n}\\n\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\n\\nexport interface IUiActionDivider {\\n    divider?: boolean;\\n    visible?: boolean;\\n}\\n\\nexport interface IUiSelectionChangeParams {\\n    gridId: string;\\n    selectedRows: RowNode[];\\n}\\n\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\n    gridId: any;\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n}\\n","properties":[{"name":"btnArr","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionBtn | IUiActionDivider>","optional":false,"description":"","line":24},{"name":"inlineIcons","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":21},{"name":"itemId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"rowId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"showIconsInMenu","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":22},{"name":"showLabel","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiActionButton","id":"interface-IUiActionButton-5d6bf20e401f867997efa2dd5d0d27d225601ae79c92ae90dc0fbffa524f0394da042f0dd087b6b7543a33c49036edbfc8fedb82bcbbe4a8454823bd9fee45d2","file":"libs/ui/src/lib/modules/button/interfaces/action-button.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { UiButtonIconLocationEnum } from \'../enums/action-button-icon-location.enum\';\\nimport { UiButtonSizeEnum } from \'../enums/action-button-size.enum\';\\nimport { UiButtonTypeEnum } from \'../enums/action-button-type.enum\';\\n\\nexport interface IUiActionButton {\\n    id?: string;\\n    text?: string;\\n    type: UiButtonTypeEnum;\\n    size?: UiButtonSizeEnum;\\n    iconLocation?: UiButtonIconLocationEnum;\\n    icon?: string;\\n    disabled?: boolean;\\n    inversed?: boolean;\\n    tooltipText?: string;\\n    clicked?: (e?: unknown) => unknown;\\n}\\n\\nexport { UiButtonSizeEnum, UiButtonTypeEnum, UiButtonIconLocationEnum };\\n","properties":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":15},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11},{"name":"iconLocation","deprecated":false,"deprecationMessage":"","type":"UiButtonIconLocationEnum","optional":true,"description":"","line":10},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6},{"name":"inversed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"size","deprecated":false,"deprecationMessage":"","type":"UiButtonSizeEnum","optional":true,"description":"","line":9},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"type","deprecated":false,"deprecationMessage":"","type":"UiButtonTypeEnum","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiActionButton","id":"interface-IUiActionButton-66edc8457919c0a60f9d4a26adfaff0cb1971e73585ddea2a957a085aa488bb8ed1c0495ceae5d2668c15ea9ba806b24e4f156456dd5c2573d957151d2c89b8a-1","file":"libs/ui/src/lib/modules/card/interfaces/card.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiActionButton {\\n    id?: string;\\n    icon?: string;\\n    text?: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    classes?: string;\\n    tooltipText?: string;\\n    clicked?: (buttonId: string, buttonData?: IUiActionButton) => void;\\n}\\n","properties":[{"name":"classes","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9},{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":11},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":4},{"name":"iconVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":8},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":3},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":5},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiActionButton-1"},{"name":"IUiActionCellRendererParams","id":"interface-IUiActionCellRendererParams-e8cf101508e2ae252fb4ffe12c9e6837eb2adb2c0fe52620904221424bd0dc42d3c6dc3f124468915e578ebd17b1ec3f77d7fbb04f6ed4799371dd32b20b1681","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\n\\nexport interface IUiCustomHeaderParams {\\n    menuIcon: string;\\n}\\n\\nexport interface IUiActionBtn {\\n    icon?: string;\\n    text: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    clicked: (params: IUiActionCellRendererParams) => void;\\n}\\n\\nexport interface IUiActionBtnConfig {\\n    itemId: string;\\n    rowId: string;\\n    inlineIcons?: boolean;\\n    showIconsInMenu?: boolean;\\n    showLabel?: boolean;\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\n}\\n\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\n\\nexport interface IUiActionDivider {\\n    divider?: boolean;\\n    visible?: boolean;\\n}\\n\\nexport interface IUiSelectionChangeParams {\\n    gridId: string;\\n    selectedRows: RowNode[];\\n}\\n\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\n    gridId: any;\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n}\\n","properties":[],"indexSignatures":[],"methods":[],"extends":"ICellRendererParams"},{"name":"IUiActionDivider","id":"interface-IUiActionDivider-e8cf101508e2ae252fb4ffe12c9e6837eb2adb2c0fe52620904221424bd0dc42d3c6dc3f124468915e578ebd17b1ec3f77d7fbb04f6ed4799371dd32b20b1681","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\n\\nexport interface IUiCustomHeaderParams {\\n    menuIcon: string;\\n}\\n\\nexport interface IUiActionBtn {\\n    icon?: string;\\n    text: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    clicked: (params: IUiActionCellRendererParams) => void;\\n}\\n\\nexport interface IUiActionBtnConfig {\\n    itemId: string;\\n    rowId: string;\\n    inlineIcons?: boolean;\\n    showIconsInMenu?: boolean;\\n    showLabel?: boolean;\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\n}\\n\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\n\\nexport interface IUiActionDivider {\\n    divider?: boolean;\\n    visible?: boolean;\\n}\\n\\nexport interface IUiSelectionChangeParams {\\n    gridId: string;\\n    selectedRows: RowNode[];\\n}\\n\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\n    gridId: any;\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n}\\n","properties":[{"name":"divider","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":30},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":31}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAddressDetails","id":"interface-IUiAddressDetails-530bb36f221f751aad302ad438b84b6279db496da968d2307b142b96c4bb55b55dbb372aa4dbb8e46efaa36a414b7350a0ea63cba5e2925abe9b4a1f90b5baa3","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/address-details.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiAddressDetails {\\n    addressLine1: string;\\n    addressLine2: string;\\n    city: string;\\n    countryName: string;\\n    state: string;\\n    countryCode: string;\\n    postalCode: string;\\n}\\n","properties":[{"name":"addressLine1","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"addressLine2","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"city","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"countryCode","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"countryName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"postalCode","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAppConfig","id":"interface-IUiAppConfig-a5d627f262c5de83b7ad67dc40ecd921e04928c52abf27d5b5da861862b3b51b011f02b260cc2169c2caeb4156d6bde6bbda0f3f8fb5eec86aae70d73b96fbb2","file":"libs/ui/src/lib/services/configuration/configuration.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\n// RxJS\\nimport { Subject, throwError } from \'rxjs\';\\n\\nexport interface IUiAppConfig {\\n    aiApi: string;\\n    dataApi: string;\\n    authApi: string; // e.g \\"http://api.localdev.assentcompliance.com:8080/v1/authentication\\",\\n    authCheckApi: string;\\n    gcApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/GlobalCatalogApi\\"\\n    aciServiceApi: string;\\n    iamApi: string;\\n    requestOtpTokenSlug: string; // e.g. \\"authentication/signin\\"\\n    verifyOtpTokenSlug: string; // e.g. \\"authentication/verifytoken\\"\\n\\n    enablePendoAcpUi: boolean;\\n    pendoApiKey: string;\\n    aucBaseUrl: string;\\n    contactManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ContactManagementApi/\\"\\n    partyApi: string;\\n    tenantRequestApi: string;\\n    supplierExperienceApi: string;\\n    indirectMonitoringApi: string;\\n    surveySubmissionApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveySubmissionApi\\"\\n    coreAuthCookieDomain: string; // e.g \\".assentcompliance.com\\",\\n    authCookieId: string; // e.g. \\"auth_token\\"\\n    sessionCookieId: string; // e.g. \\"sessionKey\\"\\n    emailCookieId: string; // e.g. \\"user.email\\"\\n    environmentName: string; // e.g. \\"localdev\\", \\"qa\\", \\"production\\"\\n    rememberMe: string; // e.g. localdev.remember_me\\n    correctiveActionsService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/CorrectiveActionsService\\"\\n    scanUrl: string; // e.g wss://2bfckqgh8h.execute-api.us-east-1.amazonaws.com/dev\\n    scanBucketName: string; // e.g assent-csr-file-upload-service-scan-bucket\\n    scanBucketRegion: string; // e.g us-east-1\\n    scanIdentityPoolId: string; // e.g us-east-1:2bbb60c2-3c7a-4195-bafe-3f8ef5fb2ffe\\n    coreAuthenticationLogin: string; //e.g. http://core-login.localdev.assentcompliance.com/#/login\\n    supplierHelpCenter: string;\\n    // e.g. \\"https://assentcompliance.force.com/SupplierCustomerPortal/s/topic/0TO8X000000B4LJWA0/corrective-actions?language=en_US\\"\\n    termsOfService: string; // e.g. \\"https://www.assent.com/terms-of-use-supplier-portal\\"\\n    supplierLoginEnabled: boolean;\\n    moduleManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ModuleManagementApi/\\"\\n    sessionExpiryLogoutCookieName: string; // e.g. \\"sessionExpiryLogout\\"\\n    manualLogoutCookieName: string; // e.g. \\"manualLogout\\"\\n    forceAllSessionsLogoutCookieName: string; // e.g. \\"forceAllSessionsLogout\\"\\n    isSupplier: string;\\n    isConsentGiven: string;\\n    secureCookie: boolean;\\n    surveyRulesService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveyRulesService\\"\\n    profileManager: boolean;\\n    authServiceVersion: string; // e.g. \\"cognito\\" / \\"auth0\\"\\n    uniqueSessionCookieId: string; // e.g. \\"uniqueSessionGuid\\"\\n    awsS3ServiceURL: string; // e.g \\"http://aws.localdev.assentcompliance.com:4567\\"\\n    supo2NavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.com\\"\\n    supoEuNavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.eu\\"\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiConfigurationService {\\n    public appConfig: any;\\n    public configLoaded$: Subject<void> = new Subject();\\n    public environmentVariables: any;\\n\\n    private _httpClient: HttpClient;\\n    private readonly _configFile = \'assets/configs/app-config.json\';\\n\\n    constructor(handler: HttpBackend) {\\n        this._httpClient = new HttpClient(handler);\\n    }\\n\\n    public getConfig<T>(name: string): T {\\n        if (this.appConfig && this.appConfig[name]) {\\n            return this.appConfig[name] as T;\\n        }\\n    }\\n\\n    public initializeFromObject(configData: any) {\\n        this.appConfig = configData;\\n    }\\n\\n    public async initializeApp(): Promise<boolean> {\\n        return new Promise((_resolve, _reject) => {\\n            this._httpClient.get(this._configFile).subscribe({\\n                next: (configData: any) => {\\n                    this.appConfig = configData;\\n                    this.configLoaded$.next(null);\\n                },\\n                error: (error: HttpErrorResponse) => {\\n                    _reject(true);\\n                    return throwError(() => error || \'Server error\');\\n                },\\n                complete: () => {\\n                    _resolve(true);\\n                },\\n            });\\n        });\\n    }\\n\\n    public setEnvironmentVariables(env: any) {\\n        this.environmentVariables = env;\\n    }\\n}\\n","properties":[{"name":"aciServiceApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"aiApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"aucBaseUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"authApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"authCheckApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"authCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28},{"name":"authServiceVersion","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"awsS3ServiceURL","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":54},{"name":"contactManagementApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21},{"name":"coreAuthCookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"coreAuthenticationLogin","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38},{"name":"correctiveActionsService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33},{"name":"dataApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"emailCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30},{"name":"enablePendoAcpUi","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"environmentName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31},{"name":"forceAllSessionsLogoutCookieName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":46},{"name":"gcApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"iamApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"indirectMonitoringApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"isConsentGiven","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48},{"name":"isSupplier","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":47},{"name":"manualLogoutCookieName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":45},{"name":"moduleManagementApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43},{"name":"partyApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22},{"name":"pendoApiKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"profileManager","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":51},{"name":"rememberMe","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"requestOtpTokenSlug","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"scanBucketName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"scanBucketRegion","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36},{"name":"scanIdentityPoolId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":37},{"name":"scanUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34},{"name":"secureCookie","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":49},{"name":"sessionCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29},{"name":"sessionExpiryLogoutCookieName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44},{"name":"supo2NavigationUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":55},{"name":"supoEuNavigationUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":56},{"name":"supplierExperienceApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"supplierHelpCenter","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39},{"name":"supplierLoginEnabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":42},{"name":"surveyRulesService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":50},{"name":"surveySubmissionApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26},{"name":"tenantRequestApi","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23},{"name":"termsOfService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41},{"name":"uniqueSessionCookieId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53},{"name":"verifyOtpTokenSlug","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAspAppConfig","id":"interface-IUiAspAppConfig-6e07817bcf924cc16344994d9458e7a73fe43a61c19da23343060c9bad4e6197b14948277d32668e435d0913d27ced824b5a361ef7459846cc345eb088908b4f","file":"libs/ui/src/lib/interfaces/app-config.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiAuth0Config } from \'@lib/modules/authentification/auth0/auth0-config\';\\n\\n// Configuration type for ASP that inherits the Auth0 properties\\nexport interface IUiAspAppConfig {\\n    domain: string; // e.g. \\"localhost:4201\\"\\n    auth0: IUiAuth0Config;\\n    enableAuth0: boolean;\\n}\\n","properties":[{"name":"auth0","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":6},{"name":"domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"enableAuth0","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAudience","id":"interface-IUiAudience-056d7a26a620163b56ee82925134598591fe41fa065bd464aec93feb02386e6ab8b6e057649d2362d7fdf18022d027e8774b418694fbdcb8bbe2541b9322ea6d","file":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable, OnDestroy } from \'@angular/core\';\\nimport { AuthService } from \'@auth0/auth0-angular\';\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\n// eslint-disable-next-line max-len\\nimport { BehaviorSubject, catchError, EMPTY, firstValueFrom, interval, Observable, of, shareReplay, startWith, Subject, switchMap, takeUntil, tap } from \'rxjs\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { IUiAuth0Config } from \'../auth0-config\';\\nimport { CookieService } from \'ngx-cookie-service\';\\n\\nexport interface IUiAudience {\\n    name: string;\\n    audience: string;\\n    endpoint: string;\\n    path?: string;\\n}\\n\\n/**\\n * Represents a subsidiary.\\n *\\n * @see `IAspSubsidiary`\\n */\\nexport interface IUiAuthSubsidiary {\\n    partyGuid: string; // TODO cleanup interfaces\\n    name: string;\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiAuthService implements OnDestroy {\\n    /**\\n     * Indicates whether the permissions have been loaded.\\n     * Can be used to determine if the user is authenticated and has permissions.\\n     *\\n     * @see `UiAuthService.hasAnyPermission()`\\n     * @see `UiAuthService.hasPermissions()`\\n     * @see `UiAuthService.arePermissionsLoaded()`\\n     *\\n     * @example\\n     * ```typescript\\n     * this._authService.permissionsLoaded$.pipe(\\n     *   // wait for the permissions to be loaded\\n     *   filter((loaded) => loaded === true),\\n     *   ...\\n     * ```\\n     * @example\\n     * ```typescript\\n     * this._authService.permissionsLoaded$.subscribe((loaded) => {\\n     *   // wait for the permissions to be loaded\\n     *   if (loaded) {\\n     *     ...\\n     * ```\\n     */\\n    public permissionsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\n    public subsidiariesLoaded$: BehaviorSubject<IUiAuthSubsidiary[]> = new BehaviorSubject(null);\\n\\n    /**\\n     * Gets the active organization GUID.\\n     *\\n     * @returns The active organization GUID, or undefined if not set.\\n     */\\n    public get activeOrgGuid(): string | undefined {\\n        const storedValue = sessionStorage.getItem(\'activeOrgGuid\');\\n        if (storedValue) {\\n            return storedValue;\\n        }\\n        return this._activeOrgGuid;\\n    }\\n    public set activeOrgGuid(value: string) {\\n        this._activeOrgGuid = value;\\n        // set value in local storage for an hour\\n        sessionStorage.setItem(\'activeOrgGuid\', value);\\n    }\\n\\n    /**\\n     * Resets the polling interval for the user authentication status\\n     */\\n    private readonly _pollReset$ = new Subject<void>();\\n\\n    private _activeOrgGuid: string | undefined;\\n    private readonly _subsidiaryExpiration = 3600000; // 1 hour\\n\\n    /**\\n     * Gets the user GUID.\\n     *\\n     * @returns The user GUID as a string or undefined if not available.\\n     */\\n    public get userGuid(): string | undefined {\\n        return this._userGuid;\\n    }\\n    private _userGuid: string | undefined;\\n\\n    /**\\n     * Gets the root organization GUID.\\n     *\\n     * @returns The root organization GUID, or undefined if not set.\\n     */\\n    public get rootOrgGuid(): string | undefined {\\n        return this._rootOrgGuid;\\n    }\\n    public set rootOrgGuid(value: string | undefined) {\\n        this._rootOrgGuid = value;\\n    }\\n    private _rootOrgGuid: string | undefined;\\n    private readonly _pollInterval = 300000; // 5 minutes\\n    private readonly _unsubscribe$ = new Subject<void>();\\n\\n    /**\\n     * Gets the list of audiences.\\n     *\\n     * @returns An array of all audiences.\\n     */\\n    public get audienceList(): IUiAudience[] {\\n        return Array.from(this._audienceList);\\n    }\\n    private _audienceList: Set<IUiAudience> = new Set();\\n\\n    public get subsidiaries(): IUiAuthSubsidiary[] {\\n        return Array.from(this._subsidiaryList);\\n    }\\n    public set subsidiaries(value: any[]) {\\n        this._subsidiaryList = new Set(value);\\n        this.subsidiariesLoaded$.next(Array.from(this._subsidiaryList));\\n    }\\n    private _subsidiaryList: Set<IUiAuthSubsidiary> = new Set();\\n\\n    private readonly _config: IUiAuth0Config;\\n\\n    /**\\n     * @private\\n     * Accessible through the getPermissionsList and hasPermission methods\\n     */\\n    private _permissionsList: Set<string> = new Set();\\n\\n    private _helper = new JwtHelperService();\\n\\n    constructor(\\n        private readonly _auth0Service: AuthService,\\n        private readonly _configurationService: UiConfigurationService,\\n        private readonly _cookieService: CookieService,\\n    ) {\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\n\\n        // Clear audiences\\n        this._audienceList.clear();\\n        const audiences = this._config.audiences;\\n        if (!audiences || audiences.length === 0) {\\n            console.error(\'No audiences defined in the configuration.\');\\n        }\\n        // Add audiences to the list\\n        audiences.forEach((audience) => {\\n            const existingAudience = Array.from(this._audienceList)\\n                .find((aud) => (audience.name === aud.name) || (audience.audience === aud.audience));\\n            if (existingAudience) {\\n                console.warn(`Warning -> Duplicate audience found.`);\\n            } else {\\n                this._audienceList.add(audience);\\n            }\\n        });\\n    }\\n\\n    public ngOnDestroy() {\\n        // Clear permissions\\n        this._permissionsList.clear();\\n        this._subsidiaryList.clear();\\n        this._activeOrgGuid = undefined;\\n        // Set observables to null\\n        this.permissionsLoaded$.next(null);\\n        this._unsubscribe$.next();\\n        this._unsubscribe$.complete();\\n    }\\n\\n    //#region Init\\n\\n    /**\\n     * Initializes the application by loading permissions if the user is authenticated.\\n     *\\n     * @returns `Promise<boolean>` A promise that resolves to `true` if the initialization is successful, otherwise `false`.\\n     * @throws {Error} If an error occurs during the initialization process.\\n     */\\n    public async initializeApp(): Promise<any> {\\n        try {\\n            // Verify that the user is logged in\\n            const isAuthenticated = await this.isUserAuthenticated();\\n            if (!isAuthenticated) {\\n                console.warn(\'Warning -> User not authenticated.\');\\n                this._auth0Service.logout();\\n                this._auth0Service.loginWithRedirect();\\n                // Stop execution of the method if the user is not authenticated\\n                return false;\\n            }\\n\\n            this._auth0Service.user$.subscribe((user) => {\\n                this._cookieService.set(this._configurationService.appConfig.emailCookieId, user.email);\\n            });\\n\\n            // Reset the permission and init observables\\n            this.permissionsLoaded$.next(false);\\n\\n            // Clear permission\\n            this._permissionsList.clear();\\n            this._subsidiaryList.clear();\\n\\n            // Get entitlement token (cachemode = off)\\n            const token = await this.getDecodedTokenByAudience(this._config.authorizationParams.audience, \'off\');\\n            if (token) {\\n                // Set userguid\\n                this._userGuid = token.user_guid;\\n                // Set rootorg\\n                this._rootOrgGuid = token.root_org_guid;\\n\\n                this.addPermissionsFromDecodedToken(token);\\n\\n                //await this.loadPermissions().then(() => {\\n                this.permissionsLoaded$.next(true);\\n                return true;\\n                //});\\n            } else {\\n                console.error(\'No token available for audience.\');\\n                // Return false on error\\n                return false;\\n            }\\n        } catch (error) {\\n            console.error(\'Error initializing app.\');\\n            // Return false on error\\n            return false;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    /**\\n     * Checks if the user is authenticated.\\n     *\\n     * @returns A promise that resolves to a boolean indicating whether the user is authenticated or not.\\n     */\\n    public async isUserAuthenticated(): Promise<boolean> {\\n        try {\\n            return firstValueFrom(this._auth0Service.isAuthenticated$).then((isAuthenticated) => {\\n                return isAuthenticated;\\n            });\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Polls for an access token at a specified interval.\\n     *\\n     * @returns An observable that emits the access token as a string.\\n     */\\n    public pollAccessToken(): Observable<string> {\\n        return this._pollReset$.pipe(\\n            startWith(0),\\n            switchMap(() =>\\n                interval(this._pollInterval).pipe(\\n                    takeUntil(this._pollReset$),\\n                    switchMap(() =>\\n                        this._auth0Service.getAccessTokenSilently().pipe(\\n                            catchError((error) => {\\n                                console.error(\'Error fetching access token:\', error);\\n                                this._auth0Service.logout();\\n                                this._auth0Service.loginWithRedirect();\\n                                // Complete the observable after redirecting\\n                                return EMPTY;\\n                            })\\n                        )\\n                    )\\n                )\\n            ),\\n            takeUntil(this._unsubscribe$),\\n            shareReplay(1)\\n        );\\n    }\\n\\n    /**\\n     * @private\\n     * Returns the subsidiary list.\\n     *\\n     * @returns An array of IUiAuthSubsidiary objects representing the subsidiary list.\\n     */\\n    private get subsidiaryList(): IUiAuthSubsidiary[] {\\n        return Array.from(this._subsidiaryList);\\n    }\\n\\n    //#region Audience\\n\\n    /**\\n     * @private\\n     * Gets the exact audience with the specified name.\\n     *\\n     * @param nameOrPath The name of the audience to get.\\n     * @returns The audience with the specified name, or undefined if not found.\\n     */\\n    private getAudience(nameOrPath: string): IUiAudience | undefined {\\n        let audienceMatch = this.audienceList.find((audience) => audience.name === nameOrPath);\\n        if (!audienceMatch) {\\n            audienceMatch = this.audienceList.find((audience) => audience.audience === nameOrPath);\\n        }\\n        return audienceMatch;\\n    }\\n\\n    /**\\n     * Retrieves the audience from the given path.\\n     *\\n     * @param path - The path to check for audience.\\n     * @returns The audience if a matching endpoint is found, otherwise null.\\n     */\\n    public getAudienceFromPath(path: string): string {\\n        // First check for an exact match to the API endpoint\\n        const matchingAudience = this.audienceList.find((audience) => {\\n            const matchPath = path.includes(audience.endpoint);\\n            return matchPath;\\n        });\\n        return matchingAudience ? matchingAudience.audience : null;\\n    }\\n\\n    //#endregion\\n\\n    //#region Tokens\\n\\n    /**\\n     * Retrieves a token for the specified audience.\\n     *\\n     * @param audienceName - The name of the audience.\\n     * @param cacheMode - The cache mode for the token. Defaults to \'on\'.\\n     * @returns An Observable that emits the token string or undefined.\\n     */\\n    public getToken(audienceName: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\n        try {\\n            // Verify that the user is logged in\\n            if (!this._auth0Service.isAuthenticated$) {\\n                console.error(\' Error -> User not authenticated.\');\\n                return of(undefined);\\n            }\\n\\n            // Request a new JWT if the current one is not valid\\n            const aud = this.getAudience(audienceName);\\n            if (!aud) {\\n                console.error(\' Error -> Audience not found.\');\\n                return of(undefined);\\n            }\\n\\n            return this.getTokenByAudience(aud.audience);\\n        } catch (error) {\\n            console.error(\'Error in getToken.\');\\n            return of(undefined);\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves a token by audience.\\n     *\\n     * @param audience - The audience for which to retrieve the token.\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\n     * @returns An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.\\n     */\\n    private getTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\n        return this._auth0Service.getAccessTokenSilently({\\n            authorizationParams: {\\n                audience,\\n                activeOrgGuid: this._activeOrgGuid,\\n            },\\n            cacheMode,\\n        }).pipe(\\n            tap(() => {\\n            // Emit a value to reset the polling interval after getting the token\\n                this._pollReset$.next();\\n            })\\n        );\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves the decoded token for a given audience.\\n     *\\n     * @param audience - The audience for which to retrieve the token.\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found.\\n     */\\n    private async getDecodedTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\n        try {\\n            const token = await firstValueFrom(this.getTokenByAudience(audience, cacheMode));\\n            if (!token) {\\n                return undefined;\\n            }\\n            // Decode the token\\n            const decodedToken = this._helper.decodeToken(token);\\n            // Return the decoded token\\n            return decodedToken;\\n        } catch (error) {\\n            console.error(\'Error in getDecodedTokenByAudience.\');\\n            return undefined;\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves and decodes a token with the specified name.\\n     *\\n     * @param name - The name of the token to retrieve and decode.\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.\\n     */\\n    public async getDecodedToken(name: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\n        try {\\n            const token = await firstValueFrom(this.getToken(name, cacheMode));\\n            if (!token) {\\n                return undefined;\\n            }\\n\\n            // Decode the token\\n            const decodedToken = this._helper.decodeToken(token);\\n            // Return the decoded token\\n            return decodedToken;\\n        } catch (error) {\\n            console.error(\'Error in getDecodedToken.\');\\n            return undefined;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    //#region Permissions\\n\\n    /**\\n     * @private\\n     * Adds permissions from the decoded token.\\n     *\\n     * @param decodedToken - The decoded token containing permissions.\\n     */\\n    private addPermissionsFromDecodedToken(decodedToken: any) {\\n        try {\\n            if (decodedToken && decodedToken.permissions) {\\n                // Add permissions to the list\\n                this.addPermissions(decodedToken.permissions);\\n            }\\n        } catch (error) {\\n            console.error(\'Error adding permissions from decoded token.\');\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Loads permissions from the user\'s token.\\n     *\\n     * @returns `Promise<void>` A promise that resolves when the permissions have been loaded.\\n     */\\n    private async loadPermissions(): Promise<void> {\\n        try {\\n            await Promise.all(\\n                Array.from(this._audienceList)\\n                    .map((audience) => {\\n                        return this.getDecodedToken(audience.name); // not by audience\\n                    })\\n            ).then((tokens) => {\\n                if (tokens.length > 0) {\\n                    tokens.forEach((token) => {\\n                        // Load permissions from the token\\n                        this.addPermissionsFromDecodedToken(token);\\n                    });\\n                }\\n            });\\n        } catch (error) {\\n            console.error(\'Error loading permissions.\');\\n            throw error;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    /**\\n     * Checks if a specific permission exists.\\n     *\\n     * @param permission The permission to check.\\n     * @returns True if the permission exists, false otherwise.\\n     */\\n    public hasPermission(permission: string): boolean {\\n        // Check for an exact permission match\\n        if (this._permissionsList.has(permission)) {\\n            return true;\\n        } else {\\n            // Check for a fuzzy match on the audience portion of the permission\\n            const permissionFound = Array.from(this._permissionsList).find((p) => p.includes(permission));\\n            if (permissionFound) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * Checks if all specified permissions exist.\\n     *\\n     * @param permissions The permissions to check.\\n     * @returns True if all permissions exist, false otherwise.\\n     */\\n    public hasPermissions(permissions: string[]): boolean {\\n        return permissions.every((permission) => this.hasPermission(permission));\\n    }\\n\\n    /**\\n     * Checks if any of the specified permissions exist.\\n     *\\n     * @param permissions The permissions to check.\\n     * @returns True if any permission exists, false otherwise.\\n     */\\n    public hasAnyPermission(permissions: string[]): boolean {\\n        return permissions.some((permission) => this.hasPermission(permission));\\n    }\\n\\n    /**\\n     * Checks if the permissions have been loaded.\\n     *\\n     * @returns True if the permissions have been loaded, false otherwise.\\n     */\\n    public arePermissionsLoaded(): boolean {\\n        return this.permissionsLoaded$.getValue();\\n    }\\n\\n    /**\\n     * Adds a new permission if it does not already exist.\\n     *\\n     * @param permission The permission to add.\\n     */\\n    private addPermission(permission: string): void {\\n        this._permissionsList.add(permission);\\n    }\\n\\n    /**\\n     * Adds multiple permissions.\\n     *\\n     * @param permissions The permissions to add.\\n     */\\n    private addPermissions(permissions: string[]): void {\\n        permissions.forEach((permission) => this.addPermission(permission));\\n    }\\n\\n    /**\\n     * Removes a specific permission.\\n     *\\n     * @param permission The permission to remove.\\n     */\\n    private removePermission(permission: string): void {\\n        this._permissionsList.delete(permission);\\n    }\\n\\n    /**\\n     * Gets the list of all permissions.\\n     *\\n     * @returns An array of all permissions.\\n     */\\n    public getPermissionsList(): string[] {\\n        return Array.from(this._permissionsList);\\n    }\\n\\n    //#endregion\\n}\\n","properties":[{"name":"audience","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"path","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAudienceConfig","id":"interface-IUiAudienceConfig-2073a234580b37045e8f189d5b72c1af70faf3e88768a5c9a23437f28142ec99b3d3843c346f3c4b14c640e26ef31693b42e87baca1ef927588234b31c5000b3","file":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiAuth0Config {\\n    domain: string;\\n    clientId: string;\\n    authorizationParams: {\\n        // eslint-disable-next-line @typescript-eslint/naming-convention\\n        redirect_uri: string;\\n        audience: string; // e.g. \\"https://entitlement.assentinc.api\\"\\n    };\\n    enabled: boolean;\\n    audiences: IUiAudienceConfig[];\\n}\\n\\nexport interface IUiAudienceConfig {\\n    name: string;\\n    audience: string;\\n    endpoint: string;\\n}\\n\\n","properties":[{"name":"audience","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAuth0Config","id":"interface-IUiAuth0Config-2073a234580b37045e8f189d5b72c1af70faf3e88768a5c9a23437f28142ec99b3d3843c346f3c4b14c640e26ef31693b42e87baca1ef927588234b31c5000b3","file":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiAuth0Config {\\n    domain: string;\\n    clientId: string;\\n    authorizationParams: {\\n        // eslint-disable-next-line @typescript-eslint/naming-convention\\n        redirect_uri: string;\\n        audience: string; // e.g. \\"https://entitlement.assentinc.api\\"\\n    };\\n    enabled: boolean;\\n    audiences: IUiAudienceConfig[];\\n}\\n\\nexport interface IUiAudienceConfig {\\n    name: string;\\n    audience: string;\\n    endpoint: string;\\n}\\n\\n","properties":[{"name":"audiences","deprecated":false,"deprecationMessage":"","type":"IUiAudienceConfig[]","optional":false,"description":"","line":10},{"name":"authorizationParams","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":4},{"name":"clientId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"enabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAuthResponse","id":"interface-IUiAuthResponse-ebdb960c908142949c5279b31d314742a4c9332699825fa7ea32dfb15f381f324dc6d000cc741995d418e4679b141c62e8201f10ea6338ac063178e67b73b4cd","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\n// RxJS\\nimport { Observable, throwError } from \'rxjs\';\\nimport { catchError, map, take, tap } from \'rxjs/operators\';\\n// Ngx\\nimport { CookieService } from \'ngx-cookie-service\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Ngb\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\n// Services\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\n// Interfaces\\n\\n//Enum\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\n\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\ndeclare const Assent: IUiAciSharedSession;\\n\\nexport interface IUiAuthResponse {\\n    session: IUiSession;\\n}\\n\\nexport interface IUiSession {\\n    sessionKey: string;\\n    token: string;\\n    uniqueSessionGuid: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiAuthenticationService {\\n    public authResponse: IUiAuthResponse;\\n    public assentContextKey = \'\';\\n\\n    private _httpClient: HttpClient;\\n    private _cookieDomain: string;\\n    private readonly _loginPath = \'login/password\';\\n\\n    constructor(\\n        private _handler: HttpBackend,\\n        private _router: Router,\\n        private _userService: UiUserService,\\n        private _configService: UiConfigurationService,\\n        private _cookieService: CookieService,\\n        private _modalService: NgbModal,\\n        private _translate: TranslateService,\\n        private _toastService: UiToastService\\n    ) {\\n        // Use HttpBackend so it does not go through http-error-interceptor\\n        this._httpClient = new HttpClient(this._handler);\\n\\n        this._configService.configLoaded$.pipe(take(1)).subscribe(() => {\\n            this._cookieDomain = this.getCookieDomain();\\n\\n            const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n            const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n            const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\n\\n            if (token && sessionKey) {\\n                if (!this.authResponse) {\\n                    this.authResponse = {\\n                        session: {\\n                            sessionKey: \'\',\\n                            token: \'\',\\n                            uniqueSessionGuid: \'\',\\n                        },\\n                    };\\n                }\\n                this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\n                this.loadUserDetails(token);\\n                this.initAssentSession();\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Checks if there is a logged user\\n     *\\n     * @returns\\n     */\\n    public isLoggedIn(): boolean {\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n        const tokenExpirationDate = this.getTokenExpirationDate(token);\\n\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n        const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\n        // debugger\\n        if (token && sessionKey) {\\n            if (!this.authResponse) {\\n                this.authResponse = {\\n                    session: {\\n                        sessionKey: \'\',\\n                        token: \'\',\\n                        uniqueSessionGuid: \'\',\\n                    },\\n                };\\n            }\\n            this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\n            this.loadUserDetails(token);\\n            this.initAssentSession();\\n        }\\n\\n        return !!tokenExpirationDate && Date.now() < tokenExpirationDate;\\n    }\\n\\n    /**\\n     * Checks if the logged-in user is an Assentee\\n     *\\n     * @returns boolean\\n     */\\n    public isAssentee(): boolean {\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n        const email = this.getTokenEmail(token);\\n        return email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\');\\n    }\\n\\n    /**\\n     * Login to CoreAuth\\n     *\\n     * @param email\\n     * @param password\\n     * @returns\\n     */\\n    public loginCoreAuth(email: string, password: string): Observable<IUiAuthResponse> {\\n        return this._httpClient\\n            .post<any>(`${this._configService.appConfig.authApi}/${this._loginPath}`, {\\n                email,\\n                password,\\n            })\\n            .pipe(\\n                map((data: IUiSession) => {\\n                    const response: IUiAuthResponse = {\\n                        session: data,\\n                    };\\n                    this.initializeSession(response);\\n                    return response; // return the response\\n                }),\\n                catchError((error: Error) => {\\n                    if (error instanceof HttpErrorResponse) {\\n                        // Handle back-end error\\n                        console.error(\'Back-end error:\', error.message);\\n                    } else {\\n                        // Handle front-end error\\n                        console.error(\'Front-end error:\', error.message);\\n                    }\\n                    return throwError(() => error);\\n                })\\n            );\\n    }\\n\\n    /**\\n     * Logouts the user and clear its token and details\\n     */\\n    public logout(supressTimeoutMessage: boolean = false) {\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n        this._httpClient.post(`${this._configService.appConfig.authApi}/login/logout/${sessionKey}`, {}).subscribe();\\n        this.clearUserCredentials(supressTimeoutMessage);\\n        this._cookieService.set(this._configService.appConfig.manualLogoutCookieName, \'true\');\\n        this.authResponse = undefined;\\n        this._userService.logout();\\n        this._router.navigate([\'\']);\\n    }\\n\\n    // Initialize Session if UiAuthenticationService.loginCoreAuth() Successfully logged in\\n    private initializeSession(authData: IUiAuthResponse) {\\n        const expirationDate = new Date(this.getTokenExpirationDate(authData.session.token));\\n        const secureCookie = this._configService.appConfig.secureCookie;\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            authData.session.token,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.sessionCookieId,\\n            authData.session.sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.uniqueSessionCookieId,\\n            authData.session.uniqueSessionGuid,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            secureCookie\\n        );\\n\\n        this.loadUserDetails(authData.session.token);\\n\\n        this.initAssentSession();\\n    }\\n\\n    private initAssentSession() {\\n        const options: IUiAciSessionOptions = {\\n            cookieDomain: this._cookieDomain,\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\n            logoutOverride: () => {\\n                this.clearUserCredentials();\\n                this._modalService.dismissAll();\\n                this._router.navigate([\'\']);\\n            },\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\n            onExtendSession: () => {\\n                return \'\';\\n            },\\n            sessionExpiryLogoutCookieRequired: true,\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\n            secureCookie: this._configService.appConfig.secureCookie,\\n        };\\n\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\n        if (document.cookie.match(cookiePattern)) {\\n            Assent.session.initialize(options);\\n        }\\n    }\\n\\n    private getCookieDomain(): string {\\n        let domain = this._configService.appConfig.coreAuthCookieDomain;\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\n            domain = \'localhost\';\\n        }\\n\\n        return domain;\\n    }\\n\\n    private loadUserDetails(token: string) {\\n        const userEmail = this.getTokenEmail(token);\\n        const tokenPayload = this.getTokenPayload(token);\\n        this._userService.selectUser(userEmail, tokenPayload);\\n    }\\n\\n    /**\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n     *\\n     * @param token jwt\\n     * @returns milliseconds\\n     */\\n    private getTokenExpirationDate(token: string): number {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.exp) {\\n            return;\\n        }\\n\\n        return data.exp * 1000;\\n    }\\n\\n    private getTokenEmail(token: string): string {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.sub || !this.authoriseAcpAccess(data.aud, data.sub)) {\\n            return \'\';\\n        }\\n\\n        return data.sub;\\n    }\\n\\n    private authoriseAcpAccess(aud: string[], email: string) {\\n        let result = false;\\n        const currentEnv = this._configService.appConfig.environmentName;\\n\\n        if (!aud || aud.length === 0) {\\n            this.logout(true);\\n        }\\n\\n        if (aud.includes(\'*\') && (email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\'))) {\\n            result = true;\\n        } else if (\\n            !aud.includes(window.location.host) &&\\n            currentEnv !== UiEnvironmentNameEnum.localdev &&\\n            currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\n            currentEnv !== UiEnvironmentNameEnum.devopssandbox\\n        ) {\\n            this.logout(true);\\n        } else {\\n            result = true;\\n        }\\n\\n        return result;\\n    }\\n\\n    private getTokenPayload(token: string): any {\\n        if (!token) {\\n            return;\\n        }\\n\\n        const tokenParts = token.split(\'.\');\\n        if (!tokenParts || tokenParts.length < 2) {\\n            return;\\n        }\\n\\n        try {\\n            const data = JSON.parse(atob(tokenParts[1]));\\n            return data;\\n        } catch (error) {\\n            return;\\n        }\\n    }\\n\\n    private clearUserCredentials(supressTimeoutMessage: boolean = false) {\\n        if (!supressTimeoutMessage) {\\n            this.displayUserLogoutNotification();\\n        }\\n        Assent.session.dispose();\\n        this._cookieService.delete(this._configService.appConfig.authCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.sessionCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.uniqueSessionCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.isConsentGiven, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.isSupplier, \'/\', this._cookieDomain);\\n    }\\n\\n    private displayUserLogoutNotification() {\\n        if (this._cookieService.get(this._configService.appConfig.sessionExpiryLogoutCookieName)) {\\n            this._cookieService.delete(this._configService.appConfig.sessionExpiryLogoutCookieName);\\n            this._translate\\n                .get(\'AUTHENTICATION.SESSION_EXPIRED_LOGOUT\')\\n                .pipe(take(1))\\n                .subscribe((res: string) => {\\n                    this._toastService.show(res, UiToastTypesEnum.danger, { autoHide: false });\\n                });\\n        }\\n    }\\n}\\n","properties":[{"name":"session","deprecated":false,"deprecationMessage":"","type":"IUiSession","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiAuthSubsidiary","id":"interface-IUiAuthSubsidiary-056d7a26a620163b56ee82925134598591fe41fa065bd464aec93feb02386e6ab8b6e057649d2362d7fdf18022d027e8774b418694fbdcb8bbe2541b9322ea6d","file":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable, OnDestroy } from \'@angular/core\';\\nimport { AuthService } from \'@auth0/auth0-angular\';\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\n// eslint-disable-next-line max-len\\nimport { BehaviorSubject, catchError, EMPTY, firstValueFrom, interval, Observable, of, shareReplay, startWith, Subject, switchMap, takeUntil, tap } from \'rxjs\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { IUiAuth0Config } from \'../auth0-config\';\\nimport { CookieService } from \'ngx-cookie-service\';\\n\\nexport interface IUiAudience {\\n    name: string;\\n    audience: string;\\n    endpoint: string;\\n    path?: string;\\n}\\n\\n/**\\n * Represents a subsidiary.\\n *\\n * @see `IAspSubsidiary`\\n */\\nexport interface IUiAuthSubsidiary {\\n    partyGuid: string; // TODO cleanup interfaces\\n    name: string;\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiAuthService implements OnDestroy {\\n    /**\\n     * Indicates whether the permissions have been loaded.\\n     * Can be used to determine if the user is authenticated and has permissions.\\n     *\\n     * @see `UiAuthService.hasAnyPermission()`\\n     * @see `UiAuthService.hasPermissions()`\\n     * @see `UiAuthService.arePermissionsLoaded()`\\n     *\\n     * @example\\n     * ```typescript\\n     * this._authService.permissionsLoaded$.pipe(\\n     *   // wait for the permissions to be loaded\\n     *   filter((loaded) => loaded === true),\\n     *   ...\\n     * ```\\n     * @example\\n     * ```typescript\\n     * this._authService.permissionsLoaded$.subscribe((loaded) => {\\n     *   // wait for the permissions to be loaded\\n     *   if (loaded) {\\n     *     ...\\n     * ```\\n     */\\n    public permissionsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\n    public subsidiariesLoaded$: BehaviorSubject<IUiAuthSubsidiary[]> = new BehaviorSubject(null);\\n\\n    /**\\n     * Gets the active organization GUID.\\n     *\\n     * @returns The active organization GUID, or undefined if not set.\\n     */\\n    public get activeOrgGuid(): string | undefined {\\n        const storedValue = sessionStorage.getItem(\'activeOrgGuid\');\\n        if (storedValue) {\\n            return storedValue;\\n        }\\n        return this._activeOrgGuid;\\n    }\\n    public set activeOrgGuid(value: string) {\\n        this._activeOrgGuid = value;\\n        // set value in local storage for an hour\\n        sessionStorage.setItem(\'activeOrgGuid\', value);\\n    }\\n\\n    /**\\n     * Resets the polling interval for the user authentication status\\n     */\\n    private readonly _pollReset$ = new Subject<void>();\\n\\n    private _activeOrgGuid: string | undefined;\\n    private readonly _subsidiaryExpiration = 3600000; // 1 hour\\n\\n    /**\\n     * Gets the user GUID.\\n     *\\n     * @returns The user GUID as a string or undefined if not available.\\n     */\\n    public get userGuid(): string | undefined {\\n        return this._userGuid;\\n    }\\n    private _userGuid: string | undefined;\\n\\n    /**\\n     * Gets the root organization GUID.\\n     *\\n     * @returns The root organization GUID, or undefined if not set.\\n     */\\n    public get rootOrgGuid(): string | undefined {\\n        return this._rootOrgGuid;\\n    }\\n    public set rootOrgGuid(value: string | undefined) {\\n        this._rootOrgGuid = value;\\n    }\\n    private _rootOrgGuid: string | undefined;\\n    private readonly _pollInterval = 300000; // 5 minutes\\n    private readonly _unsubscribe$ = new Subject<void>();\\n\\n    /**\\n     * Gets the list of audiences.\\n     *\\n     * @returns An array of all audiences.\\n     */\\n    public get audienceList(): IUiAudience[] {\\n        return Array.from(this._audienceList);\\n    }\\n    private _audienceList: Set<IUiAudience> = new Set();\\n\\n    public get subsidiaries(): IUiAuthSubsidiary[] {\\n        return Array.from(this._subsidiaryList);\\n    }\\n    public set subsidiaries(value: any[]) {\\n        this._subsidiaryList = new Set(value);\\n        this.subsidiariesLoaded$.next(Array.from(this._subsidiaryList));\\n    }\\n    private _subsidiaryList: Set<IUiAuthSubsidiary> = new Set();\\n\\n    private readonly _config: IUiAuth0Config;\\n\\n    /**\\n     * @private\\n     * Accessible through the getPermissionsList and hasPermission methods\\n     */\\n    private _permissionsList: Set<string> = new Set();\\n\\n    private _helper = new JwtHelperService();\\n\\n    constructor(\\n        private readonly _auth0Service: AuthService,\\n        private readonly _configurationService: UiConfigurationService,\\n        private readonly _cookieService: CookieService,\\n    ) {\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\n\\n        // Clear audiences\\n        this._audienceList.clear();\\n        const audiences = this._config.audiences;\\n        if (!audiences || audiences.length === 0) {\\n            console.error(\'No audiences defined in the configuration.\');\\n        }\\n        // Add audiences to the list\\n        audiences.forEach((audience) => {\\n            const existingAudience = Array.from(this._audienceList)\\n                .find((aud) => (audience.name === aud.name) || (audience.audience === aud.audience));\\n            if (existingAudience) {\\n                console.warn(`Warning -> Duplicate audience found.`);\\n            } else {\\n                this._audienceList.add(audience);\\n            }\\n        });\\n    }\\n\\n    public ngOnDestroy() {\\n        // Clear permissions\\n        this._permissionsList.clear();\\n        this._subsidiaryList.clear();\\n        this._activeOrgGuid = undefined;\\n        // Set observables to null\\n        this.permissionsLoaded$.next(null);\\n        this._unsubscribe$.next();\\n        this._unsubscribe$.complete();\\n    }\\n\\n    //#region Init\\n\\n    /**\\n     * Initializes the application by loading permissions if the user is authenticated.\\n     *\\n     * @returns `Promise<boolean>` A promise that resolves to `true` if the initialization is successful, otherwise `false`.\\n     * @throws {Error} If an error occurs during the initialization process.\\n     */\\n    public async initializeApp(): Promise<any> {\\n        try {\\n            // Verify that the user is logged in\\n            const isAuthenticated = await this.isUserAuthenticated();\\n            if (!isAuthenticated) {\\n                console.warn(\'Warning -> User not authenticated.\');\\n                this._auth0Service.logout();\\n                this._auth0Service.loginWithRedirect();\\n                // Stop execution of the method if the user is not authenticated\\n                return false;\\n            }\\n\\n            this._auth0Service.user$.subscribe((user) => {\\n                this._cookieService.set(this._configurationService.appConfig.emailCookieId, user.email);\\n            });\\n\\n            // Reset the permission and init observables\\n            this.permissionsLoaded$.next(false);\\n\\n            // Clear permission\\n            this._permissionsList.clear();\\n            this._subsidiaryList.clear();\\n\\n            // Get entitlement token (cachemode = off)\\n            const token = await this.getDecodedTokenByAudience(this._config.authorizationParams.audience, \'off\');\\n            if (token) {\\n                // Set userguid\\n                this._userGuid = token.user_guid;\\n                // Set rootorg\\n                this._rootOrgGuid = token.root_org_guid;\\n\\n                this.addPermissionsFromDecodedToken(token);\\n\\n                //await this.loadPermissions().then(() => {\\n                this.permissionsLoaded$.next(true);\\n                return true;\\n                //});\\n            } else {\\n                console.error(\'No token available for audience.\');\\n                // Return false on error\\n                return false;\\n            }\\n        } catch (error) {\\n            console.error(\'Error initializing app.\');\\n            // Return false on error\\n            return false;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    /**\\n     * Checks if the user is authenticated.\\n     *\\n     * @returns A promise that resolves to a boolean indicating whether the user is authenticated or not.\\n     */\\n    public async isUserAuthenticated(): Promise<boolean> {\\n        try {\\n            return firstValueFrom(this._auth0Service.isAuthenticated$).then((isAuthenticated) => {\\n                return isAuthenticated;\\n            });\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Polls for an access token at a specified interval.\\n     *\\n     * @returns An observable that emits the access token as a string.\\n     */\\n    public pollAccessToken(): Observable<string> {\\n        return this._pollReset$.pipe(\\n            startWith(0),\\n            switchMap(() =>\\n                interval(this._pollInterval).pipe(\\n                    takeUntil(this._pollReset$),\\n                    switchMap(() =>\\n                        this._auth0Service.getAccessTokenSilently().pipe(\\n                            catchError((error) => {\\n                                console.error(\'Error fetching access token:\', error);\\n                                this._auth0Service.logout();\\n                                this._auth0Service.loginWithRedirect();\\n                                // Complete the observable after redirecting\\n                                return EMPTY;\\n                            })\\n                        )\\n                    )\\n                )\\n            ),\\n            takeUntil(this._unsubscribe$),\\n            shareReplay(1)\\n        );\\n    }\\n\\n    /**\\n     * @private\\n     * Returns the subsidiary list.\\n     *\\n     * @returns An array of IUiAuthSubsidiary objects representing the subsidiary list.\\n     */\\n    private get subsidiaryList(): IUiAuthSubsidiary[] {\\n        return Array.from(this._subsidiaryList);\\n    }\\n\\n    //#region Audience\\n\\n    /**\\n     * @private\\n     * Gets the exact audience with the specified name.\\n     *\\n     * @param nameOrPath The name of the audience to get.\\n     * @returns The audience with the specified name, or undefined if not found.\\n     */\\n    private getAudience(nameOrPath: string): IUiAudience | undefined {\\n        let audienceMatch = this.audienceList.find((audience) => audience.name === nameOrPath);\\n        if (!audienceMatch) {\\n            audienceMatch = this.audienceList.find((audience) => audience.audience === nameOrPath);\\n        }\\n        return audienceMatch;\\n    }\\n\\n    /**\\n     * Retrieves the audience from the given path.\\n     *\\n     * @param path - The path to check for audience.\\n     * @returns The audience if a matching endpoint is found, otherwise null.\\n     */\\n    public getAudienceFromPath(path: string): string {\\n        // First check for an exact match to the API endpoint\\n        const matchingAudience = this.audienceList.find((audience) => {\\n            const matchPath = path.includes(audience.endpoint);\\n            return matchPath;\\n        });\\n        return matchingAudience ? matchingAudience.audience : null;\\n    }\\n\\n    //#endregion\\n\\n    //#region Tokens\\n\\n    /**\\n     * Retrieves a token for the specified audience.\\n     *\\n     * @param audienceName - The name of the audience.\\n     * @param cacheMode - The cache mode for the token. Defaults to \'on\'.\\n     * @returns An Observable that emits the token string or undefined.\\n     */\\n    public getToken(audienceName: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\n        try {\\n            // Verify that the user is logged in\\n            if (!this._auth0Service.isAuthenticated$) {\\n                console.error(\' Error -> User not authenticated.\');\\n                return of(undefined);\\n            }\\n\\n            // Request a new JWT if the current one is not valid\\n            const aud = this.getAudience(audienceName);\\n            if (!aud) {\\n                console.error(\' Error -> Audience not found.\');\\n                return of(undefined);\\n            }\\n\\n            return this.getTokenByAudience(aud.audience);\\n        } catch (error) {\\n            console.error(\'Error in getToken.\');\\n            return of(undefined);\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves a token by audience.\\n     *\\n     * @param audience - The audience for which to retrieve the token.\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\n     * @returns An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.\\n     */\\n    private getTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\n        return this._auth0Service.getAccessTokenSilently({\\n            authorizationParams: {\\n                audience,\\n                activeOrgGuid: this._activeOrgGuid,\\n            },\\n            cacheMode,\\n        }).pipe(\\n            tap(() => {\\n            // Emit a value to reset the polling interval after getting the token\\n                this._pollReset$.next();\\n            })\\n        );\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves the decoded token for a given audience.\\n     *\\n     * @param audience - The audience for which to retrieve the token.\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found.\\n     */\\n    private async getDecodedTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\n        try {\\n            const token = await firstValueFrom(this.getTokenByAudience(audience, cacheMode));\\n            if (!token) {\\n                return undefined;\\n            }\\n            // Decode the token\\n            const decodedToken = this._helper.decodeToken(token);\\n            // Return the decoded token\\n            return decodedToken;\\n        } catch (error) {\\n            console.error(\'Error in getDecodedTokenByAudience.\');\\n            return undefined;\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves and decodes a token with the specified name.\\n     *\\n     * @param name - The name of the token to retrieve and decode.\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.\\n     */\\n    public async getDecodedToken(name: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\n        try {\\n            const token = await firstValueFrom(this.getToken(name, cacheMode));\\n            if (!token) {\\n                return undefined;\\n            }\\n\\n            // Decode the token\\n            const decodedToken = this._helper.decodeToken(token);\\n            // Return the decoded token\\n            return decodedToken;\\n        } catch (error) {\\n            console.error(\'Error in getDecodedToken.\');\\n            return undefined;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    //#region Permissions\\n\\n    /**\\n     * @private\\n     * Adds permissions from the decoded token.\\n     *\\n     * @param decodedToken - The decoded token containing permissions.\\n     */\\n    private addPermissionsFromDecodedToken(decodedToken: any) {\\n        try {\\n            if (decodedToken && decodedToken.permissions) {\\n                // Add permissions to the list\\n                this.addPermissions(decodedToken.permissions);\\n            }\\n        } catch (error) {\\n            console.error(\'Error adding permissions from decoded token.\');\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Loads permissions from the user\'s token.\\n     *\\n     * @returns `Promise<void>` A promise that resolves when the permissions have been loaded.\\n     */\\n    private async loadPermissions(): Promise<void> {\\n        try {\\n            await Promise.all(\\n                Array.from(this._audienceList)\\n                    .map((audience) => {\\n                        return this.getDecodedToken(audience.name); // not by audience\\n                    })\\n            ).then((tokens) => {\\n                if (tokens.length > 0) {\\n                    tokens.forEach((token) => {\\n                        // Load permissions from the token\\n                        this.addPermissionsFromDecodedToken(token);\\n                    });\\n                }\\n            });\\n        } catch (error) {\\n            console.error(\'Error loading permissions.\');\\n            throw error;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    /**\\n     * Checks if a specific permission exists.\\n     *\\n     * @param permission The permission to check.\\n     * @returns True if the permission exists, false otherwise.\\n     */\\n    public hasPermission(permission: string): boolean {\\n        // Check for an exact permission match\\n        if (this._permissionsList.has(permission)) {\\n            return true;\\n        } else {\\n            // Check for a fuzzy match on the audience portion of the permission\\n            const permissionFound = Array.from(this._permissionsList).find((p) => p.includes(permission));\\n            if (permissionFound) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * Checks if all specified permissions exist.\\n     *\\n     * @param permissions The permissions to check.\\n     * @returns True if all permissions exist, false otherwise.\\n     */\\n    public hasPermissions(permissions: string[]): boolean {\\n        return permissions.every((permission) => this.hasPermission(permission));\\n    }\\n\\n    /**\\n     * Checks if any of the specified permissions exist.\\n     *\\n     * @param permissions The permissions to check.\\n     * @returns True if any permission exists, false otherwise.\\n     */\\n    public hasAnyPermission(permissions: string[]): boolean {\\n        return permissions.some((permission) => this.hasPermission(permission));\\n    }\\n\\n    /**\\n     * Checks if the permissions have been loaded.\\n     *\\n     * @returns True if the permissions have been loaded, false otherwise.\\n     */\\n    public arePermissionsLoaded(): boolean {\\n        return this.permissionsLoaded$.getValue();\\n    }\\n\\n    /**\\n     * Adds a new permission if it does not already exist.\\n     *\\n     * @param permission The permission to add.\\n     */\\n    private addPermission(permission: string): void {\\n        this._permissionsList.add(permission);\\n    }\\n\\n    /**\\n     * Adds multiple permissions.\\n     *\\n     * @param permissions The permissions to add.\\n     */\\n    private addPermissions(permissions: string[]): void {\\n        permissions.forEach((permission) => this.addPermission(permission));\\n    }\\n\\n    /**\\n     * Removes a specific permission.\\n     *\\n     * @param permission The permission to remove.\\n     */\\n    private removePermission(permission: string): void {\\n        this._permissionsList.delete(permission);\\n    }\\n\\n    /**\\n     * Gets the list of all permissions.\\n     *\\n     * @returns An array of all permissions.\\n     */\\n    public getPermissionsList(): string[] {\\n        return Array.from(this._permissionsList);\\n    }\\n\\n    //#endregion\\n}\\n","properties":[{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"partyGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24}],"indexSignatures":[],"kind":165,"description":"<p>Represents a subsidiary.</p>\\n<p>See <code>IAspSubsidiary</code></p>\\n","rawdescription":"\\n\\nRepresents a subsidiary.\\n\\nSee `IAspSubsidiary`\\n","methods":[]},{"name":"IUiClientSideFilter","id":"interface-IUiClientSideFilter-a3a1dbfd1fde40192cbec9acbdd6ac92abc53ae629b0e977e1f9d408bfe33f45dd46390cc28773c74e788026ed2bd847949ee0eb30d909f8100ef9ec143de1bd","file":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiFilterModel {\\n    [colId: string]: IUiServerSideFilter | IUiClientSideFilter;\\n}\\n\\nexport interface IUiServerSideFilter {\\n    filterType: string;\\n    type: string;\\n    filter: string;\\n}\\n\\nexport interface IUiClientSideFilter {\\n    filterType: string;\\n    values: string[];\\n}\\n","properties":[{"name":"filterType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"values","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":13}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiComboboxRendererParams","id":"interface-IUiComboboxRendererParams-49f42bd17a26fe721f42fe6f1591d1d79667a5b7afac3d75f9e40ee73ebe10e38c37f7f1a32e8e6dc6f6ba61d0664b6b3746b613f1445d42393569ac3c8fec47","file":"libs/ui/src/lib/modules/grid/components/combobox-renderer/interface/combobox-renderer-params.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ICellRendererParams } from \'ag-grid-enterprise\';\\nimport { IUiDropdownPlusOption } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\n\\n/**\\n * Interface for the combobox renderer params coming in from Ag-Grid\\n */\\nexport interface IUiComboboxRendererParams extends ICellRendererParams {\\n    options?: IUiDropdownPlusOption[];\\n    maxItemsToShow?: number;\\n    defaultValue?: IUiDropdownPlusOption[];\\n    placeholderValue?: string;\\n    multiSelect?: boolean;\\n    showSearch?: boolean;\\n    showSelectClearBtns?: boolean;\\n}\\n","properties":[{"name":"defaultValue","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":true,"description":"","line":10},{"name":"maxItemsToShow","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":9},{"name":"multiSelect","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12},{"name":"options","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":true,"description":"","line":8},{"name":"placeholderValue","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11},{"name":"showSearch","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"showSelectClearBtns","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14}],"indexSignatures":[],"kind":165,"description":"<p>Interface for the combobox renderer params coming in from Ag-Grid</p>\\n","rawdescription":"\\n\\nInterface for the combobox renderer params coming in from Ag-Grid\\n","methods":[],"extends":"ICellRendererParams"},{"name":"IUiCompanySearchItem","id":"interface-IUiCompanySearchItem-ff279e0ef8538221cb688a8d23078c0aa4828b3f05b3e55f852a579e50710ef1ecf94a1c0f95142fe4b431e11b721bd9726981d2bb567b17f934d7bf9295b943","file":"libs/ui/src/lib/modules/global-search/interfaces/company-search-item.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiCompanySearchItem {\\n    companyId: number;\\n    companyName: string;\\n    domainNames: string[];\\n    companyTradeNames: string[];\\n    rootCompanyName: string;\\n}\\n","properties":[{"name":"companyId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"companyName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"companyTradeNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":5},{"name":"domainNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":4},{"name":"rootCompanyName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiCompanySearchResponse","id":"interface-IUiCompanySearchResponse-0f65f41e1ced5eb49c28f6799a37c07f3b3a9751dfef000d6330eabb5ac8c9aab63b50d95f4faed4edc6a7bf8c5ee511ddcf31ffd67d94f0e6aac4bea0ca7b0a","file":"libs/ui/src/lib/modules/global-search/interfaces/company-search-response.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiCompanySearchItem } from \'./company-search-item.interface\';\\n\\nexport interface IUiCompanySearchResponse {\\n    companySearchResult: IUiCompanySearchItem[];\\n    totalCount: number;\\n}\\n","properties":[{"name":"companySearchResult","deprecated":false,"deprecationMessage":"","type":"IUiCompanySearchItem[]","optional":false,"description":"","line":4},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiConsentResponse","id":"interface-IUiConsentResponse-0b9594301159fdb14d8b2f29d211281cb1f48c652d88c71c9752e53280b04cfc8b3b508f5141a3230924b61c9f32e8590842a6fcb3fdf2f79af3105a6cd6566d","file":"libs/ui/src/lib/interfaces/IUiConsentResponse.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiConsentResponse {\\n    consentGiven: boolean;\\n    responseCode: number;\\n}\\n","properties":[{"name":"consentGiven","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":2},{"name":"responseCode","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiConsentService","id":"interface-IUiConsentService-4bf5be0b51fbd12a7dc11955d72a7a73bde979a66b6f1415e22a9cbd96ad2d88646e79d58296b732cac5677f9de57e67019592134e88ed28f0ae5b8da8759369","file":"libs/ui/src/lib/interfaces/consent-service.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiConsentResponse } from \'./IUiConsentResponse\';\\nimport { Observable } from \'rxjs\';\\n\\nexport interface IUiConsentService {\\n    getReturnUrl(): string;\\n    getConsentStatus(): Observable<IUiConsentResponse>;\\n    giveConsent(email: string): Observable<IUiConsentResponse>;\\n    logout(): void; // This method is required as a workaround for the shared lib consent module\\n}\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"getConsentStatus","args":[],"optional":false,"returnType":"Observable<IUiConsentResponse>","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":""},{"name":"getReturnUrl","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":""},{"name":"giveConsent","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IUiConsentResponse>","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":""}]},{"name":"IUiContactRelationship","id":"interface-IUiContactRelationship-42e0e85197adcc5b84c03f269301a86372cf196895b9dab5a4fdd7280042fe7e78be3fae4ea1339b120b962737f71199a5f3ffd51d4f18a3b8266fd54f743377","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-relationship.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiOrganization, IUiRegulationShort } from \'.\';\\n\\nexport interface IUiContactRelationship {\\n    contactGuid: string;\\n    organization: IUiOrganization;\\n    regulations: IUiRegulationShort[];\\n}\\n","properties":[{"name":"contactGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"organization","deprecated":false,"deprecationMessage":"","type":"IUiOrganization","optional":false,"description":"","line":6},{"name":"regulations","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort[]","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiContactRole","id":"interface-IUiContactRole-f8c5b1c392b22886dc5ec1b7db6c604d150cae8ef0a838fde9dc92e1ede30686d297f8c2699460cad3299b7d0fdee50a36fc74635303d5ba27766fb7640a38af","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-role.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiOrganization } from \'./organization.interface\';\\n\\nexport interface IUiContactRole {\\n    organizations: IUiOrganization[];\\n}\\n","properties":[{"name":"organizations","deprecated":false,"deprecationMessage":"","type":"IUiOrganization[]","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiCsvParserConfig","id":"interface-IUiCsvParserConfig-006eb519a3cbf456dd7927bc166a9a8b2db88e8852b97149439bfb5734ef562053db423b04144a54bc19dafebe2c8c16660f7c2b67b94eb0df81bcb775903552","file":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\n// Rxjs\\nimport { Observable, Observer } from \'rxjs\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiCsvParserService {\\n    private _defaultConfig: IUiCsvParserConfig = {\\n        header: true,\\n        delimiter: \',\',\\n    };\\n\\n    public parse(csvFile: File, config: IUiCsvParserConfig): Observable<Array<any> | string> {\\n        config = {\\n            ...this._defaultConfig,\\n            ...config,\\n        };\\n\\n        const parser$ = new Observable((observer: Observer<Array<any> | string>) => {\\n            try {\\n                if (!this.isCsvFile(csvFile)) {\\n                    observer.error(\'NOT_A_CSV_FILE\');\\n                    return;\\n                }\\n\\n                const reader = new FileReader();\\n                reader.readAsText(csvFile);\\n\\n                reader.onload = () => {\\n                    const csvData = reader.result;\\n\\n                    if (!csvData) {\\n                        observer.error(\'EMPTY_FILE\');\\n                        return;\\n                    }\\n\\n                    const csvRecordsArray = this.csvStringToArray((csvData as string).trim(), config.delimiter);\\n                    const headersRow = this.getHeaderArray(csvRecordsArray);\\n                    const csvRecords = this.getDataRecordsArrayFromCsvFile(csvRecordsArray, headersRow.length, config);\\n\\n                    observer.next(csvRecords);\\n                    observer.complete();\\n                };\\n\\n                reader.onerror = () => {\\n                    observer.error(\'BAD_CSV_DATA_FORMAT\');\\n                };\\n            } catch (error) {\\n                observer.error(\'UNKNOWN_ERROR\');\\n            }\\n        });\\n\\n        return parser$;\\n    }\\n\\n    public csvStringToArray(csvDataString: string, delimiter: string) {\\n        const regexPattern = new RegExp(\\n            `(\\\\\\\\${delimiter}|\\\\\\\\r?\\\\\\\\n|\\\\\\\\r|^)(?:\\\\\\"((?:\\\\\\\\\\\\\\\\.|\\\\\\"\\\\\\"|[^\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\"|([^\\\\\\\\${delimiter}\\\\\\"\\\\\\\\r\\\\\\\\n]*))`,\\n            \'gi\'\\n        );\\n        const resultCsv = [[]];\\n        let matchedPatternArray = regexPattern.exec(csvDataString);\\n\\n        while (matchedPatternArray) {\\n            if (matchedPatternArray[1].length && matchedPatternArray[1] !== delimiter) {\\n                resultCsv.push([]);\\n            }\\n\\n            const cleanValue = matchedPatternArray[2]\\n                ? matchedPatternArray[2].replace(new RegExp(\'[\\\\\\\\\\\\\\\\\\"](.)\', \'g\'), \'$1\')\\n                : matchedPatternArray[3];\\n            resultCsv[resultCsv.length - 1].push(cleanValue);\\n            matchedPatternArray = regexPattern.exec(csvDataString);\\n        }\\n\\n        return resultCsv;\\n    }\\n\\n    public getDataRecordsArrayFromCsvFile(csvRecordsArray: any, headerLength: number, config: IUiCsvParserConfig) {\\n        const dataArr = [];\\n        const headersArray = csvRecordsArray[0];\\n        const startingRowToParseData = config.header ? 1 : 0;\\n\\n        for (let i = startingRowToParseData; i < csvRecordsArray.length; i++) {\\n            const data = csvRecordsArray[i];\\n\\n            if (data.length === headerLength && config.header) {\\n                const csvRecord = {};\\n\\n                for (let j = 0; j < data.length; j++) {\\n                    if (data[j] === undefined || data[j] === null) {\\n                        csvRecord[headersArray[j]] = \'\';\\n                    } else {\\n                        csvRecord[headersArray[j]] = data[j].trim();\\n                    }\\n                }\\n                dataArr.push(csvRecord);\\n            } else {\\n                dataArr.push(data);\\n            }\\n        }\\n\\n        return dataArr;\\n    }\\n\\n    public isCsvFile(file: File) {\\n        return file.name.toLowerCase().endsWith(\'.csv\');\\n    }\\n\\n    public getHeaderArray(csvRecordsArr: any) {\\n        const headers = csvRecordsArr[0];\\n        const headerArray = [];\\n\\n        for (const header of headers) {\\n            headerArray.push(header);\\n        }\\n\\n        return headerArray;\\n    }\\n}\\n\\ninterface IUiCsvParserConfig {\\n    header?: boolean;\\n    delimiter?: string;\\n}\\n","properties":[{"name":"delimiter","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":126},{"name":"header","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":125}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiCustomHeaderParams","id":"interface-IUiCustomHeaderParams-e8cf101508e2ae252fb4ffe12c9e6837eb2adb2c0fe52620904221424bd0dc42d3c6dc3f124468915e578ebd17b1ec3f77d7fbb04f6ed4799371dd32b20b1681","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\n\\nexport interface IUiCustomHeaderParams {\\n    menuIcon: string;\\n}\\n\\nexport interface IUiActionBtn {\\n    icon?: string;\\n    text: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    clicked: (params: IUiActionCellRendererParams) => void;\\n}\\n\\nexport interface IUiActionBtnConfig {\\n    itemId: string;\\n    rowId: string;\\n    inlineIcons?: boolean;\\n    showIconsInMenu?: boolean;\\n    showLabel?: boolean;\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\n}\\n\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\n\\nexport interface IUiActionDivider {\\n    divider?: boolean;\\n    visible?: boolean;\\n}\\n\\nexport interface IUiSelectionChangeParams {\\n    gridId: string;\\n    selectedRows: RowNode[];\\n}\\n\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\n    gridId: any;\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n}\\n","properties":[{"name":"menuIcon","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiDropdownConfig","id":"interface-IUiDropdownConfig-56b96264645a8702ce6f5135fc7fb9a4648f5f8a865e4ccc1daf2aa300afc6897df4d9c8b5fd3786834f32caef2ad52554bf756c779a81b204c38e5672ae288a","file":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { IUiPageHeaderItem } from \'@lib/modules/layout/services/page-header-service/page-header.service\';\\n\\nexport interface IUiDropdownConfig {\\n    id: string;\\n    options: Array<IUiPageHeaderItem>;\\n    selectedItem: IUiPageHeaderItem;\\n    disabled: boolean;\\n    type?: string;\\n    tooltip?: string;\\n    allCaps?: boolean;\\n    placeHolderText?: string;\\n    onChange?: (e: any) => void;\\n}\\n\\n@Component({\\n    selector: \'ui-header-drop-down\',\\n    templateUrl: \'./drop-down.component.html\',\\n    styleUrls: [\'./drop-down.component.scss\'],\\n})\\nexport class UiHeaderDropDownComponent implements OnInit {\\n    @Input() public config: IUiDropdownConfig = {} as IUiDropdownConfig;\\n    public isOpen = false;\\n\\n    constructor() {}\\n\\n    public ngOnInit(): void {\\n        if (this.config !== undefined && this.config.selectedItem === undefined && this.config.options !== undefined) {\\n            this.config.selectedItem = this.config.options[0];\\n        }\\n    }\\n\\n    public onOpenChange(state: boolean) {\\n        this.isOpen = state;\\n    }\\n\\n    public changeSelectedOption(option: any) {\\n        this.config.selectedItem = option;\\n        if (this.config.onChange !== undefined) {\\n            this.config.onChange(option);\\n        }\\n    }\\n}\\n","properties":[{"name":"allCaps","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":11},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"onChange","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":13},{"name":"options","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":6},{"name":"placeHolderText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"selectedItem","deprecated":false,"deprecationMessage":"","type":"IUiPageHeaderItem","optional":false,"description":"","line":7},{"name":"tooltip","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiDropdownOption","id":"interface-IUiDropdownOption-f5b10afe11def786ad3907aef62ba6ca45e23acb7aa8fca27bf97effe497d777f8bc52d13a55800dec2c8629ae9c0efb6d38d2c9433eea681734c6f53befeb4b","file":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/interfaces/dropdown.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiDropdownOption {\\n    id: string;\\n    label: string;\\n    disabled: boolean;\\n    /**\\n     * This value is read into the form\\n     */\\n    readValue: any;\\n    /**\\n     * Note: \'value\' is used in UiDropdownPlusComponent selected state on options\\n     */\\n    value: boolean;\\n}\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"readValue","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"<p>This value is read into the form</p>\\n","line":8,"rawdescription":"\\n\\nThis value is read into the form\\n"},{"name":"value","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>Note: &#39;value&#39; is used in UiDropdownPlusComponent selected state on options</p>\\n","line":12,"rawdescription":"\\n\\nNote: \'value\' is used in UiDropdownPlusComponent selected state on options\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiDropdownPlusOption","id":"interface-IUiDropdownPlusOption-a745bf58bb25d1f2063d2a3215116f4ee5b1b2a2206c8f9dea8b6d0639f07ccd43f62b4716ad4a970031b137c30e9434579b8d603f66c7f1b7140a9415870499","file":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n    AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input,\\n    OnInit, Output, QueryList, ViewChild, ViewChildren\\n} from \'@angular/core\';\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\n\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { debounceTime } from \'rxjs/operators\';\\n\\nexport interface IUiDropdownPlusOption {\\n    id: string;\\n    label: string;\\n    disabled: boolean;\\n    value: boolean;\\n    data?: unknown;\\n}\\n@Component({\\n    selector: \'ui-dropdown-plus\',\\n    templateUrl: \'./dropdown-plus.component.html\',\\n    styleUrls: [\'./dropdown-plus.component.scss\'],\\n})\\nexport class UiDropdownPlusComponent implements OnInit {\\n    @Input() public externalTriggerEleId: string;\\n    @Input() public id: string;\\n\\n    @Input() public set label(label: string) {\\n        this._label = label;\\n        this.triggerLabel = label;\\n        setTimeout(() => {\\n            this.updateTriggerLabel();\\n        });\\n    };\\n    public get label() {\\n        return this._label;\\n    }\\n\\n    @Input() public set setOptions(options: IUiDropdownPlusOption[]) {\\n        this.options = options;\\n        this._optionsBackup = this.options;\\n        this.updateTriggerLabel();\\n    };\\n    @Input() public multiSelect = true;\\n    @Input() public singleSelectAutoClose = true;\\n    @Input() public noBorder = false;\\n    @Input() public view = \'button\';\\n    @Input() public animIcon = true;\\n    @Input() public icon = \'bi-filter\';\\n    @Input() public maxItemsShown = 5;\\n    @Input() public small = false;\\n    @Input() public showSearch = false;\\n    @Input() public showSelectClearBtns = false;\\n    @Input() public showCheckbox = true;\\n    @Input() public disabled = false;\\n    @Input() public loading = false;\\n    @Input() public paddingTop = 0;\\n\\n    @Output() public selectionChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public openChange: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public triggerClicked: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public searchChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public optionsCleared: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @ViewChild(\'nbgDropdown\') public nbgDropdown: NgbDropdown;\\n    @ViewChild(\'ngbDropPanel\') public ngbDropPanel: ElementRef;\\n    @ViewChildren(\'menuItemsRef\') public menuItemsRef: QueryList<ElementRef>;\\n\\n    public options: IUiDropdownPlusOption[];\\n    public selectedOptions: IUiDropdownPlusOption[] = [];\\n    public searchText = \'\';\\n    public triggerLabel = \'\';\\n    public disabledItemsLength = 0;\\n    public menuOpen = false;\\n    public optionTooltips = [];\\n    public tooltipText = \'\';\\n    public iconClass = [\'anim\', \'bi-caret-down-fill\'];\\n    public focusIndex = -1;\\n    public selectedList: IUiDropdownPlusOption[] = [];\\n\\n    private _label = \'\';\\n    private _hilighted: HTMLElement;\\n    private _optionsBackup;\\n    private _loading = new BehaviorSubject<boolean>(false);\\n\\n    constructor() { }\\n\\n    public ngOnInit(): void {\\n        this.triggerLabel = this._label;\\n\\n        this._optionsBackup = this.options;\\n\\n        this._loading.pipe(debounceTime(500)).subscribe((value) => {\\n            this.loading = false;\\n        });\\n    }\\n\\n    public onClickedOutside(e) {\\n        // console.log(\'onClickedOutside\')\\n    }\\n\\n    public setFocusOnFirstMenuItem(): void {\\n\\n        setTimeout(() => {\\n            if (document.getElementById(this.id + \'_searchTextInput\') !== null) {\\n                document.getElementById(this.id + \'_searchTextInput\').focus();\\n            }\\n        }, 200);\\n    }\\n\\n    public clearHilighted() {\\n        this.focusIndex = -1;\\n        if (this._hilighted !== undefined) {\\n\\n            this._hilighted.classList.remove(\'hilighted-item\');\\n        }\\n    }\\n\\n    public unSelectItem(itemId: string) {\\n        this.options.find((item) => { return item.id === itemId; }).value = false;\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    /**\\n     * This will fetch the current selected list of items. It will use a snapshot of the options and compare the\\n     *   stored selected items with the current ones.\\n     *\\n     * @returns IUiDropdownPlusOption[] - The list of selected items\\n     */\\n    public getSelectedItems() {\\n\\n        // Get the selected items by comparing the options with the backup/snapshot\\n        if (this._optionsBackup !== undefined) {\\n            this.selectedList = this._optionsBackup.filter((name) => {\\n                return name.value === true;\\n            });\\n        }\\n\\n        return this.selectedList;\\n    }\\n\\n    public clearSelection() {\\n        this.options.forEach((option) => { option.value = false; });\\n        this.clearHilighted();\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    public clearSearch() {\\n        this.searchText = \'\';\\n        this.options = this._optionsBackup;\\n    }\\n\\n    public updateTriggerLabel(selectionChanged = true) {\\n\\n        setTimeout(() => {\\n            const prevSelectedOptions = this.selectedOptions;\\n\\n            this.selectedOptions = this._optionsBackup.filter((name) => {\\n                return name.value === true;\\n            });\\n\\n            if (this.selectedOptions.length === 0) {\\n                this.triggerLabel = this._label;\\n            }\\n            else if (this.selectedOptions.length === 1) {\\n                this.triggerLabel = this.selectedOptions[0].label;\\n            }\\n            else {\\n                this.triggerLabel = this._label + ` (${this.selectedOptions.length})`;\\n            }\\n\\n            this.disabledItemsLength = this._optionsBackup.filter((name) => {\\n                return name.disabled === true;\\n            }).length;\\n        }, 100);\\n\\n    }\\n\\n    public triggerClick() {\\n        if (this.disabled === false && this.nbgDropdown !== undefined && this.menuOpen === false) {\\n            this.nbgDropdown.open();\\n        }\\n\\n        const triggerEle = document.getElementById(this.externalTriggerEleId);\\n\\n        if (this.externalTriggerEleId !== undefined && this.externalTriggerEleId !== null) {\\n\\n            if (triggerEle !== undefined && triggerEle !== null) {\\n\\n                const dropPanelEle = document.getElementById(this.id + \'_drop-panel\');\\n\\n                dropPanelEle.style.top = triggerEle.offsetTop + triggerEle.offsetHeight + this.paddingTop + \'px\';\\n                dropPanelEle.style.left = triggerEle.offsetLeft + \'px\';\\n            }\\n        }\\n\\n        this.triggerClicked.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    public onOptionFocus(e) {\\n        this.showTooltip(e);\\n    }\\n\\n    public showTooltip(e) {\\n\\n        const ele: HTMLElement = e.target.getElementsByClassName(\'text-truncate\')[0];\\n\\n        if (ele.scrollWidth > ele.offsetWidth) {\\n            this.tooltipText = e.target.innerText;\\n        }\\n        else {\\n            this.tooltipText = \'\';\\n        }\\n    }\\n\\n    public isElementVisible(el, holder) {\\n        holder = holder || document.body;\\n        const { top, bottom, height } = el.getBoundingClientRect();\\n        const holderRect = holder.getBoundingClientRect();\\n\\n        if (bottom > holderRect.bottom) {\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    }\\n\\n    public onOpenChange(open: boolean) {\\n\\n        if (this.disabled === false) {\\n            this.menuOpen = open;\\n\\n            const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\n            const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\n\\n            if (dropPanel !== null) {\\n                dropPanel.style.visibility = \'hidden\';\\n                optionsPanel.style.maxHeight = \'0\';\\n\\n                if (open === true) {\\n\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\n                    this.focusIndex = -1;\\n                    this.setFocusOnFirstMenuItem();\\n                    setTimeout(() => {\\n                        this.checkHeight();\\n                        dropPanel.style.visibility = \'visible\';\\n                        if (optionsPanel !== null) {\\n                            document.getElementById(this.id + \'_options-panel\').focus();\\n                        }\\n                    }, 50);\\n                }\\n                else {\\n                    this.clearHilighted();\\n                    this.clearSearch();\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\n                }\\n            }\\n        }\\n        else {\\n            this.menuOpen = false;\\n        }\\n    }\\n\\n    public checkWidth(element) {\\n\\n        if (element.scrollWidth > element.offsetWidth) {\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    }\\n\\n    public checkHeight() {\\n\\n        const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\n        const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\n\\n        if (optionsPanel !== null && dropPanel !== null && this.options.length !== 0) {\\n            dropPanel.style.visibility = \'hidden\';\\n            const menuItemHeight = Math.ceil(this.menuItemsRef.get(0).nativeElement.getBoundingClientRect().height);\\n\\n            if (this.options.length < this.maxItemsShown) {\\n                optionsPanel.style.height = String(menuItemHeight * this.options.length + \'px\');\\n            }\\n            else {\\n                optionsPanel.style.height = String(menuItemHeight * this.maxItemsShown + \'px\');\\n            }\\n\\n            optionsPanel.style.maxHeight = String(menuItemHeight * this.maxItemsShown + \'px\');\\n            dropPanel.style.visibility = \'visible\';\\n        }\\n    }\\n\\n    public onSearchChange() {\\n\\n        this.focusIndex = -1;\\n        if (this.searchText.length !== 0) {\\n            const tempSearch = this.searchText.toLowerCase();\\n            const temp = this._optionsBackup.filter((name) => name.label.toLowerCase().includes(tempSearch));\\n\\n            this.loading = true;\\n            this._loading.next(true);\\n            if (temp.length !== 0) {\\n                this.options = temp;\\n            }\\n            else {\\n                this.options = [];\\n            }\\n        }\\n        else {\\n            this.options = this._optionsBackup;\\n        }\\n\\n        setTimeout(() => {\\n\\n            this.updateTriggerLabel(false);\\n            this.checkHeight();\\n            this.searchChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n        });\\n\\n        this._loading.next(true);\\n    }\\n\\n    public onMouseOver(event) {\\n        this.showTooltip(event);\\n    }\\n\\n    public onOptionClick(option: IUiDropdownPlusOption, event: PointerEvent) {\\n\\n        event.preventDefault();\\n        setTimeout(() => {\\n            option.value = !option.value;\\n\\n            this.clearHilighted();\\n            this.focusIndex = this.options.findIndex((tempOption) => { return tempOption.id === option.id; });\\n            if (option.disabled === false || option.disabled === null) {\\n                if (this.multiSelect === false) {\\n\\n                    // Set all others to false\\n                    this.options.forEach((tempOption) => {\\n                        if (tempOption.id !== option.id) {\\n                            tempOption.value = false;\\n                        }\\n                    });\\n                    // Close the dropdown panel\\n                    if (this.singleSelectAutoClose === true) {\\n                        this.nbgDropdown.close();\\n                    }\\n                }\\n                this.updateTriggerLabel();\\n                this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n            }\\n        }, 50);\\n    }\\n\\n    public onSelectAllClick() {\\n\\n        this.options.forEach((option) => {\\n            if (option.disabled === false) {\\n                option.value = true;\\n            }\\n        });\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n        this.clearHilighted();\\n    }\\n\\n    public onClearClick() {\\n        this.options.forEach((option) => {\\n            if (option.disabled === false) {\\n                option.value = false;\\n            }\\n        });\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n        this.clearHilighted();\\n        this.optionsCleared.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    public onSearchClearClick() {\\n        this.searchText = \'\';\\n        this.onSearchChange();\\n    }\\n\\n    public onKeyDown(event: KeyboardEvent) {\\n\\n        if (event.key === \'Escape\') {\\n            event.preventDefault();\\n            event.stopPropagation();\\n        }\\n\\n        this.updateTriggerLabel();\\n    }\\n}\\n","properties":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":15},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12},{"name":"value","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiFeatureFlagConfig","id":"interface-IUiFeatureFlagConfig-8fd980c89cf149972fcac59ec948fcb58020cc73760faa1668eb64b5f71a85b94468bfda998e15860b59278369c9162fe6b3cc97c6dd2cb3855e4668c461021b","file":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { Observable, of, ReplaySubject, switchMap } from \'rxjs\';\\nimport * as LDClient from \'launchdarkly-js-client-sdk\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\n\\n/* eslint-disable max-len */\\n/* Note\\n There\'s a bunch of logic involving observers going on in this class. The reason for this is that the LD Client needs the token but the token (or lack thereof) isn\'t available right away.\\n We have to wait for the Auth0 library to determine if the user is authenticated then either set the token to empty if they aren\'t or retrieve the token if they are.\\n The tricky part is that we could have a request for a FF before that token has been set. We force the evaluation method to wait until the client has been setup before trying to get a value.\\n We use the ReplaySubject\\n*/\\n/* eslint-enable max-len */\\n\\nexport interface IUiFeatureFlagConfig {\\n    key: string;\\n    localFlagPath: string | undefined;\\n}\\n\\nexport interface IUiLocalFlagsData { [key: string]: boolean };\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiFeatureFlagService {\\n    private _featureFlagConfig: IUiFeatureFlagConfig;\\n    private _evaluateFunction: (string, boolean) => Observable<boolean>;\\n    //LD Flags\\n    private _client: LDClient.LDClient | null = null;\\n    private _clientSubject = new ReplaySubject<LDClient.LDClient>(1);\\n\\n    //Local Flags\\n    private _localFlagsData: IUiLocalFlagsData | null = null;\\n    private _localFlagsDataSubject = new ReplaySubject<IUiLocalFlagsData>(1);\\n\\n    constructor(\\n        public configurationService: UiConfigurationService,\\n        private _authService: UiAuthService,\\n        private _httpClient: HttpClient,\\n    ) {\\n        this._featureFlagConfig = configurationService.getConfig<IUiFeatureFlagConfig>(\'launchDarkly\');\\n\\n        //Determine which evaluate function to use\\n        const useLocalFile = this._featureFlagConfig.localFlagPath !== undefined && this._featureFlagConfig.localFlagPath.length !== 0;\\n        const evaluateFunction = useLocalFile ? this.evaluateFlagUsingLocalFile : this.evaluateFlagUsingLDClient;\\n        this._evaluateFunction = evaluateFunction.bind(this);\\n\\n        if (!useLocalFile) {\\n            this._authService.permissionsLoaded$.subscribe((permissionsLoaded) => {\\n                if (permissionsLoaded && !this._client) {\\n                    this.initializeClient();\\n                }\\n            });\\n        }\\n    }\\n\\n    public isFlagOn(featureFlagName: string, defaultValue: boolean = false): Observable<boolean> {\\n        return this._evaluateFunction(featureFlagName, defaultValue);\\n    }\\n\\n    private evaluateFlagUsingLDClient(featureFlagName: string, defaultValue): Observable<boolean> {\\n        return this._clientSubject.pipe(\\n            switchMap((client) => of(client.variation(featureFlagName, defaultValue)))\\n        );\\n    }\\n\\n    private evaluateFlagUsingLocalFile(featureFlagName: string, defaultValue): Observable<boolean> {\\n        if (this._localFlagsData === null) {\\n            this._httpClient.get<IUiLocalFlagsData>(this._featureFlagConfig.localFlagPath)\\n                .subscribe((data) => {\\n                    this._localFlagsData = data;\\n                    this._localFlagsDataSubject.next(data);\\n                });\\n        }\\n\\n        return this._localFlagsDataSubject.pipe(\\n            switchMap((data) => of(data[featureFlagName] ?? defaultValue))\\n        );\\n    }\\n\\n    private initializeClient(): void {\\n        const context = this.generateContext();\\n\\n        if (this._client === null) {\\n            //Initialize the client\\n            const options: LDClient.LDOptions = { allAttributesPrivate: false };\\n            this._client = LDClient.initialize(this._featureFlagConfig.key, context, options);\\n\\n            //Wait until the client is ready then emit to the observer so anything waiting can now get the feature flag\\n            this._client.waitUntilReady().then(() => this._clientSubject.next(this._client));\\n        } else {\\n            //Client is setup, update the context accordingly\\n            this._client.identify(context);\\n        }\\n    }\\n\\n    private generateContext(): LDClient.LDContext {\\n        const context: LDClient.LDContext = {\\n            kind: \'multi\'\\n        };\\n\\n        if (this._authService.userGuid) {\\n            const userContext: LDClient.LDContext = {\\n                kind: \'user\',\\n                key: this._authService.userGuid\\n            };\\n\\n            context.user = userContext;\\n        }\\n        else {\\n            const userContext: LDClient.LDContext = {\\n                kind: \'user\',\\n                key: \'anonymous-user\',\\n                anonymous: true\\n            };\\n\\n            context.user = userContext;\\n        }\\n\\n        if (this._authService.activeOrgGuid) {\\n            const organizationContext: LDClient.LDContext = {\\n                \'kind\': \'organization\',\\n                \'key\': this._authService.activeOrgGuid,\\n                \'root-org-guid\': this._authService.rootOrgGuid\\n            };\\n\\n            context.organization = organizationContext;\\n        }\\n        else {\\n            const organizationContext: LDClient.LDContext = {\\n                kind: \'organization\',\\n                key: \'anonymous-organization\',\\n                anonymous: true\\n            };\\n\\n            context.organization = organizationContext;\\n        }\\n\\n        return context;\\n    }\\n}\\n","properties":[{"name":"key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18},{"name":"localFlagPath","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":19}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiFileScanResult","id":"interface-IUiFileScanResult-137ff6ccbae33a25f89cd49ac20ac4207f8232cd4c166103f4e316904ead42d32ea0b4f30ca21af9d865d4a956c8adeeff7d77f93dad078ca3fd3d0cf3f97cea","file":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\n// AWS\\nimport * as AWS from \'aws-sdk\';\\n// RxJS\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\nimport { EMPTY, Observable, of } from \'rxjs\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n\\n/**\\n * Interface for file scan result.\\n *\\n * @todo This seems to be a duplicate of `IFileScanResult` - We should consider merging these interfaces.\\n * @see `IFileScanResult` apps/acp-ui/src/app/services/file-scan.service.ts\\n */\\nexport interface IUiFileScanResult {\\n    scanResultClean: boolean;\\n    eTag: string;\\n    key: string;\\n}\\n\\n/**\\n * Service to handle file scanning.\\n *\\n * @todo This seems to be a duplicate of `AcpFileScanService` - We should consider merging these services.\\n * @see `AcpFileScanService` apps/acp-ui/src/app/services/file-scan.service.ts\\n */\\n@Injectable({ providedIn: \'root\' })\\nexport class UiFileScanService {\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\n    private readonly _token: string;\\n\\n    constructor(private _configurationService: UiConfigurationService) {\\n        this._token = this.generateGuid();\\n        if (\\n            this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\n            this._configurationService.appConfig[\'file-scan\'].scanUrl\\n        ) {\\n            this.fileScan = webSocket({\\n                url: `${this._configurationService.appConfig[\'file-scan\'].scanUrl}?token=${this._token}`,\\n                deserializer: ({ data }) => {\\n                    const parsedData = JSON.parse(data);\\n                    return {\\n                        scanResultClean: parsedData.scanResultClean,\\n                        eTag: parsedData.file.eTag,\\n                        key: parsedData.file.key,\\n                    };\\n                },\\n            });\\n        } else {\\n            this.fileScan = EMPTY;\\n        }\\n    }\\n\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\n        return new Observable((observer) => {\\n            const s3Endpoint = this._configurationService.appConfig[\'file-scan\'].awsS3ServiceURL;\\n            const config: AWS.S3.ClientConfiguration = {\\n                apiVersion: \'2006-03-01\',\\n                params: { Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName },\\n            };\\n\\n            if (s3Endpoint) {\\n                config.endpoint = s3Endpoint;\\n                config.s3ForcePathStyle = true;\\n            }\\n\\n            if (this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId) {\\n                AWS.config.update({\\n                    region: this._configurationService.appConfig[\'file-scan\'].scanBucketRegion,\\n                    credentials: new AWS.CognitoIdentityCredentials({\\n                        IdentityPoolId: this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId,\\n                    }),\\n                });\\n            } else {\\n                // Use dummy credentials for fake S3.\\n                AWS.config.update({\\n                    credentials: new AWS.Credentials({\\n                        accessKeyId: \'fakeAccessKeyId\',\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\n                    }),\\n                });\\n            }\\n            const s3 = new AWS.S3(config);\\n            const fileUniqueName = this.generateUniqueName(file.name);\\n            const params = {\\n                Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName,\\n                Key: `${fileFolder}${fileUniqueName}`,\\n                Body: file,\\n                ACL: \'private\',\\n                ContentType: file.type,\\n            };\\n            s3.upload(params, (err, data) => {\\n                if (err) {\\n                    observer.error(err);\\n                } else {\\n                    // If there is no file scanning, update the file scan subject with mock IUiFileScanResult\\n                    if (\\n                        !this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\n                        !this._configurationService.appConfig[\'file-scan\'].scanUrl\\n                    ) {\\n                        this.fileScan = of({\\n                            scanResultClean: true,\\n                            eTag: \'\',\\n                            key: data.Key,\\n                        });\\n                    }\\n\\n                    observer.next(data);\\n                    observer.complete();\\n                }\\n            });\\n        });\\n    }\\n\\n    public completeFileScan(): void {\\n        if (this.fileScan instanceof WebSocketSubject) {\\n            this.fileScan.complete();\\n        }\\n    }\\n\\n    private generateUniqueName(name: string): string {\\n        const parts = name\\n            .toLowerCase()\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\n            .split(\'.\');\\n        const fileName = parts[0];\\n        let ext = \'\';\\n        if (parts.length > 1) {\\n            ext = \'.\' + parts[parts.length - 1];\\n        }\\n        return fileName.substring(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\n    }\\n\\n    private generateGuid(): string {\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\n            const r = (Math.random() * 16) | 0;\\n            const v = c === \'x\' ? r : (r & 0x3) | 0x8;\\n            return v.toString(16);\\n        });\\n    }\\n}\\n","properties":[{"name":"eTag","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19},{"name":"key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"scanResultClean","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18}],"indexSignatures":[],"kind":165,"description":"<p>Interface for file scan result.</p>\\n<p>See <code>IFileScanResult</code> apps/acp-ui/src/app/services/file-scan.service.ts</p>\\n","rawdescription":"\\n\\nInterface for file scan result.\\n\\nSee `IFileScanResult` apps/acp-ui/src/app/services/file-scan.service.ts\\n","methods":[]},{"name":"IUiFileScanResult","id":"interface-IUiFileScanResult-060075800c83760707eef60a82d0ebfc088b446d6c2221f3ac148ecd66e78cf37bcf91af5ff3ad73289d3cfd2aa3e7f40f5ec787b957ede7ab0957d3b9c70aaa-1","file":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\n// AWS\\nimport * as AWS from \'aws-sdk\';\\n// RxJS\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\nimport { EMPTY, Observable, of } from \'rxjs\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n\\nexport interface IUiFileScanResult {\\n    scanResultClean: boolean;\\n    eTag: string;\\n    key: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiFileScanService {\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\n    private readonly _token: string;\\n    private _fileScanConfig: {\\n        scanIdentityPoolId: string;\\n        scanBucketRegion: string;\\n        scanUrl: string;\\n        scanBucketName: string;\\n        awsS3ServiceURL: string;\\n        enabled: boolean;\\n    };\\n\\n    constructor(private _configurationService: UiConfigurationService) {\\n        this._token = this.generateGuid();\\n        this._fileScanConfig = this._configurationService.appConfig[\'file-scan\'];\\n        if (this._fileScanConfig.scanIdentityPoolId && this._fileScanConfig.scanUrl) {\\n            this.fileScan = webSocket({\\n                url: `${this._fileScanConfig.scanUrl}?token=${this._token}`,\\n                deserializer: ({ data }) => {\\n                    const parsedData = JSON.parse(data);\\n                    return {\\n                        scanResultClean: parsedData.scanResultClean,\\n                        eTag: parsedData.file.eTag,\\n                        key: parsedData.file.key,\\n                    };\\n                },\\n            });\\n        } else {\\n            this.fileScan = EMPTY;\\n        }\\n    }\\n\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\n        return new Observable((observer) => {\\n            const s3Endpoint = this._fileScanConfig.awsS3ServiceURL;\\n            const config: AWS.S3.ClientConfiguration = {\\n                apiVersion: \'2006-03-01\',\\n                params: { Bucket: this._fileScanConfig.scanBucketName },\\n            };\\n\\n            if (s3Endpoint) {\\n                config.endpoint = s3Endpoint;\\n                config.s3ForcePathStyle = true;\\n            }\\n\\n            if (this._fileScanConfig.scanIdentityPoolId) {\\n                AWS.config.update({\\n                    region: this._fileScanConfig.scanBucketRegion,\\n                    credentials: new AWS.CognitoIdentityCredentials({\\n                        IdentityPoolId: this._fileScanConfig.scanIdentityPoolId,\\n                    }),\\n                });\\n            } else {\\n                // Use dummy credentials for fake S3.\\n                AWS.config.update({\\n                    credentials: new AWS.Credentials({\\n                        accessKeyId: \'fakeAccessKeyId\',\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\n                        sessionToken: \'fakeSessionToken\',\\n                    }),\\n                });\\n            }\\n            const s3 = new AWS.S3(config);\\n            const fileUniqueName = this.generateUniqueName(file.name);\\n            const params = {\\n                Bucket: this._fileScanConfig.scanBucketName,\\n                Key: `${fileFolder}${fileUniqueName}`,\\n                Body: file,\\n                ACL: \'private\',\\n                ContentType: file.type,\\n                FileName: file.name,\\n                Folder: fileFolder,\\n            };\\n            s3.upload(params, (err, data) => {\\n                if (err) {\\n                    observer.error(err);\\n                } else {\\n                    // If there is no file scanning, update the file scan subject with mock IFileScanResult\\n                    if (!this._fileScanConfig.scanIdentityPoolId && !this._fileScanConfig.scanUrl) {\\n                        this.fileScan = of({\\n                            scanResultClean: true,\\n                            eTag: \'\',\\n                            key: data.Key,\\n                        });\\n                    }\\n\\n                    observer.next(data);\\n                    observer.complete();\\n                }\\n            });\\n        });\\n    }\\n\\n    public completeFileScan(): void {\\n        if (this.fileScan instanceof WebSocketSubject) {\\n            this.fileScan.complete();\\n        }\\n    }\\n\\n    private generateUniqueName(name: string): string {\\n        const parts = name\\n            .toLowerCase()\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\n            .split(\'.\');\\n        const fileName = parts[0];\\n        let ext = \'\';\\n        if (parts.length > 1) {\\n            ext = \'.\' + parts[(parts.length - 1)];\\n        }\\n        return fileName.substr(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\n    }\\n\\n    private generateGuid(): string {\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\n            const r = Math.random() * 16 | 0;\\n            const v = c === \'x\' ? r : (r & 0x3 | 0x8);\\n            return v.toString(16);\\n        });\\n    }\\n}\\n","properties":[{"name":"eTag","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"scanResultClean","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiFileScanResult-1"},{"name":"IUiFilterModel","id":"interface-IUiFilterModel-a3a1dbfd1fde40192cbec9acbdd6ac92abc53ae629b0e977e1f9d408bfe33f45dd46390cc28773c74e788026ed2bd847949ee0eb30d909f8100ef9ec143de1bd","file":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiFilterModel {\\n    [colId: string]: IUiServerSideFilter | IUiClientSideFilter;\\n}\\n\\nexport interface IUiServerSideFilter {\\n    filterType: string;\\n    type: string;\\n    filter: string;\\n}\\n\\nexport interface IUiClientSideFilter {\\n    filterType: string;\\n    values: string[];\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-a3a1dbfd1fde40192cbec9acbdd6ac92abc53ae629b0e977e1f9d408bfe33f45dd46390cc28773c74e788026ed2bd847949ee0eb30d909f8100ef9ec143de1bd","args":[{"name":"colId","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"IUiServerSideFilter | IUiClientSideFilter","line":1,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"IUiHeaderButton","id":"interface-IUiHeaderButton-a0afa2b7138a787d91b8f6de0026ab4bbd6bfc44c2ee71ec6ac65d2a5ca361f57d706eb657990f8ce3f37aa34193d12921c9e2739474abb81eefcfbe7a17e6f5","file":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\n/**\\n * Interface for the parameters used by the grid header action buttons\\n *\\n * @todo This will be swapped out for the new interface for UiActionButtons when ready\\n * @description see also IUiActionButton and IUiActionBtn\\n */\\nexport interface IUiHeaderButton {\\n    id?: string;\\n    icon?: string;\\n    text?: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    iconPosition?: \'suffix\' | \'prefix\';\\n    color?:\\n        | \'btn-outline-primary\'\\n        | \'btn-outline-secondary\'\\n        | \'btn-outline-success\'\\n        | \'btn-outline-danger\'\\n        | \'btn-outline-warning\'\\n        | \'btn-outline-info\';\\n    divider?: boolean;\\n    tooltipText?: string;\\n    clicked?: (params: any) => void;\\n}\\n\\n@Component({\\n    selector: \'ui-grid-header-buttons\',\\n    templateUrl: \'./grid-header-buttons.component.html\',\\n    styleUrls: [\'./grid-header-buttons.component.scss\'],\\n})\\nexport class UiGridHeaderButtonsComponent {\\n    /**\\n     * Array of buttons to be displayed in the grid header\\n     */\\n    @Input() public buttons: IUiHeaderButton[] = [];\\n\\n    /**\\n     * Boolean to collapse the buttons into a dropdown menu\\n     *\\n     * @description Default to false until bulk action feature is implemented\\n     */\\n    @Input() public collapseButtons = false;\\n\\n    /**\\n     * Label for the dropdown button\\n     */\\n    @Input() public dropdownButtonLabel: string;\\n\\n    public setButtonClasses(button: IUiHeaderButton): string {\\n        let buttonClasses = \' \';\\n        buttonClasses += this.collapseButtons ? \'dropdown-item \' : \'\';\\n        buttonClasses += this.collapseButtons !== true && button.color ? button.color : \'btn-outline-primary \';\\n        buttonClasses += button.iconPosition === \'prefix\' ? \' prefix \' : \' suffix \';\\n        return buttonClasses;\\n    }\\n}\\n","properties":[{"name":"clicked","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":27},{"name":"color","deprecated":false,"deprecationMessage":"","type":"\\"btn-outline-primary\\" | \\"btn-outline-secondary\\" | \\"btn-outline-success\\" | \\"btn-outline-danger\\" | \\"btn-outline-warning\\" | \\"btn-outline-info\\"","optional":true,"description":"","line":18},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"divider","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":25},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"iconPosition","deprecated":false,"deprecationMessage":"","type":"\\"suffix\\" | \\"prefix\\"","optional":true,"description":"","line":17},{"name":"iconVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":16},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":26},{"name":"visible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":15}],"indexSignatures":[],"kind":165,"description":"<p>Interface for the parameters used by the grid header action buttons</p>\\n","rawdescription":"\\n\\nInterface for the parameters used by the grid header action buttons\\n\\n","methods":[]},{"name":"IUiLanguage","id":"interface-IUiLanguage-c5c8d0244c838f303dafe73017526b0a0064fe239913312e682ac8c5a37ef06d390b848387441f0fdf33d73dc604be28040c63c6d7f4199fd5b3511ffc3c0ee5","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/language.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiLanguage {\\n    name: string;\\n    code: string;\\n}\\n","properties":[{"name":"code","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiLoadingCellRendererParams","id":"interface-IUiLoadingCellRendererParams-3d44a9003402a94f88f8e3dc9c41c6d623d141cd499ffca24f5c68aaa39de96ec03bfe57ecbca888dacc13037c1190881be48d5ea1789e43c4452780bbfcf3ff","file":"libs/ui/src/lib/modules/grid/components/custom-loading-cell-renderer/custom-loading-cell-renderer.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { GridApi } from \'ag-grid-community\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { ILoadingCellRendererAngularComp } from \'ag-grid-angular\';\\n\\ninterface IUiLoadingCellRendererParams {\\n    // an optional template for the loading cell renderer\\n    loadingMessage?: string;\\n}\\n\\n@Component({\\n    selector: \'ui-custom-loading-cell-renderer\',\\n    templateUrl: \'./custom-loading-cell-renderer.component.html\',\\n    styleUrls: [\'./custom-loading-cell-renderer.component.scss\'],\\n})\\nexport class UiCustomLoadingCellRendererComponent implements ILoadingCellRendererAngularComp {\\n    public params: any;\\n\\n    // agInit(params: IUiLoadingCellRendererParams): void {\\n    public agInit(params: any): void {\\n        this.params = params;\\n    }\\n}\\n","properties":[{"name":"loadingMessage","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiLocalFlagsData","id":"interface-IUiLocalFlagsData-8fd980c89cf149972fcac59ec948fcb58020cc73760faa1668eb64b5f71a85b94468bfda998e15860b59278369c9162fe6b3cc97c6dd2cb3855e4668c461021b","file":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { Observable, of, ReplaySubject, switchMap } from \'rxjs\';\\nimport * as LDClient from \'launchdarkly-js-client-sdk\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\n\\n/* eslint-disable max-len */\\n/* Note\\n There\'s a bunch of logic involving observers going on in this class. The reason for this is that the LD Client needs the token but the token (or lack thereof) isn\'t available right away.\\n We have to wait for the Auth0 library to determine if the user is authenticated then either set the token to empty if they aren\'t or retrieve the token if they are.\\n The tricky part is that we could have a request for a FF before that token has been set. We force the evaluation method to wait until the client has been setup before trying to get a value.\\n We use the ReplaySubject\\n*/\\n/* eslint-enable max-len */\\n\\nexport interface IUiFeatureFlagConfig {\\n    key: string;\\n    localFlagPath: string | undefined;\\n}\\n\\nexport interface IUiLocalFlagsData { [key: string]: boolean };\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiFeatureFlagService {\\n    private _featureFlagConfig: IUiFeatureFlagConfig;\\n    private _evaluateFunction: (string, boolean) => Observable<boolean>;\\n    //LD Flags\\n    private _client: LDClient.LDClient | null = null;\\n    private _clientSubject = new ReplaySubject<LDClient.LDClient>(1);\\n\\n    //Local Flags\\n    private _localFlagsData: IUiLocalFlagsData | null = null;\\n    private _localFlagsDataSubject = new ReplaySubject<IUiLocalFlagsData>(1);\\n\\n    constructor(\\n        public configurationService: UiConfigurationService,\\n        private _authService: UiAuthService,\\n        private _httpClient: HttpClient,\\n    ) {\\n        this._featureFlagConfig = configurationService.getConfig<IUiFeatureFlagConfig>(\'launchDarkly\');\\n\\n        //Determine which evaluate function to use\\n        const useLocalFile = this._featureFlagConfig.localFlagPath !== undefined && this._featureFlagConfig.localFlagPath.length !== 0;\\n        const evaluateFunction = useLocalFile ? this.evaluateFlagUsingLocalFile : this.evaluateFlagUsingLDClient;\\n        this._evaluateFunction = evaluateFunction.bind(this);\\n\\n        if (!useLocalFile) {\\n            this._authService.permissionsLoaded$.subscribe((permissionsLoaded) => {\\n                if (permissionsLoaded && !this._client) {\\n                    this.initializeClient();\\n                }\\n            });\\n        }\\n    }\\n\\n    public isFlagOn(featureFlagName: string, defaultValue: boolean = false): Observable<boolean> {\\n        return this._evaluateFunction(featureFlagName, defaultValue);\\n    }\\n\\n    private evaluateFlagUsingLDClient(featureFlagName: string, defaultValue): Observable<boolean> {\\n        return this._clientSubject.pipe(\\n            switchMap((client) => of(client.variation(featureFlagName, defaultValue)))\\n        );\\n    }\\n\\n    private evaluateFlagUsingLocalFile(featureFlagName: string, defaultValue): Observable<boolean> {\\n        if (this._localFlagsData === null) {\\n            this._httpClient.get<IUiLocalFlagsData>(this._featureFlagConfig.localFlagPath)\\n                .subscribe((data) => {\\n                    this._localFlagsData = data;\\n                    this._localFlagsDataSubject.next(data);\\n                });\\n        }\\n\\n        return this._localFlagsDataSubject.pipe(\\n            switchMap((data) => of(data[featureFlagName] ?? defaultValue))\\n        );\\n    }\\n\\n    private initializeClient(): void {\\n        const context = this.generateContext();\\n\\n        if (this._client === null) {\\n            //Initialize the client\\n            const options: LDClient.LDOptions = { allAttributesPrivate: false };\\n            this._client = LDClient.initialize(this._featureFlagConfig.key, context, options);\\n\\n            //Wait until the client is ready then emit to the observer so anything waiting can now get the feature flag\\n            this._client.waitUntilReady().then(() => this._clientSubject.next(this._client));\\n        } else {\\n            //Client is setup, update the context accordingly\\n            this._client.identify(context);\\n        }\\n    }\\n\\n    private generateContext(): LDClient.LDContext {\\n        const context: LDClient.LDContext = {\\n            kind: \'multi\'\\n        };\\n\\n        if (this._authService.userGuid) {\\n            const userContext: LDClient.LDContext = {\\n                kind: \'user\',\\n                key: this._authService.userGuid\\n            };\\n\\n            context.user = userContext;\\n        }\\n        else {\\n            const userContext: LDClient.LDContext = {\\n                kind: \'user\',\\n                key: \'anonymous-user\',\\n                anonymous: true\\n            };\\n\\n            context.user = userContext;\\n        }\\n\\n        if (this._authService.activeOrgGuid) {\\n            const organizationContext: LDClient.LDContext = {\\n                \'kind\': \'organization\',\\n                \'key\': this._authService.activeOrgGuid,\\n                \'root-org-guid\': this._authService.rootOrgGuid\\n            };\\n\\n            context.organization = organizationContext;\\n        }\\n        else {\\n            const organizationContext: LDClient.LDContext = {\\n                kind: \'organization\',\\n                key: \'anonymous-organization\',\\n                anonymous: true\\n            };\\n\\n            context.organization = organizationContext;\\n        }\\n\\n        return context;\\n    }\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-8fd980c89cf149972fcac59ec948fcb58020cc73760faa1668eb64b5f71a85b94468bfda998e15860b59278369c9162fe6b3cc97c6dd2cb3855e4668c461021b","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","line":22,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"IUiMenuItem","id":"interface-IUiMenuItem-d2eed89bcb18635a236dfbefe7f3f6e6abc72b515cb9d971be29c4ebb8b47a9e129472b7803dea04fc92f007550baefbf38e11396792f75dcc85072a324dfcc1","file":"libs/ui/src/lib/services/menu/menu.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\nimport { EventEmitter, Injectable } from \'@angular/core\';\\n// Rxjs\\nimport { Observable } from \'rxjs\';\\nimport { map, take } from \'rxjs/operators\';\\n// Interfaces\\nimport { IUiPermissions } from \'../user\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\n/**\\n * @deprecated\\n */\\nexport class UiMenuService {\\n    public selectedMenu: IUiMenuItem[];\\n    public selectedMenuName: string;\\n    public menus: { dev: IUiMenuItem[]; sin: IUiMenuItem[]; contactsManager: IUiMenuItem[] };\\n    public onSetMainMenu: EventEmitter<IUiMenuItem[]> = new EventEmitter();\\n\\n    constructor(private _httpClient: HttpClient) {}\\n\\n    // public setMainMenu(menu: IUiMenuItem[]) {\\n    public setMainMenu(menuName: string, userPermissions?: IUiPermissions) {\\n        this._httpClient\\n            .get(\'assets/menus/menu.json\')\\n            .pipe(take(1))\\n            .subscribe((data: IUiMenus) => {\\n                this.menus = data;\\n                this.closeAllMenus();\\n                this.selectedMenuName = menuName;\\n\\n                if (this.menus !== undefined) {\\n                    this.selectedMenu = this.menus[menuName];\\n                    this.selectedMenu =\\n                        menuName === UiMenuNamesEnum.sin && userPermissions != null\\n                            ? this.checkSinPermissions(this.selectedMenu, userPermissions)\\n                            : this.selectedMenu;\\n                    this.onSetMainMenu.emit(this.selectedMenu);\\n                }\\n            });\\n    }\\n\\n    public getLeftSideMenuDevHub(): Observable<IUiMenuItem[]> {\\n        return this._httpClient.get(\'assets/menus/left-side-menu-devhub.json\').pipe(\\n            map((res: { menus: IUiMenuItem[] }) => {\\n                return res.menus;\\n            })\\n        );\\n    }\\n\\n    public getLeftSideMenu(): Observable<IUiMenuItem[]> {\\n        return this._httpClient.get(\'assets/menus/left-side-menu.json\').pipe(\\n            map((res: { menus: IUiMenuItem[] }) => {\\n                return res.menus;\\n            })\\n        );\\n    }\\n\\n    public closeAllMenus() {\\n        if (this.selectedMenu) {\\n            for (let i = 0; i < this.selectedMenu.length; i++) {\\n                this.selectedMenu[i].isOpen = false;\\n            }\\n        }\\n    }\\n\\n    public refreshMenu() {\\n        if (this.selectedMenu) {\\n            this.selectedMenu = JSON.parse(JSON.stringify(this.selectedMenu));\\n            this.onSetMainMenu.emit(this.selectedMenu);\\n        }\\n    }\\n\\n    public clearMenu() {\\n        if (this.selectedMenu) {\\n            this.selectedMenu = [];\\n            this.onSetMainMenu.emit(this.selectedMenu);\\n        }\\n    }\\n\\n    public checkSinPermissions(selectedMenu: IUiMenuItem[], userPermissions: IUiPermissions): IUiMenuItem[] {\\n        const selectedMenuWithPermissions: IUiMenuItem[] = [];\\n        for (const subMenu of selectedMenu) {\\n            if (!subMenu.permission || userPermissions[subMenu.permission]) {\\n                selectedMenuWithPermissions.push(subMenu);\\n            }\\n        }\\n\\n        return selectedMenuWithPermissions;\\n    }\\n}\\n\\nexport interface IUiMenuItem {\\n    name: string;\\n    icon?: string;\\n    route: string;\\n    isOpen: boolean;\\n    permission: string;\\n    flag: string;\\n    children?: IUiMenuItem[];\\n}\\nexport interface IUiMenus {\\n    devHub: IUiMenuItem[];\\n    dev: IUiMenuItem[];\\n    sin: IUiMenuItem[];\\n    contactsManager: IUiMenuItem[];\\n}\\n\\nexport enum UiMenuNamesEnum {\\n    devHub = \'devHub\',\\n    dev = \'dev\',\\n    sin = \'sin\',\\n    contactsManager = \'contactsManager\',\\n    declarationSearch = \'declarationSearch\',\\n    segmentation = \'segmentation\',\\n}\\n","properties":[{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":true,"description":"","line":102},{"name":"flag","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":101},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":97},{"name":"isOpen","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":99},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":96},{"name":"permission","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":100},{"name":"route","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":98}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiMenus","id":"interface-IUiMenus-d2eed89bcb18635a236dfbefe7f3f6e6abc72b515cb9d971be29c4ebb8b47a9e129472b7803dea04fc92f007550baefbf38e11396792f75dcc85072a324dfcc1","file":"libs/ui/src/lib/services/menu/menu.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\nimport { EventEmitter, Injectable } from \'@angular/core\';\\n// Rxjs\\nimport { Observable } from \'rxjs\';\\nimport { map, take } from \'rxjs/operators\';\\n// Interfaces\\nimport { IUiPermissions } from \'../user\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\n/**\\n * @deprecated\\n */\\nexport class UiMenuService {\\n    public selectedMenu: IUiMenuItem[];\\n    public selectedMenuName: string;\\n    public menus: { dev: IUiMenuItem[]; sin: IUiMenuItem[]; contactsManager: IUiMenuItem[] };\\n    public onSetMainMenu: EventEmitter<IUiMenuItem[]> = new EventEmitter();\\n\\n    constructor(private _httpClient: HttpClient) {}\\n\\n    // public setMainMenu(menu: IUiMenuItem[]) {\\n    public setMainMenu(menuName: string, userPermissions?: IUiPermissions) {\\n        this._httpClient\\n            .get(\'assets/menus/menu.json\')\\n            .pipe(take(1))\\n            .subscribe((data: IUiMenus) => {\\n                this.menus = data;\\n                this.closeAllMenus();\\n                this.selectedMenuName = menuName;\\n\\n                if (this.menus !== undefined) {\\n                    this.selectedMenu = this.menus[menuName];\\n                    this.selectedMenu =\\n                        menuName === UiMenuNamesEnum.sin && userPermissions != null\\n                            ? this.checkSinPermissions(this.selectedMenu, userPermissions)\\n                            : this.selectedMenu;\\n                    this.onSetMainMenu.emit(this.selectedMenu);\\n                }\\n            });\\n    }\\n\\n    public getLeftSideMenuDevHub(): Observable<IUiMenuItem[]> {\\n        return this._httpClient.get(\'assets/menus/left-side-menu-devhub.json\').pipe(\\n            map((res: { menus: IUiMenuItem[] }) => {\\n                return res.menus;\\n            })\\n        );\\n    }\\n\\n    public getLeftSideMenu(): Observable<IUiMenuItem[]> {\\n        return this._httpClient.get(\'assets/menus/left-side-menu.json\').pipe(\\n            map((res: { menus: IUiMenuItem[] }) => {\\n                return res.menus;\\n            })\\n        );\\n    }\\n\\n    public closeAllMenus() {\\n        if (this.selectedMenu) {\\n            for (let i = 0; i < this.selectedMenu.length; i++) {\\n                this.selectedMenu[i].isOpen = false;\\n            }\\n        }\\n    }\\n\\n    public refreshMenu() {\\n        if (this.selectedMenu) {\\n            this.selectedMenu = JSON.parse(JSON.stringify(this.selectedMenu));\\n            this.onSetMainMenu.emit(this.selectedMenu);\\n        }\\n    }\\n\\n    public clearMenu() {\\n        if (this.selectedMenu) {\\n            this.selectedMenu = [];\\n            this.onSetMainMenu.emit(this.selectedMenu);\\n        }\\n    }\\n\\n    public checkSinPermissions(selectedMenu: IUiMenuItem[], userPermissions: IUiPermissions): IUiMenuItem[] {\\n        const selectedMenuWithPermissions: IUiMenuItem[] = [];\\n        for (const subMenu of selectedMenu) {\\n            if (!subMenu.permission || userPermissions[subMenu.permission]) {\\n                selectedMenuWithPermissions.push(subMenu);\\n            }\\n        }\\n\\n        return selectedMenuWithPermissions;\\n    }\\n}\\n\\nexport interface IUiMenuItem {\\n    name: string;\\n    icon?: string;\\n    route: string;\\n    isOpen: boolean;\\n    permission: string;\\n    flag: string;\\n    children?: IUiMenuItem[];\\n}\\nexport interface IUiMenus {\\n    devHub: IUiMenuItem[];\\n    dev: IUiMenuItem[];\\n    sin: IUiMenuItem[];\\n    contactsManager: IUiMenuItem[];\\n}\\n\\nexport enum UiMenuNamesEnum {\\n    devHub = \'devHub\',\\n    dev = \'dev\',\\n    sin = \'sin\',\\n    contactsManager = \'contactsManager\',\\n    declarationSearch = \'declarationSearch\',\\n    segmentation = \'segmentation\',\\n}\\n","properties":[{"name":"contactsManager","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":108},{"name":"dev","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":106},{"name":"devHub","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":105},{"name":"sin","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":107}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiMultiSelectHeaderParams","id":"interface-IUiMultiSelectHeaderParams-e8cf101508e2ae252fb4ffe12c9e6837eb2adb2c0fe52620904221424bd0dc42d3c6dc3f124468915e578ebd17b1ec3f77d7fbb04f6ed4799371dd32b20b1681","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\n\\nexport interface IUiCustomHeaderParams {\\n    menuIcon: string;\\n}\\n\\nexport interface IUiActionBtn {\\n    icon?: string;\\n    text: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    clicked: (params: IUiActionCellRendererParams) => void;\\n}\\n\\nexport interface IUiActionBtnConfig {\\n    itemId: string;\\n    rowId: string;\\n    inlineIcons?: boolean;\\n    showIconsInMenu?: boolean;\\n    showLabel?: boolean;\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\n}\\n\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\n\\nexport interface IUiActionDivider {\\n    divider?: boolean;\\n    visible?: boolean;\\n}\\n\\nexport interface IUiSelectionChangeParams {\\n    gridId: string;\\n    selectedRows: RowNode[];\\n}\\n\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\n    gridId: any;\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n}\\n","properties":[{"name":"gridId","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":40},{"name":"rowModelType","deprecated":false,"deprecationMessage":"","type":"\\"infinite\\" | \\"viewport\\" | \\"clientSide\\" | \\"serverSide\\"","optional":false,"description":"","line":42},{"name":"selectionChange","deprecated":false,"deprecationMessage":"","type":"EventEmitter<IUiSelectionChangeParams>","optional":true,"description":"","line":41}],"indexSignatures":[],"kind":165,"methods":[],"extends":"IHeaderParams"},{"name":"IUiNavigationService","id":"interface-IUiNavigationService-7a0b51efed19ba2e79566781d29a9d00b04a82987b7799b71251492476525ae7b53783d218d8ccce8c95f1a24bd9fefe8bbc3d08ae86f2be5389804cd17a6b49","file":"libs/ui/src/lib/services/navigation/interfaces/navigation.service.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiNavigationService {\\n    navigateTo(location: string, data?: any): void;\\n    navigateToWithReferral(location: string, data?: any, referral?: string): void;\\n    getNavigationData(): any | undefined;\\n}\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"getNavigationData","args":[],"optional":false,"returnType":"any | undefined","typeParameters":[],"line":4,"deprecated":false,"deprecationMessage":""},{"name":"navigateTo","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":2,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"navigateToWithReferral","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true},{"name":"referral","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":3,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"referral","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}]},{"name":"IUiNoResultSearch","id":"interface-IUiNoResultSearch-b09d70fc10f5e7c82517fb59ef9e02a11040455f7ef883e804bd53acb381eb5c08f2cf10bfecec5b1c41eea74dfc95dd857741eabbe863182d784f2f8d101e46","file":"libs/ui/src/lib/modules/global-search/interfaces/no-result-search.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiNoResultSearch {\\n    noResultsFound: string;\\n    tryDifferentKeyword: string;\\n}\\n","properties":[{"name":"noResultsFound","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"tryDifferentKeyword","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiOldGridPayload","id":"interface-IUiOldGridPayload-63ee5e5d36bbc6faad018837997034f9ff05fc97300cad676229d7046202eb5328ed95db8a4ad59c2cdcc9ef5c7d3945e9f7d2e415d23347e08a4f8387480cae","file":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient, HttpHeaders, HttpResponse } from \'@angular/common/http\';\\nimport { Observable } from \'rxjs\';\\nimport { AcpMockingMethodsEnum } from \'@app/interceptors/mock-data.interceptor\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiTestService {\\n    constructor(private _http: HttpClient) {}\\n\\n    public getCallRecords(params: any) {\\n        return this._http.get(\\n            \'http://localhost:3000/callRecords?index=\' + params,\\n            { observe: \'response\' }\\n        );\\n    }\\n\\n    public getUsers(params: any): Observable<HttpResponse<unknown>> {\\n\\n        let str = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\n\\n        if (params.request.sortModel.length !== 0) {\\n            str = str + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\n        }\\n\\n        const keys = Object.keys(params.request.filterModel);\\n        if (keys.length > 0) {\\n            if (str.length > 0) {\\n                str = str + \'&\';\\n            } else {\\n                str = \'?\';\\n            }\\n            for (let i = 0; i < keys.length; i++) {\\n                str = str + keys[i] + \'_like=\' + params.request.filterModel[keys[i]].filter + \'&\';\\n            }\\n        }\\n\\n        return this._http.get(\'http://localhost:3000/test\' + str, { observe: \'response\' });\\n    }\\n\\n    public getActions(params): Observable<HttpResponse<unknown>> {\\n        const mockData = true;\\n\\n        // Prepare call parameters string\\n        let paramsStr = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\n\\n        if (params.request.sortModel.length !== 0) {\\n            paramsStr = paramsStr + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\n        }\\n\\n        const keys = Object.keys(params.request.filterModel);\\n        if (keys.length > 0) {\\n            if (paramsStr.length > 0) {\\n                paramsStr = paramsStr + \'&\';\\n            } else {\\n                paramsStr = \'?\';\\n            }\\n            for (let i = 0; i < keys.length; i++) {\\n                paramsStr = paramsStr + keys[i] + \'_\' + params.request.filterModel[keys[i]].type + \'=\'\\n                    + params.request.filterModel[keys[i]].filter;\\n\\n                if(i < keys.length - 1){\\n                    paramsStr = paramsStr + \'&\';\\n                }\\n            }\\n        }\\n\\n        if(mockData === true){\\n            // If you want to use mocking method, set this header with the name of the mocking method.\\n            // JSN Note: This is a start for mocking mechanism. Will require extension.\\n            // const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_GET_ACTIONS);\\n            const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_POST_ACTIONS);\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\n            // return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr,\\n            //  { headers, observe: \'response\' } ); // Use Mocking Data\\n            return this._http.post(\\n                \'http://localhost:3000/getSuppliers\',\\n                params.request, { headers, observe: \'response\' }\\n            ); // Use Mocking Data\\n\\n        }\\n        else{\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\n            return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr, { observe: \'response\' } ); // Use Endpoint Data\\n        }\\n    }\\n\\n    public getSupplierRowCount() {\\n        return this._http.get(\\n            \'http://localhost:3000/posts\',\\n        );\\n    }\\n}\\n\\nexport interface IUiOldGridPayload {\\n    page: {\\n        offset: number;\\n        limit: number;\\n    };\\n    sort: {\\n        field: string;\\n        direction: string;\\n    };\\n    gridFilters: {\\n        isArchived: number;\\n        name: string;\\n        supplierNumber: string;\\n        supplierType: number;\\n        isFlagged: string;\\n    };\\n    moduleFilters: [];\\n    classificationFilters: [];\\n    customFieldFilters: [];\\n}\\n","properties":[{"name":"classificationFilters","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":114},{"name":"customFieldFilters","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":115},{"name":"gridFilters","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":106},{"name":"moduleFilters","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":113},{"name":"page","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":98},{"name":"sort","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":102}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiOrganization","id":"interface-IUiOrganization-48b8740213e4c292f760fb5c6de94a93457cdc1e3c86b4bd53b8e00480037523ec25310bae5bf18b72a422d2fc76ce8552fca14dc4221bf1964d5e60285655ff","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/organization.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiOrganization {\\n    id: number;\\n    name: string;\\n    dunsNumber: string;\\n    tradeNames: string[];\\n    domainNames: string[];\\n}\\n","properties":[{"name":"domainNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":6},{"name":"dunsNumber","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"tradeNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiOtpConfirmationResponse","id":"interface-IUiOtpConfirmationResponse-ff611817f694a4ae448e740a13af7a2cd8398f760df70f6fa1b45005608c905c098198a6bb644e392581402a4cf40b4c5b1ca4666a861e10d07a1612679b6fa1","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n// Rxjs\\nimport { catchError, map, tap } from \'rxjs/operators\';\\nimport { throwError } from \'rxjs\';\\n// Lib\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n// Ngx\\nimport { CookieService } from \'ngx-cookie-service\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { UiUserService } from \'@lib/services/user\';\\n\\n// Ngb\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\n\\ndeclare const Assent: IUiAciSharedSession;\\n\\nexport interface IUiPasswordLessSignInResponse {\\n    sessionKey: string;\\n    asmUri: string;\\n}\\n\\nexport interface IUiOtpConfirmationResponse {\\n    session: {\\n        token: string;\\n        sessionKey: string;\\n        consentGiven: boolean;\\n        uniqueSessionGuid: string;\\n    };\\n    sessionKey: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiPasswordlessLoginService {\\n    public sessionKey: string;\\n    public token: string;\\n    private readonly _requestOtpTokenSlug_cognito = \'authentication/signin\';\\n    private readonly _verifyOtpTokenSlug_cognito = \'authentication/verifytoken\';\\n    private readonly _requestOtpTokenSlug_auth0 = \'authentication/v2/requestotp\';\\n    private readonly _verifyOtpTokenSlug_auth0 = \'authentication/v2/verifyotp\';\\n\\n    private _cookieDomain: string;\\n\\n    constructor(\\n        private _configurationService: UiConfigurationService,\\n        private _httpClient: HttpClient,\\n        private _cookieService: CookieService,\\n        private _configService: UiConfigurationService,\\n        private _userService: UiUserService,\\n        private _modalService: NgbModal,\\n        private _router: Router,\\n        private _translate: TranslateService\\n    ) {}\\n\\n    // call the API sign in method using an email address\\n    public signIn(email: string, language: string) {\\n        let authResponse: IUiPasswordLessSignInResponse;\\n        const endpoint =\\n            `${this._configurationService.appConfig.iamApi}` +\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                ? this._requestOtpTokenSlug_cognito\\n                : this._requestOtpTokenSlug_auth0);\\n        const lang3letter = AcpSupportedLanguesLongCodeEnum[language];\\n\\n        const body = {\\n            email,\\n            language: lang3letter,\\n        };\\n\\n        return this._httpClient.post(`${endpoint}`, body, { observe: \'response\' }).pipe(\\n            map((response) => {\\n                // not party service validation failed\\n                if (response.status !== 248) {\\n                    if (response.body) {\\n                        if (response.status === 220) {\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\n                            window.location.href = authResponse.asmUri;\\n                        } else {\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\n                            this.setSessionKeyCookie(authResponse.sessionKey, email);\\n                        }\\n                    }\\n                }\\n                // else show no errors and proceed to otp entry screen\\n                return response.status;\\n            }),\\n            catchError((error) => {\\n                let errorMsg: string;\\n                if (error.error instanceof ErrorEvent) {\\n                    errorMsg = `Error: ${error.error.message}`;\\n                } else {\\n                    errorMsg = this.getSignInErrorMessage(error);\\n                }\\n\\n                return throwError(() => new Error(errorMsg));\\n            })\\n        );\\n    }\\n\\n    // call the API verify token method\\n    public verifyToken(email: string, sessionKey: string, otp: string, language: string) {\\n        const endpoint =\\n            `${this._configurationService.appConfig.iamApi}` +\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                ? this._verifyOtpTokenSlug_cognito\\n                : this._verifyOtpTokenSlug_auth0);\\n\\n        language = AcpSupportedLanguesLongCodeEnum[language];\\n\\n        const body = {\\n            email,\\n            sessionKey,\\n            otp,\\n            language,\\n        };\\n\\n        return this._httpClient.post(`${endpoint}`, body).pipe(\\n            tap((data: IUiOtpConfirmationResponse) => {\\n                if (data.session) {\\n                    this.setTokenCookie(data);\\n                } else if (data.sessionKey) {\\n                    this.setSessionKeyCookie(data.sessionKey, email);\\n                    this.throwInvalidTokenError();\\n                }\\n            }),\\n            catchError((error) => {\\n                let errorMsg: string;\\n                if (error.error instanceof ErrorEvent) {\\n                    errorMsg = `Error: ${error.error.message}`;\\n                } else {\\n                    errorMsg = this.getVerifyTokenErrorMessage(error);\\n                }\\n\\n                return throwError(() => new Error(errorMsg));\\n            })\\n        );\\n    }\\n\\n    public getCookieDomain(): string {\\n        let domain = this._configService?.appConfig?.coreAuthCookieDomain;\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\n            domain = \'localhost\';\\n        }\\n\\n        return domain;\\n    }\\n\\n    private throwInvalidTokenError() {\\n        let errorMsg: string;\\n        this._translate.get(\'AUTHENTICATION.ERRORS.INVALID_CODE\').subscribe((res: string) => {\\n            errorMsg = res;\\n        });\\n        throwError(() => new Error(errorMsg));\\n    }\\n\\n    private getVerifyTokenErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // Party Service Validation failed\\n            case 412: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            // Expired OTP\\n            case 417: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            // Session expired\\n            case 419: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            case 500:\\n            default: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private getSignInErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // Invalid OTP\\n            case 248: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            case 500:\\n            default: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private setSessionKeyCookie(sessionKey: string, email: string) {\\n        const expirationDate: Date = new Date();\\n        expirationDate.setHours(expirationDate.getHours() + 3);\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        this.sessionKey = sessionKey;\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.emailCookieId,\\n            email,\\n            null,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n    }\\n\\n    // called after use verifies the OTP\\n    private setTokenCookie(response: IUiOtpConfirmationResponse) {\\n        const expirationDate = new Date(this.getTokenExpirationDate(response.session.token));\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        this.token = response.session.token;\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            response.session.token,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this.sessionKey = response.session.sessionKey;\\n        this._cookieService.set(\\n            this._configService.appConfig.sessionCookieId,\\n            response.session.sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.uniqueSessionCookieId,\\n            response.session.uniqueSessionGuid,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this.loadUserDetails(response.session.token);\\n\\n        this.initAssentSession();\\n    }\\n\\n    private loadUserDetails(token: string) {\\n        const userEmail = this.getTokenEmail(token);\\n        const tokenPayload = this.getTokenPayload(token);\\n\\n        this._userService.selectUser(userEmail, tokenPayload);\\n    }\\n\\n    private initAssentSession() {\\n        const options: IUiAciSessionOptions = {\\n            cookieDomain: this._cookieDomain,\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\n            logoutOverride: () => {\\n                this.clearUserCredentials();\\n                this._modalService.dismissAll();\\n                this._router.navigate([\'\']);\\n            },\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\n            onExtendSession: () => {\\n                return \'\';\\n            },\\n            sessionExpiryLogoutCookieRequired: true,\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\n            secureCookie: this._configService.appConfig.secureCookie,\\n        };\\n\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\n        if (document.cookie.match(cookiePattern)) {\\n            Assent.session.initialize(options);\\n        }\\n    }\\n\\n    private clearUserCredentials() {\\n        Assent.session.dispose();\\n        this._cookieService.deleteAll(\'/\', this._cookieDomain);\\n        this._userService.logout();\\n    }\\n\\n    private getTokenEmail(token: string): string {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.sub) {\\n            return \'\';\\n        }\\n\\n        return data.sub;\\n    }\\n\\n    /**\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n     *\\n     * @param token jwt\\n     * @returns milliseconds\\n     */\\n    private getTokenExpirationDate(token: string): number {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.exp) {\\n            return;\\n        }\\n\\n        return data.exp * 1000;\\n    }\\n\\n    private getTokenPayload(token: string): any {\\n        if (!token) {\\n            return;\\n        }\\n\\n        const tokenParts = token.split(\'.\');\\n        if (!tokenParts || tokenParts.length < 2) {\\n            return;\\n        }\\n\\n        try {\\n            const data = JSON.parse(atob(tokenParts[1]));\\n            return data;\\n        } catch (error) {\\n            return;\\n        }\\n    }\\n}\\n","properties":[{"name":"session","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":28},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPageFooterItem","id":"interface-IUiPageFooterItem-59b4c8d0961a794d5a1d2fcd1cbda9b38f95d3689541fae05d2c99a7c2642845a473c7ff38b6868b2bd9cb4d23055c5a73fb0fd0c1d47f83242e3a12eff2d39b","file":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\n\\nexport interface IUiPageFooterItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageFooterService {\\n    public showPageFooter$ = new Subject<boolean>();\\n    //Commenting out for now - may use in future iterations\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\n\\n    public backButtonText = \'COMMON.BACK\';\\n    public active: any;\\n\\n    // Page Footer START\\n    public set showPageFooter(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageFooter = value;\\n            this.showPageFooter$.next(this._showPageFooter);\\n        });\\n    }\\n    public get showPageFooter() {\\n        return this._showPageFooter;\\n    }\\n\\n    // Commenting out for now - may use in future iterations\\n    // public set titleText(text: string) {\\n    //     setTimeout(() => {\\n    //         this.titleText$.next(text);\\n    //     });\\n    // }\\n    // Page Footer END\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Page Footer\\n    private _showPageFooter = false;\\n\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\n        this._router.events.subscribe((event) => {\\n            if (event instanceof NavigationEnd) {\\n                this.showPageFooter = false;\\n                this.actionButtons = [];\\n            }\\n        });\\n    }\\n}\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":9},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":11},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPageFooterItem","id":"interface-IUiPageFooterItem-4c0b3e14b8f4cd6391009f2243bcdd2b63de8faed526581d3c53f358ea3c3a9a0c9d8a35be88c69ecf6d617e58ab21de972873d1ee49985840bef5597cdb41cf-1","file":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\n\\nexport interface IUiPageFooterItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageFooterService {\\n    public showPageFooter$ = new Subject<boolean>();\\n    //Commenting out for now - may use in future iterations\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\n\\n    public backButtonText = \'COMMON.BACK\';\\n    public active: any;\\n\\n    // Page Footer START\\n    public set showPageFooter(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageFooter = value;\\n            this.showPageFooter$.next(this._showPageFooter);\\n        });\\n    }\\n    public get showPageFooter() {\\n        return this._showPageFooter;\\n    }\\n\\n    // Commenting out for now - may use in future iterations\\n    // public set titleText(text: string) {\\n    //     setTimeout(() => {\\n    //         this.titleText$.next(text);\\n    //     });\\n    // }\\n    // Page Footer END\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Page Footer\\n    private _showPageFooter = false;\\n\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\n        this._router.events.subscribe((event) => {\\n            if (event instanceof NavigationEnd) {\\n                this.showPageFooter = false;\\n                this.actionButtons = [];\\n                //Commenting out for now - may use in future iterations\\n                // this.titleText$.next(\'\');\\n            }\\n        });\\n    }\\n}\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":13},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":9},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":11},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiPageFooterItem-1"},{"name":"IUiPageHeaderItem","id":"interface-IUiPageHeaderItem-7162c21d2c5d16af231261b295ad5ce0b52d020f318cabd44af7e31b62f1b725070c6019cd3a0fed15f6c266a8de260c4ca27b23d3872a11592811dc22968eee","file":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\n// import { UiLayoutService } from \'@lib/services/layout\';\\nimport { Subject } from \'rxjs\';\\n\\nexport interface IUiPageHeaderItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageHeaderService {\\n    public breadcrumbString = \'\';\\n    public backButtonText = \'COMMON.BACK\';\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\n    public routeSegments = [];\\n    public hideOnRoute = true;\\n    public keepActionButtonsOnRoute = false;\\n\\n    // Title START\\n    public set pageTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageTitle = value;\\n        });\\n    }\\n    public get pageTitle() {\\n        return this._pageTitle;\\n    }\\n\\n    public set pageTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageTitleParams = value;\\n        });\\n    }\\n    public get pageTitleParams() {\\n        return this._pageTitleParams;\\n    }\\n    // Title END\\n\\n    public set pageSubTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageSubTitle = value;\\n        });\\n    }\\n    public get pageSubTitle() {\\n        return this._pageSubTitle;\\n    }\\n\\n    public set pageSubTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageSubTitleParams = value;\\n        });\\n    }\\n    public get pageSubTitleParams() {\\n        return this._pageSubTitleParams;\\n    }\\n    // Sub Title END\\n\\n    // Back Button START\\n    public set backToButtonText(value: string) {\\n        setTimeout(() => {\\n            this._backToButtonText = value;\\n        });\\n    }\\n    public get backToButtonText() {\\n        return this._backToButtonText;\\n    }\\n\\n    public set showBackButton(value: boolean) {\\n        setTimeout(() => {\\n            this._showBackButton = value;\\n        });\\n    }\\n    public get showBackButton() {\\n        return this._showBackButton;\\n    }\\n    // Back Button END\\n\\n    // Breadcrumb // Breadcrumb are not available yet\\n    public set showBreadcrumb(value: boolean) {\\n        setTimeout(() => {\\n            this._showBreadcrumb = value;\\n        });\\n    }\\n    public get showBreadcrumb() {\\n        return this._showBreadcrumb;\\n    }\\n\\n    // Status Badges\\n    public set status(values: Array<IUiPageHeaderItem>) {\\n        this._status = values;\\n    }\\n    public get status() {\\n        return this._status;\\n    }\\n\\n    // Pills\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\n        this._pills = values;\\n    }\\n    public get pills() {\\n        return this._pills;\\n    }\\n\\n    // Dropdowns START\\n    public set dropdowns(value: Array<any>) {\\n        setTimeout(() => {\\n            this._dropdowns = value;\\n        });\\n    }\\n    public get dropdowns() {\\n        return this._dropdowns;\\n    }\\n\\n    public set showDropdowns(value: boolean) {\\n        setTimeout(() => {\\n            this._showDropdowns = value;\\n        });\\n    }\\n    public get showDropdowns() {\\n        return this._showDropdowns;\\n    }\\n    // Dropdowns END\\n\\n    // Sub Navigation\\n    public set showSubNav(value: boolean) {\\n        setTimeout(() => {\\n            this._showSubNav = value;\\n        });\\n    }\\n    public get showSubNav() {\\n        return this._showSubNav;\\n    }\\n\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\n        setTimeout(() => {\\n            this._subNavs = values;\\n        });\\n    }\\n    public get subNavs() {\\n        return this._subNavs;\\n    }\\n\\n    // Tabset\\n    public set showTabsets(value: boolean) {\\n        setTimeout(() => {\\n            this._showTabSets = value;\\n        });\\n    }\\n    public get showTabsets() {\\n        return this._showTabSets;\\n    }\\n\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\n        this._tabsets = values;\\n    }\\n    public get tabsets() {\\n        return this._tabsets;\\n    }\\n\\n    // Feedback Text\\n    public set feedbackText(value: string) {\\n        setTimeout(() => {\\n            this._feedbackText = value;\\n        });\\n    }\\n    public get feedbackText() {\\n        return this._feedbackText;\\n    }\\n\\n    // Feedback Text Params\\n    public set feedbackTextParams(value: object) {\\n        setTimeout(() => {\\n            this._feedbackTextParams = value;\\n        });\\n    }\\n    public get feedbackTextParams() {\\n        return this._feedbackTextParams;\\n    }\\n\\n    // Feedback Icon\\n    public set feedbackIcon(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIcon = value;\\n        });\\n    }\\n    public get feedbackIcon() {\\n        return this._feedbackIcon;\\n    }\\n\\n    // Feedback Icon Color\\n    public set feedbackIconColor(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIconColor = value;\\n        });\\n    }\\n    public get feedbackIconColor() {\\n        return this._feedbackIconColor;\\n    }\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public get actionDropdowns() {\\n        return this._actionDropdowns;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n    // Action Buttons END\\n\\n    // Page Header START\\n    public set showPageHeader(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageHeader = value;\\n            // this.subject.next(value);\\n        });\\n    }\\n    public get showPageHeader() {\\n        return this._showPageHeader;\\n    }\\n    // Page Header END\\n\\n    public subject = new Subject<boolean>();\\n    public showPageHeader$ = new Subject<boolean>();\\n\\n    // Page Header\\n    private _showPageHeader = false;\\n\\n    // Title\\n    // private _showTitle = false;\\n    private _pageTitle = \'\';\\n    private _pageTitleParams = {};\\n\\n    // Sub Title\\n    // private _showSubTitle = false;\\n    private _pageSubTitle = \'\';\\n    private _pageSubTitleParams = {};\\n\\n    // Back Button / Breadcrumbs\\n    private _backToButtonText = \'\';\\n    private _showBackButton = false;\\n    private _showBreadcrumb = false;\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Pills / Status / SubNav/ Tabsets\\n    private _pills: Array<IUiPageHeaderItem> = [];\\n    private _status: Array<IUiPageHeaderItem> = [];\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\n\\n    // Dropdowns\\n    private _showDropdowns = false;\\n    private _dropdowns: Array<any> = [];\\n\\n    // Sub Nav\\n    private _showSubNav = false;\\n\\n    // Tabsets\\n    private _showTabSets = false;\\n\\n    // Feedback\\n    private _feedbackText = \'\';\\n    private _feedbackTextParams = {};\\n    private _feedbackIcon = \'\';\\n    private _feedbackIconColor = \'\';\\n\\n    constructor(private _router: Router) {\\n        // Hide Page Header on every navigation page out.\\n        this._router.events.subscribe((evt) => {\\n            if (evt instanceof NavigationEnd) {\\n                if (this.hideOnRoute === true) {\\n                    this.showPageHeader = false;\\n                    this.subNavs = [];\\n                    this.showSubNav = false;\\n                }\\n\\n                // const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\n                // if(!keepTabsets){\\n                //     this.tabsets = [];\\n                //     this.showTabsets = false;\\n                // }\\n\\n                if (!this.keepActionButtonsOnRoute) {\\n                    this.actionButtons = [];\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\n                }\\n\\n                this.pills = [];\\n                this.dropdowns = [];\\n                this.pageSubTitle = \'\';\\n                this.backToButtonText = \'\';\\n                this.backButtonText = \'COMMON.BACK\';\\n                this.showBackButton = false;\\n                this.feedbackText = \'\';\\n                this.feedbackIcon = \'\';\\n                this.feedbackIconColor = \'\';\\n            }\\n            if (evt instanceof NavigationStart) {\\n                this.breadcrumbString = evt.url;\\n                // this._layoutService.showContainer = true;\\n                // this.routeSegments = evt.url.split(\'/\');\\n            }\\n        });\\n    }\\n}\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":10},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":12},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPageHeaderItem","id":"interface-IUiPageHeaderItem-6b577924c9ad07001bde867f9a312a11a724d38b72d63b66c2628482f3c4be5180236d45557e803ec7a5076d9de5fc0862fdb838083e1882916720a2e642facc-1","file":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\n// import { UiLayoutService } from \'@lib/services/layout\';\\nimport { Subject } from \'rxjs\';\\n\\nexport interface IUiPageHeaderItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageHeaderService {\\n    public breadcrumbString = \'\';\\n    public backButtonText = \'COMMON.BACK\';\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\n    public routeSegments = [];\\n    public hideOnRoute = true;\\n    public keepActionButtonsOnRoute = false;\\n\\n    // Title START\\n    public set pageTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageTitle = value;\\n        });\\n    }\\n    public get pageTitle() {\\n        return this._pageTitle;\\n    }\\n\\n    public set pageTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageTitleParams = value;\\n        });\\n    }\\n    public get pageTitleParams() {\\n        return this._pageTitleParams;\\n    }\\n    // Title END\\n\\n    public set pageSubTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageSubTitle = value;\\n        });\\n    }\\n    public get pageSubTitle() {\\n        return this._pageSubTitle;\\n    }\\n\\n    public set pageSubTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageSubTitleParams = value;\\n        });\\n    }\\n    public get pageSubTitleParams() {\\n        return this._pageSubTitleParams;\\n    }\\n    // Sub Title END\\n\\n    // Back Button START\\n    public set backToButtonText(value: string) {\\n        setTimeout(() => {\\n            this._backToButtonText = value;\\n        });\\n    }\\n    public get backToButtonText() {\\n        return this._backToButtonText;\\n    }\\n\\n    public set showBackButton(value: boolean) {\\n        setTimeout(() => {\\n            this._showBackButton = value;\\n        });\\n    }\\n    public get showBackButton() {\\n        return this._showBackButton;\\n    }\\n    // Back Button END\\n\\n    // Breadcrumb // Breadcrumb are not available yet\\n    public set showBreadcrumb(value: boolean) {\\n        setTimeout(() => {\\n            this._showBreadcrumb = value;\\n        });\\n    }\\n    public get showBreadcrumb() {\\n        return this._showBreadcrumb;\\n    }\\n\\n    // Status Badges\\n    public set status(values: Array<IUiPageHeaderItem>) {\\n        this._status = values;\\n    }\\n    public get status() {\\n        return this._status;\\n    }\\n\\n    // Pills\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\n        this._pills = values;\\n    }\\n    public get pills() {\\n        return this._pills;\\n    }\\n\\n    // Dropdowns START\\n    public set dropdowns(value: Array<any>) {\\n        setTimeout(() => {\\n            this._dropdowns = value;\\n        });\\n    }\\n    public get dropdowns() {\\n        return this._dropdowns;\\n    }\\n\\n    public set showDropdowns(value: boolean) {\\n        setTimeout(() => {\\n            this._showDropdowns = value;\\n        });\\n    }\\n    public get showDropdowns() {\\n        return this._showDropdowns;\\n    }\\n    // Dropdowns END\\n\\n    // Sub Navigation\\n    public set showSubNav(value: boolean) {\\n        setTimeout(() => {\\n            this._showSubNav = value;\\n        });\\n    }\\n    public get showSubNav() {\\n        return this._showSubNav;\\n    }\\n\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\n        setTimeout(() => {\\n            this._subNavs = values;\\n        });\\n    }\\n    public get subNavs() {\\n        return this._subNavs;\\n    }\\n\\n    // Tabset\\n    public set showTabsets(value: boolean) {\\n        setTimeout(() => {\\n            this._showTabSets = value;\\n        });\\n    }\\n    public get showTabsets() {\\n        return this._showTabSets;\\n    }\\n\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\n        this._tabsets = values;\\n    }\\n    public get tabsets() {\\n        return this._tabsets;\\n    }\\n\\n    // Feedback Text\\n    public set feedbackText(value: string) {\\n        setTimeout(() => {\\n            this._feedbackText = value;\\n        });\\n    }\\n    public get feedbackText() {\\n        return this._feedbackText;\\n    }\\n\\n    // Feedback Text Params\\n    public set feedbackTextParams(value: object) {\\n        setTimeout(() => {\\n            this._feedbackTextParams = value;\\n        });\\n    }\\n    public get feedbackTextParams() {\\n        return this._feedbackTextParams;\\n    }\\n\\n    // Feedback Icon\\n    public set feedbackIcon(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIcon = value;\\n        });\\n    }\\n    public get feedbackIcon() {\\n        return this._feedbackIcon;\\n    }\\n\\n    // Feedback Icon Color\\n    public set feedbackIconColor(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIconColor = value;\\n        });\\n    }\\n    public get feedbackIconColor() {\\n        return this._feedbackIconColor;\\n    }\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public get actionDropdowns() {\\n        return this._actionDropdowns;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n    // Action Buttons END\\n\\n    // Page Header START\\n    public set showPageHeader(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageHeader = value;\\n            // this.subject.next(value);\\n        });\\n    }\\n    public get showPageHeader() {\\n        return this._showPageHeader;\\n    }\\n    // Page Header END\\n\\n    public subject = new Subject<boolean>();\\n    public showPageHeader$ = new Subject<boolean>();\\n\\n    // Page Header\\n    private _showPageHeader = false;\\n\\n    // Title\\n    // private _showTitle = false;\\n    private _pageTitle = \'\';\\n    private _pageTitleParams = {};\\n\\n    // Sub Title\\n    // private _showSubTitle = false;\\n    private _pageSubTitle = \'\';\\n    private _pageSubTitleParams = {};\\n\\n    // Back Button / Breadcrumbs\\n    private _backToButtonText = \'\';\\n    private _showBackButton = false;\\n    private _showBreadcrumb = false;\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Pills / Status / SubNav/ Tabsets\\n    private _pills: Array<IUiPageHeaderItem> = [];\\n    private _status: Array<IUiPageHeaderItem> = [];\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\n\\n    // Dropdowns\\n    private _showDropdowns = false;\\n    private _dropdowns: Array<any> = [];\\n\\n    // Sub Nav\\n    private _showSubNav = false;\\n\\n    // Tabsets\\n    private _showTabSets = false;\\n\\n    // Feedback\\n    private _feedbackText = \'\';\\n    private _feedbackTextParams = {};\\n    private _feedbackIcon = \'\';\\n    private _feedbackIconColor = \'\';\\n\\n    constructor(private _router: Router) {\\n        // Hide Page Header on every navigation page out.\\n        this._router.events.subscribe((evt) => {\\n            if (evt instanceof NavigationEnd) {\\n                if (this.hideOnRoute === true) {\\n                    this.showPageHeader = false;\\n                    this.subNavs = [];\\n                    this.showSubNav = false;\\n                    this.pageSubTitle = \'\';\\n                }\\n\\n                const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\n                if(!keepTabsets){\\n                    this.tabsets = [];\\n                    this.showTabsets = false;\\n                }\\n\\n                if (!this.keepActionButtonsOnRoute) {\\n                    this.actionButtons = [];\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\n                }\\n\\n                this.pills = [];\\n                this.dropdowns = [];\\n                this.backToButtonText = \'\';\\n                this.backButtonText = \'COMMON.BACK\';\\n                this.showBackButton = false;\\n                this.feedbackText = \'\';\\n                this.feedbackIcon = \'\';\\n                this.feedbackIconColor = \'\';\\n            }\\n            if (evt instanceof NavigationStart) {\\n                this.breadcrumbString = evt.url;\\n                // this._layoutService.showContainer = true;\\n                // this.routeSegments = evt.url.split(\'/\');\\n            }\\n        });\\n    }\\n}\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"labelParams","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":10},{"name":"onClick","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":12},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"IUiPageHeaderItem-1"},{"name":"IUiPasswordLessSignInResponse","id":"interface-IUiPasswordLessSignInResponse-ff611817f694a4ae448e740a13af7a2cd8398f760df70f6fa1b45005608c905c098198a6bb644e392581402a4cf40b4c5b1ca4666a861e10d07a1612679b6fa1","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n// Rxjs\\nimport { catchError, map, tap } from \'rxjs/operators\';\\nimport { throwError } from \'rxjs\';\\n// Lib\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n// Ngx\\nimport { CookieService } from \'ngx-cookie-service\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { UiUserService } from \'@lib/services/user\';\\n\\n// Ngb\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\n\\ndeclare const Assent: IUiAciSharedSession;\\n\\nexport interface IUiPasswordLessSignInResponse {\\n    sessionKey: string;\\n    asmUri: string;\\n}\\n\\nexport interface IUiOtpConfirmationResponse {\\n    session: {\\n        token: string;\\n        sessionKey: string;\\n        consentGiven: boolean;\\n        uniqueSessionGuid: string;\\n    };\\n    sessionKey: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiPasswordlessLoginService {\\n    public sessionKey: string;\\n    public token: string;\\n    private readonly _requestOtpTokenSlug_cognito = \'authentication/signin\';\\n    private readonly _verifyOtpTokenSlug_cognito = \'authentication/verifytoken\';\\n    private readonly _requestOtpTokenSlug_auth0 = \'authentication/v2/requestotp\';\\n    private readonly _verifyOtpTokenSlug_auth0 = \'authentication/v2/verifyotp\';\\n\\n    private _cookieDomain: string;\\n\\n    constructor(\\n        private _configurationService: UiConfigurationService,\\n        private _httpClient: HttpClient,\\n        private _cookieService: CookieService,\\n        private _configService: UiConfigurationService,\\n        private _userService: UiUserService,\\n        private _modalService: NgbModal,\\n        private _router: Router,\\n        private _translate: TranslateService\\n    ) {}\\n\\n    // call the API sign in method using an email address\\n    public signIn(email: string, language: string) {\\n        let authResponse: IUiPasswordLessSignInResponse;\\n        const endpoint =\\n            `${this._configurationService.appConfig.iamApi}` +\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                ? this._requestOtpTokenSlug_cognito\\n                : this._requestOtpTokenSlug_auth0);\\n        const lang3letter = AcpSupportedLanguesLongCodeEnum[language];\\n\\n        const body = {\\n            email,\\n            language: lang3letter,\\n        };\\n\\n        return this._httpClient.post(`${endpoint}`, body, { observe: \'response\' }).pipe(\\n            map((response) => {\\n                // not party service validation failed\\n                if (response.status !== 248) {\\n                    if (response.body) {\\n                        if (response.status === 220) {\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\n                            window.location.href = authResponse.asmUri;\\n                        } else {\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\n                            this.setSessionKeyCookie(authResponse.sessionKey, email);\\n                        }\\n                    }\\n                }\\n                // else show no errors and proceed to otp entry screen\\n                return response.status;\\n            }),\\n            catchError((error) => {\\n                let errorMsg: string;\\n                if (error.error instanceof ErrorEvent) {\\n                    errorMsg = `Error: ${error.error.message}`;\\n                } else {\\n                    errorMsg = this.getSignInErrorMessage(error);\\n                }\\n\\n                return throwError(() => new Error(errorMsg));\\n            })\\n        );\\n    }\\n\\n    // call the API verify token method\\n    public verifyToken(email: string, sessionKey: string, otp: string, language: string) {\\n        const endpoint =\\n            `${this._configurationService.appConfig.iamApi}` +\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                ? this._verifyOtpTokenSlug_cognito\\n                : this._verifyOtpTokenSlug_auth0);\\n\\n        language = AcpSupportedLanguesLongCodeEnum[language];\\n\\n        const body = {\\n            email,\\n            sessionKey,\\n            otp,\\n            language,\\n        };\\n\\n        return this._httpClient.post(`${endpoint}`, body).pipe(\\n            tap((data: IUiOtpConfirmationResponse) => {\\n                if (data.session) {\\n                    this.setTokenCookie(data);\\n                } else if (data.sessionKey) {\\n                    this.setSessionKeyCookie(data.sessionKey, email);\\n                    this.throwInvalidTokenError();\\n                }\\n            }),\\n            catchError((error) => {\\n                let errorMsg: string;\\n                if (error.error instanceof ErrorEvent) {\\n                    errorMsg = `Error: ${error.error.message}`;\\n                } else {\\n                    errorMsg = this.getVerifyTokenErrorMessage(error);\\n                }\\n\\n                return throwError(() => new Error(errorMsg));\\n            })\\n        );\\n    }\\n\\n    public getCookieDomain(): string {\\n        let domain = this._configService?.appConfig?.coreAuthCookieDomain;\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\n            domain = \'localhost\';\\n        }\\n\\n        return domain;\\n    }\\n\\n    private throwInvalidTokenError() {\\n        let errorMsg: string;\\n        this._translate.get(\'AUTHENTICATION.ERRORS.INVALID_CODE\').subscribe((res: string) => {\\n            errorMsg = res;\\n        });\\n        throwError(() => new Error(errorMsg));\\n    }\\n\\n    private getVerifyTokenErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // Party Service Validation failed\\n            case 412: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            // Expired OTP\\n            case 417: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            // Session expired\\n            case 419: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            case 500:\\n            default: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private getSignInErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // Invalid OTP\\n            case 248: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            case 500:\\n            default: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private setSessionKeyCookie(sessionKey: string, email: string) {\\n        const expirationDate: Date = new Date();\\n        expirationDate.setHours(expirationDate.getHours() + 3);\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        this.sessionKey = sessionKey;\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.emailCookieId,\\n            email,\\n            null,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n    }\\n\\n    // called after use verifies the OTP\\n    private setTokenCookie(response: IUiOtpConfirmationResponse) {\\n        const expirationDate = new Date(this.getTokenExpirationDate(response.session.token));\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        this.token = response.session.token;\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            response.session.token,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this.sessionKey = response.session.sessionKey;\\n        this._cookieService.set(\\n            this._configService.appConfig.sessionCookieId,\\n            response.session.sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.uniqueSessionCookieId,\\n            response.session.uniqueSessionGuid,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this.loadUserDetails(response.session.token);\\n\\n        this.initAssentSession();\\n    }\\n\\n    private loadUserDetails(token: string) {\\n        const userEmail = this.getTokenEmail(token);\\n        const tokenPayload = this.getTokenPayload(token);\\n\\n        this._userService.selectUser(userEmail, tokenPayload);\\n    }\\n\\n    private initAssentSession() {\\n        const options: IUiAciSessionOptions = {\\n            cookieDomain: this._cookieDomain,\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\n            logoutOverride: () => {\\n                this.clearUserCredentials();\\n                this._modalService.dismissAll();\\n                this._router.navigate([\'\']);\\n            },\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\n            onExtendSession: () => {\\n                return \'\';\\n            },\\n            sessionExpiryLogoutCookieRequired: true,\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\n            secureCookie: this._configService.appConfig.secureCookie,\\n        };\\n\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\n        if (document.cookie.match(cookiePattern)) {\\n            Assent.session.initialize(options);\\n        }\\n    }\\n\\n    private clearUserCredentials() {\\n        Assent.session.dispose();\\n        this._cookieService.deleteAll(\'/\', this._cookieDomain);\\n        this._userService.logout();\\n    }\\n\\n    private getTokenEmail(token: string): string {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.sub) {\\n            return \'\';\\n        }\\n\\n        return data.sub;\\n    }\\n\\n    /**\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n     *\\n     * @param token jwt\\n     * @returns milliseconds\\n     */\\n    private getTokenExpirationDate(token: string): number {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.exp) {\\n            return;\\n        }\\n\\n        return data.exp * 1000;\\n    }\\n\\n    private getTokenPayload(token: string): any {\\n        if (!token) {\\n            return;\\n        }\\n\\n        const tokenParts = token.split(\'.\');\\n        if (!tokenParts || tokenParts.length < 2) {\\n            return;\\n        }\\n\\n        try {\\n            const data = JSON.parse(atob(tokenParts[1]));\\n            return data;\\n        } catch (error) {\\n            return;\\n        }\\n    }\\n}\\n","properties":[{"name":"asmUri","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPendoAccountInfo","id":"interface-IUiPendoAccountInfo-ec3f2f13ce838092b0b18acff69cc6085ac6de3e0f458f77c17ca9bec0d7ef3e9791a6f8f94f5b1dace636c699e80096d1d1cdeeedf8ec472938fcad18a33c5c","file":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPendoVisitorInfo {\\n    id: string;\\n    domain: string;\\n    roles: string[];\\n    permissions: string[];\\n    environment: string;\\n    email: string;\\n}\\n\\nexport interface IUiPendoAccountInfo {\\n    id: string;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPendoService","id":"interface-IUiPendoService-25e4d1df368e5115c3c5f93badc15555484533701185f7878ffe898efd4a02524c2694eeb3163726befdc6a0aec51aca903237324082785f39839afd61fbd78d","file":"libs/ui/src/lib/services/analytics/pendo/pendo-config.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPendoService {\\n    apiKey: string;\\n    enabled: boolean;\\n}\\n","properties":[{"name":"apiKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"enabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPendoVisitorInfo","id":"interface-IUiPendoVisitorInfo-ec3f2f13ce838092b0b18acff69cc6085ac6de3e0f458f77c17ca9bec0d7ef3e9791a6f8f94f5b1dace636c699e80096d1d1cdeeedf8ec472938fcad18a33c5c","file":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPendoVisitorInfo {\\n    id: string;\\n    domain: string;\\n    roles: string[];\\n    permissions: string[];\\n    environment: string;\\n    email: string;\\n}\\n\\nexport interface IUiPendoAccountInfo {\\n    id: string;\\n}\\n","properties":[{"name":"domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"environment","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"permissions","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":5},{"name":"roles","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPermissions","id":"interface-IUiPermissions-15d8a20cb794525332814100c4a9caf277577f4d2b9dc3656bd6caec8cc20b5d8bad647c873ce80282b2c56858d42d54aee977b0f57350df68517866a6466093","file":"libs/ui/src/lib/services/user/interfaces/permissions.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiPermissions {\\n    userManagement: boolean;\\n    exceptionManagement: boolean;\\n    segmentationReport: boolean;\\n    editCompanyProfile: boolean;\\n    viewCompanyProfile: boolean;\\n    viewContactManagement: boolean;\\n    editContactManagement: boolean;\\n    accessDeclarationSearch: boolean;\\n    accessTransactionLogs: boolean;\\n    accessIndirectMonitoring: boolean;\\n    viewIndirectMonitoringRecords: boolean;\\n    addIndirectMonitoringRecords: boolean;\\n    editIndirectMonitoringRecords: boolean;\\n    deleteIndirectMonitoringRecords: boolean;\\n    viewIndirectMonitoringKeywordsList: boolean;\\n    addIndirectMonitoringKeywordsList: boolean;\\n    editIndirectMonitoringKeywordsList: boolean;\\n    deleteIndirectMonitoringKeywordsList: boolean;\\n    accessCorrectiveActions: boolean;\\n    fullViewCorrectiveActionRecords: boolean;\\n    addCorrectiveActionRecords: boolean;\\n    editCorrectiveActionRecords: boolean;\\n    deleteCorrectiveActionRecords: boolean;\\n    respondToCorrectiveActions: boolean;\\n    manageCorrectiveActionTemplates: boolean;\\n    viewAssignedCorrectiveActionRecords: boolean;\\n    viewNoMatchSuppliers: boolean;\\n    viewDraftOrganizations: boolean;\\n    viewNetworkDeclarations: boolean;\\n    accessEvidenceReview: boolean;\\n    modifyReview: boolean;\\n    manageEvidenceType: boolean;\\n    manageReviewCriteria: boolean;\\n    viewEvidenceReview: boolean;\\n    manageEvidenceTypeMapping: boolean;\\n    accessCustomerRequests: boolean;\\n    accessPartLevelCustomerRequests: boolean;\\n    aud: string[];\\n}\\n","properties":[{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":11},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":38},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13},{"name":"aud","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":39},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":15},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":5},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":14},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":3},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":32},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"userManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":2},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":6},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":7},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":29},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":16},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPersonDetails","id":"interface-IUiPersonDetails-f32dd0244c5e82b17b6cfc2d843ef1c4319cf1ee12b3a36109966f48dbef5f8d66a9a69c3460a45a88448890024e5a00f6dcf17f565923dc50f38ca69f03a1d3","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/person-details.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiAddressDetails, IUiLanguage } from \'.\';\\nimport { AcpDataSourceEnum } from \'@app/modules/shared/add-edit-company/enums\';\\n\\nexport interface IUiPersonDetails {\\n    personGuid: string;\\n    firstName: string;\\n    lastName: string;\\n    address: IUiAddressDetails;\\n    email: string;\\n    phone: string;\\n    languages: IUiLanguage[];\\n    jobTitle: string;\\n    dataSourceId: AcpDataSourceEnum;\\n}\\n","properties":[{"name":"address","deprecated":false,"deprecationMessage":"","type":"IUiAddressDetails","optional":false,"description":"","line":9},{"name":"dataSourceId","deprecated":false,"deprecationMessage":"","type":"AcpDataSourceEnum","optional":false,"description":"","line":14},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"jobTitle","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"languages","deprecated":false,"deprecationMessage":"","type":"IUiLanguage[]","optional":false,"description":"","line":12},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"personGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"phone","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiPillComponent","id":"interface-IUiPillComponent-744601a7b4d0a5e50f55b73b9c1806d305754f8cea53c7ba4ae72218f82be576af413e751917c4bf9189ce8ea1829984f2bc53761e89e38ae638d162b7d2424e","file":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from \'@angular/core\';\\nimport { UiPillColorEnum } from \'@lib/modules/form-controls/pills/enums/pill-color.enum\';\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\n\\nexport interface IUiPillComponent {\\n    pillText: string;\\n    color: UiPillColorEnum;\\n    size: UiPillSizeEnum;\\n    icon: string;\\n    value: number;\\n    hasCloseButton: boolean;\\n}\\n\\n@Component({\\n    selector: \'ui-pill\',\\n    templateUrl: \'./pill.component.html\',\\n    styleUrls: [\'./pill.component.scss\'],\\n})\\nexport class UiPillComponent implements OnInit, AfterViewInit {\\n    @ViewChild(\'pill\') public pill: ElementRef;\\n\\n    @Output() public xButtonClick = new EventEmitter<any>();\\n\\n    @Input() public pillText; //Text is required\\n    @Input() public color: UiPillColorEnum = UiPillColorEnum.neutral;\\n    @Input() public size: UiPillSizeEnum = UiPillSizeEnum.md;\\n    @Input() public hasCloseButton = false;\\n    @Input() public noHover = true;\\n    @Input() public icon;\\n    @Input() public value; //Optional\\n    @Input() public id;\\n\\n    public generatedId;\\n    public isTooltipDisabled = true;\\n\\n    public constructor() {}\\n\\n    public ngOnInit(): void {\\n        //Need a unique ID for inner div of pill to check if tooltip is enabled for each pill\\n        this.generatedId = \'pill-inner-\' + this.id;\\n    }\\n\\n    public ngAfterViewInit(): void {\\n        setTimeout(() => {\\n            this.checkColumnWidth();\\n        }, 100);\\n    }\\n\\n    //Checks width of inner div of pill to determine if tooltip is needed\\n    public checkColumnWidth() {\\n        if (this.pill && this.pill.nativeElement.firstChild.offsetWidth >= this.pill.nativeElement.firstChild.scrollWidth) {\\n            this.isTooltipDisabled = true;\\n        } else {\\n            this.isTooltipDisabled = false;\\n        }\\n    }\\n\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        this.checkColumnWidth();\\n    }\\n\\n    public onCloseClick() {\\n        this.pill.nativeElement.remove();\\n        this.xButtonClick.emit(this);\\n    }\\n}\\n","properties":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"UiPillColorEnum","optional":false,"description":"","line":7},{"name":"hasCloseButton","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":11},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"pillText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"size","deprecated":false,"deprecationMessage":"","type":"UiPillSizeEnum","optional":false,"description":"","line":8},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiQuickFilter","id":"interface-IUiQuickFilter-4dc20a0df79f2039ad6bba1b0dbd41f489ab585d06bd3c241b88da8a78732e498b3b429b067849180b258b861af95273310ff08356bb615e365a83812c0fd464","file":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiQuickFilterOption {\\n    id: string;\\n    label: string;\\n    disabled: boolean;\\n    value: boolean;\\n}\\n\\nexport interface IUiQuickFilter {\\n    [key: string]: {\\n        label: string;\\n        options: Array<IUiQuickFilterOption>;\\n        index?: number;\\n        showSelectClearBtns?: boolean;\\n        showSearch?: boolean;\\n        small?: boolean;\\n        multiSelect?: boolean;\\n        disabled?: boolean;\\n    };\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-4dc20a0df79f2039ad6bba1b0dbd41f489ab585d06bd3c241b88da8a78732e498b3b429b067849180b258b861af95273310ff08356bb615e365a83812c0fd464","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"literal type","line":8,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"IUiQuickFilterOption","id":"interface-IUiQuickFilterOption-4dc20a0df79f2039ad6bba1b0dbd41f489ab585d06bd3c241b88da8a78732e498b3b429b067849180b258b861af95273310ff08356bb615e365a83812c0fd464","file":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiQuickFilterOption {\\n    id: string;\\n    label: string;\\n    disabled: boolean;\\n    value: boolean;\\n}\\n\\nexport interface IUiQuickFilter {\\n    [key: string]: {\\n        label: string;\\n        options: Array<IUiQuickFilterOption>;\\n        index?: number;\\n        showSelectClearBtns?: boolean;\\n        showSearch?: boolean;\\n        small?: boolean;\\n        multiSelect?: boolean;\\n        disabled?: boolean;\\n    };\\n}\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"value","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRegulationLeaf","id":"interface-IUiRegulationLeaf-37b912be36d4d7e89a0fd5de278b150a6b6930e03c6b15984b44e0c29087766b46dce5b54f64c23abd0f3a1827ec7f8c4301c2bc7aa75ec867991415f6e18fdb","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiRegulationShort } from \'./regulation-short.interface\';\\n\\nexport interface IUiRegulationsTree {\\n    regulation: IUiRegulationShort;\\n    selected?: boolean;\\n    children?: IUiRegulationLeaf[];\\n}\\n\\nexport interface IUiRegulationLeaf {\\n    regulation: IUiRegulationShort;\\n    selected?: boolean;\\n    children?: IUiRegulationLeaf[];\\n}\\n","properties":[{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiRegulationLeaf[]","optional":true,"description":"","line":13},{"name":"regulation","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort","optional":false,"description":"","line":11},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":12}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRegulationShort","id":"interface-IUiRegulationShort-ef6ec70884682c1319902c859f5f498195fa573a801352f5e5f63952045b152381a6519e350de0cae9b84e9273ec61823cb58fe70b1b430d281b5055000bbb81","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulation-short.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { UiRegulationTierEnum } from \'../enums\';\\n\\nexport interface IUiRegulationShort {\\n    regulationName: string;\\n    regulationGuid: string;\\n    regulationTierId: UiRegulationTierEnum;\\n    isStandalone?: boolean;\\n}\\n","properties":[{"name":"isStandalone","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":8},{"name":"regulationGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"regulationName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"regulationTierId","deprecated":false,"deprecationMessage":"","type":"UiRegulationTierEnum","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRegulationsTree","id":"interface-IUiRegulationsTree-37b912be36d4d7e89a0fd5de278b150a6b6930e03c6b15984b44e0c29087766b46dce5b54f64c23abd0f3a1827ec7f8c4301c2bc7aa75ec867991415f6e18fdb","file":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiRegulationShort } from \'./regulation-short.interface\';\\n\\nexport interface IUiRegulationsTree {\\n    regulation: IUiRegulationShort;\\n    selected?: boolean;\\n    children?: IUiRegulationLeaf[];\\n}\\n\\nexport interface IUiRegulationLeaf {\\n    regulation: IUiRegulationShort;\\n    selected?: boolean;\\n    children?: IUiRegulationLeaf[];\\n}\\n","properties":[{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiRegulationLeaf[]","optional":true,"description":"","line":7},{"name":"regulation","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort","optional":false,"description":"","line":5},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiRole","id":"interface-IUiRole-efaedaf6a52514392a6ff33c557397a4e13978d256d411cdef795a7b6b6b2be923a8ff7c886953caa2cf96e77d5dec6a270eb627e798cd7c132d8724cdca3d9f","file":"libs/ui/src/lib/services/user/interfaces/role.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiRole {\\n    id: string;\\n    name: string;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSelectionChangeParams","id":"interface-IUiSelectionChangeParams-e8cf101508e2ae252fb4ffe12c9e6837eb2adb2c0fe52620904221424bd0dc42d3c6dc3f124468915e578ebd17b1ec3f77d7fbb04f6ed4799371dd32b20b1681","file":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter } from \'@angular/core\';\\nimport { ICellRendererParams, IHeaderParams, RowNode } from \'ag-grid-community\';\\n\\nexport interface IUiCustomHeaderParams {\\n    menuIcon: string;\\n}\\n\\nexport interface IUiActionBtn {\\n    icon?: string;\\n    text: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    clicked: (params: IUiActionCellRendererParams) => void;\\n}\\n\\nexport interface IUiActionBtnConfig {\\n    itemId: string;\\n    rowId: string;\\n    inlineIcons?: boolean;\\n    showIconsInMenu?: boolean;\\n    showLabel?: boolean;\\n    btnArr: Array<IUiActionBtn | IUiActionDivider>;\\n}\\n\\nexport interface IUiActionCellRendererParams extends ICellRendererParams, IUiActionBtnConfig {}\\n\\nexport interface IUiActionDivider {\\n    divider?: boolean;\\n    visible?: boolean;\\n}\\n\\nexport interface IUiSelectionChangeParams {\\n    gridId: string;\\n    selectedRows: RowNode[];\\n}\\n\\nexport interface IUiMultiSelectHeaderParams extends IHeaderParams {\\n    gridId: any;\\n    selectionChange?: EventEmitter<IUiSelectionChangeParams>;\\n    rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n}\\n","properties":[{"name":"gridId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"selectedRows","deprecated":false,"deprecationMessage":"","type":"RowNode[]","optional":false,"description":"","line":36}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiServerSideFilter","id":"interface-IUiServerSideFilter-a3a1dbfd1fde40192cbec9acbdd6ac92abc53ae629b0e977e1f9d408bfe33f45dd46390cc28773c74e788026ed2bd847949ee0eb30d909f8100ef9ec143de1bd","file":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiFilterModel {\\n    [colId: string]: IUiServerSideFilter | IUiClientSideFilter;\\n}\\n\\nexport interface IUiServerSideFilter {\\n    filterType: string;\\n    type: string;\\n    filter: string;\\n}\\n\\nexport interface IUiClientSideFilter {\\n    filterType: string;\\n    values: string[];\\n}\\n","properties":[{"name":"filter","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"filterType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSession","id":"interface-IUiSession-ebdb960c908142949c5279b31d314742a4c9332699825fa7ea32dfb15f381f324dc6d000cc741995d418e4679b141c62e8201f10ea6338ac063178e67b73b4cd","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\n// RxJS\\nimport { Observable, throwError } from \'rxjs\';\\nimport { catchError, map, take, tap } from \'rxjs/operators\';\\n// Ngx\\nimport { CookieService } from \'ngx-cookie-service\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Ngb\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\n// Services\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\n// Interfaces\\n\\n//Enum\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\n\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\ndeclare const Assent: IUiAciSharedSession;\\n\\nexport interface IUiAuthResponse {\\n    session: IUiSession;\\n}\\n\\nexport interface IUiSession {\\n    sessionKey: string;\\n    token: string;\\n    uniqueSessionGuid: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiAuthenticationService {\\n    public authResponse: IUiAuthResponse;\\n    public assentContextKey = \'\';\\n\\n    private _httpClient: HttpClient;\\n    private _cookieDomain: string;\\n    private readonly _loginPath = \'login/password\';\\n\\n    constructor(\\n        private _handler: HttpBackend,\\n        private _router: Router,\\n        private _userService: UiUserService,\\n        private _configService: UiConfigurationService,\\n        private _cookieService: CookieService,\\n        private _modalService: NgbModal,\\n        private _translate: TranslateService,\\n        private _toastService: UiToastService\\n    ) {\\n        // Use HttpBackend so it does not go through http-error-interceptor\\n        this._httpClient = new HttpClient(this._handler);\\n\\n        this._configService.configLoaded$.pipe(take(1)).subscribe(() => {\\n            this._cookieDomain = this.getCookieDomain();\\n\\n            const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n            const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n            const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\n\\n            if (token && sessionKey) {\\n                if (!this.authResponse) {\\n                    this.authResponse = {\\n                        session: {\\n                            sessionKey: \'\',\\n                            token: \'\',\\n                            uniqueSessionGuid: \'\',\\n                        },\\n                    };\\n                }\\n                this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\n                this.loadUserDetails(token);\\n                this.initAssentSession();\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Checks if there is a logged user\\n     *\\n     * @returns\\n     */\\n    public isLoggedIn(): boolean {\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n        const tokenExpirationDate = this.getTokenExpirationDate(token);\\n\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n        const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\n        // debugger\\n        if (token && sessionKey) {\\n            if (!this.authResponse) {\\n                this.authResponse = {\\n                    session: {\\n                        sessionKey: \'\',\\n                        token: \'\',\\n                        uniqueSessionGuid: \'\',\\n                    },\\n                };\\n            }\\n            this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\n            this.loadUserDetails(token);\\n            this.initAssentSession();\\n        }\\n\\n        return !!tokenExpirationDate && Date.now() < tokenExpirationDate;\\n    }\\n\\n    /**\\n     * Checks if the logged-in user is an Assentee\\n     *\\n     * @returns boolean\\n     */\\n    public isAssentee(): boolean {\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n        const email = this.getTokenEmail(token);\\n        return email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\');\\n    }\\n\\n    /**\\n     * Login to CoreAuth\\n     *\\n     * @param email\\n     * @param password\\n     * @returns\\n     */\\n    public loginCoreAuth(email: string, password: string): Observable<IUiAuthResponse> {\\n        return this._httpClient\\n            .post<any>(`${this._configService.appConfig.authApi}/${this._loginPath}`, {\\n                email,\\n                password,\\n            })\\n            .pipe(\\n                map((data: IUiSession) => {\\n                    const response: IUiAuthResponse = {\\n                        session: data,\\n                    };\\n                    this.initializeSession(response);\\n                    return response; // return the response\\n                }),\\n                catchError((error: Error) => {\\n                    if (error instanceof HttpErrorResponse) {\\n                        // Handle back-end error\\n                        console.error(\'Back-end error:\', error.message);\\n                    } else {\\n                        // Handle front-end error\\n                        console.error(\'Front-end error:\', error.message);\\n                    }\\n                    return throwError(() => error);\\n                })\\n            );\\n    }\\n\\n    /**\\n     * Logouts the user and clear its token and details\\n     */\\n    public logout(supressTimeoutMessage: boolean = false) {\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n        this._httpClient.post(`${this._configService.appConfig.authApi}/login/logout/${sessionKey}`, {}).subscribe();\\n        this.clearUserCredentials(supressTimeoutMessage);\\n        this._cookieService.set(this._configService.appConfig.manualLogoutCookieName, \'true\');\\n        this.authResponse = undefined;\\n        this._userService.logout();\\n        this._router.navigate([\'\']);\\n    }\\n\\n    // Initialize Session if UiAuthenticationService.loginCoreAuth() Successfully logged in\\n    private initializeSession(authData: IUiAuthResponse) {\\n        const expirationDate = new Date(this.getTokenExpirationDate(authData.session.token));\\n        const secureCookie = this._configService.appConfig.secureCookie;\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            authData.session.token,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.sessionCookieId,\\n            authData.session.sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.uniqueSessionCookieId,\\n            authData.session.uniqueSessionGuid,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            secureCookie\\n        );\\n\\n        this.loadUserDetails(authData.session.token);\\n\\n        this.initAssentSession();\\n    }\\n\\n    private initAssentSession() {\\n        const options: IUiAciSessionOptions = {\\n            cookieDomain: this._cookieDomain,\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\n            logoutOverride: () => {\\n                this.clearUserCredentials();\\n                this._modalService.dismissAll();\\n                this._router.navigate([\'\']);\\n            },\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\n            onExtendSession: () => {\\n                return \'\';\\n            },\\n            sessionExpiryLogoutCookieRequired: true,\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\n            secureCookie: this._configService.appConfig.secureCookie,\\n        };\\n\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\n        if (document.cookie.match(cookiePattern)) {\\n            Assent.session.initialize(options);\\n        }\\n    }\\n\\n    private getCookieDomain(): string {\\n        let domain = this._configService.appConfig.coreAuthCookieDomain;\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\n            domain = \'localhost\';\\n        }\\n\\n        return domain;\\n    }\\n\\n    private loadUserDetails(token: string) {\\n        const userEmail = this.getTokenEmail(token);\\n        const tokenPayload = this.getTokenPayload(token);\\n        this._userService.selectUser(userEmail, tokenPayload);\\n    }\\n\\n    /**\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n     *\\n     * @param token jwt\\n     * @returns milliseconds\\n     */\\n    private getTokenExpirationDate(token: string): number {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.exp) {\\n            return;\\n        }\\n\\n        return data.exp * 1000;\\n    }\\n\\n    private getTokenEmail(token: string): string {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.sub || !this.authoriseAcpAccess(data.aud, data.sub)) {\\n            return \'\';\\n        }\\n\\n        return data.sub;\\n    }\\n\\n    private authoriseAcpAccess(aud: string[], email: string) {\\n        let result = false;\\n        const currentEnv = this._configService.appConfig.environmentName;\\n\\n        if (!aud || aud.length === 0) {\\n            this.logout(true);\\n        }\\n\\n        if (aud.includes(\'*\') && (email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\'))) {\\n            result = true;\\n        } else if (\\n            !aud.includes(window.location.host) &&\\n            currentEnv !== UiEnvironmentNameEnum.localdev &&\\n            currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\n            currentEnv !== UiEnvironmentNameEnum.devopssandbox\\n        ) {\\n            this.logout(true);\\n        } else {\\n            result = true;\\n        }\\n\\n        return result;\\n    }\\n\\n    private getTokenPayload(token: string): any {\\n        if (!token) {\\n            return;\\n        }\\n\\n        const tokenParts = token.split(\'.\');\\n        if (!tokenParts || tokenParts.length < 2) {\\n            return;\\n        }\\n\\n        try {\\n            const data = JSON.parse(atob(tokenParts[1]));\\n            return data;\\n        } catch (error) {\\n            return;\\n        }\\n    }\\n\\n    private clearUserCredentials(supressTimeoutMessage: boolean = false) {\\n        if (!supressTimeoutMessage) {\\n            this.displayUserLogoutNotification();\\n        }\\n        Assent.session.dispose();\\n        this._cookieService.delete(this._configService.appConfig.authCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.sessionCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.uniqueSessionCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.isConsentGiven, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.isSupplier, \'/\', this._cookieDomain);\\n    }\\n\\n    private displayUserLogoutNotification() {\\n        if (this._cookieService.get(this._configService.appConfig.sessionExpiryLogoutCookieName)) {\\n            this._cookieService.delete(this._configService.appConfig.sessionExpiryLogoutCookieName);\\n            this._translate\\n                .get(\'AUTHENTICATION.SESSION_EXPIRED_LOGOUT\')\\n                .pipe(take(1))\\n                .subscribe((res: string) => {\\n                    this._toastService.show(res, UiToastTypesEnum.danger, { autoHide: false });\\n                });\\n        }\\n    }\\n}\\n","properties":[{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33},{"name":"uniqueSessionGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiStep","id":"interface-IUiStep-93c58a013f731503dca93da19f5063600ea14a106d9b465d4b4ef98e5fab14ea290f0af1e8df0c464803a656ea254676b6849fd8815ae12183a2e53d911cc106","file":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, Input, OnInit, ViewChild } from \'@angular/core\';\\n\\nexport interface IUiStep {\\n    title: string;\\n    description: string;\\n    stepStatus: \'incomplete\' | \'complete\' | \'current\';\\n}\\n@Component({\\n    selector: \'ui-progress-indicator\',\\n    templateUrl: \'./progress-indicator.component.html\',\\n    styleUrls: [\'./progress-indicator.component.scss\'],\\n})\\n\\n/**\\n * Progress Indicator Component\\n *\\n * @description Can be used to show the progress of a multi-step process\\n * Can have up to 6 steps\\n * First step is always \'current\'\\n * Can only go up or down one step at a time\\n */\\nexport class UiProgressIndicatorComponent implements OnInit {\\n    @ViewChild(\'progress\') public progressIndicator: UiProgressIndicatorComponent;\\n    /**\\n     * Array includes title and description for each step\\n     * Step status is set by default\\n     * Title is required\\n     */\\n    @Input() public steps = new Array<IUiStep>();\\n\\n    public ngOnInit() {\\n        this.stepSetup();\\n    }\\n\\n    public stepSetup() {\\n        //Check if steps are more than 6\\n        //If more than 6, remove the extra steps and throw console error\\n        if (this.steps.length > 6) {\\n            console.error(\'Progress Indicator can only have up to 6 steps\');\\n            this.steps = this.steps.slice(0, 6);\\n            throw new Error(\'Progress Indicator can only have up to 6 steps\');\\n        }\\n        //Check if title is empty\\n        //If empty, throw console error\\n        this.steps.forEach((step, index) => {\\n            if (!step.title) {\\n                console.error(`Title is required for step ${index + 1}`);\\n                throw new Error(`Title is required for step ${index + 1}`);\\n            }\\n            //First step always current by default\\n            step.stepStatus = index === 0 ? \'current\' : \'incomplete\';\\n        });\\n    }\\n\\n    /**\\n     * Use this to set the next step as current and the current step as complete\\n     */\\n    public setNextStep() {\\n        const currentIndex = this.steps.findIndex((step) => step.stepStatus === \'current\');\\n        if (currentIndex >= 0) {\\n            this.steps[currentIndex].stepStatus = \'complete\';\\n            //If current step is not the last step, set the next step as current\\n            if (currentIndex !== this.steps.length - 1) {\\n                this.steps[currentIndex + 1].stepStatus = \'current\';\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Use this to set the previous step as current\\n     */\\n    public setPreviousStep() {\\n        for (let i = 0; i < this.steps.length; i++) {\\n            if (this.steps[i].stepStatus === \'current\' && i !== 0) {\\n                this.steps[i].stepStatus = \'incomplete\';\\n                this.steps[i - 1].stepStatus = \'current\';\\n                break;\\n            }\\n            //If final step is complete, set it as current\\n            if (this.steps[i].stepStatus === \'complete\' && i === this.steps.length - 1) {\\n                this.steps[i].stepStatus = \'current\';\\n                break;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Use this to set final step as complete before submitting form / doing final action\\n     * Only available if last step is current\\n     */\\n    public setLastStepComplete() {\\n        if (this.steps[this.steps.length - 1].stepStatus === \'current\') {\\n            this.steps[this.steps.length - 1].stepStatus = \'complete\';\\n        }\\n    }\\n}\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"stepStatus","deprecated":false,"deprecationMessage":"","type":"\\"incomplete\\" | \\"complete\\" | \\"current\\"","optional":false,"description":"","line":6},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSubHeaderTab","id":"interface-IUiSubHeaderTab-16dc19ab70eef7a1ac6ecbc5b3ccdf7572504dbe8bbbaae6251681ffe92d32e7b22808ef98c07d1acd022066728b57fdb7b405159ea24bfa87daa48a7e14b571","file":"libs/ui/src/lib/services/layout/header/header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter, Injectable, TemplateRef } from \'@angular/core\';\\n\\nimport { BehaviorSubject, Observable, throwError } from \'rxjs\';\\nexport interface IUiSubHeaderTab {\\n    id: string;\\n    label?: string;\\n    label2?: { txt: string; params: any };\\n    onClickEvent?: (item: any) => void;\\n    contentTpl?: TemplateRef<any>;\\n    cacheTabContent?: boolean;\\n    tools?: Array<any>;\\n    tabClassColor?: string;\\n}\\nexport interface IUiSubHeaderTool {\\n    id: string;\\n    label?: string;\\n    type?: string;\\n    class?: Array<string>;\\n    disabled?: boolean;\\n    action?: string;\\n    onClickEvent?: (item: any) => void;\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiHeaderService {\\n    public selectedTabId = \'\';\\n    public selectedTabTemplateRef: TemplateRef<any>;\\n    public messageTxt = \'\';\\n    public subHeaderMessage: { msg: string; iconClass: Array<string>; colorClass: string };\\n\\n    public loading$: Observable<boolean>;\\n    public loadingSubject = new BehaviorSubject<boolean>(false);\\n\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\n    public subHeaderChange: EventEmitter<{\\n        tabItem: Array<any>; toolItems: Array<any>;\\n    }> = new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>();\\n\\n    public subHeaderSelectedTabChange: EventEmitter<IUiSubHeaderTab> = new EventEmitter<IUiSubHeaderTab>();\\n    public actionBtnsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\n    public preToolsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\n    public preToolsMessageChange: EventEmitter<{ msg: string; iconClass: Array<string>; colorClass: string }> = new EventEmitter();\\n\\n    public t: string;\\n\\n    private _title: string;\\n    private _tabsItems: Array<IUiSubHeaderTab>;\\n    private _toolItems: Array<any>;\\n\\n    public get title(): string {\\n        return this._title;\\n    }\\n\\n    public set title(thisTitle: string) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this._title = thisTitle;\\n            this.titleChange.emit(this._title);\\n        });\\n    }\\n\\n    public get subHeaderTabs(): Array<IUiSubHeaderTab> {\\n        return this._tabsItems;\\n    }\\n\\n    public set subHeaderTabs(items: Array<IUiSubHeaderTab>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n\\n        setTimeout(() => {\\n            this._tabsItems = items;\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\n            if (this._tabsItems.length !== 0) {\\n                this.selectTabByIndex(0);\\n            }\\n        });\\n    }\\n\\n    public get subToolItems(): Array<any> {\\n        return this._toolItems;\\n    }\\n\\n    public set subToolItems(items: Array<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this._toolItems = items;\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\n        });\\n    }\\n    constructor() {\\n        this._title = \'Assent Compliance Platform\';\\n        this.loading$ = this.loadingSubject.asObservable();\\n    }\\n\\n    public selectTab(e: IUiSubHeaderTab) {\\n        this.selectedTabId = e.id;\\n        this.subToolItems = e.tools;\\n        this.selectedTabTemplateRef = e.contentTpl;\\n        this.subHeaderSelectedTabChange.emit(e);\\n    }\\n\\n    public selectTabByIndex(index: number) {\\n        this.selectTab(this._tabsItems[index]);\\n    }\\n\\n    public selectTabById(id: string) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this.selectTab(this._tabsItems.find((item) => item.id === id));\\n        });\\n    }\\n\\n    public setActionsBtns(tlpRef: TemplateRef<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            if(tlpRef !== undefined){\\n                this.actionBtnsChange.emit(tlpRef);\\n            }\\n        });\\n    }\\n\\n    public setPreTools(tlpRef: TemplateRef<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        setTimeout(() => {\\n            this.preToolsChange.emit(tlpRef);\\n        });\\n    }\\n\\n    public setPreToolsMessage(msg: { msg: string; iconClass: Array<string>; colorClass: string }) {\\n        this.subHeaderMessage = msg;\\n        this.preToolsMessageChange.emit(msg);\\n        setTimeout(() => {\\n            this.subHeaderMessage = null;\\n        }, 3000);\\n    }\\n\\n    public clearActionBtns() {\\n        this.setActionsBtns(null);\\n    }\\n}\\n","properties":[{"name":"cacheTabContent","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":10},{"name":"contentTpl","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":true,"description":"","line":9},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6},{"name":"label2","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"","line":7},{"name":"onClickEvent","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":8},{"name":"tabClassColor","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":12},{"name":"tools","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":true,"description":"","line":11}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiSubHeaderTool","id":"interface-IUiSubHeaderTool-16dc19ab70eef7a1ac6ecbc5b3ccdf7572504dbe8bbbaae6251681ffe92d32e7b22808ef98c07d1acd022066728b57fdb7b405159ea24bfa87daa48a7e14b571","file":"libs/ui/src/lib/services/layout/header/header.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { EventEmitter, Injectable, TemplateRef } from \'@angular/core\';\\n\\nimport { BehaviorSubject, Observable, throwError } from \'rxjs\';\\nexport interface IUiSubHeaderTab {\\n    id: string;\\n    label?: string;\\n    label2?: { txt: string; params: any };\\n    onClickEvent?: (item: any) => void;\\n    contentTpl?: TemplateRef<any>;\\n    cacheTabContent?: boolean;\\n    tools?: Array<any>;\\n    tabClassColor?: string;\\n}\\nexport interface IUiSubHeaderTool {\\n    id: string;\\n    label?: string;\\n    type?: string;\\n    class?: Array<string>;\\n    disabled?: boolean;\\n    action?: string;\\n    onClickEvent?: (item: any) => void;\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiHeaderService {\\n    public selectedTabId = \'\';\\n    public selectedTabTemplateRef: TemplateRef<any>;\\n    public messageTxt = \'\';\\n    public subHeaderMessage: { msg: string; iconClass: Array<string>; colorClass: string };\\n\\n    public loading$: Observable<boolean>;\\n    public loadingSubject = new BehaviorSubject<boolean>(false);\\n\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\n    public subHeaderChange: EventEmitter<{\\n        tabItem: Array<any>; toolItems: Array<any>;\\n    }> = new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>();\\n\\n    public subHeaderSelectedTabChange: EventEmitter<IUiSubHeaderTab> = new EventEmitter<IUiSubHeaderTab>();\\n    public actionBtnsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\n    public preToolsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\n    public preToolsMessageChange: EventEmitter<{ msg: string; iconClass: Array<string>; colorClass: string }> = new EventEmitter();\\n\\n    public t: string;\\n\\n    private _title: string;\\n    private _tabsItems: Array<IUiSubHeaderTab>;\\n    private _toolItems: Array<any>;\\n\\n    public get title(): string {\\n        return this._title;\\n    }\\n\\n    public set title(thisTitle: string) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this._title = thisTitle;\\n            this.titleChange.emit(this._title);\\n        });\\n    }\\n\\n    public get subHeaderTabs(): Array<IUiSubHeaderTab> {\\n        return this._tabsItems;\\n    }\\n\\n    public set subHeaderTabs(items: Array<IUiSubHeaderTab>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n\\n        setTimeout(() => {\\n            this._tabsItems = items;\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\n            if (this._tabsItems.length !== 0) {\\n                this.selectTabByIndex(0);\\n            }\\n        });\\n    }\\n\\n    public get subToolItems(): Array<any> {\\n        return this._toolItems;\\n    }\\n\\n    public set subToolItems(items: Array<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this._toolItems = items;\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\n        });\\n    }\\n    constructor() {\\n        this._title = \'Assent Compliance Platform\';\\n        this.loading$ = this.loadingSubject.asObservable();\\n    }\\n\\n    public selectTab(e: IUiSubHeaderTab) {\\n        this.selectedTabId = e.id;\\n        this.subToolItems = e.tools;\\n        this.selectedTabTemplateRef = e.contentTpl;\\n        this.subHeaderSelectedTabChange.emit(e);\\n    }\\n\\n    public selectTabByIndex(index: number) {\\n        this.selectTab(this._tabsItems[index]);\\n    }\\n\\n    public selectTabById(id: string) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this.selectTab(this._tabsItems.find((item) => item.id === id));\\n        });\\n    }\\n\\n    public setActionsBtns(tlpRef: TemplateRef<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            if(tlpRef !== undefined){\\n                this.actionBtnsChange.emit(tlpRef);\\n            }\\n        });\\n    }\\n\\n    public setPreTools(tlpRef: TemplateRef<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        setTimeout(() => {\\n            this.preToolsChange.emit(tlpRef);\\n        });\\n    }\\n\\n    public setPreToolsMessage(msg: { msg: string; iconClass: Array<string>; colorClass: string }) {\\n        this.subHeaderMessage = msg;\\n        this.preToolsMessageChange.emit(msg);\\n        setTimeout(() => {\\n            this.subHeaderMessage = null;\\n        }, 3000);\\n    }\\n\\n    public clearActionBtns() {\\n        this.setActionsBtns(null);\\n    }\\n}\\n","properties":[{"name":"action","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":20},{"name":"class","deprecated":false,"deprecationMessage":"","type":"Array<string>","optional":true,"description":"","line":18},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":19},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16},{"name":"onClickEvent","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"","line":21},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":17}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTagsInputItemDefault","id":"interface-IUiTagsInputItemDefault-e7c2556ed5e5601394eb327e9108fa361b4a870c14d0c08c84417e9fd6abc0c3ae3b005432afb3ea9f6cb95617a7cd49af40f2dbf92dd614956af3f3110a8b86","file":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-item-default.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiTagsInputItemDefault {\\n    id: number | string;\\n    text: string;\\n    disabled: boolean;\\n    colorClass?: string;\\n}\\n","properties":[{"name":"colorClass","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":5},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":4},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number | string","optional":false,"description":"","line":2},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTagsInputObject","id":"interface-IUiTagsInputObject-9bdd78ff5837f64a3d0c3440fdf467f4e4a180688e9ed0623f280f8197ed9af02b83d51989c4aa182e496f204f6aac30019c5bd691199719da11640d4b8b5bcf","file":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-object.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiTagsInputObject {\\n    labelField: string;\\n    keyField: string;\\n}\\n","properties":[{"name":"keyField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"labelField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiToast","id":"interface-IUiToast-74a7a24704bb41fb1a16f165ffc5e3a6ca729cf6882cb4c1ca8597266c5e1876f2de83f44566579b31061800b7705008e9d19efbd1202d6e51cd15c55733f2b6","file":"libs/ui/src/lib/services/toast-notification/interfaces/toast.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiToastOptions } from \'.\';\\n// Enums\\nimport { UiToastTypesEnum } from \'../enums\';\\n\\nexport interface IUiToast {\\n    id: string;\\n    text: string;\\n    type: UiToastTypesEnum;\\n    options: IUiToastOptions;\\n}\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"options","deprecated":false,"deprecationMessage":"","type":"IUiToastOptions","optional":false,"description":"","line":10},{"name":"text","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"type","deprecated":false,"deprecationMessage":"","type":"UiToastTypesEnum","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiToastOptions","id":"interface-IUiToastOptions-24dff55d57b979ea805fbf69811b92afa19949fcfab9285d3cccd015099e3406a82a6da033c366cef2fd4cf3f2a6cae06c51e6832b080dbec5d83c8406c811f8","file":"libs/ui/src/lib/services/toast-notification/interfaces/toast-options.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiToastOptions {\\n    autoHide?: boolean;\\n    delay?: boolean;\\n}\\n","properties":[{"name":"autoHide","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":2},{"name":"delay","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":3}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTreeData","id":"interface-IUiTreeData-cb87536691482b7f34b39804164477cddf2f135a33a6d9db1172217e1ac3ef1ebaaface96a01e22497f6db4a64b5f4e9e3fbfef89cde53e0dc802fe5b2484bdd","file":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-data.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiTreeNode } from \'.\';\\n\\nexport interface IUiTreeData {\\n    root: IUiTreeNode;\\n}\\n","properties":[{"name":"root","deprecated":false,"deprecationMessage":"","type":"IUiTreeNode","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiTreeNode","id":"interface-IUiTreeNode-97671f056a7981f836aad92c333e0d8a3f51985b156ded28cfd542e6a90f40ad5990320ff4dfbbde42ba9419f2731aca87a9984e2ebee220b881a3c49f57d125","file":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-node.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiTreeNode {\\n    id: string;\\n    label: string;\\n    children?: IUiTreeNode[];\\n    checked?: boolean;\\n    indeterminate?: boolean;\\n    data?: any;\\n    nodeUid?: string; // Unique identifier for every instance of a given node; Only for internal use\\n}\\n","properties":[{"name":"checked","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":5},{"name":"children","deprecated":false,"deprecationMessage":"","type":"IUiTreeNode[]","optional":true,"description":"","line":4},{"name":"data","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":7},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"indeterminate","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":6},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"nodeUid","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiUser","id":"interface-IUiUser-b90d27dd3c8cd2c8dc794edaa8e090a4f5389631d510aa050befefce0f93f3cd856052ca6b1958458746bba6232a4d5b4da0e97007a99488e58b440bf3f0145a","file":"libs/ui/src/lib/services/user/interfaces/user.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IUiRole } from \'./role.interface\';\\n\\nexport interface IUiUser {\\n    id: number;\\n    email: string;\\n    userName: string;\\n    firstName?: string;\\n    lastName?: string;\\n    roles: IUiRole[];\\n    // ToDo\\n    // These properties should be removed\\n    // They are used for temporary compatibility with the old implementation\\n    avatar?: string;\\n    menu?: string;\\n    preferredLanguage?: string;\\n}\\n","properties":[{"name":"avatar","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13},{"name":"email","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"firstName","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":7},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"lastName","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8},{"name":"menu","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14},{"name":"preferredLanguage","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15},{"name":"roles","deprecated":false,"deprecationMessage":"","type":"IUiRole[]","optional":false,"description":"","line":9},{"name":"userName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiUserPreference","id":"interface-IUiUserPreference-fbb8067c74a9a7d3e0b65e4cb242e7be44392e74bbc56793bea7cbd7530404cda4eadc196cf1a8c54010eb94f56b7a437620450b3aba4d4aa751364b5fcd7e05","file":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiUserPreference {\\n    dataType: string;\\n    type: string;\\n    value: string;\\n    displayValue: string;\\n}\\n\\nexport interface IUiUserPreferences {\\n    preferences: IUiUserPreference[];\\n}\\n","properties":[{"name":"dataType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2},{"name":"displayValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"IUiUserPreferences","id":"interface-IUiUserPreferences-fbb8067c74a9a7d3e0b65e4cb242e7be44392e74bbc56793bea7cbd7530404cda4eadc196cf1a8c54010eb94f56b7a437620450b3aba4d4aa751364b5fcd7e05","file":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface IUiUserPreference {\\n    dataType: string;\\n    type: string;\\n    value: string;\\n    displayValue: string;\\n}\\n\\nexport interface IUiUserPreferences {\\n    preferences: IUiUserPreference[];\\n}\\n","properties":[{"name":"preferences","deprecated":false,"deprecationMessage":"","type":"IUiUserPreference[]","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Observable","id":"interface-Observable-d2a92f6027a2816eb85be093069c1282721ffd2e2b41960e05ce0e0c2c03133edec3b39611f57aa4d4cfbef91f5f542b4bef1493fdde59108242d7ae9151f049","file":"libs/ui/src/lib/extensions/observable.extensions.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Observable, Subscription } from \'rxjs\';\\nimport { first } from \'rxjs/operators\';\\n\\ndeclare module \'rxjs\' {\\n    //eslint-disable-next-line @typescript-eslint/naming-convention\\n    interface Observable<T> {\\n        once(next: (value: T) => void): Subscription;\\n    }\\n}\\n\\nObservable.prototype.once = function <T>(this: Observable<T>, next: (value: T) => void): Subscription {\\n    return this.pipe(first()).subscribe(next);\\n};\\n","properties":[],"indexSignatures":[],"kind":167,"methods":[{"name":"once","args":[{"name":"next","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}]}],"optional":false,"returnType":"Subscription","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"next","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"tagName":{"text":"param"}}]}]}],"injectables":[{"name":"UiAcpProfileManagerService","id":"injectable-UiAcpProfileManagerService-91b31e76fad3e05b5a1b35abcf439eb1a593cc7f4cd1be419cfc2690fdb437eb32456b7a788f27fdb27851436985d1bca35dac52a31019a17b7c08c236dc49f7","file":"libs/ui/src/lib/modules/user-auth-manager/services/profile-manager-service.ts","properties":[],"methods":[{"name":"getUserSessions","args":[{"name":"userId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<UiAcpUserSession[]>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"userId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\n// RxJS\\nimport { Observable } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { CookieService } from \'ngx-cookie-service\';\\n// Enums\\nimport { UiAcpUserSessionItem, UiAcpUserSession } from \'../models/session.model\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiAcpProfileManagerService {\\n    // #region Private Fields\\n    constructor(\\n        private _httpClient: HttpClient,\\n        private _configService: UiConfigurationService,\\n        private _cookieService: CookieService,\\n    ) {};\\n    // #endregion Private Fields\\n\\n    // #region Public Methods\\n    // -----------------------------------------------------------------------------------------------------\\n\\n    // Get User Sessions\\n    public getUserSessions(userId: number): Observable<UiAcpUserSession[]> {\\n        return this._httpClient\\n            .get<UiAcpUserSessionItem[]>(`${this._configService.appConfig.authApi}/session/userId/${userId}`)\\n            .pipe(\\n                map((res: UiAcpUserSessionItem[]) => {\\n                    const sessionGroups = res.reduce((groups, session) => {\\n                        const iteratedUniqueSessionGuid = session.uniqueSessionGuid;\\n                        if (!groups[iteratedUniqueSessionGuid]) {\\n                            groups[iteratedUniqueSessionGuid] = [];\\n                        }\\n                        groups[iteratedUniqueSessionGuid].push(session);\\n                        return groups;\\n                    }, {});\\n                    const x = Object.keys(sessionGroups).map((iteratedUniqueSessionGuid) => {\\n                        const acpUserSession: UiAcpUserSession = UiAcpUserSession.fromAcpUserSessionItems(\\n                            sessionGroups[iteratedUniqueSessionGuid],\\n                            this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId));\\n                        return acpUserSession;\\n                    });\\n                    return x;\\n                })\\n            );\\n    }\\n}\\n\\n// #endregion Public Methods\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiAuth0UserService","id":"injectable-UiAuth0UserService-cad9e221ba46ba0d473dd9e89a057bab0ae294adff0735edbb7e9a1416573d41478888d8be73aa220a942b63ca5debeb0bb3a363119c71cca07b95155674c593","file":"libs/ui/src/lib/modules/authentification/auth0/services/user.service.ts","properties":[{"name":"_authenticatedUserSubject","defaultValue":"new BehaviorSubject<User | null | undefined>(null)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9,"modifierKind":[121]},{"name":"_userPermissionsSubject","defaultValue":"new BehaviorSubject<any[]>([])","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[121]},{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<User | null | undefined>","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"userPermissions$","deprecated":false,"deprecationMessage":"","type":"Observable<any[]>","optional":false,"description":"","line":14,"modifierKind":[123]}],"methods":[{"name":"updateUser","args":[{"name":"user","type":"User | null | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"user","type":"User | null | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateUserPermissions","args":[{"name":"permissions","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"permissions","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { User } from \'@auth0/auth0-spa-js\';\\nimport { Injectable } from \'@angular/core\';\\nimport { BehaviorSubject, Observable, distinctUntilChanged } from \'rxjs\';\\n\\n@Injectable({\\n    providedIn: \'root\'\\n})\\nexport class UiAuth0UserService {\\n  private _authenticatedUserSubject = new BehaviorSubject<User | null | undefined>(null);\\n  private _userPermissionsSubject = new BehaviorSubject<any[]>([]);\\n\\n  /* eslint-disable @typescript-eslint/member-ordering */\\n  public authenticatedUser$: Observable<User | null | undefined>;\\n  public userPermissions$: Observable<any[]>;\\n  /* eslint-enable @typescript-eslint/member-ordering */\\n\\n  constructor() {\\n      this.authenticatedUser$ = this._authenticatedUserSubject.asObservable().pipe(distinctUntilChanged());\\n      this.userPermissions$ = this._userPermissionsSubject.asObservable().pipe(distinctUntilChanged());\\n  }\\n\\n  public updateUser(user: User | null | undefined) {\\n      this._authenticatedUserSubject.next(user);\\n  }\\n\\n  public updateUserPermissions(permissions: any[]) {\\n      this._userPermissionsSubject.next(permissions);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":14},"type":"injectable"},{"name":"UiAuthenticationService","id":"injectable-UiAuthenticationService-ebdb960c908142949c5279b31d314742a4c9332699825fa7ea32dfb15f381f324dc6d000cc741995d418e4679b141c62e8201f10ea6338ac063178e67b73b4cd","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","properties":[{"name":"_cookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[121]},{"name":"_httpClient","deprecated":false,"deprecationMessage":"","type":"HttpClient","optional":false,"description":"","line":42,"modifierKind":[121]},{"name":"_loginPath","defaultValue":"\'login/password\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[121,144]},{"name":"assentContextKey","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"authResponse","deprecated":false,"deprecationMessage":"","type":"IUiAuthResponse","optional":false,"description":"","line":39,"modifierKind":[123]}],"methods":[{"name":"authoriseAcpAccess","args":[{"name":"aud","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"email","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":273,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"aud","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearUserCredentials","args":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"void","typeParameters":[],"line":315,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"displayUserLogoutNotification","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":327,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getCookieDomain","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":234,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getTokenEmail","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTokenExpirationDate","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":255,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n\\n","description":"<p>Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9199,"end":9204,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"token"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":9193,"end":9198,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>jwt</p>\\n"},{"tagName":{"pos":9217,"end":9224,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>milliseconds</p>\\n"}]},{"name":"getTokenPayload","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":297,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initAssentSession","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"initializeSession","args":[{"name":"authData","type":"IUiAuthResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"authData","type":"IUiAuthResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isAssentee","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the logged-in user is an Assentee\\n\\n","description":"<p>Checks if the logged-in user is an Assentee</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":4253,"end":4260,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>boolean</p>\\n"}]},{"name":"isLoggedIn","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if there is a logged user\\n\\n","description":"<p>Checks if there is a logged user</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":3106,"end":3113,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"loadUserDetails","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":243,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"loginCoreAuth","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"password","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IUiAuthResponse>","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogin to CoreAuth\\n\\n","description":"<p>Login to CoreAuth</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4602,"end":4607,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"email"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4596,"end":4601,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":4622,"end":4630,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"password"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4616,"end":4621,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":4639,"end":4646,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"logout","args":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogouts the user and clear its token and details\\n","description":"<p>Logouts the user and clear its token and details</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"supressTimeoutMessage","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\n// RxJS\\nimport { Observable, throwError } from \'rxjs\';\\nimport { catchError, map, take, tap } from \'rxjs/operators\';\\n// Ngx\\nimport { CookieService } from \'ngx-cookie-service\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Ngb\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\n// Services\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\n// Interfaces\\n\\n//Enum\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\n\\n// eslint-disable-next-line @typescript-eslint/naming-convention\\ndeclare const Assent: IUiAciSharedSession;\\n\\nexport interface IUiAuthResponse {\\n    session: IUiSession;\\n}\\n\\nexport interface IUiSession {\\n    sessionKey: string;\\n    token: string;\\n    uniqueSessionGuid: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiAuthenticationService {\\n    public authResponse: IUiAuthResponse;\\n    public assentContextKey = \'\';\\n\\n    private _httpClient: HttpClient;\\n    private _cookieDomain: string;\\n    private readonly _loginPath = \'login/password\';\\n\\n    constructor(\\n        private _handler: HttpBackend,\\n        private _router: Router,\\n        private _userService: UiUserService,\\n        private _configService: UiConfigurationService,\\n        private _cookieService: CookieService,\\n        private _modalService: NgbModal,\\n        private _translate: TranslateService,\\n        private _toastService: UiToastService\\n    ) {\\n        // Use HttpBackend so it does not go through http-error-interceptor\\n        this._httpClient = new HttpClient(this._handler);\\n\\n        this._configService.configLoaded$.pipe(take(1)).subscribe(() => {\\n            this._cookieDomain = this.getCookieDomain();\\n\\n            const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n            const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n            const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\n\\n            if (token && sessionKey) {\\n                if (!this.authResponse) {\\n                    this.authResponse = {\\n                        session: {\\n                            sessionKey: \'\',\\n                            token: \'\',\\n                            uniqueSessionGuid: \'\',\\n                        },\\n                    };\\n                }\\n                this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\n                this.loadUserDetails(token);\\n                this.initAssentSession();\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Checks if there is a logged user\\n     *\\n     * @returns\\n     */\\n    public isLoggedIn(): boolean {\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n        const tokenExpirationDate = this.getTokenExpirationDate(token);\\n\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n        const uniqueSessionGuid = this._cookieService.get(this._configService.appConfig.uniqueSessionCookieId);\\n        // debugger\\n        if (token && sessionKey) {\\n            if (!this.authResponse) {\\n                this.authResponse = {\\n                    session: {\\n                        sessionKey: \'\',\\n                        token: \'\',\\n                        uniqueSessionGuid: \'\',\\n                    },\\n                };\\n            }\\n            this.authResponse.session = { token, sessionKey, uniqueSessionGuid };\\n            this.loadUserDetails(token);\\n            this.initAssentSession();\\n        }\\n\\n        return !!tokenExpirationDate && Date.now() < tokenExpirationDate;\\n    }\\n\\n    /**\\n     * Checks if the logged-in user is an Assentee\\n     *\\n     * @returns boolean\\n     */\\n    public isAssentee(): boolean {\\n        const token = this._cookieService.get(this._configService.appConfig.authCookieId);\\n        const email = this.getTokenEmail(token);\\n        return email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\');\\n    }\\n\\n    /**\\n     * Login to CoreAuth\\n     *\\n     * @param email\\n     * @param password\\n     * @returns\\n     */\\n    public loginCoreAuth(email: string, password: string): Observable<IUiAuthResponse> {\\n        return this._httpClient\\n            .post<any>(`${this._configService.appConfig.authApi}/${this._loginPath}`, {\\n                email,\\n                password,\\n            })\\n            .pipe(\\n                map((data: IUiSession) => {\\n                    const response: IUiAuthResponse = {\\n                        session: data,\\n                    };\\n                    this.initializeSession(response);\\n                    return response; // return the response\\n                }),\\n                catchError((error: Error) => {\\n                    if (error instanceof HttpErrorResponse) {\\n                        // Handle back-end error\\n                        console.error(\'Back-end error:\', error.message);\\n                    } else {\\n                        // Handle front-end error\\n                        console.error(\'Front-end error:\', error.message);\\n                    }\\n                    return throwError(() => error);\\n                })\\n            );\\n    }\\n\\n    /**\\n     * Logouts the user and clear its token and details\\n     */\\n    public logout(supressTimeoutMessage: boolean = false) {\\n        const sessionKey = this._cookieService.get(this._configService.appConfig.sessionCookieId);\\n        this._httpClient.post(`${this._configService.appConfig.authApi}/login/logout/${sessionKey}`, {}).subscribe();\\n        this.clearUserCredentials(supressTimeoutMessage);\\n        this._cookieService.set(this._configService.appConfig.manualLogoutCookieName, \'true\');\\n        this.authResponse = undefined;\\n        this._userService.logout();\\n        this._router.navigate([\'\']);\\n    }\\n\\n    // Initialize Session if UiAuthenticationService.loginCoreAuth() Successfully logged in\\n    private initializeSession(authData: IUiAuthResponse) {\\n        const expirationDate = new Date(this.getTokenExpirationDate(authData.session.token));\\n        const secureCookie = this._configService.appConfig.secureCookie;\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            authData.session.token,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.sessionCookieId,\\n            authData.session.sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.uniqueSessionCookieId,\\n            authData.session.uniqueSessionGuid,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            secureCookie\\n        );\\n\\n        this.loadUserDetails(authData.session.token);\\n\\n        this.initAssentSession();\\n    }\\n\\n    private initAssentSession() {\\n        const options: IUiAciSessionOptions = {\\n            cookieDomain: this._cookieDomain,\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\n            logoutOverride: () => {\\n                this.clearUserCredentials();\\n                this._modalService.dismissAll();\\n                this._router.navigate([\'\']);\\n            },\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\n            onExtendSession: () => {\\n                return \'\';\\n            },\\n            sessionExpiryLogoutCookieRequired: true,\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\n            secureCookie: this._configService.appConfig.secureCookie,\\n        };\\n\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\n        if (document.cookie.match(cookiePattern)) {\\n            Assent.session.initialize(options);\\n        }\\n    }\\n\\n    private getCookieDomain(): string {\\n        let domain = this._configService.appConfig.coreAuthCookieDomain;\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\n            domain = \'localhost\';\\n        }\\n\\n        return domain;\\n    }\\n\\n    private loadUserDetails(token: string) {\\n        const userEmail = this.getTokenEmail(token);\\n        const tokenPayload = this.getTokenPayload(token);\\n        this._userService.selectUser(userEmail, tokenPayload);\\n    }\\n\\n    /**\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n     *\\n     * @param token jwt\\n     * @returns milliseconds\\n     */\\n    private getTokenExpirationDate(token: string): number {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.exp) {\\n            return;\\n        }\\n\\n        return data.exp * 1000;\\n    }\\n\\n    private getTokenEmail(token: string): string {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.sub || !this.authoriseAcpAccess(data.aud, data.sub)) {\\n            return \'\';\\n        }\\n\\n        return data.sub;\\n    }\\n\\n    private authoriseAcpAccess(aud: string[], email: string) {\\n        let result = false;\\n        const currentEnv = this._configService.appConfig.environmentName;\\n\\n        if (!aud || aud.length === 0) {\\n            this.logout(true);\\n        }\\n\\n        if (aud.includes(\'*\') && (email.endsWith(\'@assent.com\') || email.endsWith(\'@assentcompliance.com\'))) {\\n            result = true;\\n        } else if (\\n            !aud.includes(window.location.host) &&\\n            currentEnv !== UiEnvironmentNameEnum.localdev &&\\n            currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\n            currentEnv !== UiEnvironmentNameEnum.devopssandbox\\n        ) {\\n            this.logout(true);\\n        } else {\\n            result = true;\\n        }\\n\\n        return result;\\n    }\\n\\n    private getTokenPayload(token: string): any {\\n        if (!token) {\\n            return;\\n        }\\n\\n        const tokenParts = token.split(\'.\');\\n        if (!tokenParts || tokenParts.length < 2) {\\n            return;\\n        }\\n\\n        try {\\n            const data = JSON.parse(atob(tokenParts[1]));\\n            return data;\\n        } catch (error) {\\n            return;\\n        }\\n    }\\n\\n    private clearUserCredentials(supressTimeoutMessage: boolean = false) {\\n        if (!supressTimeoutMessage) {\\n            this.displayUserLogoutNotification();\\n        }\\n        Assent.session.dispose();\\n        this._cookieService.delete(this._configService.appConfig.authCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.sessionCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.uniqueSessionCookieId, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.isConsentGiven, \'/\', this._cookieDomain);\\n        this._cookieService.delete(this._configService.appConfig.isSupplier, \'/\', this._cookieDomain);\\n    }\\n\\n    private displayUserLogoutNotification() {\\n        if (this._cookieService.get(this._configService.appConfig.sessionExpiryLogoutCookieName)) {\\n            this._cookieService.delete(this._configService.appConfig.sessionExpiryLogoutCookieName);\\n            this._translate\\n                .get(\'AUTHENTICATION.SESSION_EXPIRED_LOGOUT\')\\n                .pipe(take(1))\\n                .subscribe((res: string) => {\\n                    this._toastService.show(res, UiToastTypesEnum.danger, { autoHide: false });\\n                });\\n        }\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_handler","type":"HttpBackend","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""}],"line":44,"jsdoctags":[{"name":"_handler","type":"HttpBackend","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiAuthService","id":"injectable-UiAuthService-056d7a26a620163b56ee82925134598591fe41fa065bd464aec93feb02386e6ab8b6e057649d2362d7fdf18022d027e8774b418694fbdcb8bbe2541b9322ea6d","file":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","properties":[{"name":"_activeOrgGuid","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":82,"modifierKind":[121]},{"name":"_audienceList","defaultValue":"new Set()","deprecated":false,"deprecationMessage":"","type":"Set<IUiAudience>","optional":false,"description":"","line":118,"modifierKind":[121]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":129,"modifierKind":[121,144]},{"name":"_helper","defaultValue":"new JwtHelperService()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":137,"modifierKind":[121]},{"name":"_permissionsList","defaultValue":"new Set()","deprecated":false,"deprecationMessage":"","type":"Set<string>","optional":false,"description":"<p>Accessible through the getPermissionsList and hasPermission methods</p>\\n","line":135,"rawdescription":"\\n\\nAccessible through the getPermissionsList and hasPermission methods\\n","modifierKind":[121],"jsdoctags":[{"pos":4120,"end":4209,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":4121,"end":4128,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Accessible through the getPermissionsList and hasPermission methods</p>\\n"}]},{"name":"_pollInterval","defaultValue":"300000","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":107,"modifierKind":[121,144]},{"name":"_pollReset$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Resets the polling interval for the user authentication status</p>\\n","line":80,"rawdescription":"\\n\\nResets the polling interval for the user authentication status\\n","modifierKind":[121,144]},{"name":"_rootOrgGuid","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":106,"modifierKind":[121]},{"name":"_subsidiaryExpiration","defaultValue":"3600000","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":83,"modifierKind":[121,144]},{"name":"_subsidiaryList","defaultValue":"new Set()","deprecated":false,"deprecationMessage":"","type":"Set<IUiAuthSubsidiary>","optional":false,"description":"","line":127,"modifierKind":[121]},{"name":"_unsubscribe$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":108,"modifierKind":[121,144]},{"name":"_userGuid","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":93,"modifierKind":[121]},{"name":"permissionsLoaded$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"<p>Indicates whether the permissions have been loaded.\\nCan be used to determine if the user is authenticated and has permissions.</p>\\n<p>See <code>UiAuthService.hasAnyPermission()</code>\\nSee <code>UiAuthService.hasPermissions()</code>\\nSee <code>UiAuthService.arePermissionsLoaded()</code></p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">```typescript\\nthis._authService.permissionsLoaded$.pipe(\\n  // wait for the permissions to be loaded\\n  filter((loaded) =&gt; loaded === true),\\n  ...</code></pre></div><div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">```typescript\\nthis._authService.permissionsLoaded$.subscribe((loaded) =&gt; {\\n  // wait for the permissions to be loaded\\n  if (loaded) {\\n    ...</code></pre></div><div><pre class=\\"line-numbers\\"><code class=\\"language-none\\"></code></pre></div>","line":55,"rawdescription":"\\n\\nIndicates whether the permissions have been loaded.\\nCan be used to determine if the user is authenticated and has permissions.\\n\\nSee `UiAuthService.hasAnyPermission()`\\nSee `UiAuthService.hasPermissions()`\\nSee `UiAuthService.arePermissionsLoaded()`\\n\\n```html\\n```typescript\\nthis._authService.permissionsLoaded$.pipe(\\n  // wait for the permissions to be loaded\\n  filter((loaded) => loaded === true),\\n  ...\\n```\\n```html\\n```typescript\\nthis._authService.permissionsLoaded$.subscribe((loaded) => {\\n  // wait for the permissions to be loaded\\n  if (loaded) {\\n    ...\\n```\\n```","modifierKind":[123],"jsdoctags":[{"pos":1151,"end":1198,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1152,"end":1155,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"see"},"comment":"<p><code>UiAuthService.hasAnyPermission()</code></p>\\n","name":{"pos":1156,"end":1156,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":308,"name":{"pos":1156,"end":1156,"flags":4292608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":""}}},{"pos":1198,"end":1243,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1199,"end":1202,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"see"},"comment":"<p><code>UiAuthService.hasPermissions()</code></p>\\n","name":{"pos":1203,"end":1203,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":308,"name":{"pos":1203,"end":1203,"flags":4292608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":""}}},{"pos":1243,"end":1301,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":344,"tagName":{"pos":1244,"end":1247,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"see"},"comment":"<p><code>UiAuthService.arePermissionsLoaded()</code></p>\\n","name":{"pos":1248,"end":1248,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":308,"name":{"pos":1248,"end":1248,"flags":4292608,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":""}}},{"pos":1301,"end":1508,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1302,"end":1309,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<pre><code class=\\"language-typescript\\">this._authService.permissionsLoaded$.pipe(\\n  // wait for the permissions to be loaded\\n  filter((loaded) =&gt; loaded === true),\\n  ...\\n</code></pre>\\n"},{"pos":1508,"end":1710,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1509,"end":1516,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<pre><code class=\\"language-typescript\\">this._authService.permissionsLoaded$.subscribe((loaded) =&gt; {\\n  // wait for the permissions to be loaded\\n  if (loaded) {\\n    ...\\n</code></pre>\\n"}]},{"name":"subsidiariesLoaded$","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IUiAuthSubsidiary[]>","optional":false,"description":"","line":57,"modifierKind":[123]}],"methods":[{"name":"addPermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":528,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds a new permission if it does not already exist.\\n\\n","description":"<p>Adds a new permission if it does not already exist.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":17877,"end":17887,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permission"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":17871,"end":17876,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permission to add.</p>\\n"}]},{"name":"addPermissions","args":[{"name":"permissions","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":537,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds multiple permissions.\\n\\n","description":"<p>Adds multiple permissions.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":18090,"end":18101,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":18084,"end":18089,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permissions to add.</p>\\n"}]},{"name":"addPermissionsFromDecodedToken","args":[{"name":"decodedToken","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":434,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds permissions from the decoded token.\\n\\n","description":"<p>Adds permissions from the decoded token.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":14793,"end":14805,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"decodedToken"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":14787,"end":14792,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The decoded token containing permissions.</li>\\n</ul>\\n"},{"tagName":{"pos":14716,"end":14723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Adds permissions from the decoded token.</p>\\n"}]},{"name":"arePermissionsLoaded","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":519,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the permissions have been loaded.\\n\\n","description":"<p>Checks if the permissions have been loaded.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":17611,"end":17618,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if the permissions have been loaded, false otherwise.</p>\\n"}]},{"name":"getAudience","args":[{"name":"nameOrPath","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiAudience | undefined","typeParameters":[],"line":297,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets the exact audience with the specified name.\\n\\n","description":"<p>Gets the exact audience with the specified name.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9804,"end":9814,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"nameOrPath"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":9798,"end":9803,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The name of the audience to get.</p>\\n"},{"tagName":{"pos":9719,"end":9726,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Gets the exact audience with the specified name.</p>\\n"},{"tagName":{"pos":9856,"end":9863,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The audience with the specified name, or undefined if not found.</p>\\n"}]},{"name":"getAudienceFromPath","args":[{"name":"path","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":311,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the audience from the given path.\\n\\n","description":"<p>Retrieves the audience from the given path.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10361,"end":10365,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":10355,"end":10360,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The path to check for audience.</li>\\n</ul>\\n"},{"tagName":{"pos":10408,"end":10415,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The audience if a matching endpoint is found, otherwise null.</p>\\n"}]},{"name":"getDecodedToken","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":407,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves and decodes a token with the specified name.\\n\\n","description":"<p>Retrieves and decodes a token with the specified name.</p>\\n","modifierKind":[123,131],"jsdoctags":[{"name":{"pos":13909,"end":13913,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"name"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":13903,"end":13908,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The name of the token to retrieve and decode.</li>\\n</ul>\\n"},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"text":"param"}},{"tagName":{"pos":13818,"end":13825,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Retrieves and decodes a token with the specified name.</p>\\n"},{"tagName":{"pos":13970,"end":13977,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.</p>\\n"}]},{"name":"getDecodedTokenByAudience","args":[{"name":"audience","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":384,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the decoded token for a given audience.\\n\\n","description":"<p>Retrieves the decoded token for a given audience.</p>\\n","modifierKind":[121,131],"jsdoctags":[{"name":{"pos":12948,"end":12956,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"audience"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":12942,"end":12947,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The audience for which to retrieve the token.</li>\\n</ul>\\n"},{"name":{"pos":13019,"end":13028,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"cacheMode"},"type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"pos":13013,"end":13018,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The cache mode for retrieving the token. Defaults to &#39;on&#39;.</li>\\n</ul>\\n"},{"tagName":{"pos":12862,"end":12869,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Retrieves the decoded token for a given audience.</p>\\n"},{"tagName":{"pos":13098,"end":13105,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A Promise that resolves to the decoded token, or undefined if the token is not found.</p>\\n"}]},{"name":"getPermissionsList","args":[],"optional":false,"returnType":"string[]","typeParameters":[],"line":555,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets the list of all permissions.\\n\\n","description":"<p>Gets the list of all permissions.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":18566,"end":18573,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of all permissions.</p>\\n"}]},{"name":"getToken","args":[{"name":"audienceName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Observable<string | undefined>","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves a token for the specified audience.\\n\\n","description":"<p>Retrieves a token for the specified audience.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10978,"end":10990,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"audienceName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":10972,"end":10977,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The name of the audience.</li>\\n</ul>\\n"},{"name":{"pos":11033,"end":11042,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"cacheMode"},"type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"pos":11027,"end":11032,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The cache mode for the token. Defaults to &#39;on&#39;.</li>\\n</ul>\\n"},{"tagName":{"pos":11101,"end":11108,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An Observable that emits the token string or undefined.</p>\\n"}]},{"name":"getTokenByAudience","args":[{"name":"audience","type":"string","deprecated":false,"deprecationMessage":""},{"name":"cacheMode","type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'"}],"optional":false,"returnType":"Observable<string | undefined>","typeParameters":[],"line":361,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves a token by audience.\\n\\n","description":"<p>Retrieves a token by audience.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":12050,"end":12058,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"audience"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":12044,"end":12049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The audience for which to retrieve the token.</li>\\n</ul>\\n"},{"name":{"pos":12121,"end":12130,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"cacheMode"},"type":"\\"on\\" | \\"off\\"","deprecated":false,"deprecationMessage":"","defaultValue":"\'on\'","tagName":{"pos":12115,"end":12120,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>The cache mode for retrieving the token. Defaults to &#39;on&#39;.</li>\\n</ul>\\n"},{"tagName":{"pos":11983,"end":11990,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Retrieves a token by audience.</p>\\n"},{"tagName":{"pos":12200,"end":12207,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.</p>\\n"}]},{"name":"hasAnyPermission","args":[{"name":"permissions","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":510,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if any of the specified permissions exist.\\n\\n","description":"<p>Checks if any of the specified permissions exist.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":17277,"end":17288,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":17271,"end":17276,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permissions to check.</p>\\n"},{"tagName":{"pos":17323,"end":17330,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if any permission exists, false otherwise.</p>\\n"}]},{"name":"hasPermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":480,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if a specific permission exists.\\n\\n","description":"<p>Checks if a specific permission exists.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":16242,"end":16252,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permission"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":16236,"end":16241,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permission to check.</p>\\n"},{"tagName":{"pos":16286,"end":16293,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if the permission exists, false otherwise.</p>\\n"}]},{"name":"hasPermissions","args":[{"name":"permissions","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":500,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if all specified permissions exist.\\n\\n","description":"<p>Checks if all specified permissions exist.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":16932,"end":16943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":16926,"end":16931,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permissions to check.</p>\\n"},{"tagName":{"pos":16978,"end":16985,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>True if all permissions exist, false otherwise.</p>\\n"}]},{"name":"initializeApp","args":[],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInitializes the application by loading permissions if the user is authenticated.\\n\\n","description":"<p>Initializes the application by loading permissions if the user is authenticated.</p>\\n","modifierKind":[123,131],"jsdoctags":[{"tagName":{"pos":5782,"end":5789,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>Promise&lt;boolean&gt;</code> A promise that resolves to <code>true</code> if the initialization is successful, otherwise <code>false</code>.</p>\\n"}]},{"name":"isUserAuthenticated","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the user is authenticated.\\n\\n","description":"<p>Checks if the user is authenticated.</p>\\n","modifierKind":[123,131],"jsdoctags":[{"tagName":{"pos":7910,"end":7917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>A promise that resolves to a boolean indicating whether the user is authenticated or not.</p>\\n"}]},{"name":"loadPermissions","args":[],"optional":false,"returnType":"Promise<void>","typeParameters":[],"line":451,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLoads permissions from the user\'s token.\\n\\n","description":"<p>Loads permissions from the user&#39;s token.</p>\\n","modifierKind":[121,131],"jsdoctags":[{"tagName":{"pos":15254,"end":15261,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Loads permissions from the user&#39;s token.</p>\\n"},{"tagName":{"pos":15325,"end":15332,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>Promise&lt;void&gt;</code> A promise that resolves when the permissions have been loaded.</p>\\n"}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":164,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"pollAccessToken","args":[],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":254,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPolls for an access token at a specified interval.\\n\\n","description":"<p>Polls for an access token at a specified interval.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":8386,"end":8393,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An observable that emits the access token as a string.</p>\\n"}]},{"name":"removePermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":546,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves a specific permission.\\n\\n","description":"<p>Removes a specific permission.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":18343,"end":18353,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permission"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":18337,"end":18342,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The permission to remove.</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, OnDestroy } from \'@angular/core\';\\nimport { AuthService } from \'@auth0/auth0-angular\';\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\n// eslint-disable-next-line max-len\\nimport { BehaviorSubject, catchError, EMPTY, firstValueFrom, interval, Observable, of, shareReplay, startWith, Subject, switchMap, takeUntil, tap } from \'rxjs\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { IUiAuth0Config } from \'../auth0-config\';\\nimport { CookieService } from \'ngx-cookie-service\';\\n\\nexport interface IUiAudience {\\n    name: string;\\n    audience: string;\\n    endpoint: string;\\n    path?: string;\\n}\\n\\n/**\\n * Represents a subsidiary.\\n *\\n * @see `IAspSubsidiary`\\n */\\nexport interface IUiAuthSubsidiary {\\n    partyGuid: string; // TODO cleanup interfaces\\n    name: string;\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiAuthService implements OnDestroy {\\n    /**\\n     * Indicates whether the permissions have been loaded.\\n     * Can be used to determine if the user is authenticated and has permissions.\\n     *\\n     * @see `UiAuthService.hasAnyPermission()`\\n     * @see `UiAuthService.hasPermissions()`\\n     * @see `UiAuthService.arePermissionsLoaded()`\\n     *\\n     * @example\\n     * ```typescript\\n     * this._authService.permissionsLoaded$.pipe(\\n     *   // wait for the permissions to be loaded\\n     *   filter((loaded) => loaded === true),\\n     *   ...\\n     * ```\\n     * @example\\n     * ```typescript\\n     * this._authService.permissionsLoaded$.subscribe((loaded) => {\\n     *   // wait for the permissions to be loaded\\n     *   if (loaded) {\\n     *     ...\\n     * ```\\n     */\\n    public permissionsLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\n    public subsidiariesLoaded$: BehaviorSubject<IUiAuthSubsidiary[]> = new BehaviorSubject(null);\\n\\n    /**\\n     * Gets the active organization GUID.\\n     *\\n     * @returns The active organization GUID, or undefined if not set.\\n     */\\n    public get activeOrgGuid(): string | undefined {\\n        const storedValue = sessionStorage.getItem(\'activeOrgGuid\');\\n        if (storedValue) {\\n            return storedValue;\\n        }\\n        return this._activeOrgGuid;\\n    }\\n    public set activeOrgGuid(value: string) {\\n        this._activeOrgGuid = value;\\n        // set value in local storage for an hour\\n        sessionStorage.setItem(\'activeOrgGuid\', value);\\n    }\\n\\n    /**\\n     * Resets the polling interval for the user authentication status\\n     */\\n    private readonly _pollReset$ = new Subject<void>();\\n\\n    private _activeOrgGuid: string | undefined;\\n    private readonly _subsidiaryExpiration = 3600000; // 1 hour\\n\\n    /**\\n     * Gets the user GUID.\\n     *\\n     * @returns The user GUID as a string or undefined if not available.\\n     */\\n    public get userGuid(): string | undefined {\\n        return this._userGuid;\\n    }\\n    private _userGuid: string | undefined;\\n\\n    /**\\n     * Gets the root organization GUID.\\n     *\\n     * @returns The root organization GUID, or undefined if not set.\\n     */\\n    public get rootOrgGuid(): string | undefined {\\n        return this._rootOrgGuid;\\n    }\\n    public set rootOrgGuid(value: string | undefined) {\\n        this._rootOrgGuid = value;\\n    }\\n    private _rootOrgGuid: string | undefined;\\n    private readonly _pollInterval = 300000; // 5 minutes\\n    private readonly _unsubscribe$ = new Subject<void>();\\n\\n    /**\\n     * Gets the list of audiences.\\n     *\\n     * @returns An array of all audiences.\\n     */\\n    public get audienceList(): IUiAudience[] {\\n        return Array.from(this._audienceList);\\n    }\\n    private _audienceList: Set<IUiAudience> = new Set();\\n\\n    public get subsidiaries(): IUiAuthSubsidiary[] {\\n        return Array.from(this._subsidiaryList);\\n    }\\n    public set subsidiaries(value: any[]) {\\n        this._subsidiaryList = new Set(value);\\n        this.subsidiariesLoaded$.next(Array.from(this._subsidiaryList));\\n    }\\n    private _subsidiaryList: Set<IUiAuthSubsidiary> = new Set();\\n\\n    private readonly _config: IUiAuth0Config;\\n\\n    /**\\n     * @private\\n     * Accessible through the getPermissionsList and hasPermission methods\\n     */\\n    private _permissionsList: Set<string> = new Set();\\n\\n    private _helper = new JwtHelperService();\\n\\n    constructor(\\n        private readonly _auth0Service: AuthService,\\n        private readonly _configurationService: UiConfigurationService,\\n        private readonly _cookieService: CookieService,\\n    ) {\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\n\\n        // Clear audiences\\n        this._audienceList.clear();\\n        const audiences = this._config.audiences;\\n        if (!audiences || audiences.length === 0) {\\n            console.error(\'No audiences defined in the configuration.\');\\n        }\\n        // Add audiences to the list\\n        audiences.forEach((audience) => {\\n            const existingAudience = Array.from(this._audienceList)\\n                .find((aud) => (audience.name === aud.name) || (audience.audience === aud.audience));\\n            if (existingAudience) {\\n                console.warn(`Warning -> Duplicate audience found.`);\\n            } else {\\n                this._audienceList.add(audience);\\n            }\\n        });\\n    }\\n\\n    public ngOnDestroy() {\\n        // Clear permissions\\n        this._permissionsList.clear();\\n        this._subsidiaryList.clear();\\n        this._activeOrgGuid = undefined;\\n        // Set observables to null\\n        this.permissionsLoaded$.next(null);\\n        this._unsubscribe$.next();\\n        this._unsubscribe$.complete();\\n    }\\n\\n    //#region Init\\n\\n    /**\\n     * Initializes the application by loading permissions if the user is authenticated.\\n     *\\n     * @returns `Promise<boolean>` A promise that resolves to `true` if the initialization is successful, otherwise `false`.\\n     * @throws {Error} If an error occurs during the initialization process.\\n     */\\n    public async initializeApp(): Promise<any> {\\n        try {\\n            // Verify that the user is logged in\\n            const isAuthenticated = await this.isUserAuthenticated();\\n            if (!isAuthenticated) {\\n                console.warn(\'Warning -> User not authenticated.\');\\n                this._auth0Service.logout();\\n                this._auth0Service.loginWithRedirect();\\n                // Stop execution of the method if the user is not authenticated\\n                return false;\\n            }\\n\\n            this._auth0Service.user$.subscribe((user) => {\\n                this._cookieService.set(this._configurationService.appConfig.emailCookieId, user.email);\\n            });\\n\\n            // Reset the permission and init observables\\n            this.permissionsLoaded$.next(false);\\n\\n            // Clear permission\\n            this._permissionsList.clear();\\n            this._subsidiaryList.clear();\\n\\n            // Get entitlement token (cachemode = off)\\n            const token = await this.getDecodedTokenByAudience(this._config.authorizationParams.audience, \'off\');\\n            if (token) {\\n                // Set userguid\\n                this._userGuid = token.user_guid;\\n                // Set rootorg\\n                this._rootOrgGuid = token.root_org_guid;\\n\\n                this.addPermissionsFromDecodedToken(token);\\n\\n                //await this.loadPermissions().then(() => {\\n                this.permissionsLoaded$.next(true);\\n                return true;\\n                //});\\n            } else {\\n                console.error(\'No token available for audience.\');\\n                // Return false on error\\n                return false;\\n            }\\n        } catch (error) {\\n            console.error(\'Error initializing app.\');\\n            // Return false on error\\n            return false;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    /**\\n     * Checks if the user is authenticated.\\n     *\\n     * @returns A promise that resolves to a boolean indicating whether the user is authenticated or not.\\n     */\\n    public async isUserAuthenticated(): Promise<boolean> {\\n        try {\\n            return firstValueFrom(this._auth0Service.isAuthenticated$).then((isAuthenticated) => {\\n                return isAuthenticated;\\n            });\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Polls for an access token at a specified interval.\\n     *\\n     * @returns An observable that emits the access token as a string.\\n     */\\n    public pollAccessToken(): Observable<string> {\\n        return this._pollReset$.pipe(\\n            startWith(0),\\n            switchMap(() =>\\n                interval(this._pollInterval).pipe(\\n                    takeUntil(this._pollReset$),\\n                    switchMap(() =>\\n                        this._auth0Service.getAccessTokenSilently().pipe(\\n                            catchError((error) => {\\n                                console.error(\'Error fetching access token:\', error);\\n                                this._auth0Service.logout();\\n                                this._auth0Service.loginWithRedirect();\\n                                // Complete the observable after redirecting\\n                                return EMPTY;\\n                            })\\n                        )\\n                    )\\n                )\\n            ),\\n            takeUntil(this._unsubscribe$),\\n            shareReplay(1)\\n        );\\n    }\\n\\n    /**\\n     * @private\\n     * Returns the subsidiary list.\\n     *\\n     * @returns An array of IUiAuthSubsidiary objects representing the subsidiary list.\\n     */\\n    private get subsidiaryList(): IUiAuthSubsidiary[] {\\n        return Array.from(this._subsidiaryList);\\n    }\\n\\n    //#region Audience\\n\\n    /**\\n     * @private\\n     * Gets the exact audience with the specified name.\\n     *\\n     * @param nameOrPath The name of the audience to get.\\n     * @returns The audience with the specified name, or undefined if not found.\\n     */\\n    private getAudience(nameOrPath: string): IUiAudience | undefined {\\n        let audienceMatch = this.audienceList.find((audience) => audience.name === nameOrPath);\\n        if (!audienceMatch) {\\n            audienceMatch = this.audienceList.find((audience) => audience.audience === nameOrPath);\\n        }\\n        return audienceMatch;\\n    }\\n\\n    /**\\n     * Retrieves the audience from the given path.\\n     *\\n     * @param path - The path to check for audience.\\n     * @returns The audience if a matching endpoint is found, otherwise null.\\n     */\\n    public getAudienceFromPath(path: string): string {\\n        // First check for an exact match to the API endpoint\\n        const matchingAudience = this.audienceList.find((audience) => {\\n            const matchPath = path.includes(audience.endpoint);\\n            return matchPath;\\n        });\\n        return matchingAudience ? matchingAudience.audience : null;\\n    }\\n\\n    //#endregion\\n\\n    //#region Tokens\\n\\n    /**\\n     * Retrieves a token for the specified audience.\\n     *\\n     * @param audienceName - The name of the audience.\\n     * @param cacheMode - The cache mode for the token. Defaults to \'on\'.\\n     * @returns An Observable that emits the token string or undefined.\\n     */\\n    public getToken(audienceName: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\n        try {\\n            // Verify that the user is logged in\\n            if (!this._auth0Service.isAuthenticated$) {\\n                console.error(\' Error -> User not authenticated.\');\\n                return of(undefined);\\n            }\\n\\n            // Request a new JWT if the current one is not valid\\n            const aud = this.getAudience(audienceName);\\n            if (!aud) {\\n                console.error(\' Error -> Audience not found.\');\\n                return of(undefined);\\n            }\\n\\n            return this.getTokenByAudience(aud.audience);\\n        } catch (error) {\\n            console.error(\'Error in getToken.\');\\n            return of(undefined);\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves a token by audience.\\n     *\\n     * @param audience - The audience for which to retrieve the token.\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\n     * @returns An Observable that emits the retrieved token as a string, or undefined if the token could not be retrieved.\\n     */\\n    private getTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Observable<string | undefined> {\\n        return this._auth0Service.getAccessTokenSilently({\\n            authorizationParams: {\\n                audience,\\n                activeOrgGuid: this._activeOrgGuid,\\n            },\\n            cacheMode,\\n        }).pipe(\\n            tap(() => {\\n            // Emit a value to reset the polling interval after getting the token\\n                this._pollReset$.next();\\n            })\\n        );\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves the decoded token for a given audience.\\n     *\\n     * @param audience - The audience for which to retrieve the token.\\n     * @param cacheMode - The cache mode for retrieving the token. Defaults to \'on\'.\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found.\\n     */\\n    private async getDecodedTokenByAudience(audience: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\n        try {\\n            const token = await firstValueFrom(this.getTokenByAudience(audience, cacheMode));\\n            if (!token) {\\n                return undefined;\\n            }\\n            // Decode the token\\n            const decodedToken = this._helper.decodeToken(token);\\n            // Return the decoded token\\n            return decodedToken;\\n        } catch (error) {\\n            console.error(\'Error in getDecodedTokenByAudience.\');\\n            return undefined;\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Retrieves and decodes a token with the specified name.\\n     *\\n     * @param name - The name of the token to retrieve and decode.\\n     * @returns A Promise that resolves to the decoded token, or undefined if the token is not found or an error occurs.\\n     */\\n    public async getDecodedToken(name: string, cacheMode: \'on\' | \'off\' = \'on\'): Promise<any> {\\n        try {\\n            const token = await firstValueFrom(this.getToken(name, cacheMode));\\n            if (!token) {\\n                return undefined;\\n            }\\n\\n            // Decode the token\\n            const decodedToken = this._helper.decodeToken(token);\\n            // Return the decoded token\\n            return decodedToken;\\n        } catch (error) {\\n            console.error(\'Error in getDecodedToken.\');\\n            return undefined;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    //#region Permissions\\n\\n    /**\\n     * @private\\n     * Adds permissions from the decoded token.\\n     *\\n     * @param decodedToken - The decoded token containing permissions.\\n     */\\n    private addPermissionsFromDecodedToken(decodedToken: any) {\\n        try {\\n            if (decodedToken && decodedToken.permissions) {\\n                // Add permissions to the list\\n                this.addPermissions(decodedToken.permissions);\\n            }\\n        } catch (error) {\\n            console.error(\'Error adding permissions from decoded token.\');\\n        }\\n    }\\n\\n    /**\\n     * @private\\n     * Loads permissions from the user\'s token.\\n     *\\n     * @returns `Promise<void>` A promise that resolves when the permissions have been loaded.\\n     */\\n    private async loadPermissions(): Promise<void> {\\n        try {\\n            await Promise.all(\\n                Array.from(this._audienceList)\\n                    .map((audience) => {\\n                        return this.getDecodedToken(audience.name); // not by audience\\n                    })\\n            ).then((tokens) => {\\n                if (tokens.length > 0) {\\n                    tokens.forEach((token) => {\\n                        // Load permissions from the token\\n                        this.addPermissionsFromDecodedToken(token);\\n                    });\\n                }\\n            });\\n        } catch (error) {\\n            console.error(\'Error loading permissions.\');\\n            throw error;\\n        }\\n    }\\n\\n    //#endregion\\n\\n    /**\\n     * Checks if a specific permission exists.\\n     *\\n     * @param permission The permission to check.\\n     * @returns True if the permission exists, false otherwise.\\n     */\\n    public hasPermission(permission: string): boolean {\\n        // Check for an exact permission match\\n        if (this._permissionsList.has(permission)) {\\n            return true;\\n        } else {\\n            // Check for a fuzzy match on the audience portion of the permission\\n            const permissionFound = Array.from(this._permissionsList).find((p) => p.includes(permission));\\n            if (permissionFound) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * Checks if all specified permissions exist.\\n     *\\n     * @param permissions The permissions to check.\\n     * @returns True if all permissions exist, false otherwise.\\n     */\\n    public hasPermissions(permissions: string[]): boolean {\\n        return permissions.every((permission) => this.hasPermission(permission));\\n    }\\n\\n    /**\\n     * Checks if any of the specified permissions exist.\\n     *\\n     * @param permissions The permissions to check.\\n     * @returns True if any permission exists, false otherwise.\\n     */\\n    public hasAnyPermission(permissions: string[]): boolean {\\n        return permissions.some((permission) => this.hasPermission(permission));\\n    }\\n\\n    /**\\n     * Checks if the permissions have been loaded.\\n     *\\n     * @returns True if the permissions have been loaded, false otherwise.\\n     */\\n    public arePermissionsLoaded(): boolean {\\n        return this.permissionsLoaded$.getValue();\\n    }\\n\\n    /**\\n     * Adds a new permission if it does not already exist.\\n     *\\n     * @param permission The permission to add.\\n     */\\n    private addPermission(permission: string): void {\\n        this._permissionsList.add(permission);\\n    }\\n\\n    /**\\n     * Adds multiple permissions.\\n     *\\n     * @param permissions The permissions to add.\\n     */\\n    private addPermissions(permissions: string[]): void {\\n        permissions.forEach((permission) => this.addPermission(permission));\\n    }\\n\\n    /**\\n     * Removes a specific permission.\\n     *\\n     * @param permission The permission to remove.\\n     */\\n    private removePermission(permission: string): void {\\n        this._permissionsList.delete(permission);\\n    }\\n\\n    /**\\n     * Gets the list of all permissions.\\n     *\\n     * @returns An array of all permissions.\\n     */\\n    public getPermissionsList(): string[] {\\n        return Array.from(this._permissionsList);\\n    }\\n\\n    //#endregion\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":137,"jsdoctags":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"activeOrgGuid":{"name":"activeOrgGuid","setSignature":{"name":"activeOrgGuid","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":71,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"activeOrgGuid","type":"","returnType":"string | undefined","line":64,"rawdescription":"\\n\\nGets the active organization GUID.\\n\\n","description":"<p>Gets the active organization GUID.</p>\\n","jsdoctags":[{"pos":1963,"end":2032,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":1964,"end":1971,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The active organization GUID, or undefined if not set.</p>\\n"}]}},"userGuid":{"name":"userGuid","getSignature":{"name":"userGuid","type":"","returnType":"string | undefined","line":90,"rawdescription":"\\n\\nGets the user GUID.\\n\\n","description":"<p>Gets the user GUID.</p>\\n","jsdoctags":[{"pos":2769,"end":2840,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":2770,"end":2777,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The user GUID as a string or undefined if not available.</p>\\n"}]}},"rootOrgGuid":{"name":"rootOrgGuid","setSignature":{"name":"rootOrgGuid","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":103,"jsdoctags":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"rootOrgGuid","type":"","returnType":"string | undefined","line":100,"rawdescription":"\\n\\nGets the root organization GUID.\\n\\n","description":"<p>Gets the root organization GUID.</p>\\n","jsdoctags":[{"pos":3034,"end":3101,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":3035,"end":3042,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The root organization GUID, or undefined if not set.</p>\\n"}]}},"audienceList":{"name":"audienceList","getSignature":{"name":"audienceList","type":"[]","returnType":"IUiAudience[]","line":115,"rawdescription":"\\n\\nGets the list of audiences.\\n\\n","description":"<p>Gets the list of audiences.</p>\\n","jsdoctags":[{"pos":3512,"end":3553,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":3513,"end":3520,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of all audiences.</p>\\n"}]}},"subsidiaries":{"name":"subsidiaries","setSignature":{"name":"subsidiaries","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"any[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":123,"jsdoctags":[{"name":"value","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subsidiaries","type":"[]","returnType":"IUiAuthSubsidiary[]","line":120}},"subsidiaryList":{"name":"subsidiaryList","getSignature":{"name":"subsidiaryList","type":"[]","returnType":"IUiAuthSubsidiary[]","line":284,"rawdescription":"\\n\\nReturns the subsidiary list.\\n\\n","description":"<p>Returns the subsidiary list.</p>\\n","jsdoctags":[{"pos":9419,"end":9478,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":9420,"end":9427,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":"<p>Returns the subsidiary list.</p>\\n"},{"pos":9478,"end":9564,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":9479,"end":9486,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>An array of IUiAuthSubsidiary objects representing the subsidiary list.</p>\\n"}]}}},"type":"injectable"},{"name":"UiConfigurationService","id":"injectable-UiConfigurationService-a5d627f262c5de83b7ad67dc40ecd921e04928c52abf27d5b5da861862b3b51b011f02b260cc2169c2caeb4156d6bde6bbda0f3f8fb5eec86aae70d73b96fbb2","file":"libs/ui/src/lib/services/configuration/configuration.service.ts","properties":[{"name":"_configFile","defaultValue":"\'assets/configs/app-config.json\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":68,"modifierKind":[121,144]},{"name":"_httpClient","deprecated":false,"deprecationMessage":"","type":"HttpClient","optional":false,"description":"","line":67,"modifierKind":[121]},{"name":"appConfig","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"configLoaded$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":64,"modifierKind":[123]},{"name":"environmentVariables","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":65,"modifierKind":[123]}],"methods":[{"name":"getConfig","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"T","typeParameters":["T"],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initializeApp","args":[],"optional":false,"returnType":"Promise<boolean>","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123,131]},{"name":"initializeFromObject","args":[{"name":"configData","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"configData","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setEnvironmentVariables","args":[{"name":"env","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"env","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpBackend, HttpClient, HttpErrorResponse } from \'@angular/common/http\';\\n// RxJS\\nimport { Subject, throwError } from \'rxjs\';\\n\\nexport interface IUiAppConfig {\\n    aiApi: string;\\n    dataApi: string;\\n    authApi: string; // e.g \\"http://api.localdev.assentcompliance.com:8080/v1/authentication\\",\\n    authCheckApi: string;\\n    gcApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/GlobalCatalogApi\\"\\n    aciServiceApi: string;\\n    iamApi: string;\\n    requestOtpTokenSlug: string; // e.g. \\"authentication/signin\\"\\n    verifyOtpTokenSlug: string; // e.g. \\"authentication/verifytoken\\"\\n\\n    enablePendoAcpUi: boolean;\\n    pendoApiKey: string;\\n    aucBaseUrl: string;\\n    contactManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ContactManagementApi/\\"\\n    partyApi: string;\\n    tenantRequestApi: string;\\n    supplierExperienceApi: string;\\n    indirectMonitoringApi: string;\\n    surveySubmissionApi: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveySubmissionApi\\"\\n    coreAuthCookieDomain: string; // e.g \\".assentcompliance.com\\",\\n    authCookieId: string; // e.g. \\"auth_token\\"\\n    sessionCookieId: string; // e.g. \\"sessionKey\\"\\n    emailCookieId: string; // e.g. \\"user.email\\"\\n    environmentName: string; // e.g. \\"localdev\\", \\"qa\\", \\"production\\"\\n    rememberMe: string; // e.g. localdev.remember_me\\n    correctiveActionsService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/CorrectiveActionsService\\"\\n    scanUrl: string; // e.g wss://2bfckqgh8h.execute-api.us-east-1.amazonaws.com/dev\\n    scanBucketName: string; // e.g assent-csr-file-upload-service-scan-bucket\\n    scanBucketRegion: string; // e.g us-east-1\\n    scanIdentityPoolId: string; // e.g us-east-1:2bbb60c2-3c7a-4195-bafe-3f8ef5fb2ffe\\n    coreAuthenticationLogin: string; //e.g. http://core-login.localdev.assentcompliance.com/#/login\\n    supplierHelpCenter: string;\\n    // e.g. \\"https://assentcompliance.force.com/SupplierCustomerPortal/s/topic/0TO8X000000B4LJWA0/corrective-actions?language=en_US\\"\\n    termsOfService: string; // e.g. \\"https://www.assent.com/terms-of-use-supplier-portal\\"\\n    supplierLoginEnabled: boolean;\\n    moduleManagementApi: string; // e.g. \\"https://api.localdev.assentcompliance.com:8080/v1/ModuleManagementApi/\\"\\n    sessionExpiryLogoutCookieName: string; // e.g. \\"sessionExpiryLogout\\"\\n    manualLogoutCookieName: string; // e.g. \\"manualLogout\\"\\n    forceAllSessionsLogoutCookieName: string; // e.g. \\"forceAllSessionsLogout\\"\\n    isSupplier: string;\\n    isConsentGiven: string;\\n    secureCookie: boolean;\\n    surveyRulesService: string; // e.g. \\"http://api.localdev.assentcompliance.com:8080/v1/SurveyRulesService\\"\\n    profileManager: boolean;\\n    authServiceVersion: string; // e.g. \\"cognito\\" / \\"auth0\\"\\n    uniqueSessionCookieId: string; // e.g. \\"uniqueSessionGuid\\"\\n    awsS3ServiceURL: string; // e.g \\"http://aws.localdev.assentcompliance.com:4567\\"\\n    supo2NavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.com\\"\\n    supoEuNavigationUrl: string; // e.g. \\"http://supplierportal.localdev.assentcompliance.eu\\"\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiConfigurationService {\\n    public appConfig: any;\\n    public configLoaded$: Subject<void> = new Subject();\\n    public environmentVariables: any;\\n\\n    private _httpClient: HttpClient;\\n    private readonly _configFile = \'assets/configs/app-config.json\';\\n\\n    constructor(handler: HttpBackend) {\\n        this._httpClient = new HttpClient(handler);\\n    }\\n\\n    public getConfig<T>(name: string): T {\\n        if (this.appConfig && this.appConfig[name]) {\\n            return this.appConfig[name] as T;\\n        }\\n    }\\n\\n    public initializeFromObject(configData: any) {\\n        this.appConfig = configData;\\n    }\\n\\n    public async initializeApp(): Promise<boolean> {\\n        return new Promise((_resolve, _reject) => {\\n            this._httpClient.get(this._configFile).subscribe({\\n                next: (configData: any) => {\\n                    this.appConfig = configData;\\n                    this.configLoaded$.next(null);\\n                },\\n                error: (error: HttpErrorResponse) => {\\n                    _reject(true);\\n                    return throwError(() => error || \'Server error\');\\n                },\\n                complete: () => {\\n                    _resolve(true);\\n                },\\n            });\\n        });\\n    }\\n\\n    public setEnvironmentVariables(env: any) {\\n        this.environmentVariables = env;\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"handler","type":"HttpBackend","deprecated":false,"deprecationMessage":""}],"line":68,"jsdoctags":[{"name":"handler","type":"HttpBackend","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiCsvParserService","id":"injectable-UiCsvParserService-006eb519a3cbf456dd7927bc166a9a8b2db88e8852b97149439bfb5734ef562053db423b04144a54bc19dafebe2c8c16660f7c2b67b94eb0df81bcb775903552","file":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","properties":[{"name":"_defaultConfig","defaultValue":"{\\n        header: true,\\n        delimiter: \',\',\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiCsvParserConfig","optional":false,"description":"","line":10,"modifierKind":[121]}],"methods":[{"name":"csvStringToArray","args":[{"name":"csvDataString","type":"string","deprecated":false,"deprecationMessage":""},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvDataString","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"delimiter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDataRecordsArrayFromCsvFile","args":[{"name":"csvRecordsArray","type":"any","deprecated":false,"deprecationMessage":""},{"name":"headerLength","type":"number","deprecated":false,"deprecationMessage":""},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvRecordsArray","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"headerLength","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getHeaderArray","args":[{"name":"csvRecordsArr","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvRecordsArr","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isCsvFile","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"parse","args":[{"name":"csvFile","type":"File","deprecated":false,"deprecationMessage":""},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Array | string>","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"csvFile","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"IUiCsvParserConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n// Rxjs\\nimport { Observable, Observer } from \'rxjs\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiCsvParserService {\\n    private _defaultConfig: IUiCsvParserConfig = {\\n        header: true,\\n        delimiter: \',\',\\n    };\\n\\n    public parse(csvFile: File, config: IUiCsvParserConfig): Observable<Array<any> | string> {\\n        config = {\\n            ...this._defaultConfig,\\n            ...config,\\n        };\\n\\n        const parser$ = new Observable((observer: Observer<Array<any> | string>) => {\\n            try {\\n                if (!this.isCsvFile(csvFile)) {\\n                    observer.error(\'NOT_A_CSV_FILE\');\\n                    return;\\n                }\\n\\n                const reader = new FileReader();\\n                reader.readAsText(csvFile);\\n\\n                reader.onload = () => {\\n                    const csvData = reader.result;\\n\\n                    if (!csvData) {\\n                        observer.error(\'EMPTY_FILE\');\\n                        return;\\n                    }\\n\\n                    const csvRecordsArray = this.csvStringToArray((csvData as string).trim(), config.delimiter);\\n                    const headersRow = this.getHeaderArray(csvRecordsArray);\\n                    const csvRecords = this.getDataRecordsArrayFromCsvFile(csvRecordsArray, headersRow.length, config);\\n\\n                    observer.next(csvRecords);\\n                    observer.complete();\\n                };\\n\\n                reader.onerror = () => {\\n                    observer.error(\'BAD_CSV_DATA_FORMAT\');\\n                };\\n            } catch (error) {\\n                observer.error(\'UNKNOWN_ERROR\');\\n            }\\n        });\\n\\n        return parser$;\\n    }\\n\\n    public csvStringToArray(csvDataString: string, delimiter: string) {\\n        const regexPattern = new RegExp(\\n            `(\\\\\\\\${delimiter}|\\\\\\\\r?\\\\\\\\n|\\\\\\\\r|^)(?:\\\\\\"((?:\\\\\\\\\\\\\\\\.|\\\\\\"\\\\\\"|[^\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\"|([^\\\\\\\\${delimiter}\\\\\\"\\\\\\\\r\\\\\\\\n]*))`,\\n            \'gi\'\\n        );\\n        const resultCsv = [[]];\\n        let matchedPatternArray = regexPattern.exec(csvDataString);\\n\\n        while (matchedPatternArray) {\\n            if (matchedPatternArray[1].length && matchedPatternArray[1] !== delimiter) {\\n                resultCsv.push([]);\\n            }\\n\\n            const cleanValue = matchedPatternArray[2]\\n                ? matchedPatternArray[2].replace(new RegExp(\'[\\\\\\\\\\\\\\\\\\"](.)\', \'g\'), \'$1\')\\n                : matchedPatternArray[3];\\n            resultCsv[resultCsv.length - 1].push(cleanValue);\\n            matchedPatternArray = regexPattern.exec(csvDataString);\\n        }\\n\\n        return resultCsv;\\n    }\\n\\n    public getDataRecordsArrayFromCsvFile(csvRecordsArray: any, headerLength: number, config: IUiCsvParserConfig) {\\n        const dataArr = [];\\n        const headersArray = csvRecordsArray[0];\\n        const startingRowToParseData = config.header ? 1 : 0;\\n\\n        for (let i = startingRowToParseData; i < csvRecordsArray.length; i++) {\\n            const data = csvRecordsArray[i];\\n\\n            if (data.length === headerLength && config.header) {\\n                const csvRecord = {};\\n\\n                for (let j = 0; j < data.length; j++) {\\n                    if (data[j] === undefined || data[j] === null) {\\n                        csvRecord[headersArray[j]] = \'\';\\n                    } else {\\n                        csvRecord[headersArray[j]] = data[j].trim();\\n                    }\\n                }\\n                dataArr.push(csvRecord);\\n            } else {\\n                dataArr.push(data);\\n            }\\n        }\\n\\n        return dataArr;\\n    }\\n\\n    public isCsvFile(file: File) {\\n        return file.name.toLowerCase().endsWith(\'.csv\');\\n    }\\n\\n    public getHeaderArray(csvRecordsArr: any) {\\n        const headers = csvRecordsArr[0];\\n        const headerArray = [];\\n\\n        for (const header of headers) {\\n            headerArray.push(header);\\n        }\\n\\n        return headerArray;\\n    }\\n}\\n\\ninterface IUiCsvParserConfig {\\n    header?: boolean;\\n    delimiter?: string;\\n}\\n","type":"injectable"},{"name":"UiFeatureFlagService","id":"injectable-UiFeatureFlagService-8fd980c89cf149972fcac59ec948fcb58020cc73760faa1668eb64b5f71a85b94468bfda998e15860b59278369c9162fe6b3cc97c6dd2cb3855e4668c461021b","file":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","properties":[{"name":"_client","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"LDClient.LDClient | null","optional":false,"description":"","line":31,"modifierKind":[121]},{"name":"_clientSubject","defaultValue":"new ReplaySubject<LDClient.LDClient>(1)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32,"modifierKind":[121]},{"name":"_evaluateFunction","deprecated":false,"deprecationMessage":"","type":"function","optional":false,"description":"","line":29,"modifierKind":[121]},{"name":"_featureFlagConfig","deprecated":false,"deprecationMessage":"","type":"IUiFeatureFlagConfig","optional":false,"description":"","line":28,"modifierKind":[121]},{"name":"_localFlagsData","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"IUiLocalFlagsData | null","optional":false,"description":"","line":35,"modifierKind":[121]},{"name":"_localFlagsDataSubject","defaultValue":"new ReplaySubject<IUiLocalFlagsData>(1)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[121]},{"name":"configurationService","deprecated":false,"deprecationMessage":"","type":"UiConfigurationService","optional":false,"description":"","line":39,"modifierKind":[123]}],"methods":[{"name":"evaluateFlagUsingLDClient","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"evaluateFlagUsingLocalFile","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultValue","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateContext","args":[],"optional":false,"returnType":"LDClient.LDContext","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"initializeClient","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"isFlagOn","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"defaultValue","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultValue","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { Observable, of, ReplaySubject, switchMap } from \'rxjs\';\\nimport * as LDClient from \'launchdarkly-js-client-sdk\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\n\\n/* eslint-disable max-len */\\n/* Note\\n There\'s a bunch of logic involving observers going on in this class. The reason for this is that the LD Client needs the token but the token (or lack thereof) isn\'t available right away.\\n We have to wait for the Auth0 library to determine if the user is authenticated then either set the token to empty if they aren\'t or retrieve the token if they are.\\n The tricky part is that we could have a request for a FF before that token has been set. We force the evaluation method to wait until the client has been setup before trying to get a value.\\n We use the ReplaySubject\\n*/\\n/* eslint-enable max-len */\\n\\nexport interface IUiFeatureFlagConfig {\\n    key: string;\\n    localFlagPath: string | undefined;\\n}\\n\\nexport interface IUiLocalFlagsData { [key: string]: boolean };\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiFeatureFlagService {\\n    private _featureFlagConfig: IUiFeatureFlagConfig;\\n    private _evaluateFunction: (string, boolean) => Observable<boolean>;\\n    //LD Flags\\n    private _client: LDClient.LDClient | null = null;\\n    private _clientSubject = new ReplaySubject<LDClient.LDClient>(1);\\n\\n    //Local Flags\\n    private _localFlagsData: IUiLocalFlagsData | null = null;\\n    private _localFlagsDataSubject = new ReplaySubject<IUiLocalFlagsData>(1);\\n\\n    constructor(\\n        public configurationService: UiConfigurationService,\\n        private _authService: UiAuthService,\\n        private _httpClient: HttpClient,\\n    ) {\\n        this._featureFlagConfig = configurationService.getConfig<IUiFeatureFlagConfig>(\'launchDarkly\');\\n\\n        //Determine which evaluate function to use\\n        const useLocalFile = this._featureFlagConfig.localFlagPath !== undefined && this._featureFlagConfig.localFlagPath.length !== 0;\\n        const evaluateFunction = useLocalFile ? this.evaluateFlagUsingLocalFile : this.evaluateFlagUsingLDClient;\\n        this._evaluateFunction = evaluateFunction.bind(this);\\n\\n        if (!useLocalFile) {\\n            this._authService.permissionsLoaded$.subscribe((permissionsLoaded) => {\\n                if (permissionsLoaded && !this._client) {\\n                    this.initializeClient();\\n                }\\n            });\\n        }\\n    }\\n\\n    public isFlagOn(featureFlagName: string, defaultValue: boolean = false): Observable<boolean> {\\n        return this._evaluateFunction(featureFlagName, defaultValue);\\n    }\\n\\n    private evaluateFlagUsingLDClient(featureFlagName: string, defaultValue): Observable<boolean> {\\n        return this._clientSubject.pipe(\\n            switchMap((client) => of(client.variation(featureFlagName, defaultValue)))\\n        );\\n    }\\n\\n    private evaluateFlagUsingLocalFile(featureFlagName: string, defaultValue): Observable<boolean> {\\n        if (this._localFlagsData === null) {\\n            this._httpClient.get<IUiLocalFlagsData>(this._featureFlagConfig.localFlagPath)\\n                .subscribe((data) => {\\n                    this._localFlagsData = data;\\n                    this._localFlagsDataSubject.next(data);\\n                });\\n        }\\n\\n        return this._localFlagsDataSubject.pipe(\\n            switchMap((data) => of(data[featureFlagName] ?? defaultValue))\\n        );\\n    }\\n\\n    private initializeClient(): void {\\n        const context = this.generateContext();\\n\\n        if (this._client === null) {\\n            //Initialize the client\\n            const options: LDClient.LDOptions = { allAttributesPrivate: false };\\n            this._client = LDClient.initialize(this._featureFlagConfig.key, context, options);\\n\\n            //Wait until the client is ready then emit to the observer so anything waiting can now get the feature flag\\n            this._client.waitUntilReady().then(() => this._clientSubject.next(this._client));\\n        } else {\\n            //Client is setup, update the context accordingly\\n            this._client.identify(context);\\n        }\\n    }\\n\\n    private generateContext(): LDClient.LDContext {\\n        const context: LDClient.LDContext = {\\n            kind: \'multi\'\\n        };\\n\\n        if (this._authService.userGuid) {\\n            const userContext: LDClient.LDContext = {\\n                kind: \'user\',\\n                key: this._authService.userGuid\\n            };\\n\\n            context.user = userContext;\\n        }\\n        else {\\n            const userContext: LDClient.LDContext = {\\n                kind: \'user\',\\n                key: \'anonymous-user\',\\n                anonymous: true\\n            };\\n\\n            context.user = userContext;\\n        }\\n\\n        if (this._authService.activeOrgGuid) {\\n            const organizationContext: LDClient.LDContext = {\\n                \'kind\': \'organization\',\\n                \'key\': this._authService.activeOrgGuid,\\n                \'root-org-guid\': this._authService.rootOrgGuid\\n            };\\n\\n            context.organization = organizationContext;\\n        }\\n        else {\\n            const organizationContext: LDClient.LDContext = {\\n                kind: \'organization\',\\n                key: \'anonymous-organization\',\\n                anonymous: true\\n            };\\n\\n            context.organization = organizationContext;\\n        }\\n\\n        return context;\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiFileScanService","id":"injectable-UiFileScanService-137ff6ccbae33a25f89cd49ac20ac4207f8232cd4c166103f4e316904ead42d32ea0b4f30ca21af9d865d4a956c8adeeff7d77f93dad078ca3fd3d0cf3f97cea","file":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","properties":[{"name":"_token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[121,144]},{"name":"fileScan","deprecated":false,"deprecationMessage":"","type":"WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>","optional":false,"description":"","line":31,"modifierKind":[123]}],"methods":[{"name":"completeFileScan","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"generateGuid","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"generateUniqueName","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"uploadFile","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"<p>Service to handle file scanning.</p>\\n<p>See <code>AcpFileScanService</code> apps/acp-ui/src/app/services/file-scan.service.ts</p>\\n","rawdescription":"\\n\\nService to handle file scanning.\\n\\nSee `AcpFileScanService` apps/acp-ui/src/app/services/file-scan.service.ts\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n// AWS\\nimport * as AWS from \'aws-sdk\';\\n// RxJS\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\nimport { EMPTY, Observable, of } from \'rxjs\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n\\n/**\\n * Interface for file scan result.\\n *\\n * @todo This seems to be a duplicate of `IFileScanResult` - We should consider merging these interfaces.\\n * @see `IFileScanResult` apps/acp-ui/src/app/services/file-scan.service.ts\\n */\\nexport interface IUiFileScanResult {\\n    scanResultClean: boolean;\\n    eTag: string;\\n    key: string;\\n}\\n\\n/**\\n * Service to handle file scanning.\\n *\\n * @todo This seems to be a duplicate of `AcpFileScanService` - We should consider merging these services.\\n * @see `AcpFileScanService` apps/acp-ui/src/app/services/file-scan.service.ts\\n */\\n@Injectable({ providedIn: \'root\' })\\nexport class UiFileScanService {\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\n    private readonly _token: string;\\n\\n    constructor(private _configurationService: UiConfigurationService) {\\n        this._token = this.generateGuid();\\n        if (\\n            this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\n            this._configurationService.appConfig[\'file-scan\'].scanUrl\\n        ) {\\n            this.fileScan = webSocket({\\n                url: `${this._configurationService.appConfig[\'file-scan\'].scanUrl}?token=${this._token}`,\\n                deserializer: ({ data }) => {\\n                    const parsedData = JSON.parse(data);\\n                    return {\\n                        scanResultClean: parsedData.scanResultClean,\\n                        eTag: parsedData.file.eTag,\\n                        key: parsedData.file.key,\\n                    };\\n                },\\n            });\\n        } else {\\n            this.fileScan = EMPTY;\\n        }\\n    }\\n\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\n        return new Observable((observer) => {\\n            const s3Endpoint = this._configurationService.appConfig[\'file-scan\'].awsS3ServiceURL;\\n            const config: AWS.S3.ClientConfiguration = {\\n                apiVersion: \'2006-03-01\',\\n                params: { Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName },\\n            };\\n\\n            if (s3Endpoint) {\\n                config.endpoint = s3Endpoint;\\n                config.s3ForcePathStyle = true;\\n            }\\n\\n            if (this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId) {\\n                AWS.config.update({\\n                    region: this._configurationService.appConfig[\'file-scan\'].scanBucketRegion,\\n                    credentials: new AWS.CognitoIdentityCredentials({\\n                        IdentityPoolId: this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId,\\n                    }),\\n                });\\n            } else {\\n                // Use dummy credentials for fake S3.\\n                AWS.config.update({\\n                    credentials: new AWS.Credentials({\\n                        accessKeyId: \'fakeAccessKeyId\',\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\n                    }),\\n                });\\n            }\\n            const s3 = new AWS.S3(config);\\n            const fileUniqueName = this.generateUniqueName(file.name);\\n            const params = {\\n                Bucket: this._configurationService.appConfig[\'file-scan\'].scanBucketName,\\n                Key: `${fileFolder}${fileUniqueName}`,\\n                Body: file,\\n                ACL: \'private\',\\n                ContentType: file.type,\\n            };\\n            s3.upload(params, (err, data) => {\\n                if (err) {\\n                    observer.error(err);\\n                } else {\\n                    // If there is no file scanning, update the file scan subject with mock IUiFileScanResult\\n                    if (\\n                        !this._configurationService.appConfig[\'file-scan\'].scanIdentityPoolId &&\\n                        !this._configurationService.appConfig[\'file-scan\'].scanUrl\\n                    ) {\\n                        this.fileScan = of({\\n                            scanResultClean: true,\\n                            eTag: \'\',\\n                            key: data.Key,\\n                        });\\n                    }\\n\\n                    observer.next(data);\\n                    observer.complete();\\n                }\\n            });\\n        });\\n    }\\n\\n    public completeFileScan(): void {\\n        if (this.fileScan instanceof WebSocketSubject) {\\n            this.fileScan.complete();\\n        }\\n    }\\n\\n    private generateUniqueName(name: string): string {\\n        const parts = name\\n            .toLowerCase()\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\n            .split(\'.\');\\n        const fileName = parts[0];\\n        let ext = \'\';\\n        if (parts.length > 1) {\\n            ext = \'.\' + parts[parts.length - 1];\\n        }\\n        return fileName.substring(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\n    }\\n\\n    private generateGuid(): string {\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\n            const r = (Math.random() * 16) | 0;\\n            const v = c === \'x\' ? r : (r & 0x3) | 0x8;\\n            return v.toString(16);\\n        });\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":32,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiFileScanService","id":"injectable-UiFileScanService-060075800c83760707eef60a82d0ebfc088b446d6c2221f3ac148ecd66e78cf37bcf91af5ff3ad73289d3cfd2aa3e7f40f5ec787b957ede7ab0957d3b9c70aaa-1","file":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","properties":[{"name":"_fileScanConfig","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":21,"modifierKind":[121]},{"name":"_token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[121,144]},{"name":"fileScan","deprecated":false,"deprecationMessage":"","type":"WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>","optional":false,"description":"","line":19,"modifierKind":[123]}],"methods":[{"name":"completeFileScan","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"generateGuid","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"generateUniqueName","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"uploadFile","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileFolder","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n// AWS\\nimport * as AWS from \'aws-sdk\';\\n// RxJS\\nimport { webSocket, WebSocketSubject } from \'rxjs/webSocket\';\\nimport { EMPTY, Observable, of } from \'rxjs\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n\\nexport interface IUiFileScanResult {\\n    scanResultClean: boolean;\\n    eTag: string;\\n    key: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiFileScanService {\\n    public fileScan: WebSocketSubject<IUiFileScanResult> | Observable<IUiFileScanResult>;\\n    private readonly _token: string;\\n    private _fileScanConfig: {\\n        scanIdentityPoolId: string;\\n        scanBucketRegion: string;\\n        scanUrl: string;\\n        scanBucketName: string;\\n        awsS3ServiceURL: string;\\n        enabled: boolean;\\n    };\\n\\n    constructor(private _configurationService: UiConfigurationService) {\\n        this._token = this.generateGuid();\\n        this._fileScanConfig = this._configurationService.appConfig[\'file-scan\'];\\n        if (this._fileScanConfig.scanIdentityPoolId && this._fileScanConfig.scanUrl) {\\n            this.fileScan = webSocket({\\n                url: `${this._fileScanConfig.scanUrl}?token=${this._token}`,\\n                deserializer: ({ data }) => {\\n                    const parsedData = JSON.parse(data);\\n                    return {\\n                        scanResultClean: parsedData.scanResultClean,\\n                        eTag: parsedData.file.eTag,\\n                        key: parsedData.file.key,\\n                    };\\n                },\\n            });\\n        } else {\\n            this.fileScan = EMPTY;\\n        }\\n    }\\n\\n    public uploadFile(file: File, fileFolder: string): Observable<any> {\\n        return new Observable((observer) => {\\n            const s3Endpoint = this._fileScanConfig.awsS3ServiceURL;\\n            const config: AWS.S3.ClientConfiguration = {\\n                apiVersion: \'2006-03-01\',\\n                params: { Bucket: this._fileScanConfig.scanBucketName },\\n            };\\n\\n            if (s3Endpoint) {\\n                config.endpoint = s3Endpoint;\\n                config.s3ForcePathStyle = true;\\n            }\\n\\n            if (this._fileScanConfig.scanIdentityPoolId) {\\n                AWS.config.update({\\n                    region: this._fileScanConfig.scanBucketRegion,\\n                    credentials: new AWS.CognitoIdentityCredentials({\\n                        IdentityPoolId: this._fileScanConfig.scanIdentityPoolId,\\n                    }),\\n                });\\n            } else {\\n                // Use dummy credentials for fake S3.\\n                AWS.config.update({\\n                    credentials: new AWS.Credentials({\\n                        accessKeyId: \'fakeAccessKeyId\',\\n                        secretAccessKey: \'fakeSecretAccessKey\',\\n                        sessionToken: \'fakeSessionToken\',\\n                    }),\\n                });\\n            }\\n            const s3 = new AWS.S3(config);\\n            const fileUniqueName = this.generateUniqueName(file.name);\\n            const params = {\\n                Bucket: this._fileScanConfig.scanBucketName,\\n                Key: `${fileFolder}${fileUniqueName}`,\\n                Body: file,\\n                ACL: \'private\',\\n                ContentType: file.type,\\n                FileName: file.name,\\n                Folder: fileFolder,\\n            };\\n            s3.upload(params, (err, data) => {\\n                if (err) {\\n                    observer.error(err);\\n                } else {\\n                    // If there is no file scanning, update the file scan subject with mock IFileScanResult\\n                    if (!this._fileScanConfig.scanIdentityPoolId && !this._fileScanConfig.scanUrl) {\\n                        this.fileScan = of({\\n                            scanResultClean: true,\\n                            eTag: \'\',\\n                            key: data.Key,\\n                        });\\n                    }\\n\\n                    observer.next(data);\\n                    observer.complete();\\n                }\\n            });\\n        });\\n    }\\n\\n    public completeFileScan(): void {\\n        if (this.fileScan instanceof WebSocketSubject) {\\n            this.fileScan.complete();\\n        }\\n    }\\n\\n    private generateUniqueName(name: string): string {\\n        const parts = name\\n            .toLowerCase()\\n            .replace(/[^0-9a-z\\\\.]/g, \'\')\\n            .split(\'.\');\\n        const fileName = parts[0];\\n        let ext = \'\';\\n        if (parts.length > 1) {\\n            ext = \'.\' + parts[(parts.length - 1)];\\n        }\\n        return fileName.substr(0, 10) + this.generateGuid() + \'-\' + this._token + ext;\\n    }\\n\\n    private generateGuid(): string {\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\n            const r = Math.random() * 16 | 0;\\n            const v = c === \'x\' ? r : (r & 0x3 | 0x8);\\n            return v.toString(16);\\n        });\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"UiFileScanService-1"},{"name":"UiFooterService","id":"injectable-UiFooterService-e18b91e628c7fbdf149bfb359c6b0f10578ef3bd4e03664f7e5d73c876dfb90beced0c94400f2eac9cb0c61ec1b96bdd3b2604b5b41b142b853f5e68bb42286b","file":"libs/ui/src/lib/services/layout/footer/footer.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiFooterService {\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiHeaderService","id":"injectable-UiHeaderService-16dc19ab70eef7a1ac6ecbc5b3ccdf7572504dbe8bbbaae6251681ffe92d32e7b22808ef98c07d1acd022066728b57fdb7b405159ea24bfa87daa48a7e14b571","file":"libs/ui/src/lib/services/layout/header/header.service.ts","properties":[{"name":"_tabsItems","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTab>","optional":false,"description":"","line":49,"modifierKind":[121]},{"name":"_title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48,"modifierKind":[121]},{"name":"_toolItems","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":false,"description":"","line":50,"modifierKind":[121]},{"name":"actionBtnsChange","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<TemplateRef<any>>","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"loading$","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"loadingSubject","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"messageTxt","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"preToolsChange","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<TemplateRef<any>>","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"preToolsMessageChange","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<literal type>","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"selectedTabId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"selectedTabTemplateRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"subHeaderChange","defaultValue":"new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<literal type>","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"subHeaderMessage","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"subHeaderSelectedTabChange","defaultValue":"new EventEmitter<IUiSubHeaderTab>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<IUiSubHeaderTab>","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"t","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"titleChange","defaultValue":"new EventEmitter<string>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<string>","optional":false,"description":"","line":36,"modifierKind":[123]}],"methods":[{"name":"clearActionBtns","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"selectTab","args":[{"name":"e","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectTabById","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectTabByIndex","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setActionsBtns","args":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPreTools","args":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"tlpRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPreToolsMessage","args":[{"name":"msg","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"msg","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable, TemplateRef } from \'@angular/core\';\\n\\nimport { BehaviorSubject, Observable, throwError } from \'rxjs\';\\nexport interface IUiSubHeaderTab {\\n    id: string;\\n    label?: string;\\n    label2?: { txt: string; params: any };\\n    onClickEvent?: (item: any) => void;\\n    contentTpl?: TemplateRef<any>;\\n    cacheTabContent?: boolean;\\n    tools?: Array<any>;\\n    tabClassColor?: string;\\n}\\nexport interface IUiSubHeaderTool {\\n    id: string;\\n    label?: string;\\n    type?: string;\\n    class?: Array<string>;\\n    disabled?: boolean;\\n    action?: string;\\n    onClickEvent?: (item: any) => void;\\n}\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiHeaderService {\\n    public selectedTabId = \'\';\\n    public selectedTabTemplateRef: TemplateRef<any>;\\n    public messageTxt = \'\';\\n    public subHeaderMessage: { msg: string; iconClass: Array<string>; colorClass: string };\\n\\n    public loading$: Observable<boolean>;\\n    public loadingSubject = new BehaviorSubject<boolean>(false);\\n\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\n    public subHeaderChange: EventEmitter<{\\n        tabItem: Array<any>; toolItems: Array<any>;\\n    }> = new EventEmitter<{ tabItem: Array<any>; toolItems: Array<any> }>();\\n\\n    public subHeaderSelectedTabChange: EventEmitter<IUiSubHeaderTab> = new EventEmitter<IUiSubHeaderTab>();\\n    public actionBtnsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\n    public preToolsChange: EventEmitter<TemplateRef<any>> = new EventEmitter();\\n    public preToolsMessageChange: EventEmitter<{ msg: string; iconClass: Array<string>; colorClass: string }> = new EventEmitter();\\n\\n    public t: string;\\n\\n    private _title: string;\\n    private _tabsItems: Array<IUiSubHeaderTab>;\\n    private _toolItems: Array<any>;\\n\\n    public get title(): string {\\n        return this._title;\\n    }\\n\\n    public set title(thisTitle: string) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this._title = thisTitle;\\n            this.titleChange.emit(this._title);\\n        });\\n    }\\n\\n    public get subHeaderTabs(): Array<IUiSubHeaderTab> {\\n        return this._tabsItems;\\n    }\\n\\n    public set subHeaderTabs(items: Array<IUiSubHeaderTab>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked.\\n        // Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n\\n        setTimeout(() => {\\n            this._tabsItems = items;\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\n            if (this._tabsItems.length !== 0) {\\n                this.selectTabByIndex(0);\\n            }\\n        });\\n    }\\n\\n    public get subToolItems(): Array<any> {\\n        return this._toolItems;\\n    }\\n\\n    public set subToolItems(items: Array<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this._toolItems = items;\\n            this.subHeaderChange.emit({ tabItem: this._tabsItems, toolItems: this._toolItems });\\n        });\\n    }\\n    constructor() {\\n        this._title = \'Assent Compliance Platform\';\\n        this.loading$ = this.loadingSubject.asObservable();\\n    }\\n\\n    public selectTab(e: IUiSubHeaderTab) {\\n        this.selectedTabId = e.id;\\n        this.subToolItems = e.tools;\\n        this.selectedTabTemplateRef = e.contentTpl;\\n        this.subHeaderSelectedTabChange.emit(e);\\n    }\\n\\n    public selectTabByIndex(index: number) {\\n        this.selectTab(this._tabsItems[index]);\\n    }\\n\\n    public selectTabById(id: string) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            this.selectTab(this._tabsItems.find((item) => item.id === id));\\n        });\\n    }\\n\\n    public setActionsBtns(tlpRef: TemplateRef<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        // setTimeout also prevent UI element flickering. Maybe not the best solution. Suggestions are welcome\\n        setTimeout(() => {\\n            if(tlpRef !== undefined){\\n                this.actionBtnsChange.emit(tlpRef);\\n            }\\n        });\\n    }\\n\\n    public setPreTools(tlpRef: TemplateRef<any>) {\\n        // setTimeout Prevent >> ExpressionChangedAfterItHasBeenCheckedError:\\n        // Expression has changed after it was checked. Previous value: \'undefined\'. Current value: \'null\'.\\n        setTimeout(() => {\\n            this.preToolsChange.emit(tlpRef);\\n        });\\n    }\\n\\n    public setPreToolsMessage(msg: { msg: string; iconClass: Array<string>; colorClass: string }) {\\n        this.subHeaderMessage = msg;\\n        this.preToolsMessageChange.emit(msg);\\n        setTimeout(() => {\\n            this.subHeaderMessage = null;\\n        }, 3000);\\n    }\\n\\n    public clearActionBtns() {\\n        this.setActionsBtns(null);\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":96},"accessors":{"title":{"name":"title","setSignature":{"name":"title","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":56,"jsdoctags":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"title","type":"string","returnType":"string","line":52}},"subHeaderTabs":{"name":"subHeaderTabs","setSignature":{"name":"subHeaderTabs","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"items","type":"Array<IUiSubHeaderTab>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":70,"jsdoctags":[{"name":"items","type":"Array<IUiSubHeaderTab>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subHeaderTabs","type":"","returnType":"Array<IUiSubHeaderTab>","line":66}},"subToolItems":{"name":"subToolItems","setSignature":{"name":"subToolItems","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"items","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":88,"jsdoctags":[{"name":"items","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subToolItems","type":"","returnType":"Array<any>","line":84}}},"type":"injectable"},{"name":"UiHeaderSubService","id":"injectable-UiHeaderSubService-07d80f75063aecf77055599a85bbef12427e75845741cf690ac256bfaf2afaa18ddd45e72bb54e05d80b797d273431c6f4b71cd13bb04be86da2cbef5b3f7aee","file":"libs/ui/src/lib/services/layout/header-sub/header-sub.service.ts","properties":[{"name":"_title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10,"modifierKind":[121]},{"name":"t","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"titleChange","defaultValue":"new EventEmitter<string>()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<string>","optional":false,"description":"","line":7,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiHeaderSubService {\\n    public titleChange: EventEmitter<string> = new EventEmitter<string>();\\n    public t: string;\\n\\n    private _title: string;\\n\\n    public get title(): string {\\n        return this._title;\\n    }\\n\\n    public set title(thisTitle: string) {\\n        this._title = thisTitle;\\n        this.titleChange.emit(this._title);\\n    }\\n\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":19},"accessors":{"title":{"name":"title","setSignature":{"name":"title","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":16,"jsdoctags":[{"name":"thisTitle","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"title","type":"string","returnType":"string","line":12}}},"type":"injectable"},{"name":"UiLayoutService","id":"injectable-UiLayoutService-21c54a3afdcbb170d9e6ded579b6b278c98398e9329d0ed6fea1fde8e9a5961127f98b16c17d31adb2bdeb25849681dc4619ef7847aa0369c75222736136c8f2","file":"libs/ui/src/lib/services/layout/layout.service.ts","properties":[{"name":"_alignLeft","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":84,"modifierKind":[121]},{"name":"_currentUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":87,"modifierKind":[121]},{"name":"_hideOverflow","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":89,"modifierKind":[121]},{"name":"_isOpen","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":88,"modifierKind":[121]},{"name":"_previousUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":86,"modifierKind":[121]},{"name":"_selectedLayout","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":85,"modifierKind":[121]},{"name":"_showContainer","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":82,"modifierKind":[121]},{"name":"_showGrayBackground","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":83,"modifierKind":[121]},{"name":"_supplierHelpCenter","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":90,"modifierKind":[121]},{"name":"_termsOfService","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":91,"modifierKind":[121]},{"name":"alignLeft$","defaultValue":"new BehaviorSubject(this.alignLeft)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"appMenu","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"calcTop$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"isDeveloperHub","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"isFirstLogin","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"onAlignLeft","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"onCloseSideNav","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<boolean>","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"onOpenSideNav","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<boolean>","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"onScroll","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"onShowContainer","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"onUpdateLayout","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<any>","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"scrollBarIsVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"scrollBarIsVisible$","defaultValue":"new BehaviorSubject(this.scrollBarIsVisible)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"showContainer$","defaultValue":"new BehaviorSubject(this.showContainer)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"showMargins$","defaultValue":"new BehaviorSubject(true)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"updateGridLocalization","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":247,"modifierKind":[123]}],"methods":[{"name":"closeSideNav","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isFirstTimeLogin","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":227,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"openSideNav","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"salesforceWebToCase","args":[{"name":"fields","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"fields","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"scroll","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setCalcTop","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setShowMargin","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toogleSideNav","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"updateLayout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable } from \'@angular/core\';\\nimport { NavigationEnd, Router } from \'@angular/router\';\\n// RxJS\\nimport { filter } from \'rxjs/operators\';\\nimport { BehaviorSubject } from \'rxjs\';\\n// Ngx Translate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Services\\nimport { UiConfigurationService } from \'../configuration/configuration.service\';\\n// Interfaces\\nimport { IUiMenuItem } from \'../menu/menu.service\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiLayoutService {\\n    public onCloseSideNav: EventEmitter<boolean> = new EventEmitter();\\n    public onOpenSideNav: EventEmitter<boolean> = new EventEmitter();\\n    public onScroll: EventEmitter<any> = new EventEmitter();\\n    public onShowContainer: EventEmitter<any> = new EventEmitter();\\n    public onAlignLeft: EventEmitter<any> = new EventEmitter();\\n    public onUpdateLayout: EventEmitter<any> = new EventEmitter();\\n\\n    public isFirstLogin = false;\\n    public isDeveloperHub = false;\\n    public scrollBarIsVisible = false;\\n\\n    public calcTop$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n    public showMargins$: BehaviorSubject<boolean> = new BehaviorSubject(true);\\n    public alignLeft$: BehaviorSubject<boolean> = new BehaviorSubject(this.alignLeft);\\n    public showContainer$: BehaviorSubject<boolean> = new BehaviorSubject(this.showContainer);\\n    public scrollBarIsVisible$: BehaviorSubject<boolean> = new BehaviorSubject(this.scrollBarIsVisible);\\n\\n    public appMenu: IUiMenuItem[] = [];\\n\\n    public set calcTop(value: boolean) {\\n        setTimeout(() => {\\n            this.calcTop$.next(value);\\n        });\\n    }\\n\\n    public set alignLeft(value: boolean) {\\n        setTimeout(() => {\\n            this._alignLeft = value;\\n            this.alignLeft$.next(value);\\n            this.onAlignLeft.emit(this.alignLeft);\\n        });\\n    }\\n\\n    public get alignLeft() {\\n        return this._alignLeft;\\n    }\\n\\n    public set showMargins(value: boolean) {\\n        setTimeout(() => {\\n            this.showMargins$.next(value);\\n        });\\n    }\\n\\n    public set showContainer(value: boolean) {\\n        setTimeout(() => {\\n            this._showContainer = value;\\n            this.showContainer$.next(value);\\n            this.onShowContainer.emit(this._showContainer);\\n        });\\n    }\\n\\n    public get showContainer() {\\n        return this._showContainer;\\n    }\\n\\n    public set showGrayBackground(value) {\\n        setTimeout(() => {\\n            this._showGrayBackground = value;\\n        });\\n    }\\n    public get showGrayBackground() {\\n        return this._showGrayBackground;\\n    }\\n\\n    private _showContainer = false;\\n    private _showGrayBackground = false;\\n    private _alignLeft = false;\\n    private _selectedLayout = 1;\\n    private _previousUrl = \'\';\\n    private _currentUrl = \'\';\\n    private _isOpen = true;\\n    private _hideOverflow = false;\\n    private _supplierHelpCenter = \'\';\\n    private _termsOfService: string;\\n\\n    constructor(\\n        private _configurationService: UiConfigurationService,\\n        private _router: Router,\\n        private _translateService: TranslateService\\n    ) {\\n        this._router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\\n            this._previousUrl = this._currentUrl;\\n            this._currentUrl = event.url;\\n            this._hideOverflow = false;\\n            this._supplierHelpCenter =\\n                this._configurationService.appConfig !== undefined ? this._configurationService.appConfig.supplierHelpCenter : \'\';\\n            this._termsOfService =\\n                this._configurationService.appConfig !== undefined ? this._configurationService.appConfig.termsOfService : \'\';\\n            localStorage.setItem(\'previousUrl\', JSON.stringify(this._previousUrl));\\n            localStorage.setItem(\'currentUrl\', JSON.stringify(this._currentUrl));\\n\\n            this.calcTop = false;\\n            this.showGrayBackground = true;\\n            this.showMargins = true;\\n            this.showContainer = false;\\n            this.alignLeft = false;\\n        });\\n    }\\n\\n    public setShowMargin(val: boolean) {\\n        setTimeout(() => {\\n            this.showMargins = val;\\n        });\\n    }\\n\\n    public setCalcTop(val: boolean) {\\n        // eslint-disable-next-line max-len\\n        // Note: Add .calc-top class to .main-content container in LayoutComponent for Ag-Grid that require a container height to display properly.\\n        // Will be removed when all grids use UiGridComponent.\\n        setTimeout(() => {\\n            this.calcTop = val;\\n        });\\n    }\\n\\n    public closeSideNav() {\\n        setTimeout(() => {\\n            this._isOpen = false;\\n            this.onCloseSideNav.emit(this._isOpen);\\n        });\\n    }\\n\\n    public openSideNav() {\\n        setTimeout(() => {\\n            this._isOpen = true;\\n            this.onOpenSideNav.emit(this._isOpen);\\n        });\\n    }\\n\\n    public toogleSideNav() {\\n        if (this.isOpen) {\\n            this.closeSideNav();\\n        } else {\\n            this.openSideNav();\\n        }\\n    }\\n\\n    public scroll($event) {\\n        this.onScroll.emit($event);\\n    }\\n\\n    public get selectedLayout() {\\n        return this._selectedLayout;\\n    }\\n\\n    public set selectedLayout(newName: number) {\\n        this._selectedLayout = newName;\\n    }\\n\\n    public get previousRoute() {\\n        return this._previousUrl;\\n    }\\n\\n    public set previousRoute(route: string) {\\n        this._previousUrl = route;\\n    }\\n\\n    public get isOpen() {\\n        return this._isOpen;\\n    }\\n\\n    public set hideOverflow(val: boolean) {\\n        setTimeout(() => {\\n            this._hideOverflow = val;\\n        });\\n    }\\n\\n    public get hideOverflow(): boolean {\\n        return this._hideOverflow;\\n    }\\n\\n    public salesforceWebToCase(fields) {\\n        const iframeName = \'iFrameName\';\\n\\n        if (!document.getElementById(iframeName)) {\\n            const iFrame = document.createElement(\'iframe\');\\n            iFrame.id = iframeName;\\n            iFrame.name = iframeName;\\n            iFrame.src = \'about:blank\';\\n            iFrame.style.display = \'none\';\\n            document.body.appendChild(iFrame);\\n        }\\n\\n        // Uncomment those next 2 line to use debug mode and receive Salesforce response email.\\n        // fields.debug = 1;\\n        // fields.debugEmail = \'your-email@assentcompliance.com\';\\n        // fields.retURL = \'https://www.assent.com\'; // Remove because causing iframe same origin error\\n        fields.orgid = \'00D61000000e6A7\';\\n        fields.external = 1;\\n\\n        const form = document.createElement(\'form\');\\n        form.method = \'POST\';\\n        form.action = \'https://webto.salesforce.com/servlet/servlet.WebToCase?encoding=UTF-8\';\\n        form.setAttribute(\'target\', iframeName);\\n\\n        for (const fieldName in fields) {\\n            if (Object.prototype.hasOwnProperty.call(fields, fieldName)) {\\n                const inputEle = document.createElement(\'input\');\\n                inputEle.name = fieldName;\\n                inputEle.value = fields[fieldName];\\n                inputEle.setAttribute(\'type\', \'hidden\');\\n                form.appendChild(inputEle);\\n            }\\n        }\\n\\n        document.body.appendChild(form);\\n        form.submit();\\n    }\\n\\n    //Checks if user has logged in before\\n    public isFirstTimeLogin() {\\n        const isFirstLogin = localStorage.getItem(\'isFirstLogin\');\\n\\n        if (isFirstLogin === null || isFirstLogin === undefined) {\\n            this.isFirstLogin = true;\\n            localStorage.setItem(\'isFirstLogin\', \'true\');\\n        }\\n        return this.isFirstLogin;\\n    }\\n\\n    public get supplierHelpCenterUrl() {\\n        return this._supplierHelpCenter;\\n    }\\n\\n    public get termsOfServiceUrl() {\\n        return this._termsOfService;\\n    }\\n\\n    //Localizes the grid if available\\n    //Current workaround as grid footer translations require grid to be destoryed and rebuilt\\n    public updateGridLocalization = () => {\\n        if (document.querySelector(\'ag-grid-angular\') !== null) {\\n            if (document.querySelector(\'[id$=\\"start-page\\"\') !== null) {\\n                document.querySelector(\'[id$=\\"start-page\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.PAGE\');\\n            }\\n            if (document.querySelector(\'[id$=\\"of-page\\"\') !== null) {\\n                document.querySelector(\'[id$=\\"of-page\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.OF\');\\n            }\\n            if (document.querySelector(\'[id$=\\"of\\"\') !== null) {\\n                document.querySelector(\'[id$=\\"of\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.OF\');\\n            }\\n            if (document.querySelector(\'[id$=\\"to\\"\') !== null) {\\n                document.querySelector(\'[id$=\\"to\\"\').innerHTML = this._translateService.instant(\'COMMON.AG_GRID.TO\');\\n            }\\n        }\\n    };\\n\\n    public updateLayout() {\\n        this.onUpdateLayout.emit();\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":91,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"calcTop":{"name":"calcTop","setSignature":{"name":"calcTop","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":37,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"alignLeft":{"name":"alignLeft","setSignature":{"name":"alignLeft","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":43,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"alignLeft","type":"","returnType":"","line":51}},"showMargins":{"name":"showMargins","setSignature":{"name":"showMargins","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":55,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showContainer":{"name":"showContainer","setSignature":{"name":"showContainer","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":61,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showContainer","type":"","returnType":"","line":69}},"showGrayBackground":{"name":"showGrayBackground","setSignature":{"name":"showGrayBackground","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":73,"jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showGrayBackground","type":"","returnType":"","line":78}},"selectedLayout":{"name":"selectedLayout","setSignature":{"name":"selectedLayout","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"newName","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":162,"jsdoctags":[{"name":"newName","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"selectedLayout","type":"","returnType":"","line":158}},"previousRoute":{"name":"previousRoute","setSignature":{"name":"previousRoute","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":170,"jsdoctags":[{"name":"route","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"previousRoute","type":"","returnType":"","line":166}},"isOpen":{"name":"isOpen","getSignature":{"name":"isOpen","type":"","returnType":"","line":174}},"hideOverflow":{"name":"hideOverflow","setSignature":{"name":"hideOverflow","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":178,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"hideOverflow","type":"boolean","returnType":"boolean","line":184}},"supplierHelpCenterUrl":{"name":"supplierHelpCenterUrl","getSignature":{"name":"supplierHelpCenterUrl","type":"","returnType":"","line":237}},"termsOfServiceUrl":{"name":"termsOfServiceUrl","getSignature":{"name":"termsOfServiceUrl","type":"","returnType":"","line":241}}},"type":"injectable"},{"name":"UiLocalCommunicationService","id":"injectable-UiLocalCommunicationService-47fc11d45b1a3c02d97679652f304729b50513e99133ec87916e330412128f9b95b9c076bda39acdec5d1a6d1e22af078b6eba69a2de529e503e860a32ad4a79","file":"libs/ui/src/lib/services/communication/local-communication/local-communication.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiLocalCommunicationService {\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiLocalizationService","id":"injectable-UiLocalizationService-2cbf57ca3b22b8af557dccaea686541f48d850880b346285531f595cd721826a9b892098b6eb86ef6124450f82f77b5992c38159f8abc84733b4113e4839b58b","file":"libs/ui/src/lib/services/localization/localization.service.ts","properties":[{"name":"test","defaultValue":"\'UiLocalizationService test\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiLocalizationService {\\n    public test = \'UiLocalizationService test\';\\n\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":7},"type":"injectable"},{"name":"UiMenuService","id":"injectable-UiMenuService-d2eed89bcb18635a236dfbefe7f3f6e6abc72b515cb9d971be29c4ebb8b47a9e129472b7803dea04fc92f007550baefbf38e11396792f75dcc85072a324dfcc1","file":"libs/ui/src/lib/services/menu/menu.service.ts","properties":[{"name":"menus","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"onSetMainMenu","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","type":"EventEmitter<IUiMenuItem[]>","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"selectedMenu","deprecated":false,"deprecationMessage":"","type":"IUiMenuItem[]","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"selectedMenuName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]}],"methods":[{"name":"checkSinPermissions","args":[{"name":"selectedMenu","type":"IUiMenuItem[]","deprecated":false,"deprecationMessage":""},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiMenuItem[]","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedMenu","type":"IUiMenuItem[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearMenu","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"closeAllMenus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getLeftSideMenu","args":[],"optional":false,"returnType":"Observable<IUiMenuItem[]>","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getLeftSideMenuDevHub","args":[],"optional":false,"returnType":"Observable<IUiMenuItem[]>","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refreshMenu","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setMainMenu","args":[{"name":"menuName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"menuName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userPermissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\nimport { EventEmitter, Injectable } from \'@angular/core\';\\n// Rxjs\\nimport { Observable } from \'rxjs\';\\nimport { map, take } from \'rxjs/operators\';\\n// Interfaces\\nimport { IUiPermissions } from \'../user\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\n/**\\n * @deprecated\\n */\\nexport class UiMenuService {\\n    public selectedMenu: IUiMenuItem[];\\n    public selectedMenuName: string;\\n    public menus: { dev: IUiMenuItem[]; sin: IUiMenuItem[]; contactsManager: IUiMenuItem[] };\\n    public onSetMainMenu: EventEmitter<IUiMenuItem[]> = new EventEmitter();\\n\\n    constructor(private _httpClient: HttpClient) {}\\n\\n    // public setMainMenu(menu: IUiMenuItem[]) {\\n    public setMainMenu(menuName: string, userPermissions?: IUiPermissions) {\\n        this._httpClient\\n            .get(\'assets/menus/menu.json\')\\n            .pipe(take(1))\\n            .subscribe((data: IUiMenus) => {\\n                this.menus = data;\\n                this.closeAllMenus();\\n                this.selectedMenuName = menuName;\\n\\n                if (this.menus !== undefined) {\\n                    this.selectedMenu = this.menus[menuName];\\n                    this.selectedMenu =\\n                        menuName === UiMenuNamesEnum.sin && userPermissions != null\\n                            ? this.checkSinPermissions(this.selectedMenu, userPermissions)\\n                            : this.selectedMenu;\\n                    this.onSetMainMenu.emit(this.selectedMenu);\\n                }\\n            });\\n    }\\n\\n    public getLeftSideMenuDevHub(): Observable<IUiMenuItem[]> {\\n        return this._httpClient.get(\'assets/menus/left-side-menu-devhub.json\').pipe(\\n            map((res: { menus: IUiMenuItem[] }) => {\\n                return res.menus;\\n            })\\n        );\\n    }\\n\\n    public getLeftSideMenu(): Observable<IUiMenuItem[]> {\\n        return this._httpClient.get(\'assets/menus/left-side-menu.json\').pipe(\\n            map((res: { menus: IUiMenuItem[] }) => {\\n                return res.menus;\\n            })\\n        );\\n    }\\n\\n    public closeAllMenus() {\\n        if (this.selectedMenu) {\\n            for (let i = 0; i < this.selectedMenu.length; i++) {\\n                this.selectedMenu[i].isOpen = false;\\n            }\\n        }\\n    }\\n\\n    public refreshMenu() {\\n        if (this.selectedMenu) {\\n            this.selectedMenu = JSON.parse(JSON.stringify(this.selectedMenu));\\n            this.onSetMainMenu.emit(this.selectedMenu);\\n        }\\n    }\\n\\n    public clearMenu() {\\n        if (this.selectedMenu) {\\n            this.selectedMenu = [];\\n            this.onSetMainMenu.emit(this.selectedMenu);\\n        }\\n    }\\n\\n    public checkSinPermissions(selectedMenu: IUiMenuItem[], userPermissions: IUiPermissions): IUiMenuItem[] {\\n        const selectedMenuWithPermissions: IUiMenuItem[] = [];\\n        for (const subMenu of selectedMenu) {\\n            if (!subMenu.permission || userPermissions[subMenu.permission]) {\\n                selectedMenuWithPermissions.push(subMenu);\\n            }\\n        }\\n\\n        return selectedMenuWithPermissions;\\n    }\\n}\\n\\nexport interface IUiMenuItem {\\n    name: string;\\n    icon?: string;\\n    route: string;\\n    isOpen: boolean;\\n    permission: string;\\n    flag: string;\\n    children?: IUiMenuItem[];\\n}\\nexport interface IUiMenus {\\n    devHub: IUiMenuItem[];\\n    dev: IUiMenuItem[];\\n    sin: IUiMenuItem[];\\n    contactsManager: IUiMenuItem[];\\n}\\n\\nexport enum UiMenuNamesEnum {\\n    devHub = \'devHub\',\\n    dev = \'dev\',\\n    sin = \'sin\',\\n    contactsManager = \'contactsManager\',\\n    declarationSearch = \'declarationSearch\',\\n    segmentation = \'segmentation\',\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiModalService","id":"injectable-UiModalService-db7982b9faa06b15218272a07faef857aab0e149b7f8693c042d155db7bf706907758d1fd342e235ba9bffc54a77aacffaaae45d631d679f0e5cab22a82e40a1","file":"libs/ui/src/lib/modules/modal/services/modal.service.ts","properties":[{"name":"_activeModals","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"NgbModalRef[]","optional":false,"description":"<p>Array to keep track of active modal references.</p>\\n","line":23,"rawdescription":"\\n\\nArray to keep track of active modal references.\\n","modifierKind":[121]},{"name":"_activeOffcanvas","deprecated":false,"deprecationMessage":"","type":"NgbOffcanvasRef","optional":false,"description":"<p>Reference to the currently active offcanvas component.</p>\\n","line":28,"rawdescription":"\\n\\nReference to the currently active offcanvas component.\\n","modifierKind":[121]}],"methods":[{"name":"close","args":[{"name":"result","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClose the dialog modal\\n\\n","description":"<p>Close the dialog modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1801,"end":1807,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"result"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":1795,"end":1800,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Optional - Result to be passed when closing the modal</p>\\n"}]},{"name":"dismiss","args":[{"name":"reason","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1516,"end":1522,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"reason"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":1510,"end":1515,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Optional - Reason for dismissing the modal</p>\\n"}]},{"name":"open","args":[{"name":"component","type":"any","deprecated":false,"deprecationMessage":""},{"name":"config","type":"UiModalConfig","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"NgbModalRef | NgbOffcanvasRef","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpen the the passed component as a modal or offcanvas\\n\\n","description":"<p>Open the the passed component as a modal or offcanvas</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2212,"end":2221,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"component"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":2206,"end":2211,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Passed component to be opened in a modal</p>\\n"},{"name":{"pos":2277,"end":2283,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"UiModalConfig","deprecated":false,"deprecationMessage":"","tagName":{"pos":2271,"end":2276,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Optional - Configuration options for the modal</p>\\n"},{"tagName":{"pos":2339,"end":2346,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Reference to the modal or offcanvas</p>\\n"}]},{"name":"setHideOverflow","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReset the overflow property to show if it was previously hidden.\\n","description":"<p>Reset the overflow property to show if it was previously hidden.</p>\\n","modifierKind":[121]}],"deprecated":false,"deprecationMessage":"","description":"<p>Service to handle opening, closing, and dismissing modals and offcanvas components.</p>\\n","rawdescription":"\\n\\nService to handle opening, closing, and dismissing modals and offcanvas components.\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n// NgBootstrap\\nimport { NgbModal, NgbModalRef, NgbOffcanvas, NgbOffcanvasRef } from \'@ng-bootstrap/ng-bootstrap\';\\n// Enums\\nimport { UiModalDialogSizeEnum } from \'@lib/enums\';\\nimport { UiModalTypeEnum } from \'@lib/enums/modal-type.enum\';\\n// Config\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\n// Services\\nimport { UiLayoutService } from \'@lib/services/layout/layout.service\';\\n\\n/**\\n * Service to handle opening, closing, and dismissing modals and offcanvas components.\\n */\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiModalService {\\n    /**\\n     * Array to keep track of active modal references.\\n     */\\n    private _activeModals: NgbModalRef[] = [];\\n\\n    /**\\n     * Reference to the currently active offcanvas component.\\n     */\\n    private _activeOffcanvas: NgbOffcanvasRef;\\n\\n    /**\\n     * @param _modalService NgbModal Service\\n     * @param _offcanvasService NgbOffcanvas Service\\n     * @param _layoutService Service to handle layout changes\\n     */\\n    constructor(private _modalService: NgbModal, private _offcanvasService: NgbOffcanvas, private _layoutService: UiLayoutService) {\\n        this._modalService.activeInstances?.subscribe((activeModals: NgbModalRef[]) => (this._activeModals = activeModals));\\n        this._offcanvasService.activeInstance?.subscribe((activeOffcanvas: NgbOffcanvasRef) => (this._activeOffcanvas = activeOffcanvas));\\n    }\\n\\n    /**\\n     * Dismiss the modal\\n     *\\n     * @param reason Optional - Reason for dismissing the modal\\n     */\\n    public dismiss(reason: any) {\\n        this._offcanvasService.dismiss(reason);\\n        this._modalService.dismissAll(reason);\\n        this.setHideOverflow();\\n    }\\n\\n    /**\\n     * Close the dialog modal\\n     *\\n     * @param result Optional - Result to be passed when closing the modal\\n     */\\n    public close(result: unknown) {\\n        if (this._activeOffcanvas) {\\n            this._activeOffcanvas.close(result);\\n        }\\n        this._activeModals.forEach((modal: NgbModalRef) => modal.close(result));\\n        this.setHideOverflow();\\n    }\\n\\n    /**\\n     * Open the the passed component as a modal or offcanvas\\n     *\\n     * @param component Passed component to be opened in a modal\\n     * @param config Optional - Configuration options for the modal\\n     * @returns Reference to the modal or offcanvas\\n     */\\n    public open(component: any, config: UiModalConfig): NgbModalRef | NgbOffcanvasRef {\\n        try {\\n            switch (config.modalType) {\\n                case UiModalTypeEnum.Offcanvas:\\n                    // Always append `.ui-modal-offcanvas` for selective styling\\n                    config.panelClass += \' ui-modal-offcanvas offcanvas-end\';\\n                    // If size is passed this way then append the panelClass to the size\\n                    // If nothing passed then default to \'md\'\\n                    // NOTE: the CSS is structured so that the largest class is always applied last\\n                    if (config.size) {\\n                        config.panelClass += \' \' + config.size;\\n                    } else {\\n                        config.panelClass += \' \' + UiModalDialogSizeEnum.md;\\n                    }\\n                    config.animation = true;\\n\\n                    return this._offcanvasService.open(component, config);\\n\\n                case UiModalTypeEnum.Modal:\\n                    // Always append `.ui-modal-dialog` for selective styling\\n                    config.modalDialogClass += \' ui-modal-dialog\';\\n\\n                    return this._modalService.open(component, config);\\n\\n                default:\\n                    console.error(\'Invalid modal type: \', config.modalType);\\n                    throw new Error(\'Invalid modal type: please use UiModalTypeEnum.Offcanvas or UiModalTypeEnum.Modal\');\\n            }\\n        } catch (error) {\\n            console.error(\'Error opening modal: \', error);\\n            throw new Error(\'Error opening modal: \' + error);\\n        }\\n    }\\n\\n    /**\\n     * Reset the overflow property to show if it was previously hidden.\\n     */\\n    private setHideOverflow() {\\n        // If the overflow is hidden, reset it to show - see https://assent.atlassian.net/browse/ASP-186\\n        if (this._layoutService.hideOverflow !== undefined && this._layoutService.hideOverflow === true) {\\n            this._layoutService.hideOverflow = false;\\n        }\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_offcanvasService","type":"NgbOffcanvas","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""}],"line":28,"rawdescription":"\\n\\n","jsdoctags":[{"name":{"pos":904,"end":917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"_modalService"},"type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"pos":898,"end":903,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>NgbModal Service</p>\\n"},{"name":{"pos":949,"end":966,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"_offcanvasService"},"type":"NgbOffcanvas","deprecated":false,"deprecationMessage":"","tagName":{"pos":943,"end":948,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>NgbOffcanvas Service</p>\\n"},{"name":{"pos":1002,"end":1016,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"_layoutService"},"type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"pos":996,"end":1001,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Service to handle layout changes</p>\\n"}]},"type":"injectable"},{"name":"UiNavigationService","id":"injectable-UiNavigationService-f1e196d9135f193ee260e4f25b2e4bd5197abb2b9ce8d8d76c43174910e93feb7e31c17e97e519b845c1faff03c4f0e54bacb2ed81ee8505156ac6291c2a3880","file":"libs/ui/src/lib/services/navigation/navigation.service.ts","properties":[],"methods":[{"name":"getNavigationData","args":[],"optional":false,"returnType":"any | undefined","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateTo","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"navigateToWithReferral","args":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true},{"name":"referralRoute","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"location","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"referralRoute","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { IUiNavigationService } from \'./interfaces/navigation.service.interface\';\\nimport { Router } from \'@angular/router\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\n\\n@Injectable({\\n    providedIn: \'root\'\\n})\\nexport class UiNavigationService implements IUiNavigationService {\\n\\n    constructor(private _router: Router, private _location: Location) {}\\n\\n    public navigateTo(location: string, data?: any): void {\\n        this._router.navigate([location], { state: data });\\n    }\\n\\n    public navigateToWithReferral(location: string, data?: any, referralRoute?: string): void {\\n        this._router.navigate([location], { state: { ...data, referralRoute } });\\n    }\\n\\n    public getNavigationData(): any | undefined {\\n        return this._location.getState();\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiNotificationService","id":"injectable-UiNotificationService-9bb660f10d4c48d419c6803ba19fada91dbd27ee89c1d7e3ba27d3d213093a9f7bc80295e548f1f363507477bdfed333094d535d3cb376faa52b59e938528906","file":"libs/ui/src/lib/services/notification/notification.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiNotificationService {\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiPageFooterService","id":"injectable-UiPageFooterService-59b4c8d0961a794d5a1d2fcd1cbda9b38f95d3689541fae05d2c99a7c2642845a473c7ff38b6868b2bd9cb4d23055c5a73fb0fd0c1d47f83242e3a12eff2d39b","file":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":74,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":73,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":71,"modifierKind":[121,144]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72,"modifierKind":[121]},{"name":"_showPageFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":77,"modifierKind":[121]},{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":79,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageFooter$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\n\\nexport interface IUiPageFooterItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageFooterService {\\n    public showPageFooter$ = new Subject<boolean>();\\n    //Commenting out for now - may use in future iterations\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\n\\n    public backButtonText = \'COMMON.BACK\';\\n    public active: any;\\n\\n    // Page Footer START\\n    public set showPageFooter(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageFooter = value;\\n            this.showPageFooter$.next(this._showPageFooter);\\n        });\\n    }\\n    public get showPageFooter() {\\n        return this._showPageFooter;\\n    }\\n\\n    // Commenting out for now - may use in future iterations\\n    // public set titleText(text: string) {\\n    //     setTimeout(() => {\\n    //         this.titleText$.next(text);\\n    //     });\\n    // }\\n    // Page Footer END\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Page Footer\\n    private _showPageFooter = false;\\n\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\n        this._router.events.subscribe((event) => {\\n            if (event instanceof NavigationEnd) {\\n                this.showPageFooter = false;\\n                this.actionButtons = [];\\n            }\\n        });\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":77,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"showPageFooter":{"name":"showPageFooter","setSignature":{"name":"showPageFooter","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageFooter","type":"","returnType":"","line":35}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":48,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":51}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":55,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":66}}},"type":"injectable"},{"name":"UiPageFooterService","id":"injectable-UiPageFooterService-4c0b3e14b8f4cd6391009f2243bcdd2b63de8faed526581d3c53f358ea3c3a9a0c9d8a35be88c69ecf6d617e58ab21de972873d1ee49985840bef5597cdb41cf-1","file":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":74,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":73,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":71,"modifierKind":[121,144]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72,"modifierKind":[121]},{"name":"_showPageFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":77,"modifierKind":[121]},{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":79,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageFooter$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\nimport { BehaviorSubject, Subject } from \'rxjs\';\\n\\nexport interface IUiPageFooterItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageFooterService {\\n    public showPageFooter$ = new Subject<boolean>();\\n    //Commenting out for now - may use in future iterations\\n    // public titleText$ = new BehaviorSubject<string>(\'\');\\n\\n    public backButtonText = \'COMMON.BACK\';\\n    public active: any;\\n\\n    // Page Footer START\\n    public set showPageFooter(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageFooter = value;\\n            this.showPageFooter$.next(this._showPageFooter);\\n        });\\n    }\\n    public get showPageFooter() {\\n        return this._showPageFooter;\\n    }\\n\\n    // Commenting out for now - may use in future iterations\\n    // public set titleText(text: string) {\\n    //     setTimeout(() => {\\n    //         this.titleText$.next(text);\\n    //     });\\n    // }\\n    // Page Footer END\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Page Footer\\n    private _showPageFooter = false;\\n\\n    constructor(public activatedRoute: ActivatedRoute, private _router: Router) {\\n        this._router.events.subscribe((event) => {\\n            if (event instanceof NavigationEnd) {\\n                this.showPageFooter = false;\\n                this.actionButtons = [];\\n                //Commenting out for now - may use in future iterations\\n                // this.titleText$.next(\'\');\\n            }\\n        });\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":77,"jsdoctags":[{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"showPageFooter":{"name":"showPageFooter","setSignature":{"name":"showPageFooter","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageFooter","type":"","returnType":"","line":35}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":48,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":51}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":55,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":66}}},"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageFooterService-1"},{"name":"UiPageHeaderService","id":"injectable-UiPageHeaderService-7162c21d2c5d16af231261b295ad5ce0b52d020f318cabd44af7e31b62f1b725070c6019cd3a0fed15f6c266a8de260c4ca27b23d3872a11592811dc22968eee","file":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":275,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":274,"modifierKind":[121]},{"name":"_backToButtonText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":267,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":272,"modifierKind":[121,144]},{"name":"_dropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":false,"description":"","line":285,"modifierKind":[121]},{"name":"_feedbackIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":296,"modifierKind":[121]},{"name":"_feedbackIconColor","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":297,"modifierKind":[121]},{"name":"_feedbackText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":294,"modifierKind":[121]},{"name":"_feedbackTextParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":295,"modifierKind":[121]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":273,"modifierKind":[121]},{"name":"_pageSubTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":263,"modifierKind":[121]},{"name":"_pageSubTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":264,"modifierKind":[121]},{"name":"_pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":258,"modifierKind":[121]},{"name":"_pageTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":259,"modifierKind":[121]},{"name":"_pills","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":278,"modifierKind":[121]},{"name":"_showBackButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":268,"modifierKind":[121]},{"name":"_showBreadcrumb","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":269,"modifierKind":[121]},{"name":"_showDropdowns","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":284,"modifierKind":[121]},{"name":"_showPageHeader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":254,"modifierKind":[121]},{"name":"_showSubNav","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":288,"modifierKind":[121]},{"name":"_showTabSets","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":291,"modifierKind":[121]},{"name":"_status","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":279,"modifierKind":[121]},{"name":"_subNavs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":280,"modifierKind":[121]},{"name":"_tabsets","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":281,"modifierKind":[121]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"breadcrumbs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"breadcrumbString","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"hideOnRoute","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"keepActionButtonsOnRoute","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"routeSegments","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageHeader$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":251,"modifierKind":[123]},{"name":"subject","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":250,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\n// import { UiLayoutService } from \'@lib/services/layout\';\\nimport { Subject } from \'rxjs\';\\n\\nexport interface IUiPageHeaderItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageHeaderService {\\n    public breadcrumbString = \'\';\\n    public backButtonText = \'COMMON.BACK\';\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\n    public routeSegments = [];\\n    public hideOnRoute = true;\\n    public keepActionButtonsOnRoute = false;\\n\\n    // Title START\\n    public set pageTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageTitle = value;\\n        });\\n    }\\n    public get pageTitle() {\\n        return this._pageTitle;\\n    }\\n\\n    public set pageTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageTitleParams = value;\\n        });\\n    }\\n    public get pageTitleParams() {\\n        return this._pageTitleParams;\\n    }\\n    // Title END\\n\\n    public set pageSubTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageSubTitle = value;\\n        });\\n    }\\n    public get pageSubTitle() {\\n        return this._pageSubTitle;\\n    }\\n\\n    public set pageSubTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageSubTitleParams = value;\\n        });\\n    }\\n    public get pageSubTitleParams() {\\n        return this._pageSubTitleParams;\\n    }\\n    // Sub Title END\\n\\n    // Back Button START\\n    public set backToButtonText(value: string) {\\n        setTimeout(() => {\\n            this._backToButtonText = value;\\n        });\\n    }\\n    public get backToButtonText() {\\n        return this._backToButtonText;\\n    }\\n\\n    public set showBackButton(value: boolean) {\\n        setTimeout(() => {\\n            this._showBackButton = value;\\n        });\\n    }\\n    public get showBackButton() {\\n        return this._showBackButton;\\n    }\\n    // Back Button END\\n\\n    // Breadcrumb // Breadcrumb are not available yet\\n    public set showBreadcrumb(value: boolean) {\\n        setTimeout(() => {\\n            this._showBreadcrumb = value;\\n        });\\n    }\\n    public get showBreadcrumb() {\\n        return this._showBreadcrumb;\\n    }\\n\\n    // Status Badges\\n    public set status(values: Array<IUiPageHeaderItem>) {\\n        this._status = values;\\n    }\\n    public get status() {\\n        return this._status;\\n    }\\n\\n    // Pills\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\n        this._pills = values;\\n    }\\n    public get pills() {\\n        return this._pills;\\n    }\\n\\n    // Dropdowns START\\n    public set dropdowns(value: Array<any>) {\\n        setTimeout(() => {\\n            this._dropdowns = value;\\n        });\\n    }\\n    public get dropdowns() {\\n        return this._dropdowns;\\n    }\\n\\n    public set showDropdowns(value: boolean) {\\n        setTimeout(() => {\\n            this._showDropdowns = value;\\n        });\\n    }\\n    public get showDropdowns() {\\n        return this._showDropdowns;\\n    }\\n    // Dropdowns END\\n\\n    // Sub Navigation\\n    public set showSubNav(value: boolean) {\\n        setTimeout(() => {\\n            this._showSubNav = value;\\n        });\\n    }\\n    public get showSubNav() {\\n        return this._showSubNav;\\n    }\\n\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\n        setTimeout(() => {\\n            this._subNavs = values;\\n        });\\n    }\\n    public get subNavs() {\\n        return this._subNavs;\\n    }\\n\\n    // Tabset\\n    public set showTabsets(value: boolean) {\\n        setTimeout(() => {\\n            this._showTabSets = value;\\n        });\\n    }\\n    public get showTabsets() {\\n        return this._showTabSets;\\n    }\\n\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\n        this._tabsets = values;\\n    }\\n    public get tabsets() {\\n        return this._tabsets;\\n    }\\n\\n    // Feedback Text\\n    public set feedbackText(value: string) {\\n        setTimeout(() => {\\n            this._feedbackText = value;\\n        });\\n    }\\n    public get feedbackText() {\\n        return this._feedbackText;\\n    }\\n\\n    // Feedback Text Params\\n    public set feedbackTextParams(value: object) {\\n        setTimeout(() => {\\n            this._feedbackTextParams = value;\\n        });\\n    }\\n    public get feedbackTextParams() {\\n        return this._feedbackTextParams;\\n    }\\n\\n    // Feedback Icon\\n    public set feedbackIcon(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIcon = value;\\n        });\\n    }\\n    public get feedbackIcon() {\\n        return this._feedbackIcon;\\n    }\\n\\n    // Feedback Icon Color\\n    public set feedbackIconColor(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIconColor = value;\\n        });\\n    }\\n    public get feedbackIconColor() {\\n        return this._feedbackIconColor;\\n    }\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public get actionDropdowns() {\\n        return this._actionDropdowns;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n    // Action Buttons END\\n\\n    // Page Header START\\n    public set showPageHeader(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageHeader = value;\\n            // this.subject.next(value);\\n        });\\n    }\\n    public get showPageHeader() {\\n        return this._showPageHeader;\\n    }\\n    // Page Header END\\n\\n    public subject = new Subject<boolean>();\\n    public showPageHeader$ = new Subject<boolean>();\\n\\n    // Page Header\\n    private _showPageHeader = false;\\n\\n    // Title\\n    // private _showTitle = false;\\n    private _pageTitle = \'\';\\n    private _pageTitleParams = {};\\n\\n    // Sub Title\\n    // private _showSubTitle = false;\\n    private _pageSubTitle = \'\';\\n    private _pageSubTitleParams = {};\\n\\n    // Back Button / Breadcrumbs\\n    private _backToButtonText = \'\';\\n    private _showBackButton = false;\\n    private _showBreadcrumb = false;\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Pills / Status / SubNav/ Tabsets\\n    private _pills: Array<IUiPageHeaderItem> = [];\\n    private _status: Array<IUiPageHeaderItem> = [];\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\n\\n    // Dropdowns\\n    private _showDropdowns = false;\\n    private _dropdowns: Array<any> = [];\\n\\n    // Sub Nav\\n    private _showSubNav = false;\\n\\n    // Tabsets\\n    private _showTabSets = false;\\n\\n    // Feedback\\n    private _feedbackText = \'\';\\n    private _feedbackTextParams = {};\\n    private _feedbackIcon = \'\';\\n    private _feedbackIconColor = \'\';\\n\\n    constructor(private _router: Router) {\\n        // Hide Page Header on every navigation page out.\\n        this._router.events.subscribe((evt) => {\\n            if (evt instanceof NavigationEnd) {\\n                if (this.hideOnRoute === true) {\\n                    this.showPageHeader = false;\\n                    this.subNavs = [];\\n                    this.showSubNav = false;\\n                }\\n\\n                // const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\n                // if(!keepTabsets){\\n                //     this.tabsets = [];\\n                //     this.showTabsets = false;\\n                // }\\n\\n                if (!this.keepActionButtonsOnRoute) {\\n                    this.actionButtons = [];\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\n                }\\n\\n                this.pills = [];\\n                this.dropdowns = [];\\n                this.pageSubTitle = \'\';\\n                this.backToButtonText = \'\';\\n                this.backButtonText = \'COMMON.BACK\';\\n                this.showBackButton = false;\\n                this.feedbackText = \'\';\\n                this.feedbackIcon = \'\';\\n                this.feedbackIconColor = \'\';\\n            }\\n            if (evt instanceof NavigationStart) {\\n                this.breadcrumbString = evt.url;\\n                // this._layoutService.showContainer = true;\\n                // this.routeSegments = evt.url.split(\'/\');\\n            }\\n        });\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":297,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"pageTitle":{"name":"pageTitle","setSignature":{"name":"pageTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":30,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitle","type":"","returnType":"","line":35}},"pageTitleParams":{"name":"pageTitleParams","setSignature":{"name":"pageTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitleParams","type":"","returnType":"","line":44}},"pageSubTitle":{"name":"pageSubTitle","setSignature":{"name":"pageSubTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":49,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitle","type":"","returnType":"","line":54}},"pageSubTitleParams":{"name":"pageSubTitleParams","setSignature":{"name":"pageSubTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":58,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitleParams","type":"","returnType":"","line":63}},"backToButtonText":{"name":"backToButtonText","setSignature":{"name":"backToButtonText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":69,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"backToButtonText","type":"","returnType":"","line":74}},"showBackButton":{"name":"showBackButton","setSignature":{"name":"showBackButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":78,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBackButton","type":"","returnType":"","line":83}},"showBreadcrumb":{"name":"showBreadcrumb","setSignature":{"name":"showBreadcrumb","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":89,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBreadcrumb","type":"","returnType":"","line":94}},"status":{"name":"status","setSignature":{"name":"status","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":99,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"status","type":"","returnType":"","line":102}},"pills":{"name":"pills","setSignature":{"name":"pills","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":107,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pills","type":"","returnType":"","line":110}},"dropdowns":{"name":"dropdowns","setSignature":{"name":"dropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":115,"jsdoctags":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"dropdowns","type":"","returnType":"","line":120}},"showDropdowns":{"name":"showDropdowns","setSignature":{"name":"showDropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":124,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showDropdowns","type":"","returnType":"","line":129}},"showSubNav":{"name":"showSubNav","setSignature":{"name":"showSubNav","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":135,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showSubNav","type":"","returnType":"","line":140}},"subNavs":{"name":"subNavs","setSignature":{"name":"subNavs","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":144,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subNavs","type":"","returnType":"","line":149}},"showTabsets":{"name":"showTabsets","setSignature":{"name":"showTabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":154,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showTabsets","type":"","returnType":"","line":159}},"tabsets":{"name":"tabsets","setSignature":{"name":"tabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":163,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"tabsets","type":"","returnType":"","line":166}},"feedbackText":{"name":"feedbackText","setSignature":{"name":"feedbackText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":171,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackText","type":"","returnType":"","line":176}},"feedbackTextParams":{"name":"feedbackTextParams","setSignature":{"name":"feedbackTextParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":181,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackTextParams","type":"","returnType":"","line":186}},"feedbackIcon":{"name":"feedbackIcon","setSignature":{"name":"feedbackIcon","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":191,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIcon","type":"","returnType":"","line":196}},"feedbackIconColor":{"name":"feedbackIconColor","setSignature":{"name":"feedbackIconColor","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":201,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIconColor","type":"","returnType":"","line":206}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":211,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":214}},"actionDropdowns":{"name":"actionDropdowns","getSignature":{"name":"actionDropdowns","type":"","returnType":"","line":218}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":222,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":233}},"showPageHeader":{"name":"showPageHeader","setSignature":{"name":"showPageHeader","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":239,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageHeader","type":"","returnType":"","line":245}}},"type":"injectable"},{"name":"UiPageHeaderService","id":"injectable-UiPageHeaderService-6b577924c9ad07001bde867f9a312a11a724d38b72d63b66c2628482f3c4be5180236d45557e803ec7a5076d9de5fc0862fdb838083e1882916720a2e642facc-1","file":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","properties":[{"name":"_actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":275,"modifierKind":[121]},{"name":"_actionDropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiActionButton>","optional":false,"description":"","line":274,"modifierKind":[121]},{"name":"_backToButtonText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":267,"modifierKind":[121]},{"name":"_defaultMaxActionButtons","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":272,"modifierKind":[121,144]},{"name":"_dropdowns","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<any>","optional":false,"description":"","line":285,"modifierKind":[121]},{"name":"_feedbackIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":296,"modifierKind":[121]},{"name":"_feedbackIconColor","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":297,"modifierKind":[121]},{"name":"_feedbackText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":294,"modifierKind":[121]},{"name":"_feedbackTextParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":295,"modifierKind":[121]},{"name":"_maxActionButtons","defaultValue":"this._defaultMaxActionButtons","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":273,"modifierKind":[121]},{"name":"_pageSubTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":263,"modifierKind":[121]},{"name":"_pageSubTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":264,"modifierKind":[121]},{"name":"_pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":258,"modifierKind":[121]},{"name":"_pageTitleParams","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":259,"modifierKind":[121]},{"name":"_pills","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":278,"modifierKind":[121]},{"name":"_showBackButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":268,"modifierKind":[121]},{"name":"_showBreadcrumb","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":269,"modifierKind":[121]},{"name":"_showDropdowns","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":284,"modifierKind":[121]},{"name":"_showPageHeader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":254,"modifierKind":[121]},{"name":"_showSubNav","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":288,"modifierKind":[121]},{"name":"_showTabSets","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":291,"modifierKind":[121]},{"name":"_status","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":279,"modifierKind":[121]},{"name":"_subNavs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":280,"modifierKind":[121]},{"name":"_tabsets","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiPageHeaderItem>","optional":false,"description":"","line":281,"modifierKind":[121]},{"name":"backButtonText","defaultValue":"\'COMMON.BACK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"breadcrumbs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"breadcrumbString","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"hideOnRoute","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"keepActionButtonsOnRoute","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"routeSegments","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"showPageHeader$","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":251,"modifierKind":[123]},{"name":"subject","defaultValue":"new Subject<boolean>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":250,"modifierKind":[123]}],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { NavigationEnd, NavigationStart, Router } from \'@angular/router\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\n// import { UiLayoutService } from \'@lib/services/layout\';\\nimport { Subject } from \'rxjs\';\\n\\nexport interface IUiPageHeaderItem {\\n    id: string;\\n    label: string;\\n    labelParams?: object;\\n    type?: string;\\n    onClick?: (e?: unknown) => unknown;\\n    routerLink?: string;\\n    disabled?: boolean;\\n    icon?: string;\\n    tooltipText?: string;\\n}\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPageHeaderService {\\n    public breadcrumbString = \'\';\\n    public backButtonText = \'COMMON.BACK\';\\n    public breadcrumbs = []; // Breadcrumbs not available yet\\n    public routeSegments = [];\\n    public hideOnRoute = true;\\n    public keepActionButtonsOnRoute = false;\\n\\n    // Title START\\n    public set pageTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageTitle = value;\\n        });\\n    }\\n    public get pageTitle() {\\n        return this._pageTitle;\\n    }\\n\\n    public set pageTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageTitleParams = value;\\n        });\\n    }\\n    public get pageTitleParams() {\\n        return this._pageTitleParams;\\n    }\\n    // Title END\\n\\n    public set pageSubTitle(value: string) {\\n        setTimeout(() => {\\n            this._pageSubTitle = value;\\n        });\\n    }\\n    public get pageSubTitle() {\\n        return this._pageSubTitle;\\n    }\\n\\n    public set pageSubTitleParams(value: object) {\\n        setTimeout(() => {\\n            this._pageSubTitleParams = value;\\n        });\\n    }\\n    public get pageSubTitleParams() {\\n        return this._pageSubTitleParams;\\n    }\\n    // Sub Title END\\n\\n    // Back Button START\\n    public set backToButtonText(value: string) {\\n        setTimeout(() => {\\n            this._backToButtonText = value;\\n        });\\n    }\\n    public get backToButtonText() {\\n        return this._backToButtonText;\\n    }\\n\\n    public set showBackButton(value: boolean) {\\n        setTimeout(() => {\\n            this._showBackButton = value;\\n        });\\n    }\\n    public get showBackButton() {\\n        return this._showBackButton;\\n    }\\n    // Back Button END\\n\\n    // Breadcrumb // Breadcrumb are not available yet\\n    public set showBreadcrumb(value: boolean) {\\n        setTimeout(() => {\\n            this._showBreadcrumb = value;\\n        });\\n    }\\n    public get showBreadcrumb() {\\n        return this._showBreadcrumb;\\n    }\\n\\n    // Status Badges\\n    public set status(values: Array<IUiPageHeaderItem>) {\\n        this._status = values;\\n    }\\n    public get status() {\\n        return this._status;\\n    }\\n\\n    // Pills\\n    public set pills(values: Array<IUiPageHeaderItem>) {\\n        this._pills = values;\\n    }\\n    public get pills() {\\n        return this._pills;\\n    }\\n\\n    // Dropdowns START\\n    public set dropdowns(value: Array<any>) {\\n        setTimeout(() => {\\n            this._dropdowns = value;\\n        });\\n    }\\n    public get dropdowns() {\\n        return this._dropdowns;\\n    }\\n\\n    public set showDropdowns(value: boolean) {\\n        setTimeout(() => {\\n            this._showDropdowns = value;\\n        });\\n    }\\n    public get showDropdowns() {\\n        return this._showDropdowns;\\n    }\\n    // Dropdowns END\\n\\n    // Sub Navigation\\n    public set showSubNav(value: boolean) {\\n        setTimeout(() => {\\n            this._showSubNav = value;\\n        });\\n    }\\n    public get showSubNav() {\\n        return this._showSubNav;\\n    }\\n\\n    public set subNavs(values: Array<IUiPageHeaderItem>) {\\n        setTimeout(() => {\\n            this._subNavs = values;\\n        });\\n    }\\n    public get subNavs() {\\n        return this._subNavs;\\n    }\\n\\n    // Tabset\\n    public set showTabsets(value: boolean) {\\n        setTimeout(() => {\\n            this._showTabSets = value;\\n        });\\n    }\\n    public get showTabsets() {\\n        return this._showTabSets;\\n    }\\n\\n    public set tabsets(values: Array<IUiPageHeaderItem>) {\\n        this._tabsets = values;\\n    }\\n    public get tabsets() {\\n        return this._tabsets;\\n    }\\n\\n    // Feedback Text\\n    public set feedbackText(value: string) {\\n        setTimeout(() => {\\n            this._feedbackText = value;\\n        });\\n    }\\n    public get feedbackText() {\\n        return this._feedbackText;\\n    }\\n\\n    // Feedback Text Params\\n    public set feedbackTextParams(value: object) {\\n        setTimeout(() => {\\n            this._feedbackTextParams = value;\\n        });\\n    }\\n    public get feedbackTextParams() {\\n        return this._feedbackTextParams;\\n    }\\n\\n    // Feedback Icon\\n    public set feedbackIcon(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIcon = value;\\n        });\\n    }\\n    public get feedbackIcon() {\\n        return this._feedbackIcon;\\n    }\\n\\n    // Feedback Icon Color\\n    public set feedbackIconColor(value: string) {\\n        setTimeout(() => {\\n            this._feedbackIconColor = value;\\n        });\\n    }\\n    public get feedbackIconColor() {\\n        return this._feedbackIconColor;\\n    }\\n\\n    // Action Buttons START\\n    public set maxActionButtons(value: number) {\\n        this._maxActionButtons = value;\\n    }\\n    public get maxActionButtons() {\\n        return this._maxActionButtons;\\n    }\\n\\n    public get actionDropdowns() {\\n        return this._actionDropdowns;\\n    }\\n\\n    public set actionButtons(values: Array<IUiActionButton>) {\\n        setTimeout(() => {\\n            if (this.maxActionButtons !== -1) {\\n                this._actionButtons = values.slice(0, this.maxActionButtons).reverse();\\n                this._actionDropdowns = values.slice(this.maxActionButtons, values.length);\\n            } else {\\n                this._actionButtons = values.reverse();\\n            }\\n        });\\n    }\\n\\n    public get actionButtons() {\\n        return this._actionButtons;\\n    }\\n    // Action Buttons END\\n\\n    // Page Header START\\n    public set showPageHeader(value: boolean) {\\n        setTimeout(() => {\\n            this._showPageHeader = value;\\n            // this.subject.next(value);\\n        });\\n    }\\n    public get showPageHeader() {\\n        return this._showPageHeader;\\n    }\\n    // Page Header END\\n\\n    public subject = new Subject<boolean>();\\n    public showPageHeader$ = new Subject<boolean>();\\n\\n    // Page Header\\n    private _showPageHeader = false;\\n\\n    // Title\\n    // private _showTitle = false;\\n    private _pageTitle = \'\';\\n    private _pageTitleParams = {};\\n\\n    // Sub Title\\n    // private _showSubTitle = false;\\n    private _pageSubTitle = \'\';\\n    private _pageSubTitleParams = {};\\n\\n    // Back Button / Breadcrumbs\\n    private _backToButtonText = \'\';\\n    private _showBackButton = false;\\n    private _showBreadcrumb = false;\\n\\n    // Action Buttons\\n    private readonly _defaultMaxActionButtons = 2;\\n    private _maxActionButtons = this._defaultMaxActionButtons;\\n    private _actionDropdowns: Array<IUiActionButton> = [];\\n    private _actionButtons: Array<IUiActionButton> = [];\\n\\n    // Pills / Status / SubNav/ Tabsets\\n    private _pills: Array<IUiPageHeaderItem> = [];\\n    private _status: Array<IUiPageHeaderItem> = [];\\n    private _subNavs: Array<IUiPageHeaderItem> = [];\\n    private _tabsets: Array<IUiPageHeaderItem> = [];\\n\\n    // Dropdowns\\n    private _showDropdowns = false;\\n    private _dropdowns: Array<any> = [];\\n\\n    // Sub Nav\\n    private _showSubNav = false;\\n\\n    // Tabsets\\n    private _showTabSets = false;\\n\\n    // Feedback\\n    private _feedbackText = \'\';\\n    private _feedbackTextParams = {};\\n    private _feedbackIcon = \'\';\\n    private _feedbackIconColor = \'\';\\n\\n    constructor(private _router: Router) {\\n        // Hide Page Header on every navigation page out.\\n        this._router.events.subscribe((evt) => {\\n            if (evt instanceof NavigationEnd) {\\n                if (this.hideOnRoute === true) {\\n                    this.showPageHeader = false;\\n                    this.subNavs = [];\\n                    this.showSubNav = false;\\n                    this.pageSubTitle = \'\';\\n                }\\n\\n                const keepTabsets = this._router.getCurrentNavigation().extras?.state?.keepTabsets;\\n                if(!keepTabsets){\\n                    this.tabsets = [];\\n                    this.showTabsets = false;\\n                }\\n\\n                if (!this.keepActionButtonsOnRoute) {\\n                    this.actionButtons = [];\\n                    this.maxActionButtons = this._defaultMaxActionButtons;\\n                }\\n\\n                this.pills = [];\\n                this.dropdowns = [];\\n                this.backToButtonText = \'\';\\n                this.backButtonText = \'COMMON.BACK\';\\n                this.showBackButton = false;\\n                this.feedbackText = \'\';\\n                this.feedbackIcon = \'\';\\n                this.feedbackIconColor = \'\';\\n            }\\n            if (evt instanceof NavigationStart) {\\n                this.breadcrumbString = evt.url;\\n                // this._layoutService.showContainer = true;\\n                // this.routeSegments = evt.url.split(\'/\');\\n            }\\n        });\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":297,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"pageTitle":{"name":"pageTitle","setSignature":{"name":"pageTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":30,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitle","type":"","returnType":"","line":35}},"pageTitleParams":{"name":"pageTitleParams","setSignature":{"name":"pageTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageTitleParams","type":"","returnType":"","line":44}},"pageSubTitle":{"name":"pageSubTitle","setSignature":{"name":"pageSubTitle","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":49,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitle","type":"","returnType":"","line":54}},"pageSubTitleParams":{"name":"pageSubTitleParams","setSignature":{"name":"pageSubTitleParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":58,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pageSubTitleParams","type":"","returnType":"","line":63}},"backToButtonText":{"name":"backToButtonText","setSignature":{"name":"backToButtonText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":69,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"backToButtonText","type":"","returnType":"","line":74}},"showBackButton":{"name":"showBackButton","setSignature":{"name":"showBackButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":78,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBackButton","type":"","returnType":"","line":83}},"showBreadcrumb":{"name":"showBreadcrumb","setSignature":{"name":"showBreadcrumb","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":89,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showBreadcrumb","type":"","returnType":"","line":94}},"status":{"name":"status","setSignature":{"name":"status","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":99,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"status","type":"","returnType":"","line":102}},"pills":{"name":"pills","setSignature":{"name":"pills","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":107,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"pills","type":"","returnType":"","line":110}},"dropdowns":{"name":"dropdowns","setSignature":{"name":"dropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":115,"jsdoctags":[{"name":"value","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"dropdowns","type":"","returnType":"","line":120}},"showDropdowns":{"name":"showDropdowns","setSignature":{"name":"showDropdowns","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":124,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showDropdowns","type":"","returnType":"","line":129}},"showSubNav":{"name":"showSubNav","setSignature":{"name":"showSubNav","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":135,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showSubNav","type":"","returnType":"","line":140}},"subNavs":{"name":"subNavs","setSignature":{"name":"subNavs","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":144,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"subNavs","type":"","returnType":"","line":149}},"showTabsets":{"name":"showTabsets","setSignature":{"name":"showTabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":154,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showTabsets","type":"","returnType":"","line":159}},"tabsets":{"name":"tabsets","setSignature":{"name":"tabsets","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":163,"jsdoctags":[{"name":"values","type":"Array<IUiPageHeaderItem>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"tabsets","type":"","returnType":"","line":166}},"feedbackText":{"name":"feedbackText","setSignature":{"name":"feedbackText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":171,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackText","type":"","returnType":"","line":176}},"feedbackTextParams":{"name":"feedbackTextParams","setSignature":{"name":"feedbackTextParams","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":181,"jsdoctags":[{"name":"value","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackTextParams","type":"","returnType":"","line":186}},"feedbackIcon":{"name":"feedbackIcon","setSignature":{"name":"feedbackIcon","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":191,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIcon","type":"","returnType":"","line":196}},"feedbackIconColor":{"name":"feedbackIconColor","setSignature":{"name":"feedbackIconColor","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":201,"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"feedbackIconColor","type":"","returnType":"","line":206}},"maxActionButtons":{"name":"maxActionButtons","setSignature":{"name":"maxActionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":211,"jsdoctags":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"maxActionButtons","type":"","returnType":"","line":214}},"actionDropdowns":{"name":"actionDropdowns","getSignature":{"name":"actionDropdowns","type":"","returnType":"","line":218}},"actionButtons":{"name":"actionButtons","setSignature":{"name":"actionButtons","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":222,"jsdoctags":[{"name":"values","type":"Array<IUiActionButton>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"actionButtons","type":"","returnType":"","line":233}},"showPageHeader":{"name":"showPageHeader","setSignature":{"name":"showPageHeader","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":239,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showPageHeader","type":"","returnType":"","line":245}}},"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageHeaderService-1"},{"name":"UiPasswordlessLoginService","id":"injectable-UiPasswordlessLoginService-ff611817f694a4ae448e740a13af7a2cd8398f760df70f6fa1b45005608c905c098198a6bb644e392581402a4cf40b4c5b1ca4666a861e10d07a1612679b6fa1","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","properties":[{"name":"_cookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":46,"modifierKind":[121]},{"name":"_requestOtpTokenSlug_auth0","defaultValue":"\'authentication/v2/requestotp\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[121,144]},{"name":"_requestOtpTokenSlug_cognito","defaultValue":"\'authentication/signin\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41,"modifierKind":[121,144]},{"name":"_verifyOtpTokenSlug_auth0","defaultValue":"\'authentication/v2/verifyotp\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[121,144]},{"name":"_verifyOtpTokenSlug_cognito","defaultValue":"\'authentication/verifytoken\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42,"modifierKind":[121,144]},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"token","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[123]}],"methods":[{"name":"clearUserCredentials","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":310,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getCookieDomain","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":143,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSignInErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTokenEmail","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":316,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTokenExpirationDate","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n\\n","description":"<p>Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":11615,"end":11620,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"token"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":11609,"end":11614,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>jwt</p>\\n"},{"tagName":{"pos":11633,"end":11640,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>milliseconds</p>\\n"}]},{"name":"getTokenPayload","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":340,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getVerifyTokenErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initAssentSession","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"loadUserDetails","args":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":278,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setSessionKeyCookie","args":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"email","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":214,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setTokenCookie","args":[{"name":"response","type":"IUiOtpConfirmationResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"response","type":"IUiOtpConfirmationResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"signIn","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"language","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"language","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"throwInvalidTokenError","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"verifyToken","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"otp","type":"string","deprecated":false,"deprecationMessage":""},{"name":"language","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"otp","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"language","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n// Rxjs\\nimport { catchError, map, tap } from \'rxjs/operators\';\\nimport { throwError } from \'rxjs\';\\n// Lib\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n// Ngx\\nimport { CookieService } from \'ngx-cookie-service\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { UiUserService } from \'@lib/services/user\';\\n\\n// Ngb\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\nimport { IUiAciSessionOptions, IUiAciSharedSession } from \'libs/ui/src/assets/session\';\\n\\ndeclare const Assent: IUiAciSharedSession;\\n\\nexport interface IUiPasswordLessSignInResponse {\\n    sessionKey: string;\\n    asmUri: string;\\n}\\n\\nexport interface IUiOtpConfirmationResponse {\\n    session: {\\n        token: string;\\n        sessionKey: string;\\n        consentGiven: boolean;\\n        uniqueSessionGuid: string;\\n    };\\n    sessionKey: string;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiPasswordlessLoginService {\\n    public sessionKey: string;\\n    public token: string;\\n    private readonly _requestOtpTokenSlug_cognito = \'authentication/signin\';\\n    private readonly _verifyOtpTokenSlug_cognito = \'authentication/verifytoken\';\\n    private readonly _requestOtpTokenSlug_auth0 = \'authentication/v2/requestotp\';\\n    private readonly _verifyOtpTokenSlug_auth0 = \'authentication/v2/verifyotp\';\\n\\n    private _cookieDomain: string;\\n\\n    constructor(\\n        private _configurationService: UiConfigurationService,\\n        private _httpClient: HttpClient,\\n        private _cookieService: CookieService,\\n        private _configService: UiConfigurationService,\\n        private _userService: UiUserService,\\n        private _modalService: NgbModal,\\n        private _router: Router,\\n        private _translate: TranslateService\\n    ) {}\\n\\n    // call the API sign in method using an email address\\n    public signIn(email: string, language: string) {\\n        let authResponse: IUiPasswordLessSignInResponse;\\n        const endpoint =\\n            `${this._configurationService.appConfig.iamApi}` +\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                ? this._requestOtpTokenSlug_cognito\\n                : this._requestOtpTokenSlug_auth0);\\n        const lang3letter = AcpSupportedLanguesLongCodeEnum[language];\\n\\n        const body = {\\n            email,\\n            language: lang3letter,\\n        };\\n\\n        return this._httpClient.post(`${endpoint}`, body, { observe: \'response\' }).pipe(\\n            map((response) => {\\n                // not party service validation failed\\n                if (response.status !== 248) {\\n                    if (response.body) {\\n                        if (response.status === 220) {\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\n                            window.location.href = authResponse.asmUri;\\n                        } else {\\n                            authResponse = response.body as IUiPasswordLessSignInResponse;\\n                            this.setSessionKeyCookie(authResponse.sessionKey, email);\\n                        }\\n                    }\\n                }\\n                // else show no errors and proceed to otp entry screen\\n                return response.status;\\n            }),\\n            catchError((error) => {\\n                let errorMsg: string;\\n                if (error.error instanceof ErrorEvent) {\\n                    errorMsg = `Error: ${error.error.message}`;\\n                } else {\\n                    errorMsg = this.getSignInErrorMessage(error);\\n                }\\n\\n                return throwError(() => new Error(errorMsg));\\n            })\\n        );\\n    }\\n\\n    // call the API verify token method\\n    public verifyToken(email: string, sessionKey: string, otp: string, language: string) {\\n        const endpoint =\\n            `${this._configurationService.appConfig.iamApi}` +\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                ? this._verifyOtpTokenSlug_cognito\\n                : this._verifyOtpTokenSlug_auth0);\\n\\n        language = AcpSupportedLanguesLongCodeEnum[language];\\n\\n        const body = {\\n            email,\\n            sessionKey,\\n            otp,\\n            language,\\n        };\\n\\n        return this._httpClient.post(`${endpoint}`, body).pipe(\\n            tap((data: IUiOtpConfirmationResponse) => {\\n                if (data.session) {\\n                    this.setTokenCookie(data);\\n                } else if (data.sessionKey) {\\n                    this.setSessionKeyCookie(data.sessionKey, email);\\n                    this.throwInvalidTokenError();\\n                }\\n            }),\\n            catchError((error) => {\\n                let errorMsg: string;\\n                if (error.error instanceof ErrorEvent) {\\n                    errorMsg = `Error: ${error.error.message}`;\\n                } else {\\n                    errorMsg = this.getVerifyTokenErrorMessage(error);\\n                }\\n\\n                return throwError(() => new Error(errorMsg));\\n            })\\n        );\\n    }\\n\\n    public getCookieDomain(): string {\\n        let domain = this._configService?.appConfig?.coreAuthCookieDomain;\\n        if (window.location?.href?.indexOf(\'localhost\') > -1) {\\n            domain = \'localhost\';\\n        }\\n\\n        return domain;\\n    }\\n\\n    private throwInvalidTokenError() {\\n        let errorMsg: string;\\n        this._translate.get(\'AUTHENTICATION.ERRORS.INVALID_CODE\').subscribe((res: string) => {\\n            errorMsg = res;\\n        });\\n        throwError(() => new Error(errorMsg));\\n    }\\n\\n    private getVerifyTokenErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // Party Service Validation failed\\n            case 412: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            // Expired OTP\\n            case 417: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            // Session expired\\n            case 419: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            case 500:\\n            default: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private getSignInErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // Invalid OTP\\n            case 248: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.EMAIL_UNRECOGNIZED\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n                break;\\n            }\\n            case 500:\\n            default: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private setSessionKeyCookie(sessionKey: string, email: string) {\\n        const expirationDate: Date = new Date();\\n        expirationDate.setHours(expirationDate.getHours() + 3);\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        this.sessionKey = sessionKey;\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.emailCookieId,\\n            email,\\n            null,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n    }\\n\\n    // called after use verifies the OTP\\n    private setTokenCookie(response: IUiOtpConfirmationResponse) {\\n        const expirationDate = new Date(this.getTokenExpirationDate(response.session.token));\\n        this._cookieDomain = this.getCookieDomain();\\n\\n        this.token = response.session.token;\\n        this._cookieService.set(\\n            this._configService.appConfig.authCookieId,\\n            response.session.token,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this.sessionKey = response.session.sessionKey;\\n        this._cookieService.set(\\n            this._configService.appConfig.sessionCookieId,\\n            response.session.sessionKey,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this._cookieService.set(\\n            this._configService.appConfig.uniqueSessionCookieId,\\n            response.session.uniqueSessionGuid,\\n            expirationDate,\\n            \'/\',\\n            this._cookieDomain,\\n            this._configService.appConfig.secureCookie\\n        );\\n\\n        this.loadUserDetails(response.session.token);\\n\\n        this.initAssentSession();\\n    }\\n\\n    private loadUserDetails(token: string) {\\n        const userEmail = this.getTokenEmail(token);\\n        const tokenPayload = this.getTokenPayload(token);\\n\\n        this._userService.selectUser(userEmail, tokenPayload);\\n    }\\n\\n    private initAssentSession() {\\n        const options: IUiAciSessionOptions = {\\n            cookieDomain: this._cookieDomain,\\n            authenticationApiUrl: this._configService.appConfig.authApi,\\n            logoutOverride: () => {\\n                this.clearUserCredentials();\\n                this._modalService.dismissAll();\\n                this._router.navigate([\'\']);\\n            },\\n            authTokenCookie: this._configService.appConfig.authCookieId,\\n            sessionTokenCookie: this._configService.appConfig.sessionCookieId,\\n            onExtendSession: () => {\\n                return \'\';\\n            },\\n            sessionExpiryLogoutCookieRequired: true,\\n            sessionExpiryLogoutCookieName: this._configService.appConfig.sessionExpiryLogoutCookieName,\\n            secureCookie: this._configService.appConfig.secureCookie,\\n        };\\n\\n        const cookiePattern = `^(.*;)?\\\\\\\\s*${this._configService.appConfig.authCookieId}\\\\\\\\s*=\\\\\\\\s*[^;]+(.*)?$`;\\n        if (document.cookie.match(cookiePattern)) {\\n            Assent.session.initialize(options);\\n        }\\n    }\\n\\n    private clearUserCredentials() {\\n        Assent.session.dispose();\\n        this._cookieService.deleteAll(\'/\', this._cookieDomain);\\n        this._userService.logout();\\n    }\\n\\n    private getTokenEmail(token: string): string {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.sub) {\\n            return \'\';\\n        }\\n\\n        return data.sub;\\n    }\\n\\n    /**\\n     * Returns the expiration date as a number of milliseconds elapsed since January 1, 1970 00:00:00 UTC\\n     *\\n     * @param token jwt\\n     * @returns milliseconds\\n     */\\n    private getTokenExpirationDate(token: string): number {\\n        const data = this.getTokenPayload(token);\\n        if (!data || !data.exp) {\\n            return;\\n        }\\n\\n        return data.exp * 1000;\\n    }\\n\\n    private getTokenPayload(token: string): any {\\n        if (!token) {\\n            return;\\n        }\\n\\n        const tokenParts = token.split(\'.\');\\n        if (!tokenParts || tokenParts.length < 2) {\\n            return;\\n        }\\n\\n        try {\\n            const data = JSON.parse(atob(tokenParts[1]));\\n            return data;\\n        } catch (error) {\\n            return;\\n        }\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiPendoService","id":"injectable-UiPendoService-d6dcd1ffb8ffa92c095aec6c26acfca064a63b98c164e3a73618175ee61d4816919a87a6109982fd38a9b5b002aec730d48c8c7670194ef80c3f171ab9d31d4d","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","properties":[{"name":"_accountInfo","defaultValue":"{\\n        id: null,\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiPendoAccountInfo","optional":false,"description":"<p>The Pendo Account metadata object.\\nSubject to change.</p>\\n","line":36,"rawdescription":"\\n\\nThe Pendo Account metadata object.\\nSubject to change.\\n","modifierKind":[121,124]},{"name":"_isPendoInitialized","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Tracks whether the pendo.initialize() function has been called yet or not.\\nUsed to decide whether to call pendo.initalize(), or pendo.updateOptions()</p>\\n","line":17,"rawdescription":"\\n\\nTracks whether the pendo.initialize() function has been called yet or not.\\nUsed to decide whether to call pendo.initalize(), or pendo.updateOptions()\\n","modifierKind":[121,124]},{"name":"_visitorInfo","defaultValue":"{\\n        id: \'\', // An empty string signifies an anonymous Pendo-generated ID\\n        domain: null,\\n        roles: null,\\n        permissions: null,\\n        environment: null,\\n        email: null,\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiPendoVisitorInfo","optional":false,"description":"<p>The Pendo Visitor metadata object.\\nSubject to change.</p>\\n","line":23,"rawdescription":"\\n\\nThe Pendo Visitor metadata object.\\nSubject to change.\\n","modifierKind":[121,124]},{"name":"pendoApiKey","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>Pendo API key.</p>\\n","line":43,"rawdescription":"\\n\\nPendo API key.\\n","modifierKind":[123]}],"methods":[{"name":"anonymizeVisitorInfo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAnonymizes the Visitor and Account object after user has logged out.\\nClears the user\'s Pendo session.\\nResets all of the user\'s Pendo metadata fields (except for environment).\\n","description":"<p>Anonymizes the Visitor and Account object after user has logged out.\\nClears the user&#39;s Pendo session.\\nResets all of the user&#39;s Pendo metadata fields (except for environment).</p>\\n","modifierKind":[123]},{"name":"getAccountInfo","args":[],"optional":false,"returnType":"IUiPendoAccountInfo","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getVisitorInfo","args":[],"optional":false,"returnType":"IUiPendoVisitorInfo","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializePendo","args":[{"name":"userName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"pendoKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"environment","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMethod initialized Pendo\\n","description":"<p>Method initialized Pendo</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"userName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pendoKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"environment","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initVisitorInfo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInitializes Pendo metadata flow.\\nUsed to track Login Page metrics (before the user is authenticated).\\n","description":"<p>Initializes Pendo metadata flow.\\nUsed to track Login Page metrics (before the user is authenticated).</p>\\n","modifierKind":[123]},{"name":"preliminaryPendoInit","args":[{"name":"pendoKey","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInitialize Pendo prior to authentication\\n\\n","description":"<p>Initialize Pendo prior to authentication</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6015,"end":6023,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"pendoKey"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":6009,"end":6014,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The Pendo key</p>\\n"}]},{"name":"setAuthenticatedVisitorInfo","args":[{"name":"authObj","type":"IUiUser","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the user\'s Visitor Info & Account Info after authentication.\\nIn particular, a new Pendo ID is assigned to the user (i.e the user\'s email, hashed if not an internal user).\\n\\n","description":"<p>Updates the user&#39;s Visitor Info &amp; Account Info after authentication.\\nIn particular, a new Pendo ID is assigned to the user (i.e the user&#39;s email, hashed if not an internal user).</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2917,"end":2924,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"authObj"},"type":"IUiUser","deprecated":false,"deprecationMessage":"","tagName":{"pos":2911,"end":2916,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The user object after succesful authentication</p>\\n"}]},{"name":"setAuthenticatedVisitorPermissions","args":[{"name":"permObj","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the user\'s Visitor Info after permissions have been established.\\n\\n","description":"<p>Updates the user&#39;s Visitor Info after permissions have been established.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4033,"end":4040,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permObj"},"type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"pos":4027,"end":4032,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The set of permissions the user has</p>\\n"}]},{"name":"setUserInitialFields","args":[{"name":"userName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n Updates the user Id and email address\\n\\n","description":"<p> Updates the user Id and email address</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1995,"end":2003,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"userName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1989,"end":1994,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>user name</p>\\n"}]},{"name":"setVisitorEnvironment","args":[{"name":"environment","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the static Visitor object with the user\'s environment.\\n\\n","description":"<p>Updates the static Visitor object with the user&#39;s environment.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1751,"end":1762,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"environment"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1745,"end":1750,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The user&#39;s environment</p>\\n"}]},{"name":"trackEvent","args":[{"name":"eventName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTrack Pendo Events\\n\\n","description":"<p>Track Pendo Events</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6296,"end":6305,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"eventName"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":6290,"end":6295,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The unique event name to track</p>\\n"},{"name":{"pos":6351,"end":6355,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"object","deprecated":false,"deprecationMessage":"","tagName":{"pos":6345,"end":6350,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The data to track</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n// Interfaces\\nimport { IUiUser, IUiPermissions } from \'@lib/services/user\';\\nimport { IUiPendoVisitorInfo, IUiPendoAccountInfo } from \'./pendo.interface\';\\n\\n// @ts-ignore\\ndeclare const pendo: any;\\ndeclare const pendoFunc: any;\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiPendoService {\\n    /**\\n     * Tracks whether the pendo.initialize() function has been called yet or not.\\n     * Used to decide whether to call pendo.initalize(), or pendo.updateOptions()\\n     */\\n    private static _isPendoInitialized = false;\\n\\n    /**\\n     * The Pendo Visitor metadata object.\\n     * Subject to change.\\n     */\\n    private static _visitorInfo: IUiPendoVisitorInfo = {\\n        id: \'\', // An empty string signifies an anonymous Pendo-generated ID\\n        domain: null,\\n        roles: null,\\n        permissions: null,\\n        environment: null,\\n        email: null,\\n    };\\n\\n    /**\\n     * The Pendo Account metadata object.\\n     * Subject to change.\\n     */\\n    private static _accountInfo: IUiPendoAccountInfo = {\\n        id: null,\\n    };\\n\\n    /**\\n     * Pendo API key.\\n     * */\\n    public pendoApiKey = \'\';\\n\\n    /**\\n     * Initializes Pendo metadata flow.\\n     * Used to track Login Page metrics (before the user is authenticated).\\n     */\\n    public initVisitorInfo() {\\n        try {\\n            if (!UiPendoService._isPendoInitialized) {\\n                pendo.initialize({ visitor: UiPendoService._visitorInfo });\\n                UiPendoService._isPendoInitialized = true;\\n            }\\n        } catch (error) {\\n            console.error(\'Error while initializing Pendo, \' + error);\\n        }\\n    }\\n\\n    /**\\n     * Updates the static Visitor object with the user\'s environment.\\n     *\\n     * @param environment The user\'s environment\\n     */\\n    public setVisitorEnvironment(environment: string) {\\n        UiPendoService._visitorInfo.environment = environment;\\n    }\\n\\n    /**\\n     *  Updates the user Id and email address\\n     *\\n     * @param userName user name\\n     */\\n    public setUserInitialFields(userName: string) {\\n        const domain = userName.split(\'@\').pop();\\n\\n        UiPendoService._accountInfo.id = domain;\\n        UiPendoService._visitorInfo.id = userName;\\n        UiPendoService._visitorInfo.email = userName;\\n        UiPendoService._visitorInfo.domain = domain;\\n\\n        if (UiPendoService._isPendoInitialized) {\\n            pendo.updateOptions({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\n        } else {\\n            pendo.initialize({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\n            UiPendoService._isPendoInitialized = true;\\n        }\\n    }\\n\\n    /**\\n     * Updates the user\'s Visitor Info & Account Info after authentication.\\n     * In particular, a new Pendo ID is assigned to the user (i.e the user\'s email, hashed if not an internal user).\\n     *\\n     * @param authObj The user object after succesful authentication\\n     */\\n    public setAuthenticatedVisitorInfo(authObj: IUiUser) {\\n        try {\\n            const domain = authObj.email.split(\'@\').pop();\\n\\n            UiPendoService._accountInfo.id = domain;\\n            UiPendoService._visitorInfo.id = authObj.email;\\n            UiPendoService._visitorInfo.email = authObj.email;\\n            UiPendoService._visitorInfo.roles = authObj.roles.map((role) => role.name);\\n            UiPendoService._visitorInfo.domain = domain;\\n\\n            if (UiPendoService._isPendoInitialized) {\\n                pendo.updateOptions({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\n            } else {\\n                pendo.initialize({ visitor: UiPendoService._visitorInfo, account: UiPendoService._accountInfo });\\n                UiPendoService._isPendoInitialized = true;\\n            }\\n        } catch (error) {\\n            console.error(\'Error while updating Pendo, \' + error);\\n        }\\n    }\\n\\n    /**\\n     * Updates the user\'s Visitor Info after permissions have been established.\\n     *\\n     * @param permObj The set of permissions the user has\\n     */\\n    public setAuthenticatedVisitorPermissions(permObj: IUiPermissions) {\\n        try {\\n            const permissions = Object.keys(permObj).filter((key) => permObj[key]);\\n            UiPendoService._visitorInfo.permissions = permissions;\\n\\n            if (UiPendoService._isPendoInitialized) {\\n                pendo.updateOptions({ visitor: UiPendoService._visitorInfo });\\n            }\\n        } catch (error) {\\n            console.error(\'Error while updating Pendo, \' + error);\\n        }\\n    }\\n\\n    /**\\n     * Anonymizes the Visitor and Account object after user has logged out.\\n     * Clears the user\'s Pendo session.\\n     * Resets all of the user\'s Pendo metadata fields (except for environment).\\n     */\\n    public anonymizeVisitorInfo() {\\n        try {\\n            UiPendoService._accountInfo.id = null;\\n            UiPendoService._visitorInfo.id = \'\';\\n            UiPendoService._visitorInfo.permissions = null;\\n            UiPendoService._visitorInfo.roles = null;\\n            UiPendoService._visitorInfo.domain = null;\\n\\n            pendo.clearSession();\\n            pendo.updateOptions({ visitor: UiPendoService._visitorInfo });\\n        } catch (error) {\\n            console.error(\'Error while updating Pendo, \' + error);\\n        }\\n    }\\n\\n    public getVisitorInfo() {\\n        return UiPendoService._visitorInfo;\\n    }\\n\\n    public getAccountInfo() {\\n        return UiPendoService._accountInfo;\\n    }\\n\\n    /**\\n     * Method initialized Pendo\\n     */\\n    public initializePendo(userName: string, pendoKey: string, environment: string) {\\n        if (!UiPendoService._isPendoInitialized) {\\n            this.pendoApiKey = pendoKey;\\n            pendoFunc.init([pendoKey]);\\n            pendoFunc.pendoMain();\\n        }\\n        this.setVisitorEnvironment(environment); // Set the environment metadata\\n        this.setUserInitialFields(userName);\\n    }\\n\\n    /**\\n     * Initialize Pendo prior to authentication\\n     *\\n     * @param pendoKey The Pendo key\\n     */\\n    public preliminaryPendoInit(pendoKey: string) {\\n        if (!UiPendoService._isPendoInitialized) {\\n            pendoFunc.init([pendoKey]);\\n            pendoFunc.pendoMain();\\n        }\\n    }\\n\\n    /**\\n     * Track Pendo Events\\n     *\\n     * @param eventName The unique event name to track\\n     * @param data The data to track\\n     */\\n    public trackEvent(eventName: string, data: object) {\\n        try {\\n            pendo.track(eventName, data);\\n        } catch (error) {\\n            console.error(\'Error in pendoTrackEvent, \', error);\\n        }\\n    }\\n}\\n","type":"injectable"},{"name":"UiPersonService","id":"injectable-UiPersonService-3e2709415466604a89cb7b1d05e2d4c69f64f63a16ad8c76cce8455d63d20b85d80fc83d4b48eaa30fc5d1b0730de7c771370e6ce6ba04fa3717345ef0743ee0","file":"libs/ui/src/lib/modules/user-auth-manager/services/person.service.ts","properties":[{"name":"_apiUrl","defaultValue":"\'api/persons\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[121,144]},{"name":"_contactsApiUrl","defaultValue":"\'api/contacts\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[121,144]},{"name":"_contactsEndpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[121]},{"name":"_endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17,"modifierKind":[121]}],"methods":[{"name":"getLoggedUserPersonDetails","args":[],"optional":false,"returnType":"Observable<IUiPersonDetails>","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets Person details for the logged user\\n\\n","description":"<p>Gets Person details for the logged user</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":1110,"end":1117,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"getPersonContactRelationships","args":[{"name":"personGuid","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IUiContactRelationship[]>","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets contact relationships assigned to the person\\n\\n","description":"<p>Gets contact relationships assigned to the person</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1637,"end":1647,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"personGuid"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1631,"end":1636,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1656,"end":1663,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"updateContactRegulations","args":[{"name":"contactGuid","type":"string","deprecated":false,"deprecationMessage":""},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates regulations for a contact role\\n\\n","description":"<p>Updates regulations for a contact role</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2075,"end":2086,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"contactGuid"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2069,"end":2074,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":2101,"end":2112,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"regulations"},"type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"pos":2095,"end":2100,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":2121,"end":2128,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"updatePersonDetails","args":[{"name":"person","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<void>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates person details\\n\\n","description":"<p>Updates person details</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1343,"end":1349,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"person"},"type":"IUiPersonDetails","deprecated":false,"deprecationMessage":"","tagName":{"pos":1337,"end":1342,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1358,"end":1365,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\n// Rxjs\\nimport { Observable, throwError } from \'rxjs\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n// Interfaces\\nimport { IUiContactRelationship, IUiPersonDetails, IUiRegulationShort, IUiRegulationsTree } from \'../interfaces\';\\n// Enums\\nimport { AcpDataSourceEnum } from \'@app/modules/shared/add-edit-company/enums\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiPersonService {\\n    private _endpoint: string;\\n    private _contactsEndpoint: string;\\n    private readonly _apiUrl = \'api/persons\';\\n    private readonly _contactsApiUrl = \'api/contacts\';\\n\\n    constructor(private _configurationService: UiConfigurationService, private _httpClient: HttpClient) {\\n        this._endpoint = `${this._configurationService.appConfig.partyApi}${this._apiUrl}`;\\n        this._contactsEndpoint = `${this._configurationService.appConfig.partyApi}${this._contactsApiUrl}`;\\n    }\\n\\n    /**\\n     * Gets Person details for the logged user\\n     *\\n     * @returns\\n     */\\n    public getLoggedUserPersonDetails(): Observable<IUiPersonDetails> {\\n        return this._httpClient.get<IUiPersonDetails>(`${this._endpoint}/me`);\\n    }\\n\\n    /**\\n     * Updates person details\\n     *\\n     * @param person\\n     * @returns\\n     */\\n    public updatePersonDetails(person: IUiPersonDetails): Observable<void> {\\n        return this._httpClient.put<void>(`${this._endpoint}/${person.personGuid}`, person);\\n    }\\n\\n    /**\\n     * Gets contact relationships assigned to the person\\n     *\\n     * @param personGuid\\n     * @returns\\n     */\\n    public getPersonContactRelationships(personGuid: string): Observable<IUiContactRelationship[]> {\\n        if (!personGuid) {\\n            return throwError(() => new Error(\'Missing person guid\'));\\n        }\\n\\n        return this._httpClient.get<IUiContactRelationship[]>(`${this._endpoint}/${personGuid}/contact-role`);\\n    }\\n\\n    /**\\n     * Updates regulations for a contact role\\n     *\\n     * @param contactGuid\\n     * @param regulations\\n     * @returns\\n     */\\n    public updateContactRegulations(contactGuid: string, regulations: IUiRegulationShort[] = []): Observable<void> {\\n        // Hint: dataSourceId is hardcoded to 2 (supplier) as per the requirements\\n        return this._httpClient.put<void>(`${this._contactsEndpoint}/${contactGuid}/regulations`, {\\n            contactRegulations: regulations,\\n            dataSourceId: AcpDataSourceEnum.supplier,\\n        });\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiRegulationService","id":"injectable-UiRegulationService-cee007878ac0788185b1d95520d4c9abe0f30c0d46f32da98eac3b4cfee7c45b6205b50dee9c0ff3f5a96c15ee31ba5023f8ab4283f8c2e2b0f587ed6bff5862","file":"libs/ui/src/lib/modules/user-auth-manager/services/regulation.service.ts","properties":[{"name":"_apiUrl","defaultValue":"\'api/regulations\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17,"modifierKind":[121,144]},{"name":"_endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[121]}],"methods":[{"name":"generateRegulationsTreeNode","args":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiRegulationLeaf","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateUiTreeNode","args":[{"name":"node","type":"IUiRegulationLeaf","deprecated":false,"deprecationMessage":""},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":""},{"name":"parentChecked","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"IUiTreeNode","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"node","type":"IUiRegulationLeaf","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"parentChecked","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]},{"name":"getIndeterminateState","args":[{"name":"children","type":"IUiTreeNode[]","deprecated":false,"deprecationMessage":""},{"name":"nodeChecked","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"children","type":"IUiTreeNode[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"nodeChecked","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getRegulationsTree","args":[{"name":"includeStandalone","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"Observable<IUiRegulationsTree>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets the regulations tree\\n\\n","description":"<p>Gets the regulations tree</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":875,"end":892,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"includeStandalone"},"type":"","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"pos":869,"end":874,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>include regulations that are not assigned to any program</p>\\n"},{"tagName":{"pos":958,"end":965,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"getSelectedRegulations","args":[{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiRegulationShort[]","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns the selected regulations from the tree in array\\nWhen a parent is selected, it returns only the parent without children\\n\\n","description":"<p>Returns the selected regulations from the tree in array\\nWhen a parent is selected, it returns only the parent without children</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1977,"end":1981,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"tree"},"type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"pos":1971,"end":1976,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>that contains selected and unselected regulations</p>\\n"},{"tagName":{"pos":2040,"end":2047,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"getSelectedRegulationsFromTree","args":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiRegulationShort[]","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mapRegulationsToTree","args":[{"name":"regulationsTree","type":"IUiRegulationsTree","deprecated":false,"deprecationMessage":""},{"name":"regulations","type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"IUiTreeData","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMaps the regulations to the tree<IUiTreeData>\\n\\n","description":"<p>Maps the regulations to the tree<IUiTreeData></p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1387,"end":1402,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"regulationsTree"},"type":"IUiRegulationsTree","deprecated":false,"deprecationMessage":"","tagName":{"pos":1381,"end":1386,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>that contains all the regulations</p>\\n"},{"name":{"pos":1451,"end":1462,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"regulations"},"type":"IUiRegulationShort[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"pos":1445,"end":1450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>assigned to the contact-role</p>\\n"},{"tagName":{"pos":1500,"end":1507,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient, HttpParams } from \'@angular/common/http\';\\n// Rxjs\\nimport { Observable } from \'rxjs\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n// Interfaces\\nimport { IUiRegulationLeaf, IUiRegulationShort, IUiRegulationsTree } from \'../interfaces\';\\nimport { IUiTreeData, IUiTreeNode } from \'../components/tree-view/interfaces\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiRegulationService {\\n    private _endpoint: string;\\n    private readonly _apiUrl = \'api/regulations\';\\n\\n    constructor(private _configurationService: UiConfigurationService, private _httpClient: HttpClient) {\\n        this._endpoint = `${this._configurationService.appConfig.partyApi}${this._apiUrl}`;\\n    }\\n\\n    /**\\n     * Gets the regulations tree\\n     *\\n     * @param includeStandalone include regulations that are not assigned to any program\\n     * @returns\\n     */\\n    public getRegulationsTree(includeStandalone = false): Observable<IUiRegulationsTree> {\\n        let params = new HttpParams();\\n        params = includeStandalone ? params.set(\'includeStandalone\', includeStandalone) : params;\\n\\n        return this._httpClient.get<IUiRegulationsTree>(`${this._endpoint}/tree`, { params });\\n    }\\n\\n    /**\\n     * Maps the regulations to the tree<IUiTreeData>\\n     *\\n     * @param regulationsTree that contains all the regulations\\n     * @param regulations assigned to the contact-role\\n     * @returns\\n     */\\n    public mapRegulationsToTree(regulationsTree: IUiRegulationsTree, regulations: IUiRegulationShort[] = []): IUiTreeData {\\n        const convertedTree: IUiTreeData = {\\n            root: this.generateUiTreeNode(regulationsTree, regulations),\\n        };\\n\\n        return convertedTree;\\n    }\\n\\n    /**\\n     * Returns the selected regulations from the tree in array\\n     * When a parent is selected, it returns only the parent without children\\n     *\\n     * @param tree that contains selected and unselected regulations\\n     * @returns\\n     */\\n    public getSelectedRegulations(tree: IUiTreeData): IUiRegulationShort[] {\\n        return this.getSelectedRegulationsFromTree(tree.root);\\n    }\\n\\n    private generateUiTreeNode(node: IUiRegulationLeaf, regulations: IUiRegulationShort[], parentChecked = false): IUiTreeNode {\\n        const convertedNode: IUiTreeNode = {\\n            id: node.regulation.regulationGuid,\\n            label: node.regulation.regulationName,\\n            checked: parentChecked || regulations.some((reg) => reg.regulationGuid === node.regulation.regulationGuid),\\n            data: node.regulation,\\n            children: [],\\n        };\\n\\n        if (node.children) {\\n            convertedNode.children = node.children.map((child) => this.generateUiTreeNode(child, regulations, convertedNode.checked));\\n\\n            convertedNode.indeterminate = this.getIndeterminateState(convertedNode.children, convertedNode.checked);\\n        }\\n\\n        return convertedNode;\\n    }\\n\\n    private getIndeterminateState(children: IUiTreeNode[], nodeChecked: boolean): boolean {\\n        const hasIndeterminateChild = children.some((child: IUiTreeNode) => child.indeterminate === true);\\n\\n        return hasIndeterminateChild || !children.every((child: IUiTreeNode) => !!child.checked === nodeChecked);\\n    }\\n\\n    private getSelectedRegulationsFromTree(node: IUiTreeNode): IUiRegulationShort[] {\\n        if (!node) {\\n            return [];\\n        }\\n\\n        let selectedRegulations: IUiRegulationShort[] = [];\\n        if (node.checked) {\\n            selectedRegulations.push(node.data);\\n        }\\n\\n        if (!node.checked && node.children) {\\n            for (const child of node.children) {\\n                const childSelectedRegulations = this.getSelectedRegulationsFromTree(child);\\n                selectedRegulations = selectedRegulations.concat(childSelectedRegulations);\\n            }\\n        }\\n\\n        return selectedRegulations;\\n    }\\n\\n    private generateRegulationsTreeNode(node: IUiTreeNode): IUiRegulationLeaf {\\n        if (!(node.checked || node.indeterminate)) {\\n            return;\\n        }\\n\\n        const convertedNode: IUiRegulationLeaf = {\\n            regulation: node.data,\\n            selected: node.checked,\\n        };\\n\\n        if (node.children) {\\n            const selectedChildren = node.children.map((child) => this.generateRegulationsTreeNode(child)).filter((child) => child);\\n            if (selectedChildren?.length) {\\n                convertedNode.children = selectedChildren;\\n            }\\n        }\\n\\n        return convertedNode;\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiRemoteCommunicationService","id":"injectable-UiRemoteCommunicationService-9b852e8743a918eb2de9bbc16fd97a20c2897c3b71836542198902cb4f7c4a7de845092d5b102f874f37d4d56e9a0af61fb382343d3cfa14bbe61c2d70fbf25b","file":"libs/ui/src/lib/services/communication/remote-communication/remote-communication.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiRemoteCommunicationService {\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiSearchService","id":"injectable-UiSearchService-fe92838e2c35d527f5cf67ff5a6ca058f60481fe3454c47967bb4758d75cd949dd58bcc1afb9e9ab9a12a70724d3289d47618932fa6833ef0444d34193d7a7c2","file":"libs/ui/src/lib/modules/global-search/services/global-search.service.ts","properties":[{"name":"_apiUrl","defaultValue":"\'api/company-search\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[121,144]},{"name":"_endpoint","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[121]},{"name":"_focusGlobalSearch$","defaultValue":"new BehaviorSubject(null)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<void>","optional":false,"description":"","line":17,"modifierKind":[121]},{"name":"_minSearchSymbols","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":20,"modifierKind":[121,144]},{"name":"_searchTerm$","defaultValue":"new BehaviorSubject(\'\')","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<string>","optional":false,"description":"","line":16,"modifierKind":[121]}],"methods":[{"name":"focusGlobalSearchInput","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPut the focus on UiGlobalSearchComponent\\n","description":"<p>Put the focus on UiGlobalSearchComponent</p>\\n","modifierKind":[123]},{"name":"getCompaniesBySearchTerm","args":[{"name":"searchTerm","type":"string","deprecated":false,"deprecationMessage":""},{"name":"pageSize","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"5"},{"name":"pageNumber","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"1"}],"optional":false,"returnType":"Observable<IUiCompanySearchResponse>","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets companies from the Back End based on search term\\n\\n","description":"<p>Gets companies from the Back End based on search term</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1474,"end":1484,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"searchTerm"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1468,"end":1473,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":1499,"end":1507,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"pageSize"},"type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"5","tagName":{"pos":1493,"end":1498,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":1522,"end":1532,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"pageNumber"},"type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"1","tagName":{"pos":1516,"end":1521,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"setSearchTerm","args":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the search term\\n\\n","description":"<p>Sets the search term</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1285,"end":1289,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"term"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1279,"end":1284,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpParams } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n// Rxjs\\nimport { BehaviorSubject, Observable, of } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\n// interfaces\\nimport { IUiCompanySearchResponse } from \'@lib/modules/global-search/interfaces\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiSearchService {\\n    private _searchTerm$: BehaviorSubject<string> = new BehaviorSubject(\'\');\\n    private _focusGlobalSearch$: BehaviorSubject<void> = new BehaviorSubject(null);\\n    private _endpoint: string;\\n    private readonly _apiUrl = \'api/company-search\';\\n    private readonly _minSearchSymbols = 2;\\n\\n    public get searchTerm$(): Observable<string> {\\n        return this._searchTerm$.asObservable();\\n    }\\n\\n    public get focusGlobalSearch$(): Observable<void> {\\n        return this._focusGlobalSearch$.asObservable();\\n    }\\n\\n    constructor(private _configurationService: UiConfigurationService, private _httpClient: HttpClient) {\\n        this._endpoint = `${this._configurationService.appConfig.supplierExperienceApi}/${this._apiUrl}`;\\n    }\\n\\n    /**\\n     * Sets the search term\\n     *\\n     * @param term\\n     */\\n    public setSearchTerm(term: string) {\\n        this._searchTerm$.next(term);\\n    }\\n\\n    /**\\n     * Gets companies from the Back End based on search term\\n     *\\n     * @param searchTerm\\n     * @param pageSize\\n     * @param pageNumber\\n     */\\n    public getCompaniesBySearchTerm(searchTerm: string, pageSize = 5, pageNumber = 1): Observable<IUiCompanySearchResponse> {\\n        if (searchTerm === \'\' || searchTerm.length < this._minSearchSymbols) {\\n            return of({\\n                totalCount: 0,\\n                companySearchResult: [],\\n            } as IUiCompanySearchResponse);\\n        }\\n\\n        let params = new HttpParams().set(\'searchTerm\', searchTerm);\\n        params = pageSize ? params.set(\'pageSize\', pageSize.toString()) : params;\\n        params = pageNumber ? params.set(\'pageNumber\', pageNumber.toString()) : params;\\n\\n        return this._httpClient.get(this._endpoint, { params }).pipe(\\n            map((res: IUiCompanySearchResponse) => {\\n                return res;\\n            })\\n        );\\n    }\\n\\n    /**\\n     * Put the focus on UiGlobalSearchComponent\\n     */\\n    public focusGlobalSearchInput() {\\n        this._focusGlobalSearch$.next(null);\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"searchTerm$":{"name":"searchTerm$","getSignature":{"name":"searchTerm$","type":"","returnType":"Observable<string>","line":22}},"focusGlobalSearch$":{"name":"focusGlobalSearch$","getSignature":{"name":"focusGlobalSearch$","type":"","returnType":"Observable<void>","line":26}}},"type":"injectable"},{"name":"UiSessionService","id":"injectable-UiSessionService-9418d08e4169d996f8d5724ae0f2140ed35eae47dbbc209b76d8d49ae9a1d84274ffd76c1b8fee4f59be2ba907170d1b1eec40e94f1f435ed87db5942c0ad27d","file":"libs/ui/src/lib/services/storage/session/session.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiSessionService {\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiSocketCommunicationService","id":"injectable-UiSocketCommunicationService-963511f35d5e162d3b0c59d49bd0e0e13d5a9d117f29e3d0adc62d884034ddbc4347f4f3b4b5654d25b66843674d25e1b2664345bb272b1332b696900b01c253","file":"libs/ui/src/lib/services/communication/socket-communication/socket-communication.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiSocketCommunicationService {\\n    constructor() {}\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"type":"injectable"},{"name":"UiTestService","id":"injectable-UiTestService-63ee5e5d36bbc6faad018837997034f9ff05fc97300cad676229d7046202eb5328ed95db8a4ad59c2cdcc9ef5c7d3945e9f7d2e415d23347e08a4f8387480cae","file":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","properties":[],"methods":[{"name":"getActions","args":[{"name":"params","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpResponse<>>","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getCallRecords","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSupplierRowCount","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getUsers","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpResponse<>>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient, HttpHeaders, HttpResponse } from \'@angular/common/http\';\\nimport { Observable } from \'rxjs\';\\nimport { AcpMockingMethodsEnum } from \'@app/interceptors/mock-data.interceptor\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiTestService {\\n    constructor(private _http: HttpClient) {}\\n\\n    public getCallRecords(params: any) {\\n        return this._http.get(\\n            \'http://localhost:3000/callRecords?index=\' + params,\\n            { observe: \'response\' }\\n        );\\n    }\\n\\n    public getUsers(params: any): Observable<HttpResponse<unknown>> {\\n\\n        let str = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\n\\n        if (params.request.sortModel.length !== 0) {\\n            str = str + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\n        }\\n\\n        const keys = Object.keys(params.request.filterModel);\\n        if (keys.length > 0) {\\n            if (str.length > 0) {\\n                str = str + \'&\';\\n            } else {\\n                str = \'?\';\\n            }\\n            for (let i = 0; i < keys.length; i++) {\\n                str = str + keys[i] + \'_like=\' + params.request.filterModel[keys[i]].filter + \'&\';\\n            }\\n        }\\n\\n        return this._http.get(\'http://localhost:3000/test\' + str, { observe: \'response\' });\\n    }\\n\\n    public getActions(params): Observable<HttpResponse<unknown>> {\\n        const mockData = true;\\n\\n        // Prepare call parameters string\\n        let paramsStr = \'?_start=\' + params.request.startRow + \'&_end=\' + params.request.endRow;\\n\\n        if (params.request.sortModel.length !== 0) {\\n            paramsStr = paramsStr + \'&_sort=\' + params.request.sortModel[0].colId + \'&_order=\' + params.request.sortModel[0].sort;\\n        }\\n\\n        const keys = Object.keys(params.request.filterModel);\\n        if (keys.length > 0) {\\n            if (paramsStr.length > 0) {\\n                paramsStr = paramsStr + \'&\';\\n            } else {\\n                paramsStr = \'?\';\\n            }\\n            for (let i = 0; i < keys.length; i++) {\\n                paramsStr = paramsStr + keys[i] + \'_\' + params.request.filterModel[keys[i]].type + \'=\'\\n                    + params.request.filterModel[keys[i]].filter;\\n\\n                if(i < keys.length - 1){\\n                    paramsStr = paramsStr + \'&\';\\n                }\\n            }\\n        }\\n\\n        if(mockData === true){\\n            // If you want to use mocking method, set this header with the name of the mocking method.\\n            // JSN Note: This is a start for mocking mechanism. Will require extension.\\n            // const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_GET_ACTIONS);\\n            const headers: HttpHeaders = new HttpHeaders().set(\'mocking\', AcpMockingMethodsEnum.DEVELOPER_HUB_POST_ACTIONS);\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\n            // return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr,\\n            //  { headers, observe: \'response\' } ); // Use Mocking Data\\n            return this._http.post(\\n                \'http://localhost:3000/getSuppliers\',\\n                params.request, { headers, observe: \'response\' }\\n            ); // Use Mocking Data\\n\\n        }\\n        else{\\n            // Need to run cmd: \\"npm run mock\\" to start the local mocking server\\n            return this._http.get(\'http://localhost:3000/getSuppliers\' + paramsStr, { observe: \'response\' } ); // Use Endpoint Data\\n        }\\n    }\\n\\n    public getSupplierRowCount() {\\n        return this._http.get(\\n            \'http://localhost:3000/posts\',\\n        );\\n    }\\n}\\n\\nexport interface IUiOldGridPayload {\\n    page: {\\n        offset: number;\\n        limit: number;\\n    };\\n    sort: {\\n        field: string;\\n        direction: string;\\n    };\\n    gridFilters: {\\n        isArchived: number;\\n        name: string;\\n        supplierNumber: string;\\n        supplierType: number;\\n        isFlagged: string;\\n    };\\n    moduleFilters: [];\\n    classificationFilters: [];\\n    customFieldFilters: [];\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"_http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"UiToastService","id":"injectable-UiToastService-8dd1d8a3dcd6e3142e67142577f3e08e02ea054dbecb7874c43d0be309758a6d6b4d0af800335508595bad917c16389760f572e282a6f9e2259fe92259e7f39b","file":"libs/ui/src/lib/services/toast-notification/toast.service.ts","properties":[{"name":"_toastsSubject","defaultValue":"new BehaviorSubject([] as IUiToast[])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IUiToast[]>","optional":false,"description":"","line":17,"modifierKind":[121]}],"methods":[{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCloses all opened toasts\\n","description":"<p>Closes all opened toasts</p>\\n","modifierKind":[123]},{"name":"generateId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"remove","args":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves a given toast\\n","description":"<p>Removes a given toast</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"show","args":[{"name":"text","type":"string","deprecated":false,"deprecationMessage":""},{"name":"type","type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","defaultValue":"UiToastTypesEnum.info"},{"name":"options","type":"IUiToastOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}"},{"name":"toastId","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows a toast message\\n\\n","description":"<p>Shows a toast message</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":624,"end":628,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"text"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":618,"end":623,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>message text</p>\\n"},{"name":{"pos":656,"end":660,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","defaultValue":"UiToastTypesEnum.info","tagName":{"pos":650,"end":655,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>toast type</p>\\n"},{"name":{"pos":686,"end":693,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"IUiToastOptions","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"pos":680,"end":685,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>additional configurations</p>\\n"},{"name":{"pos":734,"end":741,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"toastId"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":728,"end":733,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>way to provide a custom id</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, TemplateRef } from \'@angular/core\';\\n// RxJs\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { take } from \'rxjs/operators\';\\n// Interfaces\\nimport { IUiToast, IUiToastOptions } from \'./interfaces\';\\n// Enums\\nimport { UiToastTypesEnum } from \'./enums\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiToastService {\\n    public get toasts$(): Observable<IUiToast[]> {\\n        return this._toastsSubject.asObservable();\\n    }\\n\\n    private _toastsSubject: BehaviorSubject<IUiToast[]> = new BehaviorSubject([] as IUiToast[]);\\n\\n    /**\\n     * Shows a toast message\\n     *\\n     * @param text message text\\n     * @param type toast type\\n     * @param options additional configurations\\n     * @param toastId way to provide a custom id\\n     */\\n    public show(text: string, type: UiToastTypesEnum = UiToastTypesEnum.info, options: IUiToastOptions = {}, toastId?: string) {\\n        const id = toastId || this.generateId();\\n        const temp = { id, text, type, options };\\n        this._toastsSubject.pipe(take(1)).subscribe((toasts: IUiToast[]) => {\\n            toasts.push(temp);\\n            this._toastsSubject.next(toasts);\\n        });\\n    }\\n\\n    /**\\n     * Removes a given toast\\n     */\\n    public remove(toast: IUiToast) {\\n        this._toastsSubject.pipe(take(1)).subscribe((toasts: IUiToast[]) => {\\n            this._toastsSubject.next(toasts.filter((t: IUiToast) => t.id !== toast.id));\\n        });\\n    }\\n\\n    /**\\n     * Closes all opened toasts\\n     */\\n    public clear() {\\n        this._toastsSubject.next([]);\\n    }\\n\\n    private generateId(): string {\\n        return new Date().getTime().toString();\\n    }\\n}\\n","accessors":{"toasts$":{"name":"toasts$","getSignature":{"name":"toasts$","type":"","returnType":"Observable<IUiToast[]>","line":13}}},"type":"injectable"},{"name":"UiUserService","id":"injectable-UiUserService-adc6f69eb4b39250446ac2db357978bd5e459de62eedfeea933b47011c07073d513f87600434ce1ad66ecadc66aeab69e47564be6e1060be998ab2c3f5073ef1","file":"libs/ui/src/lib/services/user/user.service.ts","properties":[{"name":"_acpPermissionsSubject","defaultValue":"new BehaviorSubject<IUiPermissions>(new UiPermissionsModel())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[121]},{"name":"_acpUsersPath","defaultValue":"\'acp/users/\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35,"modifierKind":[121,144]},{"name":"_authenticatedUserSubject","defaultValue":"new BehaviorSubject<any>({})","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[121]},{"name":"_getUserPreference_auth0","defaultValue":"\'UserPreference/v2/get\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":37,"modifierKind":[121,144]},{"name":"_getUserPreference_cognito","defaultValue":"\'UserPreference/get\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36,"modifierKind":[121,144]},{"name":"_setUserPreference_auth0","defaultValue":"\'UserPreference/v2/update\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39,"modifierKind":[121,144]},{"name":"_setUserPreference_cognito","defaultValue":"\'UserPreference/update\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38,"modifierKind":[121,144]},{"name":"acpPermissions$","defaultValue":"this._acpPermissionsSubject.asObservable().pipe(distinctUntilChanged())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"authenticatedUser$","defaultValue":"this._authenticatedUserSubject.asObservable().pipe(distinctUntilChanged())","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"selectedLanguage","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[123]}],"methods":[{"name":"hasPermission","args":[{"name":"requiredPermissions","type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the authenticated user has at least one of the permissions\\nIf permissions are empty array the method returns true\\n\\n","description":"<p>Checks if the authenticated user has at least one of the permissions\\nIf permissions are empty array the method returns true</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7254,"end":7273,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"requiredPermissions"},"type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":7248,"end":7253,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>list of required permissions</p>\\n"},{"tagName":{"pos":7311,"end":7318,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"isSupplierUser","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":178,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogouts the user and clear its credentials\\n","description":"<p>Logouts the user and clear its credentials</p>\\n","modifierKind":[123]},{"name":"savePreferredLanguage","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<object>","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectUser","args":[{"name":"email","type":"string","deprecated":false,"deprecationMessage":""},{"name":"permissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSelects user details and permissions\\n\\n","description":"<p>Selects user details and permissions</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2210,"end":2215,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"email"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2204,"end":2209,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>user email</p>\\n"},{"name":{"pos":2241,"end":2252,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"permissions"},"type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"pos":2235,"end":2240,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>permissions from jwt token</p>\\n"}]},{"name":"setAcpPermissions","args":[{"name":"permissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"permissions","type":"IUiPermissions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\n// RxJS\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { distinctUntilChanged, map, take } from \'rxjs/operators\';\\n// Ngx Translate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiPendoService } from \'@lib/services/analytics/pendo/pendo.service\';\\n// Interfaces\\nimport { IUiPermissions, IUiUser } from \'./interfaces\';\\n// Models\\nimport { UiPermissionsModel } from \'./models/permissions.model\';\\n// Enums\\nimport { UiPermissionsEnum, UiTokenKeyPermissionsEnum } from \'./enums\';\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\nimport { AcpLanguageCodeSwitchEnum, AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\nimport { IUiUserPreferences } from \'./interfaces/user.preferences.interface\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiUserService {\\n    private _authenticatedUserSubject = new BehaviorSubject<any>({});\\n    private _acpPermissionsSubject = new BehaviorSubject<IUiPermissions>(new UiPermissionsModel());\\n\\n    /* eslint-disable @typescript-eslint/member-ordering */\\n    public authenticatedUser$ = this._authenticatedUserSubject.asObservable().pipe(distinctUntilChanged());\\n    public acpPermissions$ = this._acpPermissionsSubject.asObservable().pipe(distinctUntilChanged());\\n    public selectedLanguage: string;\\n    /* eslint-disable @typescript-eslint/member-ordering */\\n\\n    private readonly _acpUsersPath = \'acp/users/\';\\n    private readonly _getUserPreference_cognito = \'UserPreference/get\';\\n    private readonly _getUserPreference_auth0 = \'UserPreference/v2/get\';\\n    private readonly _setUserPreference_cognito = \'UserPreference/update\';\\n    private readonly _setUserPreference_auth0 = \'UserPreference/v2/update\';\\n\\n    constructor(\\n        private _httpClient: HttpClient,\\n        private _configService: UiConfigurationService,\\n        private _pendoService: UiPendoService,\\n        private _translateService: TranslateService\\n    ) {}\\n\\n    /**\\n     * Selects user details and permissions\\n     *\\n     * @param email user email\\n     * @param permissions permissions from jwt token\\n     */\\n    public selectUser(email: string, permissions: IUiPermissions) {\\n        this.setAcpPermissions(permissions);\\n\\n        setTimeout(() => {\\n            this._httpClient.get(`${this._configService.appConfig.authApi}${this._acpUsersPath}${email}`).subscribe({\\n                next: (user: IUiUser) => {\\n                    // TODO: Should use the real avatar path\\n                    user.avatar = \'admin5.png\';\\n                    const currentEnv = this._configService.appConfig.environmentName;\\n\\n                    // Get user preferences ONLY if\\n                    // NOT localdev and\\n                    // NOT devopsprod and\\n                    // NOT devopssandbox\\n                    // since iamApi not running on those 3 environments.\\n                    if (\\n                        currentEnv !== UiEnvironmentNameEnum.localdev &&\\n                        currentEnv !== UiEnvironmentNameEnum.devopsprod &&\\n                        currentEnv !== UiEnvironmentNameEnum.devopssandbox\\n                    ) {\\n                        const endpoint =\\n                            `${this._configService.appConfig.iamApi}` +\\n                            (!this._configService.appConfig.authServiceVersion ||\\n                            this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                                ? this._getUserPreference_cognito\\n                                : this._getUserPreference_auth0);\\n\\n                        // Get user preferences for iamApi\\n                        this._httpClient\\n                            .get(endpoint)\\n                            .pipe(take(1))\\n                            .subscribe({\\n                                next: (response: IUiUserPreferences) => {\\n                                    if (response.preferences.length > 0) {\\n                                        this.selectedLanguage = response.preferences[0].value;\\n                                        this.selectedLanguage = this.selectedLanguage.toLowerCase();\\n                                    } else {\\n                                        const navigatorLanguageSmallCode = window.navigator.language.slice(0, 2);\\n                                        if (navigatorLanguageSmallCode in AcpLanguageCodeSwitchEnum) {\\n                                            this.selectedLanguage = navigatorLanguageSmallCode;\\n                                        } else {\\n                                            this.selectedLanguage = AcpSupportedLanguesLongCodeEnum.en;\\n                                        }\\n                                    }\\n                                    user.preferredLanguage = this.selectedLanguage;\\n                                    const lang2letter = AcpLanguageCodeSwitchEnum[this.selectedLanguage];\\n                                    this._translateService.use(lang2letter);\\n                                    this._authenticatedUserSubject.next(user);\\n                                },\\n                                error: (err) => {\\n                                    user.preferredLanguage = \'\';\\n                                    this._authenticatedUserSubject.next(user);\\n                                },\\n                            });\\n                    }\\n                    // Only for localdev, devopsprod, devopssandbox environment\\n                    else {\\n                        user.preferredLanguage = \'\';\\n                        this._authenticatedUserSubject.next(user);\\n                    }\\n                },\\n                error: (err) => {\\n                    // eslint-disable-next-line no-restricted-syntax\\n                    console.error(\'Pendo NOT initialized properly!!!\');\\n                    console.error(err);\\n                },\\n            });\\n        }, 250);\\n    }\\n\\n    public savePreferredLanguage(code: string): Observable<object> {\\n        const capLongCode = code[0].toUpperCase() + code.slice(1); // Capitalizing first letter\\n\\n        const body = {\\n            Preferences: {\\n                Language: [capLongCode],\\n            },\\n        };\\n\\n        const endpoint =\\n            `${this._configService.appConfig.iamApi}` +\\n            (!this._configService.appConfig.authServiceVersion || this._configService.appConfig.authServiceVersion !== \'auth0\'\\n                ? this._setUserPreference_cognito\\n                : this._setUserPreference_auth0);\\n\\n        return this._httpClient.post(endpoint, body);\\n    }\\n\\n    /**\\n     * Logouts the user and clear its credentials\\n     */\\n    public logout() {\\n        if (this._configService.appConfig.enablePendoAcpUi) {\\n            this._pendoService.anonymizeVisitorInfo();\\n        }\\n        this._authenticatedUserSubject.next(null);\\n        this._acpPermissionsSubject.next(new UiPermissionsModel());\\n    }\\n\\n    /**\\n     * Checks if the authenticated user has at least one of the permissions\\n     * If permissions are empty array the method returns true\\n     *\\n     * @param requiredPermissions list of required permissions\\n     * @returns\\n     */\\n    public hasPermission(requiredPermissions: UiPermissionsEnum[]): Observable<boolean> {\\n        return this.acpPermissions$.pipe(\\n            map((permissions: IUiPermissions) => {\\n                if (!Array.isArray(requiredPermissions)) {\\n                    return false;\\n                }\\n\\n                if (requiredPermissions[0] === null || requiredPermissions.length === 0) {\\n                    return true;\\n                }\\n\\n                const flattenRequiredPermissions = requiredPermissions.reduce((a, b) => a.concat(b), []);\\n                return flattenRequiredPermissions.some((requiredPermission) => permissions[requiredPermission]);\\n            }),\\n            distinctUntilChanged()\\n        );\\n    }\\n\\n    public isSupplierUser(): Observable<boolean> {\\n        return this.acpPermissions$.pipe(\\n            map(\\n                (permissions: IUiPermissions) =>\\n                    permissions.viewAssignedCorrectiveActionRecords && !permissions.fullViewCorrectiveActionRecords\\n            )\\n        );\\n    }\\n\\n    private setAcpPermissions(permissions: IUiPermissions) {\\n        const acpPermissions = {\\n            userManagement: permissions[UiTokenKeyPermissionsEnum.userManagement] === \'true\',\\n            exceptionManagement: permissions[UiTokenKeyPermissionsEnum.exceptionManagement] === \'true\',\\n            segmentationReport: permissions[UiTokenKeyPermissionsEnum.segmentationReport] === \'true\',\\n            editCompanyProfile: permissions[UiTokenKeyPermissionsEnum.editCompanyProfile] === \'true\',\\n            viewCompanyProfile: permissions[UiTokenKeyPermissionsEnum.viewCompanyProfile] === \'true\',\\n            viewContactManagement: permissions[UiTokenKeyPermissionsEnum.viewContactManagement] === \'true\',\\n            editContactManagement: permissions[UiTokenKeyPermissionsEnum.editContactManagement] === \'true\',\\n            accessDeclarationSearch: permissions[UiTokenKeyPermissionsEnum.accessDeclarationSearch] === \'true\',\\n            accessTransactionLogs: permissions[UiTokenKeyPermissionsEnum.accessTransactionLogs] === \'true\',\\n            accessIndirectMonitoring: permissions[UiTokenKeyPermissionsEnum.accessIndirectMonitoring] === \'true\',\\n            viewIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.viewIndirectMonitoringRecords] === \'true\',\\n            addIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.addIndirectMonitoringRecords] === \'true\',\\n            editIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.editIndirectMonitoringRecords] === \'true\',\\n            deleteIndirectMonitoringRecords: permissions[UiTokenKeyPermissionsEnum.deleteIndirectMonitoringRecords] === \'true\',\\n            viewIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.viewIndirectMonitoringKeywordsList] === \'true\',\\n            addIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.addIndirectMonitoringKeywordsList] === \'true\',\\n            editIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.editIndirectMonitoringKeywordsList] === \'true\',\\n            deleteIndirectMonitoringKeywordsList: permissions[UiTokenKeyPermissionsEnum.deleteIndirectMonitoringKeywordsList] === \'true\',\\n            accessCorrectiveActions: permissions[UiTokenKeyPermissionsEnum.accessCorrectiveActions] === \'true\',\\n            fullViewCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.fullViewCorrectiveActionRecords] === \'true\',\\n            viewAssignedCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.viewAssignedCorrectiveActionRecords] === \'true\',\\n            addCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.addCorrectiveActionRecords] === \'true\',\\n            editCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.editCorrectiveActionRecords] === \'true\',\\n            deleteCorrectiveActionRecords: permissions[UiTokenKeyPermissionsEnum.deleteCorrectiveActionRecords] === \'true\',\\n            respondToCorrectiveActions: permissions[UiTokenKeyPermissionsEnum.respondToCorrectiveActions] === \'true\',\\n            manageCorrectiveActionTemplates: permissions[UiTokenKeyPermissionsEnum.manageCorrectiveActionTemplates] === \'true\',\\n            createCoreOrganization: permissions[UiTokenKeyPermissionsEnum.createCoreOrganization] === \'true\',\\n            viewNoMatchSuppliers: permissions[UiTokenKeyPermissionsEnum.viewNoMatchSuppliers] === \'true\',\\n            viewDraftOrganizations: permissions[UiTokenKeyPermissionsEnum.viewDraftOrganizations] === \'true\',\\n            viewNetworkDeclarations: permissions[UiTokenKeyPermissionsEnum.viewNetworkDeclarations] === \'true\',\\n            accessEvidenceReview: permissions[UiTokenKeyPermissionsEnum.accessEvidenceReview] === \'true\',\\n            modifyReview: permissions[UiTokenKeyPermissionsEnum.modifyReview] === \'true\',\\n            manageEvidenceType: permissions[UiTokenKeyPermissionsEnum.manageEvidenceType] === \'true\',\\n            manageReviewCriteria: permissions[UiTokenKeyPermissionsEnum.manageReviewCriteria] === \'true\',\\n            manageCorrectiveActionsRulesSet: permissions[UiTokenKeyPermissionsEnum.manageCorrectiveActionsRulesSet] === \'true\',\\n            viewEvidenceReview: permissions[UiTokenKeyPermissionsEnum.viewEvidenceReview] === \'true\',\\n            manageEvidenceTypeMapping: permissions[UiTokenKeyPermissionsEnum.manageEvidenceTypeMapping] === \'true\',\\n            accessCustomerRequests: permissions[UiTokenKeyPermissionsEnum.accessCustomerRequests] === \'true\',\\n            accessPartLevelCustomerRequests: permissions[UiTokenKeyPermissionsEnum.accessPartLevelCustomerRequests] === \'true\',\\n            aud: permissions.aud,\\n        };\\n\\n        this._acpPermissionsSubject.next(acpPermissions);\\n        if (this._configService.appConfig.enablePendoAcpUi) {\\n            this._pendoService.setAuthenticatedVisitorPermissions(acpPermissions);\\n        }\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":39,"jsdoctags":[{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"}],"guards":[{"name":"UiAcpEnvironmentGuard","id":"injectable-UiAcpEnvironmentGuard-8543013c471b6d1a22663fc690895b8b438553f52292c1daab10c21f899942a418c0ff6b75ace12b5d03a93489e8fb9408715d25df9ce5da67b9daecacda5a2d","file":"libs/ui/src/lib/modules/authentification/guards/environment.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Router, ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from \'@angular/router\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiAcpEnvironmentGuard implements CanActivate {\\n    constructor(private _router: Router, private _configurationService: UiConfigurationService,\\n        private _translateService: TranslateService,) {}\\n\\n    public canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): boolean {\\n        if(_route.data.environments !== undefined && _route.data.environments.includes(\\n            this._configurationService.appConfig.environmentName) as Array<string> ){\\n            return true;\\n        }\\n        this._router.navigate([\'/acp/error\']);\\n        return false;\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"guard"},{"name":"UiPermissionGuard","id":"injectable-UiPermissionGuard-0ce7d1292faab97513717f8c9719543b42a27242a39e08e2657eedb10561bea593380d88beef63c543f429b9dcce2bde58bf5b8c148e703fde9c57161211b014","file":"libs/ui/src/lib/modules/permissions/guards/permission.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"_route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \'@angular/router\';\\nimport { Observable, of } from \'rxjs\';\\nimport { tap, catchError } from \'rxjs/operators\';\\nimport { UiPermissionsEnum, UiUserService } from \'@lib/services/user\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class UiPermissionGuard implements CanActivate {\\n    constructor(private _router: Router, private _userService: UiUserService) {}\\n\\n    public canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): Observable<boolean> {\\n        return this._userService.hasPermission(_route.data.permissions as UiPermissionsEnum[]).pipe(\\n            tap((hasPermission: boolean) => {\\n                if (!hasPermission) {\\n                    this._router.navigate([\'/acp/dashboard\']);\\n                }\\n            }),\\n            catchError((error) => {\\n                console.error(\'Error in permission guard:\', error);\\n                return of(false);\\n            })\\n        );\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"guard"}],"interceptors":[{"name":"UiAuthInterceptor","id":"injectable-UiAuthInterceptor-064444c339655501649b1f5f63803eb2321fa49a7b602bbbb97b97704abc9101064e49bf2ef23a1463ee46d23a96b01d1a52da8d9d131ca06916ae9dfb395f28","file":"libs/ui/src/lib/modules/authentification/auth0/interceptors/auth.interceptor.ts","properties":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":13,"modifierKind":[121,144]}],"methods":[{"name":"intercept","args":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":""},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpEvent<any>>","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \'@angular/common/http\';\\nimport { Observable, firstValueFrom, from } from \'rxjs\';\\nimport { switchMap, take } from \'rxjs/operators\';\\nimport { UiAuthService } from \'../services/auth.service\';\\nimport { Injectable } from \'@angular/core\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { IUiAuth0Config } from \'../auth0-config\';\\n\\n@Injectable({\\n    providedIn: \'root\',\\n})\\nexport class UiAuthInterceptor implements HttpInterceptor {\\n    private readonly _config: IUiAuth0Config;\\n\\n    constructor(private readonly _authService: UiAuthService, private readonly _configurationService: UiConfigurationService) {\\n        this._config = this._configurationService.getConfig(\'auth0\') as IUiAuth0Config;\\n    }\\n\\n    public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\\n        // Check if any audience in the audienceList matches the request.url\\n        if (!request.url.includes(\'/api/\')) {\\n            return next.handle(request);\\n        }\\n\\n        // Check if the request is for an audience that requires a token\\n        const matchingAudience = this._authService.getAudienceFromPath(request.url);\\n        if (matchingAudience) {\\n            // Get the token\\n            return this._authService\\n                .getToken(matchingAudience)\\n                .pipe(\\n                    take(1),\\n                    switchMap((token) => {\\n                        // eslint-disable-next-line max-len\\n                        const claims = `user_guid=${this._authService.userGuid};root_org_guid=${this._authService.rootOrgGuid};active_org_guid=${this._authService.activeOrgGuid}`;\\n                        const clonedRequest = request.clone({\\n                            setHeaders: {\\n                                \'X-Assent-Claims\': claims,\\n                                // eslint-disable-next-line quote-props\\n                                Authorization: `Bearer ${token}`,\\n                                /* eslint-disable-next-line @typescript-eslint/naming-convention  */\\n                                \'Portal-Host\': window.location.host,\\n                                /* eslint-disable-next-line @typescript-eslint/naming-convention */\\n                            },\\n                        });\\n                        return next.handle(clonedRequest);\\n                    })\\n                );\\n        }\\n\\n        return next.handle(request);\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"interceptor"}],"classes":[{"name":"UiAcpUserSession","id":"class-UiAcpUserSession-62cb6a4ca48a8fef548b6425acc119df178df508d928d3c8cb55870747682bc094377f214ee3ab221237e8d1666901c33acf61fefb43270a5c6dd47e669a3dd9","file":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Inject, inject } from \'@angular/core\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { CookieService } from \'ngx-cookie-service\';\\n\\nexport class UiAcpUserSessionItem {\\n    public sessionKey: string;\\n    public name: string;\\n    public value: string;\\n    public isCurrent: boolean;\\n    public lastActivity: string;\\n    public uniqueSessionGuid: string;\\n\\n    constructor(sessionKey: string, name: string, value: string, isCurrent: boolean, lastActivity: string, uniqueSessionGuid: string) {\\n        this.sessionKey = sessionKey;\\n        this.name = name;\\n        this.value = value;\\n        this.isCurrent = isCurrent;\\n        this.lastActivity = lastActivity;\\n        this.uniqueSessionGuid = uniqueSessionGuid;\\n    }\\n}\\n\\nexport class UiAcpUserSession {\\n    public browser: string;\\n    public IP: string;\\n    public OS: string;\\n    public isCurrent: boolean;\\n    public lastActivity: string;\\n\\n    constructor(\\n        browser: string,\\n        IP: string,\\n        OS: string,\\n        isCurrent: boolean,\\n        lastActivity: string) {\\n        this.browser = browser;\\n        this.IP = IP;\\n        this.OS = OS;\\n        this.isCurrent = isCurrent;\\n        this.lastActivity = lastActivity;\\n    }\\n\\n    // #region Public Methods\\n    // -----------------------------------------------------------------------------------------------------\\n    // Transform AcpUserSessionItem[] to AcpUserSession\\n    public static fromAcpUserSessionItems(items: UiAcpUserSessionItem[], currentUniqueSessionGuid: string): UiAcpUserSession {\\n        const transformed: UiAcpUserSession = new UiAcpUserSession(\'\', \'\', \'\', false, \'\');\\n\\n        items.forEach((item) => {\\n            switch (item.name) {\\n                case \'Browser\':\\n                    transformed.browser = item.value;\\n                    break;\\n                case \'IP\':\\n                    transformed.IP = item.value;\\n                    break;\\n                case \'OS\':\\n                    transformed.OS = item.value;\\n                    break;\\n                case \'LastActivity\':\\n                    const lastActivityDateString = new Date(item.value).toString();\\n                    const splittedDate = lastActivityDateString.split(\' \');\\n                    if(splittedDate[2].startsWith(\'0\')) {\\n                        splittedDate[2] = splittedDate[2].substring(1);\\n                    }\\n                    transformed.lastActivity = splittedDate.slice(1, 3).toString().replace(\',\', \' \');\\n                    break;\\n                default:\\n                    break;\\n            }\\n            transformed.isCurrent = item.uniqueSessionGuid === currentUniqueSessionGuid;\\n        });\\n        return transformed;\\n    }\\n    // #endregion Public Methods\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"browser","type":"string","deprecated":false,"deprecationMessage":""},{"name":"IP","type":"string","deprecated":false,"deprecationMessage":""},{"name":"OS","type":"string","deprecated":false,"deprecationMessage":""},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":""}],"line":29,"jsdoctags":[{"name":"browser","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"IP","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"OS","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"browser","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"IP","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"isCurrent","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"lastActivity","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"OS","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27,"modifierKind":[123]}],"methods":[{"name":"fromAcpUserSessionItems","args":[{"name":"items","type":"UiAcpUserSessionItem[]","deprecated":false,"deprecationMessage":""},{"name":"currentUniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"UiAcpUserSession","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"items","type":"UiAcpUserSessionItem[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"currentUniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiAcpUserSessionItem","id":"class-UiAcpUserSessionItem-62cb6a4ca48a8fef548b6425acc119df178df508d928d3c8cb55870747682bc094377f214ee3ab221237e8d1666901c33acf61fefb43270a5c6dd47e669a3dd9","file":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Inject, inject } from \'@angular/core\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { CookieService } from \'ngx-cookie-service\';\\n\\nexport class UiAcpUserSessionItem {\\n    public sessionKey: string;\\n    public name: string;\\n    public value: string;\\n    public isCurrent: boolean;\\n    public lastActivity: string;\\n    public uniqueSessionGuid: string;\\n\\n    constructor(sessionKey: string, name: string, value: string, isCurrent: boolean, lastActivity: string, uniqueSessionGuid: string) {\\n        this.sessionKey = sessionKey;\\n        this.name = name;\\n        this.value = value;\\n        this.isCurrent = isCurrent;\\n        this.lastActivity = lastActivity;\\n        this.uniqueSessionGuid = uniqueSessionGuid;\\n    }\\n}\\n\\nexport class UiAcpUserSession {\\n    public browser: string;\\n    public IP: string;\\n    public OS: string;\\n    public isCurrent: boolean;\\n    public lastActivity: string;\\n\\n    constructor(\\n        browser: string,\\n        IP: string,\\n        OS: string,\\n        isCurrent: boolean,\\n        lastActivity: string) {\\n        this.browser = browser;\\n        this.IP = IP;\\n        this.OS = OS;\\n        this.isCurrent = isCurrent;\\n        this.lastActivity = lastActivity;\\n    }\\n\\n    // #region Public Methods\\n    // -----------------------------------------------------------------------------------------------------\\n    // Transform AcpUserSessionItem[] to AcpUserSession\\n    public static fromAcpUserSessionItems(items: UiAcpUserSessionItem[], currentUniqueSessionGuid: string): UiAcpUserSession {\\n        const transformed: UiAcpUserSession = new UiAcpUserSession(\'\', \'\', \'\', false, \'\');\\n\\n        items.forEach((item) => {\\n            switch (item.name) {\\n                case \'Browser\':\\n                    transformed.browser = item.value;\\n                    break;\\n                case \'IP\':\\n                    transformed.IP = item.value;\\n                    break;\\n                case \'OS\':\\n                    transformed.OS = item.value;\\n                    break;\\n                case \'LastActivity\':\\n                    const lastActivityDateString = new Date(item.value).toString();\\n                    const splittedDate = lastActivityDateString.split(\' \');\\n                    if(splittedDate[2].startsWith(\'0\')) {\\n                        splittedDate[2] = splittedDate[2].substring(1);\\n                    }\\n                    transformed.lastActivity = splittedDate.slice(1, 3).toString().replace(\',\', \' \');\\n                    break;\\n                default:\\n                    break;\\n            }\\n            transformed.isCurrent = item.uniqueSessionGuid === currentUniqueSessionGuid;\\n        });\\n        return transformed;\\n    }\\n    // #endregion Public Methods\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":""},{"name":"name","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string","deprecated":false,"deprecationMessage":""},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":""},{"name":"uniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"sessionKey","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isCurrent","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"lastActivity","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"uniqueSessionGuid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"isCurrent","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10,"modifierKind":[123]},{"name":"lastActivity","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"sessionKey","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"uniqueSessionGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiButtonObject","id":"class-UiButtonObject-b61d0265c03529a4f65571b0f01c7f44009919cc14b8404d1961f0a025101a5df300f4e5597f5a0abf2ca2e7032792941b1b86b9ea730a1431a312b5da695e68","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/buttonObject.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiButtonObject {\\n    public selected = false;\\n\\n    public onClick = (e) => {};\\n    public handleChange = (e) => {};\\n}\\n","properties":[{"name":"handleChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"onClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":2,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiButtonObject","id":"class-UiButtonObject-b61d0265c03529a4f65571b0f01c7f44009919cc14b8404d1961f0a025101a5df300f4e5597f5a0abf2ca2e7032792941b1b86b9ea730a1431a312b5da695e68-1","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/buttonObject.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiButtonObject {\\n    public selected = false;\\n\\n    public onClick = (e) => {};\\n    public handleChange = (e) => {};\\n}\\n","properties":[{"name":"handleChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"onClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":2,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiButtonObject-1"},{"name":"UiDocumentModel","id":"class-UiDocumentModel-bd59d424f224f380cf02fa761a6440cacf64077b3af3611c1be62bb26be2ef46adf79e6b47c9d9045a6611cea92edaab0907f6f927389fcb7c6712edfb1215d7","file":"libs/ui/src/lib/modules/file-upload/components/models/document.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiDocumentModel {\\n    public fileName: string;\\n    public mimeType: string;\\n    public fileExt: string;\\n    public uniqueFileName: string;\\n    public s3Key: string;\\n    public bucket: string;\\n}\\n","properties":[{"name":"bucket","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"fileExt","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"fileName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2,"modifierKind":[123]},{"name":"mimeType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3,"modifierKind":[123]},{"name":"s3Key","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6,"modifierKind":[123]},{"name":"uniqueFileName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFileItemModel","id":"class-UiFileItemModel-f74780c2f1a802b132230852ca8b5f1bc8857d6da9d4b6fb56e1ae1a3ad3a6512e2984858e3d6b25b7ebb8a88e09e134c91fe9280e14ca2238409c3e969ce60d","file":"libs/ui/src/lib/modules/file-upload/components/models/file-item.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class UiFileItemModel {\\n    public name: string;\\n    public mimeType: string;\\n    public fileExt: string;\\n    public index: string;\\n    public isLoading: boolean;\\n    public isFileScanning: boolean;\\n    public safe: boolean;\\n    public processed: boolean;\\n    public uploaded: boolean;\\n    public progress: number;\\n    public bucket: string;\\n    public scanResult: { scanResultClean: boolean; sTag: string; key: string };\\n    public typeRejected: string;\\n    public error: string;\\n    public message: string;\\n}\\n","properties":[{"name":"bucket","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"error","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"fileExt","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4,"modifierKind":[123]},{"name":"index","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"isFileScanning","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":6,"modifierKind":[123]},{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"mimeType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3,"modifierKind":[123]},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2,"modifierKind":[123]},{"name":"processed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9,"modifierKind":[123]},{"name":"progress","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"safe","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"scanResult","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"typeRejected","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"uploaded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFormControlConfig","id":"class-UiFormControlConfig-e3b59b3620caf1dd85b2f72ee0cec7d0b34f4fd54aedece956baca050ee1daf045115949f6a7458c0909c6c3137ea422e2a6cb291831d9b50d153ceabb1544d8","file":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { Subject } from \'rxjs\';\\n\\nexport class UiFormControlConfig {\\n    public formControlName? = \'\';\\n    public disabled? = false;\\n    public forceDisabled? = false;\\n    public label?: \'Test\'; // TODO: Is type supposed to be \'Test\'? Should it be string?\\n    public placeholder? = \'\';\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\n    public form?: any;\\n    public prefixIcon? = \'\';\\n    public suffixIcon? = \'\';\\n    public prefixText? = \'\';\\n    public suffixText? = \'\';\\n    public helpText? = \'\';\\n    public infoText? = \'\';\\n    public showHelpText? = true;\\n    public showSuccessValidation? = false;\\n    public showErrorValidation? = true;\\n    public showInfoIcon? = true;\\n    public patternErrorText? = \'patternErrorText\';\\n    public errorStrings? = {};\\n}\\n@Component({\\n    selector: \'ui-form-base\',\\n    templateUrl: \'./form-base.component.html\',\\n    styleUrls: [\'./form-base.component.scss\'],\\n})\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\n\\n    @Output() public formStatusChange = new EventEmitter<any>();\\n    @Output() public formClosed = new EventEmitter<any>();\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\n\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\n        this._editMode = value;\\n        if (this._editMode === true) {\\n            this.enableAllInputs();\\n        } else {\\n            this.disableAllInputs();\\n        }\\n    }\\n\\n    public get editMode(): boolean {\\n        return this._editMode;\\n    }\\n\\n    public form: FormGroup;\\n    public payload: any = {};\\n\\n    public modeChanged = false;\\n    public formControls: { [name: string]: { value: any; validators: Validators; config?: UiFormControlConfig } };\\n\\n    public showSuccessValidation = false;\\n    public showErrorValidation = true;\\n    public showHelpText = true;\\n    public showInfoIcon = true;\\n\\n    public Validators = Validators;\\n\\n    protected _ngUnsubscribe = new Subject();\\n\\n    private _initialValues;\\n    private _editMode = false;\\n\\n    constructor() {}\\n\\n    public ngOnInit(): void {}\\n\\n    public ngOnDestroy(): void {\\n        this._ngUnsubscribe.next(null);\\n        this._ngUnsubscribe.complete();\\n    }\\n\\n    public createForm(formControls: { [name: string]: { value: any; validators: any; config?: UiFormControlConfig } }) {\\n        this.form = new FormGroup({});\\n        for (const [key, value] of Object.entries(formControls)) {\\n            const newControl = new FormControl(value.value, { validators: value.validators });\\n            this.form.setControl(key, newControl);\\n        }\\n        this.editMode = false;\\n    }\\n\\n    public setValues(FormValues: any) {\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.form.controls[key].setValue(FormValues[key]);\\n        });\\n    }\\n\\n    public viewForm() {\\n        this.editMode = false;\\n    }\\n\\n    public editForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.editMode = true;\\n    }\\n\\n    public clearForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.form.reset();\\n        this.payload = {};\\n    }\\n\\n    public cancelForm() {\\n        this.form.reset(this._initialValues);\\n        this.payload = {};\\n        this.editMode = false;\\n    }\\n\\n    public closeForm() {\\n        this.editMode = false;\\n        this.formClosed.emit();\\n    }\\n\\n    public submitForm(): FormData {\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.payload[key] = this.form.controls[key].value;\\n        });\\n        this.editMode = false;\\n\\n        this.formSubmitted.emit(this.form.value);\\n\\n        return this.form.value;\\n    }\\n\\n    public onClearBtnClick() {\\n        this.clearForm();\\n    }\\n\\n    public onEditBtnClick() {\\n        this.editForm();\\n    }\\n\\n    public onCancelBtnClick() {\\n        this.cancelForm();\\n    }\\n\\n    public onCloseBtnClick() {\\n        this.closeForm();\\n    }\\n\\n    public onSaveBtnClick() {\\n        this.submitForm();\\n    }\\n\\n    public onFormOptionsChanged(e: { showInfoIcon: boolean; showHelpText: boolean }) {\\n        this.showInfoIcon = e.showInfoIcon;\\n        this.showHelpText = e.showHelpText;\\n    }\\n\\n    private disableAllInputs() {\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n                    this.form.controls[control].disable();\\n                }\\n            }\\n        }\\n    }\\n\\n    private enableAllInputs() {\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n                    // Enable only the form controls that don\'t have forceDisabled\\n                    if (this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined) {\\n                        if (this.formControls[control].config.forceDisabled === false) {\\n                            this.form.controls[control].enable();\\n                            this.form.controls[control].markAsUntouched();\\n                        }\\n                    } else {\\n                        this.form.controls[control].enable();\\n                        this.form.controls[control].markAsUntouched();\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n","properties":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":7,"modifierKind":[123]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":24,"modifierKind":[123]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":8,"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":12,"modifierKind":[123]},{"name":"formControlName","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":6,"modifierKind":[123]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":17,"modifierKind":[123]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":18,"modifierKind":[123]},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":9,"modifierKind":[123]},{"name":"patternErrorText","defaultValue":"\'patternErrorText\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":23,"modifierKind":[123]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10,"modifierKind":[123]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13,"modifierKind":[123]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":15,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":21,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":19,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":22,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":20,"modifierKind":[123]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":14,"modifierKind":[123]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16,"modifierKind":[123]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","type":"\\"text\\" | \\"email\\" | \\"password\\"","optional":true,"description":"","line":11,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFormControlConfigObsolete","id":"class-UiFormControlConfigObsolete-b403ca81140493c0ae0fa75942e60c5ee3d94d9e45c625463f46084ba1a0fc6f1869f456b51e3a1ac067fc5fab14f6b9247b0951a34905faf1e60f0fae7ae27f","file":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","deprecated":true,"deprecationMessage":": Use UiFormControlConfig from","type":"class","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { Subject } from \'rxjs\';\\n\\n/**\\n * @deprecated: Use UiFormControlConfig from @lib/modules/form/form-base/form-base.component.ts\\n */\\nexport class UiFormControlConfigObsolete {\\n    public formControlName? = \'\';\\n    public disabled? = false;\\n    public forceDisabled? = false;\\n    public label?: \'Test\';\\n    public placeholder? = \'\';\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\n    public form?: any;\\n    public prefixIcon? = \'\';\\n    public suffixIcon? = \'\';\\n    public prefixText? = \'\';\\n    public suffixText? = \'\';\\n    public helpText? = \'\';\\n    public infoText? = \'\';\\n    public showHelpText? = true;\\n    public showSuccessValidation? = false;\\n    public showErrorValidation? = true;\\n    public showInfoIcon? = true;\\n    public patternErrorText? = \'patternErrorText\';\\n    public errorStrings? = {};\\n}\\n@Component({\\n    selector: \'ui-form-base\',\\n    templateUrl: \'./form-base.component.html\',\\n    styleUrls: [\'./form-base.component.scss\'],\\n})\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\n\\n    @Output() public formStatusChange = new EventEmitter<any>();\\n    @Output() public formClosed = new EventEmitter<any>();\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\n\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\n        this._editMode = value;\\n        if (this._editMode === true) {\\n            this.enableAllInputs();\\n        } else {\\n            this.disableAllInputs();\\n        }\\n    }\\n\\n    public get editMode(): boolean {\\n        return this._editMode;\\n    }\\n\\n    public form: FormGroup;\\n    public payload: any = {};\\n\\n    public modeChanged = false;\\n    public formControls: { [name: string]: {value: any; validators: Validators; config?: UiFormControlConfigObsolete} };\\n\\n    public showSuccessValidation = false;\\n    public showErrorValidation = true;\\n    public showHelpText = true;\\n    public showInfoIcon = true;\\n\\n    public Validators = Validators;\\n\\n    protected _ngUnsubscribe = new Subject();\\n\\n    private _initialValues;\\n    private _editMode = false;\\n\\n    constructor() {}\\n\\n    public ngOnInit(): void {  }\\n\\n    public ngOnDestroy(): void {\\n        this._ngUnsubscribe.next(null);\\n        this._ngUnsubscribe.complete();\\n    }\\n\\n    public createForm(formControls: { [name: string]: {value: any; validators: any; config?: UiFormControlConfigObsolete} }) {\\n        this.form = new FormGroup({});\\n        for (const [key, value] of Object.entries(formControls)) {\\n            const newControl = new FormControl(value.value, {validators: value.validators});\\n            this.form.setControl(key, newControl);\\n        }\\n        this.editMode = false;\\n    }\\n\\n    public setValues(FormValues: any){\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.form.controls[key].setValue(FormValues[key]);\\n        });\\n    }\\n\\n    public viewForm() {\\n        this.editMode = false;\\n    }\\n\\n    public editForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.editMode = true;\\n    }\\n\\n    public clearForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.form.reset();\\n        this.payload = {};\\n    }\\n\\n    public cancelForm() {\\n        this.form.reset(this._initialValues);\\n        this.payload = {};\\n        this.editMode = false;\\n    }\\n\\n    public closeForm() {\\n        this.editMode = false;\\n        this.formClosed.emit();\\n    }\\n\\n    public submitForm(): FormData {\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.payload[key] = this.form.controls[key].value;\\n        });\\n        this.editMode = false;\\n\\n        this.formSubmitted.emit(this.form.value);\\n\\n        return this.form.value;\\n    }\\n\\n    public onClearBtnClick() {\\n        this.clearForm();\\n    }\\n\\n    public onEditBtnClick() {\\n        this.editForm();\\n    }\\n\\n    public onCancelBtnClick() {\\n        this.cancelForm();\\n    }\\n\\n    public onCloseBtnClick() {\\n        this.closeForm();\\n    }\\n\\n    public onSaveBtnClick() {\\n        this.submitForm();\\n    }\\n\\n    public onFormOptionsChanged(e: {showInfoIcon: boolean; showHelpText: boolean}){\\n        this.showInfoIcon = e.showInfoIcon;\\n        this.showHelpText = e.showHelpText;\\n    }\\n\\n    private disableAllInputs() {\\n\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n                    this.form.controls[control].disable();\\n                }\\n            }\\n        }\\n    }\\n\\n    private enableAllInputs() {\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n\\n                    // Enable only the form controls that don\'t have forceDisabled\\n                    if(this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined){\\n\\n                        if(this.formControls[control].config.forceDisabled === false){\\n                            this.form.controls[control].enable();\\n                            this.form.controls[control].markAsUntouched();\\n                        }\\n                    }\\n                    else{\\n                        this.form.controls[control].enable();\\n                        this.form.controls[control].markAsUntouched();\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n","properties":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":10,"modifierKind":[123]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":true,"description":"","line":27,"modifierKind":[123]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":11,"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"any","optional":true,"description":"","line":15,"modifierKind":[123]},{"name":"formControlName","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":9,"modifierKind":[123]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":20,"modifierKind":[123]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":21,"modifierKind":[123]},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":12,"modifierKind":[123]},{"name":"patternErrorText","defaultValue":"\'patternErrorText\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":26,"modifierKind":[123]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":13,"modifierKind":[123]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":16,"modifierKind":[123]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":18,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":24,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":22,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":25,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":true,"description":"","line":23,"modifierKind":[123]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":17,"modifierKind":[123]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":19,"modifierKind":[123]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","type":"\\"text\\" | \\"email\\" | \\"password\\"","optional":true,"description":"","line":14,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiFormValidators","id":"class-UiFormValidators-bac6c38bc3466b2f576292e8f7e42e4b2ef6e1732dfa2d78f16e5fe40601dac7d21cb25501daca8e3b1c2da838f517c7cdff68b9097cb1b126a8154397a006c2","file":"libs/ui/src/lib/classes/form-validators.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AbstractControl, FormControl, ValidationErrors } from \'@angular/forms\';\\n\\n/**\\n * Helper class that contains Reactive Form custom validators\\n */\\nexport class UiFormValidators {\\n    /**\\n     * Validates for empty spaces as value\\n     *\\n     * @returns \\"{ whitespace: true }\\" when there is empty space\\n     */\\n    public static noWhitespaceValidator(control: FormControl): ValidationErrors | null {\\n        const value = control.value;\\n\\n        // Treat null or undefined as whitespace\\n        if (value == null) { // covers both null and undefined\\n            return { whitespace: true };\\n        }\\n\\n        // Check if the value is a string\\n        if (typeof value !== \'string\') {\\n            return null;\\n        }\\n\\n        const isWhitespace = value.trim().length === 0;\\n        return isWhitespace ? { whitespace: true } : null;\\n    }\\n\\n    /**\\n     * Validate maximum length of the input value after removing HTML tags.\\n     *\\n     * @param maxLength\\n     * @returns \\"{ maxlength: { requiredLength: maxLength } } | null\\"\\n     */\\n    public static maxLengthHtmlTrimmed(maxLength: number): (control: AbstractControl) => ValidationErrors | null {\\n        return (control: AbstractControl): ValidationErrors | null => {\\n            const value = control.value;\\n\\n            if (!value) {\\n                return null;\\n            }\\n\\n            const trimmedText = value.replace(/<\\\\/?(\\"[^\\"]*\\"|\'[^\']*\'|[^>])*(>|$)/g, \'\');\\n\\n            return trimmedText.length <= maxLength ? null : { maxlength: { requiredLength: maxLength } };\\n        };\\n    }\\n\\n    /**\\n     * Validate minimum length of the input value after removing HTML tags.\\n     *\\n     * @param minLength\\n     * @returns \\"{ minlength: { requiredLength: minLength } } | null\\"\\n     */\\n    public static minLengthHtmlTrimmed(minLength: number): (control: AbstractControl) => ValidationErrors | null {\\n        return (control: AbstractControl): ValidationErrors | null => {\\n            const value = control.value;\\n\\n            if (!value) {\\n                return { minlength: { requiredLength: minLength } };\\n            }\\n\\n            const trimmedText = value.replace(/<\\\\/?(\\"[^\\"]*\\"|\'[^\']*\'|[^>])*(>|$)/g, \'\');\\n            return trimmedText.length >= minLength ? null : { minlength: { requiredLength: minLength } };\\n        };\\n    }\\n}\\n","properties":[],"description":"<p>Helper class that contains Reactive Form custom validators</p>\\n","rawdescription":"\\n\\nHelper class that contains Reactive Form custom validators\\n","methods":[{"name":"maxLengthHtmlTrimmed","args":[{"name":"maxLength","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidate maximum length of the input value after removing HTML tags.\\n\\n","description":"<p>Validate maximum length of the input value after removing HTML tags.</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":952,"end":961,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"maxLength"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":946,"end":951,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":970,"end":977,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>&quot;{ maxlength: { requiredLength: maxLength } } | null&quot;</p>\\n"}]},{"name":"minLengthHtmlTrimmed","args":[{"name":"minLength","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidate minimum length of the input value after removing HTML tags.\\n\\n","description":"<p>Validate minimum length of the input value after removing HTML tags.</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":1657,"end":1666,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"minLength"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1651,"end":1656,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1675,"end":1682,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>&quot;{ minlength: { requiredLength: minLength } } | null&quot;</p>\\n"}]},{"name":"noWhitespaceValidator","args":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidates for empty spaces as value\\n\\n","description":"<p>Validates for empty spaces as value</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"control","type":"FormControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":250,"end":257,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>&quot;{ whitespace: true }&quot; when there is empty space</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiModalConfig","id":"class-UiModalConfig-5fe9242e59636e55b3122ac1c7f1db2db692a158a51464d8460b2172e964e38e9070b59bad092b0b9973376fcea45e39c0af34c31e2fe017881ea92445133144","file":"libs/ui/src/lib/modules/modal/configuration/modal-config.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { UiModalDialogSizeEnum } from \'@lib/enums/modal-dialog-size.enum\';\\nimport { UiModalTypeEnum } from \'@lib/enums/modal-type.enum\';\\n\\n/**\\n * Represents the configuration options for Ui Modals\\n */\\nexport class UiModalConfig {\\n    /**\\n     * Specifies the `aria-labelledby` attribute value to be applied to the modal dialog.\\n     */\\n    public ariaLabelledBy?: string = undefined;\\n\\n    /**\\n     * Specifies the `aria-describedby` attribute value to be applied to the modal dialog.\\n     */\\n    public ariaDescribedBy?: string = undefined;\\n\\n    /**\\n     * Specifies whether the modal dialog should be centered vertically and horizontally.\\n     * Default value is `true`.\\n     *\\n     * @default true\\n     */\\n    public centered?: boolean = true;\\n\\n    /**\\n     * Specifies whether the modal dialog should be scrollable.\\n     * Default value is `true`.\\n     *\\n     * @default true\\n     */\\n    public scrollable?: boolean = true;\\n\\n    /**\\n     * Specifies the size of the modal dialog.\\n     * It can be a string or one of the predefined `UiModalDialogSizeEnum` values.\\n     * Default value is `UiModalDialogSizeEnum.md`.\\n     *\\n     * @default Medium == \'md\' == `UiModalDialogSizeEnum.md`\\n     */\\n    public size?: string | UiModalDialogSizeEnum = UiModalDialogSizeEnum.md;\\n\\n    /**\\n     * Specifies the CSS class(es) to be applied to the modal dialog.\\n     * NOTE: only works with \'Modal\' (dialog) types.\\n     *\\n     * @memberof `NgbModalOptions`\\n     * @example\\n     * To add icon to a modal add class: \'modal-icon\'\\n     */\\n    public modalDialogClass?: string = undefined;\\n\\n    /**\\n     * Specifies the CSS class(es) to be applied to the offcanvas panel.\\n     * NOTE: only works with \'Offcanvas\' (drawer) types.\\n     *\\n     * @memberof `NgbOffcanvasOptions`\\n     * @example\\n     * To add icon to a modal add class: \'no-borders\'\\n     */\\n    public panelClass?: string = undefined;\\n\\n    /**\\n     * Specifies the type of the modal dialog; \'Modal\' (dialog style) or \'Offcanvas\' (drawer style)\\n     * It can be one of the predefined `UiModalTypeEnum` values.\\n     * Default value is `UiModalTypeEnum.Modal`.\\n     *\\n     * @description This will default to \'Modal\' so that\\n     *      existing implementations that expect the component to\\n     *      be a modal will still render correctly.\\n     * @default Modal == `UiModalTypeEnum.Modal`\\n     */\\n    public modalType?: UiModalTypeEnum = UiModalTypeEnum.Modal;\\n\\n    /**\\n     * Specifies whether the modal dialog should be animated.\\n     */\\n    public animation?: boolean = undefined;\\n\\n    constructor(options?: UiModalConfig) {\\n        if (options) {\\n            this.ariaLabelledBy = options.ariaLabelledBy || this.ariaLabelledBy;\\n            this.ariaDescribedBy = options.ariaDescribedBy || this.ariaDescribedBy;\\n            this.centered = options.centered !== undefined && options.centered !== null ? options.centered : true;\\n            this.scrollable = options.scrollable !== undefined && options.scrollable !== null ? options.scrollable : true;\\n            this.size = options.size ? options.size : UiModalDialogSizeEnum.md;\\n            this.modalDialogClass = options.modalDialogClass ? options.modalDialogClass : \'\';\\n            this.panelClass = options.panelClass ? options.panelClass : \'\';\\n            // There is no default for `modalType` to use the service and config a type must be passed\\n            this.modalType = options.modalType !== undefined && options.modalType !== null ? options.modalType : this.modalType;\\n            this.animation = options.animation !== undefined && options.animation !== null ? options.animation : undefined;\\n        }\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"options","type":"UiModalConfig","deprecated":false,"deprecationMessage":"","optional":true}],"line":79,"jsdoctags":[{"name":"options","type":"UiModalConfig","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"animation","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Specifies whether the modal dialog should be animated.</p>\\n","line":79,"rawdescription":"\\n\\nSpecifies whether the modal dialog should be animated.\\n","modifierKind":[123]},{"name":"ariaDescribedBy","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the <code>aria-describedby</code> attribute value to be applied to the modal dialog.</p>\\n","line":17,"rawdescription":"\\n\\nSpecifies the `aria-describedby` attribute value to be applied to the modal dialog.\\n","modifierKind":[123]},{"name":"ariaLabelledBy","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the <code>aria-labelledby</code> attribute value to be applied to the modal dialog.</p>\\n","line":12,"rawdescription":"\\n\\nSpecifies the `aria-labelledby` attribute value to be applied to the modal dialog.\\n","modifierKind":[123]},{"name":"centered","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Specifies whether the modal dialog should be centered vertically and horizontally.\\nDefault value is <code>true</code>.</p>\\n","line":25,"rawdescription":"\\n\\nSpecifies whether the modal dialog should be centered vertically and horizontally.\\nDefault value is `true`.\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":694,"end":713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":695,"end":702,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}]},{"name":"modalDialogClass","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the CSS class(es) to be applied to the modal dialog.\\nNOTE: only works with &#39;Modal&#39; (dialog) types.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">To add icon to a modal add class: &#39;modal-icon&#39;</code></pre></div>","line":52,"rawdescription":"\\n\\nSpecifies the CSS class(es) to be applied to the modal dialog.\\nNOTE: only works with \'Modal\' (dialog) types.\\n\\n```html\\nTo add icon to a modal add class: \'modal-icon\'\\n```","modifierKind":[123],"jsdoctags":[{"pos":1425,"end":1460,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1426,"end":1434,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"memberof"},"comment":"<p><code>NgbModalOptions</code></p>\\n"},{"pos":1460,"end":1528,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1461,"end":1468,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>To add icon to a modal add class: &#39;modal-icon&#39;</p>\\n"}]},{"name":"modalType","defaultValue":"UiModalTypeEnum.Modal","deprecated":false,"deprecationMessage":"","type":"UiModalTypeEnum","optional":true,"description":"<p>Specifies the type of the modal dialog; &#39;Modal&#39; (dialog style) or &#39;Offcanvas&#39; (drawer style)\\nIt can be one of the predefined <code>UiModalTypeEnum</code> values.\\nDefault value is <code>UiModalTypeEnum.Modal</code>.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-none\\"> existing implementations that expect the component to\\n be a modal will still render correctly.</code></pre></div>","line":74,"rawdescription":"\\n\\nSpecifies the type of the modal dialog; \'Modal\' (dialog style) or \'Offcanvas\' (drawer style)\\nIt can be one of the predefined `UiModalTypeEnum` values.\\nDefault value is `UiModalTypeEnum.Modal`.\\n\\n     existing implementations that expect the component to\\n     be a modal will still render correctly.\\n","modifierKind":[123],"jsdoctags":[{"pos":2125,"end":2300,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2126,"end":2137,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>This will default to &#39;Modal&#39; so that\\nexisting implementations that expect the component to\\nbe a modal will still render correctly.</p>\\n"},{"pos":2300,"end":2347,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2301,"end":2308,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>Modal == <code>UiModalTypeEnum.Modal</code></p>\\n"}]},{"name":"panelClass","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Specifies the CSS class(es) to be applied to the offcanvas panel.\\nNOTE: only works with &#39;Offcanvas&#39; (drawer) types.</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">To add icon to a modal add class: &#39;no-borders&#39;</code></pre></div>","line":62,"rawdescription":"\\n\\nSpecifies the CSS class(es) to be applied to the offcanvas panel.\\nNOTE: only works with \'Offcanvas\' (drawer) types.\\n\\n```html\\nTo add icon to a modal add class: \'no-borders\'\\n```","modifierKind":[123],"jsdoctags":[{"pos":1734,"end":1773,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1735,"end":1743,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"memberof"},"comment":"<p><code>NgbOffcanvasOptions</code></p>\\n"},{"pos":1773,"end":1841,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1774,"end":1781,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>To add icon to a modal add class: &#39;no-borders&#39;</p>\\n"}]},{"name":"scrollable","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Specifies whether the modal dialog should be scrollable.\\nDefault value is <code>true</code>.</p>\\n","line":33,"rawdescription":"\\n\\nSpecifies whether the modal dialog should be scrollable.\\nDefault value is `true`.\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":873,"end":892,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":874,"end":881,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}]},{"name":"size","defaultValue":"UiModalDialogSizeEnum.md","deprecated":false,"deprecationMessage":"","type":"string | UiModalDialogSizeEnum","optional":true,"description":"<p>Specifies the size of the modal dialog.\\nIt can be a string or one of the predefined <code>UiModalDialogSizeEnum</code> values.\\nDefault value is <code>UiModalDialogSizeEnum.md</code>.</p>\\n","line":42,"rawdescription":"\\n\\nSpecifies the size of the modal dialog.\\nIt can be a string or one of the predefined `UiModalDialogSizeEnum` values.\\nDefault value is `UiModalDialogSizeEnum.md`.\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":1140,"end":1199,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1141,"end":1148,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>Medium == &#39;md&#39; == <code>UiModalDialogSizeEnum.md</code></p>\\n"}]}],"description":"<p>Represents the configuration options for Ui Modals</p>\\n","rawdescription":"\\n\\nRepresents the configuration options for Ui Modals\\n","methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiPasteClipboard","id":"class-UiPasteClipboard-68056a2f0c15bc3a878316ff0ae4a18adbf5f92de22ead7fba523de8d28163c48ac098bff0e43fb06f6cd9355694489e747f040da7c2295562233a777cfc4972","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import * as QuillNamespace from \'quill\';\\nconst Quill: any = QuillNamespace;\\nimport sanitizeHtml from \'sanitize-html\';\\n\\nconst Clipboard = Quill.import(\'modules/clipboard\');\\nconst Delta = Quill.import(\'delta\');\\nexport default class UiPasteClipboard extends Clipboard {\\n    public onPaste(e) {\\n        if (e.defaultPrevented || !this.quill.isEnabled()) {\\n            return;\\n        }\\n\\n        const range = this.quill.getSelection();\\n        let delta = new Delta().retain(range.index);\\n\\n        if (e && e.clipboardData && e.clipboardData.types && e.clipboardData.getData) {\\n            const text =\\n                (e.originalEvent || e).clipboardData.getData(\'text/html\') || (e.originalEvent || e).clipboardData.getData(\'text/plain\');\\n            const newEl = document.createElement(\'div\');\\n            newEl.id = \'paste-\' + this.quill.id;\\n            newEl.innerHTML = text;\\n            //Copy and paste from google docs doesnt include proper tags\\n            //Finds css style and inserts tag\\n            newEl.querySelectorAll(\'span\').forEach((el) => {\\n                let newHtml = el.innerHTML;\\n                if (el.style.textDecoration === \'underline\' || el.style.textDecorationLine === \'underline\') {\\n                    newHtml = \'<u>\' + newHtml + \'</u>\';\\n                }\\n                if (el.style.fontWeight === \'700\') {\\n                    newHtml = \'<strong>\' + newHtml + \'</strong>\';\\n                }\\n                if (el.style.fontStyle === \'italic\') {\\n                    newHtml = \'<em>\' + newHtml + \'</em>\';\\n                }\\n\\n                el.outerHTML = newHtml;\\n            });\\n\\n            const unsanitizedText = sanitizeHtml(newEl.innerHTML, {\\n                allowedTags: [\'i\', \'em\', \'strong\', \'u\', \'a\', \'small\', \'p\', \'h4\', \'h5\', \'sup\', \'sub\', \'ol\', \'ul\', \'li\', \'br\'],\\n                transformTags: {\\n                    h1: \'h4\',\\n                    h2: \'h4\',\\n                    h3: \'h5\',\\n                    //h4: \'h5\',\\n                    /* target: function (tagName, attribs) {\\n                        return {\\n                            tagName: \'target\',\\n                            text: \'_blank\',\\n                        };\\n                    }, */\\n                },\\n                allowedAttributes: {\\n                    a: [\'href\', \'target: blank\'],\\n                },\\n                allowedClasses: [],\\n            });\\n            newEl.remove();\\n            const cleanedText = this.convert(unsanitizedText);\\n            e.stopPropagation();\\n            e.preventDefault();\\n            delta = delta.concat(cleanedText).delete(range.length);\\n            this.quill.updateContents(delta, Quill.sources.USER);\\n            this.quill.setSelection(delta.length() - range.length, Quill.sources.SILENT);\\n            return false;\\n        }\\n        /* Copy event for future implementation\\n        addEventListener(\'copy\', (e) => {\\n        }); */\\n    }\\n}\\n","properties":[],"methods":[{"name":"onPaste","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"Clipboard","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"UiPasteClipboard","id":"class-UiPasteClipboard-e3020ce7a2e06290b290b11eafbf8ed684d60f8025ddb652fea55bb95dc74d248e4ef622631bdeb3bf240cc2b0f9ee3a811b85048b5278a339b1fbec04cbf3aa-1","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import * as QuillNamespace from \'quill\';\\nconst Quill: any = QuillNamespace;\\nimport sanitizeHtml from \'sanitize-html\';\\n\\nconst Clipboard = Quill.import(\'modules/clipboard\');\\nconst Delta = Quill.import(\'delta\');\\nexport default class UiPasteClipboard extends Clipboard {\\n    public onPaste(e) {\\n        if (e.defaultPrevented || !this.quill.isEnabled()) {\\n            return;\\n        }\\n\\n        const range = this.quill.getSelection();\\n        let delta = new Delta().retain(range.index);\\n\\n        if (e && e.clipboardData && e.clipboardData.types && e.clipboardData.getData) {\\n            const text =\\n                (e.originalEvent || e).clipboardData.getData(\'text/html\') || (e.originalEvent || e).clipboardData.getData(\'text/plain\');\\n            const newEl = document.createElement(\'div\');\\n            newEl.id = \'paste-\' + this.quill.id;\\n            newEl.innerHTML = text;\\n            //Copy and paste from google docs doesnt include proper tags\\n            //Finds css style and inserts tag\\n            newEl.querySelectorAll(\'span\').forEach((el) => {\\n                let newHtml = el.innerHTML;\\n                if (el.style.textDecoration === \'underline\' || el.style.textDecorationLine === \'underline\') {\\n                    newHtml = \'<u>\' + newHtml + \'</u>\';\\n                }\\n                if (el.style.fontWeight === \'700\') {\\n                    newHtml = \'<strong>\' + newHtml + \'</strong>\';\\n                }\\n                if (el.style.fontStyle === \'italic\') {\\n                    newHtml = \'<em>\' + newHtml + \'</em>\';\\n                }\\n\\n                el.outerHTML = newHtml;\\n            });\\n\\n            const unsanitizedText = sanitizeHtml(newEl.innerHTML, {\\n                allowedTags: [\'i\', \'em\', \'strong\', \'u\', \'a\', \'small\', \'p\', \'h4\', \'h5\', \'sup\', \'sub\', \'ol\', \'ul\', \'li\', \'br\'],\\n                transformTags: {\\n                    h1: \'h4\',\\n                    h2: \'h4\',\\n                    h3: \'h5\',\\n                    //h4: \'h5\',\\n                    /* target: function (tagName, attribs) {\\n                        return {\\n                            tagName: \'target\',\\n                            text: \'_blank\',\\n                        };\\n                    }, */\\n                },\\n                allowedAttributes: {\\n                    a: [\'href\', \'target: blank\'],\\n                },\\n                allowedClasses: [],\\n            });\\n            newEl.remove();\\n            const cleanedText = this.convert(unsanitizedText);\\n            e.stopPropagation();\\n            e.preventDefault();\\n            delta = delta.concat(cleanedText).delete(range.length);\\n            this.quill.updateContents(delta, Quill.sources.USER);\\n            this.quill.setSelection(delta.length() - range.length, Quill.sources.SILENT);\\n            return false;\\n        }\\n    }\\n}\\n","properties":[],"methods":[{"name":"onPaste","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"Clipboard","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiPasteClipboard-1"},{"name":"UiPermissionsModel","id":"class-UiPermissionsModel-9771070d6a96c46fb215d800225941b199f3423bcb6865ec392f34ed76347e2e2212d7fcfac9ca8684af44652149ad8c449596dac0bdd35650ce635e3806bd7d","file":"libs/ui/src/lib/services/user/models/permissions.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { IUiPermissions } from \'../interfaces\';\\n\\nexport class UiPermissionsModel implements IUiPermissions {\\n    public userManagement: false;\\n    public exceptionManagement: false;\\n    public segmentationReport: false;\\n    public editCompanyProfile: false;\\n    public viewCompanyProfile: false;\\n    public viewContactManagement: false;\\n    public editContactManagement: false;\\n    public accessDeclarationSearch: false;\\n    public accessTransactionLogs: false;\\n    public accessIndirectMonitoring: false;\\n    public viewIndirectMonitoringRecords: false;\\n    public addIndirectMonitoringRecords: false;\\n    public editIndirectMonitoringRecords: false;\\n    public deleteIndirectMonitoringRecords: false;\\n    public viewIndirectMonitoringKeywordsList: false;\\n    public addIndirectMonitoringKeywordsList: false;\\n    public editIndirectMonitoringKeywordsList: false;\\n    public deleteIndirectMonitoringKeywordsList: false;\\n    public accessCorrectiveActions: false;\\n    public fullViewCorrectiveActionRecords: false;\\n    public viewAssignedCorrectiveActionRecords: false;\\n    public addCorrectiveActionRecords: false;\\n    public editCorrectiveActionRecords: false;\\n    public deleteCorrectiveActionRecords: false;\\n    public respondToCorrectiveActions: false;\\n    public manageCorrectiveActionTemplates: false;\\n    public viewNoMatchSuppliers: false;\\n    public viewDraftOrganizations: false;\\n    public viewNetworkDeclarations: false;\\n    public accessEvidenceReview: false;\\n    public modifyReview: false;\\n    public manageEvidenceType: false;\\n    public manageReviewCriteria: false;\\n    public viewEvidenceReview: false;\\n    public manageEvidenceTypeMapping: false;\\n    public accessCustomerRequests: false;\\n    public accessPartLevelCustomerRequests: false;\\n    public aud: string[];\\n}\\n","properties":[{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"aud","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":8,"modifierKind":[123]},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11,"modifierKind":[123]},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":6,"modifierKind":[123]},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":7,"modifierKind":[123]},{"name":"userManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":5,"modifierKind":[123]},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9,"modifierKind":[123]},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":10,"modifierKind":[123]},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[123]}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"implements":["IUiPermissions"]},{"name":"UiUtils","id":"class-UiUtils-e830978ee8c018e3f8df94e28de75fd11390f0a0dbadda14abf237577aff32886526884ae9efc6a090e34756ae8da9710cab4557d7e81f86313dcfaddf5de883","file":"libs/ui/src/lib/classes/utils.class.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export default class UiUtils {\\n    public static isArray(value: any): boolean {\\n        return Array.isArray(value);\\n    }\\n\\n    public static isNil(value: any): value is null | undefined {\\n        return value === null || typeof value === \'undefined\';\\n    }\\n\\n    public static isString(value: any): value is string {\\n        return typeof value === \'string\';\\n    }\\n\\n    public static isObject(value: any): boolean {\\n        return typeof value === \'object\';\\n    }\\n\\n    public static getProperty(value: { [key: string]: any }, key: string): any {\\n        if (UiUtils.isNil(value) || !UiUtils.isObject(value) || !(key in value)) {\\n            return undefined;\\n        }\\n\\n        return value[key];\\n    }\\n\\n    /**\\n     * Returns a number indicating whether a reference string comes before,\\n     * or after, or is the same as the given string in sort order\\n     *\\n     * @param valueA reference string\\n     * @param valueB compare string\\n     * @returns -1: A before B, 1: A after B, 0: equal\\n     */\\n    public static compareCaseInsensitive(valueA: string, valueB: string): number {\\n        if (typeof valueA !== \'string\' || typeof valueB !== \'string\') {\\n            throw new Error(\'Invalid parameter type\');\\n        }\\n\\n        return valueA.toLowerCase().localeCompare(valueB.toLowerCase());\\n    }\\n\\n    /**\\n     * Returns a number indicating whether a reference array of strings comes before,\\n     * or after, or is the same as the given array of strings in sort order\\n     *\\n     * @param valueA reference array of strings\\n     * @param valueB compare array of strings\\n     * @returns -1: [A] before [B], 1: [A] after [B], 0: equal\\n     */\\n    public static compareCaseInsensitiveArray(valueA: string[], valueB: string[]): number {\\n        if (!Array.isArray(valueA) || !Array.isArray(valueB)) {\\n            throw new Error(\'Invalid parameter type\');\\n        }\\n\\n        return valueA.join().toLowerCase().localeCompare(valueB.join().toLowerCase());\\n    }\\n\\n    /**\\n     * Compares array values in AG-grid column\\n     * AG-grid returns array on sort and string, when menu icon is clicked\\n     * This method handles this behavior and compare both value types\\n     *\\n     * @param valueA array type on sort and string type on menu\\n     * @param valueB array type on sort and string type on menu\\n     * @returns  -1: [A] before [B], 1: [A] after [B], 0: equal\\n     */\\n    public static compareCaseInsensitiveAgGridArray(valueA: string | string[], valueB: string | string[]): number {\\n        let compareResult: number;\\n        if (Array.isArray(valueA) && Array.isArray(valueB)) {\\n            // This is used on AG-grid sort\\n            compareResult = UiUtils.compareCaseInsensitiveArray(valueA || [], valueB || []);\\n        } else {\\n            // This is used when AG-grid menu icon is clicked\\n            compareResult = UiUtils.compareCaseInsensitive(valueA as string, valueB as string);\\n        }\\n\\n        return compareResult;\\n    }\\n\\n    /**\\n     * Compares Date values in AG-grid column\\n     *\\n     * @returns -1, 1, 0\\n     */\\n    public static compareAgGridDates(filterLocalDateAtMidnight: Date, cellValue: string): number {\\n        const cellDate = new Date(cellValue);\\n        cellDate.setHours(0, 0, 0, 0);\\n\\n        if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\\n            return 0;\\n        }\\n\\n        if (cellDate < filterLocalDateAtMidnight) {\\n            return -1;\\n        }\\n\\n        if (cellDate > filterLocalDateAtMidnight) {\\n            return 1;\\n        }\\n    }\\n\\n    /**\\n     * Removes all non ASCI characters\\n     *\\n     * @param value containing non ASCI characters\\n     * @returns the input value without non ASCI characters\\n     */\\n    public static removeNonAscii(value: string): string {\\n        if (!value) {\\n            throw new Error(\'Undefined parameter\');\\n        }\\n\\n        if (typeof value !== \'string\') {\\n            throw new Error(\'Invalid parameter type\');\\n        }\\n\\n        return value.replace(/[^\\\\x20-\\\\x7E]/g, \'\');\\n    }\\n\\n    /**\\n     * Encodes a URI by replacing each instance of certain characters\\n     * by escape sequences representing the UTF-8 encoding of the character\\n     *\\n     * @param value unencoded URL value\\n     * @returns encoded URL value\\n     */\\n    public static encodeURI(value: string): string {\\n        if (!value) {\\n            throw new Error(\'Undefined parameter\');\\n        }\\n\\n        if (typeof value !== \'string\') {\\n            throw new Error(\'Invalid parameter type\');\\n        }\\n\\n        return encodeURIComponent(value).replace(/[!\'()*]/g, (char) => {\\n            return \'%\' + char.charCodeAt(0).toString(16);\\n        });\\n    }\\n}\\n","properties":[],"description":"<p>Helper class</p>\\n","rawdescription":"\\n\\nHelper class\\n","methods":[{"name":"compareAgGridDates","args":[{"name":"filterLocalDateAtMidnight","type":"Date","deprecated":false,"deprecationMessage":""},{"name":"cellValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompares Date values in AG-grid column\\n\\n","description":"<p>Compares Date values in AG-grid column</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"filterLocalDateAtMidnight","type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cellValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"tagName":{"pos":3030,"end":3037,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1, 1, 0</p>\\n"}]},{"name":"compareCaseInsensitive","args":[{"name":"valueA","type":"string","deprecated":false,"deprecationMessage":""},{"name":"valueB","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns a number indicating whether a reference string comes before,\\nor after, or is the same as the given string in sort order\\n\\n","description":"<p>Returns a number indicating whether a reference string comes before,\\nor after, or is the same as the given string in sort order</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":899,"end":905,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueA"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":893,"end":898,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>reference string</p>\\n"},{"name":{"pos":937,"end":943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueB"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":931,"end":936,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>compare string</p>\\n"},{"tagName":{"pos":967,"end":974,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1: A before B, 1: A after B, 0: equal</p>\\n"}]},{"name":"compareCaseInsensitiveAgGridArray","args":[{"name":"valueA","type":"string | string[]","deprecated":false,"deprecationMessage":""},{"name":"valueB","type":"string | string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCompares array values in AG-grid column\\nAG-grid returns array on sort and string, when menu icon is clicked\\nThis method handles this behavior and compare both value types\\n\\n","description":"<p>Compares array values in AG-grid column\\nAG-grid returns array on sort and string, when menu icon is clicked\\nThis method handles this behavior and compare both value types</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":2202,"end":2208,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueA"},"type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2196,"end":2201,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>array type on sort and string type on menu</p>\\n"},{"name":{"pos":2266,"end":2272,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueB"},"type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2260,"end":2265,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>array type on sort and string type on menu</p>\\n"},{"tagName":{"pos":2324,"end":2331,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1: [A] before [B], 1: [A] after [B], 0: equal</p>\\n"}]},{"name":"compareCaseInsensitiveArray","args":[{"name":"valueA","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"valueB","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReturns a number indicating whether a reference array of strings comes before,\\nor after, or is the same as the given array of strings in sort order\\n\\n","description":"<p>Returns a number indicating whether a reference array of strings comes before,\\nor after, or is the same as the given array of strings in sort order</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":1514,"end":1520,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueA"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1508,"end":1513,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>reference array of strings</p>\\n"},{"name":{"pos":1562,"end":1568,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"valueB"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":1556,"end":1561,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>compare array of strings</p>\\n"},{"tagName":{"pos":1602,"end":1609,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>-1: [A] before [B], 1: [A] after [B], 0: equal</p>\\n"}]},{"name":"encodeURI","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEncodes a URI by replacing each instance of certain characters\\nby escape sequences representing the UTF-8 encoding of the character\\n\\n","description":"<p>Encodes a URI by replacing each instance of certain characters\\nby escape sequences representing the UTF-8 encoding of the character</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":4180,"end":4185,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":4174,"end":4179,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>unencoded URL value</p>\\n"},{"tagName":{"pos":4214,"end":4221,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>encoded URL value</p>\\n"}]},{"name":"getProperty","args":[{"name":"value","type":"literal type","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isArray","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isNil","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"null | undefined","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isObject","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isString","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[124],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeNonAscii","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves all non ASCI characters\\n\\n","description":"<p>Removes all non ASCI characters</p>\\n","modifierKind":[124],"jsdoctags":[{"name":{"pos":3592,"end":3597,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":3586,"end":3591,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>containing non ASCI characters</p>\\n"},{"tagName":{"pos":3637,"end":3644,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>the input value without non ASCI characters</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[{"name":"UiDragDropDirective","id":"directive-UiDragDropDirective-86fec541c29c8c35d48b35bb8ab9b9f58da10d0b67ae626afe3f827c710125906b779997d87965b1a36bf8b2bd5f36bdd7555f2b83276b456ff58c22d11df54f","file":"libs/ui/src/lib/modules/file-upload/directives/drag-drop.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, Output, EventEmitter, HostBinding, HostListener, Input } from \'@angular/core\';\\n\\n@Directive({\\n    selector: \'[uiDragDrop]\',\\n})\\nexport class UiDragDropDirective {\\n    @HostBinding(\'class.fileover\') public fileOver: boolean;\\n    @Output() public fileDropped = new EventEmitter<any>();\\n    @Input() public disabled = false;\\n\\n    // Dragover listener\\n    @HostListener(\'dragover\', [\'$event\']) public onDragOver(evt) {\\n        evt.preventDefault();\\n        evt.stopPropagation();\\n        this.fileOver = true;\\n    }\\n\\n    // Dragleave listener\\n    @HostListener(\'dragleave\', [\'$event\']) public onDragLeave(evt) {\\n        evt.preventDefault();\\n        evt.stopPropagation();\\n        this.fileOver = false;\\n    }\\n\\n    // Drop listener\\n    @HostListener(\'drop\', [\'$event\']) public ondrop(evt) {\\n        evt.preventDefault();\\n        evt.stopPropagation();\\n        this.fileOver = false;\\n        const files = evt.dataTransfer.files;\\n        if (files.length > 0 && this.disabled === false) {\\n            this.fileDropped.emit(files);\\n        }\\n    }\\n}\\n","selector":"[uiDragDrop]","providers":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"fileDropped","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":21,"type":"EventEmitter"}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class.fileover","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]}],"hostListeners":[{"name":"dragleave","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":32},{"name":"dragover","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":25},{"name":"drop","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":39}],"propertiesClass":[{"name":"fileOver","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'class.fileover\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"onDragLeave","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'dragleave\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onDragOver","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'dragover\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ondrop","args":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'drop\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},{"name":"UiHasPermissionDirective","id":"directive-UiHasPermissionDirective-a5ad85263def997fed33242cb7b585c44e6b76a4bed7f978e921c7f81a68375e28c3ba30135c0aff273a3d7cbd7bb421d607c01a0599fcc5477d9f198490680f","file":"libs/ui/src/lib/modules/permissions/directives/has-permission.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, Input, TemplateRef, ViewContainerRef } from \'@angular/core\';\\n// RxJS\\nimport { take } from \'rxjs/operators\';\\n// Services\\nimport { UiPermissionsEnum, UiUserService } from \'@lib/services/user\';\\n\\n@Directive({\\n    selector: \'[uiHasPermission]\',\\n})\\n/**\\n * Hides the attached element if the authenticated user hasn\'t permissions to see it\\n */\\nexport class UiHasPermissionDirective {\\n    constructor(private _viewContainer: ViewContainerRef, private _templateRef: TemplateRef<any>, private _userService: UiUserService) {}\\n\\n    /**\\n     * Sets required permissions\\n     */\\n    @Input() public set uiHasPermission(permissions: UiPermissionsEnum[]) {\\n        this._userService\\n            .hasPermission(permissions)\\n            .pipe(take(1))\\n            .subscribe((hasPermission: boolean) => {\\n                this.updateView(hasPermission);\\n            });\\n    }\\n\\n    private updateView(showElement: boolean) {\\n        if (showElement) {\\n            this._viewContainer.createEmbeddedView(this._templateRef);\\n        } else {\\n            this._viewContainer.clear();\\n        }\\n    }\\n}\\n","selector":"[uiHasPermission]","providers":[],"inputsClass":[{"name":"uiHasPermission","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets required permissions\\n","description":"<p>Sets required permissions</p>\\n","line":20,"type":"UiPermissionsEnum[]","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[],"methodsClass":[{"name":"updateView","args":[{"name":"showElement","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"showElement","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"uiHasPermission":{"name":"uiHasPermission","setSignature":{"name":"uiHasPermission","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"permissions","type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":20,"rawdescription":"\\n\\nSets required permissions\\n","description":"<p>Sets required permissions</p>\\n","jsdoctags":[{"name":"permissions","type":"UiPermissionsEnum[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"UiIsFlagOffDirective","id":"directive-UiIsFlagOffDirective-ad5a73b4314af50353eda1f2e166429eb2d8a284c20abbcaa164f77d1d992053dc43846d5a325dd8dd4e2c3183a3fc39f263d8e5e208133658f0a67099cede51","file":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-off.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import \'@lib/extensions/observable.extensions\';\\nimport { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from \'@angular/core\';\\nimport { UiFeatureFlagService } from \'@lib/modules/feature-flags/services/feature-flag.service\';\\n\\n@Directive({ selector: \'[uiIsFlagOff]\' })\\nexport class UiIsFlagOffDirective implements OnInit {\\n    private _fallbackTemplate: TemplateRef<any> | null = null;\\n    private _featureFlagName: string;\\n\\n    constructor(\\n        private _templateRef: TemplateRef<any>,\\n        private _viewContainer: ViewContainerRef,\\n        private _featureFlagService: UiFeatureFlagService\\n    ) {}\\n\\n    public ngOnInit(): void {\\n        this._viewContainer.clear();\\n\\n        // If _featureFlagName is null or is undefined, will show the feature. (Flag Bypass)\\n        if (this._featureFlagName === null || this._featureFlagName === undefined) {\\n            this._viewContainer.createEmbeddedView(this._templateRef);\\n        }\\n        // Else evaluate the feature flag and update the content\\n        else {\\n            this._featureFlagService.isFlagOn(this._featureFlagName).once((result) => {\\n                if (!result) {\\n                    this._viewContainer.createEmbeddedView(this._templateRef);\\n                } else if (this._fallbackTemplate) {\\n                    this._viewContainer.createEmbeddedView(this._fallbackTemplate);\\n                }\\n            });\\n        }\\n    }\\n\\n    @Input() public set uiIsFlagOff(featureFlagName: string) {\\n        this._featureFlagName = featureFlagName;\\n    }\\n\\n    @Input() public set uiIsFlagOffFallback(template: TemplateRef<any> | null) {\\n        this._fallbackTemplate = template;\\n    }\\n}\\n","selector":"[uiIsFlagOff]","providers":[],"inputsClass":[{"name":"uiIsFlagOff","deprecated":false,"deprecationMessage":"","line":35,"type":"string","decorators":[]},{"name":"uiIsFlagOffFallback","deprecated":false,"deprecationMessage":"","line":39,"type":"TemplateRef | null","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"_fallbackTemplate","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | null","optional":false,"description":"","line":7,"modifierKind":[121]},{"name":"_featureFlagName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[121]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"implements":["OnInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"uiIsFlagOff":{"name":"uiIsFlagOff","setSignature":{"name":"uiIsFlagOff","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":35,"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"uiIsFlagOffFallback":{"name":"uiIsFlagOffFallback","setSignature":{"name":"uiIsFlagOffFallback","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"UiIsFlagOnDirective","id":"directive-UiIsFlagOnDirective-21c3a8263bf5a6782f702d36de24d00cd481f310064690c965f2cfbcccf8285f36ee5a1efdcd7ed3b1e7c1af5e2524d17b1d96f74b8f1843cc49c1fa112a32a2","file":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-on.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import \'@lib/extensions/observable.extensions\';\\nimport { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from \'@angular/core\';\\nimport { UiFeatureFlagService } from \'@lib/modules/feature-flags/services/feature-flag.service\';\\n\\n@Directive({ selector: \'[uiIsFlagOn]\' })\\nexport class UiIsFlagOnDirective implements OnInit {\\n    private _fallbackTemplate: TemplateRef<any> | null = null;\\n    private _featureFlagName: string;\\n\\n    constructor(\\n        private _templateRef: TemplateRef<any>,\\n        private _viewContainer: ViewContainerRef,\\n        private _featureFlagService: UiFeatureFlagService\\n    ) {}\\n\\n    public ngOnInit(): void {\\n        this._viewContainer.clear();\\n\\n        // If _featureFlagName is null or is undefined, will show the feature. (Flag Bypass)\\n        if (this._featureFlagName === null || this._featureFlagName === undefined) {\\n            this._viewContainer.createEmbeddedView(this._templateRef);\\n        }\\n        // Else evaluate the feature flag and update the content\\n        else {\\n            this._featureFlagService.isFlagOn(this._featureFlagName).once((result) => {\\n                if (result) {\\n                    this._viewContainer.createEmbeddedView(this._templateRef);\\n                } else if (this._fallbackTemplate) {\\n                    this._viewContainer.createEmbeddedView(this._fallbackTemplate);\\n                }\\n            });\\n        }\\n    }\\n\\n    @Input() public set uiIsFlagOn(featureFlagName: string) {\\n        this._featureFlagName = featureFlagName;\\n    }\\n\\n    @Input() public set uiIsFlagOnFallback(template: TemplateRef<any> | null) {\\n        this._fallbackTemplate = template;\\n    }\\n}\\n","selector":"[uiIsFlagOn]","providers":[],"inputsClass":[{"name":"uiIsFlagOn","deprecated":false,"deprecationMessage":"","line":35,"type":"string","decorators":[]},{"name":"uiIsFlagOnFallback","deprecated":false,"deprecationMessage":"","line":39,"type":"TemplateRef | null","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"_fallbackTemplate","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any> | null","optional":false,"description":"","line":7,"modifierKind":[121]},{"name":"_featureFlagName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[121]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"implements":["OnInit"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":""},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"_templateRef","type":"TemplateRef<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"uiIsFlagOn":{"name":"uiIsFlagOn","setSignature":{"name":"uiIsFlagOn","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":35,"jsdoctags":[{"name":"featureFlagName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"uiIsFlagOnFallback":{"name":"uiIsFlagOnFallback","setSignature":{"name":"uiIsFlagOnFallback","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"template","type":"TemplateRef<any> | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}}],"components":[{"name":"UiAcpConfirmDeleteSessionModalComponent","id":"component-UiAcpConfirmDeleteSessionModalComponent-b7418a7c4fb1cc4aa29c97647f52e4df0baeae0962bba9ee1c3b14f7abd68d28ef7e8c8db51fea22f868c5ab21c9c582aa79048e9c2fbca4cb323b93e669f0f9","file":"libs/ui/src/lib/modules/user-auth-manager/components/confirm-delete-session-modal/confirm-delete-session-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"templateUrl":["./confirm-delete-session-modal.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onCancelClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSignOutClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\n// Ngx\\nimport { CookieService } from \'ngx-cookie-service\';\\n// Ngb\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\n// Services\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiAuthenticationService } from \'@lib/services/authentication/authentication.service\';\\n\\n@Component({\\n    templateUrl: \'./confirm-delete-session-modal.component.html\',\\n})\\nexport class UiAcpConfirmDeleteSessionModalComponent {\\n    constructor(\\n        private _activeModal: NgbActiveModal,\\n        private _authService: UiAuthenticationService,\\n        private _configService: UiConfigurationService,\\n        private _cookieService: CookieService\\n    ) {}\\n\\n    public onCancelClick() {\\n        this._activeModal.dismiss();\\n    }\\n\\n    public onSignOutClick() {\\n        this._cookieService.set(this._configService.appConfig.forceAllSessionsLogoutCookieName, \'true\');\\n        this._authService.logout();\\n        this._activeModal.close();\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":""},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"_activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div>\\n    <div class=\\"modal-header\\">\\n        <h3 class=\\"modal-title\\">{{ \'COMMON.LOG_OUT_OF_ALL_SESSIONS_TITLE\' | translate }}</h3>\\n        <button type=\\"button\\" class=\\"btn\\" aria-label=\\"Close\\" aria-hidden=\\"true\\" tabindex=\\"-1\\" (click)=\\"onCancelClick()\\">\\n            <i class=\\"bi bi-x\\"></i>\\n        </button>\\n    </div>\\n    <div class=\\"modal-body multiline-translated-text\\">\\n        <p>{{ \'AUTHENTICATION.SIGN_OUT_OF_ALL_SESSIONS_WARNING\' | translate }}</p>\\n    </div>\\n    <div class=\\"modal-footer\\">\\n        <button type=\\"button\\" class=\\"btn btn-outline-primary\\" (click)=\\"onCancelClick()\\">\\n            {{ \'COMMON.CANCEL\' | translate }}\\n        </button>\\n        <button type=\\"button\\" class=\\"btn btn-primary\\" (click)=\\"onSignOutClick()\\">\\n            {{ \'COMMON.LOG_OUT\' | translate }}\\n        </button>\\n    </div>\\n</div>\\n"},{"name":"UiAcpContactInformationSectionComponent","id":"component-UiAcpContactInformationSectionComponent-9405982f312494f160a2fb6e448ce07a9fe9fa55006db1d24e57f8b8f423ea98aadc05da546f6079a2bedc63c396da2bd415bdf74fa6d2dd7ad84f350634fe8b","file":"libs/ui/src/lib/modules/user-auth-manager/components/contact-information-section/contact-information-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-contact-information-section","styleUrls":[],"styles":[],"templateUrl":["contact-information-section.component.html"],"viewProviders":[],"inputsClass":[{"name":"person","deprecated":false,"deprecationMessage":"","line":24,"type":"IUiPersonDetails","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_person","deprecated":false,"deprecationMessage":"","type":"IUiPersonDetails","optional":false,"description":"","line":21,"modifierKind":[121]},{"name":"address","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"isFeatureEnabled","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":19,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n// RxJs\\nimport { Observable } from \'rxjs\';\\n// Service\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\n\\n// Interfaces\\nimport { IUiPersonDetails } from \'../../interfaces\';\\n// Enums\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\n\\n@Component({\\n    selector: \'ui-acp-contact-information-section\',\\n    templateUrl: \'contact-information-section.component.html\',\\n})\\nexport class UiAcpContactInformationSectionComponent implements OnInit {\\n    public address: string;\\n    public isFeatureEnabled: Observable<boolean>;\\n\\n    private _person: IUiPersonDetails;\\n\\n    @Input()\\n    private set person(value: IUiPersonDetails) {\\n        this._person = value;\\n\\n        if (this._person?.address !== undefined && this._person?.address !== null) {\\n            this.address = [\\n                this._person.address?.addressLine1,\\n                this._person.address?.addressLine2,\\n                this._person.address?.city,\\n                this._person.address?.postalCode,\\n                this._person.address?.state,\\n                this._person.address?.countryName,\\n            ]\\n                .filter((s) => s !== null)\\n                .join(\', \');\\n        } else {\\n            this.address = \'\';\\n        }\\n    }\\n\\n    public get person(): IUiPersonDetails {\\n        return this._person;\\n    }\\n\\n    constructor(private _featureService: AcpFeatureService) {}\\n\\n    public ngOnInit() {\\n        this.isFeatureEnabled = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""}],"line":45,"jsdoctags":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"person":{"name":"person","setSignature":{"name":"person","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":24,"jsdoctags":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"person","type":"","returnType":"IUiPersonDetails","line":43}}},"templateData":"<div *ngIf=\\"isFeatureEnabled | async\\" class=\\"card\\">\\n    <div class=\\"card-header\\">\\n        {{ \'PROFILE_MANAGER.CONTACT_INFORMATION\' | translate }}\\n    </div>\\n    <div class=\\"card-body\\">\\n        <div class=\\"card-content\\">\\n            <p class=\\"text-gray-700\\">{{ \'COMMON.EMAIL_ADDRESS\' | translate }}</p>\\n            <p>{{ person?.email || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\n            <hr>\\n            <p class=\\"text-gray-700\\">{{ \'PROFILE_MANAGER.WORK_PHONE\' | translate}}</p>\\n            <p>{{ person?.phone || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\n            <hr>\\n            <p class=\\"text-gray-700\\">{{ \'PROFILE_MANAGER.WORK_ADDRESS\' | translate }}</p>\\n            <p>{{ address || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiAcpOrganizationSectionComponent","id":"component-UiAcpOrganizationSectionComponent-2c3c33fe4229743487a567215b21fe035926a3e572ed1b12e3ba203be54c50fa9085c909a6709d527e0fb642406481ca9b229e94f0d25ea7cf7f4862303c1c7f","file":"libs/ui/src/lib/modules/user-auth-manager/components/organizations-section/organizations-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-organizations-section","styleUrls":[],"styles":[],"templateUrl":["organizations-section.component.html"],"viewProviders":[],"inputsClass":[{"name":"person","deprecated":false,"deprecationMessage":"","line":27,"type":"IUiPersonDetails","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_assignedStandaloneRegulations","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiRegulationShort[]","optional":false,"description":"","line":39,"modifierKind":[121]},{"name":"_ngUnsubscribe","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":40,"modifierKind":[121,144]},{"name":"_selectedContactGuid","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38,"modifierKind":[121]},{"name":"_updatedRegulationsTree","deprecated":false,"deprecationMessage":"","type":"IUiTreeData","optional":false,"description":"","line":37,"modifierKind":[121]},{"name":"contactRelationships","defaultValue":"new BehaviorSubject([])","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<IUiContactRelationship[]>","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"isFeatureEnabled","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"isSupplier","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"offcanvasId","defaultValue":"\'offcanvasRegulationsId\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33,"modifierKind":[123,144]},{"name":"regulationsTree","deprecated":false,"deprecationMessage":"","type":"Observable<IUiTreeData>","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"regulationsTreeCollapsedLevels","defaultValue":"[1, 2]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":34,"modifierKind":[123,144]},{"name":"regulationTierEnum","defaultValue":"UiRegulationTierEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35,"modifierKind":[123,144]}],"methodsClass":[{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onTreeUpdated","args":[{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveRegulations","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setContactRelationships","args":[{"name":"personGuid","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"personGuid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPreferencesClick","args":[{"name":"rel","type":"IUiContactRelationship","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"rel","type":"IUiContactRelationship","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"viewDetailsClick","args":[{"name":"org","type":"IUiOrganization","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"org","type":"IUiOrganization","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, Input, OnChanges, SimpleChanges, OnDestroy } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n// RxJs\\nimport { BehaviorSubject, Observable, Subject, map, take, takeUntil } from \'rxjs\';\\n// NgxTranslate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Services\\nimport { UiPersonService } from \'../../services/person.service\';\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\nimport { UiUserService } from \'@lib/services/user\';\\nimport { UiRegulationService } from \'../../services\';\\n// Interfaces\\nimport { IUiContactRelationship, IUiOrganization, IUiPersonDetails, IUiRegulationShort, IUiRegulationsTree } from \'../../interfaces\';\\nimport { IUiTreeData } from \'../tree-view/interfaces\';\\n// Enums\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\nimport { UiRegulationTierEnum } from \'../../enums\';\\n\\n@Component({\\n    selector: \'ui-organizations-section\',\\n    templateUrl: \'organizations-section.component.html\',\\n})\\nexport class UiAcpOrganizationSectionComponent implements OnInit, OnDestroy, OnChanges {\\n    @Input() public person: IUiPersonDetails;\\n\\n    public isSupplier: Observable<boolean>;\\n    public isFeatureEnabled: Observable<boolean>;\\n    public contactRelationships: BehaviorSubject<IUiContactRelationship[]> = new BehaviorSubject([]);\\n    public regulationsTree: Observable<IUiTreeData>;\\n    public readonly offcanvasId = \'offcanvasRegulationsId\';\\n    public readonly regulationsTreeCollapsedLevels = [1, 2];\\n    public readonly regulationTierEnum = UiRegulationTierEnum;\\n\\n    private _updatedRegulationsTree: IUiTreeData;\\n    private _selectedContactGuid: string;\\n    private _assignedStandaloneRegulations: IUiRegulationShort[] = [];\\n    private readonly _ngUnsubscribe: Subject<void> = new Subject<void>();\\n\\n    constructor(\\n        private _personService: UiPersonService,\\n        private _router: Router,\\n        private _featureService: AcpFeatureService,\\n        private _userService: UiUserService,\\n        private _regulationService: UiRegulationService,\\n        private _translateService: TranslateService,\\n        private _toastService: UiToastService\\n    ) {}\\n\\n    public ngOnInit() {\\n        // TODO: This is a temporary solution to check if user is a supplier user - we should implement a more robust solution\\n        this.isSupplier = this._userService.isSupplierUser();\\n        this.isFeatureEnabled = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo);\\n    }\\n\\n    public ngOnDestroy() {\\n        this._ngUnsubscribe.next(null);\\n        this._ngUnsubscribe.complete();\\n    }\\n\\n    public ngOnChanges(changes: SimpleChanges) {\\n        if (changes.person?.currentValue) {\\n            const personGuid = changes.person.currentValue.personGuid;\\n\\n            this.setContactRelationships(personGuid);\\n        }\\n    }\\n\\n    public viewDetailsClick(org: IUiOrganization) {\\n        this._router.navigate([`acp/company-profile/company/${org.id}`]);\\n    }\\n\\n    public setPreferencesClick(rel: IUiContactRelationship) {\\n        this._updatedRegulationsTree = null;\\n        this._assignedStandaloneRegulations = rel.regulations.filter((r) => r.isStandalone);\\n\\n        this.regulationsTree = this._regulationService.getRegulationsTree().pipe(\\n            map((tree: IUiRegulationsTree) => {\\n                return this._regulationService.mapRegulationsToTree(tree, rel.regulations);\\n            })\\n        );\\n        this._selectedContactGuid = rel.contactGuid;\\n    }\\n\\n    public saveRegulations() {\\n        if (!this._updatedRegulationsTree) {\\n            // ToDo\\n            // What to do if there are no changes??\\n            return;\\n        }\\n\\n        const selectedRegulations = this._regulationService\\n            .getSelectedRegulations(this._updatedRegulationsTree)\\n            .concat(this._assignedStandaloneRegulations);\\n\\n        this._personService\\n            .updateContactRegulations(this._selectedContactGuid, selectedRegulations)\\n            .pipe(take(1), takeUntil(this._ngUnsubscribe))\\n            .subscribe({\\n                next: () => {\\n                    this._toastService.show(\\n                        this._translateService.instant(\'PROFILE_MANAGER.REGULATIONS_UPDATE_SUCCESS\'),\\n                        UiToastTypesEnum.success\\n                    );\\n                    this.setContactRelationships(this.person.personGuid);\\n                },\\n                error: () => {\\n                    this._toastService.show(\\n                        this._translateService.instant(\'PROFILE_MANAGER.REGULATIONS_UPDATE_ERROR\'),\\n                        UiToastTypesEnum.danger\\n                    );\\n                },\\n            });\\n    }\\n\\n    public onTreeUpdated(tree: IUiTreeData) {\\n        this._updatedRegulationsTree = tree;\\n    }\\n\\n    private setContactRelationships(personGuid: string) {\\n        this._personService\\n            .getPersonContactRelationships(personGuid)\\n            .pipe(take(1), takeUntil(this._ngUnsubscribe))\\n            .subscribe((rels: IUiContactRelationship[]) => {\\n                this.contactRelationships.next(rels);\\n            });\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_regulationService","type":"UiRegulationService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_regulationService","type":"UiRegulationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","OnChanges"],"templateData":"<div *ngIf=\\"isFeatureEnabled | async\\" class=\\"mt-4\\">\\n    <h3>\\n        {{ \'PROFILE_MANAGER.ORGANIZATIONS\' | translate}}\\n    </h3>\\n    <p>\\n        {{ \'PROFILE_MANAGER.ORGANIZATIONS_DESCRIPTION\' | translate}}\\n    </p>\\n\\n    <div *ngFor=\\"let rel of contactRelationships | async\\" class=\\"card mt-4\\">\\n        <div class=\\"card-body p-0  organization-row\\">\\n            <div class=\\"d-flex flex-row justify-content-between p-4\\">\\n                <div class=\\"d-flex flex-column \\">\\n                    <h5>\\n                        {{ rel.organization.name }}\\n                    </h5>\\n                    <div class=\\"small text-gray-700\\">\\n                        {{ rel.organization.tradeNames | uiJoin: \' \\\\u2022 \'}}\\n                    </div>\\n                    <div *ngIf=\\"rel.organization.dunsNumber\\" class=\\"small text-gray-700\\">\\n                        \x3c!-- ToDo\\n                        Double check this D&B label --\x3e\\n                        {{ \'PROFILE_MANAGER.D&B\' | translate}}: {{ rel.organization.dunsNumber}}\\n                    </div>\\n                    <div class=\\"small text-gray-700\\">\\n                        {{ rel.organization.domainNames | uiJoin: \' \\\\u2022 \'}}\\n                    </div>\\n                </div>\\n                <div>\\n                    <button *ngIf=\\"(isSupplier | async) === false\\" type=\\"button\\" class=\\"btn btn-link p-0\\"\\n                        (click)=\\"viewDetailsClick(rel.organization)\\">\\n                        {{ \'PROFILE_MANAGER.VIEW_DETAILS\' | translate}}\\n                        <i class=\\"bi bi-chevron-right\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n            <hr>\\n            <div class=\\"px-4\\">\\n                <div class=\\"d-flex justify-content-between mb-3\\">\\n                    <div>\\n                        {{ \'PROFILE_MANAGER.RECEIVE_REQUESTS_ABOUT\' | translate }}:\\n                    </div>\\n                    <button type=\\"button\\" class=\\"btn btn-link p-0\\" data-bs-toggle=\\"offcanvas\\"\\n                        [attr.data-bs-target]=\\"\'#\' + offcanvasId\\" [attr.aria-controls]=\\"offcanvasId\\"\\n                        (click)=\\"setPreferencesClick(rel)\\">\\n                        {{ \'PROFILE_MANAGER.SET_PREFERENCES\' | translate }}\\n                    </button>\\n                </div>\\n                <div class=\\"d-flex flex-wrap gap-2 mb-4\\">\\n                    <div *ngIf=\\"rel.regulations?.length;then custom_regulations else no_regulations\\"></div>\\n                    <ng-template #custom_regulations>\\n                        <span *ngFor=\\"let reg of rel.regulations\\"\\n                            class=\\"badge badge-category-5 rounded-pill noHover lg\\">\\n                            \x3c!-- We don\'t want to see All Regulations and Standalone Program as pills --\x3e\\n                            <span *ngIf=\\"!(reg.regulationTierId === regulationTierEnum.all\\n                                || (reg.regulationTierId === regulationTierEnum.program && reg.isStandalone))\\">\\n                                {{ reg.regulationName }}\\n                            </span>\\n                        </span>\\n                    </ng-template>\\n                    <ng-template #no_regulations>\\n                        <span class=\\"small text-gray-700\\">\\n                            {{ \'PROFILE_MANAGER.NO_REGULATIONS\' | translate }}\\n                        </span>\\n                    </ng-template>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<ui-offcanvas [domId]=\\"offcanvasId\\" title=\\"PROFILE_MANAGER.SET_PREFERENCES\\" [showFooter]=\\"true\\"\\n    (saveClicked)=\\"saveRegulations()\\">\\n    <ui-tree-view [treeData]=\\"regulationsTree | async\\" [collapsedLevels]=\\"regulationsTreeCollapsedLevels\\"\\n        (treeUpdated)=\\"onTreeUpdated($event)\\"></ui-tree-view>\\n</ui-offcanvas>"},{"name":"UiAcpProfileManagerComponent","id":"component-UiAcpProfileManagerComponent-058d05884b9af9652a1237357862c9361f34bafec2eb33399a73679deb321ad6e92d655893660eef9c5caedb48843be5ea3e890ddf89ef3020a20598703c40c9","file":"libs/ui/src/lib/modules/user-auth-manager/profile-manager.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-profile-manager","styleUrls":["./profile-manager.scss"],"styles":[],"templateUrl":["./profile-manager.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiUser>","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"isAssentee","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"person","deprecated":false,"deprecationMessage":"","type":"Observable<IUiPersonDetails>","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"sessions","deprecated":false,"deprecationMessage":"","type":"UiAcpUserSession[]","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"user","deprecated":false,"deprecationMessage":"","type":"UiUserService","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from \'@angular/core\';\\n// RxJs\\nimport { Observable, concatMap, map, of, shareReplay, tap } from \'rxjs\';\\n// Services\\nimport { UiAcpProfileManagerService } from \'./services/profile-manager-service\';\\nimport { UiPageHeaderService } from \'@lib/modules/layout/services/page-header-service/page-header.service\';\\nimport { UiLayoutService } from \'@lib/services/layout\';\\nimport { UiPersonService } from \'./services/person.service\';\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\n// Interfaces\\nimport { IUiPersonDetails } from \'./interfaces\';\\n// Enums\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\nimport { IUiUser, UiUserService } from \'@lib/services/user\';\\nimport { UiAcpUserSession } from \'./models/session.model\';\\n\\n// Enums\\n@Component({\\n    selector: \'ui-acp-profile-manager\',\\n    templateUrl: \'./profile-manager.component.html\',\\n    changeDetection: ChangeDetectionStrategy.OnPush,\\n    styleUrls: [\'./profile-manager.scss\'],\\n})\\nexport class UiAcpProfileManagerComponent implements OnInit {\\n    public user: UiUserService;\\n    public userEmail: string;\\n    public authenticatedUser$: Observable<IUiUser>;\\n    public sessions: UiAcpUserSession[];\\n    public person: Observable<IUiPersonDetails>;\\n    public isAssentee: Observable<boolean>;\\n\\n    constructor(\\n        private _profileManagerService: UiAcpProfileManagerService,\\n        private _pageHeaderService: UiPageHeaderService,\\n        private _layoutService: UiLayoutService,\\n        private _personService: UiPersonService,\\n        private _featureService: AcpFeatureService,\\n        private _userService: UiUserService,\\n        private _changeDetectorRef: ChangeDetectorRef\\n    ) {}\\n\\n    public ngOnInit(): void {\\n        this._layoutService.showGrayBackground = true;\\n        // ToDo\\n        // Use the global configuration when it is applied\\n        // this._layoutService.showMargins = false;\\n        // this._layoutService.showContainer = true;\\n\\n        this._pageHeaderService.showPageHeader = true;\\n        this._pageHeaderService.pageTitle = \'COMMON.ACCOUNT\';\\n\\n        // Hint\\n        // This prevents multiple calls to the persons endpoint by sharing the same value between child components\\n        this.person = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo).pipe(\\n            concatMap((enabled: boolean) => {\\n                // ToDo\\n                // Remove the call to the feature service when everything is enabled\\n                // And call directly person service\\n                return enabled ? this._personService.getLoggedUserPersonDetails() : of(null);\\n            }),\\n            shareReplay()\\n        );\\n        this.authenticatedUser$ = this._userService.authenticatedUser$;\\n\\n        this.authenticatedUser$.subscribe((user) => {\\n            if (user.id) {\\n                this._profileManagerService.getUserSessions(user.id).pipe(\\n                    tap((res) => {\\n                        this.sessions = res;\\n                        this._changeDetectorRef.detectChanges(); // Trigger change detection\\n                    })\\n                ).subscribe();\\n            }\\n        });\\n\\n        this.isAssentee = this.person.pipe(\\n            map((person) => {\\n                return person.email.endsWith(\'assent.com\') || person.email.endsWith(\'assentcompliance.com\');\\n            })\\n        );\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".container {\\n    max-width: 720px;\\n    width: 100%;\\n    padding: 0;\\n}\\n","styleUrl":"./profile-manager.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":""},{"name":"_pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":""},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":31,"jsdoctags":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_personService","type":"UiPersonService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"\x3c!-- ToDo\\n    Remove this container class\\n    when the global configuration - this._layoutService.showContainer\\n    is globally applied\\n--\x3e\\n<div class=\\"container\\">\\n    <h3 class=\\"mb-4\\">{{ \'PROFILE_MANAGER.ABOUT_YOU\' | translate}}</h3>\\n    <ui-acp-profile-section [person]=\\"person | async\\"></ui-acp-profile-section>\\n    \\n    <div *ngIf=\\"(isAssentee | async) === false\\">\\n        <div class=\\"mt-4\\"></div>\\n        <ui-acp-contact-information-section [person]=\\"person | async\\"></ui-acp-contact-information-section>\\n\\n        <ui-organizations-section [person]=\\"person | async\\"></ui-organizations-section>\\n    </div>\\n\\n    <div *ngIf=\\"sessions\\">\\n        <ui-acp-session-list [sessions]=\\"sessions\\"></ui-acp-session-list>\\n    </div>\\n</div>\\n"},{"name":"UiAcpProfileSectionComponent","id":"component-UiAcpProfileSectionComponent-fee1ddc64820a757115536baae8a11ef26bf6ca4ec92f6ba0c7f643090ea414df52fefe2aae119f53368c53694126c13252806d7a9088554c178c4973acad91e","file":"libs/ui/src/lib/modules/user-auth-manager/components/profile-section/profile-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-profile-section","styleUrls":[],"styles":[],"templateUrl":["profile-section.component.html"],"viewProviders":[],"inputsClass":[{"name":"person","deprecated":false,"deprecationMessage":"","line":28,"type":"IUiPersonDetails","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_person","deprecated":false,"deprecationMessage":"","type":"IUiPersonDetails","optional":false,"description":"","line":25,"modifierKind":[121]},{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiUser>","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"fullName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"isFeatureEnabled","deprecated":false,"deprecationMessage":"","type":"Observable<boolean>","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"user","deprecated":false,"deprecationMessage":"","type":"UiUserService","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n// RxJs\\nimport { Observable } from \'rxjs\';\\n// Service\\nimport { AcpFeatureService } from \'@app/modules/shared/feature-management/services\';\\n\\n// Interfaces\\nimport { IUiPersonDetails } from \'../../interfaces\';\\n// Enums\\nimport { AcpFeatureEnum } from \'@app/modules/shared/feature-management/enums\';\\nimport { IUiUser, UiUserService } from \'@lib/services/user\';\\n\\n@Component({\\n    selector: \'ui-acp-profile-section\',\\n    templateUrl: \'profile-section.component.html\',\\n})\\nexport class UiAcpProfileSectionComponent implements OnInit {\\n    public fullName: string;\\n    public isFeatureEnabled: Observable<boolean>;\\n    public user: UiUserService;\\n    public userEmail: string;\\n    public authenticatedUser$: Observable<IUiUser>;\\n\\n    private _person: IUiPersonDetails;\\n\\n    @Input()\\n    private set person(value: IUiPersonDetails) {\\n        this._person = value;\\n        this.fullName = [this._person?.firstName, this._person?.lastName].filter((s) => s !== null).join(\' \');\\n    }\\n\\n    public get person(): IUiPersonDetails {\\n        return this._person;\\n    }\\n\\n    constructor(private _featureService: AcpFeatureService,\\n               private _userService: UiUserService) {\\n        this.fullName = this.person?.firstName + \' \' + this.person?.lastName;\\n    }\\n\\n    public ngOnInit() {\\n        this.isFeatureEnabled = this._featureService.isFeatureEnabled(AcpFeatureEnum.allowSuppliersToViewTheirOwnNetworkInfo);\\n\\n        this.authenticatedUser$ = this._userService.authenticatedUser$;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""}],"line":35,"jsdoctags":[{"name":"_featureService","type":"AcpFeatureService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"person":{"name":"person","setSignature":{"name":"person","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":28,"jsdoctags":[{"name":"value","type":"IUiPersonDetails","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"person","type":"","returnType":"IUiPersonDetails","line":33}}},"templateData":"<div *ngIf=\\"isFeatureEnabled | async\\" class=\\"card\\">\\n    <div class=\\"card-header\\">\\n        {{ \'PROFILE_MANAGER.PERSONAL_INFORMATION\' | translate }}\\n    </div>\\n    <div class=\\"card-body\\">\\n        <div class=\\"card-content\\">\\n            <p class=\\"text-gray-700\\">{{ \'COMMON.FULL_NAME\' | translate }}</p>\\n            <p>{{ fullName || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\n            <hr class=\\"divider\\">\\n            <p class=\\"text-gray-700\\">{{ \'COMMON.JOB_TITLE\' | translate}}</p>\\n            <p>{{ person?.jobTitle || \'COMMON.NOT_PROVIDED\' | translate }}</p>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiAcpSessionItemComponent","id":"component-UiAcpSessionItemComponent-29a333ae5d72a80ae587d1122b2ee0927beb1791a4ac68980a0486a3e159318b4f7291ff010e47ef24a5a1537600f4bdcec981f9a1386eb2a84bb7dcc4365fc3","file":"libs/ui/src/lib/modules/user-auth-manager/components/session-item/session-item.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-session-item","styleUrls":["./session-item.component.scss"],"styles":[],"templateUrl":["./session-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"session","deprecated":false,"deprecationMessage":"","line":10,"type":"UiAcpUserSession","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"sessionItem","deprecated":false,"deprecationMessage":"","type":"UiAcpUserSessionItem","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiAcpUserSession, UiAcpUserSessionItem } from \'../../models/session.model\';\\n\\n@Component({\\n    selector: \'ui-acp-session-item\',\\n    templateUrl: \'./session-item.component.html\',\\n    styleUrls: [\'./session-item.component.scss\']\\n})\\nexport class UiAcpSessionItemComponent implements OnInit {\\n    @Input() public session: UiAcpUserSession;\\n\\n    public sessionItem: UiAcpUserSessionItem;\\n\\n    constructor() { }\\n\\n    public ngOnInit(): void { }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"a {\\n    margin-top: -70px;\\n    margin-left: 8px;\\n}\\n\\np {\\n    margin-left: 20px;\\n}\\n\\n.currentSessionText {\\n    margin-top: -5px;\\n    margin-bottom: 10px;\\n}\\n\\n.sessionDataFirstRow {\\n    margin-bottom: 0px;\\n}\\n\\n.sessionDataSecondRow {\\n    margin-bottom: 5px;\\n}\\n","styleUrl":"./session-item.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"implements":["OnInit"],"templateData":"<p class=\\"sessionDataFirstRow\\">{{ session?.browser }} / {{ \'COMMON.IP\' | translate }} {{ session?.IP }}</p>\\n<p class=\\"sessionDataSecondRow\\">{{ \'COMMON.LAST_ACTIVITY\' | translate }} {{ session?.lastActivity }}</p>\\n<p class=\\"currentSessionText\\" *ngIf=\\"session?.isCurrent\\">\\n    <i class=\\"bi bi-check-circle-fill text-success\\"></i>\\n    {{ \'COMMON.YOUR_CURRENT_SESSION\' | translate }}\\n</p>\\n"},{"name":"UiAcpSessionListComponent","id":"component-UiAcpSessionListComponent-eec3f0201358322aaa66ba86646374ec9c5b9893c40f66b0e1378120fa971d1c898fa26c5180022997ec9a91ccb30782fdf416a715cec820e276326753d10ecc","file":"libs/ui/src/lib/modules/user-auth-manager/components/session-list/session-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-session-list","styleUrls":["./session-list.component.scss"],"styles":[],"templateUrl":["./session-list.component.html"],"viewProviders":[],"inputsClass":[{"name":"sessions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":16,"type":"UiAcpUserSession[]","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"dontRecognizeClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n// NgB\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\n// Components\\nimport { UiAcpUserSession } from \'../../models/session.model\';\\nimport { UiAcpConfirmDeleteSessionModalComponent } from \'../confirm-delete-session-modal/confirm-delete-session-modal.component\';\\n\\n@Component({\\n    selector: \'ui-acp-session-list\',\\n    templateUrl: \'./session-list.component.html\',\\n    styleUrls: [\'./session-list.component.scss\']\\n})\\nexport class UiAcpSessionListComponent implements OnInit {\\n\\n    @Input() public sessions: UiAcpUserSession[] = [];\\n\\n    constructor(\\n        private _modalService: NgbModal\\n    ) { }\\n\\n    public ngOnInit(): void { }\\n\\n    public dontRecognizeClick() {\\n        this._modalService.open(UiAcpConfirmDeleteSessionModalComponent, {\\n            centered: true,\\n            scrollable: false });\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".card-body {\\n    max-height: 400px;\\n}\\n\\n.sessions-list-title {\\n    max-width: 720px;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\\n.sessions-list-description {\\n    margin-left: auto;\\n    margin-right: auto;\\n    max-width: 720px;\\n    margin-bottom: 10px;\\n}\\n\\n.sessions-list-card {\\n    max-width: 720px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    display: flex;\\n    justify-content: center;\\n}","styleUrl":"./session-list.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h3 class=\\"mt-4 mb-3 sessions-list-title\\">{{ \'COMMON.DEVICES_ACTIVE_SESSIONS\' | translate }}</h3>\\n<p class=\\"sessions-list-description\\"> {{ \'COMMON.THESE_ARE_YOUR_SESSIONS\' | translate }}</p>\\n<div class=\\"card sessions-list-card\\">\\n    <div class=\\"card-body overflow-auto\\">\\n      <div class=\\"p-2\\" *ngFor=\\"let session of sessions; let i = index\\">\\n        <i class=\\"bi bi-laptop-fill\\"></i>\\n        <strong> {{ session?.OS }} {{ \'COMMON.DEVICE\' | translate }}</strong>\\n        <ui-acp-session-item [session]=\\"session\\"></ui-acp-session-item>\\n      </div>\\n    </div>\\n    <div class=\\"d-flex align-items-center p-2\\" *ngIf=\\"sessions.length > 1\\">\\n      <a type=\\"button\\" class=\\"btn btn-link\\" (click)=\\"dontRecognizeClick()\\">{{ \'COMMON.DONT_RECOGNIZE_A_SESSION\' | translate }}</a>\\n      <i\\n        class=\\"bi bi-question-circle-fill notCurrentIcon\\"\\n        [placement]=\\"\'end\'\\"\\n        [container]=\\"body\\"\\n        [ngbTooltip]=\\"tooltipContent\\"\\n        [tooltipClass]=\\"\'tooltip-md\'\\"\\n      ></i>\\n    </div>\\n    <ng-template #tooltipContent>\\n      <div class=\\"customTooltip\\">\\n          {{ \'COMMON.CLICK_SESSION_SIGN_OUT\' | translate }} {{ \'COMMON.ALSO_CONSIDER\' | translate }}\\n          <ul>\\n              <li>{{ \'COMMON.CHANGING_YOUR_PASSWORD\' | translate }}</li>\\n              <li>{{ \'COMMON.CONTACTING_ASSENT\' | translate }}</li>\\n          </ul>\\n      </div>\\n  </ng-template>\\n</div>\\n"},{"name":"UiAcpUserDetailsComponent","id":"component-UiAcpUserDetailsComponent-529779a9ed0a549c9ecc4b7c51ee21b6c0b1d24dbdc64623a631a5ce627cc70e89201d70e56a831d04c6502b6a76e59e2dacde1257f6c46779d5281c55fd566a","file":"libs/ui/src/lib/modules/user-auth-manager/components/user-details/user-details.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-acp-user-details","styleUrls":["./user-details.component.scss"],"styles":[],"templateUrl":["./user-details.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiUser>","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"sessions","deprecated":false,"deprecationMessage":"","type":"UiAcpUserSession[]","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"user","deprecated":false,"deprecationMessage":"","type":"UiUserService","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectorRef, Component, OnInit } from \'@angular/core\';\\n// RxJS\\nimport { Observable } from \'rxjs\';\\nimport { tap } from \'rxjs/operators\';\\n// Libs\\nimport { IUiUser, UiUserService } from \'@lib/services/user\';\\n// Services\\nimport { UiAcpProfileManagerService } from \'../../services/profile-manager-service\';\\n// Components\\nimport { UiAcpUserSession } from \'../../models/session.model\';\\n\\n@Component({\\n    selector: \'ui-acp-user-details\',\\n    templateUrl: \'./user-details.component.html\',\\n    styleUrls: [\'./user-details.component.scss\']\\n})\\nexport class UiAcpUserDetailsComponent implements OnInit {\\n    public user: UiUserService;\\n    public userEmail: string;\\n    public authenticatedUser$: Observable<IUiUser>;\\n    public sessions: UiAcpUserSession[];\\n\\n    constructor(\\n        private _profileManagerService: UiAcpProfileManagerService,\\n        private _userService: UiUserService,\\n        private _changeDetectorRef: ChangeDetectorRef\\n    ) { }\\n\\n    public ngOnInit() {\\n        this.authenticatedUser$ = this._userService.authenticatedUser$;\\n\\n        this.authenticatedUser$.subscribe((user) => {\\n            if (user.id) {\\n                this._profileManagerService.getUserSessions(user.id).pipe(\\n                    tap((res) => {\\n                        this.sessions = res;\\n                        this._changeDetectorRef.detectChanges(); // Trigger change detection\\n                    })\\n                ).subscribe();\\n            }\\n        });\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-control {\\n    width: 500px;\\n}\\n","styleUrl":"./user-details.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"_profileManagerService","type":"UiAcpProfileManagerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"\\n<div class=\\"card\\">\\n    <div class=\\"card-header\\">\\n      {{ \'USER_MANAGEMENT.USER_INFORMATION\' | translate }}\\n    </div>\\n    <div class=\\"card-body\\">\\n        <h5 class=\\"card-title\\">{{ \'COMMON.EMAIL\' | translate }}</h5>\\n        <input value=\'{{ (authenticatedUser$ | async)?.email }}\'\\n        class=\\"form-control\\" type=\\"text\\" disabled />\\n    </div>\\n</div>\\n"},{"name":"UiActionButtonsComponent","id":"component-UiActionButtonsComponent-21e7f23dc284fb655f7dd3b6fc60fec4d97db16d5975e49a379cb6a4b9e00b61c71d83fca0904bbc75d93f65e4def9dfcc67304bd706b2038f168334dbff422a","file":"libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-action-buttons","styleUrls":["./action-buttons.component.scss"],"styles":[],"templateUrl":["./action-buttons.component.html"],"viewProviders":[],"inputsClass":[{"name":"form","deprecated":false,"deprecationMessage":"","line":14,"type":"UiFormBaseComponent","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"showClearButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"showSetButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiFormBaseComponent } from \'../form-base/form-base.component\';\\n\\n@Component({\\n    selector: \'ui-action-buttons\',\\n    templateUrl: \'./action-buttons.component.html\',\\n    styleUrls: [\'./action-buttons.component.scss\'],\\n})\\n\\nexport class UiActionButtonsComponent implements OnInit {\\n    @Input() public id: string;\\n    @Input() public showClearButton = true;\\n    @Input() public showSetButton = true;\\n    @Input() public form: UiFormBaseComponent;\\n\\n    constructor() {}\\n\\n    public ngOnInit(): void { }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./action-buttons.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":14},"implements":["OnInit"],"templateData":"<div *ngIf=\\"form !== undefined\\">\\n    \x3c!-- View Mode --\x3e\\n    <button [id]=\\"id + \'_EditButton\'\\" *ngIf=\\"!form.editMode\\" class=\\"btn btn-primary ms-3\\" (click)=\\"form.onEditBtnClick($event)\\">{{ \'COMMON.EDIT\' | translate }}</button>\\n\\n    \x3c!-- Edit Mode --\x3e\\n    <button [id]=\\"id + \'_SetButton\'\\" *ngIf=\\"form.editMode && showSetButton\\" class=\\"btn btn-link me-2\\" (click)=\\"form.onSetPayloadBtnClick($event)\\" >\\n        Set\\n    </button>\\n    <button [id]=\\"id + \'_ClearButton\'\\" *ngIf=\\"form.editMode && showClearButton\\" class=\\"btn btn-link me-2\\" (click)=\\"form.onClearBtnClick($event)\\" >\\n        {{ \'COMMON.CLEAR\' | translate }}\\n    </button>\\n    <div *ngIf=\\"form.editMode && (showSetButton || showClearButton)\\" class=\\"vr  ms-3 me-3\\"></div>\\n    <button [id]=\\"id + \'_SaveButton\'\\" *ngIf=\\"form.editMode\\" class=\\"btn btn-primary ms-3 me-2\\" (click)=\\"form.onSaveBtnClick($event)\\" [disabled]=\\"form.form.invalid\\">\\n        {{ \'COMMON.SAVE\' | translate }}\\n    </button>\\n    <button [id]=\\"id + \'_CancelButton\'\\" *ngIf=\\"form.editMode\\" class=\\"btn btn-link\\" (click)=\\"form.onCancelBtnClick($event)\\">{{ \'COMMON.CANCEL\' | translate }}</button>\\n</div>"},{"name":"UiActionButtonsNewComponent","id":"component-UiActionButtonsNewComponent-a4302acc25ddbbbfeb51b5e996e6735460068a3b37fc2f3776d4013a5c1ce1961c28db7da3d04c8b239ebac0104fcd4e28d4543ea3ebf9df3b1de34e70ca2229","file":"libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-action-buttons-new","styleUrls":["./action-buttons.component.scss"],"styles":[],"templateUrl":["./action-buttons.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":12,"type":"Array<IUiActionButton>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"UiButtonSizeEnum","defaultValue":"UiButtonSizeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n// import { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\nimport { IUiActionButton } from \'../../interfaces/action-button.interface\';\\nimport { UiButtonSizeEnum } from \'../../enums/action-button-size.enum\';\\n\\n@Component({\\n    selector: \'ui-action-buttons-new\',\\n    templateUrl: \'./action-buttons.component.html\',\\n    styleUrls: [\'./action-buttons.component.scss\'],\\n})\\nexport class UiActionButtonsNewComponent implements OnInit {\\n    @Input() public actionButtons: Array<IUiActionButton> = [];\\n    public UiButtonSizeEnum = UiButtonSizeEnum;\\n    constructor() {}\\n\\n    public ngOnInit(): void {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n\\n.btn-seperator{\\n    border-right: 1px solid $gray-500;\\n    margin: 5px;\\n}","styleUrl":"./action-buttons.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"implements":["OnInit"],"templateData":"<div class=\\"d-flex flex-row-reverse gap-2\\">\\n    <ng-container *ngFor=\\"let btn of actionButtons\\">\\n        <ui-button\\n            *ngIf=\\"btn.type !== \'btn-seperator\'\\"\\n            [id]=\\"btn.id\\"\\n            [text]=\\"btn.text\\"\\n            [tooltipText]=\\"btn.tooltipText\\"\\n            [type]=\\"btn.type\\"\\n            [size]=\\"btn.size\\"\\n            [icon]=\\"btn.icon\\"\\n            [disabled]=\\"btn.disabled\\"\\n            [clicked]=\\"btn.clicked\\"\\n            [inversed]=\\"btn.inversed\\"\\n            >\\n            \x3c!-- TODO: prefix/suffix not working as expected\\n                [iconLocation]=\\"btn.iconLocation\\"\\n            --\x3e\\n        </ui-button>\\n        <div class=\\"btn-seperator\\" *ngIf=\\"btn.type === \'btn-seperator\'\\"></div>\\n    </ng-container>\\n\\n</div>\\n"},{"name":"UiActionButtonsRendererComponent","id":"component-UiActionButtonsRendererComponent-b59e2123287a53169f311c39f11b7d62e27c411a9d001eb8257f9f8eda79e27397e1569317bbb49bb7292b923ebe16abda656b6e4a24c5aa069afbd26ea9a700","file":"libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-action-buttons-renderer","styleUrls":["./action-buttons-renderer.component.scss"],"styles":[],"templateUrl":["./action-buttons-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"btnArray","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"dropdownComp","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":12,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdown\'"}],"modifierKind":[123]},{"name":"inlineIcons","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"itemId","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"rowId","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"showIconsInMenu","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"showLabel","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onItemClick","args":[{"name":"item","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refresh","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild } from \'@angular/core\';\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\nimport { ICellRendererParams } from \'ag-grid-community\';\\n\\n@Component({\\n    selector: \'ui-action-buttons-renderer\',\\n    templateUrl: \'./action-buttons-renderer.component.html\',\\n    styleUrls: [\'./action-buttons-renderer.component.scss\'],\\n})\\nexport class UiActionButtonsRendererComponent implements OnInit, ICellRendererAngularComp {\\n    @ViewChild(\'dropdown\') public dropdownComp: NgbDropdown;\\n    public params: any;\\n    public btnArray = [];\\n    public inlineIcons = false;\\n    public itemId;\\n    public rowId;\\n    public showIconsInMenu = false;\\n    public showLabel = false;\\n\\n    constructor() {}\\n\\n    public refresh(params: any): boolean {\\n        this.params = params;\\n        this.btnArray = params.btnArr;\\n        this.inlineIcons = params.inlineIcons;\\n        this.itemId = params.itemId;\\n        this.rowId = params.rowId;\\n        this.showIconsInMenu = params.showIconsInMenu;\\n        this.showLabel = params.showLabel;\\n\\n        return true;\\n    }\\n\\n    public ngOnInit(): void {}\\n\\n    public agInit(params: any): void {\\n        this.params = params;\\n        this.btnArray = params.btnArr;\\n        this.inlineIcons = params.inlineIcons;\\n        this.itemId = params.itemId;\\n        this.rowId = params.rowId;\\n        this.showIconsInMenu = params.showIconsInMenu;\\n        this.showLabel = params.showLabel;\\n    }\\n\\n    public onItemClick(item) {\\n        item.clicked(this.itemId);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.column-gap-5 {\\n    column-gap: 5px !important;\\n}\\n\\n.btn-white {\\n    color: $primary;\\n    background-color: $white;\\n    border: none;\\n    padding: 0;\\n    padding-left: 1px;\\n    padding-top: 1px;\\n    line-height: 1;\\n    width: 30px;\\n    height: 30px;\\n    border-radius: 50%;\\n    font-size: 1rem;\\n\\n    &:disabled {\\n        color: $gray-500;\\n    }\\n}\\n\\n.dropdown-toggle::after {\\n    display: none;\\n}","styleUrl":"./action-buttons-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":19},"implements":["OnInit","ICellRendererAngularComp"],"templateData":"\x3c!-- <div [id]=\\"\'actionBtn-\' + rowId\\" class=\\"d-flex justify-content-center column-gap-5 visually-hidden\\"> --\x3e\\n<div [id]=\\"\'actionBtn-\' + rowId\\" class=\\"d-flex justify-content-center column-gap-5\\">\\n    <div *ngIf=\\"inlineIcons !== true\\">\\n        \x3c!-- If only 1 item --\x3e\\n        <div *ngIf=\\"btnArray !== undefined && btnArray.length === 1\\" class=\\"d-inline-block\\">\\n            <button\\n                *ngIf=\\"btnArray[0].icon !== undefined && !showLabel\\"\\n                type=\\"button\\"\\n                class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\n                container=\\"body\\"\\n                ngbTooltip=\\"{{btnArray[0].text | translate}}\\"\\n                [placement]=\\"\'top\'\\"\\n                [tooltipClass]=\\"tooltip-sm\\"\\n                [disabled]=\\"btnArray[0].disabled === true\\"\\n                (click)=\\"btnArray[0].clicked(params)\\">\\n                <i class=\\"bi\\" [ngClass]=\\"btnArray[0].icon\\"></i>\\n            </button>\\n            <button\\n                *ngIf=\\"btnArray[0].icon === undefined || showLabel\\"\\n                type=\\"button\\"\\n                class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\n                [disabled]=\\"btnArray[0].disabled === true\\"\\n                (click)=\\"btnArray[0].clicked(params)\\">\\n                <span>{{btnArray[0].text | translate}}</span>\\n            </button>\\n        </div>\\n\\n        \x3c!-- If more then 1 item --\x3e\\n        <div *ngIf=\\"btnArray !== undefined && btnArray.length > 1\\" ngbDropdown class=\\"d-inline-block\\" container=\\"body\\" #dropdown=\\"ngbDropdown\\">\\n            <button\\n                type=\\"button\\"\\n                class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\n                ngbDropdownToggle\\n                container=\\"body\\"\\n                ngbTooltip=\\"{{\'COMMON.ACTIONS\' | translate}}\\"\\n                [placement]=\\"\'top\'\\"\\n                [tooltipClass]=\\"\'tooltip-sm\'\\"\\n                >\\n                <i class=\\"bi bi-three-dots-vertical\\"></i>\\n            </button>\\n            <div [id]=\\"\'actionMenu\'\\" ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\" >\\n                <ng-container *ngFor=\\"let item of btnArray\\">\\n                    <button *ngIf=\\"item.divider !== true && item.visible !== false\\" ngbDropdownItem [disabled]=\\"item.disabled === true\\" (click)=\\"item.clicked(params)\\">\\n                        <i *ngIf=\\"showIconsInMenu === true\\" class=\\"bi me-2\\" [ngClass]=\\"item.icon\\"></i>\\n                        {{item.text | translate}}\\n                    </button>\\n                    <div *ngIf=\\"item.divider === true && item.visible === true\\" class=\\"dropdown-divider\\"></div>\\n                </ng-container>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <div *ngIf=\\"inlineIcons === true\\">\\n        <ng-container *ngFor=\\"let item of btnArray\\">\\n            <button\\n                *ngIf=\\"item.divider !== true\\"\\n                type=\\"button\\"\\n                class=\\"btn-white btn-md d-inline-block\\"\\n                container=\\"body\\"\\n                ngbTooltip=\\"{{item.text | translate}}\\"\\n                [placement]=\\"\'top\'\\"\\n                [tooltipClass]=\\"tooltip-sm\\"\\n                [disabled]=\\"item.disabled\\"\\n                (click)=\\"item.clicked(params)\\">\\n                <i class=\\"bi\\" [ngClass]=\\"item.icon\\"></i>\\n            </button>\\n        </ng-container>\\n    </div>\\n</div>"},{"name":"UiAlertComponent","id":"component-UiAlertComponent-d3006e6a54aaf15c95ac74703d03b2a6ad3fe081c37fa495393336ed4de57c98bad766edcb14bdb5cf9e4e9574de5568a4e7e794680ee705034db99f250ce8cf","file":"libs/ui/src/lib/modules/alert/alert.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-alert","styleUrls":["./alert.component.scss"],"styles":[],"templateUrl":["./alert.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","defaultValue":"new Array<{ id: string; buttonText: string; disabled: boolean; clicked: () => { any } }>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe action buttons to be displayed in the alert.\\nEach button has an id, buttonText, disabled state, and a clicked callback function.\\n","description":"<p>The action buttons to be displayed in the alert.\\nEach button has an id, buttonText, disabled state, and a clicked callback function.</p>\\n","line":71,"type":"any","decorators":[]},{"name":"dismissible","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1661,"end":1684,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1662,"end":1666,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1667,"end":1676,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1668,"end":1675,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":133}}},{"pos":1684,"end":1703,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1685,"end":1692,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nWhether the alert is dismissible.\\n","description":"<p>Whether the alert is dismissible.</p>\\n","line":59,"type":"boolean","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":995,"end":1015,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":996,"end":1000,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1001,"end":1009,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1002,"end":1008,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}}],"rawdescription":"\\n\\nThe unique identifier for the alert.\\n","description":"<p>The unique identifier for the alert.</p>\\n","line":31,"type":"string","decorators":[]},{"name":"layout","defaultValue":"UiAlertLayoutEnum.INLINE","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2217,"end":2285,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2218,"end":2222,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":2223,"end":2277,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2224,"end":2276,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":186,"types":[{"pos":2224,"end":2249,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":2224,"end":2249,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":160,"left":{"pos":2224,"end":2241,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"UiAlertLayoutEnum"},"right":{"pos":2242,"end":2249,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"STACKED"}}},{"pos":2251,"end":2276,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":2251,"end":2276,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":160,"left":{"pos":2251,"end":2269,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"UiAlertLayoutEnum"},"right":{"pos":2270,"end":2276,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"INLINE"}}}]}}},{"pos":2285,"end":2324,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2286,"end":2293,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiAlertLayoutEnum.INLINE</p>\\n"}],"rawdescription":"\\n\\nThe layout of the alert, either stacked or inline.\\n","description":"<p>The layout of the alert, either stacked or inline.</p>\\n","line":78,"type":"UiAlertLayoutEnum.STACKED | UiAlertLayoutEnum.INLINE","decorators":[]},{"name":"showIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1337,"end":1360,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1338,"end":1342,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1343,"end":1352,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1344,"end":1351,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":133}}},{"pos":1360,"end":1379,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1361,"end":1368,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nWhether to show an icon in the alert.\\n","description":"<p>Whether to show an icon in the alert.</p>\\n","line":45,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"UiAlertSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1465,"end":1496,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1466,"end":1470,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1471,"end":1488,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1472,"end":1487,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":1472,"end":1487,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"UiAlertSizeEnum"}}}},{"pos":1496,"end":1533,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1497,"end":1504,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiAlertSizeEnum.MEDIUM</p>\\n"}],"rawdescription":"\\n\\nThe size of the alert.\\n","description":"<p>The size of the alert.</p>\\n","line":52,"type":"UiAlertSizeEnum","decorators":[]},{"name":"text","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":878,"end":898,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":879,"end":883,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":884,"end":892,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":885,"end":891,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}}],"rawdescription":"\\n\\nThe text content of the alert.\\n","description":"<p>The text content of the alert.</p>\\n","line":25,"type":"string","decorators":[]},{"name":"title","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1793,"end":1813,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1794,"end":1798,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1799,"end":1807,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1800,"end":1806,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}}],"rawdescription":"\\n\\nThe title of the alert.\\n","description":"<p>The title of the alert.</p>\\n","line":65,"type":"string","decorators":[]},{"name":"type","defaultValue":"UiAlertTypeEnum.warning","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1135,"end":1166,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1136,"end":1140,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1141,"end":1158,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1142,"end":1157,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":1142,"end":1157,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"UiAlertTypeEnum"}}}},{"pos":1166,"end":1204,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1167,"end":1174,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiAlertTypeEnum.warning</p>\\n"}],"rawdescription":"\\n\\nThe type of the alert, which determines the icon and styling.\\n","description":"<p>The type of the alert, which determines the icon and styling.</p>\\n","line":38,"type":"UiAlertTypeEnum","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"buttonType","defaultValue":"UiButtonTypeEnum.LINK","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>The type of button to be used for action buttons.</p>\\n","line":91,"rawdescription":"\\n\\nThe type of button to be used for action buttons.\\n","modifierKind":[123],"jsdoctags":[{"pos":2620,"end":2652,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2621,"end":2625,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":2626,"end":2644,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2627,"end":2643,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":2627,"end":2643,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"UiButtonTypeEnum"}}}},{"pos":2652,"end":2688,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2653,"end":2660,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiButtonTypeEnum.LINK</p>\\n"}]},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The icon class to be used in the alert.</p>\\n","line":84,"rawdescription":"\\n\\nThe icon class to be used in the alert.\\n","modifierKind":[123],"jsdoctags":[{"pos":2499,"end":2519,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2500,"end":2504,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":2505,"end":2513,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2506,"end":2512,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}}]},{"name":"linkSize","defaultValue":"UiButtonSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>The size of the link button.</p>\\n","line":98,"rawdescription":"\\n\\nThe size of the link button.\\n","modifierKind":[123],"jsdoctags":[{"pos":2790,"end":2822,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2791,"end":2795,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":2796,"end":2814,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2797,"end":2813,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":2797,"end":2813,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"UiButtonSizeEnum"}}}},{"pos":2822,"end":2860,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2823,"end":2830,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiButtonSizeEnum.MEDIUM</p>\\n"}]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLifecycle hook that is called after data-bound properties of a directive are initialized.\\nInitializes the icon based on the alert type and limits the number of action buttons to 2.\\n","description":"<p>Lifecycle hook that is called after data-bound properties of a directive are initialized.\\nInitializes the icon based on the alert type and limits the number of action buttons to 2.</p>\\n","modifierKind":[123],"jsdoctags":[]},{"name":"onClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandles the click event for the action buttons.\\n","description":"<p>Handles the click event for the action buttons.</p>\\n","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiAlertTypeEnum } from \'@lib/modules/alert/enums/alert-type.enum\';\\nimport { UiAlertSizeEnum } from \'@lib/modules/alert/enums/alert-size.enum\';\\nimport { UiAlertLayoutEnum } from \'@lib/modules/alert/enums/alert-layout.enum\';\\nimport { UiButtonTypeEnum } from \'../button/enums/action-button-type.enum\';\\nimport { UiButtonSizeEnum } from \'../button/enums/action-button-size.enum\';\\n\\n@Component({\\n    selector: \'ui-alert\',\\n    templateUrl: \'./alert.component.html\',\\n    styleUrls: [\'./alert.component.scss\'],\\n})\\n/**\\n * UiAlertComponent is a component that displays an alert message with optional action buttons.\\n * It supports different types of alerts, icons, and layouts.\\n * \\n * @class\\n * @implements {OnInit}\\n */\\nexport class UiAlertComponent implements OnInit {\\n    /**\\n     * The text content of the alert.\\n     * @type {string}\\n     */\\n    @Input() public text: string;\\n\\n    /**\\n     * The unique identifier for the alert.\\n     * @type {string}\\n     */\\n    @Input() public id: string;\\n\\n    /**\\n     * The type of the alert, which determines the icon and styling.\\n     * @type {UiAlertTypeEnum}\\n     * @default UiAlertTypeEnum.warning\\n     */\\n    @Input() public type: UiAlertTypeEnum = UiAlertTypeEnum.warning;\\n\\n    /**\\n     * Whether to show an icon in the alert.\\n     * @type {boolean}\\n     * @default true\\n     */\\n    @Input() public showIcon = true;\\n\\n    /**\\n     * The size of the alert.\\n     * @type {UiAlertSizeEnum}\\n     * @default UiAlertSizeEnum.MEDIUM\\n     */\\n    @Input() public size: UiAlertSizeEnum = UiAlertSizeEnum.MEDIUM;\\n\\n    /**\\n     * Whether the alert is dismissible.\\n     * @type {boolean}\\n     * @default true\\n     */\\n    @Input() public dismissible = true;\\n\\n    /**\\n     * The title of the alert.\\n     * @type {string}\\n     */\\n    @Input() public title: string;\\n\\n    /**\\n     * The action buttons to be displayed in the alert.\\n     * Each button has an id, buttonText, disabled state, and a clicked callback function.\\n     */\\n    @Input() public actionButtons = new Array<{ id: string; buttonText: string; disabled: boolean; clicked: () => { any } }>();\\n\\n    /**\\n     * The layout of the alert, either stacked or inline.\\n     * @type {UiAlertLayoutEnum.STACKED | UiAlertLayoutEnum.INLINE}\\n     * @default UiAlertLayoutEnum.INLINE\\n     */\\n    @Input() public layout: UiAlertLayoutEnum.STACKED | UiAlertLayoutEnum.INLINE = UiAlertLayoutEnum.INLINE;\\n\\n    /**\\n     * The icon class to be used in the alert.\\n     * @type {string}\\n     */\\n    public icon: string;\\n\\n    /**\\n     * The type of button to be used for action buttons.\\n     * @type {UiButtonTypeEnum}\\n     * @default UiButtonTypeEnum.LINK\\n     */\\n    public buttonType = UiButtonTypeEnum.LINK;\\n\\n    /**\\n     * The size of the link button.\\n     * @type {UiButtonSizeEnum}\\n     * @default UiButtonSizeEnum.MEDIUM\\n     */\\n    public linkSize = UiButtonSizeEnum.MEDIUM;\\n\\n    /**\\n     * Initializes a new instance of the UiAlertComponent class.\\n     * @constructor\\n     */\\n    constructor() {}\\n\\n    /**\\n     * Lifecycle hook that is called after data-bound properties of a directive are initialized.\\n     * Initializes the icon based on the alert type and limits the number of action buttons to 2.\\n     * @throws {Error} If more than 2 action buttons are provided.\\n     */\\n    public ngOnInit() {\\n        if (this.showIcon) {\\n            switch (this.type) {\\n                case UiAlertTypeEnum.success:\\n                    this.icon = \'bi bi-check-circle-fill\';\\n                    break;\\n                case UiAlertTypeEnum.danger:\\n                    this.icon = \'bi bi-exclamation-triangle-fill\';\\n                    break;\\n                case UiAlertTypeEnum.info:\\n                    this.icon = \'bi bi-info-circle-fill\';\\n                    break;\\n                case UiAlertTypeEnum.warning:\\n                    this.icon = \'bi bi-exclamation-circle-fill\';\\n                    break;\\n                case UiAlertTypeEnum.neutral:\\n                    this.icon = \'bi bi-info-circle-fill\';\\n                    break;\\n            }\\n            if (this.actionButtons.length > 2) {\\n                this.actionButtons = this.actionButtons.slice(0, 2);\\n                throw new Error(\'Alert can have only 2 action buttons\');\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Handles the click event for the action buttons.\\n     */\\n    public onClick() {\\n        //console.log(\'Button clickedd\');\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\n\\n.alert {\\n    display: flex;\\n    padding: 24px;\\n    flex-direction: column;\\n    justify-content: flex-end;\\n    align-items: flex-end;\\n\\n    &.has-action-button{\\n        gap: 16px;\\n    }\\n    \\n\\n    &.actions-stacked {\\n        min-width: 250px;\\n\\n        .btn-close {\\n            padding: 1.75rem 1rem !important;\\n        }\\n\\n        .alert-actions {\\n            padding-right: 0px;\\n        }\\n    }\\n\\n    &.actions-inline {\\n        min-width: 600px;\\n\\n        .btn-close {\\n            position: absolute;\\n            top: 50%;\\n            transform: translate(-50%, -50%);\\n        }\\n    }\\n\\n    .alert-text {\\n        align-self: stretch;\\n        width: 100%;\\n    }\\n\\n    .text-contents {\\n        display: flex;\\n        width: 100%;\\n    }\\n\\n    .alert-title-and-text {\\n        display: flex;\\n        padding-right: 16px;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        word-wrap: break-word;\\n\\n    }\\n\\n    .alert-actions {\\n        display: flex;\\n        justify-content: flex-end;\\n        align-items: flex-start;\\n        gap: 16px;\\n        padding-right: 50px;\\n\\n        .primary-action {\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            gap: 8px;\\n        }\\n    }\\n\\n    .alert-dismissible .btn-close {\\n        padding: 1.75rem 1rem !important;\\n    }\\n\\n    .btn-close {\\n        outline: 0;\\n        box-shadow: none;\\n        font-size: 16px;\\n    }\\n\\n    .alert-container {\\n        display: flex;\\n        padding-right: 16px;\\n        gap: 8px;\\n        align-self: stretch;\\n    }\\n\\n    .alert-close {\\n        display: flex;\\n        justify-content: flex-end;\\n        align-items: center;\\n        gap: 8px;\\n    }\\n\\n    &.small-alert {\\n        i {\\n            font-size: 16px;\\n        }\\n    }\\n\\n    &.medium-alert {\\n        i {\\n            font-size: 20px;\\n        }\\n    }\\n}","styleUrl":"./alert.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>Initializes a new instance of the UiAlertComponent class.</p>\\n","deprecated":false,"deprecationMessage":"","args":[],"line":98,"rawdescription":"\\n\\nInitializes a new instance of the UiAlertComponent class.\\n","jsdoctags":[]},"implements":["OnInit"],"templateData":"<div\\n    id=\\"{{ id }}\\"\\n    class=\\"alert alert-{{ type }} alert-dismissible fade show {{ size }}-alert\\"\\n    role=\\"alert\\"\\n    [ngClass]=\\"{ \'actions-stacked\': layout === \'actionsStacked\', \'actions-inline\': layout === \'actionsInline\' }\\"\\n>\\n    <div class=\\"alert-container\\" [ngClass]=\\"{ actionsStacked: layout === \'actionsStacked\' }\\">\\n        <i class=\\"{{ icon }} alert-icon\\" *ngIf=\\"showIcon\\" [ngClass]=\\"{ inline: layout === \'actionsInline\' }\\"></i>\\n        <ng-container>\\n            <div [ngClass]=\\"{ \'text-contents alert-title-and-text\': title !== null || title !== undefined }\\" class=\\"\\">\\n                <h4 *ngIf=\\"title\\">{{ title }}</h4>\\n\\n                <div class=\\"alert-text\\">\\n                    {{ text | translate }}\\n                </div>\\n            </div>\\n        </ng-container>\\n        <ng-container *ngIf=\\"dismissible && layout === \'actionsStacked\'\\">\\n            <button type=\\"button\\" class=\\"btn-close\\" data-bs-dismiss=\\"alert\\" aria-label=\\"Close\\" [id]=\\"\'alert-btn-close-\' + id\\"></button>\\n        </ng-container>\\n        <ng-container *ngIf=\\"layout === \'actionsInline\'\\">\\n            <div class=\\"inline\\">\\n                <div class=\\"alert-actions actions-inline\\">\\n                    <div class=\\"primary-action\\" *ngFor=\\"let button of actionButtons\\">\\n                        <ui-button\\n                            [id]=\\"button.id\\"\\n                            [disabled]=\\"button.disabled\\"\\n                            [size]=\\"linkSize\\"\\n                            [type]=\\"buttonType\\"\\n                            [text]=\\"button.buttonText\\"\\n                            (click)=\\"onClick()\\"\\n                        ></ui-button>\\n                    </div>\\n                </div>\\n                <ng-container *ngIf=\\"dismissible && layout === \'actionsInline\'\\">\\n                    <button type=\\"button\\" class=\\"btn-close\\" data-bs-dismiss=\\"alert\\" aria-label=\\"Close\\"></button>\\n                </ng-container>\\n            </div>\\n        </ng-container>\\n    </div>\\n    <ng-container *ngIf=\\"layout === \'actionsStacked\'\\">\\n        <div class=\\"alert-actions\\">\\n            <div class=\\"primary-action\\" *ngFor=\\"let button of actionButtons\\">\\n                <ui-button\\n                    [id]=\\"button.id\\"\\n                    [size]=\\"linkSize\\"\\n                    [type]=\\"buttonType\\"\\n                    [text]=\\"button.buttonText\\"\\n                    (click)=\\"onClick()\\"\\n                ></ui-button>\\n            </div>\\n        </div>\\n    </ng-container>\\n</div>\\n"},{"name":"UiAreYouSureModalComponent","id":"component-UiAreYouSureModalComponent-3d503a0a5998ce522c4e05b1a311b2eec5e21428321d4aaaf74a0879804d7cbf87124232b2367f7a3025163d0b715a7c8f90966350901d39a296da04941bccb8","file":"libs/ui/src/lib/modules/authentification/components/modals/are-you-sure-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./are-you-sure-modal.component.scss"],"styles":[],"templateUrl":["./are-you-sure-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":11,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"onCancelClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onLogoutClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1749,"end":1753,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1743,"end":1748,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1939,"end":1943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1933,"end":1938,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { UiModalBaseComponent } from \'@lib/modules/modal/components/modal-base/modal-base.component\';\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\n\\n@Component({\\n    templateUrl: \'./are-you-sure-modal.component.html\',\\n    styleUrls: [\'./are-you-sure-modal.component.scss\']\\n})\\nexport class UiAreYouSureModalComponent extends UiModalBaseComponent {\\n\\n    public constructor(public activeModal: NgbActiveModal) {\\n        super(activeModal);\\n    }\\n\\n    public onLogoutClick() {\\n        this.dismiss(\'logout\');\\n    }\\n\\n    public onCancelClick() {\\n        this.submit(\'cancel\');\\n    }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./are-you-sure-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":9,"modifierKind":[123],"jsdoctags":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","templateData":"\x3c!-- Body START --\x3e\\n<div #modalBody class=\\"modal-body\\">\\n    {{ \'AUTHENTICATION.CONFIRM_DECLINE\' | translate }}\\n</div>  \\n\x3c!-- Body END--\x3e\\n\\n\x3c!-- Footer START --\x3e\\n<div class=\\"modal-footer\\" [ngClass]=\\"{ \'border-0\': noBorder === true }\\">\\n    <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primary\\" (click)=\\"onLogoutClick()\\">\\n        {{ \'COMMON.LOG_OUT\' | translate }}\\n    </button>\\n    <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary\\" (click)=\\"onCancelClick()\\">\\n        {{ \'COMMON.BACK\' | translate }}\\n    </button>\\n</div>\\n\x3c!-- Footer END --\x3e\\n\\n"},{"name":"UiAssenteeLoginComponent","id":"component-UiAssenteeLoginComponent-0ba254206cf2e0be05a1b09e959314976cbdbbb6905bd828a7d8dd7c43f2511a93ab70b3a7e8c36d6ae92fedfec17ef9e3e8b66de123548d37f874e6726541c9","file":"libs/ui/src/lib/modules/authentification/pages/ascentee-login/ascentee-login.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./ascentee-login.component.scss"],"styles":[],"templateUrl":["./ascentee-login.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"state","deprecated":false,"deprecationMessage":"","type":"UiOneTimePinComponentStateEnum","optional":false,"description":"","line":9,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\n\\n@Component({\\n    templateUrl: \'./ascentee-login.component.html\',\\n    styleUrls: [\'./ascentee-login.component.scss\']\\n})\\nexport class UiAssenteeLoginComponent implements OnInit {\\n  public state: UiOneTimePinComponentStateEnum;\\n\\n  public ngOnInit(): void {\\n      this.state = UiOneTimePinComponentStateEnum.acp;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".toasts-container {\\n    left: calc(50% - 168px);\\n    width: 324px !important;\\n}\\n\\n.ngb-toasts {\\n    top: 20px !important;\\n    right: 20px !important;\\n}\\n","styleUrl":"./ascentee-login.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<ui-toasts-container class=\\"toasts-container\\" aria-live=\\"polite\\" aria-atomic=\\"true\\"></ui-toasts-container>\\n<ui-one-time-pin [state]=\\"state\\"></ui-one-time-pin>"},{"name":"UiAuth0CallbackComponent","id":"component-UiAuth0CallbackComponent-7a10ff20eba0f5147d43712c4ea885311006cd2a8522d02cc3e694a7a815d01a1f71960c7848c91e39053a7c0f8b3adb77e5a0b58544eda2fb884d639471df9a","file":"libs/ui/src/lib/modules/authentification/auth0/components/callback.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-one-time-pin","styleUrls":[],"styles":[],"templateUrl":["./callback.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"IUiAuth0Config","optional":false,"description":"","line":29,"modifierKind":[121]},{"name":"_requestedUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":28,"modifierKind":[121]},{"name":"_waitString","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27,"modifierKind":[121]}],"methodsClass":[{"name":"getWaitString","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[121,131]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>The component is called when the user is authenticated with Auth0</p>\\n","rawdescription":"\\nThe component is called when the user is authenticated with Auth0","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n// Service imports\\nimport { AuthService } from \'@auth0/auth0-angular\';\\n// Enum imports\\nimport { Router } from \'@angular/router\';\\nimport { firstValueFrom } from \'rxjs\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Service imports\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\nimport { UiAuth0UserService } from \'../services/user.service\';\\nimport { IUiAuth0Config } from \'../auth0-config\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\n// Auth Service\\nimport { UiAuthService } from \'../services/auth.service\';\\n\\n/** The component is called when the user is authenticated with Auth0 */\\n/*\\n/* it is called by the Auth0 callback URL */\\n/* it extracts the Auth0JWT and makes a call to */\\n/* passwordlessLiginService.AuthorizeAuth0User which substitutes the Auth0JWT for a AssentJWT */\\n@Component({\\n    selector: \'ui-one-time-pin\',\\n    templateUrl: \'./callback.component.html\',\\n})\\nexport class UiAuth0CallbackComponent implements OnInit {\\n    private _waitString: string;\\n    private _requestedUrl: string;\\n    private _config: IUiAuth0Config;\\n\\n    public constructor(\\n        private readonly _auth0Service: AuthService,\\n        private readonly _authService: UiAuthService,\\n        private readonly _router: Router,\\n        private readonly _translateService: TranslateService,\\n        private readonly _userService: UiAuth0UserService,\\n        private readonly _configuationService: UiConfigurationService\\n    ) {\\n        this._config = this._configuationService.getConfig<IUiAuth0Config>(\'auth0\');\\n    }\\n\\n    public ngOnInit(): void {\\n        this.initialize();\\n    }\\n\\n    public getWaitString() {\\n        return this._waitString;\\n    }\\n\\n    private async initialize() {\\n        try {\\n            const isAuth0Authenticated = await firstValueFrom(this._auth0Service.isAuthenticated$);\\n\\n            this._waitString = this._translateService.instant(\'COMMON.PLEASE_WAIT\');\\n\\n            // Since this is the Auth0 callback function, the user should be authenticated\\n            if (!isAuth0Authenticated) {\\n                console.error(\' Error -> User is not authenticated on Auth0 callback function: access denied\');\\n                this._auth0Service.logout();\\n                this._auth0Service.loginWithRedirect();\\n                return;\\n            }\\n\\n            try {\\n                if (this._authService.hasAnyPermission([this._config.authorizationParams.audience])) {\\n                    this._auth0Service.user$.subscribe((user) => {\\n                        this._userService.updateUser(user);\\n                    });\\n                }\\n            } catch (error) {\\n                console.error(error);\\n            }\\n\\n            this._requestedUrl = localStorage.getItem(\'requestedUrl\');\\n\\n            if (!this._requestedUrl) {\\n                this._requestedUrl = \'/\';\\n            }\\n\\n            this._router.navigateByUrl(this._requestedUrl);\\n\\n        } catch (error) {\\n            console.error(\'Error while initializing callback function: \' + error);\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiAuth0UserService","deprecated":false,"deprecationMessage":""},{"name":"_configuationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":29,"modifierKind":[123],"jsdoctags":[{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiAuth0UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configuationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<p>{{ this.getWaitString() }}</p>\\n"},{"name":"UiButtonComponent","id":"component-UiButtonComponent-0653a3ec661dbdcfbd1c7778ac6090e2551422cfdd3319cede2b96c74eb156c00b8b1ea9aafe0f24f926e9d2a2744eb962ca7c416a424ca171533f1c01701a92","file":"libs/ui/src/lib/modules/button/components/button/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-button","styleUrls":["./button.component.scss"],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"inputsClass":[{"name":"clicked","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2358,"end":2394,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2359,"end":2366,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Click Event Handler</p>\\n"},{"pos":2394,"end":2464,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2395,"end":2406,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Function to be called when the button is clicked.</p>\\n"},{"pos":2464,"end":2496,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":2465,"end":2469,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":2470,"end":2490,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":2471,"end":2489,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":178,"parameters":[{"pos":2472,"end":2480,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":163,"name":{"pos":2472,"end":2473,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"e"},"type":{"pos":2474,"end":2480,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":2474,"end":2480,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"Event"}}}],"type":{"pos":2484,"end":2489,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":114}}}}],"line":86,"type":"function","decorators":[]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2001,"end":2032,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2002,"end":2009,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Disabled State</p>\\n"},{"pos":2032,"end":2094,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2033,"end":2044,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Indicates whether the button is disabled.</p>\\n"},{"pos":2094,"end":2114,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2095,"end":2102,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"line":72,"type":"boolean","decorators":[]},{"name":"icon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1852,"end":1880,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1853,"end":1860,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Button Icon</p>\\n"},{"pos":1880,"end":1934,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1881,"end":1892,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>The icon displayed on the button.</p>\\n"},{"pos":1934,"end":1951,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1935,"end":1942,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>&#39;&#39;</p>\\n"}],"line":65,"type":"string","decorators":[]},{"name":"iconLocation","defaultValue":"UiButtonIconLocationEnum.prefix","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1589,"end":1619,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1590,"end":1597,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Icon Location</p>\\n"},{"pos":1619,"end":1693,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1620,"end":1631,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>The location of the icon relative to the button text.</p>\\n"},{"pos":1693,"end":1739,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1694,"end":1701,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiButtonIconLocationEnum.prefix</p>\\n"}],"line":58,"type":"UiButtonIconLocationEnum","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":656,"end":682,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":657,"end":664,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Button ID</p>\\n"},{"pos":682,"end":736,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":683,"end":694,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Unique identifier for the button.</p>\\n"},{"pos":736,"end":758,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":737,"end":741,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":742,"end":750,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":743,"end":749,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":149}}},{"pos":758,"end":773,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":759,"end":767,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"required"},"comment":""}],"line":23,"type":"string","decorators":[]},{"name":"inversed","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2171,"end":2202,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2172,"end":2179,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Inversed State</p>\\n"},{"pos":2202,"end":2281,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2203,"end":2214,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Indicates whether the button has an inversed color scheme.</p>\\n"},{"pos":2281,"end":2301,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2282,"end":2289,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"line":79,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"UiButtonSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1390,"end":1418,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1391,"end":1398,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Button Size</p>\\n"},{"pos":1418,"end":1462,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1419,"end":1430,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>The size of the button.</p>\\n"},{"pos":1462,"end":1500,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1463,"end":1470,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiButtonSizeEnum.MEDIUM</p>\\n"}],"line":51,"type":"UiButtonSizeEnum","decorators":[]},{"name":"text","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":824,"end":852,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":825,"end":832,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Button Text</p>\\n"},{"pos":852,"end":906,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":853,"end":864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>The text displayed on the button.</p>\\n"},{"pos":906,"end":923,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":907,"end":914,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>&#39;&#39;</p>\\n"}],"line":30,"type":"string","decorators":[]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":973,"end":1002,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":974,"end":981,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Tooltip Text</p>\\n"},{"pos":1002,"end":1085,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1003,"end":1014,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>The text displayed as a tooltip when hovering over the button.</p>\\n"},{"pos":1085,"end":1102,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1086,"end":1093,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>&#39;&#39;</p>\\n"}],"line":37,"type":"string","decorators":[]},{"name":"type","defaultValue":"UiButtonTypeEnum.PRIMARY","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1159,"end":1187,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1160,"end":1167,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"summary"},"comment":"<p>Button Type</p>\\n"},{"pos":1187,"end":1261,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1188,"end":1199,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>The type of the button, which determines its styling.</p>\\n"},{"pos":1261,"end":1300,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1262,"end":1269,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>UiButtonTypeEnum.PRIMARY</p>\\n"}],"line":44,"type":"UiButtonTypeEnum","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\n","description":"","modifierKind":[123],"jsdoctags":[]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiButtonTypeEnum } from \'../../enums/action-button-type.enum\';\\nimport { UiButtonSizeEnum } from \'../../enums/action-button-size.enum\';\\nimport { UiButtonIconLocationEnum } from \'../../enums/action-button-icon-location.enum\';\\n\\n@Component({\\n    selector: \'ui-button\',\\n    templateUrl: \'./button.component.html\',\\n    styleUrls: [\'./button.component.scss\'],\\n})\\n/**\\n * @summary UI Button Component\\n * @description This component represents a customizable button with various properties for text, type, size, icon, and more.\\n */\\nexport class UiButtonComponent implements OnInit {\\n\\n    /**\\n     * @summary Button ID\\n     * @description Unique identifier for the button.\\n     * @type {string}\\n     * @required\\n     */\\n    @Input() public id: string;\\n\\n    /**\\n     * @summary Button Text\\n     * @description The text displayed on the button.\\n     * @default \'\'\\n     */\\n    @Input() public text = \'\';\\n\\n    /**\\n     * @summary Tooltip Text\\n     * @description The text displayed as a tooltip when hovering over the button.\\n     * @default \'\'\\n     */\\n    @Input() public tooltipText = \'\';\\n\\n    /**\\n     * @summary Button Type\\n     * @description The type of the button, which determines its styling.\\n     * @default UiButtonTypeEnum.PRIMARY\\n     */\\n    @Input() public type: UiButtonTypeEnum = UiButtonTypeEnum.PRIMARY;\\n\\n    /**\\n     * @summary Button Size\\n     * @description The size of the button.\\n     * @default UiButtonSizeEnum.MEDIUM\\n     */\\n    @Input() public size: UiButtonSizeEnum = UiButtonSizeEnum.MEDIUM;\\n\\n    /**\\n     * @summary Icon Location\\n     * @description The location of the icon relative to the button text.\\n     * @default UiButtonIconLocationEnum.prefix\\n     */\\n    @Input() public iconLocation: UiButtonIconLocationEnum = UiButtonIconLocationEnum.prefix;\\n\\n    /**\\n     * @summary Button Icon\\n     * @description The icon displayed on the button.\\n     * @default \'\'\\n     */\\n    @Input() public icon = \'\';\\n\\n    /**\\n     * @summary Disabled State\\n     * @description Indicates whether the button is disabled.\\n     * @default false\\n     */\\n    @Input() public disabled = false;\\n\\n    /**\\n     * @summary Inversed State\\n     * @description Indicates whether the button has an inversed color scheme.\\n     * @default false\\n     */\\n    @Input() public inversed = false;\\n\\n    /**\\n     * @summary Click Event Handler\\n     * @description Function to be called when the button is clicked.\\n     * @type {(e: Event) => void}\\n     */\\n    @Input() public clicked?: (e: Event) => void;\\n\\n    /**\\n     * @summary OnInit Lifecycle Hook\\n     * @description Angular lifecycle hook that is called after the component is initialized.\\n     */\\n    public ngOnInit() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./button.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<button\\n    [id]=\\"\'button_\' + id\\"\\n    class=\\"btn {{ type }} {{ size }}\\"\\n    [disabled]=\\"disabled\\"\\n    attr.aria-labelledby=\\"{{ text }}\\"\\n    ngbTooltip=\\"{{tooltipText | translate}}\\"\\n    [ngClass]=\\"{ \'btn-inversed\': inversed === true && type === \'btn-primary\', disabled: disabled === true }\\"\\n    (click)=\\"(clicked !== undefined) ? clicked(this) : null \\"\\n>\\n    <ng-container *ngIf=\\"iconLocation === \'prefix\'\\">\\n        <i class=\\"bi {{icon}}\\"></i>\\n        {{ text | translate }}\\n    </ng-container>\\n    <ng-container *ngIf=\\"iconLocation === \'suffix\'\\">\\n        {{ text | translate }}\\n        <i class=\\"bi {{icon}}\\"></i>\\n    </ng-container>\\n</button>\\n"},{"name":"UiCardComponent","id":"component-UiCardComponent-26d790f0eb82facbb35a7bc517abdcbf00246efa093dc86e07c8a7d700110b094ce1ce50a5c081c55a371392eac4a73981959be4542d6ad3565430ea1f2a00a3","file":"libs/ui/src/lib/modules/card/components/card/card.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-card","styleUrls":["./card.component.scss"],"styles":[],"templateUrl":["./card.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","deprecated":false,"deprecationMessage":"","line":35,"type":"Array<IUiActionButton>","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"maxHeight","deprecated":false,"deprecationMessage":"","line":26,"type":"number","decorators":[]},{"name":"showCloseButton","deprecated":false,"deprecationMessage":"","line":23,"type":"boolean","decorators":[]},{"name":"showCustomLayout","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"showFooter","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"showHeader","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]},{"name":"titleSize","deprecated":false,"deprecationMessage":"","line":32,"type":"UiCardTitleSizeEnum","decorators":[]},{"name":"titleText","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]}],"outputsClass":[{"name":"closeButtonClick","defaultValue":"new EventEmitter<{\\n        cardId: string;\\n        cardRef?: UiCardComponent;\\n    }>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter<literal type>"}],"propertiesClass":[{"name":"cardRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"maxHeight$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"showCloseButton$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"showCustomLayout$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"showFooter$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"showHeader$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"titleSize$","defaultValue":"new BehaviorSubject(UiCardTitleSizeEnum.md)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<UiCardTitleSizeEnum>","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"titleText$","defaultValue":"new BehaviorSubject(\'\')","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<string>","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"UiCardTitleSizeEnum","defaultValue":"UiCardTitleSizeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"viewContainerRef","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":54,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseButtonClick","args":[{"name":"cardId","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"cardComponent","type":"UiCardComponent","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"cardId","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"cardComponent","type":"UiCardComponent","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewContainerRef } from \'@angular/core\';\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { UiCardTitleSizeEnum } from \'../../enums/card-title-size-enum\';\\nimport { IUiActionButton } from \'../../interfaces/card.interface\';\\n\\n@Component({\\n    selector: \'ui-card\',\\n    templateUrl: \'./card.component.html\',\\n    styleUrls: [\'./card.component.scss\'],\\n})\\nexport class UiCardComponent implements OnInit {\\n    // Inputs\\n    @Input() public id: string;\\n    @Input() public set showCustomLayout(val: boolean) {\\n        this.showCustomLayout$.next(val);\\n    }\\n    @Input() public set showHeader(val: boolean) {\\n        this.showHeader$.next(val);\\n    }\\n    @Input() public set showFooter(val: boolean) {\\n        this.showFooter$.next(val);\\n    }\\n    @Input() public set showCloseButton(val: boolean) {\\n        this.showCloseButton$.next(val);\\n    }\\n    @Input() public set maxHeight(val: number) {\\n        this.maxHeight$.next(val);\\n    }\\n    @Input() public set titleText(val: string) {\\n        this.titleText$.next(val);\\n    }\\n    @Input() public set titleSize(val: UiCardTitleSizeEnum) {\\n        this.titleSize$.next(val);\\n    }\\n    @Input() public actionButtons: Array<IUiActionButton>;\\n\\n    // Outputs\\n    @Output() public closeButtonClick: EventEmitter<{ cardId: string; cardComponent?: UiCardComponent }> = new EventEmitter<{\\n        cardId: string;\\n        cardRef?: UiCardComponent;\\n    }>();\\n\\n    // Public properties\\n    public showHeader$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n    public showFooter$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n    public showCloseButton$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n    public maxHeight$: BehaviorSubject<number> = new BehaviorSubject(0);\\n    public titleText$: BehaviorSubject<string> = new BehaviorSubject(\'\');\\n    public titleSize$: BehaviorSubject<UiCardTitleSizeEnum> = new BehaviorSubject(UiCardTitleSizeEnum.md);\\n    public showCustomLayout$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\n    public UiCardTitleSizeEnum = UiCardTitleSizeEnum;\\n\\n    constructor(public viewContainerRef: ViewContainerRef, public cardRef: ElementRef) {}\\n\\n    // Public methods\\n    public ngOnInit(): void {}\\n\\n    public onCloseButtonClick(cardId?: string, cardComponent?: UiCardComponent) {\\n        this.closeButtonClick.emit({cardId, cardComponent});\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./card.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"cardRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":52,"jsdoctags":[{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cardRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"showCustomLayout":{"name":"showCustomLayout","setSignature":{"name":"showCustomLayout","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":14,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showHeader":{"name":"showHeader","setSignature":{"name":"showHeader","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":17,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showFooter":{"name":"showFooter","setSignature":{"name":"showFooter","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":20,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"showCloseButton":{"name":"showCloseButton","setSignature":{"name":"showCloseButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":23,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"maxHeight":{"name":"maxHeight","setSignature":{"name":"maxHeight","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"number","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":26,"jsdoctags":[{"name":"val","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"titleText":{"name":"titleText","setSignature":{"name":"titleText","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"titleSize":{"name":"titleSize","setSignature":{"name":"titleSize","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"UiCardTitleSizeEnum","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":32,"jsdoctags":[{"name":"val","type":"UiCardTitleSizeEnum","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div class=\\"card\\" [id]=\\" id+\'_card_div\'\\">    \\n    <ng-container>\\n        <div class=\\"card-header\\" *ngIf=\\"(showCustomLayout$ | async) === false && showHeader$ | async\\">\\n            \x3c!-- TODO: This may conflict with ACP-45727 - all modal headers are to be h4 --\x3e\\n            <h5 *ngIf=\\"(titleSize$ | async) === UiCardTitleSizeEnum.sm\\" class=\\"d-inline-block\\">{{titleText$ | async}}</h5>\\n            <h4 *ngIf=\\"(titleSize$ | async) === UiCardTitleSizeEnum.md\\" class=\\"d-inline-block\\">{{titleText$ | async}}</h4>\\n            <h3 *ngIf=\\"(titleSize$ | async) === UiCardTitleSizeEnum.lg\\" class=\\"d-inline-block\\">{{titleText$ | async}}</h3>\\n            <button *ngIf=\\"showCloseButton$ | async\\" type=\\"button\\" class=\\"btn-close\\" aria-label=\\"Close\\" style=\\"float: right;\\" (click)=\\"onCloseButtonClick(id, this)\\"></button>\\n        </div> \\n        <div class=\\"card-body\\" [ngClass]=\\"{\'card-body\': (showCustomLayout$ | async) === false}\\" [style.maxHeight]=\\"maxHeight$.getValue() === 0 ? null : maxHeight$.getValue() + \'px\'\\">\\n            <ng-content></ng-content>        \\n        </div>    \\n        <div class=\\"card-footer\\" *ngIf=\\"(showCustomLayout$ | async) === false && showFooter$ | async\\">\\n            <ui-action-buttons-new [actionButtons]=\\"actionButtons\\"></ui-action-buttons-new>\\n        </div>    \\n    </ng-container>\\n</div>\\n"},{"name":"UiCheckboxComponent","id":"component-UiCheckboxComponent-8696664579b7808fd8519a1a21269046d068b68804faeeb5d2b79a39db260c4a9481f28293060a1012f8971623f50fdeb958fdf2154edf3115e79938abe463e9","file":"libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-checkbox","styleUrls":["./checkbox.component.scss"],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":10,"type":"literal type[]","decorators":[]},{"name":"showPointer","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n@Component({\\n    selector: \'ui-checkbox\',\\n    templateUrl: \'./checkbox.component.html\',\\n    styleUrls: [\'./checkbox.component.scss\'],\\n})\\nexport class UiCheckboxComponent extends UiFormControlBaseComponent {\\n    @Input() public options: {label: string; value: string; disabled: boolean; required: boolean}[];\\n    @Input() public inline = false;\\n    @Input() public showPointer = true;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-check-inline {\\n    width: max-content;\\n    margin-right: 0.5rem;\\n}","styleUrl":"./checkbox.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"\\n\\n<div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\n\\n    <div class=\\"form-check \\" [ngClass]=\\"{ \'form-check-inline\': inline === true }\\">\\n         <input\\n            [id]=\\"id + \'_Checkbox\'\\"\\n            [name]=\\"formControlName\\"\\n            type=\\"checkbox\\"\\n            class=\\"form-check-input\\"\\n            [ngModel]=\\"value\\"\\n            [placeholder]=\\"placeholder\\"\\n            [disabled]=\\"disabled\\"\\n            (ngModelChange)=\\"onChange($event)\\"\\n            [ngClass]=\\"{\'pointer\' : !disabled && showPointer}\\"\\n        />\\n\\n        <label\\n            [id]=\\"id + \'_Label\'\\"\\n            [for]=\\"id + \'_Checkbox\'\\"\\n            class=\\"form-check-label d-inline-block\\"\\n            [ngClass]=\\"{\'pointer\' : !disabled && showPointer}\\"\\n            >\\n            {{label}}\\n            <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.requiredTrue)\\">*</span>\\n        </label>\\n        <i *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill d-inline-block\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\n\\n    </div>\\n\\n    <div class=\\"error-text d-inline-block ps-1\\" style=\\"margin-top: 0px;\\" *ngIf=\\"form.controls[formControlName].invalid && showErrorValidation\\">\\n        <div *ngIf=\\"form.controls[formControlName].errors\\">\\n            <div [id]=\\"id + \'_RequiredTrueErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.requiredTrue\\">\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\n            </div>\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.required\\">\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\n            </div>\\n        </div>\\n    </div>\\n    <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" id=\\"\\" class=\\"help-text\\">{{helpText}}</div>\\n\\n</div>\\n"},{"name":"UiCheckboxComponent","id":"component-UiCheckboxComponent-46e1960f756b81a38575130a72d52d24ded1cc5329dcfbe8b430c7f61a350ffdba0ca8b271a5b24a1a5629c9ba17d850540f58fcc2f1461b9ed204c7a0a12c75-1","file":"libs/ui/src/lib/modules/form/checkbox/checkbox.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-checkbox","styleUrls":["./checkbox.component.scss"],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":14,"type":"literal type[]","decorators":[]},{"name":"showPointer","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":true,"deprecationMessage":"Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form-controls\\\\checkbox\\\\checkbox.component.ts","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n// TODO - copy pasted from other form module to fix test\\n/**\\n * @deprecated Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form-controls\\\\checkbox\\\\checkbox.component.ts\\n */\\n@Component({\\n    selector: \'ui-checkbox\',\\n    templateUrl: \'./checkbox.component.html\',\\n    styleUrls: [\'./checkbox.component.scss\'],\\n})\\nexport class UiCheckboxComponent extends UiFormControlBaseComponent {\\n    @Input() public options: {label: string; value: string; disabled: boolean; required: boolean}[];\\n    @Input() public inline = false;\\n    @Input() public showPointer = true;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-check-inline {\\n    width: max-content;\\n    margin-right: 0.5rem;\\n}","styleUrl":"./checkbox.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","isDuplicate":true,"duplicateId":1,"duplicateName":"UiCheckboxComponent-1","templateData":"<ng-container [formGroup]=\\"form\\"\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\n    <ui-form-control-base\\n        [formControlName]=\\"formControlName\\"\\n        [form]=\\"form\\"\\n        [placeholder]=\\"placeholder\\"\\n        [showHelpText]=\\"showHelpText\\"\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\n        [showInfoIcon]=\\"false\\"\\n        [infoText]=\\"infoText\\"\\n        [helpText]=\\"helpText\\"\\n    >\\n        <div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\n            <div class=\\"form-check\\" [ngClass]=\\"{ \'form-check-inline\': inline === true }\\">\\n                <input\\n                    [id]=\\"id + \'_Checkbox\'\\"\\n                    [name]=\\"formControlName\\"\\n                    [formControlName]=\\"formControlName\\"\\n                    type=\\"checkbox\\"\\n                    class=\\"form-check-input\\"\\n                    [value]=\\"value\\"\\n                    [placeholder]=\\"placeholder\\"\\n                    [disabled]=\\"disabled\\"\\n                    (onChange)=\\"onChange($event)\\"\\n                    [ngClass]=\\"{ pointer: !disabled && showPointer }\\"\\n                />\\n\\n                <label\\n                    [id]=\\"id + \'_Label\'\\"\\n                    [for]=\\"id + \'_Checkbox\'\\"\\n                    class=\\"form-check-label d-inline-block\\"\\n                    [ngClass]=\\"{ pointer: !disabled && showPointer }\\"\\n                >\\n                    {{ label }}\\n                    <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.requiredTrue)\\">*</span\\n                    >\\n                </label>\\n                <i\\n                    *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\n                    class=\\"bi bi-question-circle-fill d-inline-block\\"\\n                    placement=\\"top\\"\\n                    [ngbTooltip]=\\"infoText\\"\\n                ></i>\\n            </div>\\n        </div>\\n    </ui-form-control-base>\\n</ng-container>\\n"},{"name":"UiComboboxRendererComponent","id":"component-UiComboboxRendererComponent-7ffca5400b5d6739d5b66e419e88d0bc9dd9033626a8b0cc3c85ba95236af506b422a433882f9d172aae957f182c7c37f2ec12aa55e09daa971dd018047b4f27","file":"libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-combobox-renderer","styleUrls":["./combobox-renderer.component.scss"],"styles":[],"templateUrl":["./combobox-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_columnField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"_columnHeader","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"_options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"<p>Options array; used as a fallback if no options are provided</p>\\n","line":35,"rawdescription":"\\n\\nOptions array; used as a fallback if no options are provided\\n","modifierKind":[123]},{"name":"cellLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"cellValue","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"comboboxDropdownPlusRef","deprecated":false,"deprecationMessage":"","type":"ViewContainerRef","optional":false,"description":"","line":22,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'comboboxDropdownPlusRef\', {read: ViewContainerRef}"}],"modifierKind":[123]},{"name":"defaultValue","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption","optional":false,"description":"<p>(Optional) Default value for the dropdown</p>\\n","line":42,"rawdescription":"\\n\\n(Optional) Default value for the dropdown\\n\\n","modifierKind":[123],"jsdoctags":[{"pos":1605,"end":1642,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":341,"tagName":{"pos":1606,"end":1610,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":151,"escapedText":"type"},"comment":"","typeExpression":{"pos":1611,"end":1634,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":307,"type":{"pos":1612,"end":1633,"flags":4194304,"modifierFlagsCache":0,"transformFlags":1,"kind":177,"typeName":{"pos":1612,"end":1633,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"IUiDropdownPlusOption"}}}},{"pos":1642,"end":1661,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1643,"end":1650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>null</p>\\n"}]},{"name":"dropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdownRef\'"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"placeholderValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"rowNode","deprecated":false,"deprecationMessage":"","type":"RowNode","optional":false,"description":"<p>Represents the RowNode from Ag-Grid that is currently rendering</p>\\n","line":50,"rawdescription":"\\n\\nRepresents the RowNode from Ag-Grid that is currently rendering\\n","modifierKind":[123]},{"name":"selectedOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"<p>Represents the selected options in the combobox renderer component.</p>\\n","line":31,"rawdescription":"\\n\\nRepresents the selected options in the combobox renderer component.\\n","modifierKind":[123]}],"methodsClass":[{"name":"_getCellValue","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":180,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet the cell value based on the selected options Ids\\n\\n","description":"<p>Get the cell value based on the selected options Ids</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":7943,"end":7950,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>string</code> of the selected options Ids</p>\\n"}]},{"name":"_getLabelFromValues","args":[{"name":"selectedOptions","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet the label for the cell based on the selected options\\n\\n","description":"<p>Get the label for the cell based on the selected options</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9159,"end":9174,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"selectedOptions"},"type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":9153,"end":9158,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Selected options from the dropdown-plus component</p>\\n"},{"tagName":{"pos":9137,"end":9144,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""},{"tagName":{"pos":9233,"end":9240,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>string</p>\\n"}]},{"name":"_onSelectionChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen selection changes in the dropdown-plus component, update the cell value and label\\n\\n","description":"<p>When selection changes in the dropdown-plus component, update the cell value and label</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":8371,"end":8376,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":8365,"end":8370,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Event that is emitted when the selection changes in the dropdown-plus component</p>\\n"},{"tagName":{"pos":8349,"end":8356,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"agInit","args":[{"name":"params","type":"IUiComboboxRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCalled after grid is initialized\\n\\n","description":"<p>Called after grid is initialized</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2096,"end":2102,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"params"},"type":"IUiComboboxRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"pos":2090,"end":2095,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>IUiComboboxRendererParams</p>\\n"}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onTriggerClick","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhen the trigger is clicked, open the dropdown\\n\\n","description":"<p>When the trigger is clicked, open the dropdown</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":6608,"end":6613,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"pos":6602,"end":6607,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInterface method for Ag-Grid\\n\\n","description":"<p>Interface method for Ag-Grid</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7714,"end":7720,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"params"},"type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"pos":7708,"end":7713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>ICellRendererParams</p>\\n"},{"tagName":{"pos":7749,"end":7756,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>boolean</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ViewChild, AfterViewInit, ViewContainerRef, OnDestroy } from \'@angular/core\';\\n// Ag Grid\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\nimport { ICellRendererParams, RowNode } from \'ag-grid-community\';\\n// Services\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Components & Interfaces\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\nimport { IUiComboboxRendererParams } from \'./interface/combobox-renderer-params.interface\';\\n\\n@Component({\\n    selector: \'ui-combobox-renderer\',\\n    templateUrl: \'./combobox-renderer.component.html\',\\n    styleUrls: [\'./combobox-renderer.component.scss\'],\\n})\\n/**\\n * Represents a custom cell renderer component for a combobox in an Ag-Grid.\\n * Implements the `ICellRendererAngularComp` and `AfterViewInit` interfaces.\\n */\\nexport class UiComboboxRendererComponent implements ICellRendererAngularComp, AfterViewInit, OnDestroy {\\n    @ViewChild(\'comboboxDropdownPlusRef\', { read: ViewContainerRef }) public comboboxDropdownPlusRef!: ViewContainerRef;\\n    @ViewChild(\'dropdownRef\') public dropdownRef: UiDropdownPlusComponent;\\n\\n    public menuOpen = false;\\n    public cellLabel = \'\';\\n\\n    /**\\n     * Represents the selected options in the combobox renderer component.\\n     */\\n    public selectedOptions: IUiDropdownPlusOption[] = [];\\n    /**\\n     * Options array; used as a fallback if no options are provided\\n     */\\n    public _options: IUiDropdownPlusOption[] = [];\\n    /**\\n     * (Optional) Default value for the dropdown\\n     *\\n     * @type {IUiDropdownPlusOption}\\n     * @default null\\n     */\\n    public defaultValue: IUiDropdownPlusOption;\\n\\n    public placeholderValue: string;\\n    public cellValue: any;\\n\\n    /**\\n     * Represents the RowNode from Ag-Grid that is currently rendering\\n     */\\n    public rowNode: RowNode;\\n    public _columnHeader: string;\\n    public _columnField: string;\\n\\n    constructor(private _translateService: TranslateService) {}\\n\\n    /**\\n     * Called after grid is initialized\\n     *\\n     * @param params IUiComboboxRendererParams\\n     */\\n    public agInit(params: IUiComboboxRendererParams): void {\\n        this._columnHeader = params.colDef.headerName;\\n        this._columnField = params.colDef.field;\\n        this._options = params.options;\\n        this.rowNode = params.node;\\n        this.placeholderValue = params.placeholderValue ?? params.colDef.cellRendererParams.placeholderValue ?? null;\\n        this.defaultValue =\\n            params.defaultValue !== undefined\\n                ? params.defaultValue\\n                : params.colDef.cellRendererParams.defaultValue !== undefined\\n                    ? params.colDef.cellRendererParams.defaultValue\\n                    : null;\\n\\n        const initParamValue = params.getValue();\\n        if (initParamValue && initParamValue !== \'\') {\\n            this.cellValue = initParamValue;\\n\\n            this.cellValue = this._options.filter((option) => {\\n                if (initParamValue.includes(option.id)) {\\n                    option.value = true;\\n                    return option;\\n                }\\n            });\\n        } else {\\n            this.cellValue = this.defaultValue === null ? [] : this.defaultValue;\\n        }\\n\\n        setTimeout(() => {\\n            // Create the dropdown-plus component\\n            this.dropdownRef = this.comboboxDropdownPlusRef.createComponent(UiDropdownPlusComponent).instance;\\n            // Setup the dropdown-plus component\\n            this.dropdownRef.externalTriggerEleId = this.rowNode.id + \'_trigger\';\\n            this.dropdownRef.view = null; // Note: do not reference any view for the dropdown-plus component\\n            this.dropdownRef.showSearch = params.showSearch ?? params.colDef.cellRendererParams.showSearch ?? true;\\n            this.dropdownRef.showSelectClearBtns =\\n                params.showSelectClearBtns ?? params.colDef.cellRendererParams.showSelectClearBtns ?? true;\\n            this.dropdownRef.maxItemsShown = params.maxItemsToShow ?? params.colDef.cellRendererParams.maxItemsToShow ?? 3;\\n            this.dropdownRef.multiSelect = params.multiSelect ?? params.colDef.cellRendererParams.multiSelect ?? true;\\n            this.dropdownRef.small = true; // Note: this must use small size of the dropdown-plus component\\n            // Set the options based on what was passed in from the columnDef\\n            this.dropdownRef.options = this._options;\\n            // Set the id of the dropdown based on the rowNode id from Ag-Grid\\n            this.dropdownRef.id = this.rowNode.id;\\n\\n            // Subscription to the base selectionChange event, use local method to update cell value\\n            this.dropdownRef.selectionChange.subscribe((event) => {\\n                this._onSelectionChange(event);\\n            });\\n\\n            this.dropdownRef.openChange.subscribe((event) => {\\n                this.menuOpen = !this.menuOpen;\\n            });\\n\\n            // Note: This timeout will wait for a tick for the DropdownPlus to be ready so dropdown can be configured\\n            setTimeout(() => {\\n                // Update the dropdown to ensure it is displayed correctly\\n                this.dropdownRef.nbgDropdown.display = \'dynamic\';\\n                this.dropdownRef.nbgDropdown.placement = \'bottom-start\';\\n                this.dropdownRef.nbgDropdown.container = \'body\';\\n                this.dropdownRef.nbgDropdown.dropdownClass = this.rowNode.id + \'_drop-wrapper\';\\n                // Add the class to the dropdown panel, if not found the dropdown will not be styled correctly\\n                if (this.dropdownRef.ngbDropPanel && this.dropdownRef.ngbDropPanel.nativeElement) {\\n                    this.dropdownRef.ngbDropPanel.nativeElement.className += \' combobox-renderer-dropdown small\';\\n                    if (this.dropdownRef.multiSelect) {\\n                        this.dropdownRef.ngbDropPanel.nativeElement.className += \' multi-select\';\\n                    }\\n                }\\n                // The selected options and label are initially based on the cell value\\n                this.selectedOptions = this.cellValue;\\n                this.dropdownRef.selectedOptions = this.dropdownRef.selectedList = this.selectedOptions;\\n                this.cellLabel = this._getLabelFromValues(this.cellValue);\\n            });\\n        });\\n    }\\n\\n    public ngOnDestroy() {\\n        if (this.dropdownRef) {\\n            this.dropdownRef.selectionChange.unsubscribe();\\n        }\\n    }\\n\\n    public ngAfterViewInit() {}\\n\\n    /**\\n     * When the trigger is clicked, open the dropdown\\n     *\\n     * @param event\\n     */\\n    public onTriggerClick(event: MouseEvent) {\\n        this.dropdownRef.nbgDropdown.open();\\n        const triggerEle = document.getElementById(this.dropdownRef.externalTriggerEleId);\\n        if (this.dropdownRef.externalTriggerEleId !== undefined && this.dropdownRef.externalTriggerEleId !== null) {\\n            if (triggerEle !== undefined && triggerEle !== null) {\\n                const dropPanelEle = document.getElementById(this.dropdownRef.id + \'_drop-panel\');\\n                const dropPanelWrapper = dropPanelEle.parentElement;\\n                const position = triggerEle.getBoundingClientRect();\\n                dropPanelWrapper.style.top =\\n                    position.top + triggerEle.offsetTop + triggerEle.offsetHeight + this.dropdownRef.paddingTop + \'px\';\\n                dropPanelWrapper.style.left = position.left + triggerEle.offsetLeft + \'px\';\\n            }\\n        }\\n        this.dropdownRef.triggerClicked.emit({ id: this.dropdownRef.id, open: this.menuOpen, selectedOptions: this.selectedOptions });\\n    }\\n\\n    /**\\n     * Interface method for Ag-Grid\\n     *\\n     * @param params ICellRendererParams\\n     * @returns boolean\\n     */\\n    public refresh(params: ICellRendererParams): boolean {\\n        return true;\\n    }\\n\\n    /**\\n     * Get the cell value based on the selected options Ids\\n     *\\n     * @returns `string` of the selected options Ids\\n     */\\n    private _getCellValue() {\\n        let cellDisplayValue = \'\';\\n        for (const option of this.cellValue) {\\n            cellDisplayValue += option.id + \',\';\\n        }\\n        return cellDisplayValue.trim().replace(/,$/, \'\');\\n    }\\n\\n    /**\\n     * When selection changes in the dropdown-plus component, update the cell value and label\\n     *\\n     * @private\\n     * @param event Event that is emitted when the selection changes in the dropdown-plus component\\n     */\\n    private _onSelectionChange(event) {\\n        setTimeout(() => {\\n            this.cellLabel = this._getLabelFromValues(event.selectedOptions);\\n            this.selectedOptions = this.cellValue = event.selectedOptions;\\n            this.dropdownRef.selectedList = this.dropdownRef.selectedOptions = this.selectedOptions;\\n            // Update the cell value in the grid - see https://www.ag-grid.com/angular-data-grid/data-update-single-row-cell/\\n            const newValue = this._getCellValue();\\n            this.rowNode.setDataValue(this._columnField, newValue);\\n        });\\n    }\\n\\n    /**\\n     * Get the label for the cell based on the selected options\\n     *\\n     * @private\\n     * @param selectedOptions Selected options from the dropdown-plus component\\n     * @returns string\\n     */\\n    private _getLabelFromValues(selectedOptions: IUiDropdownPlusOption[]) {\\n        if (selectedOptions.length === 0 || !selectedOptions) {\\n            if (this.defaultValue && this.defaultValue.label !== \'\') {\\n                return this.defaultValue.label;\\n            } else if (this.placeholderValue && this.placeholderValue !== \'\') {\\n                return this.placeholderValue;\\n            } else {\\n                return this._translateService.instant(\'COMMON.NONE\');\\n            }\\n        } else if (selectedOptions.length === this.dropdownRef.options.length) {\\n            // All selected\\n            return this._translateService.instant(\'COMMON.ALL\');\\n        } else if (selectedOptions.length === 1) {\\n            // Single selected\\n            return selectedOptions[0].label;\\n        } else if (selectedOptions.length >= 1) {\\n            // Multiple selected\\n            return this._columnHeader;\\n        } else {\\n            // Fallback\\n            return this._translateService.instant(\'COMMON.NO_DATA_TO_DISPLAY\');\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./combobox-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":52,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["ICellRendererAngularComp","AfterViewInit","OnDestroy"],"templateData":"<div class=\\"combobox-wrapper\\">\\n    <ng-container #comboboxDropdownPlusRef></ng-container>\\n    <div\\n        class=\\"d-flex justify-content-between align-items-center combobox-cell-trigger\\"\\n        [id]=\\"rowNode.id + \'_trigger\'\\"\\n        (click)=\\"onTriggerClick($event)\\"\\n        [ngClass]=\\"{ open: menuOpen === true, \'option-selected\': selectedOptions.length !== 0 }\\"\\n    >\\n        <div class=\\"label d-inline-block text-truncate\\">\\n            {{ cellLabel | translate }}\\n            <span *ngIf=\\"selectedOptions.length > 1\\"> ({{ selectedOptions.length }})</span>\\n        </div>\\n        <div>\\n            <i \\n                class=\\"bi ms-1 d-inline-block anim\\"\\n                [ngClass]=\\"menuOpen ? \'bi-caret-up-fill\' : \'bi-caret-down-fill\'\\"\\n            >\\n            </i>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiConsentPageComponent","id":"component-UiConsentPageComponent-825d4fe192e1d48b52a5abca2520416829388f95989aee5b555b4e4c7cb755a684bd166bef61d7fdc06ac1f94775555e4cfc16b2596e730b19938851271fa9e9","file":"libs/ui/src/lib/modules/consent/pages/user-consent-page/user-consent-page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-user-consent-page","styleUrls":["./user-consent-page.component.scss"],"styles":[],"templateUrl":["./user-consent-page.component.html"],"viewProviders":[],"inputsClass":[{"name":"auth0","deprecated":false,"deprecationMessage":"","line":21,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"getConsentErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"openAreYouSureModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"openPrivacyModal","args":[{"name":"auth0","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"auth0","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, Inject } from \'@angular/core\';\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\nimport { UiPrivacyAgreementModalComponent } from \'@lib/modules/authentification/components/modals/privacy-agreement-modal.component\';\\nimport { ConsentService } from \'@lib/services/consent/consent-service.token\';\\nimport { IUiConsentService } from \'@lib/interfaces/consent-service.interface\';\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { catchError, take, throwError } from \'rxjs\';\\nimport { Router } from \'@angular/router\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { CookieService } from \'ngx-cookie-service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { HttpErrorResponse } from \'@angular/common/http\';\\nimport { UiAreYouSureModalComponent } from \'@lib/modules/authentification/components/modals/are-you-sure-modal.component\';\\n\\n@Component({\\n    selector: \'ui-user-consent-page\',\\n    templateUrl: \'./user-consent-page.component.html\',\\n    styleUrls: [\'./user-consent-page.component.scss\'],\\n})\\nexport class UiConsentPageComponent implements OnInit {\\n    @Input() public auth0;\\n\\n    constructor(\\n        private _router: Router,\\n        @Inject(ConsentService) private _consentService: IUiConsentService,\\n        private _modalService: NgbModal,\\n        private _configurationService: UiConfigurationService,\\n        private _translate: TranslateService,\\n        private _cookieService: CookieService\\n    ) {}\\n\\n    public ngOnInit(): void {\\n        this.openPrivacyModal(this.auth0);\\n    }\\n\\n    private openPrivacyModal(auth0: boolean) {\\n        if (this._modalService.hasOpenModals()) {\\n            return;\\n        }\\n        const modalRef = this._modalService.open(UiPrivacyAgreementModalComponent, { backdrop: false, scrollable: true, size: \'md\' });\\n        modalRef.result.then(\\n            // Do something here\\n            (result?: any) => {\\n                this._consentService\\n                    .giveConsent(this._cookieService.get(this._configurationService.appConfig.emailCookieId))\\n                    .pipe(take(1))\\n                    .subscribe({\\n                        next: (res: any) => {\\n                            this._cookieService.set(this._configurationService.appConfig.isConsentGiven, \'true\');\\n                            this._router.navigate([this._consentService.getReturnUrl()]);\\n                        },\\n                        error: catchError((error) => {\\n                            let errorMsg: string;\\n                            if (error.error instanceof ErrorEvent) {\\n                                errorMsg = `Error: ${error.error.message}`;\\n                            } else {\\n                                errorMsg = this.getConsentErrorMessage(error);\\n                            }\\n\\n                            return throwError(() => new Error(errorMsg));\\n                        }),\\n                    });\\n            },\\n            (dismiss?) => {\\n                this.openAreYouSureModal();\\n            }\\n        );\\n    }\\n\\n    private getConsentErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // TODO - add error states\\n            case 500:\\n            default: {\\n                this._translate.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private openAreYouSureModal() {\\n        const modalRef = this._modalService.open(UiAreYouSureModalComponent, new UiModalConfig());\\n\\n        modalRef.result.then(\\n            // Do something here\\n            (result?: any) => {\\n                this._modalService.dismissAll();\\n                this.openPrivacyModal(this.auth0);\\n            },\\n            (dismiss?) => {\\n                this._consentService.logout();\\n            }\\n        );\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n#background {\\n    background-image: url(/assets/images/login-background-top-right.svg), url(/assets/images/login-background-bottom-left.svg),        $blue-to-green;\\n    background-position: left top, right bottom, left;\\n    background-repeat: no-repeat, no-repeat, no-repeat;\\n    height: 100vh;\\n    overflow: auto;\\n}\\n ","styleUrl":"./user-consent-page.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_consentService","type":"IUiConsentService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_consentService","type":"IUiConsentService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translate","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div id=\\"background\\"></div>"},{"name":"UiCustomHeaderComponent","id":"component-UiCustomHeaderComponent-e1404e51b31c60c1b593af79e0f102a5ad5974df53309a35f78fd627f31512d7bdd1aadefc5f16a8ab7a715fc618d7481f423074153f22d452c5033aa2f1bbb3","file":"libs/ui/src/lib/modules/grid/components/custom-header/custom-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-custom-header","styleUrls":["./custom-header.component.scss"],"styles":[],"templateUrl":["./custom-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"ascSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"descSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"menuButton","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'menuButton\', {read: ElementRef}"}],"modifierKind":[123]},{"name":"noSort","defaultValue":"\'active\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"IHeaderParams","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"sortDirection","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onMenuClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSortChanged","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSortRequested","args":[{"name":"order","type":"\\"asc\\" | \\"desc\\"","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"order","type":"\\"asc\\" | \\"desc\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refresh","args":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, OnInit, ViewChild } from \'@angular/core\';\\nimport { IHeaderAngularComp } from \'ag-grid-angular\';\\nimport { IHeaderParams } from \'ag-grid-community\';\\n\\n@Component({\\n    selector: \'ui-custom-header\',\\n    templateUrl: \'./custom-header.component.html\',\\n    styleUrls: [\'./custom-header.component.scss\'],\\n})\\nexport class UiCustomHeaderComponent implements OnInit, IHeaderAngularComp {\\n\\n    public params: IHeaderParams;\\n\\n    public ascSort: string;\\n    public descSort: string;\\n    public noSort= \'active\';\\n\\n    public sortDirection: string;\\n\\n    @ViewChild(\'menuButton\', {read: ElementRef}) public menuButton;\\n\\n    constructor() {}\\n\\n    public agInit(params: IHeaderParams): void {\\n        this.params = params;\\n        params.column.addEventListener(\'sortChanged\', this.onSortChanged.bind(this));\\n    }\\n\\n    public onClick(){\\n\\n        if(this.params.enableSorting === true){\\n\\n            let sortDirection: \'asc\'|\'desc\';\\n\\n            if(this.params.column.getSort() === undefined) {\\n                sortDirection = \'desc\';\\n            }\\n            else if(this.params.column.getSort() === \'desc\')\\n            {\\n                sortDirection = \'asc\';\\n            }\\n            else if(this.params.column.getSort() === \'asc\'){\\n                sortDirection = null;\\n            }\\n\\n            this.sortDirection = sortDirection;\\n\\n            this.params.columnApi.applyColumnState({\\n                state: [\\n                    { colId: this.params.column.getColId(), sort: sortDirection, sortIndex: 0 },\\n                ],\\n                defaultState: { sort: null },\\n            });\\n        }\\n    }\\n\\n    public refresh(params: IHeaderParams) {\\n        return false;\\n    }\\n\\n    public onMenuClicked() {\\n        this.params.showColumnMenu(this.menuButton.nativeElement);\\n    };\\n\\n    public onSortChanged() {\\n        this.ascSort = this.descSort = this.noSort = \'inactive\';\\n        if (this.params.column.isSortAscending()) {\\n            this.ascSort = \'active\';\\n        } else if (this.params.column.isSortDescending()) {\\n            this.descSort = \'active\';\\n        } else {\\n            this.noSort = \'active\';\\n        }\\n    }\\n\\n    public onSortRequested(order: \'asc\' | \'desc\', event: any) {\\n        this.params.setSort(order, event.shiftKey);\\n    }\\n\\n    public ngOnInit(): void {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n    width: 100%;\\n    height: 100%;\\n}","styleUrl":"./custom-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":20},"implements":["OnInit","IHeaderAngularComp"],"templateData":"<div class=\\"d-flex align-items-center w-100 h-100\\" (click)=\\"onClick()\\">\\n    <div class=\\"customHeaderLabel\\">{{ params?.displayName }}</div>\\n    <div *ngIf=\\"params !== undefined && params[\'infoText\'] !== undefined\\" class=\\"ps-3\\">\\n        <i class=\\"bi bi-question-circle-fill ms-2\\" placement=\\"top\\" [ngbTooltip]=\\"params[\'infoText\']\\" container = \\"body\\" ></i>\\n    </div>\\n    \x3c!-- {{ascSort}}-{{descSort}}-{{noSort}} --\x3e\\n    <div *ngIf=\\"params !== undefined && params.enableSorting && ascSort === \'active\'\\" class=\\"ps-3\\">\\n        <i class=\\"bi bi-caret-up-fill\\"></i>\\n    </div>\\n    <div *ngIf=\\"params !== undefined && params.enableSorting && descSort === \'active\'\\" class=\\"ps-3\\">\\n        <i class=\\"bi bi-caret-down-fill\\"></i>\\n    </div>\\n    <div *ngIf=\\"params !== undefined && params.enableSorting && noSort === \'active\'\\" class=\\"bi-caret-up-down-fill ps-3\\">\\n        <i class=\\"bi bi-caret-up-fill params\\"></i>\\n        <i class=\\"bi bi-caret-down-fill\\"></i>\\n    </div>\\n</div>\\n"},{"name":"UiCustomLoadingCellRendererComponent","id":"component-UiCustomLoadingCellRendererComponent-3d44a9003402a94f88f8e3dc9c41c6d623d141cd499ffca24f5c68aaa39de96ec03bfe57ecbca888dacc13037c1190881be48d5ea1789e43c4452780bbfcf3ff","file":"libs/ui/src/lib/modules/grid/components/custom-loading-cell-renderer/custom-loading-cell-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-custom-loading-cell-renderer","styleUrls":["./custom-loading-cell-renderer.component.scss"],"styles":[],"templateUrl":["./custom-loading-cell-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { GridApi } from \'ag-grid-community\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { ILoadingCellRendererAngularComp } from \'ag-grid-angular\';\\n\\ninterface IUiLoadingCellRendererParams {\\n    // an optional template for the loading cell renderer\\n    loadingMessage?: string;\\n}\\n\\n@Component({\\n    selector: \'ui-custom-loading-cell-renderer\',\\n    templateUrl: \'./custom-loading-cell-renderer.component.html\',\\n    styleUrls: [\'./custom-loading-cell-renderer.component.scss\'],\\n})\\nexport class UiCustomLoadingCellRendererComponent implements ILoadingCellRendererAngularComp {\\n    public params: any;\\n\\n    // agInit(params: IUiLoadingCellRendererParams): void {\\n    public agInit(params: any): void {\\n        this.params = params;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./custom-loading-cell-renderer.component.scss"}],"stylesData":"","implements":["ILoadingCellRendererAngularComp"],"templateData":"<div class=\\"d-flex align-items-center ag-custom-loading-cell ms-2\\">\\n    <div class=\\"spinner-border spinner-border-sm text-primary me-3\\"></div>\\n    <span> {{ params.loadingMessage | translate }} </span>\\n</div>"},{"name":"UiCustomMultiSelectHeaderComponent","id":"component-UiCustomMultiSelectHeaderComponent-d0b93607a8b2ce395348e51afee634226516e06386d20c40822e999659ae899d21d61e9e3d0b54c94bf135ca10ea0a082cea9362502a89931523b9ebee872c4d","file":"libs/ui/src/lib/modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-custom-multiselect-header","styleUrls":["./custom-multiselect-header.component.scss"],"styles":[],"templateUrl":["./custom-multiselect-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"ariaCheckedState","deprecated":false,"deprecationMessage":"","type":" |  | \\"mixed\\"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"ascSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"checkedState","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"descSort","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"gridApi","deprecated":false,"deprecationMessage":"","type":"GridApi","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"headerCheckboxLabel","defaultValue":"this._translateService.instant(\'COMMON.SELECT\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"id","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"indeterminateState","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"multiSelectCheckbox","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":16,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'multiSelectCheckbox\'"}],"modifierKind":[123]},{"name":"noSort","defaultValue":"\'active\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"IHeaderParams","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"rowModelType","deprecated":false,"deprecationMessage":"","type":"\\"infinite\\" | \\"viewport\\" | \\"clientSide\\" | \\"serverSide\\"","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"selectedRows","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"RowNode[]","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"selectionChange$","defaultValue":"new EventEmitter<IUiSelectionChangeParams>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"sortDirection","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"totalRowsInGrid","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"visibleRowsLastIndex","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"IUiMultiSelectHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IUiMultiSelectHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCellClick","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onColumnHeaderClick","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSee: `UiCustomHeaderComponent` onClick() for reference\\n","description":"<p>See: <code>UiCustomHeaderComponent</code> onClick() for reference</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4751,"end":4756,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":4745,"end":4750,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Click event in column header</p>\\n"}]},{"name":"onRowSelected","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onToggle","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refresh","args":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"IHeaderParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggleAll","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","modifierKind":[121]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\n// Ag-Grid\\nimport { RowNode, GridApi, IHeaderParams } from \'ag-grid-community\';\\n// Ngx Translate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Interfaces\\nimport { IUiMultiSelectHeaderParams, IUiSelectionChangeParams } from \'../grid/interfaces\';\\n\\n@Component({\\n    selector: \'ui-custom-multiselect-header\',\\n    templateUrl: \'./custom-multiselect-header.component.html\',\\n    styleUrls: [\'./custom-multiselect-header.component.scss\'],\\n})\\nexport class UiCustomMultiSelectHeaderComponent implements OnInit, OnDestroy {\\n    @ViewChild(\'multiSelectCheckbox\') public multiSelectCheckbox: ElementRef;\\n\\n    public headerCheckboxLabel = this._translateService.instant(\'COMMON.SELECT\');\\n    public id: any;\\n    public disabled = false;\\n    public params: IHeaderParams;\\n    public gridApi: GridApi;\\n    public visibleRowsLastIndex: number; // TODO: can this come from the grid observable?\\n    public totalRowsInGrid: number; // TODO: can this come from the grid observable?\\n    public selectedRows: RowNode[] = [];\\n    public ariaCheckedState: true | false | \'mixed\';\\n    public checkedState: boolean;\\n    public indeterminateState: boolean;\\n\\n    public ascSort: string;\\n    public descSort: string;\\n    public noSort = \'active\';\\n    public rowModelType: \'infinite\' | \'viewport\' | \'clientSide\' | \'serverSide\';\\n    public sortDirection: string;\\n\\n    public selectionChange$ = new EventEmitter<IUiSelectionChangeParams>();\\n\\n    constructor(private _translateService: TranslateService) {\\n        const a = 1;\\n    }\\n\\n    public agInit(params: IUiMultiSelectHeaderParams): void {\\n        this.gridApi = params.api;\\n        this.params = params;\\n        this.id = params.gridId + \'-multi-select-header\';\\n        this.selectionChange$ = params.selectionChange;\\n        this.rowModelType = params.rowModelType;\\n\\n        /* Please keep this code for future reference\\n            Not required at this time since only the checkbox is being used for selection * /\\n        params.api.addEventListener(\'rowClicked\', (event) => {\\n            event.node.setSelected(!event.node.selected);\\n            this.onRowSelected(event);\\n        }); */\\n\\n        params.api.addEventListener(\'filterChanged\', (event) => {\\n            setTimeout(() => {\\n                this.gridApi.deselectAll();\\n            });\\n        });\\n\\n        // Fires when the checkbox is clicked or selected event\\n        params.api.addEventListener(\'rowSelected\', (event) => {\\n            this.onRowSelected(event);\\n        });\\n    }\\n\\n    public onRowSelected(event: any) {\\n        if (event.node.selectable) {\\n            const totalFilteredRows = this.gridApi.getDisplayedRowCount();\\n            const currentPageRows = this.gridApi.paginationGetPageSize();\\n\\n            this.indeterminateState = this.multiSelectCheckbox.nativeElement.indeterminate;\\n            this.checkedState = this.multiSelectCheckbox.nativeElement.checked;\\n\\n            this.selectedRows = this.gridApi.getSelectedRows();\\n\\n            if (this.selectedRows.length === 0) {\\n                this.checkedState = false;\\n                this.indeterminateState = false;\\n                this.ariaCheckedState = false;\\n            } else if (this.selectedRows.length === totalFilteredRows) {\\n                this.checkedState = true;\\n                this.indeterminateState = false;\\n                this.ariaCheckedState = true;\\n            } else if (this.selectedRows.length === currentPageRows) {\\n                this.checkedState = true;\\n                this.indeterminateState = false;\\n                this.ariaCheckedState = true;\\n            } else if (this.selectedRows.length < totalFilteredRows) {\\n                this.checkedState = false;\\n                this.indeterminateState = true;\\n                this.ariaCheckedState = \'mixed\';\\n            } else {\\n                console.error(\'rowSelected: error determining checkbox state\');\\n            }\\n\\n            // Emit the selection change event\\n            if (this.selectionChange$) {\\n                this.selectionChange$.emit({\\n                    gridId: this.id,\\n                    selectedRows: this.selectedRows,\\n                });\\n            }\\n        } else {\\n            console.error(`row is not selectable (row# = ${event.rowIndex}`);\\n        }\\n    }\\n\\n    public onToggle(event: Event): void {\\n        event.preventDefault();\\n        event.stopPropagation();\\n\\n        this.indeterminateState = this.multiSelectCheckbox.nativeElement.indeterminate;\\n        this.checkedState = this.multiSelectCheckbox.nativeElement.checked;\\n        this.toggleAll();\\n    }\\n\\n    /**\\n     * @see: `UiCustomHeaderComponent` onClick() for reference\\n     * @param event Click event in column header\\n     */\\n    public onColumnHeaderClick(event: any) {\\n        event.preventDefault();\\n        event.stopPropagation();\\n\\n        if (this.params.enableSorting === true) {\\n            let sortDirection: \'asc\' | \'desc\';\\n\\n            if (this.params.column.getSort() === undefined) {\\n                sortDirection = \'desc\';\\n            } else if (this.params.column.getSort() === \'desc\') {\\n                sortDirection = \'asc\';\\n            } else if (this.params.column.getSort() === \'asc\') {\\n                sortDirection = null;\\n            }\\n\\n            this.sortDirection = sortDirection;\\n\\n            this.params.columnApi.applyColumnState({\\n                state: [{ colId: this.params.column.getColId(), sort: sortDirection, sortIndex: 0 }],\\n                defaultState: { sort: null },\\n            });\\n        }\\n    }\\n\\n    public onCellClick(event: Event): void {\\n        event.preventDefault();\\n        event.stopPropagation();\\n\\n        this.checkedState = !this.multiSelectCheckbox.nativeElement.checked;\\n        this.indeterminateState = false;\\n        this.toggleAll();\\n    }\\n\\n    public refresh(params: IHeaderParams) {\\n        return false;\\n    }\\n\\n    public ngOnInit(): void {}\\n\\n    public ngOnDestroy(): void {\\n        this.selectionChange$.unsubscribe();\\n    }\\n\\n    private toggleAll() {\\n        if (this.rowModelType !== \'clientSide\') {\\n            console.error(\'toggleAll: Multi-Select is only supported for client-side row models.\');\\n        } else {\\n            if (this.indeterminateState) {\\n                console.error(\'toggleAll: checkbox in \\"mixed\\" state.\');\\n            } else if (this.checkedState) {\\n                this.gridApi.selectAllFiltered();\\n            } else if (!this.checkedState) {\\n                this.gridApi.deselectAllFiltered();\\n            }\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".grid-multiselect-checkbox {\\n    width: 100%;\\n    height: 100%;\\n    position: relative;\\n\\n    margin-right: 0.5rem;\\n\\n    display: flex;\\n    flex-wrap: nowrap;\\n    align-items: center;\\n\\n    input.form-check-input {\\n        width: 1rem;\\n        height: 1rem;\\n    }\\n}\\n","styleUrl":"./custom-multiselect-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div class=\\"d-flex align-items-center w-100 h-100\\">\\n    <div class=\\"grid-multiselect-checkbox\\" [ngClass]=\\"{ \'d-none\': this.rowModelType !== \'clientSide\' }\\">\\n        <input\\n            #multiSelectCheckbox\\n            [id]=\\"id + \'_MultiSelectCheckbox\'\\"\\n            type=\\"checkbox\\"\\n            (change)=\\"onToggle($event)\\"\\n            class=\\"form-check-input\\"\\n            role=\\"checkbox\\"\\n            [attr.aria-checked]=\\"ariaCheckedState\\"\\n            [attr.aria-label]=\\"headerCheckboxLabel\\"\\n            [disabled]=\\"disabled\\"\\n            [checked]=\\"checkedState\\"\\n            [indeterminate]=\\"indeterminateState\\"\\n        />\\n    </div>\\n    \x3c!-- Sort template copied from @lib/...grid/components/custom-header/custom-header.component.html --\x3e\\n    <div class=\\"d-flex align-items-center w-100 h-100\\" (click)=\\"onColumnHeaderClick($event)\\">\\n        <div class=\\"customHeaderLabel\\">{{ params?.displayName }}</div>\\n        <div *ngIf=\\"params !== undefined && params[\'infoText\'] !== undefined\\" class=\\"ps-3\\">\\n            <i class=\\"bi bi-question-circle-fill ms-2\\" placement=\\"top\\" [ngbTooltip]=\\"params[\'infoText\']\\" container=\\"body\\"></i>\\n        </div>\\n        \x3c!-- {{ascSort}}-{{descSort}}-{{noSort}} --\x3e\\n        <div *ngIf=\\"params !== undefined && params.enableSorting && ascSort === \'active\'\\" class=\\"ps-3\\">\\n            <i class=\\"bi bi-caret-up-fill\\"></i>\\n        </div>\\n        <div *ngIf=\\"params !== undefined && params.enableSorting && descSort === \'active\'\\" class=\\"ps-3\\">\\n            <i class=\\"bi bi-caret-down-fill\\"></i>\\n        </div>\\n        <div *ngIf=\\"params !== undefined && params.enableSorting && noSort === \'active\'\\" class=\\"bi-caret-up-down-fill ps-3\\">\\n            <i class=\\"bi bi-caret-up-fill params\\"></i>\\n            <i class=\\"bi bi-caret-down-fill\\"></i>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiDashboardComponent","id":"component-UiDashboardComponent-d03450947d92e47bdf6339c24eea1880e3273b04d4502cc107ba5d9692facb28cb5daf9ad2b81eebf9fe8147adfa97326951fcbb89409910cbc018dd8444a43d","file":"libs/ui/src/lib/modules/dashboard/dashboard.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dashboard","styleUrls":["./dashboard.component.scss"],"styles":[],"templateUrl":["./dashboard.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"contactSupportLink","defaultValue":"\'#\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"returnUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"smallDashboardPage","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"UiButtonIconLocationEnum","defaultValue":"UiButtonIconLocationEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"UiButtonSizeEnum","defaultValue":"UiButtonSizeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"UiButtonTypeEnum","defaultValue":"UiButtonTypeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateTo","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { Router } from \'@angular/router\';\\nimport { UiLayoutService } from \'@lib/services/layout\';\\nimport { UiButtonSizeEnum } from \'../button/enums/action-button-size.enum\';\\nimport { UiButtonTypeEnum } from \'../button/enums/action-button-type.enum\';\\nimport { UiButtonIconLocationEnum } from \'../button/enums/action-button-icon-location.enum\';\\n\\n@Component({\\n    selector: \'ui-dashboard\',\\n    templateUrl: \'./dashboard.component.html\',\\n    styleUrls: [\'./dashboard.component.scss\'],\\n})\\nexport class UiDashboardComponent implements OnInit {\\n    public returnUrl = \'\';\\n    public contactSupportLink = \'#\';\\n    public smallDashboardPage = false;\\n    public UiButtonTypeEnum = UiButtonTypeEnum;\\n    public UiButtonSizeEnum = UiButtonSizeEnum;\\n    public UiButtonIconLocationEnum = UiButtonIconLocationEnum;\\n\\n    constructor(private _location: Location, private _layoutService: UiLayoutService, private _router: Router) {}\\n\\n    public ngOnInit() {\\n        this._layoutService.showContainer = true;\\n    }\\n\\n    public goBack() {\\n        this._location.back();\\n    }\\n\\n    public navigateTo(url: string) {\\n        this._router.navigate([url]);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\n\\n.windmill {\\n    position: absolute;\\n    width: 33%;\\n    min-width: 100px;\\n    right: 20px;\\n    bottom: -40px;\\n    z-index: 0;\\n\\n    &.small {\\n        width: 66%;\\n    }\\n}\\n\\n.title {\\n    font-size: 56px;\\n    color: $gray-700;\\n    font-weight: 700;\\n    line-height: 110%;\\n    padding-bottom: 20px;\\n\\n    &.small {\\n        font-size: 32px;\\n        letter-spacing: -0.01em;\\n    }\\n}\\n\\n.error-number {\\n    padding-top: 32px;\\n    padding-bottom: 32px;\\n    font-size: 16px;\\n    color: $gray-700;\\n}\\n\\n.main-error-content {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    max-width: 500px;\\n}\\n\\n.error-page {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    min-height: 350px;\\n\\n    &.small {\\n        justify-content: flex-start;\\n    }\\n}\\n\\n.feedback-text-wrapper {\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n\\n.main-dashboard-content {\\n    margin-top: -20px;\\n\\n    .welcome-banner {\\n        display: flex;\\n        padding: 32px;\\n        flex-direction: row;\\n        align-items: flex-start;\\n        gap: 32px;\\n        align-self: stretch;\\n        border-radius: 4px;\\n        border: 1px solid var(--neutral-gray-500, #D2D6DA);\\n        background: $secondary-tertiary-135;\\n        position: relative;\\n\\n        .triangle-div {\\n            position: absolute;\\n        }\\n\\n        .triangles {\\n            position: absolute;\\n            right: 0px;\\n            bottom: 0.001px;\\n        }\\n\\n        .welcome-banner-content {\\n            display: flex;\\n            max-width: 650px;\\n            flex-direction: column;\\n            align-items: flex-start;\\n            gap: 16px;\\n            align-self: stretch;\\n            text-wrap: pretty;\\n        }\\n\\n        .welcome-banner-title {\\n            color: $white;\\n            font-family: Roboto;\\n            font-size: 32px;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 110%;\\n            letter-spacing: -0.64px;\\n        }\\n\\n        .welcome-banner-text {\\n            color: $white;\\n            font-family: Roboto;\\n            font-size: 16px;\\n            font-style: normal;\\n            font-weight: 400;\\n            line-height: 150%;\\n        }\\n    }\\n\\n    .main-content {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        align-self: stretch;\\n        padding-top: 32px;\\n\\n        .main-content-header {\\n            color: $gray-900;\\n            font-family: Roboto;\\n            font-size: 28px;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 115%;\\n            letter-spacing: -0.28px;\\n        }\\n\\n        .row>* {\\n            padding-right: 0px;\\n            padding-left: 0px;\\n        }\\n\\n        .card-row {\\n            display: flex;\\n            align-items: flex-start;\\n            align-content: flex-start;\\n            gap: 16px;\\n            align-self: stretch;\\n            flex-wrap: wrap;\\n            padding-top: 16px;\\n            padding-bottom: 10px;\\n            padding-left: 13px;\\n        }\\n    }\\n\\n    ui-card {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        flex: 1 0 0;\\n        align-self: stretch;\\n\\n        ui-button {\\n            margin-left: -12px;\\n        }\\n\\n        .card-inner {\\n            display: flex;\\n            padding: 20px;\\n            flex-direction: column;\\n            justify-content: space-between;\\n            align-items: flex-start;\\n            flex: 1 0 0;\\n            align-self: stretch;\\n        }\\n\\n        .card-main-content {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: flex-start;\\n            gap: 8px;\\n            align-self: stretch;\\n            justify-content: space-around;\\n            min-height: 16rem;\\n            height: 100%;\\n\\n            @include media-breakpoint-down(lg) {\\n                height: auto;\\n            }\\n\\n            i {\\n                display: flex;\\n                width: 32px;\\n                height: 24px;\\n                flex-direction: column;\\n                justify-content: center;\\n                align-items: center;\\n                color: $primary;\\n                font-size: 32px;\\n            }\\n\\n            .card-text {\\n                font-size: 14px;\\n            }\\n        }\\n\\n        .gradient-bar {\\n            width: 100%;\\n            height: 8px;\\n            background: $secondary-primary-90;\\n            border-bottom-left-radius: 4px;\\n            border-bottom-right-radius: 4px;\\n        }\\n    }\\n}\\n","styleUrl":"./dashboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div id=\\"dashboard-page\\" class=\\"dashboard-page p-4\\" [ngClass]=\\"{ small: smallDashboardPage === true }\\">\\n    <div class=\\"main-dashboard-content pt-2\\">\\n        <div class=\\"welcome-banner\\">\\n            <div class=\\"welcome-banner-content\\">\\n                <div class=\\"welcome-banner-title\\">{{ \'COMMON.HOMEPAGE.WELCOME_TO_ASP\' | translate }}</div>\\n                <div class=\\"welcome-banner-text\\">\\n                    {{ \'COMMON.HOMEPAGE.THE_ASP_IS\' | translate }}\\n                </div>\\n            </div>\\n            <img class=\\"triangles\\" alt=\\"Triangles\\" src=\\"assets/images/triangles.svg\\" />\\n        </div>\\n        <div class=\\"main-content\\">\\n            <div class=\\"main-content-header\\">\\n                <h2>{{ \'COMMON.HOMEPAGE.SEE_WHATS_POSSIBLE\' | translate }}</h2>\\n            </div>\\n            <div class=\\"main-content-subtitle\\">{{ \'COMMON.HOMEPAGE.QUICKLY_ACCESS_YOUR\' | translate }}</div>\\n            <div class=\\"row card-row\\">\\n                <div class=\\"col-lg-3 flex-grow-1\\">\\n                    <ui-card id=\\"card_a\\" [showCustomLayout]=\\"true\\" class=\\"h-100\\">\\n                        <div class=\\"card-inner\\">\\n                            <div class=\\"card-main-content h-100\\">\\n                                <i class=\\"bi bi-envelope-fill\\"></i>\\n                                <h4 class=\\"card-title\\">{{ \'MENU.CUSTOMER_REQUESTS\' | translate }}</h4>\\n                                <p class=\\"card-text\\">\\n                                    {{ \'COMMON.HOMEPAGE.RECEIVE_CUSTOMER_REQUESTS\' | translate }}\\n                                </p>\\n                                <ui-button\\n                                    [text]=\\"\'COMMON.HOMEPAGE.VIEW_CUSTOMER_REQUESTS\' | translate\\"\\n                                    [type]=\\"UiButtonTypeEnum.LINK\\"\\n                                    [size]=\\"UiButtonSizeEnum.SMALL\\"\\n                                    [icon]=\\"\'bi bi-chevron-right\'\\"\\n                                    [iconLocation]=\\"UiButtonIconLocationEnum.suffix\\"\\n                                    (click)=\\"navigateTo(\'/customer-requests/product-declarations-customer-specific\')\\">\\n                                </ui-button>\\n                            </div>\\n                        </div>\\n                        <div class=\\"gradient-bar\\"></div>\\n                    </ui-card>\\n                </div>\\n                <div class=\\"col-lg-3 flex-grow-1\\">\\n                    <ui-card id=\\"card_b\\" [showCustomLayout]=\\"true\\" class=\\"h-100\\">\\n                        <div class=\\"card-inner\\">\\n                            <div class=\\"card-main-content h-100\\">\\n                                <i class=\\"bi bi-person-fill\\"></i>\\n                                <h4 class=\\"card-title\\">{{ \'COMMON.HOMEPAGE.ACCOUNT_PREFERENCES\' | translate }}</h4>\\n                                <p class=\\"card-text\\">\\n                                    {{ \'COMMON.HOMEPAGE.BUILD_YOUR_IDENTITY\' | translate }}\\n                                </p>\\n                                <ui-button\\n                                    [text]=\\"\'COMMON.HOMEPAGE.VIEW_ACCOUNT_PREFERENCES\' | translate\\"\\n                                    [type]=\\"UiButtonTypeEnum.LINK\\"\\n                                    [size]=\\"UiButtonSizeEnum.SMALL\\"\\n                                    [icon]=\\"\'bi bi-chevron-right\'\\"\\n                                    [iconLocation]=\\"UiButtonIconLocationEnum.suffix\\"\\n                                    (click)=\\"navigateTo(\'profile-manager\')\\">\\n                                </ui-button>\\n                            </div>\\n                        </div>\\n                        <div class=\\"gradient-bar\\"></div>\\n                    </ui-card>\\n                </div>\\n                <div class=\\"col-lg-3 flex-grow-1\\">\\n                    <ui-card id=\\"card_c\\" [showCustomLayout]=\\"true\\" class=\\"h-100\\">\\n                        <div class=\\"card-inner\\">\\n                            <div class=\\"card-main-content h-100\\">\\n                                <i class=\\"bi bi-box-fill\\"></i>\\n                                <h4 class=\\"card-title\\">{{ \'PRODUCT_CATALOG.PRODUCT_CATALOG\' | translate }}</h4>\\n                                <p class=\\"card-text\\">\\n                                    {{ \'COMMON.HOMEPAGE.IMPORT_PRODUCT_INFORMATION\' | translate }}\\n                                </p>\\n                                <ui-pill pillText=\\"{{ \'COMMON.COMING_SOON\' | translate }}\\"></ui-pill>\\n                                \x3c!--Button is commented out until product catalog is ready--\x3e\\n                                \x3c!-- <ui-button\\n                                    [text]=\\"\'COMMON.HOMEPAGE.VIEW_PRODUCT_CATALOG\' | translate\\"\\n                                    [type]=\\"UiButtonTypeEnum.LINK\\"\\n                                    [size]=\\"UiButtonSizeEnum.SMALL\\"\\n                                    [icon]=\\"\'bi bi-chevron-right\'\\"\\n                                    [iconLocation]=\\"\'suffix\'\\"\\n                                    (click)=\\"navigateTo(\'product-catalog\')\\">\\n                                </ui-button> --\x3e\\n                            </div>\\n                        </div>\\n                        <div class=\\"gradient-bar\\"></div>\\n                    </ui-card>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiDatepickerComponent","id":"component-UiDatepickerComponent-dc558a34c30f32cd79636c87be37139993caf0ad2019983de33065ab2eacca9bbdfb31fb4236021cd495c214948662789c33876578a3278cb8a0e3eac209020e","file":"libs/ui/src/lib/modules/form-controls/datepicker/datepicker.component.ts","encapsulation":["ViewEncapsulation.None"],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: UiDatepickerComponent,\\n}","type":"component"},{"name":"{\\n    provide: NG_VALIDATORS, multi: true, useExisting: UiDatepickerComponent,\\n}","type":"component"},{"name":"{\\n    provide: NgbDateAdapter, useClass: NgbDateNativeAdapter,\\n}"}],"selector":"ui-datepicker","styleUrls":["./datepicker.component.scss"],"styles":[],"templateUrl":["./datepicker.component.html"],"viewProviders":[],"inputsClass":[{"name":"maxDate","deprecated":false,"deprecationMessage":"","line":34,"type":"Date","decorators":[]},{"name":"minDate","deprecated":false,"deprecationMessage":"","line":33,"type":"Date","decorators":[]},{"name":"placeholder","defaultValue":"\'mm/dd/yyyy\'","deprecated":false,"deprecationMessage":"","line":31,"type":"string","decorators":[]},{"name":"placement","defaultValue":"\'bottom-left top-left\'","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"requiredDate","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":36,"type":"boolean","decorators":[]},{"name":"showIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":37,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"dateString","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"dpMaxDate","deprecated":false,"deprecationMessage":"","type":"NgbDateStruct","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"dpMinDate","deprecated":false,"deprecationMessage":"","type":"NgbDateStruct","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"dpModel","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"formField","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"onValidationChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"startDate","deprecated":false,"deprecationMessage":"","type":"NgbDate","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"touched","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]}],"methodsClass":[{"name":"clearValue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":178,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClears the selected date\\n","description":"<p>Clears the selected date</p>\\n","modifierKind":[123]},{"name":"extractDpModelValue","args":[{"name":"data","type":"Date | literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Date","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nExtracts the Date value from the input\\nIt is needed because of the different ways to create Angular forms\\n\\n","description":"<p>Extracts the Date value from the input\\nIt is needed because of the different ways to create Angular forms</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":6293,"end":6297,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"Date | literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":6287,"end":6292,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>input value</p>\\n"},{"tagName":{"pos":6318,"end":6325,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>actual date value</p>\\n"}]},{"name":"isValidDate","args":[{"name":"date","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":229,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if given object is valid date\\n\\n","description":"<p>Checks if given object is valid date</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":6772,"end":6776,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":6766,"end":6771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMarks the component as touched\\n","description":"<p>Marks the component as touched</p>\\n","modifierKind":[123]},{"name":"navigateByMonth","args":[{"name":"datepicker","type":"NgbDatepicker","deprecated":false,"deprecationMessage":""},{"name":"number","type":" | \\"1\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens the previous(-1) or the next(1) month in the datepicker\\n\\n","description":"<p>Opens the previous(-1) or the next(1) month in the datepicker</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5476,"end":5486,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"datepicker"},"type":"NgbDatepicker","deprecated":false,"deprecationMessage":"","tagName":{"pos":5470,"end":5475,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":5501,"end":5507,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":146,"escapedText":"number"},"type":" | \\"1\\"","deprecated":false,"deprecationMessage":"","tagName":{"pos":5495,"end":5500,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>-1 for previous or 1 for the next month</p>\\n"}]},{"name":"navigateByYear","args":[{"name":"datepicker","type":"NgbDatepicker","deprecated":false,"deprecationMessage":""},{"name":"number","type":" | \\"1\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":200,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens the previous(-1) or the next(1) year in the datepicker\\n\\n","description":"<p>Opens the previous(-1) or the next(1) year in the datepicker</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5859,"end":5869,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"datepicker"},"type":"NgbDatepicker","deprecated":false,"deprecationMessage":"","tagName":{"pos":5853,"end":5858,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"name":{"pos":5884,"end":5890,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":146,"escapedText":"number"},"type":" | \\"1\\"","deprecated":false,"deprecationMessage":"","tagName":{"pos":5878,"end":5883,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>-1 for previous or 1 for the next month</p>\\n"}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onDateSelect","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSelects the date from the datepicker\\n\\n","description":"<p>Selects the date from the datepicker</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4543,"end":4547,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"pos":4537,"end":4542,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"onTodayClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSelect Today\\n","description":"<p>Select Today</p>\\n","modifierKind":[123]},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor method\\n\\n","description":"<p>ControlValueAccessor method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2948,"end":2950,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":2942,"end":2947,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The callback function to register</p>\\n"}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor method\\n\\n","description":"<p>ControlValueAccessor method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3131,"end":3133,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":3125,"end":3130,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The callback function to register</p>\\n"}]},{"name":"registerOnValidatorChange","args":[{"name":"fn","type":"function","deprecated":false,"deprecationMessage":"","function":[]}],"optional":true,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidator optional method\\n\\n","description":"<p>Validator optional method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":4336,"end":4338,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"fn"},"type":"function","deprecated":false,"deprecationMessage":"","function":[],"tagName":{"pos":4330,"end":4335,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The callback function</p>\\n"}]},{"name":"setDatepickerLimits","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":299,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets datepicker minDate and maxDate limits\\n","description":"<p>Sets datepicker minDate and maxDate limits</p>\\n","modifierKind":[121]},{"name":"setDateString","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":309,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets this.dateSting in \'MM/DD/YYYY\' format\\n\\n","description":"<p>Sets this.dateSting in &#39;MM/DD/YYYY&#39; format</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9013,"end":9017,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"pos":9007,"end":9012,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor optional method\\n\\n","description":"<p>ControlValueAccessor optional method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3325,"end":3335,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"isDisabled"},"type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"pos":3319,"end":3324,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The disabled status to set on the element</p>\\n"}]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidator method\\n\\n","description":"<p>Validator method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3533,"end":3540,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"control"},"type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"pos":3527,"end":3532,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The control to validate against</p>\\n"}]},{"name":"validateDate","args":[{"name":"date","type":"Date","deprecated":false,"deprecationMessage":""},{"name":"prefix","type":"\\"min\\" | \\"max\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidates date (this.dpModel Date) based on this.minDate and this.maxDate validators\\n\\n","description":"<p>Validates date (this.dpModel Date) based on this.minDate and this.maxDate validators</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":7621,"end":7625,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"pos":7615,"end":7620,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>this.dpModel</p>\\n"},{"name":{"pos":7653,"end":7659,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"prefix"},"type":"\\"min\\" | \\"max\\"","deprecated":false,"deprecationMessage":"","tagName":{"pos":7647,"end":7652,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>choose this.minDate or this.minDate</p>\\n"},{"tagName":{"pos":7704,"end":7711,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"validateRequiredDate","args":[{"name":"date","type":"Date","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":246,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nValidates date(this.dpModel) to have a value\\nWe have to use this method, because the default required validator\\nrecognizes { value: null } as a valid value\\n\\n","description":"<p>Validates date(this.dpModel) to have a value\\nWe have to use this method, because the default required validator\\nrecognizes { value: null } as a valid value</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":7205,"end":7209,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"date"},"type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"pos":7199,"end":7204,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>this.dpModel</p>\\n"},{"tagName":{"pos":7231,"end":7238,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"writeValue","args":[{"name":"data","type":"Date | literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nControlValueAccessor method\\n\\n","description":"<p>ControlValueAccessor method</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"data","type":"Date | literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation } from \'@angular/core\';\\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from \'@angular/forms\';\\n// Ng Bootstrap\\nimport { NgbCalendar, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDatepicker, NgbDateStruct } from \'@ng-bootstrap/ng-bootstrap\';\\n\\n@Component({\\n    selector: \'ui-datepicker\',\\n    templateUrl: \'./datepicker.component.html\',\\n    styleUrls: [\'./datepicker.component.scss\'],\\n    // eslint-disable-next-line @angular-eslint/use-component-view-encapsulation\\n    encapsulation: ViewEncapsulation.None, // needed for popoverClass\\n    providers: [\\n        {\\n            provide: NG_VALUE_ACCESSOR,\\n            multi: true,\\n            useExisting: UiDatepickerComponent,\\n        },\\n        {\\n            provide: NG_VALIDATORS,\\n            multi: true,\\n            useExisting: UiDatepickerComponent,\\n        },\\n        {\\n            provide: NgbDateAdapter,\\n            useClass: NgbDateNativeAdapter,\\n        },\\n    ],\\n})\\nexport class UiDatepickerComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\\n    @Input() public placeholder = \'mm/dd/yyyy\';\\n    @Input() public placement = \'bottom-left top-left\';\\n    @Input() public minDate: Date;\\n    @Input() public maxDate: Date;\\n    // Hint: Use this property instead of the default required Validator to recognize { value: null } as empty value\\n    @Input() public requiredDate = false;\\n    @Input() public showIcon = false;\\n    public disabled = false;\\n    public touched = false;\\n    public formField: AbstractControl;\\n\\n    public dpModel: Date;\\n    public dateString: string;\\n    public startDate: NgbDate;\\n    public dpMinDate: NgbDateStruct;\\n    public dpMaxDate: NgbDateStruct;\\n\\n    constructor(private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>) {}\\n\\n    public onChange = ({ value }) => {};\\n    public onTouched = () => {};\\n    public onValidationChange = () => {};\\n\\n    public ngOnInit() {}\\n\\n    public ngOnChanges(changes: SimpleChanges) {\\n        // Checks if this is the initial value\\n        if (\\n            (changes.minDate && !changes.minDate.isFirstChange()) ||\\n            (changes.maxDate && !changes.maxDate.isFirstChange()) ||\\n            (changes.requiredDate && !changes.requiredDate.isFirstChange())\\n        ) {\\n            this.touched = true;\\n            this.onValidationChange();\\n        }\\n        this.setDatepickerLimits();\\n    }\\n\\n    /**\\n     * ControlValueAccessor method\\n     *\\n     * @param obj The new value for the element\\n     */\\n    public writeValue(data: Date | { value: Date }) {\\n        this.dpModel = this.extractDpModelValue(data);\\n        const ngbDate = this._dateAdapter.fromModel(this.dpModel) as NgbDate;\\n        this.setDateString(ngbDate);\\n        this.startDate = ngbDate;\\n    }\\n\\n    /**\\n     * ControlValueAccessor method\\n     *\\n     * @param fn The callback function to register\\n     */\\n    public registerOnChange(fn: any) {\\n        this.onChange = fn;\\n    }\\n\\n    /**\\n     * ControlValueAccessor method\\n     *\\n     * @param fn The callback function to register\\n     */\\n    public registerOnTouched(fn: any) {\\n        this.onTouched = fn;\\n    }\\n\\n    /**\\n     * ControlValueAccessor optional method\\n     *\\n     * @param isDisabled The disabled status to set on the element\\n     */\\n    public setDisabledState(isDisabled: boolean) {\\n        this.disabled = isDisabled;\\n    }\\n\\n    /**\\n     * Validator method\\n     *\\n     * @param control The control to validate against\\n     */\\n    public validate(control: AbstractControl): ValidationErrors | null {\\n        this.formField = control;\\n\\n        if (this.dpModel && !this.isValidDate(this.dpModel)) {\\n            throw new Error(\'Invalid Date type\');\\n        }\\n\\n        let error: ValidationErrors | null = null;\\n        // Checks requiredDate error even before the component is touched\\n        // Follows the default required Validator behavior\\n        error = this.validateRequiredDate(this.dpModel);\\n        if (this.touched) {\\n            error = error ? error : this.validateDate(this.dpModel, \'min\');\\n            error = error ? error : this.validateDate(this.dpModel, \'max\');\\n        }\\n\\n        return error;\\n    }\\n\\n    /**\\n     * Validator optional method\\n     *\\n     * @param fn The callback function\\n     */\\n    public registerOnValidatorChange?(fn: () => void) {\\n        this.onValidationChange = fn;\\n    }\\n\\n    /**\\n     * Selects the date from the datepicker\\n     *\\n     * @param date\\n     */\\n    public onDateSelect(date: NgbDate) {\\n        const formattedDate = this._dateAdapter.toModel(date);\\n        this.markAsTouched();\\n        this.startDate = date;\\n        this.setDateString(date);\\n        this.onChange({\\n            value: formattedDate,\\n        });\\n    }\\n\\n    /**\\n     * Select Today\\n     */\\n    public onTodayClick() {\\n        const today = this._calendar.getToday();\\n        this.dpModel = this._dateAdapter.toModel(today);\\n        this.onDateSelect(today);\\n    }\\n\\n    /**\\n     * Marks the component as touched\\n     */\\n    public markAsTouched() {\\n        if (!this.touched) {\\n            this.onTouched();\\n            this.touched = true;\\n        }\\n    }\\n\\n    /**\\n     * Clears the selected date\\n     */\\n    public clearValue() {\\n        this.dpModel = null;\\n        this.onDateSelect(null);\\n    }\\n\\n    /**\\n     * Opens the previous(-1) or the next(1) month in the datepicker\\n     *\\n     * @param datepicker\\n     * @param number -1 for previous or 1 for the next month\\n     */\\n    public navigateByMonth(datepicker: NgbDatepicker, number: -1 | 1) {\\n        const { state, calendar } = datepicker;\\n        datepicker.navigateTo(calendar.getNext(state.firstDate, \'m\', number));\\n    }\\n\\n    /**\\n     * Opens the previous(-1) or the next(1) year in the datepicker\\n     *\\n     * @param datepicker\\n     * @param number -1 for previous or 1 for the next month\\n     */\\n    public navigateByYear(datepicker: NgbDatepicker, number: -1 | 1) {\\n        const { state, calendar } = datepicker;\\n        datepicker.navigateTo(calendar.getNext(state.firstDate, \'y\', number));\\n    }\\n\\n    /**\\n     * Extracts the Date value from the input\\n     * It is needed because of the different ways to create Angular forms\\n     *\\n     * @param data input value\\n     * @returns actual date value\\n     */\\n    private extractDpModelValue(data: Date | { value: Date }): Date {\\n        let value = null;\\n        if (data) {\\n            value = data.hasOwnProperty(\'value\') ? (data as { value: Date }).value : data;\\n            if (typeof value === \'string\') {\\n                value = new Date(value);\\n            }\\n        }\\n\\n        return value;\\n    }\\n\\n    /**\\n     * Checks if given object is valid date\\n     *\\n     * @param date\\n     */\\n    private isValidDate(date: any): boolean {\\n        let valid = false;\\n        if (date instanceof Date && typeof date.getMonth === \'function\') {\\n            valid = true;\\n        }\\n\\n        return valid;\\n    }\\n\\n    /**\\n     * Validates date(this.dpModel) to have a value\\n     * We have to use this method, because the default required validator\\n     * recognizes { value: null } as a valid value\\n     *\\n     * @param date this.dpModel\\n     * @returns\\n     */\\n    private validateRequiredDate(date: Date): ValidationErrors | null {\\n        let error = null;\\n        if (this.requiredDate && !date) {\\n            error = {\\n                requiredDate: true,\\n            };\\n        }\\n\\n        return error;\\n    }\\n\\n    /**\\n     * Validates date (this.dpModel Date) based on this.minDate and this.maxDate validators\\n     *\\n     * @param date this.dpModel\\n     * @param prefix choose this.minDate or this.minDate\\n     * @returns\\n     */\\n    private validateDate(date: Date, prefix: \'min\' | \'max\'): ValidationErrors | null {\\n        const limitDate = this[prefix + \'Date\'];\\n        if (!limitDate || !date) {\\n            return null;\\n        }\\n\\n        if (!this.isValidDate(limitDate)) {\\n            throw new Error(\'Invalid Date type\');\\n        }\\n\\n        let valid: ValidationErrors | null = null;\\n        const copiedLimit = new Date(limitDate.getTime());\\n        const copiedDate = new Date(date.getTime());\\n        copiedLimit.setHours(0, 0, 0, 0);\\n        copiedDate.setHours(0, 0, 0, 0);\\n        if (prefix === \'min\' && copiedLimit > copiedDate) {\\n            valid = {\\n                minDate: {\\n                    min: this.minDate,\\n                },\\n            };\\n        } else if (prefix === \'max\' && copiedLimit < copiedDate) {\\n            valid = {\\n                maxDate: {\\n                    max: this.maxDate,\\n                },\\n            };\\n        }\\n\\n        return valid;\\n    }\\n\\n    /**\\n     * Sets datepicker minDate and maxDate limits\\n     */\\n    private setDatepickerLimits() {\\n        this.dpMinDate = this._dateAdapter.fromModel(this.minDate);\\n        this.dpMaxDate = this._dateAdapter.fromModel(this.maxDate);\\n    }\\n\\n    /**\\n     * Sets this.dateSting in \'MM/DD/YYYY\' format\\n     *\\n     * @param date\\n     */\\n    private setDateString(date: NgbDate) {\\n        let formattedDate: string;\\n        if (date) {\\n            formattedDate = (\'0\' + date.month).slice(-2) + \'/\' + (\'0\' + date.day).slice(-2) + \'/\' + date.year;\\n        } else {\\n            formattedDate = this.placeholder;\\n        }\\n\\n        this.dateString = formattedDate;\\n    }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\n\\n.form-control[readonly] {\\n    background-color: $white;\\n\\n    &:disabled {\\n        background-color: $gray-200;\\n    }\\n}\\n\\n.clear-icon {\\n    border: 0;\\n    color: $gray-600;\\n    cursor: pointer;\\n    font-size: 1rem;\\n    line-height: 1.5rem;\\n    // padding: 0.375rem 0.75rem;\\n    position: absolute;\\n    right: 40px;\\n    top: 7px;\\n    vertical-align: middle;\\n    // visibility: hidden;\\n    z-index: 3;\\n}\\n\\n.clear-icon:hover {\\n    visibility: visible;\\n}\\n\\n.datepicker-input:hover + .clear-icon {\\n    visibility: visible;\\n}\\n\\n.datepicker-input:focus + .clear-icon {\\n    visibility: visible;\\n}\\n\\n.custom-popover {\\n    border-color: $gray-400;\\n    border-radius: 2px;\\n    border: 0;\\n    box-shadow: 0px 9px 12px rgba(0, 0, 0, 0.14), 0px 3px 16px rgba(0, 0, 0, 0.12), 0px 5px 6px rgba(0, 0, 0, 0.2);\\n    .arrow {\\n        display: none;\\n    }\\n    .popover-body {\\n        padding: 0;\\n    }\\n}\\n\\n.custom-datepicker {\\n    border: 0;\\n    border-radius: 0;\\n\\n    .ngb-dp-header {\\n        background-color: $white;\\n    }\\n\\n    .ngb-dp-weekday {\\n        color: $primary;\\n    }\\n\\n    .ngb-dp-content .ng-star-inserted {\\n        .custom-datepicker-month {\\n            border-bottom: 1px solid $gray-400;\\n            border-top: 1px solid $gray-400;\\n            padding: 0 0.5rem;\\n            .ngb-dp-weekdays {\\n                background-color: $white;\\n                border-bottom: 0;\\n                padding: 0.1rem 0;\\n                .ngb-dp-weekday {\\n                    color: $gray-900;\\n                    font-style: normal;\\n                    font-weight: normal;\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n.custom-day {\\n    border-radius: 0.25rem;\\n    border: 0.1rem;\\n    box-sizing: border-box;\\n    color: $gray-900;\\n    display: inline-block;\\n    padding: 0.185rem 0.25rem;\\n    text-align: center;\\n    width: 2rem;\\n}\\n\\n.custom-day:hover {\\n    background-color: $gray-200;\\n}\\n\\n.selected-day {\\n    border: 0.1rem solid $primary;\\n    background-color: $white;\\n}\\n\\n.disabled-day {\\n    color: $gray-400;\\n}\\n\\n.another-month {\\n    color: $gray-600;\\n}\\n\\n.footer-container {\\n    padding: 0.5rem;\\n    text-align: center;\\n\\n    .custom-footer {\\n        color: $primary;\\n        cursor: pointer;\\n        display: inline-block;\\n    }\\n}\\n\\n.inner-addon { \\n    position: relative; \\n}\\n\\n/* style icon */\\n.inner-addon .bi-calendar3 {\\n  position: absolute;\\n  padding: 10px;\\n  pointer-events: none;\\n}\\n\\n/* align icon */\\n.left-addon .bi  { left:  5px;}\\n.right-addon .bi { right: 5px;}\\n\\n/* add padding  */\\n.left-addon input  { padding-left:  40px; }\\n.right-addon input { padding-right: 40px; }\\n\\n.was-validated .form-control:valid, .was-validated .acp-form-control:valid, .form-control.is-valid,  .ng-valid, .ng-invalid, .is-valid.acp-form-control, .acp-form-control.ng-valid.ng-touched, .acp-form-control.ng-valid.ng-dirty {\\n    .right-addon .bi { right: 30px;}\\n    .right-addon  .bi.clear-icon { right: 65px;}\\n}\\n\\n.input-group {\\n    .inner-addon {\\n        position: relative;\\n        flex: 1 1 auto;\\n        width: 1%;\\n        min-width: 0;\\n        input {\\n            margin-left: -1px;\\n            border-top-left-radius: 0;\\n            border-bottom-left-radius: 0;\\n        }\\n        \\n    }\\n}\\n\\n.input-group > .form-control, .input-group > .acp-form-control, .input-group > .form-select {\\n    position: relative;\\n    flex: 1 1 auto;\\n    width: 1%;\\n    min-width: 0;\\n}","styleUrl":"./datepicker.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":""},{"name":"_dateAdapter","type":"NgbDateAdapter<any>","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_dateAdapter","type":"NgbDateAdapter<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnChanges","ControlValueAccessor","Validator"],"templateData":" <div class=\\"input-group\\">\\n    \\n    \x3c!-- <i *ngIf=\\"!disabled && dpModel\\" class=\\"bi bi-x clear-icon\\" (click)=\\"clearValue()\\"></i>     --\x3e\\n    <input\\n        class=\\"form-control\\"\\n        [ngClass]=\\"{\\n            \'is-invalid\': formField !== undefined && formField.invalid && (formField.touched || formField.dirty)\\n        }\\"\\n        autocomplete=\\"off\\"\\n        [placeholder]=\\"placeholder\\"\\n        [readonly]=\\"!showIcon\\"\\n        [disabled]=\\"disabled\\"\\n        [value]=\\"dateString\\"\\n        [ngbPopover]=\\"datepickerContent\\"\\n        #popover=\\"ngbPopover\\"\\n        popoverClass=\\"custom-popover\\"\\n        container=\\"body\\"\\n        [placement]=\\"placement\\"\\n        autoClose=\\"outside\\"\\n        (blur)=\\"onTouched()\\"\\n        (keydown.backspace)=\\"!disabled && clearValue()\\">  \\n    \\n    <span class=\\"input-group-text\\"> \\n        <i class=\\"bi bi-calendar3\\" aria-hidden=\\"true\\"></i>\\n    </span>\\n    \x3c!-- <button\\n        *ngIf=\\"showIcon && !disabled\\"\\n        class=\\"btn btn-outline-secondary pointer\\"\\n        type=\\"button\\"\\n        [ngbPopover]=\\"datepickerContent\\"\\n        #popover=\\"ngbPopover\\"\\n        popoverClass=\\"custom-popover\\"\\n        container=\\"body\\"\\n        [placement]=\\"placement\\"\\n        (blur)=\\"onTouched()\\"\\n        autoClose=\\"outside\\">\\n        <i class=\\"fa fa-calendar\\"></i>\\n    </button> --\x3e\\n</div>\\n\\n<ng-template #datepickerContent>\\n    <ngb-datepicker\\n        #d\\n        name=\\"dp\\"\\n        class=\\"custom-datepicker\\"\\n        navigation=\\"none\\"\\n        [dayTemplate]=\\"dayTemplate\\"\\n        [footerTemplate]=\\"footerTemplate\\"\\n        [disabled]=\\"disabled\\"\\n        [minDate]=\\"dpMinDate\\"\\n        [maxDate]=\\"dpMaxDate\\"\\n        [(ngModel)]=\\"dpModel\\"\\n        [startDate]=\\"startDate\\"\\n        (dateSelect)=\\"onDateSelect($event); popover.close()\\">\\n        <ng-template ngbDatepickerContent>\\n            <div *ngFor=\\"let month of d.state.months\\">\\n                <div class=\\"text-primary px-1 py-2 fw-bold text-center\\">\\n                    <i class=\\"bi bi-chevron-double-left float-start px-1\\" role=\\"button\\" (click)=\\"navigateByYear(d, -1)\\"></i>\\n                    <i class=\\"bi bi-chevron-left float-start px-1\\" role=\\"button\\" (click)=\\"navigateByMonth(d, -1)\\"></i>\\n                    {{month.month | monthNamePipe}} {{ month.year }}\\n                    <i class=\\"bi bi-chevron-double-right float-end px-1\\" role=\\"button\\" (click)=\\"navigateByYear(d, 1)\\"></i>\\n                    <i class=\\"bi bi-chevron-right float-end px-1\\" role=\\"button\\" (click)=\\"navigateByMonth(d, 1)\\"></i>\\n                </div>\\n                <ngb-datepicker-month class=\\"custom-datepicker-month\\" [month]=\\"month\\"></ngb-datepicker-month>\\n            </div>\\n        </ng-template>\\n    </ngb-datepicker>\\n</ng-template>\\n\\n<ng-template\\n    #dayTemplate\\n    let-date\\n    let-currentMonth=\\"currentMonth\\"\\n    let-selected=\\"selected\\"\\n    let-disabled=\\"disabled\\">\\n    <span class=\\"custom-day\\"\\n        [class.selected-day]=\\"selected\\"\\n        [class.disabled-day]=\\"disabled\\"\\n        [class.another-month]=\\"!disabled && date.month !== currentMonth\\">\\n        {{ date.day }}\\n    </span>\\n</ng-template>\\n\\n<ng-template #footerTemplate>\\n    <div class=\\"footer-container\\">\\n        <span class=\\"custom-footer\\" (click)=\\"onTodayClick(); popover.close()\\">\\n            Today\\n        </span>\\n    </div>\\n</ng-template>\\n"},{"name":"UiDatePickerPlusComponent","id":"component-UiDatePickerPlusComponent-15bfdf9ff12b58f6b1f5aa13b332a8d9603820953986212e367f84eb8c148ccfa2a30e4b1ad77591942b1a10b4823618c3952dca7f40da708033cb017dcf248d","file":"libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-date-picker-plus-component","styleUrls":["./ui-date-picker-plus.component.scss"],"styles":[],"templateUrl":["./ui-date-picker-plus.component.html"],"viewProviders":[],"inputsClass":[{"name":"displayMonths","defaultValue":"2","deprecated":false,"deprecationMessage":"","line":12,"type":"number","decorators":[]},{"name":"footerTemplate","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]},{"name":"fromDate","deprecated":false,"deprecationMessage":"","line":14,"type":"literal type","decorators":[]},{"name":"toDate","deprecated":false,"deprecationMessage":"","line":22,"type":"literal type","decorators":[]}],"outputsClass":[{"name":"dateSelectionChange","defaultValue":"new EventEmitter<{\\n        fromDate: { day: number; month: number; year: number };\\n        toDate?: { day: number; month: number; year: number };\\n    }>()","deprecated":false,"deprecationMessage":"","line":30,"type":"EventEmitter"}],"propertiesClass":[{"name":"_fromDate","deprecated":false,"deprecationMessage":"","type":"NgbDate","optional":false,"description":"","line":42,"modifierKind":[121]},{"name":"_toDate","deprecated":false,"deprecationMessage":"","type":"NgbDate","optional":false,"description":"","line":43,"modifierKind":[121]},{"name":"hoveredDate","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"NgbDate | null","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"maxDays","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"navigation","defaultValue":"\'select\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"outsideDays","defaultValue":"\'hidden\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"showWeekNumbers","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36,"modifierKind":[123]},{"name":"weekdays","defaultValue":"TranslationWidth.Abbreviated","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]}],"methodsClass":[{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"formatDateString","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFromDate","args":[],"optional":false,"returnType":"NgbDate","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getToDate","args":[],"optional":false,"returnType":"NgbDate","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isHovered","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isInside","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isRange","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onDateSelection","args":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"date","type":"NgbDate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { TranslationWidth } from \'@angular/common\';\\nimport { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { NgbCalendar, NgbDate } from \'@ng-bootstrap/ng-bootstrap\';\\n\\n@Component({\\n    selector: \'ui-date-picker-plus-component\',\\n    templateUrl: \'./ui-date-picker-plus.component.html\',\\n    styleUrls: [\'./ui-date-picker-plus.component.scss\'],\\n})\\nexport class UiDatePickerPlusComponent implements OnInit {\\n    @Input() public footerTemplate = false;\\n    @Input() public displayMonths = 2;\\n\\n    @Input() public set fromDate(date: { day: number; month: number; year: number }) {\\n        this._fromDate = new NgbDate(date.year, date.month, date.day);\\n    }\\n\\n    public get fromDate() {\\n        return { day: this._fromDate.day, month: this._fromDate.month, year: this._fromDate.year };\\n    }\\n\\n    @Input() public set toDate(date: { day: number; month: number; year: number }) {\\n        this._toDate = new NgbDate(date.year, date.month, date.day);\\n    }\\n\\n    public get toDate() {\\n        return { day: this._toDate.day, month: this._toDate.month, year: this._toDate.year };\\n    }\\n\\n    @Output() public dateSelectionChange = new EventEmitter<{\\n        fromDate: { day: number; month: number; year: number };\\n        toDate?: { day: number; month: number; year: number };\\n    }>();\\n\\n    public navigation = \'select\';\\n    public showWeekNumbers = false;\\n    public outsideDays = \'hidden\';\\n    public hoveredDate: NgbDate | null = null;\\n    public weekdays = TranslationWidth.Abbreviated;\\n    public maxDays;\\n\\n    private _fromDate: NgbDate;\\n    private _toDate: NgbDate;\\n\\n    constructor(private _calendar: NgbCalendar) {}\\n\\n    public ngOnInit() {\\n        if (this.displayMonths === 1) {\\n            this.toDate = new NgbDate(null, null, null);\\n            this.maxDays = 1;\\n        }\\n        if ((this.fromDate === undefined || this.fromDate.year === null, this.fromDate.month === null, this.fromDate.day === null)) {\\n            this._fromDate = this._calendar.getToday();\\n        } else {\\n            this._fromDate = new NgbDate(this.fromDate.year, this.fromDate.month, this.fromDate.day);\\n        }\\n\\n        if (\\n            this.displayMonths === 2 &&\\n            (this.toDate === undefined || this.toDate === null || this.toDate.year === null,\\n            this.toDate.month === null,\\n            this.toDate.day === null)\\n        ) {\\n            this._toDate = this._calendar.getNext(this._calendar.getToday(), \'d\', 10);\\n        } else {\\n            this._toDate = new NgbDate(this.toDate.year, this.toDate.month, this.toDate.day);\\n        }\\n\\n        this.dateSelectionChange.emit({ fromDate: this.fromDate, toDate: this.toDate });\\n    }\\n\\n    public onDateSelection(date: NgbDate) {\\n        if (\\n            (!this._fromDate || (this._fromDate.year === null, this._fromDate.month === null, this._fromDate.day === null)) &&\\n            !this._toDate\\n        ) {\\n            this._fromDate = new NgbDate(date.year, date.month, date.day);\\n            this._toDate = new NgbDate(null, null, null);\\n        } else if (\\n            this._fromDate &&\\n            !(this._fromDate.year === null, this._fromDate.month === null, this._fromDate.day === null) &&\\n            (!this._toDate || (this._toDate.year === null, this._toDate.month === null, this._toDate.day === null)) &&\\n            date.after(this._fromDate)\\n        ) {\\n            if (this.displayMonths === 2) {\\n                this._toDate = new NgbDate(date.year, date.month, date.day);\\n            } else {\\n                this._fromDate = new NgbDate(date.year, date.month, date.day);\\n                this._toDate = new NgbDate(null, null, null);\\n            }\\n        } else {\\n            this._fromDate = new NgbDate(date.year, date.month, date.day);\\n            this._toDate = new NgbDate(null, null, null);\\n        }\\n        this.dateSelectionChange.emit({ fromDate: this.fromDate, toDate: this.toDate });\\n    }\\n\\n    public getFromDate() {\\n        return this._fromDate;\\n    }\\n\\n    public getToDate() {\\n        return this._toDate;\\n    }\\n\\n    public formatDateString(date: NgbDate) {\\n        if (date !== undefined && date !== null) {\\n            const year = date.year;\\n            const month = date.month <= 9 ? \'0\' + date.month : date.month;\\n            const day = date.day <= 9 ? \'0\' + date.day : date.day;\\n            const finalDate = year + \'-\' + month + \'-\' + day;\\n            return finalDate;\\n        }\\n    }\\n\\n    public isHovered(date: NgbDate) {\\n        return this._fromDate && !this._toDate && this.hoveredDate && date.after(this._fromDate) && date.before(this.hoveredDate);\\n    }\\n\\n    public isInside(date: NgbDate) {\\n        return this._toDate && date.after(this._fromDate) && date.before(this._toDate);\\n    }\\n\\n    public isRange(date: NgbDate) {\\n        return date.equals(this._fromDate) || (this._toDate && date.equals(this._toDate)) || this.isInside(date) || this.isHovered(date);\\n    }\\n\\n    public clear() {\\n        this._fromDate = new NgbDate(null, null, null);\\n        this._toDate = new NgbDate(null, null, null);\\n        this.dateSelectionChange.emit({ fromDate: this.fromDate, toDate: this.toDate });\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\n\\n.footer-controls {\\n    gap: 0.375rem;\\n    display: flex;\\n    justify-content: flex-end;\\n    padding: 0px 16px 8px 16px;\\n    margin-top: -8px; //To remove extra space from hr line padding above\\n}\\n\\n:host ::ng-deep ngb-datepicker {\\n    min-width: 15rem;\\n    width: 15rem;\\n    border-color: $gray-500;\\n    //box-shadow: 0px 4px 8px 0px #00000026;\\n    //Add box shadow back for non-inline\\n\\n    .ngb-dp-month {\\n        width: 15rem;\\n        padding: 8px;\\n    }\\n\\n    .ngb-dp-weekday {\\n        color: $gray-700;\\n        font-style: normal;\\n        line-height: 1.31rem;\\n    }\\n\\n    .ngb-dp-month:last-child .ngb-dp-week {\\n        padding-right: 0;\\n    }\\n\\n    .ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,\\n    .ngb-dp-month+.ngb-dp-month .ngb-dp-week {\\n        padding-left: 0;\\n    }\\n\\n    &.ranged {\\n        width: 30rem;\\n\\n        .ngb-dp-months {\\n            display: flex;\\n            justify-content: center;\\n            align-content: center;\\n            flex-direction: row;\\n            flex-wrap: nowrap;\\n        }\\n\\n        .ngb-dp-month {\\n            width: 18.75rem;\\n            padding: 8px;\\n        }\\n\\n        .ngb-dp-weekday {\\n            color: $gray-700;\\n            font-style: normal;\\n            line-height: 1.31rem;\\n        }\\n\\n        .ngb-dp-week {\\n            justify-content: space-between;\\n        }\\n\\n        .ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,\\n        .ngb-dp-month+.ngb-dp-month .ngb-dp-week {\\n            padding-left: 0;\\n        }\\n\\n        .ngb-dp-day {\\n            font-size: 14px;\\n            height: 1.9rem;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n\\n            &.focused {\\n                background-color: $primary-500;\\n                color: $white;\\n                width: 2rem;\\n\\n                &:hover {\\n                    color: $white;\\n                }\\n            }\\n\\n            &.range {\\n                background-color: $primary-500;\\n                color: $white;\\n\\n                &:hover {\\n                    border: 1px solid $primary-500;\\n                }\\n            }\\n\\n            &.faded {\\n                background-color: $primary-100 !important;\\n                color: $black;\\n                width: 2.5rem;\\n\\n                &:hover {\\n                    border: 1px solid $primary-500;\\n                    background-color: $primary-100;\\n                }\\n            }\\n\\n            :hover {\\n                border: 1px solid $primary-500;\\n            }\\n        }\\n\\n        ngb-datepicker-navigation-select {\\n            padding: 0px 4px 0px 4px;\\n            gap: 8px;\\n            display: flex;\\n\\n            .form-select {\\n                width: 12rem;\\n            }\\n        }\\n\\n        .ngb-dp-navigation-chevron {\\n            border-style: solid;\\n            border-width: 0.1em .1em 0 0;\\n            display: inline-block;\\n            width: .75em;\\n            height: .75em;\\n            color: $gray-900;\\n        }\\n    }\\n\\n    //end range\\n\\n    .ngb-dp-weekdays {\\n        margin-bottom: 8px;\\n        padding-top: 8px;\\n    }\\n\\n    .ngb-dp-month-name {\\n        font-size: 16px;\\n        font-weight: 400;\\n        line-height: 24px;\\n        padding: 8px;\\n        gap: 8px;\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        height: 2.5rem;\\n    }\\n\\n    .ngb-dp-header {\\n        background-color: $white;\\n        padding: 8px 8px 0px 8px;\\n    }\\n\\n    .ngb-dp-content {\\n\\n        .ngb-dp-month-name,\\n        .ngb-dp-week {\\n            background-color: $white;\\n        }\\n    }\\n\\n    ngb-datepicker-navigation-select {\\n        padding: 0px 4px 0px 4px;\\n        display: flex;\\n    }\\n\\n    .ngb-dp-navigation-chevron {\\n        border-style: solid;\\n        border-width: 0.1em .1em 0 0;\\n        display: inline-block;\\n        width: .75em;\\n        height: .75em;\\n        color: $gray-900;\\n    }\\n\\n    .ngb-dp-month:first-child .ngb-dp-week {\\n        padding-left: 0;\\n    }\\n\\n    .ngb-dp-months {\\n        display: flex;\\n        justify-content: center;\\n        align-content: center;\\n        flex-direction: column;\\n        flex-wrap: nowrap;\\n    }\\n\\n    .ngb-dp-day {\\n        font-size: 14px;\\n        width: 2rem;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n\\n        &.range {\\n            background-color: $primary-500;\\n            color: $white;\\n\\n            &.faded {\\n                background-color: $white;\\n                color: $black;\\n            }\\n        }\\n\\n        .focused {\\n            background-color: $primary-500;\\n            color: $white;\\n            z-index: 4;\\n        }\\n\\n        &.range {\\n\\n            &:hover {\\n                border: 1px solid $primary-500;\\n            }\\n        }\\n\\n        :hover {\\n            border: 1px solid $primary-500;\\n        }\\n    }\\n\\n}","styleUrl":"./ui-date-picker-plus.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":""}],"line":43,"jsdoctags":[{"name":"_calendar","type":"NgbCalendar","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"fromDate":{"name":"fromDate","setSignature":{"name":"fromDate","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":14,"jsdoctags":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"fromDate","type":"","returnType":"","line":18}},"toDate":{"name":"toDate","setSignature":{"name":"toDate","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":22,"jsdoctags":[{"name":"date","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"toDate","type":"","returnType":"","line":26}}},"templateData":"    <ngb-datepicker\\n        #datePicker\\n        [ngClass]=\\"{ ranged: displayMonths === 2 }\\"\\n        (dateSelect)=\\"onDateSelection($event)\\"\\n        [displayMonths]=\\"displayMonths\\"\\n        [navigation]=\\"navigation\\"\\n        [showWeekNumbers]=\\"showWeekNumbers\\"\\n        [weekdays]=\\"weekdays\\"\\n        [outsideDays]=\\"outsideDays\\"\\n        [footerTemplate]=\\"footerTemplate\\" \\n        [dayTemplate]=\\"dayTemplate\\"\\n        strictMode=\'true\'\\n    >\\n        <ng-template #footerTemplate [ngIf]=\\"footerTemplate\\">\\n            <hr />\\n            <div class=\\"footer-controls\\">\\n                <button class=\\"btn btn-link btn-sm\\" (click)=\\"clear()\\">Clear</button>\\n                <button class=\\"btn btn-link btn-sm\\">Apply</button>\\n            </div>\\n        </ng-template>\\n    </ngb-datepicker>\\n\\n    <ng-template #dayTemplate let-date let-focused=\\"focused\\">\\n        <span\\n            class=\\"ngb-dp-day\\"\\n            [class.focused]=\\"focused\\"\\n            [class.range]=\\"isRange(date)\\"\\n            [class.faded]=\\"isHovered(date) || isInside(date)\\"\\n            (mouseenter)=\\"hoveredDate = date\\"\\n            (mouseleave)=\\"hoveredDate = null\\"\\n        >\\n            {{ date.day }}\\n        </span>\\n    </ng-template>\\n"},{"name":"UiDropdownComponent","id":"component-UiDropdownComponent-3f12b8f8fcacdb045c590cd032efea20bffe865ee4b25f7eec86539183a3068f173cb7527a44821e048b3de2f26277ccfe2fa80f9a5371b0d82e5052039c7d18","file":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown","styleUrls":["./dropdown-multi-select.component.scss"],"styles":[],"templateUrl":["./dropdown-multi-select.component.html"],"viewProviders":[],"inputsClass":[{"name":"maxItemsShown","defaultValue":"5","deprecated":false,"deprecationMessage":"","line":45,"type":"number","decorators":[]},{"name":"multiSelect","deprecated":false,"deprecationMessage":"","line":44,"type":"any","decorators":[]},{"name":"optionClicked","defaultValue":"() => { }","deprecated":false,"deprecationMessage":"","line":101,"type":"() => void","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDropdown options\\nold `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown-new\'/\'ui-dropdown-old-form\'\\nold `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown\'/\'ui-dropdown-old\'\\n","description":"<p>Dropdown options\\nold <code>{ label: string; value: string; disabled: boolean }[]</code> from &#39;ui-dropdown-new&#39;/&#39;ui-dropdown-old-form&#39;\\nold <code>{ label: string; value: string; disabled: boolean }[]</code> from &#39;ui-dropdown&#39;/&#39;ui-dropdown-old&#39;</p>\\n","line":42,"type":"IUiDropdownOption[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":49,"type":"string","decorators":[]},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":48,"type":"boolean","decorators":[]},{"name":"showSearch","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":46,"type":"boolean","decorators":[]},{"name":"showSelectClearBtns","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":47,"type":"boolean","decorators":[]},{"name":"type","defaultValue":"\'input\'","deprecated":false,"deprecationMessage":"","line":36,"type":"\\"input\\" | \\"button\\" | \\"button-outline\\"","decorators":[]},{"name":"w100","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":43,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_displayValue","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":56,"modifierKind":[121]},{"name":"_dropdownPlusOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":79,"modifierKind":[121]},{"name":"_firstClick","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":99,"modifierKind":[121]},{"name":"_optionsBackup","deprecated":false,"deprecationMessage":"","type":"IUiDropdownOption[]","optional":false,"description":"","line":98,"modifierKind":[121]},{"name":"button","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":28,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'button\'"}],"modifierKind":[123]},{"name":"dropdownMultiSelect","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdownMultiSelect\'"}],"modifierKind":[123]},{"name":"dropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":33,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdownRef\'"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"multipillRef","deprecated":false,"deprecationMessage":"","type":"UiMultiPillComponent","optional":false,"description":"","line":31,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'multipillRef\'"}],"modifierKind":[123]},{"name":"nbgDropdown","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":34,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'nbgDropdown\'"}],"modifierKind":[123]},{"name":"pills","deprecated":false,"deprecationMessage":"","type":"UiPillComponent[]","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"searchText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"selectedValues","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":30,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'selectedValues\'"}],"modifierKind":[123]},{"name":"textInput","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":27,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'textInput\'"}],"modifierKind":[123]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"valuesDisplay","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'valuesDisplay\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"convertOptionsToValue","args":[{"name":"incomingOptions","type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiDropdownOption[]","typeParameters":[],"line":391,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet form return value from selected options\\n\\n","description":"<p>Set form return value from selected options</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":14923,"end":14938,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingOptions"},"type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":14917,"end":14922,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Options selected in the dropdown</p>\\n"},{"tagName":{"pos":14980,"end":14987,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p><code>IUiDropdownOption[]</code></p>\\n"}]},{"name":"convertStringToValue","args":[{"name":"incomingValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":376,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFind the value option based on the incoming value\\n\\n","description":"<p>Find the value option based on the incoming value</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":14494,"end":14507,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingValue"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":14488,"end":14493,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Incoming value</p>\\n"},{"tagName":{"pos":14531,"end":14538,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>string</p>\\n"}]},{"name":"getPillsFromValue","args":[],"optional":false,"returnType":"UiPillComponent[]","typeParameters":[],"line":422,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet the pills to display from the value\\n\\n","description":"<p>Get the pills to display from the value</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":16223,"end":16230,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiValuePill[]</p>\\n"}]},{"name":"markOptionAsSelected","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"option","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":331,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the DropdownPlus option as selected\\n\\n","description":"<p>Sets the DropdownPlus option as selected</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":13007,"end":13012,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":13001,"end":13006,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Current value</p>\\n"},{"name":{"pos":13041,"end":13047,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"option"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":13035,"end":13040,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>DropdownPlus option</p>\\n"},{"tagName":{"pos":13076,"end":13083,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>boolean</p>\\n"}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onKeyDown","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":244,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle keyboard event\\n\\n","description":"<p>Handle keyboard event</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":9899,"end":9904,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":9893,"end":9898,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Keyboard Event</p>\\n"}]},{"name":"onSelectedOptionsChanged","args":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":190,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle the click event on an option\\n\\n","description":"<p>Handle the click event on an option</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7965,"end":7970,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"pos":7959,"end":7964,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Mouse Event (can be any)</p>\\n"}]},{"name":"onTriggerClicked","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle the click event to trigger the dropdown\\n","description":"<p>Handle the click event to trigger the dropdown</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onValueFocus","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":257,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle focus event\\n\\n","description":"<p>Handle focus event</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10240,"end":10245,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":10234,"end":10239,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Keyboard Event</p>\\n"}]},{"name":"processIncomingValue","args":[{"name":"incomingValue","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":357,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the value from the incoming value\\n\\n","description":"<p>Set the value from the incoming value</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":13724,"end":13737,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingValue"},"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"pos":13718,"end":13723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Incoming value</p>\\n"},{"tagName":{"pos":13761,"end":13768,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>Form value</p>\\n"}]},{"name":"resizeMultiPills","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":230,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle pills on window resize\\n","description":"<p>Handle pills on window resize</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"setNewOptions","args":[{"name":"newOptions","type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":271,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the dropdown options with the provided new options.\\n\\n","description":"<p>Updates the dropdown options with the provided new options.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":10668,"end":10678,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"newOptions"},"type":"IUiDropdownOption[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":10662,"end":10667,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>An array of new dropdown options to be set.</li>\\n</ul>\\n"}]},{"name":"updateOptions","args":[{"name":"changedValues","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IUiDropdownOption[]","typeParameters":[],"line":284,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the dropdown options when form control value changes\\n\\n","description":"<p>Update the dropdown options when form control value changes</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":11074,"end":11087,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"changedValues"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":11068,"end":11073,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Changed form control values</p>\\n"},{"tagName":{"pos":11124,"end":11131,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiDropdownOption[]</p>\\n"}]},{"name":"writeValue","args":[{"name":"incomingValue","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite the form values into the component\\nNote: this fires when the component is initialized BEFORE ngOnInit\\n\\n","description":"<p>Write the form values into the component\\nNote: this fires when the component is initialized BEFORE ngOnInit</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":7070,"end":7083,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"incomingValue"},"type":"","deprecated":false,"deprecationMessage":"","tagName":{"pos":7064,"end":7069,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Incoming value</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHandle pills on window resize\\n","description":"<p>Handle pills on window resize</p>\\n","line":230}],"description":"<p>Dropdown Multi Select Component\\nNote: This component is used for both single and multi-select dropdowns</p>\\n","rawdescription":"\\n\\nDropdown Multi Select Component\\nNote: This component is used for both single and multi-select dropdowns\\n\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\n// Ngb Bootstrap\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\n// Enums\\nimport { UiPillClassEnum } from \'@lib/modules/grid/components/pill-renderer/pill-renderer.component\';\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\n// Components & Interfaces\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\nimport { UiPillComponent } from \'@lib/modules/form-controls/pills/components/pill/pill.component\';\\nimport { UiMultiPillComponent } from \'@lib/modules/form-controls/pills/components/multi-pill/multi-pill.component\';\\nimport { IUiDropdownOption } from \'./interfaces/dropdown.interface\';\\nimport { UiFormControlBaseComponent as OldFormBase } from \'@lib/modules/form-controls/form-control-base/form-control-base.component\';\\n\\n/**\\n * Dropdown Multi Select Component\\n * Note: This component is used for both single and multi-select dropdowns\\n *\\n * @returns `IUiDropdownOption[]`\\n */\\n@Component({\\n    selector: \'ui-dropdown\',\\n    templateUrl: \'./dropdown-multi-select.component.html\',\\n    styleUrls: [\'./dropdown-multi-select.component.scss\'],\\n})\\nexport class UiDropdownComponent extends OldFormBase implements OnInit, OnDestroy {\\n    @ViewChild(\'textInput\') public textInput: ElementRef;\\n    @ViewChild(\'button\') public button: ElementRef;\\n    @ViewChild(\'valuesDisplay\') public valuesDisplay: ElementRef;\\n    @ViewChild(\'selectedValues\') public selectedValues: ElementRef;\\n    @ViewChild(\'multipillRef\') public multipillRef: UiMultiPillComponent;\\n    @ViewChild(\'dropdownMultiSelect\') public dropdownMultiSelect: ElementRef;\\n    @ViewChild(\'dropdownRef\') public dropdownRef: UiDropdownPlusComponent;\\n    @ViewChild(\'nbgDropdown\') public nbgDropdown: NgbDropdown;\\n\\n    @Input() public type: \'input\' | \'button\' | \'button-outline\' = \'input\';\\n    /**\\n     * Dropdown options\\n     * old `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown-new\'/\'ui-dropdown-old-form\'\\n     * old `{ label: string; value: string; disabled: boolean }[]` from \'ui-dropdown\'/\'ui-dropdown-old\'\\n     */\\n    @Input() public options: IUiDropdownOption[];\\n    @Input() public w100 = true;\\n    @Input() public multiSelect;\\n    @Input() public maxItemsShown = 5;\\n    @Input() public showSearch = true;\\n    @Input() public showSelectClearBtns = true;\\n    @Input() public setValueOnChange = true;\\n    @Input() public placeholder: string;\\n\\n    public menuOpen = false;\\n    public searchText = \'\';\\n    public tooltipText = \'\';\\n    public pills: UiPillComponent[];\\n\\n    private _displayValue: string[];\\n    public get displayValue(): string[] {\\n        return this._displayValue;\\n    }\\n    public set displayValue(setVal: any) {\\n        if (setVal && typeof setVal === \'string\' && this.multiSelect === false) {\\n            const foundVal = this.options.find((option) => option.readValue === setVal);\\n            this._displayValue = foundVal && foundVal.label ? [foundVal.label] : [\'\'];\\n        } else if (setVal && setVal instanceof Array && setVal.length > 0) {\\n            this._displayValue = setVal.map((val) => {\\n                if (val.label) {\\n                    return val.label;\\n                } else {\\n                    return \'\';\\n                }\\n            });\\n        } else if (setVal && typeof setVal === \'object\' && this.multiSelect === false) {\\n            this._displayValue = [setVal.label];\\n        } else {\\n            this._displayValue = this.placeholder ? [this.placeholder] : [\'\'];\\n        }\\n    }\\n\\n    private _dropdownPlusOptions: IUiDropdownPlusOption[] = [];\\n    public get dropdownPlusOptions(): IUiDropdownPlusOption[] {\\n        return this._dropdownPlusOptions;\\n    }\\n    public set dropdownPlusOptions(setOpts: any[]) {\\n        if (setOpts === undefined || setOpts === null || (setOpts && setOpts.length === 0)) {\\n            console.warn(`Dropdown options are empty for ${this.formControlName}`);\\n        } else {\\n            this._dropdownPlusOptions = setOpts.map((setOpt) => {\\n                return {\\n                    id: setOpt.id,\\n                    label: setOpt.label,\\n                    disabled: setOpt.disabled,\\n                    value: this.markOptionAsSelected(this.value, setOpt),\\n                } as IUiDropdownPlusOption;\\n            });\\n        }\\n    }\\n\\n    private _optionsBackup: IUiDropdownOption[];\\n    private _firstClick = true;\\n\\n    @Input() public optionClicked = () => { };\\n\\n    public ngOnInit(): void {\\n        if (this.options && this.options.length > 0) {\\n            this.dropdownPlusOptions = this.options;\\n            this._optionsBackup = this.options;\\n\\n            if (this.options.length < this.maxItemsShown) {\\n                this.showSearch = false;\\n            }\\n        }\\n\\n        this.form.controls[this.formControlName].valueChanges.subscribe((changedValues) => {\\n            this.dropdownPlusOptions = this.updateOptions(changedValues);\\n        });\\n\\n        // Note: Must wait 1 tick for the dropdown to be initialized before setting the dropdown properties\\n        setTimeout(() => {\\n            this.dropdownRef.view = null;\\n            this.dropdownRef.nbgDropdown.display = \'static\';\\n            this.dropdownRef.nbgDropdown.placement = \'bottom-start\';\\n            this.dropdownRef.nbgDropdown.container = null;\\n            this.dropdownRef.nbgDropdown.dropdownClass = \'dropdown-component-dropdown-menu\';\\n            this.dropdownRef.nbgDropdown.autoClose = \'outside\';\\n\\n            this.dropdownRef.selectionChange.subscribe((event) => {\\n                this.onSelectedOptionsChanged(event as { id: string; selectedOptions: IUiDropdownOption[] });\\n                if (this.optionClicked) {\\n                    this.optionClicked();\\n                }\\n            });\\n\\n            this.dropdownRef.openChange.subscribe((event) => {\\n                this.menuOpen = event.open;\\n            });\\n\\n            this.dropdownRef.optionsCleared.subscribe((event) => {\\n                this.options.forEach((option) => {\\n                    if (option.disabled === false) {\\n                        option.value = false;\\n                    }\\n                });\\n                this.dropdownPlusOptions = this.options;\\n                setTimeout(() => {\\n                    this.dropdownRef.clearSelection();\\n                    this.onSelectedOptionsChanged({ id: this.id, selectedOptions: [] });\\n                });\\n            });\\n        });\\n    }\\n\\n    public ngOnDestroy() {\\n        this.dropdownRef.selectionChange.unsubscribe();\\n        this.dropdownRef.openChange.unsubscribe();\\n        this.dropdownRef.optionsCleared.unsubscribe();\\n        if (this.form.controls[this.formControlName]) {\\n            this.form.controls[this.formControlName].valueChanges.unsubscribe();\\n        }\\n    }\\n\\n    /**\\n     * Write the form values into the component\\n     * Note: this fires when the component is initialized BEFORE ngOnInit\\n     *\\n     * @param incomingValue Incoming value\\n     */\\n    public writeValue(incomingValue): void {\\n        if (incomingValue === null || incomingValue.length === 0) {\\n            this._firstClick = true;\\n            const defaultValue = this.form.controls[this.formControlName].defaultValue;\\n            // default to the last form control value or default value if set\\n            this.value = defaultValue ? defaultValue : this.form.controls[this.formControlName].value;\\n        } else {\\n            this.value = this.processIncomingValue(incomingValue);\\n        }\\n        this.pills = this.getPillsFromValue();\\n        this.resizeMultiPills();\\n        setTimeout(() => {\\n            this.displayValue = this.value;\\n            this.valueChange.emit(this.value);\\n        });\\n    }\\n\\n    /**\\n     * Handle the click event on an option\\n     *\\n     * @param clickedOption The option that was clicked\\n     * @param event Mouse Event (can be any)\\n     */\\n    public onSelectedOptionsChanged(event: { id: string; selectedOptions: IUiDropdownOption[] }): void {\\n        if (this._firstClick) {\\n            this._firstClick = false;\\n        }\\n        this.value = this.processIncomingValue(event.selectedOptions);\\n        this.pills = this.getPillsFromValue();\\n        this.resizeMultiPills();\\n        setTimeout(() => {\\n            this.displayValue = this.value;\\n            if (this.setValueOnChange) {\\n                this.form.controls[this.formControlName].setValue(event.selectedOptions, { emitEvent: false });\\n                this.form.controls[this.formControlName].markAsTouched();\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Handle the click event to trigger the dropdown\\n     */\\n    public onTriggerClicked(event: Event): void {\\n        event.preventDefault();\\n        if (this.disabled !== true && this.dropdownRef.nbgDropdown !== undefined && this.menuOpen === false) {\\n            this.dropdownRef.nbgDropdown.open();\\n        }\\n        const triggerEle = document.getElementById(this.dropdownRef.externalTriggerEleId);\\n        if (this.dropdownRef.externalTriggerEleId !== undefined && this.dropdownRef.externalTriggerEleId !== null) {\\n            if (triggerEle !== undefined && triggerEle !== null) {\\n                this.dropdownRef.triggerClicked.emit({\\n                    id: this.id,\\n                    open: this.menuOpen,\\n                    selectedOptions: this.dropdownRef.getSelectedItems(),\\n                });\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Handle pills on window resize\\n     */\\n    @HostListener(\'window:resize\')\\n    public resizeMultiPills(): void {\\n        setTimeout(() => {\\n            if (this.multipillRef) {\\n                this.multipillRef.addPillWidth();\\n                this.multipillRef.onResize();\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Handle keyboard event\\n     *\\n     * @param event Keyboard Event\\n     */\\n    public onKeyDown(event) {\\n        if (this.disabled === false && (event.key === \'Enter\' || event.key === \'ArrowDown\')) {\\n            event.preventDefault();\\n            event.stopPropagation();\\n            this.onTriggerClicked(event);\\n        }\\n    }\\n\\n    /**\\n     * Handle focus event\\n     *\\n     * @param event Keyboard Event\\n     */\\n    public onValueFocus(event) {\\n        const ele: HTMLElement = event.target.getElementsByClassName(\'value-display\')[0];\\n        if (ele && ele.scrollWidth > ele.offsetWidth) {\\n            this.tooltipText = event.target.innerText;\\n        } else {\\n            this.tooltipText = \'\';\\n        }\\n    }\\n\\n    /**\\n     * Updates the dropdown options with the provided new options.\\n     *\\n     * @param newOptions - An array of new dropdown options to be set.\\n     */\\n    public setNewOptions(newOptions: IUiDropdownOption[]): void {\\n        this.options = newOptions;\\n        this.dropdownPlusOptions = newOptions;\\n        this.dropdownRef.setOptions = newOptions;\\n        this.updateOptions(newOptions);\\n    }\\n\\n    /**\\n     * Update the dropdown options when form control value changes\\n     *\\n     * @param changedValues Changed form control values\\n     * @returns IUiDropdownOption[]\\n     */\\n    private updateOptions(changedValues): IUiDropdownOption[] {\\n        // console.debug(`Dropdown options updated for ${this.formControlName}`);\\n        const updatedOptions = this._optionsBackup || changedValues;\\n\\n        if (changedValues && typeof changedValues === \'string\' && this.multiSelect === false) {\\n            updatedOptions.map((option) => {\\n                if (option.disabled === false && option.readValue === changedValues) {\\n                    option.value = false;\\n                    return option;\\n                }\\n            });\\n        } else if (changedValues && changedValues instanceof Array && changedValues.length > 0) {\\n            updatedOptions.forEach((option) => {\\n                changedValues.map((changedValue) => {\\n                    if (option.disabled === false && option.readValue === changedValue.readValue) {\\n                        option.value = true;\\n                        return option;\\n                    }\\n                });\\n            });\\n        } else if (changedValues && typeof changedValues === \'object\' && this.multiSelect === false) {\\n            updatedOptions.map((option) => {\\n                if (option.disabled === false && option.readValue === changedValues.readValue) {\\n                    option.value = true;\\n                    return option;\\n                }\\n            });\\n        } else if (updatedOptions === undefined || updatedOptions === null || updatedOptions.length === 0) {\\n            console.warn(`No Dropdown options available for ${this.formControlName}`);\\n            return null;\\n        } else {\\n            updatedOptions.map((option) => {\\n                option.value = false;\\n                return option;\\n            });\\n        }\\n\\n        return updatedOptions;\\n    }\\n\\n    /**\\n     * Sets the DropdownPlus option as selected\\n     *\\n     * @param value Current value\\n     * @param option DropdownPlus option\\n     * @returns boolean\\n     */\\n    private markOptionAsSelected(value: any, option): boolean {\\n        if (value === null || value === undefined) {\\n            return false;\\n        }\\n\\n        if (this.value && typeof value === \'string\') {\\n            if (this.value === option.readValue) {\\n                return true;\\n            } else {\\n                return false;\\n            }\\n        } else if (this.value && this.value.find((v) => {\\n            return v.id === option.id;\\n        })) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Set the value from the incoming value\\n     *\\n     * @param incomingValue Incoming value\\n     * @returns Form value\\n     */\\n    private processIncomingValue(incomingValue: any) {\\n        if (typeof incomingValue === \'string\' && this.multiSelect === false) {\\n            const optionValue = this.convertStringToValue(incomingValue);\\n            return optionValue ? optionValue : null;\\n        } else if (incomingValue instanceof Array && incomingValue.length > 0) {\\n            return this.convertOptionsToValue(incomingValue);\\n        } else if (typeof incomingValue === \'object\' && incomingValue.length > 0) {\\n            return this.convertOptionsToValue([incomingValue]);\\n        } else {\\n            return incomingValue;\\n        }\\n    }\\n\\n    /**\\n     * Find the value option based on the incoming value\\n     *\\n     * @param incomingValue Incoming value\\n     * @returns string\\n     */\\n    private convertStringToValue(incomingValue: string): string {\\n        const foundOption = this.options.find((option) => option.readValue === incomingValue);\\n        if (foundOption) {\\n            return foundOption.readValue;\\n        } else {\\n            return null;\\n        }\\n    }\\n\\n    /**\\n     * Set form return value from selected options\\n     *\\n     * @param incomingOptions Options selected in the dropdown\\n     * @returns `IUiDropdownOption[]`\\n     */\\n    private convertOptionsToValue(incomingOptions: IUiDropdownOption[]): IUiDropdownOption[] {\\n        let newFormControlValue: IUiDropdownOption[] = [];\\n        incomingOptions.forEach((selectedOption) => {\\n            // Find the option with matching label so that the \'readValue\' can be used\\n            const optionLookup = this.options.find((option) => option.label === selectedOption.label);\\n            if (!optionLookup) {\\n                console.error(\'Option not found in dropdown options\');\\n                return;\\n            }\\n            const newOption: IUiDropdownOption = {\\n                id: optionLookup.id,\\n                label: optionLookup.label,\\n                readValue: optionLookup.readValue,\\n                value: true,\\n                disabled: false,\\n            };\\n            this.options.map((option) => {\\n                if (option.label === optionLookup.label) {\\n                    option.value = true;\\n                }\\n            });\\n            newFormControlValue = this.multiSelect ? [...newFormControlValue, newOption] : [newOption];\\n        });\\n        return newFormControlValue;\\n    }\\n\\n    /**\\n     * Get the pills to display from the value\\n     *\\n     * @returns IUiValuePill[]\\n     */\\n    private getPillsFromValue(): UiPillComponent[] {\\n        if (this.value === null) {\\n            return [];\\n        } else {\\n            if (this.multiSelect === true) {\\n                return this.value.map((val) => ({\\n                    value: val.readValue,\\n                    pillText: val.label,\\n                    color: UiPillClassEnum.neutral,\\n                    size: UiPillSizeEnum.md,\\n                    hasCloseButton: false, // Note: Close button is not needed for value display\\n                    icon: null,\\n                }));\\n            } else {\\n                return [];\\n            }\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\n\\n.dropdown-component {\\n    .disabled {\\n        pointer-events: none !important; // if disabled then cannot click\\n        text-decoration: none;\\n        background-color: $gray-200 !important;\\n        border-color: $gray-400;\\n        color: $gray-600 !important;\\n        opacity: $btn-disabled-opacity;\\n        @include box-shadow(none);\\n\\n        &-dark {\\n            background-color: $gray-600 !important;\\n            border-color: $gray-600 !important;\\n            color: $white !important;\\n            opacity: $btn-disabled-opacity;\\n        }\\n        &-light {\\n            background-color: transparent !important;\\n            border-color: $gray-400;\\n            color: $gray-600 !important;\\n            opacity: $btn-disabled-opacity;\\n        }\\n    }\\n}\\n","styleUrl":"./dropdown-multi-select.component.scss"}],"stylesData":"","extends":"OldFormBase","implements":["OnInit","OnDestroy"],"accessors":{"displayValue":{"name":"displayValue","setSignature":{"name":"displayValue","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"setVal","type":"any","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":60,"jsdoctags":[{"name":"setVal","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"displayValue","type":"[]","returnType":"string[]","line":57}},"dropdownPlusOptions":{"name":"dropdownPlusOptions","setSignature":{"name":"dropdownPlusOptions","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"setOpts","type":"any[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":83,"jsdoctags":[{"name":"setOpts","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"dropdownPlusOptions","type":"[]","returnType":"IUiDropdownPlusOption[]","line":80}}},"templateData":"<ng-container [formGroup]=\\"form\\">\\n    \x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\n    <ui-form-control-base\\n        [formControlName]=\\"formControlName\\"\\n        [form]=\\"form\\"\\n        [label]=\\"label\\"\\n        [placeholder]=\\"placeholder\\"\\n        [showHelpText]=\\"showHelpText\\"\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\n        [showErrorValidation]=\\"showErrorValidation\\"\\n        [showInfoIcon]=\\"showInfoIcon\\"\\n        [infoText]=\\"infoText\\"\\n        [helpText]=\\"helpText\\"\\n    >\\n        <div *ngIf=\\"form !== undefined\\" class=\\"dropdown-component\\" #dropdownMultiSelect>\\n            \x3c!-- INPUT DISPLAY TYPE --\x3e\\n            <div\\n                *ngIf=\\"type === \'input\'\\"\\n                #textInput\\n                [id]=\\"id + \'_trigger\'\\"\\n                autocomplete=\\"off\\"\\n                type=\\"text\\"\\n                class=\\"form-control dropdown-toggl dropdown-trigger\\"\\n                [ngClass]=\\"{\\n                    pointer: disabled === false,\\n                    disabled: disabled,\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation,\\n                    open: menuOpen === true,\\n                    \'multi-select\': multiSelect === true,\\n                    \'is-placeholder\': value === undefined || value === null || value.length <= 0\\n                }\\"\\n                (click)=\\"onTriggerClicked($event)\\"\\n                (mouseenter)=\\"onValueFocus($event)\\"\\n                tabindex=\\"0\\"\\n                [attr.aria-invalid]=\\"form.controls[formControlName].invalid\\"\\n                [attr.aria-required]=\\"form.controls[formControlName].hasValidator(Validators.required)\\"\\n                (keyup)=\\"onKeyDown($event)\\"\\n            >\\n                <ng-container [ngTemplateOutlet]=\\"valuesDisplay\\"></ng-container>\\n            </div>\\n            \x3c!-- INPUT DISPLAY TYPE end --\x3e\\n\\n            \x3c!-- BUTTON DISPLAY TYPE --\x3e\\n            <button\\n                *ngIf=\\"type === \'button\' || type === \'button-outline\'\\"\\n                #button\\n                [id]=\\"id + \'_trigger\'\\"\\n                type=\\"button\\"\\n                class=\\"btn form-control dropdown-toggl dropdown-trigger\\"\\n                [ngClass]=\\"{\\n                    \'btn-outline-primary\': type === \'button-outline\',\\n                    \'btn-primary\': type === \'button\',\\n                    \'w-100\': w100 === true,\\n                    \'disabled-dark\': disabled && type === \'button\',\\n                    \'disabled-light\': disabled && type === \'button-outline\',\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation,\\n                    \'multi-select\': multiSelect === true,\\n                    \'is-placeholder\': value === undefined || value === null || value.length <= 0\\n                }\\"\\n                (click)=\\"onTriggerClicked($event)\\"\\n                (mouseenter)=\\"onValueFocus($event)\\"\\n                [attr.aria-invalid]=\\"form.controls[formControlName].invalid\\"\\n                [attr.aria-required]=\\"form.controls[formControlName].hasValidator(Validators.required)\\"\\n            >\\n                <ng-container [ngTemplateOutlet]=\\"valuesDisplay\\"></ng-container>\\n            </button>\\n            \x3c!-- BUTTON DISPLAY TYPE end --\x3e\\n\\n            <ui-dropdown-plus\\n                #dropdownRef\\n                [id]=\\"id\\"\\n                [externalTriggerEleId]=\\"id + \'_trigger\'\\"\\n                [animIcon]=\\"true\\"\\n                [setOptions]=\\"dropdownPlusOptions\\"\\n                [disabled]=\\"disabled\\"\\n                [small]=\\"true\\"\\n                [paddingTop]=\\"3\\"\\n                [showSearch]=\\"showSearch\\"\\n                [multiSelect]=\\"multiSelect\\"\\n                [maxItemsShown]=\\"maxItemsShown\\"\\n                [showSelectClearBtns]=\\"showSelectClearBtns\\"\\n                [view]=\\"\'none\'\\"\\n                [ngClass]=\\"{\\n                    \'w-100\': w100 === true,\\n                    \'show-search\': showSearch === true,\\n                    \'show-buttons\': showSelectClearBtns === true,\\n                    \'multi-select\': multiSelect === true\\n                }\\"\\n                class=\\"dropdown-plus\\"\\n            >\\n            </ui-dropdown-plus>\\n        </div>\\n    </ui-form-control-base>\\n</ng-container>\\n\\n<ng-template #valuesDisplay>\\n    <ng-container *ngIf=\\"value && value.length > 0 && multiSelect === true\\">\\n        <ng-container [ngTemplateOutlet]=\\"selectedValues\\"></ng-container>\\n    </ng-container>\\n    <ng-container *ngIf=\\"value && value.length > 0 && multiSelect !== true\\">\\n        <ng-container [ngTemplateOutlet]=\\"selectedValues\\"></ng-container>\\n    </ng-container>\\n    <ng-container *ngIf=\\"value === undefined || value === null || value.length <= 0\\">\\n        <span class=\\"value-display\\" ngbTooltip=\\"{{ placeholder }}\\">{{ placeholder }}</span>\\n    </ng-container>\\n\\n    \x3c!-- DROPDOWN CARET ICON --\x3e\\n    <i\\n        class=\\"d-inline-block anim bi trigger-icon\\"\\n        [id]=\\"id + \'_triggerIcon\'\\"\\n        [ngClass]=\\"{\\n            \'bi-caret-down-fill\': menuOpen === false,\\n            \'bi-caret-up-fill\': menuOpen === true\\n        }\\"\\n    >\\n    </i>\\n\\n</ng-template>\\n\\n<ng-template #selectedValues>\\n    \x3c!-- DISPLAY VALUES AS TEXT --\x3e\\n    <ng-container *ngIf=\\"multiSelect === false\\">\\n        <span *ngFor=\\"let value of displayValue\\"\\n            class=\\"value-display\\"\\n            [ngbTooltip]=\\"tooltipText\\"\\n            [tooltipClass]=\\"\'tooltip-sm\'\\"\\n        >\\n            {{ value }}\\n        </span>\\n    </ng-container>\\n\\n    \x3c!-- DISPLAY VALUES AS PILLS --\x3e\\n    <ng-container *ngIf=\\"multiSelect === true\\">\\n        <ui-multi-pill\\n            class=\\"value-display\\"\\n            #multipillRef\\n            [pills]=\\"pills\\"\\n            [isAggregated]=\\"true\\"\\n        ></ui-multi-pill>\\n    </ng-container>\\n</ng-template>\\n"},{"name":"UiDropdownOldFormControlsComponent","id":"component-UiDropdownOldFormControlsComponent-1e1785c604a693b1594808575b74f329c582c36b0d50f1f53bf281f39a7f21cd96ee301484bd1b6490360d86e655838ada1f2a9e366dcecf1a3d94e835caeddb","file":"libs/ui/src/lib/modules/form-controls/dropdown/dropdown.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown-old","styleUrls":["./dropdown.component.scss"],"styles":[],"templateUrl":["./dropdown.component.html"],"viewProviders":[],"inputsClass":[{"name":"options","deprecated":false,"deprecationMessage":"","line":19,"type":"literal type[]","decorators":[]},{"name":"type","defaultValue":"\'input\'","deprecated":false,"deprecationMessage":"","line":18,"type":"\\"input\\" | \\"button\\" | \\"button-outline\\"","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"w100","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_firstClick","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[121]},{"name":"button","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":16,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'button\'"}],"modifierKind":[123]},{"name":"textInput","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":15,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'textInput\'"}],"modifierKind":[123]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"changeSelectedOption","args":[{"name":"option","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOptionFocus","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onValueFocus","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showTooltip","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":true,"deprecationMessage":"Use `UiDropdownComponent` instead","hostBindings":[],"hostListeners":[],"description":"<p>OLD Dropdown form-controls component</p>\\n","rawdescription":"\\n\\nOLD Dropdown form-controls component\\n\\n","type":"component","sourceCode":"import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n/**\\n * OLD Dropdown form-controls component\\n *\\n * @deprecated Use `UiDropdownComponent` instead\\n */\\n@Component({\\n    selector: \'ui-dropdown-old\', // was \'ui-dropdown\'\\n    templateUrl: \'./dropdown.component.html\',\\n    styleUrls: [\'./dropdown.component.scss\'],\\n})\\nexport class UiDropdownOldFormControlsComponent extends UiFormControlBaseComponent {\\n    @ViewChild(\'textInput\') public textInput: ElementRef;\\n    @ViewChild(\'button\') public button: ElementRef;\\n\\n    @Input() public type: \'input\' | \'button\' | \'button-outline\' = \'input\';\\n    @Input() public options: { label: string; value: string; disabled: boolean }[];\\n    @Input() public w100 = true;\\n\\n    public tooltipText = \'\';\\n\\n    private _firstClick = true;\\n\\n    public onValueFocus(e) {\\n        this.showTooltip(e);\\n    }\\n    public onOptionFocus(e) {\\n        this.showTooltip(e);\\n    }\\n\\n    // TODO: Consider moving this to a utility function or directive\\n    public showTooltip(e) {\\n        const ele: HTMLElement = e.target.getElementsByClassName(\'text-truncate\')[0];\\n        if (ele.scrollWidth > ele.offsetWidth) {\\n            this.tooltipText = e.target.innerText;\\n        }\\n        else {\\n            this.tooltipText = \'\';\\n        }\\n    }\\n\\n    public writeValue(value: string) {\\n        if (value === null) {\\n            this._firstClick = true;\\n            if (this.options.length > 0) {\\n                this.value = this.options[0];\\n            }\\n        } else {\\n            this.value = this.options.find((option) => option.value === value) || this.options[0];\\n        }\\n    }\\n\\n    public changeSelectedOption(option: { label: string; value: string; disabled: boolean }) {\\n        if (this._firstClick) {\\n            this._firstClick = false;\\n        }\\n        this.value = option;\\n        this.valueChange.emit(option);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".dropdown-toggle {\\n    text-align: left;\\n\\n    position: relative;\\n    &::after {\\n        /* keeping old CSS for reference\\n        float: right;\\n        margin-top: 10px;\\n        */\\n        position: absolute;\\n        right: 0.5rem;\\n        top: 1rem;\\n    }\\n\\n    &.dropdown-old-trigger {\\n        padding-top: 0.625rem;\\n        padding-bottom: 0.25rem;\\n        padding-left: 0.75rem;\\n        padding-right: 0.75rem;\\n\\n        .text-truncate {\\n            max-width: 100%;\\n            padding-right: 0.625rem;\\n            display: inline-block;\\n            line-height: 1;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n            overflow: hidden;\\n        }\\n    }\\n}\\n\\n.dropdown-menu {\\n    .dropdown-old-option-label {\\n        .text-truncate {\\n            max-width: 100%;\\n            display: inline-block;\\n            text-overflow: ellipsis;\\n            white-space: nowrap;\\n            overflow: hidden;\\n        }\\n    }\\n}\\n","styleUrl":"./dropdown.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"<div *ngIf=\\"form !== undefined\\">\\n    \x3c!-- Label --\x3e\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\n        {{ label }}\\n        \x3c!-- Required Asterix --\x3e\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\n    </label>\\n\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\n    <i\\n        [id]=\\"id + \'_InfoIcon\'\\"\\n        *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\n        class=\\"bi bi-question-circle-fill\\"\\n        placement=\\"top\\"\\n        [ngbTooltip]=\\"infoText\\"\\n    ></i>\\n\\n    \x3c!-- ngb dropdown --\x3e\\n    <div [id]=\\"id + \'_Dropdown\'\\" ngbDropdown>\\n        <i\\n            *ngIf=\\"type === \'input\'\\"\\n            class=\\"fa fa-caret-down\\"\\n            [ngClass]=\\"{ \'text-muted\': disabled === true }\\"\\n            style=\\"position: absolute; top: 10px; right: 13px\\"\\n            aria-hidden=\\"true\\"\\n        ></i>\\n        <input\\n            [id]=\\"id + \'_TriggerInput\'\\"\\n            #textInput\\n            *ngIf=\\"type === \'input\'\\"\\n            autocomplete=\\"off\\"\\n            type=\\"text\\"\\n            readonly\\n            class=\\"form-control dropdown-toggl\\"\\n            ngbDropdownToggle\\n            [value]=\\"value.label\\"\\n            [disabled]=\\"disabled\\"\\n            [ngClass]=\\"{ pointer: disabled === false }\\"\\n        />\\n        <button\\n            [id]=\\"id + \'_TriggerButton\'\\"\\n            #button\\n            *ngIf=\\"type === \'button\' || type === \'button-outline\'\\"\\n            type=\\"button\\"\\n            class=\\"btn form-control dropdown-old-trigger\\"\\n            [ngClass]=\\"{ \'btn-outline-primary\': type === \'button-outline\', \'btn-primary\': type === \'button\', \'w-100\': w100 === true }\\"\\n            ngbDropdownToggle\\n            [disabled]=\\"disabled\\"\\n            (mouseenter)=\\"onValueFocus($event)\\"\\n        >\\n            <span\\n                class=\\"text-truncate\\"\\n                [ngbTooltip]=\\"tooltipText\\"\\n                [tooltipClass]=\\"\'tooltip-sm\'\\"\\n            >\\n            {{ value.label }}\\n            </span>\\n\\n        </button>\\n        <div ngbDropdownMenu [ngClass]=\\"{ \'w-100\': w100 === true || type === \'input\' }\\">\\n            <button\\n                [id]=\\"id + \'_Option_\' + i\\"\\n                ngbDropdownItem\\n                *ngFor=\\"let option of options; let i = index\\"\\n                [ngClass]=\\"{ \'d-none\': option === value || option.disabled === true }\\"\\n                (click)=\\"changeSelectedOption(option)\\"\\n                class=\\"dropdown-old-option-label\\"\\n                (mouseenter)=\\"onOptionFocus($event)\\"\\n            >\\n                <span\\n                    class=\\"text-truncate\\"\\n                    [ngbTooltip]=\\"tooltipText\\"\\n                    [tooltipClass]=\\"\'tooltip-sm\'\\"\\n                >\\n                    {{ option.label }}\\n                </span>\\n            </button>\\n        </div>\\n    </div>\\n\\n    <div class=\\"feedback\\">\\n        \x3c!-- Success Feedback Text --\x3e\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\n        </div>\\n\\n        \x3c!-- Error Feedback Text --\x3e\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && showErrorValidation\\">\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.required\\">\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\n            </div>\\n        </div>\\n\\n        \x3c!-- Help Text --\x3e\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && showErrorValidation)\\">\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{ helpText }}</div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiDropdownPlusComponent","id":"component-UiDropdownPlusComponent-a745bf58bb25d1f2063d2a3215116f4ee5b1b2a2206c8f9dea8b6d0639f07ccd43f62b4716ad4a970031b137c30e9434579b8d603f66c7f1b7140a9415870499","file":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown-plus","styleUrls":["./dropdown-plus.component.scss"],"styles":[],"templateUrl":["./dropdown-plus.component.html"],"viewProviders":[],"inputsClass":[{"name":"animIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":46,"type":"boolean","decorators":[]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":53,"type":"boolean","decorators":[]},{"name":"externalTriggerEleId","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"icon","defaultValue":"\'bi-filter\'","deprecated":false,"deprecationMessage":"","line":47,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":26,"type":"string","decorators":[]},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":54,"type":"boolean","decorators":[]},{"name":"maxItemsShown","defaultValue":"5","deprecated":false,"deprecationMessage":"","line":48,"type":"number","decorators":[]},{"name":"multiSelect","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":42,"type":"boolean","decorators":[]},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":44,"type":"boolean","decorators":[]},{"name":"paddingTop","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":55,"type":"number","decorators":[]},{"name":"setOptions","deprecated":false,"deprecationMessage":"","line":37,"type":"IUiDropdownPlusOption[]","decorators":[]},{"name":"showCheckbox","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":52,"type":"boolean","decorators":[]},{"name":"showSearch","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":50,"type":"boolean","decorators":[]},{"name":"showSelectClearBtns","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":51,"type":"boolean","decorators":[]},{"name":"singleSelectAutoClose","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":43,"type":"boolean","decorators":[]},{"name":"small","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":49,"type":"boolean","decorators":[]},{"name":"view","defaultValue":"\'button\'","deprecated":false,"deprecationMessage":"","line":45,"type":"string","decorators":[]}],"outputsClass":[{"name":"openChange","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":60,"type":"EventEmitter<literal type>"},{"name":"optionsCleared","defaultValue":"new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":69,"type":"EventEmitter<literal type>"},{"name":"searchChange","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":66,"type":"EventEmitter<literal type>"},{"name":"selectionChange","defaultValue":"new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":57,"type":"EventEmitter<literal type>"},{"name":"triggerClicked","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":63,"type":"EventEmitter<literal type>"}],"propertiesClass":[{"name":"_hilighted","deprecated":false,"deprecationMessage":"","type":"HTMLElement","optional":false,"description":"","line":89,"modifierKind":[121]},{"name":"_label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":88,"modifierKind":[121]},{"name":"_loading","defaultValue":"new BehaviorSubject<boolean>(false)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":91,"modifierKind":[121]},{"name":"_optionsBackup","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":90,"modifierKind":[121]},{"name":"disabledItemsLength","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":80,"modifierKind":[123]},{"name":"focusIndex","defaultValue":"-1","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":85,"modifierKind":[123]},{"name":"iconClass","defaultValue":"[\'anim\', \'bi-caret-down-fill\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":84,"modifierKind":[123]},{"name":"menuItemsRef","deprecated":false,"deprecationMessage":"","type":"QueryList<ElementRef>","optional":false,"description":"","line":74,"decorators":[{"name":"ViewChildren","stringifiedArguments":"\'menuItemsRef\'"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":81,"modifierKind":[123]},{"name":"nbgDropdown","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":72,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'nbgDropdown\'"}],"modifierKind":[123]},{"name":"ngbDropPanel","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":73,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'ngbDropPanel\'"}],"modifierKind":[123]},{"name":"options","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":76,"modifierKind":[123]},{"name":"optionTooltips","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":82,"modifierKind":[123]},{"name":"searchText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":78,"modifierKind":[123]},{"name":"selectedList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":86,"modifierKind":[123]},{"name":"selectedOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":77,"modifierKind":[123]},{"name":"tooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":83,"modifierKind":[123]},{"name":"triggerLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":79,"modifierKind":[123]}],"methodsClass":[{"name":"checkHeight","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"checkWidth","args":[{"name":"element","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":275,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"element","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearHilighted","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearSearch","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearSelection","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSelectedItems","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis will fetch the current selected list of items. It will use a snapshot of the options and compare the\\n  stored selected items with the current ones.\\n\\n","description":"<p>This will fetch the current selected list of items. It will use a snapshot of the options and compare the\\n  stored selected items with the current ones.</p>\\n","modifierKind":[123],"jsdoctags":[{"tagName":{"pos":4841,"end":4848,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiDropdownPlusOption[] - The list of selected items</p>\\n"}]},{"name":"isElementVisible","args":[{"name":"el","type":"","deprecated":false,"deprecationMessage":""},{"name":"holder","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":225,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"el","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"holder","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClearClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":380,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClickedOutside","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":397,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMouseOver","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":336,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOpenChange","args":[{"name":"open","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":238,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"open","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOptionClick","args":[{"name":"option","type":"IUiDropdownPlusOption","deprecated":false,"deprecationMessage":""},{"name":"event","type":"PointerEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":340,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"IUiDropdownPlusOption","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"PointerEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOptionFocus","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSearchChange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":306,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSearchClearClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":392,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelectAllClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":368,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setFocusOnFirstMenuItem","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showTooltip","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":213,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"triggerClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"unSelectItem","args":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateTriggerLabel","args":[{"name":"selectionChanged","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectionChanged","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n    AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input,\\n    OnInit, Output, QueryList, ViewChild, ViewChildren\\n} from \'@angular/core\';\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\n\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { debounceTime } from \'rxjs/operators\';\\n\\nexport interface IUiDropdownPlusOption {\\n    id: string;\\n    label: string;\\n    disabled: boolean;\\n    value: boolean;\\n    data?: unknown;\\n}\\n@Component({\\n    selector: \'ui-dropdown-plus\',\\n    templateUrl: \'./dropdown-plus.component.html\',\\n    styleUrls: [\'./dropdown-plus.component.scss\'],\\n})\\nexport class UiDropdownPlusComponent implements OnInit {\\n    @Input() public externalTriggerEleId: string;\\n    @Input() public id: string;\\n\\n    @Input() public set label(label: string) {\\n        this._label = label;\\n        this.triggerLabel = label;\\n        setTimeout(() => {\\n            this.updateTriggerLabel();\\n        });\\n    };\\n    public get label() {\\n        return this._label;\\n    }\\n\\n    @Input() public set setOptions(options: IUiDropdownPlusOption[]) {\\n        this.options = options;\\n        this._optionsBackup = this.options;\\n        this.updateTriggerLabel();\\n    };\\n    @Input() public multiSelect = true;\\n    @Input() public singleSelectAutoClose = true;\\n    @Input() public noBorder = false;\\n    @Input() public view = \'button\';\\n    @Input() public animIcon = true;\\n    @Input() public icon = \'bi-filter\';\\n    @Input() public maxItemsShown = 5;\\n    @Input() public small = false;\\n    @Input() public showSearch = false;\\n    @Input() public showSelectClearBtns = false;\\n    @Input() public showCheckbox = true;\\n    @Input() public disabled = false;\\n    @Input() public loading = false;\\n    @Input() public paddingTop = 0;\\n\\n    @Output() public selectionChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public openChange: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public triggerClicked: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public searchChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public optionsCleared: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @ViewChild(\'nbgDropdown\') public nbgDropdown: NgbDropdown;\\n    @ViewChild(\'ngbDropPanel\') public ngbDropPanel: ElementRef;\\n    @ViewChildren(\'menuItemsRef\') public menuItemsRef: QueryList<ElementRef>;\\n\\n    public options: IUiDropdownPlusOption[];\\n    public selectedOptions: IUiDropdownPlusOption[] = [];\\n    public searchText = \'\';\\n    public triggerLabel = \'\';\\n    public disabledItemsLength = 0;\\n    public menuOpen = false;\\n    public optionTooltips = [];\\n    public tooltipText = \'\';\\n    public iconClass = [\'anim\', \'bi-caret-down-fill\'];\\n    public focusIndex = -1;\\n    public selectedList: IUiDropdownPlusOption[] = [];\\n\\n    private _label = \'\';\\n    private _hilighted: HTMLElement;\\n    private _optionsBackup;\\n    private _loading = new BehaviorSubject<boolean>(false);\\n\\n    constructor() { }\\n\\n    public ngOnInit(): void {\\n        this.triggerLabel = this._label;\\n\\n        this._optionsBackup = this.options;\\n\\n        this._loading.pipe(debounceTime(500)).subscribe((value) => {\\n            this.loading = false;\\n        });\\n    }\\n\\n    public onClickedOutside(e) {\\n        // console.log(\'onClickedOutside\')\\n    }\\n\\n    public setFocusOnFirstMenuItem(): void {\\n\\n        setTimeout(() => {\\n            if (document.getElementById(this.id + \'_searchTextInput\') !== null) {\\n                document.getElementById(this.id + \'_searchTextInput\').focus();\\n            }\\n        }, 200);\\n    }\\n\\n    public clearHilighted() {\\n        this.focusIndex = -1;\\n        if (this._hilighted !== undefined) {\\n\\n            this._hilighted.classList.remove(\'hilighted-item\');\\n        }\\n    }\\n\\n    public unSelectItem(itemId: string) {\\n        this.options.find((item) => { return item.id === itemId; }).value = false;\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    /**\\n     * This will fetch the current selected list of items. It will use a snapshot of the options and compare the\\n     *   stored selected items with the current ones.\\n     *\\n     * @returns IUiDropdownPlusOption[] - The list of selected items\\n     */\\n    public getSelectedItems() {\\n\\n        // Get the selected items by comparing the options with the backup/snapshot\\n        if (this._optionsBackup !== undefined) {\\n            this.selectedList = this._optionsBackup.filter((name) => {\\n                return name.value === true;\\n            });\\n        }\\n\\n        return this.selectedList;\\n    }\\n\\n    public clearSelection() {\\n        this.options.forEach((option) => { option.value = false; });\\n        this.clearHilighted();\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    public clearSearch() {\\n        this.searchText = \'\';\\n        this.options = this._optionsBackup;\\n    }\\n\\n    public updateTriggerLabel(selectionChanged = true) {\\n\\n        setTimeout(() => {\\n            const prevSelectedOptions = this.selectedOptions;\\n\\n            this.selectedOptions = this._optionsBackup.filter((name) => {\\n                return name.value === true;\\n            });\\n\\n            if (this.selectedOptions.length === 0) {\\n                this.triggerLabel = this._label;\\n            }\\n            else if (this.selectedOptions.length === 1) {\\n                this.triggerLabel = this.selectedOptions[0].label;\\n            }\\n            else {\\n                this.triggerLabel = this._label + ` (${this.selectedOptions.length})`;\\n            }\\n\\n            this.disabledItemsLength = this._optionsBackup.filter((name) => {\\n                return name.disabled === true;\\n            }).length;\\n        }, 100);\\n\\n    }\\n\\n    public triggerClick() {\\n        if (this.disabled === false && this.nbgDropdown !== undefined && this.menuOpen === false) {\\n            this.nbgDropdown.open();\\n        }\\n\\n        const triggerEle = document.getElementById(this.externalTriggerEleId);\\n\\n        if (this.externalTriggerEleId !== undefined && this.externalTriggerEleId !== null) {\\n\\n            if (triggerEle !== undefined && triggerEle !== null) {\\n\\n                const dropPanelEle = document.getElementById(this.id + \'_drop-panel\');\\n\\n                dropPanelEle.style.top = triggerEle.offsetTop + triggerEle.offsetHeight + this.paddingTop + \'px\';\\n                dropPanelEle.style.left = triggerEle.offsetLeft + \'px\';\\n            }\\n        }\\n\\n        this.triggerClicked.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    public onOptionFocus(e) {\\n        this.showTooltip(e);\\n    }\\n\\n    public showTooltip(e) {\\n\\n        const ele: HTMLElement = e.target.getElementsByClassName(\'text-truncate\')[0];\\n\\n        if (ele.scrollWidth > ele.offsetWidth) {\\n            this.tooltipText = e.target.innerText;\\n        }\\n        else {\\n            this.tooltipText = \'\';\\n        }\\n    }\\n\\n    public isElementVisible(el, holder) {\\n        holder = holder || document.body;\\n        const { top, bottom, height } = el.getBoundingClientRect();\\n        const holderRect = holder.getBoundingClientRect();\\n\\n        if (bottom > holderRect.bottom) {\\n            return false;\\n        }\\n        else {\\n            return true;\\n        }\\n    }\\n\\n    public onOpenChange(open: boolean) {\\n\\n        if (this.disabled === false) {\\n            this.menuOpen = open;\\n\\n            const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\n            const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\n\\n            if (dropPanel !== null) {\\n                dropPanel.style.visibility = \'hidden\';\\n                optionsPanel.style.maxHeight = \'0\';\\n\\n                if (open === true) {\\n\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\n                    this.focusIndex = -1;\\n                    this.setFocusOnFirstMenuItem();\\n                    setTimeout(() => {\\n                        this.checkHeight();\\n                        dropPanel.style.visibility = \'visible\';\\n                        if (optionsPanel !== null) {\\n                            document.getElementById(this.id + \'_options-panel\').focus();\\n                        }\\n                    }, 50);\\n                }\\n                else {\\n                    this.clearHilighted();\\n                    this.clearSearch();\\n                    this.openChange.emit({ id: this.id, open: this.menuOpen, selectedOptions: this.getSelectedItems() });\\n                }\\n            }\\n        }\\n        else {\\n            this.menuOpen = false;\\n        }\\n    }\\n\\n    public checkWidth(element) {\\n\\n        if (element.scrollWidth > element.offsetWidth) {\\n            return true;\\n        }\\n        else {\\n            return false;\\n        }\\n    }\\n\\n    public checkHeight() {\\n\\n        const dropPanel = document.getElementById(this.id + \'_drop-panel\');\\n        const optionsPanel = document.getElementById(this.id + \'_options-panel\');\\n\\n        if (optionsPanel !== null && dropPanel !== null && this.options.length !== 0) {\\n            dropPanel.style.visibility = \'hidden\';\\n            const menuItemHeight = Math.ceil(this.menuItemsRef.get(0).nativeElement.getBoundingClientRect().height);\\n\\n            if (this.options.length < this.maxItemsShown) {\\n                optionsPanel.style.height = String(menuItemHeight * this.options.length + \'px\');\\n            }\\n            else {\\n                optionsPanel.style.height = String(menuItemHeight * this.maxItemsShown + \'px\');\\n            }\\n\\n            optionsPanel.style.maxHeight = String(menuItemHeight * this.maxItemsShown + \'px\');\\n            dropPanel.style.visibility = \'visible\';\\n        }\\n    }\\n\\n    public onSearchChange() {\\n\\n        this.focusIndex = -1;\\n        if (this.searchText.length !== 0) {\\n            const tempSearch = this.searchText.toLowerCase();\\n            const temp = this._optionsBackup.filter((name) => name.label.toLowerCase().includes(tempSearch));\\n\\n            this.loading = true;\\n            this._loading.next(true);\\n            if (temp.length !== 0) {\\n                this.options = temp;\\n            }\\n            else {\\n                this.options = [];\\n            }\\n        }\\n        else {\\n            this.options = this._optionsBackup;\\n        }\\n\\n        setTimeout(() => {\\n\\n            this.updateTriggerLabel(false);\\n            this.checkHeight();\\n            this.searchChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n        });\\n\\n        this._loading.next(true);\\n    }\\n\\n    public onMouseOver(event) {\\n        this.showTooltip(event);\\n    }\\n\\n    public onOptionClick(option: IUiDropdownPlusOption, event: PointerEvent) {\\n\\n        event.preventDefault();\\n        setTimeout(() => {\\n            option.value = !option.value;\\n\\n            this.clearHilighted();\\n            this.focusIndex = this.options.findIndex((tempOption) => { return tempOption.id === option.id; });\\n            if (option.disabled === false || option.disabled === null) {\\n                if (this.multiSelect === false) {\\n\\n                    // Set all others to false\\n                    this.options.forEach((tempOption) => {\\n                        if (tempOption.id !== option.id) {\\n                            tempOption.value = false;\\n                        }\\n                    });\\n                    // Close the dropdown panel\\n                    if (this.singleSelectAutoClose === true) {\\n                        this.nbgDropdown.close();\\n                    }\\n                }\\n                this.updateTriggerLabel();\\n                this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n            }\\n        }, 50);\\n    }\\n\\n    public onSelectAllClick() {\\n\\n        this.options.forEach((option) => {\\n            if (option.disabled === false) {\\n                option.value = true;\\n            }\\n        });\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n        this.clearHilighted();\\n    }\\n\\n    public onClearClick() {\\n        this.options.forEach((option) => {\\n            if (option.disabled === false) {\\n                option.value = false;\\n            }\\n        });\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n        this.clearHilighted();\\n        this.optionsCleared.emit({ id: this.id, selectedOptions: this.getSelectedItems() });\\n    }\\n\\n    public onSearchClearClick() {\\n        this.searchText = \'\';\\n        this.onSearchChange();\\n    }\\n\\n    public onKeyDown(event: KeyboardEvent) {\\n\\n        if (event.key === \'Escape\') {\\n            event.preventDefault();\\n            event.stopPropagation();\\n        }\\n\\n        this.updateTriggerLabel();\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\n\\n.search-input-icon {\\n    background-color: $white;\\n    border-style: none;\\n    color: $gray-600;\\n    z-index: 1001;\\n}\\n\\n.form-control {\\n    padding-left: 40px;\\n    padding-right: 30px;\\n}\\n\\n.form-group .bi {\\n    position: absolute;\\n    color: $gray-500;\\n\\n    &.left {\\n        padding-left: 15px;\\n    }\\n\\n    &.right {\\n        left: inherit;\\n        right: 20px;\\n\\n        &:hover {\\n            color: $body-color;\\n        }\\n    }\\n}\\n\\n.dropdown-toggle::after {\\n    display: none;\\n}\\n\\n.btn {\\n    &.trigger {\\n        &.no-border {\\n            border: none;\\n            box-shadow: none !important;\\n            padding-left: 0px;\\n            padding-right: 0px;\\n        }\\n    }\\n\\n    &.hi-lite {\\n        border: 1px solid $primary;\\n    }\\n\\n    &.btn-link {\\n\\n        padding: 0;\\n        &:hover {\\n            text-decoration: underline;\\n        }\\n\\n        &:focus {\\n            text-decoration: underline;\\n            color: $primary-600;\\n        }\\n    }\\n}\\n\\n.dropdown-menu {\\n    padding: 0;\\n}\\n\\n.dropdown-item {\\n    min-height: 40px;\\n    padding: 0.25rem 1rem;\\n    padding-left: 0.5rem;\\n    &.selected-item {\\n        background-color: $primary-050;\\n        &:focus{\\n            background-color: $primary-100;\\n        }\\n        &:hover{\\n            background-color: $primary-100;\\n        }\\n    }\\n    &.hilighted-item {\\n        background-color: $gray-500;\\n        &:focus{\\n            background-color: $gray-600;\\n        }\\n    }\\n}\\n\\n.dropdown {\\n    cursor: pointer;\\n\\n    &.disabled {\\n        .quick-filter {\\n            color: $gray-600;\\n            cursor:default;\\n        }\\n        .quick-filter.option-selected {\\n            color: $gray-600;\\n            cursor:default;\\n        }\\n    }\\n\\n    .quick-filter.option-selected {\\n        color: $primary;\\n    }\\n}\\n\\n.form-check {\\n    padding-left: 0;\\n}\\n\\n.small * {\\n    font-size: $font-size-md;\\n}\\n\\n.h-0{\\n    max-height: 0;\\n}\\n\\n.dropup, .dropend, .dropdown, .dropstart {\\n    &.trigger-position {\\n        position: inherit;\\n    }\\n}\\n\\n","styleUrl":"./dropdown-plus.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":91},"implements":["OnInit"],"accessors":{"label":{"name":"label","setSignature":{"name":"label","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":26,"jsdoctags":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"label","type":"","returnType":"","line":33}},"setOptions":{"name":"setOptions","setSignature":{"name":"setOptions","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":37,"jsdoctags":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div [id]=\\"id + \'_dropdown_container\'\\" class=\\"d-flex\\" (clickOutside)=\\"onClickedOutside($event)\\"  >\\n\\n    <div\\n        [id]=\\"id + \'_Dropdown\'\\"\\n        ngbDropdown\\n        display=\\"static\\"\\n        #nbgDropdown=\\"ngbDropdown\\"\\n        class=\\"d-inline-block dropdown\\"\\n        [ngClass]=\\"{\'small\': small === true, \'disabled\': disabled === true, \'trigger-position\': externalTriggerEleId !== undefined }\\"\\n        [placement]=\\"\'bottom-left\'\\"\\n        [autoClose]=\\"\'outside\'\\"\\n        (openChange)=\\"onOpenChange($event)\\"\\n    >\\n\\n        \x3c!-- Button Trigger --\x3e\\n        <button\\n            *ngIf=\\"view === \'button\'\\"\\n            ngbDropdownToggle\\n            type=\\"button\\"\\n            [ngClass]=\\"{\'no-border\': noBorder === true, \'open\': menuOpen === true}\\"\\n            class=\\"btn btn-outline-primary trigger d-flex align-items-center\\"\\n            [id]=\\"id + \'_trigger\'\\"\\n            >\\n            <div style=\\"max-width: 200px;\\" class=\\"d-inline-block text-truncate\\">\\n                {{triggerLabel}}\\n            </div>\\n            <i [ngClass]=\\"{\'anim\': animIcon === true}\\" class=\\"bi bi-caret-down-fill ms-1 d-inline-block bi-sm\\"></i>\\n        </button>\\n\\n        \x3c!-- Quick Filter Trigger --\x3e\\n        <div\\n            *ngIf=\\"view === \'quick-filter\'\\"\\n            ngbDropdownToggle\\n            class=\\"d-flex align-items-center quick-filter\\"\\n            [id]=\\"id + \'_trigger\'\\"\\n            [ngClass]=\\"{\'open\': menuOpen === true, \'option-selected\': getSelectedItems().length !== 0}\\"\\n            (click)=\\"triggerClick();\\"\\n        >\\n            <div class=\\"label d-inline-block text-truncate\\" >\\n                {{triggerLabel}}\\n            </div>\\n            <div>\\n                <i\\n                    class=\\"bi ms-1 d-inline-block anim\\"\\n                    [ngClass]=\\"{\'bi-caret-down-fill\': getSelectedItems().length === 0, \'bi-filter\': getSelectedItems().length !== 0}\\"\\n                >\\n                </i>\\n            </div>\\n        </div>\\n\\n        \x3c!-- None Filter Trigger --\x3e\\n        <div\\n            *ngIf=\\"view === \'none\'\\"\\n            [id]=\\"id + \'_triggerNone\'\\"\\n            class=\\"d-none\\"\\n            ngbDropdownToggle\\n        >\\n        </div>\\n\\n        \x3c!-- drop-panel --\x3e\\n        <div style=\\"position: absolute;\\" [id]=\\"this.id + \'_drop-panel\'\\" class=\\"drop-panel h-auto\\" ngbDropdownMenu #ngbDropPanel (keyup)=\\"onKeyDown($event)\\">\\n\\n            \x3c!-- Search Input --\x3e\\n            <div *ngIf=\\"showSearch === true\\" class=\\"m-2 form-group d-flex align-items-center\\">\\n                <i class=\\"bi bi-search bi-md left\\"></i>\\n                <input [(ngModel)]=\\"searchText\\" (ngModelChange)=\\"onSearchChange()\\" type=\\"email\\" class=\\"form-control\\" [id]=\\"id + \'_searchTextInput\'\\" placeholder=\\"{{\'COMMON.SEARCH\' | translate}}\\" autocomplete=\\"off\\">\\n                <i *ngIf=\\"searchText.length !== 0\\" class=\\"bi bi-x-lg bi-md right\\" (click)=\\"onSearchClearClick()\\"></i>\\n            </div>\\n            \x3c!-- <div *ngIf=\\"loading === false\\"> --\x3e\\n\\n            <div [ngClass]=\\"{\'invisible h-0\': loading === true}\\" >\\n\\n                \x3c!-- Select All Button --\x3e\\n                \x3c!--  --\x3e\\n                <div class=\\"select-all-clear\\" *ngIf=\\"options.length !== 0\\">\\n\\n                    <button\\n                        type=\\"button\\"\\n                        class=\\"btn btn-link btn-md d-inline-block select-all m-2 ms-3 select-all-btn\\"\\n                        *ngIf=\\"showSelectClearBtns === true && multiSelect === true && selectedOptions.length !== this.options.length - this.disabledItemsLength\\"\\n                        [id]=\\"id + \'SelectAllBtn\'\\"\\n                        [disabled]=\\"selectedOptions.length === this.options.length - this.disabledItemsLength\\"\\n                        (click)=\\"onSelectAllClick()\\"\\n                    >\\n                        {{\'COMMON.SELECT_ALL\' | translate}}\\n                    </button>\\n\\n                    \x3c!-- Clear Button --\x3e\\n                    <button\\n                        type=\\"button\\"\\n                        class=\\"btn btn-link btn-md d-inline-block select-all m-2 ms-3 clear-btn\\"\\n                        *ngIf=\\"showSelectClearBtns === true && multiSelect === true && selectedOptions.length !== 0\\"\\n                        [id]=\\"id + \'clearBtn\'\\"\\n                        [disabled]=\\"selectedOptions.length === 0\\"\\n                        (click)=\\"onClearClick()\\"\\n                    >\\n                        {{\'COMMON.CLEAR\' | translate}}\\n                    </button>\\n\\n                </div>\\n\\n                \x3c!-- Divider --\x3e\\n                <div *ngIf=\\"showSearch || showSelectClearBtns\\" class=\\"dropdown-divider mt-0 mb-0\\"></div>\\n\\n                \x3c!-- Option Panel --\x3e\\n                <div\\n                    class=\\"options-panel h-auto\\"\\n                    [id]=\\"this.id + \'_options-panel\'\\"\\n                    [ngClass]=\\"{\'invisible\': options.length === 0}\\"\\n                >\\n                    \x3c!-- Option Buttons --\x3e\\n                    <button\\n                        class=\\"ps-3\\"\\n                        container=\\"body\\"\\n                        ngbDropdownItem\\n                        #menuItemsRef\\n                        *ngFor=\\"let option of options; let i = index;\\"\\n                        [ngClass]=\\"{\'selected-item\': option.value === true}\\"\\n                        [id]=\\"id + \'_Option_\' + option.id\\"\\n                        [disabled]=\\"option.disabled\\"\\n                        [placement]=\\"\'top\'\\"\\n                        [ngbTooltip]=\\"tooltipText\\"\\n                        (click)=\\"onOptionClick(option, $event)\\"\\n                        (mouseenter)=\\"onMouseOver($event)\\"\\n                        (focus)=\\"onOptionFocus($event)\\"\\n                        >\\n                        <div class=\\"form-check pt-2\\" [ngClass]=\\"{\'ps-4\': multiSelect === true}\\">\\n                            <input *ngIf=\\"multiSelect === true\\" tabindex=\\"-1\\" class=\\"form-check-input pointer\\" type=\\"checkbox\\" [(ngModel)]=\\"option.value\\" [id]=\\"id + \'_Option_Checkbox_\' + option.id\\" >\\n                            <label class=\\"form-check-label w-100 pointer\\" [for]=\\"id + \'_Option_Checkbox_\' + option.id\\">\\n                                <ngb-highlight [id]=\\"id + \'_Option_Text_\' + option.id\\" class=\\"d-block text-truncate\\" result=\\"{{option.label | translate: option.labelParams}}\\" [term]=\\"searchText\\"></ngb-highlight>\\n                            </label>\\n                        </div>\\n                    </button>\\n                </div>\\n\\n                \x3c!-- No result --\x3e\\n                <div [id]=\\"id + \'_noResult\'\\" *ngIf=\\"options.length === 0\\" class=\\"m-3 text-gray-700 d-flex align-items-center\\">\\n                    No Result Found\\n                </div>\\n            </div>\\n\\n            <div [ngClass]=\\"{\'d-none\': loading === false}\\">\\n\\n                \x3c!-- Divider --\x3e\\n                <div class=\\"dropdown-divider mt-0 mb-0\\"></div>\\n\\n                <div [id]=\\"id + \'_loading\'\\" *ngIf=\\"loading === true\\" class=\\"m-3 text-gray-700 d-flex align-items-center\\">\\n                    <div class=\\"spinner-border spinner-border-sm me-2\\" role=\\"status\\"></div>\\n                    Loading Results\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiDropdownRendererComponent","id":"component-UiDropdownRendererComponent-05a24a761f38503ca9a863cfc3dcccf9b8b8ea6e3b66ef941b2d4c31c3f6b792796ef6d964d7902e4faa4c430826b3abe2fc743e2555c87efcaa6b46f9cc24d2","file":"libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-dropdown-renderer","styleUrls":["./dropdown-renderer.component.scss"],"styles":[],"templateUrl":["./dropdown-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_subscriptions","defaultValue":"new Subscription()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[121]},{"name":"itemsArray","defaultValue":"[\\n        {id: 1, label: \'Item 1\'},\\n        {id: 2, label: \'Item 2\'},\\n        {id: 3, label: \'Item 3\'},\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"selectedItemId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"selectedOption","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectOption","args":[{"name":"option","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ElementRef, ViewChild } from \'@angular/core\';\\nimport { AfterViewInit, OnDestroy } from \'@angular/core/core\';\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\nimport { ICellRendererParams } from \'ag-grid-community\';\\nimport { Subscription } from \'rxjs\';\\n\\n@Component({\\n    selector: \'ui-dropdown-renderer\',\\n    templateUrl: \'./dropdown-renderer.component.html\',\\n    styleUrls: [\'./dropdown-renderer.component.scss\'],\\n})\\nexport class UiDropdownRendererComponent implements OnDestroy, ICellRendererAngularComp {\\n\\n    public params: any;\\n    public selectedItemId: string;\\n    public selectedOption = {};\\n\\n    public itemsArray = [\\n        {id: 1, label: \'Item 1\'},\\n        {id: 2, label: \'Item 2\'},\\n        {id: 3, label: \'Item 3\'},\\n    ];\\n\\n    private _subscriptions = new Subscription();\\n\\n    public constructor() {}\\n\\n    public onChange = (e) => {};\\n\\n    public refresh(params: ICellRendererParams): boolean {\\n        return true;\\n    }\\n\\n    public ngOnDestroy(): void {\\n        this._subscriptions.unsubscribe();\\n    }\\n\\n    public agInit(params: any): void {\\n        this.params = params;\\n\\n        this.selectedItemId = params.selectedItemId;\\n        this.itemsArray = params.itemsArray;\\n        this.selectedOption = this.itemsArray.find((item) => { return item.id === params.selectedItemId; });\\n\\n        this.onChange = params.onChange;\\n    }\\n\\n    public selectOption(option){\\n        this.selectedOption = option;\\n        this.onChange(option);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./dropdown-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":24,"modifierKind":[123]},"implements":["OnDestroy","ICellRendererAngularComp"],"templateData":"\\n<div ngbDropdown class=\\"d-inline-block\\" container=\\"body\\" >\\n    <div ngbDropdownToggle>\\n        {{selectedOption[\'label\'] | translate: selectedOption[\'labelParams\']}}\\n    </div>\\n    <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\n        <button *ngFor=\\"let item of itemsArray\\" [ngClass]=\\"{\'active\': selectedOption === item}\\" ngbDropdownItem (click)=\\"selectOption(item)\\">{{item.label | translate: item.labelParams}}</button>\\n    </div>\\n</div>"},{"name":"UiErrorComponent","id":"component-UiErrorComponent-807c10dc6a3e58dc80471214c952e0e262b1277d6dc79ae55f3732722ba7918fe28e042e3af832a8e6b1fdb22c23eeb69c0d59a8f66c53840b171457a7a61399","file":"libs/ui/src/lib/modules/error/error.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-error","styleUrls":["./error.component.scss"],"styles":[],"templateUrl":["./error.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"contactSupportLink","defaultValue":"\'#\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"returnUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"smallErrorPage","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"openModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"updateSize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":41}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, HostListener, OnDestroy, OnInit } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiLayoutService } from \'@lib/services/layout\';\\nimport { UiSupportModalComponent } from \'../layout/components/support-modal/support-modal.component\';\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\n\\n@Component({\\n    selector: \'ui-error\',\\n    templateUrl: \'./error.component.html\',\\n    styleUrls: [\'./error.component.scss\'],\\n})\\nexport class UiErrorComponent implements OnInit, AfterViewInit, OnDestroy {\\n    public returnUrl = \'\';\\n    public contactSupportLink = \'#\';\\n    public smallErrorPage = false;\\n\\n    constructor(\\n        private _location: Location,\\n        private _breakpointObserver: BreakpointObserver,\\n        private _modalService: NgbModal,\\n        private _layoutService: UiLayoutService\\n    ) {\\n        this._breakpointObserver.observe([Breakpoints.XSmall, Breakpoints.Small]).subscribe((result) => {\\n            this.smallErrorPage = result.matches;\\n        });\\n    }\\n\\n    public ngOnDestroy(): void {\\n        this._layoutService.showMargins = true;\\n    }\\n\\n    public ngAfterViewInit(): void {\\n        setTimeout(() => {\\n            this.updateSize();\\n        });\\n    }\\n\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        this.updateSize();\\n    }\\n\\n    public updateSize() {\\n        const h = window.innerHeight - document.getElementById(\'error-page\').getClientRects()[0].top - 55;\\n        document.getElementById(\'error-page\').style.height = h.toString() + \'px\';\\n        document.getElementById(\'error-page\').style.visibility = \'visible\';\\n    }\\n\\n    public ngOnInit() {\\n        document.getElementById(\'error-page\').style.visibility = \'hidden\';\\n\\n        this._layoutService.showMargins = false;\\n        this._layoutService.calcTop = false;\\n\\n        this._layoutService.onUpdateLayout.subscribe(() => {\\n            document.getElementById(\'error-page\').style.visibility = \'hidden\';\\n            setTimeout(() => {\\n                this.onResize();\\n                document.getElementById(\'error-page\').style.visibility = \'visible\';\\n            }, 200);\\n        });\\n    }\\n\\n    public openModal() {\\n        const modalRef = this._modalService.open(UiSupportModalComponent, new UiModalConfig());\\n\\n        modalRef.result.then(\\n            (result?: any) => {},\\n            (dismiss?) => {}\\n        );\\n    }\\n\\n    public goBack() {\\n        this._location.back();\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\n\\n.windmill {\\n    position: absolute;\\n    width: 33%;\\n    min-width: 100px;\\n    right: 20px;\\n    bottom: -40px;\\n    z-index: 0;\\n\\n    &.small {\\n        width: 66%;\\n    }\\n}\\n\\n.title {\\n    font-size: 56px;\\n    color: $gray-700;\\n    font-weight: 700;\\n    line-height: 110%;\\n    padding-bottom: 20px;\\n\\n    &.small {\\n        font-size: 32px;\\n        letter-spacing: -0.01em;\\n    }\\n}\\n\\n.error-number {\\n    padding-top: 32px;\\n    padding-bottom: 32px;\\n    font-size: 16px;\\n    color: $gray-700;\\n}\\n\\n.main-error-content {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    max-width: 500px;\\n}\\n\\n.error-page {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    min-height: 350px;\\n\\n    &.small {\\n        justify-content: flex-start;\\n    }\\n}\\n\\n.feedback-text-wrapper {\\n    display: flex;\\n    flex-wrap: wrap;\\n}","styleUrl":"./error.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","AfterViewInit","OnDestroy"],"templateData":"<div id=\\"error-page\\" class=\\"error-page p-4\\" [ngClass]=\\"{ small: smallErrorPage === true }\\">\\n    <div class=\\"main-error-content\\">\\n        <h1 class=\\"title \\" [ngClass]=\\"{ small: smallErrorPage === true }\\">{{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_TITLE\' | translate }}</h1>\\n\\n        <div class=\\"feedback-text-wrapper\\">\\n            <div innerHTML=\\"{{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_SUBTEXT_PT1\' | translate }}\\"></div>\\n            <a href=\\"javascript:void(0);\\" (click)=\\"openModal()\\"> {{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_SUBTEXT_PT2\' | translate }}</a>\\n            <div innerHTML=\\"{{ \'COMMON.ERRORS.GENERIC_ERROR_PAGE_SUBTEXT_PT3\' | translate }}\\"></div>\\n        </div>\\n        \x3c!--- Add in when error handling service is used\\n        <span class=\\"error-number\\">Error #000</span>\\n        --\x3e\\n        <button class=\\"btn btn-primary btn-md mt-5\\" (click)=\\"goBack()\\">{{ \'COMMON.GO_BACK\' | translate }}</button>\\n    </div>\\n    <img class=\\"windmill\\" alt=\\"Windmill on hill\\" [ngClass]=\\"{ small: smallErrorPage === true }\\" src=\\"assets/images/windmill.svg\\" />\\n</div>\\n"},{"name":"UiFeedbackFormComponent","id":"component-UiFeedbackFormComponent-405b8cd13d9288d717da8c223ea1bb03fb18c5d85107dcaad2da9345d18d90f3ff0a64271a3c7b87dcaa288f09830a49485f120e18ef9f2d2213ec328a53a3ee","file":"libs/ui/src/lib/modules/layout/components/feedback-form/feedback-form.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-feedback-form","styleUrls":["./feedback-form.component.scss"],"styles":[],"templateUrl":["./feedback-form.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":39,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"rate","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Validators } from \'@angular/forms\';\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\nimport { NgbRatingModule } from \'@ng-bootstrap/ng-bootstrap\';\\n\\n@Component({\\n    selector: \'ui-feedback-form\',\\n    templateUrl: \'./feedback-form.component.html\',\\n    styleUrls: [\'./feedback-form.component.scss\'],\\n})\\nexport class UiFeedbackFormComponent extends UiFormBaseComponent implements OnInit {\\n    public rate = 0;\\n\\n    public ngOnInit(): void {\\n        this.formControls = {\\n            currentRate: {\\n                value: null,\\n                validators: [Validators.required],\\n            },\\n            description: {\\n                value: \'\',\\n                validators: [Validators.maxLength(500)],\\n            },\\n            subject: { value: \'User Feedback\', validators: []},\\n            type: { value: \'ESG Feedback\', validators: []},\\n            recordType: { value: \'0128X000001Im9Y\', validators: []}, // Supplier Success\\n        };\\n\\n        this.createForm(this.formControls);\\n        this.editMode = true;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.rating-text {\\n    font-family: \'Roboto\';\\n    font-style: normal;\\n    font-weight: 700;\\n    font-size: 16px;\\n    line-height: 150%;\\n    color: $gray-900;\\n}\\n\\n.rating-legend {\\n    font-size: 14px;\\n    width: 410px;\\n    height: 21px;\\n    color: $gray-800;\\n}\\n\\nngb-rating {\\n    font-size: 48px;\\n    height: 48px;\\n    color: $primary;\\n}\\n\\n.rating {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 0px;\\n    gap: 16px;\\n\\n    width: 410px;\\n    height: 48px;\\n    padding-right: 15px;\\n}\\n\\n.filled {\\n    color: $primary;\\n    padding-right: 15px;\\n}\\n\\n.painted-star {\\n    font-size: 48px;\\n    position: absolute;\\n    display: inline-block;\\n    overflow: hidden;\\n    color: $primary;\\n    padding-right: 0px;\\n}\\n\\n.default-star {\\n    position: relative;\\n    display: inline-block;\\n    color: $gray-600;\\n    padding-right: 15px;\\n}\\n\\n.comments {\\n    padding-top: 30px;\\n    max-height: 86px;\\n}","styleUrl":"./feedback-form.component.scss"}],"stylesData":"","extends":"UiFormBaseComponent","implements":["OnInit"],"templateData":"<form [formGroup]=\\"form\\" autocomplete=\\"off\\">\\n    <div class=\\"row form-group\\">\\n        \x3c!-- Rating START --\x3e\\n        <div class=\\"rating-div\\">\\n            <div class=\\"rating-text\\">{{ \'COMMON.OVERALL_IMPRESSION\' | translate }}</div>\\n            <div class=\\"rating-legend\\">{{ \'COMMON.RATING_LEGEND\' | translate }}</div>\\n            <div class=\\"rating\\">\\n                <ngb-rating [(rate)]=\\"rate\\" [formControlName]=\\"\'currentRate\'\\" max=\\"5\\">\\n                    <ng-template let-fill=\\"fill\\">\\n                        <span class=\\"default-star\\" [class.filled]=\\"fill === 100\\">\\n                            <span class=\\"painted-star\\" [style.width.%]=\\"fill\\"> <i class=\\"bi bi-star-fill\\"></i></span>\\n                            <i class=\\"bi bi-star\\"></i>\\n                        </span>\\n                    </ng-template>\\n                </ngb-rating>\\n            </div>\\n        </div>\\n        \x3c!-- Rating END --\x3e\\n        \x3c!-- Text Area 1 START --\x3e\\n        <div class=\\"col-12 comments\\">\\n            <ui-text-area\\n                [formControlName]=\\"\'description\'\\"\\n                [label]=\\"\'COMMON.SUGGESTIONS_WELCOME\' | translate\\"\\n                [placeholder]=\\"\'COMMON.TYPE_SUGGESTION\' | translate\\"\\n                [form]=\\"form\\"\\n                [showHelpText]=\\"false\\"\\n                [showInfoIcon]=\\"false\\"\\n                [rows]=\\"3\\"\\n            >\\n            </ui-text-area>\\n        </div>\\n        \x3c!--  Text Area 1 END --\x3e\\n        <input type=\\"hidden\\" name=\\"orgid\\" value=\\"00D61000000e6A7\\" />\\n        <input type=\\"hidden\\" name=\\"retURL\\" value=\\"TBD\\" />\\n        <input type=\\"hidden\\" name=\\"type\\" value=\\"Feedback\\" />\\n        <input type=\\"hidden\\" name=\\"subject\\" value=\\"global\\" />\\n    </div>\\n</form>\\n"},{"name":"UiFeedbackModalComponent","id":"component-UiFeedbackModalComponent-1d3d6149350c0860d5ab8ed1edb877067b664e004af4735dcc99a3f3f86bdf2f397311d430f15a4f7d973f08549a695c6f537f963dee3aea1a9db7aedd55f854","file":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-feedback-modal","styleUrls":["./feedback-modal.component.scss"],"styles":[],"templateUrl":["./feedback-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":25,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"feedbackForm","deprecated":false,"deprecationMessage":"","type":"UiFeedbackFormComponent","optional":false,"description":"","line":19,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'feedbackForm\'"}],"modifierKind":[123]},{"name":"formState","defaultValue":"UiFormState.notSubmitted","deprecated":false,"deprecationMessage":"","type":"UiFormState","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"FormState","defaultValue":"UiFormState","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"saveBtnDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onformSubmitted","args":[{"name":"data","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1749,"end":1753,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1743,"end":1748,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1939,"end":1943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1933,"end":1938,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient, HttpHeaders } from \'@angular/common/http\';\\nimport { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from \'@angular/core\';\\nimport { UiLayoutService } from \'@lib/services/layout\';\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiFeedbackFormComponent } from \'../feedback-form/feedback-form.component\';\\nimport { UiModalBaseComponent } from \'../../../modal/components/modal-base/modal-base.component\';\\n\\nexport enum UiFormState{\\n    notSubmitted = 0,\\n    waiting = 1,\\n    submitted = 2\\n}\\n@Component({\\n    selector: \'ui-feedback-modal\',\\n    templateUrl: \'./feedback-modal.component.html\',\\n    styleUrls: [\'./feedback-modal.component.scss\']\\n})\\nexport class UiFeedbackModalComponent extends UiModalBaseComponent implements AfterViewInit {\\n    @ViewChild(\'feedbackForm\') public feedbackForm: UiFeedbackFormComponent;\\n    public saveBtnDisabled = true;\\n\\n    public formState: UiFormState = UiFormState.notSubmitted;\\n    public FormState = UiFormState;\\n\\n    public constructor(private _layoutService: UiLayoutService, public activeModal: NgbActiveModal) {\\n        super(activeModal);\\n    }\\n    public ngAfterViewInit(): void {\\n        super.ngAfterViewInit();\\n\\n        this.feedbackForm.form.valueChanges.subscribe((d) => {\\n            this.saveBtnDisabled = !this.feedbackForm.form.valid;\\n        });\\n    }\\n\\n    public onformSubmitted(data) {\\n\\n        this._layoutService.salesforceWebToCase(data);\\n        this.formState = UiFormState.waiting;\\n\\n        setTimeout(() => {\\n            this.updateBorder();\\n        });\\n\\n        // Simulate loading time\\n        setTimeout(() => {\\n            this.formState = UiFormState.submitted;\\n        }, 2000);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n\\n.modal-body {\\n    height: 350px;\\n}\\n\\n.action-buttons {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: flex-end;\\n    align-items: center;\\n    gap: 10px;\\n}\\n\\n.modal-title {\\n    // font-weight: 700;\\n    // font-size: 24px;\\n    // line-height: 120%;\\n    // width: 384px;\\n    // height: 29px;\\n}\\n\\n.feedback-instructions {\\n    font-weight: 400;\\n    font-size: 14px;\\n    color: $gray-800;\\n}\\n\\n.spinner-page {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    // padding: 20px;\\n    gap: 8px;\\n    width: 450px;\\n    height: 300px;\\n}\\n\\n.submitted-page {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    // padding: 20px;\\n    gap: 16px;\\n    width: 450px;\\n    height: 300px;\\n}\\n\\n.help-text {\\n    font-style: normal;\\n    font-weight: 400;\\n    font-size: 16px;\\n    line-height: 150%;\\n    text-align: center;\\n    color: $gray-800;\\n}","styleUrl":"./feedback-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":23,"modifierKind":[123],"jsdoctags":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","implements":["AfterViewInit"],"templateData":"\\n<div class=\\"modal-header\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\n        <div>\\n            <h3 class=\\"modal-title\\">{{ \'COMMON.YOUR_FEEDBACK\' | translate }}</h3>\\n            <div class=\\"feedback-instructions\\">{{ \'COMMON.SUBMIT_FEEDBACK_PLEASE\' | translate }}</div>\\n        </div>\\n    </ng-container>\\n    <button type=\\"button\\" class=\\"btn-close\\" aria-label=\\"Close\\" (click)=\\"dismiss()\\"></button>\\n</div>\\n<div #modalBody class=\\"modal-body\\">\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\n        \x3c!--Form START--\x3e\\n        <ui-feedback-form #feedbackForm (formSubmitted)=\\"onformSubmitted($event)\\"></ui-feedback-form>\\n        \x3c!--Form END--\x3e\\n    </ng-container>\\n\\n    \x3c!--SPINNER PAGE START--\x3e\\n    <div class=\\"spinner-page\\" *ngIf=\\"formState === FormState.waiting\\">\\n        <div class=\\"spinner-border spinner-border-lg\\" role=\\"status\\"></div>\\n        <div>{{ \'COMMON.SUBMITTING\' | translate }}</div>\\n    </div>\\n    \x3c!--SPINNER PAGE END--\x3e\\n\\n    \x3c!--Submitted page START--\x3e\\n    <div class=\\"submitted-page\\" *ngIf=\\"formState === FormState.submitted\\">\\n        <i class=\\"bi bi-check-circle-fill bi-3x text-success\\"></i>\\n        <h3>{{ \'COMMON.THANKS_SUBMIT_FEEDBACK\' | translate }}</h3>\\n        <div class=\\"help-text\\" innerHTML=\\"{{ \'COMMON.FEEDBACK_CONTRIBUTION\' | translate }}\\"></div>\\n        \x3c!-- <button  type=\\"button\\" class=\\"btn btn-primary w-100\\">{{ \'COMMON.OK_THANKS\' | translate }}</button> --\x3e\\n    </div>\\n    \x3c!--Submitted page END--\x3e\\n</div>\\n\\n\x3c!-- Footer START --\x3e\\n<div class=\\"modal-footer\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\n    <div class=\\"action-buttons w-100\\">\\n\\n        \x3c!--Action buttons footer START--\x3e\\n        <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primary btn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"dismiss()\\">\\n            {{ \'COMMON.DISMISS\' | translate }}\\n        </button>\\n        <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary btn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"feedbackForm.submitForm()\\" [disabled]=\\"saveBtnDisabled\\">\\n            {{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}\\n        </button>\\n        <button id=\\"btnThankYou\\" type=\\"button\\" class=\\"btn btn-primary w-100\\" *ngIf=\\"formState === FormState.submitted\\" (click)=\\"dismiss()\\">{{ \'COMMON.OK_THANKS\' | translate }}</button>\\n        \x3c!--Action buttons footer END--\x3e\\n    </div>\\n</div>\\n\x3c!-- Footer END --\x3e\\n"},{"name":"UiFileUploadComponent","id":"component-UiFileUploadComponent-40cd37c903a907852d3a10a73460a85938cb7b4962d508927d3d746294558474bc0f53f4b39ee15d35674abdc002fbc04823e2b4fd97873da8126e27de359567","file":"libs/ui/src/lib/modules/file-upload/components/file-upload/file-upload.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-file-upload","styleUrls":["./file-upload.component.scss"],"styles":[],"templateUrl":["./file-upload.component.html"],"viewProviders":[],"inputsClass":[{"name":"acceptFileTypes","defaultValue":"[\\n        \'text/plain\', // txt\\n        // \'application/pdf\', // pdf\\n        // \'application/msword\', // doc\\n        // \'application/vnd.ms-excel\', // xls\\n        // \'application/vnd.openxmlformats-officedocument.wordprocessingml.document\', // docx\\n        // \'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\', // xlsx\\n        // \'application/rtf\', // rtf\\n        // \'image/jpeg\', // jpg/jpeg\\n        // \'image/png\', // png\\n        // \'application/json\', // json\\n    ]","deprecated":false,"deprecationMessage":"","line":30,"type":"{}","decorators":[]},{"name":"buttonView","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"endpoint","deprecated":false,"deprecationMessage":"","line":44,"type":"string","decorators":[]},{"name":"files","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":43,"type":"UiFileItemModel[]","decorators":[]},{"name":"folder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":45,"type":"string","decorators":[]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"helpText","deprecated":false,"deprecationMessage":"","line":25,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"infoText","defaultValue":"\'FILE_UPLOAD.DRAG_DROP_CLICK\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'FILE_UPLOAD.UPLOAD_FILES\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"loadingText","defaultValue":"\'FILE_UPLOAD.LOADING\'","deprecated":false,"deprecationMessage":"","line":42,"type":"string","decorators":[]},{"name":"mainText","defaultValue":"\'FILE_UPLOAD.DRAG_DROP_CLICK\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"maxFileSize","defaultValue":"20000","deprecated":false,"deprecationMessage":"","line":28,"type":"number","decorators":[]},{"name":"maximumFilesAllowed","defaultValue":"5","deprecated":false,"deprecationMessage":"","line":29,"type":"number","decorators":[]},{"name":"showFiles","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"showInfoIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"handleDocumentProcessedError","defaultValue":"new EventEmitter<UiDocumentModel>()","deprecated":false,"deprecationMessage":"","line":52,"type":"EventEmitter<UiDocumentModel>"},{"name":"handleDocumentProcessedResult","defaultValue":"new EventEmitter<UiDocumentModel>()","deprecated":false,"deprecationMessage":"","line":51,"type":"EventEmitter<UiDocumentModel>"},{"name":"handleDocumentRemoved","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<UiFileItemModel>"},{"name":"handleDocumentScanError","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":48,"type":"EventEmitter<UiFileItemModel>"},{"name":"handleDocumentScanResult","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":47,"type":"EventEmitter<UiFileItemModel>"},{"name":"handleDocumentValidationError","defaultValue":"new EventEmitter<UiFileItemModel>()","deprecated":false,"deprecationMessage":"","line":49,"type":"EventEmitter<UiFileItemModel>"}],"propertiesClass":[{"name":"_fileScanConfig","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":62,"modifierKind":[121]},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"fileUploaded","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"handleError","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":235,"modifierKind":[121]},{"name":"isFileScanning","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"isScanClean","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"safeFiles","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"UiButtonTypeEnum","defaultValue":"UiButtonTypeEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]}],"methodsClass":[{"name":"extensionAccepted","args":[{"name":"extension","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"extension","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"fileBrowseHandler","args":[{"name":"files","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"files","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"formatBytes","args":[{"name":"bytes","type":"","deprecated":false,"deprecationMessage":""},{"name":"decimals","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":224,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"bytes","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"decimals","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSafeCount","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleCleanScan","args":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":""},{"name":"scanResult","type":"IUiFileScanResult","deprecated":false,"deprecationMessage":""},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<UiDocumentModel>","typeParameters":[],"line":256,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"scanResult","type":"IUiFileScanResult","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fileName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleDirtyScan","args":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":246,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"file","type":"UiFileItemModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onFileDropped","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"prepareFilesList","args":[{"name":"files","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"files","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"processDocument","args":[{"name":"document","type":"UiDocumentModel","deprecated":false,"deprecationMessage":""},{"name":"params","type":"HttpParams","deprecated":false,"deprecationMessage":"","optional":true},{"name":"headers","type":"HttpHeaders","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<UiDocumentModel>","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"document","type":"UiDocumentModel","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"params","type":"HttpParams","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"headers","type":"HttpHeaders","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"removeFile","args":[{"name":"thisFile","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"thisFile","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"uploadFile","args":[{"name":"files","type":"FileList | Array<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"files","type":"FileList | Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient, HttpContext, HttpErrorResponse, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { Component, EventEmitter, Input, Output } from \'@angular/core\';\\nimport { catchError, map, mergeMap, Observable, of, tap } from \'rxjs\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { SKIP_INTERCEPTOR } from \'@app/interceptors\';\\nimport { UiButtonTypeEnum } from \'@lib/modules/button/enums/action-button-type.enum\';\\nimport { UiFileScanService, IUiFileScanResult } from \'@lib/modules/file-upload/services/file-scan.service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiFileItemModel } from \'../models/file-item.model\';\\nimport { UiDocumentModel } from \'../models/document.model\';\\n\\n@Component({\\n    selector: \'ui-file-upload\',\\n    templateUrl: \'./file-upload.component.html\',\\n    styleUrls: [\'./file-upload.component.scss\'],\\n})\\nexport class UiFileUploadComponent {\\n    @Input() public id: string;\\n    @Input() public disabled = false;\\n    @Input() public buttonView = false;\\n    @Input() public forceDisabled = false;\\n    @Input() public label = \'FILE_UPLOAD.UPLOAD_FILES\';\\n    @Input() public mainText = \'FILE_UPLOAD.DRAG_DROP_CLICK\';\\n    @Input() public infoText = \'FILE_UPLOAD.DRAG_DROP_CLICK\';\\n    @Input() public helpText;\\n    @Input() public showInfoIcon = false;\\n    @Input() public showFiles = true;\\n    @Input() public maxFileSize = 20000; // In bytes\\n    @Input() public maximumFilesAllowed = 5;\\n    @Input() public acceptFileTypes = [\\n        \'text/plain\', // txt\\n        // \'application/pdf\', // pdf\\n        // \'application/msword\', // doc\\n        // \'application/vnd.ms-excel\', // xls\\n        // \'application/vnd.openxmlformats-officedocument.wordprocessingml.document\', // docx\\n        // \'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\', // xlsx\\n        // \'application/rtf\', // rtf\\n        // \'image/jpeg\', // jpg/jpeg\\n        // \'image/png\', // png\\n        // \'application/json\', // json\\n    ];\\n    @Input() public loadingText = \'FILE_UPLOAD.LOADING\';\\n    @Input() public files: UiFileItemModel[] = [];\\n    @Input() public endpoint: string; // Optional endpoint to proceed the file after scan.\\n    @Input() public folder = \'\'; // Optional folder.\\n\\n    @Output() public handleDocumentScanResult: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\n    @Output() public handleDocumentScanError: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\n    @Output() public handleDocumentValidationError: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\n    @Output() public handleDocumentRemoved: EventEmitter<UiFileItemModel> = new EventEmitter<UiFileItemModel>();\\n    @Output() public handleDocumentProcessedResult: EventEmitter<UiDocumentModel> = new EventEmitter<UiDocumentModel>();\\n    @Output() public handleDocumentProcessedError: EventEmitter<UiDocumentModel> = new EventEmitter<UiDocumentModel>();\\n\\n    public error = false;\\n    public safeFiles: any[] = [];\\n    public isFileScanning: boolean;\\n    public isScanClean: boolean;\\n    public isLoading = false;\\n    public fileUploaded: boolean;\\n    public UiButtonTypeEnum = UiButtonTypeEnum;\\n\\n    private _fileScanConfig: {\\n        scanIdentityPoolId: string;\\n        scanBucketRegion: string;\\n        scanUrl: string;\\n        scanBucketName: string;\\n        awsS3ServiceURL: string;\\n        enabled: boolean;\\n    };\\n\\n    constructor(\\n        private _fileScanService: UiFileScanService,\\n        private _httpClient: HttpClient,\\n        private _translateService: TranslateService,\\n        private _configurationService: UiConfigurationService\\n    ) {\\n        this._fileScanConfig = this._configurationService.appConfig[\'file-scan\'];\\n    }\\n\\n    public fileBrowseHandler(files) {\\n        this.prepareFilesList(files);\\n    }\\n\\n    public prepareFilesList(files: Array<any>) {\\n        for (const item of files) {\\n            item.progress = 0;\\n            item.typeRejected = null;\\n            item.safe = false;\\n            item.index = Date.now().toString(36) + Math.random().toString(36).substring(2);\\n\\n            if (this.getSafeCount() < this.maximumFilesAllowed) {\\n                if (this.extensionAccepted(item.type)) {\\n                    item.isLoading = true;\\n                    item.isFileScanning = true;\\n                    if (item.size >= this.maxFileSize) {\\n                        item.typeRejected = \'FILE_UPLOAD.EXCEEDED_MAX_FILE_SIZE\';\\n                        item.message = \'FILE_UPLOAD.EXCEEDED_MAX_FILE_SIZE\';\\n                        item.isLoading = false;\\n                        item.isFileScanning = false;\\n                        this.handleDocumentValidationError.emit(item);\\n                    }\\n                } else {\\n                    item.typeRejected = \'FILE_UPLOAD.FILE_TYPE_REJECTED\';\\n                    item.message = \'FILE_UPLOAD.FILE_TYPE_REJECTED\';\\n                    item.isLoading = false;\\n                    item.isFileScanning = false;\\n                    this.handleDocumentValidationError.emit(item);\\n                }\\n            } else {\\n                item.typeRejected = \'FILE_UPLOAD.EXCEEDED_MAX_FILES\';\\n                item.message = \'FILE_UPLOAD.EXCEEDED_MAX_FILES\';\\n                item.isLoading = false;\\n                this.handleDocumentValidationError.emit(item);\\n            }\\n            this.files.push(item);\\n        }\\n        this.uploadFile(this.files);\\n        this.disabled = this.getSafeCount() >= this.maximumFilesAllowed;\\n    }\\n\\n    public getSafeCount() {\\n        return this.files.filter((obj) => obj.safe === true || (obj.uploaded === undefined && obj.typeRejected === null)).length;\\n    }\\n\\n    public onFileDropped($event) {\\n        this.prepareFilesList($event);\\n        this.disabled = this.getSafeCount() >= this.maximumFilesAllowed;\\n    }\\n\\n    public removeFile(thisFile) {\\n        this.files.splice(\\n            this.files.findIndex((item) => item.index === thisFile.index),\\n            1\\n        );\\n        this.handleDocumentRemoved.emit(thisFile);\\n        this.disabled = this.getSafeCount() >= this.maximumFilesAllowed;\\n    }\\n\\n    public extensionAccepted(extension: string) {\\n        return this.acceptFileTypes.some((fileType) => {\\n            return extension.includes(fileType);\\n        });\\n    }\\n\\n    public uploadFile(files: FileList | Array<any>) {\\n        this.isLoading = true;\\n\\n        // If no document is uploading\\n        const loadingDocumentCount = this.files.filter((obj) => obj.isLoading === true).length;\\n        if (loadingDocumentCount === 0) {\\n            this.isLoading = false;\\n        }\\n        // If no document is scanning\\n        const isFileScanning = this.files.filter((obj) => obj.isFileScanning === true).length;\\n        if (isFileScanning === 0) {\\n            this.isFileScanning = false;\\n        }\\n\\n        setTimeout(() => {\\n            for (let i = 0; i < files.length; ++i) {\\n                if (files[i].typeRejected === null && files[i].uploaded === undefined) {\\n                    const fileName = files[i].name.split(\'.\').slice(0, -1).join(\'.\');\\n                    const fileType = files[i].type;\\n                    const fileExt = files[i].name.split(\'.\').pop();\\n                    this._fileScanService\\n                        .uploadFile(files[i], this.folder)\\n                        .pipe(\\n                            tap(() => {\\n                                if (this._fileScanService.fileScan) {\\n                                    this.isFileScanning = true;\\n                                }\\n                            }),\\n                            mergeMap(() => this._fileScanService.fileScan),\\n                            mergeMap((result) => {\\n                                if (result.scanResultClean === true) {\\n                                    files[i].isLoading = false;\\n                                    files[i].isFileScanning = false;\\n                                    files[i].safe = true;\\n                                    files[i].uploaded = true;\\n                                    files[i].bucket = this._fileScanConfig.scanBucketName;\\n                                    files[i].scanResult = result;\\n                                    files[i].fileExt = fileExt;\\n                                    files[i].mimeType = fileType;\\n                                    return this.handleCleanScan(files[i], result, fileName);\\n                                } else {\\n                                    files[i].isLoading = false;\\n                                    files[i].isFileScanning = false;\\n                                    files[i].safe = false;\\n                                    files[i].uploaded = true;\\n                                    files[i].bucket = this._fileScanConfig.scanBucketName;\\n                                    files[i].scanResult = result;\\n                                    this.handleDirtyScan(files[i]);\\n                                }\\n                                return of(null);\\n                            }),\\n                            map((doc) => {\\n                                if (doc) {\\n                                    return true;\\n                                }\\n                            })\\n                        )\\n                        .subscribe((value) => {});\\n                }\\n            }\\n        }, 2000);\\n    }\\n\\n    public processDocument(document: UiDocumentModel, params?: HttpParams, headers?: HttpHeaders): Observable<UiDocumentModel> {\\n        const options = { headers, params, context: new HttpContext().set(SKIP_INTERCEPTOR, true) };\\n        return this._httpClient.post(`${this.endpoint}`, document, options).pipe(\\n            catchError((error) => this.handleError(error, document)),\\n            map((res: UiDocumentModel) => {\\n                for (let i = 0; i < this.files.length; i++) {\\n                    if (this.files[i].name === res.fileName + \'.\' + res.fileExt) {\\n                        this.files[i].processed = true;\\n                    }\\n                    this.handleDocumentProcessedResult.emit(document);\\n                }\\n                return res;\\n            })\\n        );\\n    }\\n\\n    public formatBytes(bytes, decimals) {\\n        if (bytes === 0) {\\n            return \'0 Bytes\';\\n        }\\n        const k = 1024;\\n        const dm = decimals <= 0 ? 0 : decimals || 2;\\n        const sizes = [\'Bytes\', \'KB\', \'MB\', \'GB\', \'TB\', \'PB\', \'EB\', \'ZB\', \'YB\'];\\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \' \' + sizes[i];\\n    }\\n\\n    private handleError = (error: HttpErrorResponse, fileItem: UiDocumentModel) => {\\n        for (let i = 0; i < this.files.length; i++) {\\n            if (this.files[i].name === fileItem.fileName + \'.\' + fileItem.fileExt) {\\n                this.files[i].error = this._translateService.instant(\'FILE_UPLOAD.SERVER_ERROR\') + \': \' + error.statusText;\\n            }\\n        }\\n\\n        this.handleDocumentProcessedError.emit(fileItem);\\n        return of();\\n    };\\n\\n    private handleDirtyScan(file: UiFileItemModel) {\\n        this.isFileScanning = false;\\n        this.fileUploaded = true;\\n        this.isScanClean = false;\\n        this.isLoading = false;\\n\\n        this._fileScanService.completeFileScan();\\n        this.handleDocumentScanError.emit(file);\\n    }\\n\\n    private handleCleanScan(\\n        file: UiFileItemModel,\\n        scanResult: IUiFileScanResult,\\n        fileName: string,\\n    ): Observable<UiDocumentModel> {\\n        this.isFileScanning = false;\\n        this.isScanClean = true;\\n        this.fileUploaded = true;\\n        this.isLoading = false;\\n\\n        const s3Key = scanResult.key.split(\'+\').join(\'\');\\n        const uniqueFileName = s3Key.split(\'/\').pop();\\n        const documentToSave = new UiDocumentModel();\\n\\n        documentToSave.fileName = fileName;\\n        documentToSave.fileExt = file.fileExt;\\n        documentToSave.mimeType = file.mimeType;\\n        documentToSave.s3Key = s3Key;\\n        documentToSave.uniqueFileName = uniqueFileName;\\n        documentToSave.bucket = this._fileScanConfig.scanBucketName;\\n\\n        this._fileScanService.completeFileScan();\\n        this.handleDocumentScanResult.emit(file);\\n\\n        // If endpoint not undefined and not empty, saveDocument(proceed server side document) using that specified endpoint.\\n        if (this.endpoint !== undefined && this.endpoint !== \'\') {\\n            return this.processDocument(documentToSave);\\n        } else {\\n            return of(documentToSave);\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.drop-box {\\n    width: 100%;\\n    min-height: 150px;\\n    border: 2px solid $primary;\\n    border-radius: 4px;\\n    padding: 20px;\\n    background-color: $white;\\n    -webkit-user-select: none; /* Safari */\\n    -ms-user-select: none; /* IE 10 and IE 11 */\\n    user-select: none; /* Standard syntax */\\n\\n    &.disabled {\\n        border-color: $gray-500;\\n    }\\n    &.disabled * {\\n        color: $gray-500;\\n    }\\n}\\n\\n.file-box {    \\n    width: 100%;\\n    border-radius: 4px;\\n    background-color: $gray-200;\\n    margin-top: 1rem;\\n    .bi {\\n        line-height: 0;\\n    }\\n}\\n\\n.loading-container {\\n    height: 100px;\\n}\\n\\n.error {\\n    outline: 1px solid $danger-500;\\n}\\n\\n.error-icon {\\n    padding-right: 3px;\\n}\\n\\n.success-icon {\\n    font-size: 1.3rem;\\n}\\n\\n.file {\\n    position: relative;\\n    overflow: hidden;\\n}\\n  \\ninput {\\n    position: absolute;\\n    font-size: 50px;\\n    opacity: 0;\\n    right: 0;\\n    top: 0;\\n}\\n/* CSS */\\n.spin {\\n    animation: spin 2s linear infinite;\\n}\\n\\n.curs {\\n    cursor: default;\\n}\\n  \\n@keyframes spin {\\n    0% { transform: rotate(0deg); }\\n    100% { transform: rotate(360deg); }\\n}","styleUrl":"./file-upload.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_fileScanService","type":"UiFileScanService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""}],"line":69,"jsdoctags":[{"name":"_fileScanService","type":"UiFileScanService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div class=\\"form\\" [disabled]=\\"disabled\\" uiDragDrop (fileDropped)=\\"onFileDropped($event)\\">  \\n    \x3c!-- Label and info icon --\x3e\\n    <div class=\\"d-flex align-items-center\\">\\n        \x3c!-- Label --\x3e\\n        <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\n            {{label | translate}}\\n            \x3c!-- Required Asterix --\x3e\\n            \x3c!-- <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span> --\x3e\\n        </label>\\n        <br>\\n        \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\n        <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== undefined && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill ps-2\\"\\n            placement=\\"top\\" [ngbTooltip]=\\"infoText | translate\\">\\n        </i>\\n    </div>\\n\\n    \x3c!-- Upload Button --\x3e\\n    <div *ngIf=\\"buttonView === true\\" class=\\"file btn btn-primary\\">\\n        {{loadingText | translate}}\\n        <input class=\\"pointer\\" type=\\"file\\" #fileDropRef id=\\"fileDropRef\\" multiple (change)=\\"prepareFilesList($event.target[\'files\'])\\" />\\n    </div>\\n\\n    \x3c!-- Upload Drag and Drop box --\x3e\\n    <div *ngIf=\\"buttonView === false\\" class=\\"drop-box d-flex align-items-center\\" [ngClass]=\\"{\'disabled\': disabled === true || isLoading === true}\\">\\n        <div *ngIf=\\"!isLoading\\" class=\\"d-flex flex-column align-items-center justify-content-center w-100\\">\\n                <div>\\n                    <i class=\\"bi bi-upload bi-lg h-100\\" [ngClass]=\\"{\'text-primary\': disabled === false}\\"></i>\\n                </div>\\n                <div class=\\"file btn\\" [ngClass]=\\"{\'btn-link\': disabled === false}\\">\\n                    {{mainText | translate}}\\n                    <input [disabled]=\\"disabled\\" [ngClass]=\\"{\'pointer\': disabled === false}\\" type=\\"file\\" #fileDropRef id=\\"fileDropRef\\" multiple (change)=\\"fileBrowseHandler($event.target[\'files\'])\\" />\\n                </div>\\n                <div class=\\"text-gray-700 text-center\\" *ngIf=\\"helpText !== null && helpText !== \'\'\\">{{helpText | translate}}</div>        \\n                <input hidden #fileInput type=\\"file\\" [multiple]=\\"false\\">\\n            \\n        </div>\\n        <div class=\\"w-100\\" *ngIf=\\"isLoading\\">            \\n            <div class=\\"d-flex align-items-center flex-column\\">\\n                <div class=\\"spinner-border\\"></div>\\n                <span class=\\"pt-2\\">{{loadingText | translate}}</span>\\n            </div> \\n        </div>\\n    </div>        \\n</div>\\n<ng-container *ngIf=\\"showFiles === true\\">\\n    <div class=\\"file-box d-flex bd-highlight align-items-center ps-2 pe-2\\" *ngFor=\\"let item of files; let i = index\\" [ngClass]=\\"item.typeRejected || item.error || (item.safe === false && item.uploaded === true) ? \'error\' : \'normal\'\\">    \\n        <div class=\\"p-2 flex-grow-1 bd-highlight\\">\\n            {{item.name}}\\n            \x3c!--             \\n            <ng-container *ngIf=\\"item?.isFileScanning === true\\"> - <span class=\\"text-success\\"> Scanning</span></ng-container>\\n            <ng-container *ngIf=\\"item?.uploaded === true\\"> - <span class=\\"text-success\\"> {{\'FILE_UPLOAD.FILE_UPLOADED\' | translate}}</span></ng-container>\\n             --\x3e\\n            <ng-container *ngIf=\\"item?.safe === false && item?.uploaded === true\\"> - <span class=\\"text-danger\\"> {{\'FILE_UPLOAD.FILE_UNSAFE\' | translate}} </span></ng-container>\\n            <ng-container *ngIf=\\"item?.typeRejected !== null\\"> - <span class=\\"text-danger\\"> {{\'FILE_UPLOAD.FILE_REJECTED\' | translate}} - {{item?.typeRejected | translate}} </span></ng-container>\\n            <ng-container *ngIf=\\"item?.error !== undefined\\"> - <span class=\\"text-danger\\">{{item?.error}}</span></ng-container>\\n            \\n        </div>\\n        <div class=\\"p-2 bd-highlight d-flex gap-3 align-items-center\\">\\n            <i *ngIf=\\"item?.error !== undefined || item?.typeRejected !== null\\" class=\\"error-icon bi bi-exclamation-triangle-fill text-danger-600\\"></i>\\n            <i *ngIf=\\"item?.isLoading === false\\" class=\\"bi bi-x-lg pointer\\" (click)=\\"removeFile(item)\\"></i>\\n            <div *ngIf=\\"item?.isLoading === true\\" class=\\"spinner-border spinner-border-sm\\"></div>        \\n        </div>    \\n    </div>\\n</ng-container>\\n"},{"name":"UiFormBaseComponent","id":"component-UiFormBaseComponent-b403ca81140493c0ae0fa75942e60c5ee3d94d9e45c625463f46084ba1a0fc6f1869f456b51e3a1ac067fc5fab14f6b9247b0951a34905faf1e60f0fae7ae27f","file":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-base","styleUrls":["./form-base.component.scss"],"styles":[],"templateUrl":["./form-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter"},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter"},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":39,"type":"EventEmitter"}],"propertiesClass":[{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121]},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121]},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[122]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123]}],"methodsClass":[{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { Subject } from \'rxjs\';\\n\\n/**\\n * @deprecated: Use UiFormControlConfig from @lib/modules/form/form-base/form-base.component.ts\\n */\\nexport class UiFormControlConfigObsolete {\\n    public formControlName? = \'\';\\n    public disabled? = false;\\n    public forceDisabled? = false;\\n    public label?: \'Test\';\\n    public placeholder? = \'\';\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\n    public form?: any;\\n    public prefixIcon? = \'\';\\n    public suffixIcon? = \'\';\\n    public prefixText? = \'\';\\n    public suffixText? = \'\';\\n    public helpText? = \'\';\\n    public infoText? = \'\';\\n    public showHelpText? = true;\\n    public showSuccessValidation? = false;\\n    public showErrorValidation? = true;\\n    public showInfoIcon? = true;\\n    public patternErrorText? = \'patternErrorText\';\\n    public errorStrings? = {};\\n}\\n@Component({\\n    selector: \'ui-form-base\',\\n    templateUrl: \'./form-base.component.html\',\\n    styleUrls: [\'./form-base.component.scss\'],\\n})\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\n\\n    @Output() public formStatusChange = new EventEmitter<any>();\\n    @Output() public formClosed = new EventEmitter<any>();\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\n\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\n        this._editMode = value;\\n        if (this._editMode === true) {\\n            this.enableAllInputs();\\n        } else {\\n            this.disableAllInputs();\\n        }\\n    }\\n\\n    public get editMode(): boolean {\\n        return this._editMode;\\n    }\\n\\n    public form: FormGroup;\\n    public payload: any = {};\\n\\n    public modeChanged = false;\\n    public formControls: { [name: string]: {value: any; validators: Validators; config?: UiFormControlConfigObsolete} };\\n\\n    public showSuccessValidation = false;\\n    public showErrorValidation = true;\\n    public showHelpText = true;\\n    public showInfoIcon = true;\\n\\n    public Validators = Validators;\\n\\n    protected _ngUnsubscribe = new Subject();\\n\\n    private _initialValues;\\n    private _editMode = false;\\n\\n    constructor() {}\\n\\n    public ngOnInit(): void {  }\\n\\n    public ngOnDestroy(): void {\\n        this._ngUnsubscribe.next(null);\\n        this._ngUnsubscribe.complete();\\n    }\\n\\n    public createForm(formControls: { [name: string]: {value: any; validators: any; config?: UiFormControlConfigObsolete} }) {\\n        this.form = new FormGroup({});\\n        for (const [key, value] of Object.entries(formControls)) {\\n            const newControl = new FormControl(value.value, {validators: value.validators});\\n            this.form.setControl(key, newControl);\\n        }\\n        this.editMode = false;\\n    }\\n\\n    public setValues(FormValues: any){\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.form.controls[key].setValue(FormValues[key]);\\n        });\\n    }\\n\\n    public viewForm() {\\n        this.editMode = false;\\n    }\\n\\n    public editForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.editMode = true;\\n    }\\n\\n    public clearForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.form.reset();\\n        this.payload = {};\\n    }\\n\\n    public cancelForm() {\\n        this.form.reset(this._initialValues);\\n        this.payload = {};\\n        this.editMode = false;\\n    }\\n\\n    public closeForm() {\\n        this.editMode = false;\\n        this.formClosed.emit();\\n    }\\n\\n    public submitForm(): FormData {\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.payload[key] = this.form.controls[key].value;\\n        });\\n        this.editMode = false;\\n\\n        this.formSubmitted.emit(this.form.value);\\n\\n        return this.form.value;\\n    }\\n\\n    public onClearBtnClick() {\\n        this.clearForm();\\n    }\\n\\n    public onEditBtnClick() {\\n        this.editForm();\\n    }\\n\\n    public onCancelBtnClick() {\\n        this.cancelForm();\\n    }\\n\\n    public onCloseBtnClick() {\\n        this.closeForm();\\n    }\\n\\n    public onSaveBtnClick() {\\n        this.submitForm();\\n    }\\n\\n    public onFormOptionsChanged(e: {showInfoIcon: boolean; showHelpText: boolean}){\\n        this.showInfoIcon = e.showInfoIcon;\\n        this.showHelpText = e.showHelpText;\\n    }\\n\\n    private disableAllInputs() {\\n\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n                    this.form.controls[control].disable();\\n                }\\n            }\\n        }\\n    }\\n\\n    private enableAllInputs() {\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n\\n                    // Enable only the form controls that don\'t have forceDisabled\\n                    if(this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined){\\n\\n                        if(this.formControls[control].config.forceDisabled === false){\\n                            this.form.controls[control].enable();\\n                            this.form.controls[control].markAsUntouched();\\n                        }\\n                    }\\n                    else{\\n                        this.form.controls[control].enable();\\n                        this.form.controls[control].markAsUntouched();\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":70},"implements":["OnInit","OnDestroy"],"accessors":{"editMode":{"name":"editMode","setSignature":{"name":"editMode","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":41,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"editMode","type":"boolean","returnType":"boolean","line":50}}},"templateData":"<p>Implement your form template in your extended component.</p>\\n"},{"name":"UiFormBaseComponent","id":"component-UiFormBaseComponent-e3b59b3620caf1dd85b2f72ee0cec7d0b34f4fd54aedece956baca050ee1daf045115949f6a7458c0909c6c3137ea422e2a6cb291831d9b50d153ceabb1544d8-1","file":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-base","styleUrls":["./form-base.component.scss"],"styles":[],"templateUrl":["./form-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":35,"type":"EventEmitter"},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter"},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":36,"type":"EventEmitter"}],"propertiesClass":[{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[121]},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":66,"modifierKind":[121]},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[122]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":32,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123]},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]}],"methodsClass":[{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { Subject } from \'rxjs\';\\n\\nexport class UiFormControlConfig {\\n    public formControlName? = \'\';\\n    public disabled? = false;\\n    public forceDisabled? = false;\\n    public label?: \'Test\'; // TODO: Is type supposed to be \'Test\'? Should it be string?\\n    public placeholder? = \'\';\\n    public type?: \'text\' | \'email\' | \'password\' = \'text\';\\n    public form?: any;\\n    public prefixIcon? = \'\';\\n    public suffixIcon? = \'\';\\n    public prefixText? = \'\';\\n    public suffixText? = \'\';\\n    public helpText? = \'\';\\n    public infoText? = \'\';\\n    public showHelpText? = true;\\n    public showSuccessValidation? = false;\\n    public showErrorValidation? = true;\\n    public showInfoIcon? = true;\\n    public patternErrorText? = \'patternErrorText\';\\n    public errorStrings? = {};\\n}\\n@Component({\\n    selector: \'ui-form-base\',\\n    templateUrl: \'./form-base.component.html\',\\n    styleUrls: [\'./form-base.component.scss\'],\\n})\\nexport class UiFormBaseComponent implements OnInit, OnDestroy {\\n    @ViewChild(\'actionBtnsRef\') public actionBtnsRef: TemplateRef<any>;\\n\\n    @Output() public formStatusChange = new EventEmitter<any>();\\n    @Output() public formClosed = new EventEmitter<any>();\\n    @Output() public formSubmitted = new EventEmitter<FormData>();\\n\\n    @Input(\'editMode\') public set editMode(value: boolean) {\\n        this._editMode = value;\\n        if (this._editMode === true) {\\n            this.enableAllInputs();\\n        } else {\\n            this.disableAllInputs();\\n        }\\n    }\\n\\n    public get editMode(): boolean {\\n        return this._editMode;\\n    }\\n\\n    public form: FormGroup;\\n    public payload: any = {};\\n\\n    public modeChanged = false;\\n    public formControls: { [name: string]: { value: any; validators: Validators; config?: UiFormControlConfig } };\\n\\n    public showSuccessValidation = false;\\n    public showErrorValidation = true;\\n    public showHelpText = true;\\n    public showInfoIcon = true;\\n\\n    public Validators = Validators;\\n\\n    protected _ngUnsubscribe = new Subject();\\n\\n    private _initialValues;\\n    private _editMode = false;\\n\\n    constructor() {}\\n\\n    public ngOnInit(): void {}\\n\\n    public ngOnDestroy(): void {\\n        this._ngUnsubscribe.next(null);\\n        this._ngUnsubscribe.complete();\\n    }\\n\\n    public createForm(formControls: { [name: string]: { value: any; validators: any; config?: UiFormControlConfig } }) {\\n        this.form = new FormGroup({});\\n        for (const [key, value] of Object.entries(formControls)) {\\n            const newControl = new FormControl(value.value, { validators: value.validators });\\n            this.form.setControl(key, newControl);\\n        }\\n        this.editMode = false;\\n    }\\n\\n    public setValues(FormValues: any) {\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.form.controls[key].setValue(FormValues[key]);\\n        });\\n    }\\n\\n    public viewForm() {\\n        this.editMode = false;\\n    }\\n\\n    public editForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.editMode = true;\\n    }\\n\\n    public clearForm() {\\n        this._initialValues = JSON.parse(JSON.stringify(this.form.value));\\n        this.form.reset();\\n        this.payload = {};\\n    }\\n\\n    public cancelForm() {\\n        this.form.reset(this._initialValues);\\n        this.payload = {};\\n        this.editMode = false;\\n    }\\n\\n    public closeForm() {\\n        this.editMode = false;\\n        this.formClosed.emit();\\n    }\\n\\n    public submitForm(): FormData {\\n        Object.keys(this.form.controls).forEach((key) => {\\n            this.payload[key] = this.form.controls[key].value;\\n        });\\n        this.editMode = false;\\n\\n        this.formSubmitted.emit(this.form.value);\\n\\n        return this.form.value;\\n    }\\n\\n    public onClearBtnClick() {\\n        this.clearForm();\\n    }\\n\\n    public onEditBtnClick() {\\n        this.editForm();\\n    }\\n\\n    public onCancelBtnClick() {\\n        this.cancelForm();\\n    }\\n\\n    public onCloseBtnClick() {\\n        this.closeForm();\\n    }\\n\\n    public onSaveBtnClick() {\\n        this.submitForm();\\n    }\\n\\n    public onFormOptionsChanged(e: { showInfoIcon: boolean; showHelpText: boolean }) {\\n        this.showInfoIcon = e.showInfoIcon;\\n        this.showHelpText = e.showHelpText;\\n    }\\n\\n    private disableAllInputs() {\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n                    this.form.controls[control].disable();\\n                }\\n            }\\n        }\\n    }\\n\\n    private enableAllInputs() {\\n        if (this.form !== undefined) {\\n            for (const control in this.form.controls) {\\n                if (this.form.controls.hasOwnProperty(control)) {\\n                    // Enable only the form controls that don\'t have forceDisabled\\n                    if (this.formControls[control].config !== undefined && this.formControls[control].config.forceDisabled !== undefined) {\\n                        if (this.formControls[control].config.forceDisabled === false) {\\n                            this.form.controls[control].enable();\\n                            this.form.controls[control].markAsUntouched();\\n                        }\\n                    } else {\\n                        this.form.controls[control].enable();\\n                        this.form.controls[control].markAsUntouched();\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":67},"implements":["OnInit","OnDestroy"],"accessors":{"editMode":{"name":"editMode","setSignature":{"name":"editMode","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":38,"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"editMode","type":"boolean","returnType":"boolean","line":47}}},"isDuplicate":true,"duplicateId":1,"duplicateName":"UiFormBaseComponent-1","templateData":"<p>Implement your form template in your extended component.</p>\\n"},{"name":"UiFormControlBaseComponent","id":"component-UiFormControlBaseComponent-61ef5ef87672bf050479b22a30ec88841d1c7607282865ecb1a3814186d1eb418f79c2bdbf73bb3d5fe76fecc0d851ebb3faea57b5b3b962f2a2b55549f192ba","file":"libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-control-base","styleUrls":["./form-control-base.component.scss"],"styles":[],"templateUrl":["./form-control-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[]},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>"}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121]},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121]},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Optional, Output, Self } from \'@angular/core\';\\nimport { ControlValueAccessor, NgControl, Validators } from \'@angular/forms\';\\nimport { Subscription } from \'rxjs\';\\nimport { UiFormBaseComponent } from \'../form-base/form-base.component\';\\n@Component({\\n    selector: \'ui-form-control-base\',\\n    templateUrl: \'./form-control-base.component.html\',\\n    styleUrls: [\'./form-control-base.component.scss\'],\\n})\\nexport class UiFormControlBaseComponent implements OnInit, OnDestroy, ControlValueAccessor {\\n    @Input(\'formControlName\') public formControlName;\\n    @Input() public id: string;\\n    @Input() public disabled: boolean;\\n    @Input() public forceDisabled = false;\\n    @Input() public label = \'\';\\n    @Input() public placeholder = \'\';\\n    @Input() public type: string;\\n    @Input() public form: any;\\n    @Input() public formComponent: UiFormBaseComponent;\\n    @Input() public prefixIcon = \'\';\\n    @Input() public suffixIcon = \'\';\\n    @Input() public prefixText = \'\';\\n    @Input() public suffixText = \'\';\\n    @Input() public helpText = \'\';\\n    @Input() public showHelpText = true;\\n    @Input() public showSuccessValidation = false;\\n    @Input() public showErrorValidation = true;\\n    @Input() public showInfoIcon = true;\\n    @Input() public infoText = \'\';\\n    @Input() public patternErrorText = \'\';\\n    @Input() public errorStrings = {};\\n\\n    @Input() public set config(config) {\\n        this._config = config;\\n\\n        // This fill this component properties with config values.\\n        if (config !== undefined) {\\n            for (const [key, value] of Object.entries(this._config)) {\\n                if (value !== null && value !== \'\') {\\n                    this[key] = value;\\n                }\\n            }\\n        }\\n    }\\n\\n    public get config() {\\n        return this._config;\\n    }\\n\\n    @Output() public valueChange: EventEmitter<any> = new EventEmitter<any>();\\n\\n    public value: any = \'\';\\n    public defaultErrorStrings = {};\\n    public Validators = Validators;\\n\\n    private _config: any;\\n    private _subscription: Subscription;\\n\\n    constructor(\\n        // Retrieve the dependency only from the local injector,\\n        // not from parent or ancestors.\\n        @Self()\\n        // We want to be able to use the component without a form,\\n        // so we mark the dependency as optional.\\n        @Optional()\\n        private ngControl: NgControl\\n    ) {\\n        if (this.ngControl) {\\n            this.ngControl.valueAccessor = this;\\n        }\\n    }\\n\\n    public ngOnInit() {\\n        if (this.formComponent !== undefined && this.formComponent.formControls[this.formControlName].config !== undefined) {\\n            this.config = this.formComponent.formControls[this.formControlName].config;\\n        }\\n\\n        if (this.form !== undefined) {\\n            this._subscription = this.form.controls[this.formControlName].valueChanges.subscribe((e: any) => {\\n                this.form.controls[this.formControlName].setValue(e, { emitEvent: false });\\n            });\\n        }\\n\\n        this.defaultErrorStrings = {\\n            minlength: {\\n                stringCode: \'COMMON.MIN_LENGTH_OF\',\\n            },\\n            maxlength: {\\n                stringCode: \'COMMON.MAX_LENGTH_OF\',\\n            },\\n            required: {\\n                stringCode: \'COMMON.FIELD_IS_REQUIRED\',\\n            },\\n            email: {\\n                stringCode: \'COMMON.ENTER_VALID_EMAIL\',\\n            },\\n            pattern: {\\n                stringCode: this.patternErrorText,\\n            },\\n        };\\n\\n        this.setErrorString();\\n    }\\n\\n    public setErrorString() {\\n        if (this.form !== undefined && this.form.controls[this.formControlName].errors !== null) {\\n            this.errorStrings = this.defaultErrorStrings;\\n\\n            // If component have config with errorStrings from parent.\\n            if (this.config !== undefined && this.config.errorStrings !== undefined) {\\n                // Merge defaultErrorStrings with provided errorStrings\\n                this.errorStrings = { ...this.defaultErrorStrings, ...this.config.errorStrings };\\n            }\\n        }\\n    }\\n\\n    public ngOnDestroy() {\\n        this._subscription?.unsubscribe();\\n    }\\n\\n    /**\\n     * Write form value to the DOM element (model => view)\\n     */\\n    public writeValue(value: any): void {\\n        this.value = value;\\n        this.setErrorString();\\n    }\\n\\n    /**\\n     * Write form disabled state to the DOM element (model => view)\\n     */\\n    public setDisabledState(isDisabled: boolean): void {\\n        this.disabled = isDisabled;\\n    }\\n\\n    /**\\n     * Update form when DOM element value changes (view => model)\\n     */\\n    public registerOnChange(fn: any): void {\\n        // Store the provided function as an internal method.\\n\\n        this.onChange = fn;\\n    }\\n\\n    /**\\n     * Update form when DOM element is blurred (view => model)\\n     */\\n    public registerOnTouched(fn: any): void {\\n        // Store the provided function as an internal method.\\n        this.onTouched = fn;\\n    }\\n\\n    public onChange(e: any) {}\\n    public onTouched() {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-control-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""}],"line":57,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","ControlValueAccessor"],"accessors":{"config":{"name":"config","setSignature":{"name":"config","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"config","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":33,"jsdoctags":[{"name":"config","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"config","type":"","returnType":"","line":46}}},"templateData":"<div *ngIf=\\"form !== undefined\\">\\n\\n    \x3c!-- Label --\x3e\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\n        {{label}}\\n        \x3c!-- Required Asterix --\x3e\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\n    </label>\\n\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\n\\n    <div class=\\"input-group\\">\\n\\n        \x3c!-- Prefix Icon --\x3e\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Prefix Text --\x3e\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{prefixText}}\\n        </span>\\n\\n        <div #contentWrapper class=\\"w-100\\">\\n            <ng-content></ng-content>\\n        </div>\\n\\n        \x3c!-- Suffix Icon --\x3e\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Suffix Text --\x3e\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{suffixText}}\\n        </span>\\n\\n    </div>\\n\\n    <div class=\\"feedback\\">\\n\\n        \x3c!-- Success Feedback Text --\x3e\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\n        </div>\\n\\n        \x3c!-- Error Feedback Text --\x3e\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\n            <div *ngFor=\\"let item of form.controls[formControlName].errors | keyvalue\\">\\n                \x3c!-- If errorString have NO parameters --\x3e\\n                <ng-container *ngIf=\\"defaultErrorStrings[item.key] !== undefined && defaultErrorStrings[item.key].stringParams === undefined\\">\\n                    {{errorStrings[item.key].stringCode | translate: form.controls[formControlName].errors[item.key] }}\\n                </ng-container>\\n                \x3c!-- If errorString HAVE parameters --\x3e\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams !== undefined\\">\\n                 {{errorStrings[item.key].stringCode | translate: concatErrors(form.controls[formControlName].errors[item.key], errorStrings[item.key].stringParams) }}\\n                </ng-container>\\n            </div>\\n        </div>\\n\\n        \x3c!-- Help Text --\x3e\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiFormControlBaseComponent","id":"component-UiFormControlBaseComponent-ed9d900f396ef491d8a34902a246fd04ae151b1faedfa4ff2786ef17fe8b0911a0cbc9d4bb263bca2319051fc88a3792e4e420423a415b27c0fd9d6f040fcdcc-1","file":"libs/ui/src/lib/modules/form/form-control-base/form-control-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-form-control-base","styleUrls":["./form-control-base.component.scss"],"styles":[],"templateUrl":["./form-control-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":36,"type":"any","decorators":[]},{"name":"content","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[]},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[]},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[]},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"setValueOnChange","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[]},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"tag","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[]},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":53,"type":"EventEmitter<any>"}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":59,"modifierKind":[121]},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":60,"modifierKind":[121]},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123]}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"object","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":162,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Optional, Output, Self } from \'@angular/core\';\\nimport { ControlValueAccessor, NgControl, Validators } from \'@angular/forms\';\\nimport { Subscription } from \'rxjs\';\\nimport { UiFormBaseComponent } from \'../form-base/form-base.component\';\\n@Component({\\n    selector: \'ui-form-control-base\',\\n    templateUrl: \'./form-control-base.component.html\',\\n    styleUrls: [\'./form-control-base.component.scss\'],\\n})\\nexport class UiFormControlBaseComponent implements OnInit, OnDestroy, ControlValueAccessor {\\n    @Input(\'formControlName\') public formControlName;\\n    @Input() public id: string;\\n    @Input() public disabled: boolean;\\n    @Input() public forceDisabled = false;\\n    @Input() public label = \'\';\\n    @Input() public placeholder = \'\';\\n    @Input() public type: string;\\n    @Input() public form: any;\\n    @Input() public formComponent: UiFormBaseComponent;\\n    @Input() public prefixIcon = \'\';\\n    @Input() public suffixIcon = \'\';\\n    @Input() public prefixText = \'\';\\n    @Input() public suffixText = \'\';\\n    @Input() public helpText = \'\';\\n    @Input() public showHelpText = true;\\n    @Input() public showSuccessValidation = false;\\n    @Input() public showErrorValidation = true;\\n    @Input() public showInfoIcon = true;\\n    @Input() public infoText = \'\';\\n    @Input() public patternErrorText = \'\';\\n    @Input() public errorStrings = {};\\n    @Input() public content;\\n    @Input() public tag;\\n    @Input() public setValueOnChange = true;\\n\\n    @Input() public set config(config) {\\n        this._config = config;\\n\\n        // This fill this component properties with config values.\\n        if (config !== undefined) {\\n            for (const [key, value] of Object.entries(this._config)) {\\n                if (value !== null && value !== \'\') {\\n                    this[key] = value;\\n                }\\n            }\\n        }\\n    }\\n\\n    public get config() {\\n        return this._config;\\n    }\\n\\n    @Output() public valueChange: EventEmitter<any> = new EventEmitter<any>();\\n\\n    public value: any = \'\';\\n    public defaultErrorStrings = {};\\n    public Validators = Validators;\\n\\n    private _config: any;\\n    private _subscription: Subscription;\\n\\n    constructor(\\n        // Retrieve the dependency only from the local injector,\\n        // not from parent or ancestors.\\n        @Self()\\n        // We want to be able to use the component without a form,\\n        // so we mark the dependency as optional.\\n        @Optional()\\n        private ngControl: NgControl\\n    ) {\\n        if (this.ngControl) {\\n            this.ngControl.valueAccessor = this;\\n        }\\n    }\\n\\n    public ngOnInit() {\\n        if (this.formComponent !== undefined && this.formComponent.formControls[this.formControlName].config !== undefined) {\\n            this.config = this.formComponent.formControls[this.formControlName].config;\\n        }\\n\\n        if (this.form !== undefined) {\\n            this._subscription = this.form.controls[this.formControlName].valueChanges.subscribe((e: any) => {\\n                if (this.setValueOnChange) {\\n                    this.form.controls[this.formControlName].setValue(e, { emitEvent: false });\\n                }\\n            });\\n        }\\n\\n        this.defaultErrorStrings = {\\n            minlength: {\\n                stringCode: \'COMMON.MIN_LENGTH_OF\',\\n            },\\n            maxlength: {\\n                stringCode: \'COMMON.MAX_LENGTH_OF\',\\n            },\\n            min: {\\n                stringCode: \'COMMON.MIN_VALUE_OF\',\\n            },\\n            max: {\\n                stringCode: \'COMMON.MAX_VALUE_OF\',\\n            },\\n            required: {\\n                stringCode: \'COMMON.FIELD_IS_REQUIRED\',\\n            },\\n            email: {\\n                stringCode: \'COMMON.ENTER_VALID_EMAIL\',\\n            },\\n            pattern: {\\n                stringCode: this.patternErrorText,\\n            },\\n        };\\n\\n        this.setErrorString();\\n    }\\n\\n    public setErrorString() {\\n        this.errorStrings = { ...this.defaultErrorStrings, ...this.errorStrings };\\n        if (this.form !== undefined && this.form.controls[this.formControlName].errors !== null) {\\n            // If component have config with errorStrings from parent.\\n            if (this.config !== undefined && this.config.errorStrings !== undefined) {\\n                // Merge defaultErrorStrings with provided errorStrings\\n                this.errorStrings = { ...this.errorStrings, ...this.config.errorStrings };\\n            }\\n        }\\n    }\\n\\n    public ngOnDestroy() {\\n        this._subscription?.unsubscribe();\\n    }\\n\\n    /**\\n     * Write form value to the DOM element (model => view)\\n     */\\n    public writeValue(value: any): void {\\n        this.value = value;\\n        this.setErrorString();\\n    }\\n\\n    /**\\n     * Write form disabled state to the DOM element (model => view)\\n     */\\n    public setDisabledState(isDisabled: boolean): void {\\n        this.disabled = isDisabled;\\n    }\\n\\n    /**\\n     * Update form when DOM element value changes (view => model)\\n     */\\n    public registerOnChange(fn: any): void {\\n        // Store the provided function as an internal method.\\n        this.onChange = fn;\\n    }\\n\\n    /**\\n     * Update form when DOM element is blurred (view => model)\\n     */\\n    public registerOnTouched(fn: any): void {\\n        // Store the provided function as an internal method.\\n        this.onTouched = fn;\\n    }\\n\\n    public onChange(e: any) {}\\n    public onTouched() {}\\n\\n    public concatErrors(arr1: object, arr2: object) {\\n        if (!arr1) {\\n            return arr2;\\n        }\\n        if (!arr2) {\\n            return arr1;\\n        }\\n        return { ...arr1, ...arr2 };\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-control-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""}],"line":60,"jsdoctags":[{"name":"ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","ControlValueAccessor"],"accessors":{"config":{"name":"config","setSignature":{"name":"config","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"config","type":"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":36,"jsdoctags":[{"name":"config","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"config","type":"","returnType":"","line":49}}},"isDuplicate":true,"duplicateId":1,"duplicateName":"UiFormControlBaseComponent-1","templateData":"<div *ngIf=\\"form !== undefined\\">\\n\\n    \x3c!-- Label --\x3e\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\n        {{label}}\\n        \x3c!-- Required Asterix --\x3e\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\n    </label>\\n\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\n\\n    <div class=\\"input-group\\">\\n\\n        \x3c!-- Prefix Icon --\x3e\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Prefix Text --\x3e\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{prefixText}}\\n        </span>\\n\\n        <div #contentWrapper class=\\"w-100\\">\\n            <ng-content></ng-content>\\n        </div>\\n\\n        \x3c!-- Suffix Icon --\x3e\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Suffix Text --\x3e\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{suffixText}}\\n        </span>\\n\\n    </div>\\n\\n    <div class=\\"feedback\\">\\n\\n        \x3c!-- Success Feedback Text --\x3e\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\n        </div>\\n\\n        \x3c!-- Error Feedback Text --\x3e\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\n            <div *ngFor=\\"let item of form.controls[formControlName].errors | keyvalue\\">\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined\\">\\n                    {{errorStrings[item.key].stringCode | translate: concatErrors(errorStrings[item.key].stringParams, form.controls[formControlName].errors[item.key]) }} \\n                </ng-container>\\n            </div>\\n        </div>\\n\\n        \x3c!-- Help Text --\x3e\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\n        </div>\\n    </div>\\n</div>"},{"name":"UiGlobalSearchComponent","id":"component-UiGlobalSearchComponent-abb66fdf260e4e686aa8f798c9471084d12724e335dfa943b78312faa93674ee97204d7f1a6d9cc7edcae1cfa79a118fae5733c960a13a0f6e5a2ffca33819ea","file":"libs/ui/src/lib/modules/global-search/global-search.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-global-search","styleUrls":["./global-search.component.scss"],"styles":[],"templateUrl":["./global-search.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_debounceTime","defaultValue":"300","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30,"modifierKind":[121,144]},{"name":"_globalSearchInput","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":29,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'globalSearchInput\', {static: true}"}],"modifierKind":[121]},{"name":"_minSearchSymbols","defaultValue":"2","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32,"modifierKind":[121,144]},{"name":"_ngUnsubscribe$","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":33,"modifierKind":[121,144]},{"name":"_resultsUrl","defaultValue":"\'acp/company-search/results\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31,"modifierKind":[121,144]},{"name":"focus$","defaultValue":"new Subject<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"inputFormatterFn","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72,"modifierKind":[123]},{"name":"isSearchFocused","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"noResultSearch","defaultValue":"{\\n        noResultsFound: this._translateService.instant(\'GLOBAL_SEARCH.NO_RESULTS_FOUND\'),\\n        tryDifferentKeyword: this._translateService.instant(\'GLOBAL_SEARCH.TRY_DIFFERENT_KEYWORD\'),\\n    }","deprecated":false,"deprecationMessage":"","type":"IUiNoResultSearch","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"searchFn","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"searchPlaceholder","defaultValue":"this._translateService.instant(\'COMMON.SEARCH_FOR_A_COMPANY\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"searchTerm","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21,"modifierKind":[123]}],"methodsClass":[{"name":"clearSearchTerm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"hideSearchFocus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEnterPress","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelect","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openCompanyTab","args":[{"name":"companyId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"companyId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showSearchFocus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n// Rxjs\\nimport { merge, Observable, of, Subject } from \'rxjs\';\\nimport { catchError, debounceTime, distinctUntilChanged, filter, map, skip, switchMap, takeUntil } from \'rxjs/operators\';\\n// Ngx Translate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Interfaces\\nimport { IUiCompanySearchResponse, IUiNoResultSearch } from \'@lib/modules/global-search/interfaces\';\\n// Services\\nimport { UiSearchService } from \'@lib/modules/global-search/services\';\\n\\n@Component({\\n    selector: \'ui-global-search\',\\n    templateUrl: \'./global-search.component.html\',\\n    styleUrls: [\'./global-search.component.scss\'],\\n})\\nexport class UiGlobalSearchComponent implements OnInit, OnDestroy {\\n    public isSearchFocused = false;\\n    public searchTerm = \'\';\\n    public noResultSearch: IUiNoResultSearch = {\\n        noResultsFound: this._translateService.instant(\'GLOBAL_SEARCH.NO_RESULTS_FOUND\'),\\n        tryDifferentKeyword: this._translateService.instant(\'GLOBAL_SEARCH.TRY_DIFFERENT_KEYWORD\'),\\n    };\\n    public searchPlaceholder = this._translateService.instant(\'COMMON.SEARCH_FOR_A_COMPANY\');\\n    public focus$ = new Subject<string>();\\n\\n    @ViewChild(\'globalSearchInput\', { static: true }) private _globalSearchInput: ElementRef;\\n    private readonly _debounceTime: number = 300;\\n    private readonly _resultsUrl = \'acp/company-search/results\';\\n    private readonly _minSearchSymbols = 2;\\n    private readonly _ngUnsubscribe$: Subject<void> = new Subject<void>();\\n\\n    constructor(private _searchService: UiSearchService, private _translateService: TranslateService, private _router: Router) {}\\n\\n    public ngOnInit() {\\n        this._searchService.focusGlobalSearch$\\n            .pipe(debounceTime(this._debounceTime), skip(1), takeUntil(this._ngUnsubscribe$))\\n            .subscribe(() => {\\n                this._globalSearchInput.nativeElement.focus();\\n            });\\n    }\\n\\n    public ngOnDestroy() {\\n        this._ngUnsubscribe$.next(null);\\n        this._ngUnsubscribe$.complete();\\n    }\\n\\n    public searchFn = (input$: Observable<string>) => {\\n        const debouncedText$ = input$.pipe(debounceTime(this._debounceTime), distinctUntilChanged());\\n        const inputFocus$ = this.focus$;\\n\\n        return merge(debouncedText$, inputFocus$).pipe(\\n            filter((searchStr: string) => {\\n                return searchStr.length >= this._minSearchSymbols;\\n            }),\\n            switchMap((searchStr: string) =>\\n                this._searchService.getCompaniesBySearchTerm(searchStr).pipe(\\n                    map((res: IUiCompanySearchResponse) => {\\n                        const searchResult = res.companySearchResult;\\n                        return searchResult.length ? searchResult : [this.noResultSearch];\\n                    }),\\n                    catchError(() => {\\n                        return of([this.noResultSearch]);\\n                    })\\n                )\\n            )\\n        );\\n    };\\n\\n    public inputFormatterFn = () => {\\n        return this.searchTerm;\\n    };\\n\\n    public clearSearchTerm() {\\n        this.searchTerm = \'\';\\n    }\\n\\n    public showSearchFocus() {\\n        this.isSearchFocused = true;\\n    }\\n\\n    public hideSearchFocus() {\\n        this.isSearchFocused = false;\\n    }\\n\\n    public openCompanyTab(companyId: number) {\\n        this._router.navigateByUrl(`/acp/company-profile/company/${companyId}`);\\n    }\\n\\n    public onEnterPress() {\\n        if (this.searchTerm.length < this._minSearchSymbols) {\\n            return;\\n        }\\n\\n        this._router.navigate([this._resultsUrl]);\\n        this._searchService.setSearchTerm(this.searchTerm);\\n    }\\n\\n    public onSelect(event: Event) {\\n        // We don\'t want to change the input value with selected item\\n        // Prevents searchTerm value to be converted from string to IUiCompanySearchItem or IUiNoResultSearch\\n        event.preventDefault();\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\n\\n.search-input-icon {\\n    background-color: $white;\\n    border-style: none;\\n    color: $gray-600;\\n    z-index: 1001;\\n}\\n\\n.domain-result {\\n    color: $gray-700;\\n}\\n\\n.company-icon {\\n    color: $gray-600;\\n    width: 16px;\\n    height: 16px;\\n}\\n\\n#globalSearch-input {\\n    border-style: none;\\n    height: 40px;\\n    z-index: 1001;\\n}\\n\\n.search-field {\\n    transition: width 300ms;\\n}\\n\\n.search-field-focused {\\n    border: 1px $primary !important;\\n    box-shadow: 0px 0px 0px 2px $primary-200;\\n}\\n\\n@media only screen and (max-width: 449px) {\\n    #globalSearch-input {\\n        margin-left: 5px;\\n    }\\n\\n    .search-field {\\n        width: 235px;\\n    }\\n\\n    .search-field-wider {\\n        width: 235px;\\n    }\\n\\n    .search-icon {\\n        display: none;\\n    }\\n}\\n\\n@media only screen and (min-width: 450px) {\\n    .search-field {\\n        width: 384px;\\n    }\\n\\n    .search-field-wider {\\n        width: 384px;\\n    }\\n}\\n\\n@media only screen and (min-width: 600px) {\\n    .search-field {\\n        width: 384px;\\n    }\\n\\n    .search-field-wider {\\n        width: 512px;\\n    }\\n}","styleUrl":"./global-search.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"templateData":"<div\\n    class=\\"input-group search-field ms-1 border rounded justify-content-between\\"\\n    [ngClass]=\\"{\\n        \'search-field-focused\': isSearchFocused,\\n        \'search-field-opened-results\': isSearchFocused && instance.isPopupOpen(),\\n        \'search-field-wider\': isSearchFocused || searchTerm\\n    }\\"\\n>\\n    <span class=\\"input-group-text search-input-icon\\">\\n        <i class=\\"bi bi-search bi-md\\" aria-hidden=\\"true\\"></i>\\n    </span>\\n\\n    <input\\n        autocomplete=\\"off\\"\\n        class=\\"flex-grow-1\\"\\n        id=\\"globalSearch-input\\"\\n        [placeholder]=\\"searchPlaceholder\\"\\n        type=\\"text\\"\\n        [(ngModel)]=\\"searchTerm\\"\\n        (focus)=\\"focus$.next($any($event).target.value); showSearchFocus()\\"\\n        (focusout)=\\"hideSearchFocus()\\"\\n        [ngbTypeahead]=\\"searchFn\\"\\n        [resultTemplate]=\\"rt\\"\\n        [inputFormatter]=\\"inputFormatterFn\\"\\n        placement=\\"bottom-left\\"\\n        #instance=\\"ngbTypeahead\\"\\n        #globalSearchInput\\n        (keydown.enter)=\\"onEnterPress()\\"\\n        (selectItem)=\\"onSelect($event)\\"\\n    />\\n    <span class=\\"input-group-text search-input-icon\\" [style.visibility]=\\"searchTerm ? \'visible\' : \'hidden\'\\" (click)=\\"clearSearchTerm()\\">\\n        <i class=\\"bi bi-x bi-lg\\" aria-hidden=\\"true\\"></i>\\n    </span>\\n</div>\\n<ng-template #rt let-r=\\"result\\" let-t=\\"term\\">\\n    <div *ngIf=\\"r.companyId\\" class=\\"d-flex align-items-center\\" (click)=\\"openCompanyTab(r.companyId)\\">\\n        <i class=\\"bi bi-briefcase-fill bi-md me-2 company-icon\\" aria-hidden=\\"true\\"></i>\\n        <div class=\\"d-inline-block\\">\\n            <ngb-highlight class=\\"d-block\\" [result]=\\"r.companyName\\" [term]=\\"t\\"></ngb-highlight>\\n            <small class=\\"d-block domain-result\\">\\n                \x3c!-- ToDo should use Pipe --\x3e\\n                <ngb-highlight [result]=\\"r.domainNames.join(\', \')\\" [term]=\\"t\\"></ngb-highlight>\\n            </small>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\"!r.companyId\\">\\n        <b><ngb-highlight [result]=\\"r.noResultsFound\\"></ngb-highlight></b>\\n        <ngb-highlight [result]=\\"r.tryDifferentKeyword\\"></ngb-highlight>\\n    </div>\\n</ng-template>\\n"},{"name":"UiGlobalSearchResultsItemComponent","id":"component-UiGlobalSearchResultsItemComponent-b504bc822055d0936943902018da1bff698a891356e91cb985032d209a57dc5f4ef630f3634e5dae8ec953d0d1358113d63f5d623c582cd355c34f45810e6661","file":"libs/ui/src/lib/modules/global-search/components/global-search-results-item/global-search-results-item.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-global-search-results-item","styleUrls":["./global-search-results-item.component.scss"],"styles":[],"templateUrl":["global-search-results-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"item","deprecated":false,"deprecationMessage":"","line":13,"type":"IUiCompanySearchItem","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onItemClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n// Interfaces\\nimport { IUiCompanySearchItem } from \'@lib/modules/global-search/interfaces\';\\n\\n@Component({\\n    selector: \'ui-global-search-results-item\',\\n    templateUrl: \'global-search-results-item.component.html\',\\n    styleUrls: [\'./global-search-results-item.component.scss\'],\\n})\\nexport class UiGlobalSearchResultsItemComponent {\\n    @Input() public item: IUiCompanySearchItem;\\n\\n    constructor(private _router: Router) {}\\n\\n    public onItemClick() {\\n        this._router.navigate([`acp/company-profile/company/${this.item.companyId}`]);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.item-container {\\n    background: $white;\\n    border-bottom: 1px solid $gray-300;\\n    // Virtual scroll requires item height in pixels\\n    padding-bottom: 32px;\\n    padding-top: 32px;\\n\\n    &:hover {\\n        background: $blue-200;\\n        color: $gray-900;\\n        cursor: pointer;\\n    }\\n}\\n\\n.company-info {\\n    flex: 1;\\n    width: 1rem;\\n}\\n\\n.logo-container {\\n    background: $blue-300;\\n    border-radius: 4px;\\n    height: 96px;\\n    width: 173px;\\n}\\n\\n.base-info {\\n    margin: 0;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n}\\n\\n.subsidiary {\\n    @extend .base-info;\\n    color: $gray-900;\\n    font-size: 16px;\\n}\\n\\n.additional-info {\\n    @extend .base-info;\\n    color: $gray-800;\\n}\\n","styleUrl":"./global-search-results-item.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div  class=\\"row justify-content-start px-5 item-container\\" (click)=\\"onItemClick()\\">\\n    <div class=\\"col-12\\">\\n        <div class=\\"row\\">\\n            <div class=\\"logo-container\\">\\n                <img src=\\"assets/images/search-result-placeholder.svg\\" alt=\\"Company Logo\\" class=\\"h-100 w-100\\">\\n            </div>\\n            <div class=\\"ps-3 company-info\\" *ngIf=\\"item\\">\\n                <h6 class=\\"fw-bold\\">{{ item.companyName }}</h6>\\n                <p class=\\"subsidiary\\">\\n                    <span *ngIf=\\"item.rootCompanyName; then subsidiary else emptySubsidiary\\"></span>\\n                    <ng-template #subsidiary>{{ \'COMMON.SUBSIDIARY_TO\' | translate }} {{ item.rootCompanyName }}</ng-template>\\n                    <ng-template #emptySubsidiary>&nbsp;</ng-template>\\n                </p>\\n                <p class=\\"additional-info\\">\\n                    <span *ngIf=\\"item.domainNames.length; then domains else emptyDomains\\"></span>\\n                    <ng-template #domains>{{ item.domainNames | uiJoin}}</ng-template>\\n                    <ng-template #emptyDomains>{{ \'GLOBAL_SEARCH.NO_DOMAINS_FOUND\' | translate }}</ng-template>\\n                </p>\\n                <p class=\\"additional-info\\">\\n                    <span *ngIf=\\"item.companyTradeNames.length; then tradeNames else emptyTradeNames\\"></span>\\n                    <ng-template #tradeNames>{{ item.companyTradeNames | uiJoin}}</ng-template>\\n                    <ng-template #emptyTradeNames>{{ \'GLOBAL_SEARCH.NO_TRADENAMES_FOUND\' | translate }}</ng-template>\\n                </p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiGlobalSearchResultsPageComponent","id":"component-UiGlobalSearchResultsPageComponent-c24d256c84f0096a63c2193092e62589c533e715bd452518ab2300d1d3d02bb5376bdf79d9c49070c282cb8f09b9ee1fe5c036ec5b54ac3a07385c650bb0b1e8","file":"libs/ui/src/lib/modules/global-search/components/global-search-results-page/global-search-results-page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-global-search-results-page","styleUrls":["./global-search-results-page.component.scss"],"styles":[],"templateUrl":["global-search-results-page.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_debounceTime","defaultValue":"300","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38,"modifierKind":[121,144]},{"name":"_ngUnsubscribe","defaultValue":"new Subject<void>()","deprecated":false,"deprecationMessage":"","type":"Subject<void>","optional":false,"description":"","line":39,"modifierKind":[121,144]},{"name":"_pageNumber","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36,"modifierKind":[121]},{"name":"_pageSize","defaultValue":"10","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":37,"modifierKind":[121,144]},{"name":"_successfulSearchTerm","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35,"modifierKind":[121]},{"name":"_virtualScroll","deprecated":false,"deprecationMessage":"","type":"CdkVirtualScrollViewport","optional":false,"description":"","line":34,"decorators":[{"name":"ViewChild","stringifiedArguments":"CdkVirtualScrollViewport"}],"modifierKind":[121]},{"name":"editSearchLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"editSearchSuggestionLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"loading$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"noResultsLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"resultsCount$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"searchResults","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiCompanySearchItem[]","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"searchResultsLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29,"modifierKind":[123]},{"name":"searchTerm$","deprecated":false,"deprecationMessage":"","type":"Observable<string>","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"templateName$","deprecated":false,"deprecationMessage":"","type":"Observable<UiTemplateNamesEnum>","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"templateNames","defaultValue":"UiTemplateNamesEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onEditSearchClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"setNoResults","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"setResponseResults","args":[{"name":"res","type":"IUiCompanySearchResponse","deprecated":false,"deprecationMessage":""},{"name":"currentSearchTerm","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"res","type":"IUiCompanySearchResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"currentSearchTerm","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setTemplateName","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[121]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\nimport { CdkVirtualScrollViewport, ScrollDispatcher } from \'@angular/cdk/scrolling\';\\n// RxJS\\nimport { BehaviorSubject, combineLatest, Observable, Subject } from \'rxjs\';\\nimport { debounceTime, distinctUntilChanged, filter, finalize, map, switchMap, takeUntil, withLatestFrom } from \'rxjs/operators\';\\n// Services\\nimport { UiSearchService } from \'@lib/modules/global-search/services\';\\n// Enums\\nimport { UiTemplateNamesEnum } from \'@lib/modules/global-search/enums\';\\n// Interfaces\\nimport { IUiCompanySearchResponse, IUiCompanySearchItem } from \'@lib/modules/global-search/interfaces\';\\n\\n@Component({\\n    selector: \'ui-global-search-results-page\',\\n    templateUrl: \'global-search-results-page.component.html\',\\n    styleUrls: [\'./global-search-results-page.component.scss\'],\\n})\\nexport class UiGlobalSearchResultsPageComponent implements OnInit, OnDestroy, AfterViewInit {\\n    // Data\\n    public searchTerm$: Observable<string>;\\n    public searchResults: IUiCompanySearchItem[] = [];\\n    public resultsCount$: BehaviorSubject<number> = new BehaviorSubject(0);\\n    public loading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n    // Templates\\n    public templateName$: Observable<UiTemplateNamesEnum>;\\n    public templateNames = UiTemplateNamesEnum;\\n    // Text Labels\\n    public searchResultsLabel = \'\';\\n    public noResultsLabel = \'\';\\n    public editSearchLabel = \'\';\\n    public editSearchSuggestionLabel = \'\';\\n\\n    @ViewChild(CdkVirtualScrollViewport) private _virtualScroll: CdkVirtualScrollViewport;\\n    private _successfulSearchTerm = \'\';\\n    private _pageNumber = 1;\\n    private readonly _pageSize = 10;\\n    private readonly _debounceTime: number = 300;\\n    private readonly _ngUnsubscribe: Subject<void> = new Subject<void>();\\n\\n    constructor(\\n        private _searchService: UiSearchService,\\n        private _scrollDispatcher: ScrollDispatcher,\\n        private _changeDetectorRef: ChangeDetectorRef\\n    ) {}\\n\\n    public ngOnInit() {\\n        this.searchTerm$ = this._searchService.searchTerm$;\\n\\n        this.setData();\\n        this.setTemplateName();\\n    }\\n\\n    public ngOnDestroy() {\\n        this._ngUnsubscribe.next(null);\\n        this._ngUnsubscribe.complete();\\n    }\\n\\n    public ngAfterViewInit() {\\n        let loadingNextPage = false;\\n        this._scrollDispatcher\\n            .scrolled()\\n            .pipe(\\n                withLatestFrom(this.resultsCount$),\\n                filter(([event, resultsCount]) => {\\n                    const renderedRangeEnd = this._virtualScroll.getRenderedRange().end;\\n                    return renderedRangeEnd === this._virtualScroll.getDataLength() && renderedRangeEnd < resultsCount && !loadingNextPage;\\n                }),\\n                switchMap(() => {\\n                    this._pageNumber++;\\n                    loadingNextPage = true;\\n                    return this._searchService.getCompaniesBySearchTerm(this._successfulSearchTerm, this._pageSize, this._pageNumber);\\n                }),\\n                finalize(() => {\\n                    this.setNoResults();\\n                }),\\n                takeUntil(this._ngUnsubscribe)\\n            )\\n            .subscribe((data) => {\\n                this.searchResults = [...this.searchResults, ...data.companySearchResult];\\n                loadingNextPage = false;\\n                this._changeDetectorRef.detectChanges();\\n            });\\n    }\\n\\n    public onEditSearchClick() {\\n        this._searchService.focusGlobalSearchInput();\\n    }\\n\\n    private setData() {\\n        let currentSearchTerm: string;\\n        this.searchTerm$\\n            .pipe(\\n                debounceTime(this._debounceTime),\\n                distinctUntilChanged(),\\n                switchMap((term: string) => {\\n                    currentSearchTerm = term;\\n                    this._pageNumber = 1;\\n                    if (this.searchResults.length) {\\n                        this._virtualScroll.scrollToIndex(0);\\n                    }\\n                    this.searchResults = [];\\n                    this.resultsCount$.next(0);\\n                    this.loading$.next(true);\\n                    return this._searchService.getCompaniesBySearchTerm(term, this._pageSize, this._pageNumber);\\n                }),\\n                finalize(() => {\\n                    this.setNoResults();\\n                }),\\n                takeUntil(this._ngUnsubscribe)\\n            )\\n            .subscribe((res: IUiCompanySearchResponse) => {\\n                this.setResponseResults(res, currentSearchTerm);\\n            });\\n    }\\n\\n    private setTemplateName() {\\n        this.templateName$ = combineLatest([this.loading$, this.resultsCount$]).pipe(\\n            map(([loading, count]) => {\\n                let template = UiTemplateNamesEnum.noResults;\\n                if (loading) {\\n                    template = UiTemplateNamesEnum.loading;\\n                } else if (count) {\\n                    template = UiTemplateNamesEnum.results;\\n                }\\n\\n                return template;\\n            })\\n        );\\n    }\\n\\n    private setResponseResults(res: IUiCompanySearchResponse, currentSearchTerm: string) {\\n        this._successfulSearchTerm = res.totalCount ? currentSearchTerm : this._successfulSearchTerm;\\n        this.searchResults = res.companySearchResult;\\n        this.resultsCount$.next(res.totalCount);\\n        this.loading$.next(false);\\n    }\\n\\n    private setNoResults() {\\n        this.searchResults = [];\\n        this.resultsCount$.next(0);\\n        this.loading$.next(false);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.no-results-icon {\\n    color: $gray-700;\\n    font-size: 64px;\\n    padding-top: 4rem;\\n}\\n\\n.loading-icon {\\n    height: 100px;\\n    width: 100px;\\n}\\n\\n.loading-icon-container {\\n    padding-top: 6rem;\\n    position: relative;\\n}\\n\\n.virtual-scroll-viewport {\\n    // The the whole view height minus heights of the toolbar and search results label\\n    height: calc(100vh - 3rem - 82px);\\n    width: 100%;\\n}\\n","styleUrl":"./global-search-results-page.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":""},{"name":"_scrollDispatcher","type":"ScrollDispatcher","deprecated":false,"deprecationMessage":""},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":39,"jsdoctags":[{"name":"_searchService","type":"UiSearchService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_scrollDispatcher","type":"ScrollDispatcher","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","AfterViewInit"],"templateData":"<div [ngSwitch]=\\"templateName$ | async\\" class=\\"row align-items-center justify-content-center\\">\\n    \x3c!-- Loading Template --\x3e\\n    <div *ngSwitchCase=\\"templateNames.loading\\" class=\\"col-12\\">\\n        <div class=\\"spinner-wrapper loading-icon-container\\">\\n            <div class=\\"spinner-border text-primary loading-icon\\"></div>\\n        </div>\\n    </div>\\n    \x3c!-- Results Template --\x3e\\n    <div *ngSwitchCase=\\"templateNames.results\\" class=\\"col-12\\">\\n        <h6 class=\\"mb-4\\">\\n            {{ resultsCount$ | async }} {{ \'GLOBAL_SEARCH.SEARCH_RESULTS_FOR\' | translate }} &quot;{{ searchTerm$ | async }}&quot;\\n        </h6>\\n        <cdk-virtual-scroll-viewport itemSize=\\"163\\" class=\\"virtual-scroll-viewport\\">\\n            <div *cdkVirtualFor=\\"let item of searchResults\\">\\n                <ui-global-search-results-item [item]=\\"item\\"></ui-global-search-results-item>\\n            </div>\\n        </cdk-virtual-scroll-viewport>\\n    </div>\\n    \x3c!-- No Results Template --\x3e\\n    <div *ngSwitchCase=\\"templateNames.noResults\\" class=\\"col-12 text-center\\">\\n        <div class=\\"pb-5 no-results-icon\\">\\n            <i class=\\"bi bi-search bi-lg\\" aria-hidden=\\"true\\"></i>\\n        </div>\\n\\n        <h6 class=\\"fw-bold\\">\\n            {{ \'GLOBAL_SEARCH.NO_RESULTS_FOR\' | translate }} &quot;{{ searchTerm$ | async }}&quot;.\\n        </h6>\\n        <h6>\\n            {{ \'GLOBAL_SEARCH.EDIT_SEARCH_SUGGESTION\' | translate }}\\n        </h6>\\n        <button class=\\"btn btn-primary mt-4\\" (click)=\\"onEditSearchClick()\\">\\n            {{ \'GLOBAL_SEARCH.EDIT_SEARCH\' | translate }}\\n        </button>\\n    </div>\\n</div>\\n"},{"name":"UiGridComponent","id":"component-UiGridComponent-0d1d255e521fcf5c60dab35c42aeda310c39d0ee156dd4c4f3536c2763994d9b4fd45aec2bb6ceb40ee1a6024be8a5f8c54d6c1cef7d7c5040f0236dd097f21f","file":"libs/ui/src/lib/modules/grid/components/grid/grid.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid","styleUrls":["./grid.component.scss"],"styles":[],"templateUrl":["./grid.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionsColumnVisible","deprecated":false,"deprecationMessage":"","line":74,"type":"boolean","decorators":[]},{"name":"autoSizeColumnArr","deprecated":false,"deprecationMessage":"","line":53,"type":"[]","decorators":[]},{"name":"checkboxSelection","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":52,"type":"boolean","decorators":[]},{"name":"collapsedGridHeaderButtonLabel","deprecated":false,"deprecationMessage":"","line":56,"type":"string","decorators":[]},{"name":"collapseGridHeaderButtons","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":55,"type":"boolean","decorators":[]},{"name":"columnDefsMethod","deprecated":false,"deprecationMessage":"","line":59,"type":"any","decorators":[]},{"name":"getActionButtons","defaultValue":"(thisItemData, thisRowId): IUiActionBtnConfig => {\\n        return null;\\n    }","deprecated":false,"deprecationMessage":"","line":151,"type":"(thisItemData: any, thisRowId: any) => IUiActionBtnConfig","decorators":[]},{"name":"getContextMenuItems","defaultValue":"(params: GetContextMenuItemsParams): (string | MenuItemDef)[] => {\\n        return [];\\n    }","deprecated":false,"deprecationMessage":"","line":155,"type":"(params: GetContextMenuItemsParams) => {}","decorators":[]},{"name":"gridHeaderButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":3726,"end":3794,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":3727,"end":3731,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"todo"},"comment":"<p>Can be swapped out with new interface buttons when ready</p>\\n"}],"rawdescription":"\\n\\nArray of header buttons to be displayed in the grid header\\n\\n","description":"<p>Array of header buttons to be displayed in the grid header</p>\\n","line":83,"type":"IUiHeaderButton[]","decorators":[]},{"name":"gridHeight","deprecated":false,"deprecationMessage":"","line":54,"type":"any","decorators":[]},{"name":"gridOptions","defaultValue":"{\\n        rowSelection: \'single\',\\n        pagination: true,\\n        paginationAutoPageSize: true,\\n        cacheBlockSize: 100,\\n        rowModelType: UiRowModelTypeEnum.serverSide,\\n        serverSideStoreType: \'partial\',\\n        rowMultiSelectWithClick: true,\\n        unSortIcon: true,\\n        getRowId: (params) => params.data[this.rowId],\\n    }","deprecated":false,"deprecationMessage":"","line":63,"type":"GridOptions","decorators":[]},{"name":"gridReadyMethod","defaultValue":"(params) => {}","deprecated":false,"deprecationMessage":"","line":149,"type":"(params: any) => void","decorators":[]},{"name":"id","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":50,"type":"string","decorators":[]},{"name":"rowId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":51,"type":"string","decorators":[]},{"name":"rowModelType","defaultValue":"UiRowModelTypeEnum.serverSide","deprecated":false,"deprecationMessage":"","line":58,"type":"UiRowModelTypeEnum","decorators":[]},{"name":"rowSelection","defaultValue":"UiRowSelectTypeEnum.single","deprecated":false,"deprecationMessage":"","line":60,"type":"UiRowSelectTypeEnum","decorators":[]},{"name":"tooltipShowDelay","defaultValue":"0","deprecated":false,"deprecationMessage":"","line":84,"type":"number","decorators":[]}],"outputsClass":[{"name":"cellValueChangedEvent","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":86,"type":"EventEmitter"},{"name":"rowClickEvent","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":87,"type":"EventEmitter"},{"name":"selectionChange","defaultValue":"new EventEmitter<{\\n        gridId: string;\\n        selectedRows: RowNode[];\\n    }>()","deprecated":false,"deprecationMessage":"","line":88,"type":"EventEmitter"}],"propertiesClass":[{"name":"_actionButtonListener","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":126,"modifierKind":[121]},{"name":"_actionMenuEvents","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":124,"modifierKind":[121]},{"name":"_actionMenuListener","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":127,"modifierKind":[121]},{"name":"_actionsColumnVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":125,"modifierKind":[121]},{"name":"_noDataStr","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":130,"modifierKind":[121]},{"name":"_noDataStrColorClass","defaultValue":"\'text-gray-700\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":128,"modifierKind":[121]},{"name":"_noDataSubStr","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":131,"modifierKind":[121]},{"name":"_noDataSubStrColorClass","defaultValue":"\'text-gray-700\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":129,"modifierKind":[121]},{"name":"_subscriptions","defaultValue":"new Subscription()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":123,"modifierKind":[121]},{"name":"actionMenuOpened","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":110,"modifierKind":[123]},{"name":"autoHeight","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":112,"modifierKind":[123]},{"name":"calculatedGridHeight","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":113,"modifierKind":[123]},{"name":"colElements","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":109,"modifierKind":[123]},{"name":"columnDefs","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":96,"modifierKind":[123]},{"name":"components","defaultValue":"{ agColumnHeader: UiCustomHeaderComponent }","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":108,"modifierKind":[123]},{"name":"defaultColDef","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"modifierKind":[123]},{"name":"gridApi","deprecated":false,"deprecationMessage":"","type":"GridApi","optional":false,"description":"","line":93,"modifierKind":[123]},{"name":"gridColumnApi","deprecated":false,"deprecationMessage":"","type":"ColumnApi","optional":false,"description":"","line":94,"modifierKind":[123]},{"name":"gridTop","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":107,"modifierKind":[123]},{"name":"hasAnyFilter$","defaultValue":"new BehaviorSubject(false)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":121,"modifierKind":[123]},{"name":"headerCountFilteredShown$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":120,"modifierKind":[123]},{"name":"headerCountFilteredTotal$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":119,"modifierKind":[123]},{"name":"headerCountSelected$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":118,"modifierKind":[123]},{"name":"headerCountText$","defaultValue":"new BehaviorSubject(0)","deprecated":false,"deprecationMessage":"","type":"BehaviorSubject<number>","optional":false,"description":"","line":117,"modifierKind":[123]},{"name":"headerInfoText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":114,"modifierKind":[123]},{"name":"loadingCellRenderer","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":102,"modifierKind":[123]},{"name":"loadingCellRendererParams","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":103,"modifierKind":[123]},{"name":"noDataIconClass","defaultValue":"UiIconTypeEnum.neutral","deprecated":false,"deprecationMessage":"","type":"UiIconTypeEnum.neutral | UiIconTypeEnum.danger | UiIconTypeEnum.success | UiIconTypeEnum.warning","optional":false,"description":"","line":100,"modifierKind":[123]},{"name":"noDataStrKey","defaultValue":"\'COMMON.NO_DATA_TO_DISPLAY\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":97,"modifierKind":[123]},{"name":"noDataSubStrKey","defaultValue":"\' \'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":98,"modifierKind":[123]},{"name":"noRowsTemplate","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":104,"modifierKind":[123]},{"name":"selectedRows","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"RowNode[]","optional":false,"description":"","line":115,"modifierKind":[123]},{"name":"showNoData","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":105,"modifierKind":[123]},{"name":"sortingIcons","defaultValue":"UiSortingIconsConst","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":106,"modifierKind":[123]},{"name":"titleText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":111,"modifierKind":[123]}],"methodsClass":[{"name":"applyColumnState","args":[{"name":"params","type":"ApplyColumnStateParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":299,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ApplyColumnStateParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"autoSizeColumns","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":471,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"gridSizeChanged","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":303,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":245,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCellMouseOut","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":327,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onCellMouseOver","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":307,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onCellValueChanged","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":281,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onFirstDataRendered","args":[{"name":"params","type":"FirstDataRenderedEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":363,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"FirstDataRenderedEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onGridReady","args":[{"name":"params","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":261,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onModelUpdated","args":[{"name":"e","type":"ModelUpdatedEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":293,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"ModelUpdatedEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":160,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"onRowClicked","args":[{"name":"event","type":"RowClickedEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":338,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"RowClickedEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChanged","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setColumnDef","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":370,"deprecated":false,"deprecationMessage":"","modifierKind":[122]},{"name":"setDomLayout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":485,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"setNoDataTemplate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":342,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":160}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from \'@angular/core\';\\n// RxJS\\nimport { BehaviorSubject, Subscription } from \'rxjs\';\\n// Ag-Grid\\nimport { GetContextMenuItemsParams, LicenseManager, MenuItemDef } from \'ag-grid-enterprise\';\\nimport {\\n    RowClickedEvent,\\n    GridOptions,\\n    ApplyColumnStateParams,\\n    GridApi,\\n    ColumnApi,\\n    FirstDataRenderedEvent,\\n    ModelUpdatedEvent,\\n    RowNode,\\n} from \'ag-grid-community\';\\n// NGX Translate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Services\\nimport { UiLayoutService } from \'@lib/services/layout\';\\nimport { UiPageFooterService } from \'@lib/modules/layout/services/page-footer-service/page-footer.service\';\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\n// Custom Cell Renderers\\nimport { UiCustomLoadingCellRendererComponent } from \'../custom-loading-cell-renderer/custom-loading-cell-renderer.component\';\\nimport { UiCustomHeaderComponent } from \'../custom-header/custom-header.component\';\\n// Enums\\nimport { UiRowModelTypeEnum, UiRowSelectTypeEnum } from \'./enums\';\\nimport { UiIconTypeEnum } from \'@lib/enums/icon-type.enum\';\\n// Grid Constants\\nimport { UiSortingIconsConst } from \'@lib/modules/grid/constants/sorting-icons.const\';\\n// Components\\nimport { UiActionButtonsRendererComponent } from \'../action-buttons-renderer/action-buttons-renderer.component\';\\nimport { UiCustomMultiSelectHeaderComponent } from \'../custom-multiselect-header/custom-multiselect-header.component\';\\n// Interfaces\\nimport { IUiActionBtnConfig } from \'./interfaces/grid.interface\';\\nimport { IUiHeaderButton } from \'../grid-header-buttons/grid-header-buttons.component\';\\n\\n// Ag-Grid License\\nLicenseManager.setLicenseKey(\\n    // eslint-disable-next-line max-len\\n    \'CompanyName=Assent Compliance Inc,LicensedApplication=ACP,LicenseType=SingleApplication,LicensedConcurrentDeveloperCount=15,LicensedProductionInstancesCount=1,AssetReference=AG-023554,ExpiryDate=1_February_2023_[v2]_MTY3NTIwOTYwMDAwMA==5c744bd8669298207bad0bc10f8dde50\'\\n);\\n\\n@Component({\\n    selector: \'ui-grid\',\\n    templateUrl: \'./grid.component.html\',\\n    styleUrls: [\'./grid.component.scss\'],\\n})\\nexport class UiGridComponent implements OnInit, OnChanges, OnDestroy {\\n    @Input() public id = \'\';\\n    @Input() public rowId = \'\';\\n    @Input() public checkboxSelection = true;\\n    @Input() public autoSizeColumnArr: [];\\n    @Input() public gridHeight; // Note: In pixels\\n    @Input() public collapseGridHeaderButtons = false;\\n    @Input() public collapsedGridHeaderButtonLabel: string;\\n    // Hint: This property overrides rowModelType property in grid options\\n    @Input() public rowModelType: UiRowModelTypeEnum = UiRowModelTypeEnum.serverSide;\\n    @Input() public columnDefsMethod; // = () => { return {}};\\n    @Input() public rowSelection: UiRowSelectTypeEnum = UiRowSelectTypeEnum.single;\\n    // Note: A setting method will be created in the next version to allows adding or updating\\n    // default properties without erasing the other default properties of the gridOptions object.\\n    @Input() public gridOptions: GridOptions = {\\n        rowSelection: \'single\',\\n        pagination: true,\\n        paginationAutoPageSize: true,\\n        cacheBlockSize: 100,\\n        rowModelType: UiRowModelTypeEnum.serverSide,\\n        serverSideStoreType: \'partial\',\\n        rowMultiSelectWithClick: true,\\n        unSortIcon: true,\\n        getRowId: (params) => params.data[this.rowId],\\n    };\\n    @Input() public set actionsColumnVisible(val: boolean) {\\n        this._actionsColumnVisible = val;\\n        this.setColumnDef();\\n    }\\n    /**\\n     * Array of header buttons to be displayed in the grid header\\n     *\\n     * @todo Can be swapped out with new interface buttons when ready\\n     */\\n    @Input() public gridHeaderButtons: IUiHeaderButton[] = [];\\n    @Input() public tooltipShowDelay = 0;\\n\\n    @Output() public cellValueChangedEvent = new EventEmitter<any>();\\n    @Output() public rowClickEvent = new EventEmitter<any>();\\n    @Output() public selectionChange = new EventEmitter<{\\n        gridId: string;\\n        selectedRows: RowNode[];\\n    }>();\\n\\n    public gridApi: GridApi;\\n    public gridColumnApi: ColumnApi;\\n    public defaultColDef;\\n    public columnDefs = [];\\n    public noDataStrKey = \'COMMON.NO_DATA_TO_DISPLAY\';\\n    public noDataSubStrKey = \' \';\\n    // eslint-disable-next-line max-len\\n    public noDataIconClass: UiIconTypeEnum.neutral | UiIconTypeEnum.danger | UiIconTypeEnum.success | UiIconTypeEnum.warning =\\n        UiIconTypeEnum.neutral;\\n    public loadingCellRenderer;\\n    public loadingCellRendererParams;\\n    public noRowsTemplate;\\n    public showNoData = false;\\n    public sortingIcons = UiSortingIconsConst;\\n    public gridTop = 0;\\n    public components: { [p: string]: any } = { agColumnHeader: UiCustomHeaderComponent };\\n    public colElements = [];\\n    public actionMenuOpened = false;\\n    public titleText;\\n    public autoHeight = true;\\n    public calculatedGridHeight = 0;\\n    public headerInfoText;\\n    public selectedRows: RowNode[] = [];\\n\\n    public headerCountText$: BehaviorSubject<number> = new BehaviorSubject(0);\\n    public headerCountSelected$: BehaviorSubject<number> = new BehaviorSubject(0);\\n    public headerCountFilteredTotal$: BehaviorSubject<number> = new BehaviorSubject(0);\\n    public headerCountFilteredShown$: BehaviorSubject<number> = new BehaviorSubject(0);\\n    public hasAnyFilter$: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\n    private _subscriptions = new Subscription();\\n    private _actionMenuEvents;\\n    private _actionsColumnVisible = false;\\n    private _actionButtonListener;\\n    private _actionMenuListener;\\n    private _noDataStrColorClass = \'text-gray-700\';\\n    private _noDataSubStrColorClass = \'text-gray-700\';\\n    private _noDataStr = \'\';\\n    private _noDataSubStr = \'\';\\n\\n    constructor(\\n        private _layoutService: UiLayoutService,\\n        private _translateService: TranslateService,\\n        private _pageFooterService: UiPageFooterService\\n    ) {}\\n\\n    public ngOnDestroy(): void {\\n        this._subscriptions.unsubscribe();\\n\\n        this.headerCountText$.unsubscribe();\\n        this.headerCountSelected$.unsubscribe();\\n        this.headerCountFilteredTotal$.unsubscribe();\\n        this.headerCountFilteredShown$.unsubscribe();\\n        this.hasAnyFilter$.unsubscribe();\\n    }\\n\\n    @Input() public gridReadyMethod = (params) => {};\\n\\n    @Input() public getActionButtons = (thisItemData, thisRowId): IUiActionBtnConfig => {\\n        return null;\\n    };\\n\\n    @Input() public getContextMenuItems = (params: GetContextMenuItemsParams): (string | MenuItemDef)[] => {\\n        return [];\\n    };\\n\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        if (this.gridHeight === undefined) {\\n            this.gridTop = document.querySelector(\'ag-grid-angular\').getBoundingClientRect().top;\\n\\n            let footerHeight = 0;\\n            if (this._pageFooterService.showPageFooter === true && document.getElementById(\'footer\') !== null) {\\n                footerHeight = document.getElementById(\'footer\').clientHeight;\\n            }\\n            this.calculatedGridHeight = window.innerHeight - (this.gridTop + 20) - footerHeight;\\n            const viewport = document.querySelector(\'.ag-center-cols-viewport\');\\n            viewport.setAttribute(\'style\', \'height: 100%\');\\n        }\\n    }\\n\\n    public ngOnInit(): void {\\n        if (this.gridHeight !== undefined) {\\n            this.autoHeight = false;\\n        }\\n        this._layoutService.hideOverflow = this.autoHeight; // Hide scrollbar for fullscreen grid\\n\\n        this.loadingCellRenderer = UiCustomLoadingCellRendererComponent;\\n        this.loadingCellRendererParams = { loadingMessage: \'COMMON.LOADING_DATA\' };\\n        this.defaultColDef = {\\n            flex: 1,\\n            sortable: true,\\n            editable: false,\\n            suppressMenu: true,\\n            suppressMovable: true,\\n            /* Note: Keeping those commented line as reference\\n                resizable: true,\\n                wrapText: true,\\n                autoHeight: true,\\n                sort: \'desc\',\\n                maxWidth: 400,\\n                minWidth: 30,\\n                checkboxSelection: false,\\n                filter: false,\\n                floatingFilter: false, // Filter input row\\n                cellClass: [\'cell-text-left\'],\\n                headerClass: \'header-text-left\',\\n            */\\n        };\\n\\n        this.setColumnDef();\\n        this.setNoDataTemplate();\\n\\n        this._subscriptions.add(\\n            this._translateService.onLangChange.subscribe(() => {\\n                this.setColumnDef();\\n                this.autoSizeColumns();\\n\\n                if (this.showNoData) {\\n                    this.setNoDataTemplate();\\n                }\\n\\n                if (this.gridOptions.api !== undefined && this.gridOptions.api !== null) {\\n                    this.gridOptions.api.redrawRows();\\n                }\\n            })\\n        );\\n\\n        this._subscriptions.add(\\n            this._layoutService.onUpdateLayout.subscribe(() => {\\n                setTimeout(() => {\\n                    this.onResize();\\n                }, 200);\\n            })\\n        );\\n\\n        this._subscriptions.add(\\n            this._pageFooterService.showPageFooter$.subscribe(() => {\\n                this.onResize();\\n            })\\n        );\\n\\n        this._subscriptions.add(\\n            this.selectionChange.subscribe((event) => {\\n                this.headerCountSelected$.next(event.selectedRows.length);\\n                this.selectedRows = event.selectedRows;\\n            })\\n        );\\n\\n        this.gridOptions.getContextMenuItems = this.getContextMenuItems.bind(this);\\n    }\\n\\n    public ngOnChanges(changes: SimpleChanges) {\\n        if (changes.rowModelType?.currentValue || changes.gridOptions?.currentValue) {\\n            this.gridOptions.rowModelType = this.rowModelType;\\n        }\\n        if (changes.rowSelection?.currentValue || changes.gridOptions?.currentValue) {\\n            this.gridOptions.rowSelection = this.rowSelection;\\n            if (this.rowSelection === \'multiple\') {\\n                this.gridOptions.rowClass = this.rowSelection === \'multiple\' ? \'grid-multiselect-row\' : \'grid-row\';\\n                this.gridOptions.rowMultiSelectWithClick = false; // do not allow selection on row click, only checkbox\\n                this.gridOptions.suppressRowClickSelection = true; // do not allow selection on row click, only checkbox\\n                this.gridOptions.viewportRowModelPageSize = 1;\\n                this.gridOptions.viewportRowModelBufferSize = 0;\\n            }\\n        }\\n    }\\n\\n    public onGridReady(params) {\\n        this.gridApi = params.api;\\n        this.gridColumnApi = params.columnApi;\\n        this.gridReadyMethod(params);\\n        this.autoSizeColumns();\\n        this.setDomLayout();\\n\\n        this._subscriptions.add(\\n            this.gridApi.addEventListener(\'filterChanged\', (event) => {\\n                const currentPageRows = this.gridApi.paginationGetPageSize();\\n                this.headerCountFilteredShown$.next(currentPageRows);\\n                this.headerCountFilteredTotal$.next(this.gridApi.getDisplayedRowCount());\\n                this.hasAnyFilter$.next(this.gridApi.isAnyFilterPresent());\\n                if (this.rowSelection === UiRowSelectTypeEnum.multiple) {\\n                    this.gridApi.deselectAll();\\n                }\\n            })\\n        );\\n    }\\n\\n    public onCellValueChanged(event) {\\n        this.cellValueChangedEvent.emit(event);\\n    }\\n\\n    public onSelectionChanged(event: any)\\n    {\\n        this.selectionChange.emit({\\n            gridId: this.id,\\n            selectedRows: this.gridApi.getSelectedRows()\\n        });\\n    }\\n\\n    public onModelUpdated(e: ModelUpdatedEvent) {\\n        if (e.api !== null) {\\n            this.headerCountText$.next(e.api.getDisplayedRowCount());\\n        }\\n    }\\n\\n    public applyColumnState(params: ApplyColumnStateParams) {\\n        this.gridOptions.columnApi.applyColumnState(params);\\n    }\\n\\n    public gridSizeChanged(e) {\\n        this.onResize();\\n    }\\n\\n    public onCellMouseOver(e) {\\n        const actionButton = document.querySelector(\'#\' + \'actionBtn-\' + e.rowIndex);\\n        const actionMenu = document.querySelector(\'#\' + \'actionMenu\');\\n\\n        if (this._actionButtonListener !== undefined) {\\n            this._actionButtonListener.remove();\\n            this._actionMenuListener.remove();\\n        }\\n\\n        this._actionButtonListener = actionButton?.addEventListener(\'click\', () => {\\n            this.actionMenuOpened = true;\\n        });\\n\\n        this._actionMenuListener = actionMenu?.addEventListener(\'click\', () => {\\n            this.actionMenuOpened = false;\\n        });\\n\\n        actionMenu?.classList.remove(\'visually-hidden\');\\n    }\\n\\n    public onCellMouseOut(e) {\\n        if (this._actionButtonListener !== undefined) {\\n            this._actionButtonListener.remove();\\n            this._actionMenuListener.remove();\\n        }\\n\\n        if (this.actionMenuOpened === true) {\\n            this.actionMenuOpened = false;\\n        }\\n    }\\n\\n    public onRowClicked(event: RowClickedEvent) {\\n        this.rowClickEvent.emit(event);\\n    }\\n\\n    public setNoDataTemplate() {\\n        this._noDataStr = this._translateService.instant(this.noDataStrKey);\\n        this._noDataSubStr = this._translateService.instant(this.noDataSubStrKey);\\n\\n        // eslint-disable-next-line max-len\\n        this.noRowsTemplate = `<div><i class=\\"${this.noDataIconClass}\\"></i><br><h5 class=\\"mt-2 ${this._noDataStrColorClass}\\">${this._noDataStr}</h5><span class=\\"${this._noDataSubStrColorClass}\\">${this._noDataSubStr}</span></div>`;\\n\\n        if (this.gridApi) {\\n            this.gridApi.hideOverlay();\\n\\n            // Note: Using setTimeout to let the translation switch to occur.\\n            setTimeout(() => {\\n                const rowData = [];\\n                this.gridApi.forEachNode((node) => rowData.push(node.data));\\n                if (rowData.length === 0) {\\n                    this.gridApi.showNoRowsOverlay();\\n                }\\n            });\\n        }\\n    }\\n\\n    public onFirstDataRendered(params: FirstDataRenderedEvent) {\\n        setTimeout(() => {\\n            this.onResize();\\n            this.autoSizeColumns();\\n        }, 500);\\n    }\\n\\n    protected setColumnDef() {\\n        if (this.columnDefsMethod !== null && this.columnDefsMethod !== undefined) {\\n            this.columnDefs = this.columnDefsMethod();\\n\\n            // Append checkboxes to first column if rowSelection is set to \\"multiple\\"\\n            if (this.rowSelection === UiRowSelectTypeEnum.multiple) {\\n                // Update columnDefs to include the checkbox column and events\\n                this.columnDefs[0] = {\\n                    ...this.columnDefs[0],\\n                    checkboxSelection: true,\\n                    cellClass: \'grid-multiselect-cell\',\\n                    headerCheckboxSelectionFilteredOnly: true,\\n                    headerClass: \'grid-multiselect-header\',\\n                    /* Please keep for reference - this will make the entire cell with the checkbox \'clickable\'\\n                    onCellClicked: (event) => {\\n                        // Listens for cell click event and toggles the row selection\\n                        event.node.setSelected(!event.node.isSelected());\\n                    },\\n                    */\\n                    onCellValueChanged: (event) => {\\n                        this.selectionChange.emit({\\n                            gridId: event.node.gridOptions.id,\\n                            selectedRows: this.selectedRows,\\n                        });\\n                    },\\n                };\\n                // If the rowModelType is clientSide, we can use the Ag-Grid headerCheckboxSelection\\n                if (this.rowModelType === UiRowModelTypeEnum.clientSide) {\\n                    this.columnDefs[0].headerCheckboxSelection = (params) => {\\n                        const displayedColumns = params.columnApi.getAllDisplayedColumns();\\n                        return displayedColumns[0] === params.column;\\n                    };\\n                }\\n                // If the rowModelType is serverSide, we need to use a custom header component\\n                if (this.rowModelType === UiRowModelTypeEnum.serverSide) {\\n                    this.columnDefs[0].headerComponent = UiCustomMultiSelectHeaderComponent;\\n                    this.columnDefs[0].headerComponentParams = {\\n                        gridId: this.id,\\n                        selectionChange: this.selectionChange,\\n                        rowModelType: this.rowModelType,\\n                    };\\n                    this.columnDefs[0].headerCheckboxSelectionCurrentPageOnly = true;\\n                }\\n\\n                /* Please leave for reference -- these are the initial params for a \\"checkbox column\\" if needed.\\n                const multiSelectCellWidth = 40;\\n                this.columnDefs.unshift({\\n                    pinned: \'left\', // Always pin to the left the primary info column\\n                    lockPinned: true, // Lock the pinned column\\n                    lockPosition: \'left\',\\n                    suppressMovable: true, // do not want this column to be moved\\n                    resizable: false, // do not want this column to be resized\\n                    suppressSizeToFit: true,\\n                    suppressAutoSize: false,\\n                    cellCLass: \'grid-multiselect-cell\',\\n                    checkboxSelection: true,\\n                    showDisabledCheckboxes: true,\\n                    width: multiSelectCellWidth,\\n                    minWidth: multiSelectCellWidth,\\n                    maxWidth: multiSelectCellWidth,\\n                    headerComponent: UiCustomMultiSelectHeaderComponent,\\n                    headerComponentParams: {\\n                        gridId: this.id,\\n                        selectionChange: this.selectionChange,\\n                    },\\n                    headerClass: \'grid-multiselect-header\',\\n                    onCellClicked: (params) => {\\n                        params.node.setSelected(!params.node.isSelected());\\n                    }\\n                });\\n                */\\n            }\\n\\n            // This empty column is a filler\\n            this.columnDefs[this.columnDefs.length] = {\\n                field: \'empty-column\',\\n                headerName: \'\',\\n                sortable: false,\\n                suppressMovable: true,\\n            };\\n\\n            // Adding actions column\\n            if (this._actionsColumnVisible === true) {\\n                this.columnDefs[this.columnDefs.length] = {\\n                    field: \'row-actions\',\\n                    headerName: this._translateService.instant(\'COMMON.ACTIONS\'),\\n                    headerClass: [\'header-text-center\'],\\n                    suppressMovable: true,\\n                    cellRendererSelector: (params) => {\\n                        return {\\n                            component: UiActionButtonsRendererComponent,\\n                            params: this.getActionButtons(params.data, params.rowIndex),\\n                        };\\n                    },\\n                    sortable: false, // Make it unsortable\\n                    pinned: \'right\', // Always pin the action buttons column to the right,\\n                };\\n            }\\n        }\\n    }\\n\\n    protected autoSizeColumns() {\\n        setTimeout(() => {\\n            if (this.gridColumnApi !== undefined && Array.isArray(this.autoSizeColumnArr) && this.autoSizeColumnArr.length > 0) {\\n                const containActions = this.autoSizeColumnArr.find((item) => item === \'row-actions\');\\n                if (containActions === undefined) {\\n                    this.autoSizeColumnArr[String(this.autoSizeColumnArr.length)] = \'row-actions\';\\n                }\\n\\n                this.gridColumnApi.autoSizeColumns(this.autoSizeColumnArr, false);\\n                this.onResize();\\n            }\\n        }, 200);\\n    }\\n\\n    private setDomLayout() {\\n        if (this.autoHeight) {\\n            this.gridApi.setDomLayout(\'autoHeight\');\\n        } else {\\n            this.gridApi.setDomLayout(\'normal\');\\n        }\\n        this.gridApi.setDomLayout(\'normal\');\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./grid.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""}],"line":131,"jsdoctags":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnChanges","OnDestroy"],"accessors":{"actionsColumnVisible":{"name":"actionsColumnVisible","setSignature":{"name":"actionsColumnVisible","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":74,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<ui-grid-header\\n    [countText]=\\"headerCountText$ | async\\"\\n    [countSelectedItems]=\\"headerCountSelected$ | async\\"\\n    [countFilteredItems]=\\"headerCountFilteredTotal$ | async\\"\\n    [countFilteredShown]=\\"headerCountFilteredShown$ | async\\"\\n    [hasAnyFilter]=\\"hasAnyFilter$ | async\\"\\n    [titleText]=\\"titleText\\"\\n    [infoText]=\\"headerInfoText\\"\\n    [gridHeaderButtons]=\\"gridHeaderButtons\\"\\n    [collapseHeaderButtons]=\\"collapseGridHeaderButtons\\"\\n    [collapseHeaderButtonLabel]=\\"collapsedGridHeaderButtonLabel\\"\\n></ui-grid-header>\\n<ag-grid-angular\\n    class=\\"ag-theme-material w-100\\"\\n    [style.height]=\\"autoHeight ? calculatedGridHeight + \'px\' : gridHeight + \'px\'\\"\\n    [id]=\\"\'ag-grid-\' + id\\"\\n    [gridOptions]=\\"gridOptions\\"\\n    [defaultColDef]=\\"defaultColDef\\"\\n    [columnDefs]=\\"columnDefs\\"\\n    [rowModelType]=\\"rowModelType\\"\\n    [loadingCellRenderer]=\\"loadingCellRenderer\\"\\n    [loadingCellRendererParams]=\\"loadingCellRendererParams\\"\\n    [icons]=\\"sortingIcons\\"\\n    [overlayNoRowsTemplate]=\\"noRowsTemplate\\"\\n    [suppressCellFocus]=\\"true\\"\\n    (gridReady)=\\"onGridReady($event)\\"\\n    (rowClicked)=\\"onRowClicked($event)\\"\\n    (gridSizeChanged)=\\"gridSizeChanged($event)\\"\\n    (modelUpdated)=\\"onModelUpdated($event)\\"\\n    (cellMouseOut)=\\"onCellMouseOut($event)\\"\\n    (cellMouseOver)=\\"onCellMouseOver($event)\\"\\n    (firstDataRendered)=\\"onFirstDataRendered($event)\\"\\n    (selectionChanged)=\\"onSelectionChanged($event)\\"\\n    [components]=\\"components\\"\\n    [tooltipShowDelay]=\\"tooltipShowDelay\\"\\n    (cellValueChanged)=\\"onCellValueChanged($event)\\"\\n>\\n</ag-grid-angular>\\n"},{"name":"UiGridFilterComponent","id":"component-UiGridFilterComponent-6d96389f784e49c17b5684afad7bb315fdbedfe4b3e2bc90415fbc5fbef9abd3fe289f0df50cda35eecd63ed563c759506f6025b713850953a6563488805c8a9","file":"libs/ui/src/lib/modules/filter/grid-filter/grid-filter.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid-filter","styleUrls":["./grid-filter.component.scss"],"styles":[],"templateUrl":["./grid-filter.component.html"],"viewProviders":[],"inputsClass":[{"name":"filters","deprecated":false,"deprecationMessage":"","line":18,"type":"IUiQuickFilter","decorators":[]},{"name":"uiGrid","deprecated":false,"deprecationMessage":"","line":17,"type":"UiGridComponent","decorators":[]}],"outputsClass":[{"name":"filterChange","defaultValue":"new EventEmitter<object>()","deprecated":false,"deprecationMessage":"","line":31,"type":"EventEmitter<object>"}],"propertiesClass":[{"name":"_filters","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"IUiQuickFilter","optional":false,"description":"","line":38,"modifierKind":[121]},{"name":"filterCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"filterRefs","deprecated":false,"deprecationMessage":"","type":"QueryList<UiQuickFilterComponent>","optional":false,"description":"","line":33,"decorators":[{"name":"ViewChildren","stringifiedArguments":"UiQuickFilterComponent"}],"modifierKind":[123]},{"name":"filtersArray","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":36,"modifierKind":[123]}],"methodsClass":[{"name":"applyFiltersData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"clearAllFilters","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getFilterByRowModel","args":[{"name":"values","type":"IUiQuickFilterOption[]","deprecated":false,"deprecationMessage":""},{"name":"rowModelType","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"UiRowModelTypeEnum.serverSide"}],"optional":false,"returnType":"IUiServerSideFilter | IUiClientSideFilter","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"values","type":"IUiQuickFilterOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rowModelType","type":"","deprecated":false,"deprecationMessage":"","defaultValue":"UiRowModelTypeEnum.serverSide","tagName":{"text":"param"}}]},{"name":"onOpenChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTriggerClicked","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateTotalFilterCount","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output, QueryList, ViewChildren } from \'@angular/core\';\\n// Enums\\nimport { UiRowModelTypeEnum } from \'@lib/modules/grid/components/grid/enums\';\\n// Interfaces\\nimport { IUiClientSideFilter, IUiFilterModel, IUiQuickFilter, IUiQuickFilterOption, IUiServerSideFilter } from \'../interfaces\';\\n// Components\\nimport { UiGridComponent } from \'@lib/modules/grid/components\';\\nimport { UiQuickFilterComponent } from \'../quick-filter/quick-filter.component\';\\n\\n@Component({\\n    selector: \'ui-grid-filter\',\\n    templateUrl: \'./grid-filter.component.html\',\\n    styleUrls: [\'./grid-filter.component.scss\'],\\n})\\nexport class UiGridFilterComponent {\\n    @Input() public uiGrid: UiGridComponent;\\n    @Input() public set filters(value: IUiQuickFilter) {\\n        this._filters = value;\\n        this.filtersArray = [];\\n        for (const prop in value) {\\n            if (value.hasOwnProperty(prop)) {\\n                this.filtersArray.push({ name: prop, filters: value[prop] });\\n            }\\n        }\\n    }\\n    public get filters(): IUiQuickFilter {\\n        return this._filters;\\n    }\\n\\n    @Output() public filterChange: EventEmitter<object> = new EventEmitter<object>();\\n\\n    @ViewChildren(UiQuickFilterComponent) public filterRefs: QueryList<UiQuickFilterComponent>;\\n\\n    public filterCount = 0;\\n    public filtersArray = [];\\n\\n    private _filters: IUiQuickFilter = {};\\n\\n    constructor() {}\\n\\n    // Filters Methods START\\n    public clearAllFilters() {\\n        for (const prop in this.filters) {\\n            if (this.filters.hasOwnProperty(prop)) {\\n                for (let i = 0; i < this.filters[prop].options.length; i++) {\\n                    this.filters[prop].options[i].value = false;\\n                }\\n            }\\n        }\\n\\n        this.filterRefs.forEach((filterRef) => {\\n            filterRef.clearSelection();\\n        });\\n\\n        this.applyFiltersData();\\n    }\\n\\n    public applyFiltersData() {\\n        const tempFilters: IUiFilterModel = {};\\n        const rowModelType: UiRowModelTypeEnum = this.uiGrid.rowModelType;\\n\\n        for (const prop in this.filters) {\\n            if (this.filters.hasOwnProperty(prop)) {\\n                const filter = this.filters[prop].options;\\n\\n                if (filter.filter((option) => option.value === true).length !== 0) {\\n                    const values = this.filters[prop].options.filter((option) => option.value === true);\\n\\n                    tempFilters[prop] = this.getFilterByRowModel(values, rowModelType);\\n                }\\n            }\\n        }\\n\\n        if (this.uiGrid !== undefined && this.uiGrid.gridOptions !== undefined && this.uiGrid.gridOptions.api !== undefined) {\\n            this.uiGrid.gridOptions.api.setFilterModel(tempFilters);\\n            this.uiGrid.gridOptions.api.onFilterChanged();\\n        }\\n\\n        this.filterChange.emit(tempFilters);\\n        this.updateTotalFilterCount();\\n    }\\n\\n    public updateTotalFilterCount() {\\n        this.filterCount = 0;\\n\\n        for (const prop in this.filters) {\\n            if (this.filters.hasOwnProperty(prop)) {\\n                const filter = this.filters[prop].options;\\n\\n                for (let j = 0; j < filter.length; j++) {\\n                    if (filter[j].value === true) {\\n                        this.filterCount += 1;\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    // Events\\n    public onOpenChange(event) {\\n        // console.log(\'onOpenChange\');\\n    }\\n\\n    public onTriggerClicked(event) {\\n        // console.log(\'onTriggerClicked\');\\n    }\\n\\n    public onSelectionChange(event) {\\n        // console.log(\'onSelectionChange\');\\n        this.applyFiltersData();\\n        this.filterChange.emit({ options: this.filters });\\n    }\\n    // Filters Methods END\\n\\n    private getFilterByRowModel(\\n        values: IUiQuickFilterOption[],\\n        rowModelType = UiRowModelTypeEnum.serverSide\\n    ): IUiServerSideFilter | IUiClientSideFilter {\\n        let tempFilter: IUiServerSideFilter | IUiClientSideFilter;\\n\\n        if (rowModelType === UiRowModelTypeEnum.clientSide) {\\n            tempFilter = { filterType: \'set\', values: values.map((v) => v.id) };\\n        } else {\\n            let filterString = \'\';\\n            for (let i = 0; i < values.length; i++) {\\n                filterString += values[i].id;\\n                if (i < values.length - 1 && values.length > 1) {\\n                    filterString += \',\';\\n                }\\n            }\\n\\n            tempFilter = { filterType: \'text\', type: \'contains\', filter: filterString };\\n        }\\n\\n        return tempFilter;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./grid-filter.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":38},"accessors":{"filters":{"name":"filters","setSignature":{"name":"filters","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiQuickFilter","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":18,"jsdoctags":[{"name":"value","type":"IUiQuickFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"filters","type":"","returnType":"IUiQuickFilter","line":27}}},"templateData":"<div class=\\"card mb-3 overflow-visible\\">\\n    <div class=\\"row\\">\\n        <div class=\\"col-sm-9\\">\\n            <div class=\\"filters gap-20 m-3 d-flex flex-wrap flex-row align-items-center\\">\\n                <span class=\\"text-gray-700\\">{{\\"COMMON.FILTERS\\" | translate}}:</span>\\n                <ui-quick-filter *ngFor=\\"let item of filtersArray\\"\\n                    [id]=\\"\'filter_\'+item.name\\"\\n                    [label]=\\"item.filters.label\\"\\n                    [setOptions]=\\"item.filters.options\\"\\n                    [showSelectClearBtns]=\\"item.filters.showSelectClearBtns\\"\\n                    [multiSelect]=\\"item.filters.multiSelect??true\\"\\n                    [showSearch]=\\"item.filters.showSearch\\"\\n                    (selectionChange)=\\"onSelectionChange($event)\\"\\n                    (openChange)=\\"onOpenChange($event)\\"\\n                    (triggerClicked)=\\"onTriggerClicked($event)\\"\\n                >\\n                </ui-quick-filter>\\n            </div>\\n        </div>\\n        <div class=\\"col-sm-3\\">\\n            <div class=\\"filters gap-20 d-flex flex-wrap flex-row align-items-center justify-content-end pe-2 h-100\\">\\n                <button id=\\"clearBtn\\" *ngIf=\\"filterCount > 0\\" type=\\"button\\" class=\\"btn btn-link btn-md\\" (click)=\\"clearAllFilters()\\">\\n                    <i class=\\"bi bi-arrow-clockwise\\"></i>{{\'COMMON.CLEAR_FILTERS\' | translate}}\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiGridHeaderButtonsComponent","id":"component-UiGridHeaderButtonsComponent-a0afa2b7138a787d91b8f6de0026ab4bbd6bfc44c2ee71ec6ac65d2a5ca361f57d706eb657990f8ce3f37aa34193d12921c9e2739474abb81eefcfbe7a17e6f5","file":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid-header-buttons","styleUrls":["./grid-header-buttons.component.scss"],"styles":[],"templateUrl":["./grid-header-buttons.component.html"],"viewProviders":[],"inputsClass":[{"name":"buttons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nArray of buttons to be displayed in the grid header\\n","description":"<p>Array of buttons to be displayed in the grid header</p>\\n","line":39,"type":"IUiHeaderButton[]","decorators":[]},{"name":"collapseButtons","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1210,"end":1286,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1211,"end":1222,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"description"},"comment":"<p>Default to false until bulk action feature is implemented</p>\\n"}],"rawdescription":"\\n\\nBoolean to collapse the buttons into a dropdown menu\\n\\n","description":"<p>Boolean to collapse the buttons into a dropdown menu</p>\\n","line":46,"type":"boolean","decorators":[]},{"name":"dropdownButtonLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLabel for the dropdown button\\n","description":"<p>Label for the dropdown button</p>\\n","line":51,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"setButtonClasses","args":[{"name":"button","type":"IUiHeaderButton","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"button","type":"IUiHeaderButton","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\n/**\\n * Interface for the parameters used by the grid header action buttons\\n *\\n * @todo This will be swapped out for the new interface for UiActionButtons when ready\\n * @description see also IUiActionButton and IUiActionBtn\\n */\\nexport interface IUiHeaderButton {\\n    id?: string;\\n    icon?: string;\\n    text?: string;\\n    disabled?: boolean;\\n    visible?: boolean;\\n    iconVisible?: boolean;\\n    iconPosition?: \'suffix\' | \'prefix\';\\n    color?:\\n        | \'btn-outline-primary\'\\n        | \'btn-outline-secondary\'\\n        | \'btn-outline-success\'\\n        | \'btn-outline-danger\'\\n        | \'btn-outline-warning\'\\n        | \'btn-outline-info\';\\n    divider?: boolean;\\n    tooltipText?: string;\\n    clicked?: (params: any) => void;\\n}\\n\\n@Component({\\n    selector: \'ui-grid-header-buttons\',\\n    templateUrl: \'./grid-header-buttons.component.html\',\\n    styleUrls: [\'./grid-header-buttons.component.scss\'],\\n})\\nexport class UiGridHeaderButtonsComponent {\\n    /**\\n     * Array of buttons to be displayed in the grid header\\n     */\\n    @Input() public buttons: IUiHeaderButton[] = [];\\n\\n    /**\\n     * Boolean to collapse the buttons into a dropdown menu\\n     *\\n     * @description Default to false until bulk action feature is implemented\\n     */\\n    @Input() public collapseButtons = false;\\n\\n    /**\\n     * Label for the dropdown button\\n     */\\n    @Input() public dropdownButtonLabel: string;\\n\\n    public setButtonClasses(button: IUiHeaderButton): string {\\n        let buttonClasses = \' \';\\n        buttonClasses += this.collapseButtons ? \'dropdown-item \' : \'\';\\n        buttonClasses += this.collapseButtons !== true && button.color ? button.color : \'btn-outline-primary \';\\n        buttonClasses += button.iconPosition === \'prefix\' ? \' prefix \' : \' suffix \';\\n        return buttonClasses;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".grid-header-buttons-wrapper {\\n    width: 100%;\\n    display: flex;\\n    justify-content: flex-end;\\n    gap: 0.5rem;\\n\\n    button.grid-header-button {\\n        i.bi.suffix{\\n            margin-left: 0.375rem;\\n        }\\n        i.bi.prefix{\\n            margin-right: 0.375rem;\\n        }\\n    }\\n    button.dropdown-toggle {\\n        span {\\n            padding-right: 0.5rem;\\n        }\\n        &.dropdown-label-empty {\\n            &::after {\\n                content: none;\\n                display: none;\\n            }\\n        }\\n    }\\n}\\n\\n.grid-header-dropdown {\\n    .grid-header-button.dropdown-item {\\n        position: relative;\\n        border: none;\\n        i.bi {\\n            position: absolute;\\n            left: 0.5rem;\\n            top: 0.5rem;\\n        }\\n        span {\\n            margin-left: 1rem;\\n        }\\n    }\\n}\\n","styleUrl":"./grid-header-buttons.component.scss"}],"stylesData":"","templateData":"\x3c!-- Button template for Grid Header Buttons --\x3e\\n<ng-template #gridHeaderButtons>\\n    <ng-container *ngFor=\\"let button of buttons\\">\\n        <button\\n            [id]=\\"button.id\\"\\n            *ngIf=\\"button.divider !== true && button.visible !== false\\"\\n            type=\\"button\\"\\n            class=\\"grid-header-button btn btn-sm d-inline-block\\"\\n            [ngClass]=\\"setButtonClasses(button)\\"\\n            ngbTooltip=\\"{{ button.tooltipText ?? button.text | translate }}\\"\\n            container=\\"body\\"\\n            [placement]=\\"\'top\'\\"\\n            [disabled]=\\"button.disabled === true\\"\\n            (click)=\\"button.clicked($event)\\"\\n            >\\n            <i *ngIf=\\"button.icon !== undefined && button.iconVisible !== false && button.iconPosition ===  \'prefix\'\\" class=\\"prefix bi\\" [ngClass]=\\"button.icon\\"></i>\\n            <span>{{ button.text | translate }}</span>\\n            <i *ngIf=\\"button.icon !== undefined && button.iconVisible !== false && button.iconPosition !==  \'prefix\'\\" class=\\"suffix bi\\" [ngClass]=\\"button.icon\\"></i>\\n        </button>\\n        <div *ngIf=\\"collapseButtons === true && button.divider === true\\" class=\\"dropdown-divider\\"></div>\\n    </ng-container>\\n</ng-template>\\n\x3c!-- END button template --\x3e\\n\\n<div *ngIf=\\"buttons !== undefined\\" class=\\"grid-header-buttons-wrapper\\">\\n    <ng-container *ngIf=\\"collapseButtons ?? true; then menuButtons; else inlineButtons\\"></ng-container>\\n\\n    \x3c!-- Display each button inline in grid header --\x3e\\n    <ng-template #inlineButtons>\\n        <ng-container *ngTemplateOutlet=\\"gridHeaderButtons\\"></ng-container>\\n    </ng-template>\\n\\n    \x3c!-- Display buttons within a dropdown menu --\x3e\\n    <ng-template #menuButtons>\\n        <div ngbDropdown display=\\"dynamic\\" container=\\"body\\" dropdownClass=\\"grid-header-dropdown\\">\\n            <button\\n            type=\\"button\\"\\n            class=\\"btn btn-outline-primary btn-sm d-inline-block\\"\\n            [ngClass]=\\"{\'dropdown-label-empty\': !dropdownButtonLabel || dropdownButtonLabel === \'\' }\\"\\n            container=\\"body\\"\\n            ngbDropdownToggle\\n            >\\n                <span>{{ dropdownButtonLabel | translate }}</span>\\n                <i\\n                    *ngIf=\\"!dropdownButtonLabel || dropdownButtonLabel === \'\'\\"\\n                    class=\\"bi bi-three-dots-vertical\\"\\n                ></i>\\n            </button>\\n            <div ngbDropdownMenu>\\n                <ng-container *ngTemplateOutlet=\\"gridHeaderButtons\\"></ng-container>\\n            </div>\\n        </div>\\n    </ng-template>\\n</div>\\n"},{"name":"UiGridHeaderComponent","id":"component-UiGridHeaderComponent-e874d7a7d0430f0b68fa866728e9d329ffb0d5984d1d6f16486e3a7e051a33d40422d92801132b6e82cfa989838a0e648ec328e17da913f1b4de63ec0c578df6","file":"libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-grid-header","styleUrls":["./grid-header.component.scss"],"styles":[],"templateUrl":["./grid-header.component.html"],"viewProviders":[],"inputsClass":[{"name":"collapseHeaderButtonLabel","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"collapseHeaderButtons","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"countFilteredItems","deprecated":false,"deprecationMessage":"","line":16,"type":"any","decorators":[]},{"name":"countFilteredShown","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]},{"name":"countSelectedItems","deprecated":false,"deprecationMessage":"","line":15,"type":"any","decorators":[]},{"name":"countText","deprecated":false,"deprecationMessage":"","line":14,"type":"any","decorators":[]},{"name":"getHeaderButtons","defaultValue":"(thisItemData, thisRowId): IUiHeaderButton => {\\n        return null;\\n    }","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1160,"end":1187,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":1161,"end":1166,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":1167,"end":1179,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"thisItemData"},"isNameFirst":true,"isBracketed":false},{"pos":1187,"end":1211,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":1188,"end":1193,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":1194,"end":1203,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"thisRowId"},"isNameFirst":true,"isBracketed":false},{"pos":1211,"end":1244,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":339,"tagName":{"pos":1212,"end":1219,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>IUiActionBtnConfig</p>\\n"}],"rawdescription":"\\n\\nFunction to get header buttons\\n\\n","description":"<p>Function to get header buttons</p>\\n","line":40,"type":"(thisItemData: any, thisRowId: any) => IUiHeaderButton","decorators":[]},{"name":"gridHeaderButtons","defaultValue":"[]","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":965,"end":1033,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":966,"end":970,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"todo"},"comment":"<p>Can be swapped out with new interface buttons when ready</p>\\n"}],"rawdescription":"\\n\\nArray of header buttons to be displayed in the grid header\\n\\n","description":"<p>Array of header buttons to be displayed in the grid header</p>\\n","line":31,"type":"IUiHeaderButton[]","decorators":[]},{"name":"hasAnyFilter","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"infoText","deprecated":false,"deprecationMessage":"","line":13,"type":"any","decorators":[]},{"name":"titleText","deprecated":false,"deprecationMessage":"","line":12,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"gridHeaderNumber","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"headerEle","deprecated":false,"deprecationMessage":"","type":"HTMLElement","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"isTooltipDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"isEllipsisActive","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":60}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, HostListener, Input, OnInit } from \'@angular/core\';\\n// Interfaces\\nimport { IUiHeaderButton } from \'../grid-header-buttons/grid-header-buttons.component\';\\n\\n@Component({\\n    selector: \'ui-grid-header\',\\n    templateUrl: \'./grid-header.component.html\',\\n    styleUrls: [\'./grid-header.component.scss\'],\\n})\\nexport class UiGridHeaderComponent implements OnInit, AfterViewInit {\\n    @Input() public titleText;\\n    @Input() public infoText;\\n    @Input() public countText;\\n    @Input() public countSelectedItems;\\n    @Input() public countFilteredItems;\\n    @Input() public countFilteredShown;\\n    @Input() public hasAnyFilter;\\n    @Input() public collapseHeaderButtons: boolean;\\n    @Input() public collapseHeaderButtonLabel: string;\\n\\n    public gridHeaderNumber = 0;\\n    public isTooltipDisabled = true;\\n    public headerEle: HTMLElement;\\n\\n    /**\\n     * Array of header buttons to be displayed in the grid header\\n     *\\n     * @todo Can be swapped out with new interface buttons when ready\\n     */\\n    @Input() public gridHeaderButtons: IUiHeaderButton[] = [];\\n\\n    /**\\n     * Function to get header buttons\\n     *\\n     * @param thisItemData\\n     * @param thisRowId\\n     * @returns IUiActionBtnConfig\\n     */\\n    @Input() public getHeaderButtons = (thisItemData, thisRowId): IUiHeaderButton => {\\n        return null;\\n    };\\n\\n    public ngOnInit(): void {\\n        //Adds class to ensure correct positioning of grid when header is shown\\n        setTimeout(() => {\\n            document.querySelector(\'.ag-root\').classList.add(\'grid-header-shown\');\\n        });\\n    }\\n\\n    //Checks to see if header title has ellipsed text on page load\\n    //set Timeout lets element fully load before check\\n    public ngAfterViewInit(): void {\\n        setTimeout(() => {\\n            this.isEllipsisActive();\\n        }, 100);\\n    }\\n\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        this.headerEle = document.getElementById(\'header-title\');\\n        this.isEllipsisActive();\\n    }\\n\\n    //Checks to see if title has ellipsed text\\n    //If true, shows tooltip of full title\\n    public isEllipsisActive() {\\n        this.headerEle = document.getElementById(\'header-title\');\\n\\n        if (this.headerEle && this.headerEle.offsetWidth < this.headerEle.scrollWidth) {\\n            this.isTooltipDisabled = false;\\n        } else {\\n            this.isTooltipDisabled = true;\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.grid-header-content {\\n    border: 1px solid $gray;\\n    border-bottom: none;\\n    border-top-right-radius: 4px;\\n    border-top-left-radius: 4px;\\n    text-overflow: ellipsis;\\n    background-color: $white;\\n    align-items: center;\\n    padding: 0px 24px 0px 24px;\\n    gap: 8px;\\n    height: 56px;\\n    min-height: 56px;\\n    display: flex;\\n    justify-content: space-between;\\n\\n    .grid-header-content-right,\\n    .grid-header-content-left {\\n        flex: 1 1 auto;\\n        display: flex;\\n    }\\n\\n    .grid-header-content-left {\\n        justify-content: flex-start;\\n        gap: 0.5rem;\\n    }\\n\\n    .grid-header-content-right {\\n        justify-content: flex-end;\\n    }\\n\\n    .header-count {\\n        color: $gray-700;\\n    }\\n}\\n\\n.header-title {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    display: inline-block;\\n}\\n","styleUrl":"./grid-header.component.scss"}],"stylesData":"","implements":["OnInit","AfterViewInit"],"templateData":"<div *ngIf=\\"titleText !== undefined\\" id=\\"grid-header\\" class=\\"grid-header\\">\\n    <div class=\\"grid-header-content ag-header\\">\\n        \x3c!-- LEFT SIDE --\x3e\\n        <div class=\\"grid-header-content-left\\">\\n            <div\\n                id=\\"header-title\\"\\n                class=\\"header-title\\"\\n                container=\\"body\\"\\n                ngbTooltip=\\"{{ titleText | translate }}\\"\\n                [disableTooltip]=\\"isTooltipDisabled\\"\\n                [placement]=\\"\'top\'\\"\\n            >\\n                {{ titleText | translate }}\\n            </div>\\n            \x3c!-- Please keep code for now; changing this to only show selected count, not the filtered count\\n            <ng-container *ngIf=\\"hasAnyFilter === true\\">\\n                <div *ngIf=\\"(countFilteredShown !== undefined && countFilteredShown > 0) && countSelectedItems <= 0\\" class=\\"header-count\\">\\n                    ({{countFilteredShown}} {{ \'COMMON.AG_GRID.OF\' | translate }} {{ countText }})\\n                </div>\\n                <div *ngIf=\\"countSelectedItems !== undefined && countSelectedItems > 0\\" class=\\"header-count\\">\\n                    ({{countSelectedItems}} of {{ countFilteredItems }} selected)\\n                </div>\\n            </ng-container>\\n            <ng-container *ngIf=\\"hasAnyFilter === false\\">\\n            </ng-container>\\n            --\x3e\\n                <div *ngIf=\\"countSelectedItems !== undefined && countSelectedItems > 0\\" class=\\"header-count\\">\\n                    ({{countSelectedItems}} of {{ countText }} selected)\\n                    \x3c!-- {{ \'GRID.MULTISELECT_SELECTED\' | translate: { selected: countSelectedItems, total: countText } }} --\x3e\\n                </div>\\n                <div *ngIf=\\"countSelectedItems === undefined || countSelectedItems === 0\\" class=\\"header-count\\">({{ countText }})</div>\\n            <div>\\n                <i\\n                    *ngIf=\\"infoText !== undefined\\"\\n                    class=\\"bi bi-question-circle-fill bi-sm\\"\\n                    placement=\\"top\\"\\n                    ngbTooltip=\\"{{ infoText | translate }}\\"\\n                    container=\\"body\\"\\n                ></i>\\n            </div>\\n        </div>\\n\\n        \x3c!-- RIGHT SIDE --\x3e\\n        <div class=\\"grid-header-content-right\\">\\n            <ui-grid-header-buttons\\n                class=\\"grid-header-buttons\\"\\n                [buttons]=\\"gridHeaderButtons\\"\\n                [collapseButtons]=\\"collapseHeaderButtons\\"\\n                [dropdownButtonLabel]=\\"collapseHeaderButtonLabel\\"\\n            ></ui-grid-header-buttons>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiHeaderDropDownComponent","id":"component-UiHeaderDropDownComponent-56b96264645a8702ce6f5135fc7fb9a4648f5f8a865e4ccc1daf2aa300afc6897df4d9c8b5fd3786834f32caef2ad52554bf756c779a81b204c38e5672ae288a","file":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-header-drop-down","styleUrls":["./drop-down.component.scss"],"styles":[],"templateUrl":["./drop-down.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","defaultValue":"{} as IUiDropdownConfig","deprecated":false,"deprecationMessage":"","line":22,"type":"IUiDropdownConfig","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"isOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"changeSelectedOption","args":[{"name":"option","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onOpenChange","args":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { IUiPageHeaderItem } from \'@lib/modules/layout/services/page-header-service/page-header.service\';\\n\\nexport interface IUiDropdownConfig {\\n    id: string;\\n    options: Array<IUiPageHeaderItem>;\\n    selectedItem: IUiPageHeaderItem;\\n    disabled: boolean;\\n    type?: string;\\n    tooltip?: string;\\n    allCaps?: boolean;\\n    placeHolderText?: string;\\n    onChange?: (e: any) => void;\\n}\\n\\n@Component({\\n    selector: \'ui-header-drop-down\',\\n    templateUrl: \'./drop-down.component.html\',\\n    styleUrls: [\'./drop-down.component.scss\'],\\n})\\nexport class UiHeaderDropDownComponent implements OnInit {\\n    @Input() public config: IUiDropdownConfig = {} as IUiDropdownConfig;\\n    public isOpen = false;\\n\\n    constructor() {}\\n\\n    public ngOnInit(): void {\\n        if (this.config !== undefined && this.config.selectedItem === undefined && this.config.options !== undefined) {\\n            this.config.selectedItem = this.config.options[0];\\n        }\\n    }\\n\\n    public onOpenChange(state: boolean) {\\n        this.isOpen = state;\\n    }\\n\\n    public changeSelectedOption(option: any) {\\n        this.config.selectedItem = option;\\n        if (this.config.onChange !== undefined) {\\n            this.config.onChange(option);\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\n@import \'../../../../../../../assets/styles/custom-variables.scss\';\\n\\n// Note: These dropdown styles will be replace by global ui-dropdown styles when the variation available.\\n\\n.dropdown-menu {\\n    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.15));\\n}\\n\\n.dropdown-toggle::after {\\n    margin-left: 0.6rem;\\n}\\n\\n.btn-outline-primary {\\n    color: $body-color;\\n    border-color: $gray-400;\\n}\\n\\n.btn-sm {\\n    padding: 1px 20px;\\n    padding-right: 10px;\\n}\\n\\n.dropdown-item {\\n    &.selected-item {\\n        background-color: $primary-050;\\n        font-weight: 700;\\n\\n        &.active{\\n            background-color: $primary-100;\\n        }\\n    }\\n    &.active, &:active {\\n        background-color: $primary-100;\\n        color: inherit;\\n    }\\n}\\n","styleUrl":"./drop-down.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":23},"implements":["OnInit"],"templateData":"<div *ngIf=\\"config !== undefined\\" ngbDropdown class=\\"d-inline-block\\" [placement]=\\"\'bottom-start\'\\" (openChange)=\\"onOpenChange($event)\\">\\n    \x3c!-- <button\\n        id=\\"languageSwitcherBtn\\"\\n        type=\\"button\\"\\n        class=\\"btn btn-outline-primary language-switcher-btn d-flex align-items-center justify-content-center btn-sm\\"\\n        ngbDropdownToggle\\n        container=\\"body\\"\\n        [placement]=\\"\'top\'\\"\\n        [ngbTooltip]=\\"config.tooltip | translate\\"\\n        [ngClass]=\\"{\'dropdown-toggle-active\': isOpen === true, \'text-uppercase\': this.config.allCaps === true}\\"\\n        [disabled]=\\"config.disabled\\">\\n        <div>\\n            <span *ngIf=\\"config.selectedItem !== null && config.selectedItem.type !== undefined\\" class=\\"dot sm me-2\\" [ngClass]=\\"config.selectedItem.type\\"></span>\\n            <span *ngIf=\\"config.selectedItem !== null\\">\\n                <ng-container *ngIf=\\"config.selectedItem.labelParams !== undefined\\">{{config.selectedItem.label | translate: config.selectedItem.labelParams }}</ng-container>\\n                <ng-container *ngIf=\\"config.selectedItem.labelParams === undefined\\">{{config.selectedItem.label | translate }}</ng-container>\\n            </span>\\n            <span *ngIf=\\"config.selectedItem === null\\">\\n                <ng-container *ngIf=\\"config.placeHolderText !== undefined\\">{{config.placeHolderText | translate}}</ng-container>\\n                <ng-container *ngIf=\\"config.placeHolderText === undefined\\">{{\'COMMON.PLEASE_SELECT\' | translate}}</ng-container>\\n            </span>\\n        </div>\\n    </button> --\x3e\\n    \x3c!-- <div ngbDropdownMenu>\\n        <button [id]=\\"\'languageSwitcherOptionBtn-\' + i\\"\\n            class=\\"w-100 d-flex justify-content-between align-items-center\\"\\n            ngbDropdownItem\\n            *ngFor=\\"let option of config.options; let i = index\\"\\n            [ngClass]=\\"{\'selected-item\': option === config.selectedItem}\\"\\n            (click)=\\"changeSelectedOption(option)\\"\\n            [disabled]=\\"option.disabled\\"\\n            >\\n            <div>\\n                <span *ngIf=\\"option.type !== undefined\\" class=\\"dot sm me-2\\" [ngClass]=\\"option.type\\"></span>\\n                <span [ngClass]=\\"{\'text-uppercase\': this.config.allCaps === true}\\" >{{option.label | translate: option.labelParams}}</span>\\n            </div>\\n        </button>\\n    </div> --\x3e\\n</div>"},{"name":"UiLanguageSwitcherComponent","id":"component-UiLanguageSwitcherComponent-36193d965810873cc33d07bad862935ba238048d2d1d2dd0a87dd6d9d30ff25cf3272f71eb6dde081949a2fd2be0d15c4021af942b493369228e3e63deacfe85","file":"libs/ui/src/lib/modules/layout/components/language-switcher/language-switcher.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-language-switcher","styleUrls":["./language-switcher.component.scss"],"styles":[],"templateUrl":["./language-switcher.component.html"],"viewProviders":[],"inputsClass":[{"name":"selectedLang","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"isOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"languageOptions","defaultValue":"[\\n        { label: \'Deutsch\', labelCode: AcpSupportedLanguesLongCodeEnum.de, value: AcpSupportedLanguesEnum.de, disabled: false },\\n        { label: \'English\', labelCode: AcpSupportedLanguesLongCodeEnum.en, value: AcpSupportedLanguesEnum.en, disabled: false },\\n        { label: \'Español\', labelCode: AcpSupportedLanguesLongCodeEnum.es, value: AcpSupportedLanguesEnum.es, disabled: false },\\n        { label: \'Français\', labelCode: AcpSupportedLanguesLongCodeEnum.fr, value: AcpSupportedLanguesEnum.fr, disabled: false },\\n        { label: \'日本語\', labelCode: AcpSupportedLanguesLongCodeEnum.ja, value: AcpSupportedLanguesEnum.ja, disabled: false },\\n        { label: \'Português\', labelCode: AcpSupportedLanguesLongCodeEnum.pt, value: AcpSupportedLanguesEnum.pt, disabled: false },\\n        { label: \'中文\', labelCode: AcpSupportedLanguesLongCodeEnum.zh, value: AcpSupportedLanguesEnum.zh, disabled: false },\\n        { label: \'한국인\', labelCode: AcpSupportedLanguesLongCodeEnum.ko, value: AcpSupportedLanguesEnum.ko, disabled: false },\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"selectedOption","defaultValue":"this.languageOptions[1]","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123]}],"methodsClass":[{"name":"changeSelectedOption","args":[{"name":"option","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"option","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initializeLocalization","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onOpenChange","args":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n// RxJs\\nimport { Subject, take, takeUntil } from \'rxjs\';\\n// Enums\\nimport { AcpSupportedLanguesEnum, AcpSupportedLanguesLongCodeEnum } from \'@app/enums/supportedLanguages.enum\';\\nimport { UiUserService } from \'@lib/services/user\';\\n// Services\\nimport { TranslateService } from \'@ngx-translate/core\';\\n\\n@Component({\\n    selector: \'ui-language-switcher\',\\n    templateUrl: \'./language-switcher.component.html\',\\n    styleUrls: [\'./language-switcher.component.scss\'],\\n})\\nexport class UiLanguageSwitcherComponent implements OnInit {\\n    @Input() public selectedLang = \'\';\\n\\n    // Language Codes\\n    // fr = fra = french\\n    // zh = zho = chinese\\n    // de = deu = german\\n    // ja = jpn = japanese\\n    // pt = por = portuguese\\n    // es = esp = spanish\\n    public languageOptions = [\\n        { label: \'Deutsch\', labelCode: AcpSupportedLanguesLongCodeEnum.de, value: AcpSupportedLanguesEnum.de, disabled: false },\\n        { label: \'English\', labelCode: AcpSupportedLanguesLongCodeEnum.en, value: AcpSupportedLanguesEnum.en, disabled: false },\\n        { label: \'Español\', labelCode: AcpSupportedLanguesLongCodeEnum.es, value: AcpSupportedLanguesEnum.es, disabled: false },\\n        { label: \'Français\', labelCode: AcpSupportedLanguesLongCodeEnum.fr, value: AcpSupportedLanguesEnum.fr, disabled: false },\\n        { label: \'日本語\', labelCode: AcpSupportedLanguesLongCodeEnum.ja, value: AcpSupportedLanguesEnum.ja, disabled: false },\\n        { label: \'Português\', labelCode: AcpSupportedLanguesLongCodeEnum.pt, value: AcpSupportedLanguesEnum.pt, disabled: false },\\n        { label: \'中文\', labelCode: AcpSupportedLanguesLongCodeEnum.zh, value: AcpSupportedLanguesEnum.zh, disabled: false },\\n        { label: \'한국인\', labelCode: AcpSupportedLanguesLongCodeEnum.ko, value: AcpSupportedLanguesEnum.ko, disabled: false },\\n    ];\\n\\n    public selectedOption = this.languageOptions[1]; // English\\n    public isOpen = false;\\n\\n    public constructor(private _translateService: TranslateService) {}\\n\\n    public ngOnInit(): void {\\n        this.initializeLocalization();\\n    }\\n\\n    public initializeLocalization() {\\n        let languageOptionFound;\\n        const navigatorLanguageSmallCode = window.navigator.language.slice(0, 2);\\n        const userLang = localStorage.getItem(\'userLang\');\\n\\n        // If userLang is in local storage\\n        if (userLang !== null) {\\n            this._translateService.use(userLang);\\n            this.selectedLang = userLang;\\n            languageOptionFound = this.languageOptions.find((x) => x.value === this.selectedLang);\\n            this.selectedOption = languageOptionFound;\\n        }\\n        // If not userLang in local storage, use navigator language\\n        else if (this.languageOptions.find((x) => x.value === navigatorLanguageSmallCode) !== undefined) {\\n            languageOptionFound = this.languageOptions.find((x) => x.value === navigatorLanguageSmallCode);\\n            this.selectedOption = languageOptionFound;\\n        }\\n        // If naviator language not in supported languages list, use english.\\n        else {\\n            languageOptionFound = this.languageOptions.find((x) => x.value === \'en\');\\n            this.selectedOption = languageOptionFound;\\n        }\\n    }\\n\\n    public changeSelectedOption(option) {\\n        this.selectedOption = option;\\n        localStorage.setItem(\'userLang\', this.selectedOption.value);\\n        this._translateService.use(this.selectedOption.value);\\n\\n        // Commented for now but may be needed eventually\\n        // this._userService\\n        //     .savePreferredLanguage(this.selectedOption.labelCode)\\n        //     .pipe(take(1))\\n        //     .subscribe(() => {\\n        //         localStorage.setItem(\'userLang\', this.selectedOption.value);\\n        //         this._translateService.use(this.selectedOption.value);\\n        //     });\\n    }\\n\\n    public onOpenChange(state: boolean) {\\n        this.isOpen = state;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.dropdown-menu {\\n    filter: drop-shadow(0 4px 8px rgba(0,0,0,0.15));\\n}\\n\\n.btn {\\n    padding: inherit;\\n    border-radius: 2px;\\n\\n    &.btn-outline-secondary:hover{\\n        color: $secondary;\\n        background-color: $white;\\n    }\\n\\n    &.btn-outline-secondary:focus{\\n        box-shadow: none;\\n    }\\n\\n    .btn-code-text {\\n        width: 26px;\\n    }\\n}\\n\\n.language-switcher-btn {\\n    width: 52px;\\n    height: 26px;\\n    font-size: 12px;\\n    line-height: 12px;\\n}\\n\\n.dropdown-item {\\n    color: $gray-900;\\n    height: 40px;\\n\\n    .code{\\n        font-size: 0.75rem;\\n    }\\n\\n    &.selected-item {\\n        background-color: $primary-050;\\n        font-weight: 700;\\n\\n        &.active{\\n            background-color: $primary-100;\\n        }\\n\\n        .code{\\n            font-weight: normal;\\n        }\\n    }\\n\\n    &.active, &:active {\\n        background-color: $primary-100;\\n        color: inherit;\\n    }\\n}\\n\\n .dropdown-toggle::after {\\n    display: inline-block;\\n    content: \\"\\";\\n    background-image: url(\'data:image/svg+xml,<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"16\\" height=\\"16\\" fill=\\"currentColor\\" class=\\"bi bi-chevron-down\\" viewBox=\\"0 0 16 16\\"><path fill-rule=\\"evenodd\\" d=\\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\\"/></svg>\');\\n    background-repeat: no-repeat;\\n    background-size: 0.7rem 0.7rem;\\n    width: 0.7rem;\\n    height: 0.7rem;\\n    padding-left: 5px;\\n    border: none;\\n    transition: 150ms ease-in-out;\\n    transform: rotate(0deg);\\n}\\n\\n.dropdown-toggle-active::after {\\n    transition: 250ms ease-in-out;\\n    transform: rotate(180deg);\\n}\\n","styleUrl":"./language-switcher.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":38,"modifierKind":[123],"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div ngbDropdown class=\\"d-inline-block\\" [placement]=\\"\'bottom-end\'\\" (openChange)=\\"onOpenChange($event)\\">\\n    <button\\n        id=\\"languageSwitcherBtn\\"\\n        type=\\"button\\"\\n        class=\\"btn btn-outline-secondary text-uppercase language-switcher-btn d-flex align-items-center justify-content-center\\"\\n        ngbDropdownToggle\\n        container=\\"body\\"\\n        [placement]=\\"\'bottom\'\\"\\n        [ngbTooltip]=\\"\'Change language\'\\"\\n        [ngClass]=\\"{\'dropdown-toggle-active\': isOpen === true}\\" >\\n        <div class=\\"btn-code-text\\">{{selectedOption.labelCode}}</div>\\n    </button>\\n    <div ngbDropdownMenu>\\n        <button [id]=\\"\'languageSwitcherOptionBtn-\' + i\\"\\n            class=\\"w-100 d-flex justify-content-between align-items-center\\"\\n            ngbDropdownItem\\n            *ngFor=\\"let option of languageOptions; let i = index\\"\\n            (click)=\\"changeSelectedOption(option)\\"\\n            [ngClass]=\\"{\'selected-item\': option === selectedOption}\\">\\n            <div>{{option.label}}</div>\\n            <div class=\\"code text-uppercase\\">{{option.labelCode}}</div>\\n        </button>\\n    </div>\\n</div>\\n"},{"name":"UiLayout2Component","id":"component-UiLayout2Component-9acea89e33bdc876fe692409427da86675d590a84e7c36253c17780a765f7ed31ae5dd52849ff2f129184294e642ab2ce5a01d2197eb0e7ed7646a6d1ba42328","file":"libs/ui/src/lib/modules/layout2/components/layout2/layout2.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-layout2","styleUrls":["./layout2.component.scss"],"styles":[],"templateUrl":["./layout2.component.html"],"viewProviders":[],"inputsClass":[{"name":"logoutRedirectUri","deprecated":false,"deprecationMessage":"","line":35,"type":"string","decorators":[]},{"name":"subsidairyList","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":36,"type":"IUiDropdownPlusOption[]","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_ngUnsubscribe$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76,"modifierKind":[121,144]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"ActionItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":72,"modifierKind":[123]},{"name":"alignLeft","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"clientLogoUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"currentLang","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"featureFlagService","deprecated":false,"deprecationMessage":"","type":"UiFeatureFlagService","optional":false,"description":"","line":82,"modifierKind":[123]},{"name":"forceMenuClose","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"isAuthenticated","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":75,"modifierKind":[121]},{"name":"isFirstLogin","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"isHandset","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"isLoggedIn","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[123]},{"name":"isProductionEnv","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"isSupplier","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"isUserInternalRole","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"","line":80,"modifierKind":[123]},{"name":"linkBtnType","defaultValue":"UiButtonTypeEnum.LINK","deprecated":false,"deprecationMessage":"","type":"UiButtonTypeEnum","optional":false,"description":"","line":68,"modifierKind":[123]},{"name":"mdBtnSize","defaultValue":"UiButtonSizeEnum.MEDIUM","deprecated":false,"deprecationMessage":"","type":"UiButtonSizeEnum","optional":false,"description":"","line":66,"modifierKind":[123]},{"name":"menuButtonTooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"menuItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiMenuItem>","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"outlineBtnType","defaultValue":"UiButtonTypeEnum.OUTLINE_PRIMARY","deprecated":false,"deprecationMessage":"","type":"UiButtonTypeEnum","optional":false,"description":"","line":69,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"","line":81,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":79,"modifierKind":[123]},{"name":"pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"profileManager","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"shouldLoadSubsidiarySelector","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":73,"modifierKind":[123]},{"name":"showAlert","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"showAppContainer","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"showMargin","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"showSideNav","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"smallMenu","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"smBtnSize","defaultValue":"UiButtonSizeEnum.SMALL","deprecated":false,"deprecationMessage":"","type":"UiButtonSizeEnum","optional":false,"description":"","line":67,"modifierKind":[123]},{"name":"subsidiarySelector","deprecated":false,"deprecationMessage":"","type":"UiSubsidiarySelectorComponent","optional":false,"description":"","line":37,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'subsidiarySelector\'"}],"modifierKind":[123]},{"name":"supplierHelpCenterUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"tabItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTab>","optional":false,"description":"","line":70,"modifierKind":[123]},{"name":"termsOfServiceUrl","defaultValue":"\'https://www.assent.com/terms-of-use-supplier-portal/\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":58,"modifierKind":[123]},{"name":"toolItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":71,"modifierKind":[123]},{"name":"tooltipDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"userEmail","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"userEmailFirstLetter","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]}],"methodsClass":[{"name":"disableTooltip","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":261,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"hasPermission","args":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":197,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"permission","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initializePendoIfReady","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":312,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"isShowAlertTrue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":304,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"isValidUri","args":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":323,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123,131]},{"name":"onLogoutClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":244,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onManageAssentAccountClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":249,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onScroll","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":274,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSubsidairyChanged","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":"","modifierKind":[123,131],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setFirstLoginFalse","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":238,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setProfile","args":[{"name":"user","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":278,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"user","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setTooltipText","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":228,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPendo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":201,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpen","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":224,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpenWhenDropdownClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":254,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavSize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":219,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient } from \'@angular/common/http\';\\nimport { Component, Input, OnInit, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { NavigationEnd, Router } from \'@angular/router\';\\n// Auth0\\nimport { AuthService } from \'@auth0/auth0-angular\';\\n// RxJS\\nimport { Observable, Subject, filter, map, switchMap, takeUntil, tap } from \'rxjs\';\\n// NGX Translate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Services\\nimport { UiAuthService } from \'@lib/modules/authentification/auth0/services/auth.service\';\\nimport { UiLayoutService } from \'@lib/services/layout\';\\nimport { UiFeatureFlagService } from \'@lib/modules/feature-flags/services/feature-flag.service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiPendoService } from \'@lib/services/analytics/pendo\';\\nimport { UiPageHeaderService } from \'../../services/page-header-service/page-header.service\';\\nimport { UiPageFooterService } from \'../../services/page-footer-service/page-footer.service\';\\n// Components\\nimport { UiSubsidiarySelectorComponent } from \'../subsidiary-selector/subsidiary-selector.component\';\\n// Enums\\nimport { UiButtonSizeEnum } from \'@lib/modules/button/enums/action-button-size.enum\';\\nimport { UiButtonTypeEnum } from \'@lib/modules/button/enums/action-button-type.enum\';\\n// Interfaces\\nimport { IUiDropdownPlusOption } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\nimport { IUiSubHeaderTab, IUiSubHeaderTool } from \'@lib/services/layout/header/header.service\';\\nimport { IUiMenuItem } from \'@lib/services/menu/menu.service\';\\n\\n@Component({\\n    selector: \'ui-layout2\',\\n    templateUrl: \'./layout2.component.html\',\\n    styleUrls: [\'./layout2.component.scss\'],\\n})\\nexport class UiLayout2Component implements OnInit {\\n    @Input() public logoutRedirectUri?: string;\\n    @Input() public subsidairyList: IUiDropdownPlusOption[] = [];\\n    @ViewChild(\'subsidiarySelector\') public subsidiarySelector: UiSubsidiarySelectorComponent;\\n\\n    public actionBtnsRef: TemplateRef<any>;\\n    public pageTitle = \'\';\\n    public isHandset = false;\\n    public showSideNav = true;\\n    public smallMenu = false;\\n    public forceMenuClose = false;\\n    public showAppContainer = false;\\n    public alignLeft = false;\\n    public tooltipDisabled = false;\\n    public menuButtonTooltipText = \'\';\\n    public userEmail;\\n    public userEmailFirstLetter;\\n    public clientLogoUrl = \'\';\\n    public currentLang = \'\';\\n    public isSupplier = false;\\n    public isFirstLogin = false;\\n    public isUserInternalRole = false;\\n    public showAlert = false;\\n    public supplierHelpCenterUrl = \'\';\\n    public termsOfServiceUrl = \'https://www.assent.com/terms-of-use-supplier-portal/\';\\n    public profileManager = true;\\n    public showMargin = true;\\n\\n    public menuItems: Array<IUiMenuItem> = [];\\n    public isProductionEnv = false;\\n    public isLoggedIn = false;\\n\\n    public mdBtnSize: UiButtonSizeEnum = UiButtonSizeEnum.MEDIUM;\\n    public smBtnSize: UiButtonSizeEnum = UiButtonSizeEnum.SMALL;\\n    public linkBtnType: UiButtonTypeEnum = UiButtonTypeEnum.LINK;\\n    public outlineBtnType: UiButtonTypeEnum = UiButtonTypeEnum.OUTLINE_PRIMARY;\\n    public tabItems: Array<IUiSubHeaderTab> = [];\\n    public toolItems: Array<IUiSubHeaderTool> = [];\\n    public ActionItems: Array<IUiSubHeaderTool> = [];\\n    public shouldLoadSubsidiarySelector = false;\\n\\n    private isAuthenticated = false;\\n    private readonly _ngUnsubscribe$ = new Subject();\\n\\n    constructor(\\n        public pageHeaderService: UiPageHeaderService,\\n        public layoutService: UiLayoutService,\\n        public pageFooterService: UiPageFooterService,\\n        public featureFlagService: UiFeatureFlagService,\\n        private _httpClient: HttpClient,\\n        private _translateService: TranslateService,\\n        private _router: Router,\\n        private _configurationService: UiConfigurationService,\\n        private _auth0Service: AuthService,\\n        private _authService: UiAuthService,\\n        private _pendoService: UiPendoService\\n    ) {}\\n\\n    public async ngOnInit() {\\n        this.shouldLoadSubsidiarySelector = false;\\n\\n        // Manage layout elements based on the user\'s authentication status\\n        // TODO: Manage user authentication status in the user service?\\n        this._auth0Service.isAuthenticated$\\n            .pipe(\\n                takeUntil(this._ngUnsubscribe$),\\n                tap((isAuthenticated: boolean) => {\\n                    this.isAuthenticated = isAuthenticated;\\n                }),\\n                filter((isAuthenticated: boolean) => isAuthenticated), // Only continue if authenticated\\n                switchMap(() => this._auth0Service.user$),\\n                tap((user: any) => {\\n                    this.userEmail = user.email;\\n                    this.setProfile(user);\\n                    this.initializePendoIfReady();\\n                })\\n            )\\n            .subscribe();\\n\\n        this.isProductionEnv = this._configurationService.environmentVariables.production;\\n        this.pageHeaderService.pageTitle = \'Welcome to Assent\';\\n        this.pageHeaderService.showPageHeader = false;\\n        this.termsOfServiceUrl = this._configurationService.appConfig.links.termsOfService;\\n\\n        // Layout Service Events START\\n        this.layoutService.onCloseSideNav.subscribe(() => {\\n            this.forceMenuClose = true;\\n            this.showSideNav = false;\\n        });\\n\\n        this.layoutService.showMargins = this.showMargin;\\n        this.layoutService.showContainer = this.showAppContainer;\\n        this.layoutService.alignLeft = this.alignLeft;\\n\\n        this._authService.permissionsLoaded$.subscribe((loaded) => {\\n            if (loaded) {\\n                setTimeout(() => {\\n                    this.menuItems = this.layoutService.appMenu as IUiMenuItem[];\\n                    this.isLoggedIn = loaded && this.isAuthenticated;\\n                });\\n            }\\n        });\\n\\n        this._authService.subsidiariesLoaded$.subscribe((subsidiaries) => {\\n            try {\\n                if (subsidiaries && subsidiaries.length > 0) {\\n                    // Get the stored activeOrgGuid from local storage\\n                    const currentOrgGuid = this._authService.activeOrgGuid;\\n\\n                    // Map subsidiaries and set the \'value\' (selected state) based on storedOrgGuid\\n                    this.subsidairyList = subsidiaries.map((subsidiary) => {\\n                        return {\\n                            label: subsidiary.name,\\n                            value: subsidiary.partyGuid === currentOrgGuid, // Select if it matches storedOrgGuid\\n                            id: subsidiary.partyGuid,\\n                            disabled: false,\\n                            data: subsidiary.name,\\n                        };\\n                    });\\n\\n                    this.shouldLoadSubsidiarySelector = true;\\n\\n                    setTimeout(() => {\\n                        if (currentOrgGuid) {\\n                            // Find the index of the stored subsidiary\\n                            const indexToSelect = this.subsidairyList.findIndex((subsidiary) => subsidiary.id === currentOrgGuid);\\n                            if (indexToSelect !== -1) {\\n                                // Select the stored subsidiary\\n                                this.subsidiarySelector.selectOptionByIndex(indexToSelect);\\n                            } else {\\n                                // If storedOrgGuid not found, select the first subsidiary\\n                                this.subsidiarySelector.selectOptionByIndex(0);\\n                            }\\n                        } else {\\n                            // No storedOrgGuid, select the first subsidiary\\n                            this.subsidiarySelector.selectOptionByIndex(0);\\n                        }\\n                    }, 100);\\n                }\\n            } catch (error) {\\n                console.error(\' Error -> Subsidiaries not loaded.\');\\n            }\\n        });\\n    }\\n\\n    public async onSubsidairyChanged($event) {\\n        // If the selector component is loaded and selected subsidiary is different from the current one\\n        if (this.shouldLoadSubsidiarySelector && this._authService.activeOrgGuid !== this.subsidiarySelector.selectedOption.id) {\\n            // Show loading screen\\n            const loadingScreen: HTMLElement = document.getElementById(\'loading-screen\');\\n            loadingScreen.classList.remove(\'d-none\');\\n            const aspRoot: HTMLElement = document.getElementById(\'asp-root\');\\n            aspRoot.classList.add(\'d-none\');\\n\\n            // Navigate to application home\\n            this._router.navigate([\'\']);\\n            this._authService.activeOrgGuid = this.subsidiarySelector.selectedOption.id;\\n\\n            // Subsidiary changed - now call initializeApp to reload permissions\\n            this._authService.initializeApp();\\n        }\\n    }\\n\\n    public hasPermission(permission: string): boolean {\\n        return this._authService.hasPermission(permission);\\n    }\\n\\n    public setupPendo() {\\n        // If user is authenticated and Pendo key is set in config then initialize Pendo\\n        if (this.isAuthenticated && this._pendoService.pendoApiKey) {\\n            this._pendoService.initVisitorInfo();\\n        }\\n    }\\n\\n    // Logout the user\\n    public logout(): void {\\n        // Temporary Logout capability for Pilot\\n        if (this.isValidUri(this.logoutRedirectUri)) {\\n            if (this.isAuthenticated && this._pendoService.pendoApiKey) {\\n                this._pendoService.anonymizeVisitorInfo();\\n            }\\n            this._auth0Service.logout({ logoutParams: { returnTo: this.logoutRedirectUri } });\\n        }\\n    }\\n\\n    public toggleSideNavSize() {\\n        this.smallMenu = !this.smallMenu;\\n        // this.layoutService.onOpenSideNav.emit(this.smallMenu);\\n    }\\n\\n    public toggleSideNavOpen() {\\n        // this.layoutService.toogleSideNav();\\n    }\\n\\n    public setTooltipText() {\\n        if (this.smallMenu) {\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.EXPAND_MENU\');\\n        } else {\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.COLLAPSE_MENU\');\\n        }\\n        return this.menuButtonTooltipText;\\n    }\\n\\n    //Sets the first login to false after pilot alert is dismissed - alert will not show again\\n    public setFirstLoginFalse() {\\n        this.isFirstLogin = false;\\n        localStorage.setItem(\'isFirstLogin\', \'false\');\\n        this.layoutService.updateLayout();\\n    }\\n\\n    public onLogoutClick() {\\n        // this._authenticationService.logout(true);\\n        this.logout();\\n    }\\n\\n    public onManageAssentAccountClick() {\\n        this._router.navigate([\'/profile-manager\']);\\n    }\\n\\n    // When sidenav is collapsed, child items are hidden. When dropdown icon is clicked, sidenav expands to show children\\n    public toggleSideNavOpenWhenDropdownClicked() {\\n        if (this.smallMenu) {\\n            this.smallMenu = !this.smallMenu;\\n        }\\n    }\\n\\n    // Only enable tooltips when sidenav is collapsed\\n    public disableTooltip() {\\n        if (this.smallMenu) {\\n            this.tooltipDisabled = false;\\n        } else {\\n            this.tooltipDisabled = true;\\n        }\\n        return this.tooltipDisabled;\\n    }\\n\\n    // public openModalFeedback() {\\n    //     this._modalService.open(UiFeedbackModalComponent, new UiModalConfig());\\n    // }\\n\\n    public onScroll($event) {\\n        this.layoutService.onScroll.emit($event);\\n    }\\n\\n    private setProfile(user: any) {\\n        if (user !== null && user.email !== null && user.email !== undefined) {\\n            this.userEmailFirstLetter = user.email.charAt(0); // TODO: does this need to be 2 chars?\\n\\n            // Checks if user is internal based on the email domain - if true will not show feedback alert\\n            if (user && user.email) {\\n                const emailDomain = user.email.split(\'@\')[1];\\n                const allowedDomains = [\'assent.com\', \'assentcompliance.com\'];\\n                if (allowedDomains.includes(emailDomain)) {\\n                    this.isUserInternalRole = true;\\n                } else {\\n                    this.isUserInternalRole = false;\\n                }\\n            } else {\\n                this.isUserInternalRole = false;\\n            }\\n            this.isShowAlertTrue();\\n        } else {\\n            this.userEmailFirstLetter = \'\';\\n        }\\n\\n        if (user !== null && user.picture !== null && user.picture !== undefined) {\\n            this.clientLogoUrl = user.picture;\\n        }\\n    }\\n\\n    private isShowAlertTrue() {\\n        if (this.isUserInternalRole === false && this.isFirstLogin === true && !this.layoutService.isDeveloperHub) {\\n            this.showAlert = true;\\n        } else {\\n            this.showAlert = false;\\n        }\\n    }\\n\\n    private initializePendoIfReady() {\\n        // Check if both pendoApiKey and isAuthenticated are set\\n        if (this._pendoService.pendoApiKey && this.isAuthenticated) {\\n            this._pendoService.initializePendo(\\n                this.userEmail,\\n                this._pendoService.pendoApiKey,\\n                this._configurationService.environmentVariables.production ? \'production\' : \'non-prod\'\\n            );\\n        }\\n    }\\n\\n    private isValidUri(val: string): boolean {\\n        if (!val) {\\n            return false;\\n        }\\n\\n        // Check for relative paths like /callback\\n        if (val.startsWith(\'/\')) {\\n            return true;\\n        }\\n\\n        try {\\n            new URL(val);\\n            return true;\\n        } catch (e) {\\n            return false;\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n#footer {\\n    position: fixed;\\n    bottom: 0;\\n    width: calc(100% - 280px);\\n    z-index: 100;\\n\\n    &.scrollbar-is-visible {\\n        width: calc(100% - 280px - 8px);\\n    }\\n\\n    &.hide-overflow {\\n        // No scrollbar\\n        width: calc(100% - 280px);\\n    }\\n\\n    &.small-side-nav {\\n        // Small side menu\\n        width: calc(100% - 52px);\\n        &.scrollbar-is-visible {\\n            width: calc(100% - 52px - 8px);\\n        }\\n        &.hide-overflow {\\n            // No scrollbar\\n            width: calc(100% - 52px);\\n        }\\n    }\\n}\\n.container {\\n    padding-right: 0;\\n    padding-left: 0;\\n\\n    &.alignLeft {\\n        margin-left: 0 !important;\\n        margin-right: 0 !important;\\n    }\\n}\\n\\n.toasts-container {\\n    left: calc(50% - 80px);\\n    width: $toast-width;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.5rem;\\n    margin-top: 24px;\\n\\n    &.small {\\n        left: calc(50% - 180px);\\n    }\\n}\\n\\n.sidenav {\\n    width: 280px;\\n    background: $secondary-primary-90-subtle !important;\\n    //overflow: hidden;\\n\\n    //-moz-box-shadow: inset 0 5px 5px $gray-500;\\n    //-webkit-box-shadow: inset 0 5px 5px $gray-500;\\n    //box-shadow: inset 0 5px 5px $gray-500;\\n\\n    .item-div {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        gap: 8px;\\n        padding-top: 8px;\\n        padding-bottom: 8px;\\n        justify-content: center;\\n\\n        .bi {\\n            font-size: 16px;\\n        }\\n    }\\n\\n    .item-child {\\n        padding: 8px;\\n        margin-bottom: 4px;\\n        margin-left: 28px;\\n        font-size: 14px;\\n        width: 160px;\\n    }\\n\\n    &.small {\\n        width: 52px;\\n\\n        .item-div {\\n            text-align: center;\\n            align-items: center;\\n            flex-direction: column;\\n            gap: 8px;\\n            width: 32px;\\n\\n            .bi {\\n                font-size: 22px;\\n            }\\n        }\\n\\n        .parent {\\n            .item-div {\\n                padding-bottom: 0px;\\n            }\\n        }\\n\\n        .item-child {\\n            padding-left: 0 !important;\\n            justify-content: center;\\n        }\\n\\n        .nav-children {\\n            text-align: center;\\n            justify-content: center;\\n            height: auto;\\n        }\\n    }\\n}\\n\\n.nav-head {\\n    width: 248px;\\n\\n    &.small {\\n        width: 42px;\\n        padding-right: 0px;\\n        padding-left: 8px;\\n    }\\n}\\n\\n.left-nav-divider {\\n    color: $gray-500;\\n    border: 0.5px;\\n    opacity: 0.25;\\n\\n    &.small {\\n        width: 34px;\\n    }\\n}\\n\\n.app-logo {\\n    height: 26px;\\n    margin-top: 32px;\\n    margin-bottom: 24px;\\n    padding-right: 5px;\\n}\\n\\n.app-logo-small {\\n    height: 32px;\\n    width: 32px;\\n    margin-top: 16px;\\n    margin-bottom: 16px;\\n}\\n\\n.left-side-menu {\\n    height: calc(100vh - 150px);\\n    width: 100%;\\n    overflow-y: auto;\\n\\n    .nav {\\n        gap: 4px;\\n    }\\n\\n    &::-webkit-scrollbar {\\n        width: 8px;\\n        background-color: transparent;\\n        border: none;\\n        box-shadow: none;\\n    }\\n\\n    &::-webkit-scrollbar-thumb {\\n        background: $gray-400;\\n        border-radius: 8px;\\n    }\\n\\n    &::-webkit-scrollbar-thumb:hover {\\n        background: $gray-600;\\n    }\\n\\n    &.small {\\n        height: calc(100vh - 298px);\\n        margin-top: 0;\\n        margin-bottom: 88px;\\n        padding-top: 0px;\\n\\n        .row > * {\\n            padding-left: 2px;\\n        }\\n    }\\n}\\n\\n.help-group {\\n    position: fixed;\\n    bottom: 0;\\n    display: flex;\\n    flex-direction: column;\\n    padding-right: 16px;\\n    padding-bottom: 32px;\\n    width: $side-nav-width;\\n    //overflow: hidden;\\n\\n    &.small {\\n        width: 50px;\\n        padding: 0px;\\n        margin-left: -2px;\\n        align-items: center;\\n\\n        .row > * {\\n            padding-left: 0px;\\n        }\\n    }\\n\\n    .left-nav-bottom-divider {\\n        color: $gray-500;\\n        border: 0.5px;\\n        width: 248px;\\n        display: flex;\\n        align-items: center;\\n        align-content: center;\\n        opacity: 0.25;\\n\\n        &.small {\\n            width: 34px;\\n            margin-left: 4px !important;\\n\\n            .row > * {\\n                padding-left: 0px;\\n            }\\n        }\\n    }\\n\\n    .help-item {\\n        color: $gray-500 !important;\\n        font-weight: normal !important;\\n        background-color: transparent;\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        padding: 8px 16px;\\n        gap: 8px;\\n\\n        &.small {\\n            padding: 0px 7px 7px 7px;\\n            flex-direction: row;\\n            justify-content: flex-start;\\n            align-items: center;\\n            gap: 10px;\\n\\n            &.bottom {\\n                padding: 0px 7px 32px 7px;\\n            }\\n\\n            .bi {\\n                padding: 9px 7px;\\n                font-size: 22px;\\n            }\\n        }\\n    }\\n\\n    a {\\n        color: $gray-500;\\n        text-decoration: none;\\n        cursor: pointer;\\n\\n        &:hover {\\n            color: $gray-200 !important;\\n        }\\n    }\\n}\\n\\n.nav-link {\\n    color: $gray-500;\\n    font-size: 16px;\\n    height: auto;\\n    padding: 4px 8px 4px 16px;\\n    width: 95%;\\n    text-decoration: none;\\n\\n    .is-active {\\n        background-color: $secondary-700;\\n        color: $white !important;\\n        font-weight: bold !important;\\n        border-radius: 4px;\\n    }\\n\\n    &:hover {\\n        background-color: $secondary-700;\\n        color: $gray-500;\\n        border-radius: 4px;\\n        cursor: pointer;\\n    }\\n\\n    &.small {\\n        display: flex;\\n        color: $gray-500;\\n        margin-left: 6px;\\n        padding: 4px 8px 4px 8px;\\n        width: 36px;\\n        height: 40px;\\n\\n        .is-active {\\n            color: $white;\\n        }\\n\\n        &:hover {\\n            background-color: $secondary-700;\\n            color: $gray-500 !important;\\n            font-weight: bold !important;\\n            border-radius: 4px;\\n        }\\n\\n        &.parent {\\n            height: fit-content;\\n        }\\n    }\\n}\\n\\n.is-active {\\n    background-color: $secondary-700;\\n    color: $white !important;\\n    font-weight: bold !important;\\n    border-radius: 4px;\\n}\\n\\n.menu-button {\\n    transition: 300ms ease-in-out;\\n    transform: rotate(0deg);\\n}\\n\\n.menu-button.rotated {\\n    transform: rotate(180deg);\\n}\\n\\n.main-container {\\n    height: 100%;\\n    overflow: hidden;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    position: absolute;\\n\\n    .row > * {\\n        padding-right: 2px;\\n        padding-left: 16px;\\n    }\\n\\n    &.small {\\n        .row > * {\\n            padding-left: 0px;\\n        }\\n    }\\n}\\n\\n.main-content-wrapper {\\n    width: calc(100% - $side-nav-width); // Second operant must be the width of the side bar\\n    height: 100vh;\\n    overflow-y: auto;\\n\\n    &.small-side-nav {\\n        width: calc(100% - $side-nav-sm-width); // Second operant must be the width of the small side bar\\n    }\\n\\n    &.no-side-nav {\\n        width: 100%;\\n    }\\n\\n    &.hide-overflow {\\n        overflow-y: inherit;\\n    }\\n}\\n\\n.main-content {\\n    position: relative;\\n\\n    &.calc-top {\\n        height: calc(100% - 104px); // Note: This is causing scrollbar issue that will need to be adressed.\\n    }\\n\\n    &.has-subheader {\\n        padding-top: 0px;\\n    }\\n}\\n\\n.alert-info {\\n    margin: 20px 20px 0px 20px;\\n}\\n\\n.feedback-text-wrapper {\\n    display: inline;\\n    flex-wrap: wrap;\\n    text-align: justify;\\n}\\n\\n.toolbar {\\n    background-color: $white;\\n    min-height: 56px;\\n    position: sticky;\\n    top: 0;\\n    z-index: 3;\\n    display: flex;\\n    box-sizing: border-box;\\n    flex-direction: column;\\n    width: 100%;\\n}\\n\\n.main-header {\\n    display: flex;\\n    box-sizing: border-box;\\n    width: 100%;\\n    flex-direction: row;\\n    align-items: center;\\n    white-space: nowrap;\\n    min-height: 56px;\\n    height: 56px;\\n    box-shadow: 0px 0px 5px $gray-500;\\n    background-color: $white;\\n    padding-left: 16px;\\n}\\n\\n.title-bar-button {\\n    border-radius: 0;\\n    border: 0;\\n    background: transparent;\\n    padding: 0;\\n    min-width: 0;\\n    width: 30px;\\n    height: 30px;\\n    flex-shrink: 0;\\n    line-height: 40px;\\n\\n    &.small {\\n        margin-top: 32px;\\n    }\\n\\n    .title-bar-icon {\\n        width: 30px;\\n        height: 30px;\\n    }\\n}\\n\\n.menu-icon {\\n    border-radius: 50px;\\n    background: transparent;\\n    border-color: $secondary-600;\\n    background-color: $secondary-600;\\n    color: $white;\\n    flex-direction: row;\\n    display: flex;\\n    place-content: center;\\n    align-items: center;\\n\\n    &:active {\\n        background-color: $secondary-800;\\n    }\\n\\n    &:hover {\\n        background-color: $secondary-700;\\n    }\\n}\\n\\n.spacer {\\n    flex: 1 1 auto;\\n}\\n\\n.screen-size-badge {\\n    font-weight: bold;\\n    font-size: 13px;\\n}\\n\\n.text-uppercase {\\n    padding: 0;\\n\\n    &:hover {\\n        color: $white;\\n    }\\n}\\n\\n$avatarColours: (\\n    \'primary-100\': $primary-100,\\n    \'primary-200\': $primary-200,\\n    \'primary-300\': $primary-300,\\n    \'primary-400\': $primary-400,\\n    \'primary-500\': $primary-500,\\n    \'primary-600\': $primary-600,\\n    \'primary-700\': $primary-700,\\n    \'primary-800\': $primary-800,\\n    \'primary-900\': $primary-900,\\n    \'secondary-100\': $secondary-100,\\n    \'secondary-200\': $secondary-200,\\n    \'secondary-300\': $secondary-300,\\n    \'secondary-400\': $secondary-400,\\n    \'secondary-500\': $secondary-500,\\n    \'secondary-600\': $secondary-600,\\n    \'secondary-700\': $secondary-700,\\n    \'secondary-800\': $secondary-800,\\n    \'secondary-900\': $secondary-900,\\n    \'tertiary-100\': $tertiary-100,\\n    \'tertiary-200\': $tertiary-200,\\n    \'tertiary-300\': $tertiary-300,\\n    \'tertiary-400\': $tertiary-400,\\n    \'tertiary-500\': $tertiary-500,\\n    \'tertiary-600\': $tertiary-600,\\n    \'tertiary-700\': $tertiary-700,\\n    \'tertiary-800\': $tertiary-800,\\n    \'tertiary-900\': $tertiary-900,\\n    \'quaternary-100\': $quaternary-100,\\n    \'quaternary-200\': $quaternary-200,\\n    \'quaternary-300\': $quaternary-300,\\n    \'quaternary-400\': $quaternary-400,\\n    \'quaternary-500\': $quaternary-500,\\n    \'quaternary-600\': $quaternary-600,\\n    \'quaternary-700\': $quaternary-700,\\n    \'quaternary-800\': $quaternary-800,\\n    \'quaternary-900\': $quaternary-900,\\n    \'quinary-100\': $quinary-100,\\n    \'quinary-200\': $quinary-200,\\n    \'quinary-300\': $quinary-300,\\n    \'quinary-400\': $quinary-400,\\n    \'quinary-500\': $quinary-500,\\n    \'quinary-600\': $quinary-600,\\n    \'quinary-700\': $quinary-700,\\n    \'quinary-800\': $quinary-800,\\n    \'quinary-900\': $quinary-900,\\n);\\n@mixin avatarHeaderImage ($size: \'lg\', $colour: \'tertiary\', $shade: 500) {\\n    $circleSize: 2rem;\\n    $borderSize: 3px;\\n    @if $size == \\"xl\\" {\\n        $circleSize: 3rem;\\n        $borderSize: 3px;\\n    } @else if $size == \\"lg\\" {\\n        $circleSize: 2rem;\\n        $borderSize: 3px;\\n    } @else if $size == \\"md\\" {\\n        $circleSize: 1.5rem;\\n        $borderSize: 2px;\\n    } @else if $size == \\"sm\\" {\\n        $circleSize: 1rem;\\n        $borderSize: 1px;\\n    }\\n\\n    border-radius: 50%;\\n    height: $circleSize;\\n    width: $circleSize;\\n    border: solid $borderSize $white;\\n    background-color: map-get($map: $avatarColours, $key: #{$colour+\'-\'+$shade});\\n    font-size: 14px;\\n    color: $white;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-evenly;\\n    align-items: center;\\n}\\n\\n.user-info {\\n    cursor: pointer;\\n    margin: 12px 32px 12px 0px;\\n\\n    //Profile image on top bar\\n    .avatar-header-image {\\n        @include avatarHeaderImage(\'lg\'); //ex. avatarHeaderImage(\'lg\',\'quinary\',600);\\n    }\\n\\n    .username {\\n        color: $primary;\\n        text-decoration: none;\\n        font-weight: bold;\\n        cursor: pointer;\\n\\n        text-decoration: none;\\n        font-weight: 700;\\n        font-size: 14px;\\n        line-height: 21px;\\n        padding-bottom: 16px;\\n    }\\n}\\n\\n//Dropdown menu\\n.dropdown-menu {\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.15);\\n    top: 8px !important;\\n\\n    //Content of dropdown menu\\n    .profile-dropdown {\\n        // width: 350px;\\n        // height: 240px;\\n        padding: 1rem;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        align-items: center;\\n\\n        //Profile image inside of dropdown menu\\n        .avatar-header-image {\\n            @include avatarHeaderImage(\'xl\'); //ex. avatarHeaderImage(\'lg\',\'quinary\',600);\\n        }\\n\\n        .profile-dropdown-divider {\\n            margin-top: 0.5rem;\\n            margin-bottom: 0.5rem;\\n            width: 100%;\\n            justify-content: center;\\n            align-items: center;\\n        }\\n\\n        .profile-log-out, .profile-manage-account-dropdown {\\n            margin: 15px;\\n            width: fit-content;\\n        }\\n\\n        .statement-links {\\n            display: flex;\\n            align-items: center;\\n            text-align: center;\\n            font-size: 12px;\\n\\n            //The dot icon between \'Privacy policy\' and \'Terms of service\'\\n            .bi-dot {\\n                size: 12px;\\n                color: $gray-700;\\n                font-weight: 400;\\n            }\\n\\n            a {\\n                margin-right: 8px;\\n                margin-left: 8px;\\n            }\\n        }\\n    }\\n}\\n\\n// Removes NgbDropdown arrow\\n.dropdown-toggle::after {\\n    display: none;\\n}\\n\\n.tools-navigation-container {\\n    margin-top: 5px;\\n}\\n\\n.sub-header {\\n    // min-height: 56px;\\n    height: 56px;\\n    // padding-top: 5px;\\n    // box-shadow: 0px 0px 2px $gray-500;\\n    background-color: $gray-100;\\n    z-index: -1;\\n    // padding: 0 0;\\n    padding-left: 24px;\\n    display: flex;\\n    box-sizing: border-box;\\n    width: 100%;\\n    flex-direction: row;\\n    align-items: center;\\n    white-space: nowrap;\\n\\n    .row {\\n        --bs-gutter-x: 0;\\n    }\\n}\\n\\n.tools-navigation-container {\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex;\\n    place-content: center flex-end;\\n    align-items: center;\\n    height: 40px;\\n}\\n\\n.hide-alert {\\n    animation: fade-anim 0.3s 1;\\n    -webkit-animation: fade-anim 0.3s 1;\\n    animation-fill-mode: forwards;\\n\\n    animation-delay: 0s;\\n    -webkit-animation-delay: 0s;\\n    /* Safari and Chrome */\\n    -webkit-animation-fill-mode: forwards;\\n}\\n\\n.btn:focus {\\n    box-shadow: none;\\n}\\n\\n@keyframes fade-anim {\\n    from {\\n        opacity: 1;\\n    }\\n\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\\n@-webkit-keyframes fade-anim {\\n    from {\\n        opacity: 1;\\n    }\\n\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\\n.pendo-resource-center {\\n    position: absolute;\\n    bottom: 10px;\\n    left: 10px;\\n    max-height: 50px;\\n    max-width: 50px;\\n    z-index: 18999;\\n}\\n","styleUrl":"./layout2.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":""},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""}],"line":76,"jsdoctags":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"featureFlagService","type":"UiFeatureFlagService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_httpClient","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_auth0Service","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"\x3c!-- Application Container --\x3e\\n<div\\n    class=\\"container-fluid main-container\\"\\n    [ngClass]=\\"{ small: smallMenu === true, \'bg-gray-100\': layoutService.showGrayBackground === true }\\"\\n>    \\n    <div class=\\"row flex-xl-nowrap h-100\\">\\n        \x3c!-- Left Side Nav --\x3e\\n        <div *ngIf=\\"showSideNav === true\\" class=\\"sidenav\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n            <div class=\\"nav-head\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                <div class=\\"app-logo-container\\">\\n                    <ng-container *ngIf=\\"smallMenu === false\\">\\n                        <div class=\\"d-flex align-items-center justify-content-start\\">\\n                            <img\\n                                class=\\"app-logo\\"\\n                                src=\\"assets/images/Assent-Logo.svg\\"\\n                                alt=\\"Assent Logo\\"\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\n                            />\\n                            <div class=\\"w-100 text-end\\">\\n                                <button\\n                                    [ngbTooltip]=\\"setTooltipText()\\"\\n                                    placement=\\"end\\"\\n                                    class=\\"text-primary title-bar-button\\"\\n                                    [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                    type=\\"button\\"\\n                                    aria-label=\\"Toggle Size\\"\\n                                    (click)=\\"toggleSideNavSize()\\"\\n                                    *ngIf=\\"showSideNav === true\\"\\n                                >\\n                                    <div class=\\"title-bar-icon menu-icon\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                                        <i *ngIf=\\"smallMenu === true\\" class=\\"bi bi-chevron-double-right\\" aria-hidden=\\"true\\"></i>\\n                                        <i *ngIf=\\"smallMenu === false\\" class=\\"bi bi-chevron-double-left\\" aria-hidden=\\"true\\"></i>\\n                                    </div>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\"smallMenu === true\\">\\n                        <button\\n                            class=\\"text-primary title-bar-button mt-3\\"\\n                            type=\\"button\\"\\n                            aria-label=\\"Toggle sidenav\\"\\n                            [ngbTooltip]=\\"setTooltipText()\\"\\n                            (click)=\\"toggleSideNavSize()\\"\\n                        >\\n                            <div class=\\"title-bar-icon menu-icon mb-2\\">\\n                                <i *ngIf=\\"smallMenu === true\\" class=\\"bi bi-chevron-double-right\\" aria-hidden=\\"true\\"></i>\\n                                <i *ngIf=\\"smallMenu === false\\" class=\\"bi bi-chevron-double-left\\" aria-hidden=\\"true\\"></i>\\n                            </div>\\n                        </button>\\n                        <img class=\\"app-logo-small\\" src=\\"assets/images/Assent-favicon.svg\\" alt=\\"Assent Logo\\" />\\n                    </ng-container>\\n                </div>\\n                <ui-subsidiary-selector\\n                    *ngIf=\\"shouldLoadSubsidiarySelector\\"\\n                    #subsidiarySelector\\n                    [small]=\\"smallMenu\\"\\n                    [options]=\\"subsidairyList\\"\\n                    (selectionChanged)=\\"onSubsidairyChanged($event)\\"\\n                >\\n                </ui-subsidiary-selector>\\n                <hr class=\\"left-nav-divider\\" />\\n            </div>\\n\\n            <div class=\\"left-side-menu\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                <nav class=\\"nav flex-column\\">\\n                    <ng-container *ngFor=\\"let item of menuItems\\">\\n                        \x3c!-- *ngIf=\\"item.flag !== null\\" --\x3e\\n                        <ng-container *uiIsFlagOn=\\"item.flag\\">\\n                            <ng-container *ngIf=\\"hasPermission(item.permission) || item.permission === null || item.permission === undefined\\">\\n                                \x3c!-- Without children elements --\x3e                                \\n                                <ng-container *ngIf=\\"item.children.length === 0\\">\\n                                    <a\\n                                        ngbTooltip=\\"{{ item.name | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        [disableTooltip]=\\"disableTooltip()\\"\\n                                        class=\\"nav-link\\"\\n                                        [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                        [routerLink]=\\"\'/\' + item.route\\"\\n                                        [routerLinkActive]=\\"[\'is-active\']\\"\\n                                        [routerLinkActiveOptions]=\\"{ exact: true }\\"\\n                                    >\\n                                        <div class=\\"item-div w-100\\">\\n                                            <i class=\\"bi bi-lg\\" [ngClass]=\\"item.icon\\" aria-hidden=\\"true\\"></i>\\n                                            \x3c!--Only adds text to side nav if it isn\'t small--\x3e\\n                                            <ng-container *ngIf=\\"smallMenu === false\\">\\n                                                <span class=\\"w-100\\" *ngIf=\\"item.children.length === 0\\">{{ item.name | translate }}</span>\\n                                            </ng-container>\\n                                            <i\\n                                                class=\\"bi bi-chevron-down menu-button\\"\\n                                                [ngClass]=\\"{ rotated: item.isOpen }\\"\\n                                                *ngIf=\\"item.children.length > 0\\"\\n                                                aria-hidden=\\"true\\"\\n                                            ></i>\\n                                        </div>\\n                                    </a>\\n                                </ng-container>\\n                                \x3c!-- With children elements --\x3e                                \\n                                <ng-container *ngIf=\\"item.children.length !== 0\\">\\n                                    <a\\n                                        ngbTooltip=\\"{{ item.name | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        [disableTooltip]=\\"disableTooltip()\\"\\n                                        class=\\"nav-link parent\\"\\n                                        [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                        (click)=\\"item.isOpen = !item.isOpen; toggleSideNavOpenWhenDropdownClicked()\\"\\n                                        [routerLinkActive]=\\"[\'is-active\']\\"\\n                                    >\\n                                        <div class=\\"item-div w-100\\">\\n                                            <i\\n                                                class=\\"bi bi-lg\\"\\n                                                [ngClass]=\\"item.icon\\"\\n                                                aria-hidden=\\"true\\"\\n                                                (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\n                                            ></i>\\n\\n                                            <ng-container *ngIf=\\"smallMenu === false\\">\\n                                                <span class=\\"w-100\\">{{ item.name | translate }}</span>\\n                                            </ng-container>\\n                                            <i\\n                                                class=\\"bi bi-chevron-down menu-button\\"\\n                                                [ngClass]=\\"{ rotated: item.isOpen }\\"\\n                                                *ngIf=\\"item.children.length > 0\\"\\n                                                (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\n                                                aria-hidden=\\"true\\"\\n                                            ></i>\\n                                        </div>\\n                                    </a>\\n                                </ng-container>                                \\n                                \x3c!-- Children elements --\x3e                                \\n                                <div *ngIf=\\"item.children.length !== 0\\" [style.display]=\\"item.isOpen ? \'block\' : \'none\'\\">\\n                                    <div class=\\"nav w-100 nav-children\\" *ngFor=\\"let itemChild of item.children\\">\\n                                        <ng-container *uiIsFlagOn=\\"itemChild.flag\\">\\n                                            <ng-container *ngIf=\\"hasPermission(itemChild.permission) || itemChild.permission === null || itemChild.permission === undefined\\">\\n                                                <ng-container *ngIf=\\"smallMenu === false\\">\\n                                                    <a\\n                                                        class=\\"nav-link item-child\\"\\n                                                        [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                                        [routerLink]=\\"\'/\' + itemChild.route\\"\\n                                                        [routerLinkActive]=\\"[\'is-active\']\\"\\n                                                        [routerLinkActiveOptions]=\\"{ exact: true }\\"\\n                                                    >\\n                                                        {{ itemChild.name | translate }}\\n                                                    </a>\\n                                                </ng-container>\\n                                            </ng-container>\\n                                        </ng-container>                                            \\n                                    </div>\\n                                </div>                                \\n                            </ng-container>\\n                        </ng-container>\\n                    </ng-container>\\n\\n                    \x3c!-- Note: Menu Footer items are deactived for now --\x3e\\n                    \x3c!-- <div class=\\"help-group\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                        <hr class=\\"left-nav-bottom-divider\\" [ngClass]=\\"{ small: smallMenu === true }\\" />\\n\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\n                            <a class=\\"help-item\\" (click)=\\"openModalFeedback()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\n                                    <i\\n                                        class=\\"bi bi-star-fill\\"\\n                                        aria-hidden=\\"true\\"\\n                                        ngbTooltip=\\"{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        container=\\"body\\"\\n                                    ></i>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\n                                    <i class=\\"bi bi-star-fill\\" aria-hidden=\\"true\\"></i>\\n                                </ng-container>\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}</span>\\n                            </a>\\n                        </div>\\n\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\n                            <a class=\\"help-item\\" (click)=\\"openSupportModal()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\n                                    <i\\n                                        class=\\"bi bi-headset\\"\\n                                        aria-hidden=\\"true\\"\\n                                        ngbTooltip=\\"{{ \'COMMON.GET_SUPPORT\' | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        container=\\"body\\"\\n                                    ></i>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\n                                    <i class=\\"bi bi-headset\\" aria-hidden=\\"true\\"></i>\\n                                </ng-container>\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.GET_SUPPORT\' | translate }}</span>\\n                            </a>\\n                        </div>\\n\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\">\\n                            <a\\n                                class=\\"help-item\\"\\n                                target=\\"_blank\\"\\n                                [href]=\\"supplierHelpCenterUrl\\"\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\n                                [routerLinkActiveOptions]=\\"{ exact: false }\\"\\n                            >\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\n                                    <i\\n                                        class=\\"bi bi-question-circle-fill bottom\\"\\n                                        aria-hidden=\\"true\\"\\n                                        ngbTooltip=\\"{{ \'COMMON.HELP_CENTER\' | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        container=\\"body\\"\\n                                    ></i>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\n                                    <i class=\\"bi bi-question-circle-fill\\" aria-hidden=\\"true\\"></i>\\n                                </ng-container>\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.HELP_CENTER\' | translate }}</span>\\n                            </a>\\n                        </div>\\n                    </div> --\x3e\\n                </nav>\\n            </div>\\n        </div>\\n\\n        \x3c!-- Main Wrapper --\x3e\\n        <div\\n            (scroll)=\\"onScroll($event)\\"\\n            class=\\"main-content-wrapper px-0\\"\\n            [ngClass]=\\"{\\n                \'small-side-nav\': smallMenu === true,\\n                \'no-side-nav\': showSideNav === false,\\n                \'hide-overflow\': layoutService.hideOverflow\\n            }\\"\\n        >\\n            \x3c!-- Application Toolbar and Page Header --\x3e\\n            <div class=\\"toolbar\\">\\n                \x3c!-- App Header --\x3e\\n                <div class=\\"main-header\\">\\n                    \x3c!-- Global Search --\x3e\\n                    \x3c!--\\n                    <ng-container *ngIf=\\"!isSupplier\\">\\n                        <ui-global-search></ui-global-search>\\n                    </ng-container> --\x3e\\n\\n                    <span class=\\"spacer\\"></span>\\n\\n\\n                    \x3c!--Top nav profile sections START--\x3e\\n                    \x3c!-- Language Switcher --\x3e\\n                    <ui-language-switcher\\n                        class=\\"me-3\\"\\n                        [ngClass]=\\"{ \'me-5\': this.userEmailFirstLetter === \'\' }\\"\\n                        [selectedLang]=\\"currentLang\\">\\n                    </ui-language-switcher>\\n\\n                    \x3c!-- User Widget START --\x3e\\n                    <div\\n                        *ngIf=\\"isLoggedIn === true && this.userEmailFirstLetter !== \'\'\\"\\n                        ngbDropdown\\n                        #settingsDropdown=\\"ngbDropdown\\"\\n                        placement=\\"bottom-right\\"\\n                        class=\\"d-inline-block\\"\\n                    >\\n                        <div\\n                            ngbDropdownAnchor\\n                            class=\\"user-info\\"\\n                            id=\\"profileDropdown\\"\\n                            (click)=\\"$event.stopPropagation(); settingsDropdown.open()\\"\\n                        >\\n                            <div class=\\"text-end\\"></div>\\n                            <div class=\\"profile-box\\">\\n                                <div class=\\"avatar-header-image\\" ngbTooltip=\\"{{ \'MENU.PROFILE\' | translate }}\\" placement=\\"bottom\\">\\n                                    {{ userEmailFirstLetter | uppercase }}\\n                                </div>\\n                                \x3c!-- TODO: enable auth0 user picture?\\n                                <img class=\\"tenant-logo\\" *ngIf=\\"clientLogoUrl\\" src=\\"{{ clientLogoUrl }}\\" />\\n                                --\x3e\\n                            </div>\\n                        </div>\\n                        \x3c!--Dropdown Card START--\x3e\\n                        <div ngbDropdownMenu aria-labelledby=\\"settingsDropdown\\">\\n                            <div class=\\"profile-dropdown\\">\\n                                <div class=\\"avatar-header-image\\">{{ userEmailFirstLetter | uppercase }}</div>\\n                                <span id=\\"username\\" class=\\"username\\">\\n                                    {{ userEmail }}\\n                                </span>\\n                                <ui-button\\n                                    *ngIf=\\"profileManager\\"\\n                                    [size]=\\"smBtnSize\\"\\n                                    [type]=\\"outlineBtnType\\"\\n                                    [text]=\\"\'COMMON.MANAGE_YOUR_ASSENT_ACCOUNT\' | translate\\"\\n                                    [id]=\\"\'aspProfileBtn\'\\"\\n                                    class=\\"profile-manage-account-dropdown\\"\\n                                    (click)=\\"onManageAssentAccountClick()\\">\\n                                </ui-button>\\n                                <ui-button\\n                                    [size]=\\"smBtnSize\\"\\n                                    [type]=\\"outlineBtnType\\"\\n                                    [text]=\\"\'COMMON.LOG_OUT\' | translate\\"\\n                                    [id]=\\"\'aspLogoutBtn\'\\"\\n                                    class=\\"profile-log-out\\"\\n                                    (click)=\\"onLogoutClick()\\">\\n                                </ui-button>\\n                                <div class=\\"statement-links\\">\\n                                    <a [href]=\\"termsOfServiceUrl\\" id=\\"link-terms-of-service\\" target=\\"_blank\\">\\n                                        {{\'USER_CONSENT.TERMS_OF_SERVICE\' | translate}}\\n                                    </a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        \x3c!--Dropdown Card END--\x3e\\n                        \x3c!-- User Widget END --\x3e\\n                    </div>\\n\\n                    \x3c!-- Logout button for Pilot  --\x3e\\n                    <div *ngIf=\\"logoutRedirectUri && isLoggedIn !== true\\">\\n                        <button type=\\"button\\" class=\\"btn btn-outline-primary btn-sm me-4\\" id=\\"aspLogoutBtn\\" (click)=\\"logout()\\">\\n                            {{ \'COMMON.LOG_OUT\' | translate }}\\n                        </button>\\n                    </div>\\n                    \x3c!--Top nav profile sections END--\x3e\\n                </div>\\n\\n                <div *ngIf=\\"pageHeaderService.showPageHeader === true\\" class=\\"w-100 border-bottom\\">\\n                    <ui-page-header></ui-page-header>\\n                </div>\\n\\n                \x3c!-- Page Footer Component (Using page footer service) --\x3e\\n                <div\\n                    id=\\"footer\\"\\n                    [ngClass]=\\"{\\n                        \'small-side-nav\': smallMenu === true,\\n                        \'no-side-nav\': showSideNav === false,\\n                        \'hide-overflow\': layoutService.hideOverflow,\\n                        \'scrollbar-is-visible\': layoutService.scrollBarIsVisible === true\\n                    }\\"\\n                    *ngIf=\\"pageFooterService.showPageFooter === true\\"\\n                >\\n                    <ui-page-footer></ui-page-footer>\\n                </div>\\n            </div>\\n            <div\\n                (scroll)=\\"onScroll($event)\\"\\n                class=\\"main-content\\"\\n                [ngClass]=\\"{ \'m-4\': (layoutService.showMargins$ | async) === true, \'calc-top\': (layoutService.calcTop$ | async) === true }\\"\\n            >\\n                <div\\n                    [ngClass]=\\"{\\n                        container: (layoutService.showContainer$ | async) === true,\\n                        alignLeft: (layoutService.alignLeft$ | async) === true\\n                    }\\"\\n                >\\n                    \x3c!-- Main Application Router Outlet --\x3e\\n                    \x3c!-- Entry point for Feature Module --\x3e\\n                    <router-outlet></router-outlet>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\"pendo-resource-center\\">\\n        <a href=\\"https://assentcompliance.my.site.com/SupplierCustomerPortal/s/?language=en_US\\" target=\\"_blank\\">\\n            <img\\n                style=\\"height: 50px; width: 50px\\"\\n                class=\\"reference-logo\\"\\n                src=\\"assets/images/pendo-resource-center.svg\\"\\n                alt=\\"Meridian logo\\"\\n            />\\n        </a>\\n    </div>\\n\\n    <ui-toasts-container\\n        class=\\"toasts-container\\"\\n        aria-live=\\"polite\\"\\n        aria-atomic=\\"true\\"\\n        [ngClass]=\\"{ small: smallMenu === true }\\"\\n    ></ui-toasts-container>\\n</div>\\n"},{"name":"UiLayoutComponent","id":"component-UiLayoutComponent-6d0735998b1045a81c95e2da0940b2bf9bea3faf79d9e5ee5a30906a337051b504f92b46853ded243ba1a2c15929b10e311dc54c53cc20b79220e554d7d85340","file":"libs/ui/src/lib/modules/layout/layout.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-layout","styleUrls":["./layout.component.scss"],"styles":[],"templateUrl":["./layout.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_ngUnsubscribe$","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121,144]},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"ActionItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"authenticatedUser$","defaultValue":"this._userService.authenticatedUser$","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"currentEnv","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"currentLang","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64,"modifierKind":[123]},{"name":"currentUser","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"email","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"environmentVariables","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":67,"modifierKind":[123]},{"name":"forceMenuClose","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"hasSubheader","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":68,"modifierKind":[123]},{"name":"isFirstLogin","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"isHandset","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"isSupplier","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":51,"modifierKind":[123]},{"name":"isUserInternalRole","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"","line":74,"modifierKind":[123]},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123]},{"name":"menuButtonTooltipText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"menuItems$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiMenuItem[]>","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"modalService","deprecated":false,"deprecationMessage":"","type":"UiModalService","optional":false,"description":"","line":77,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"","line":76,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":75,"modifierKind":[123]},{"name":"pageTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"preToolsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"profileManager","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"showAlert","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"showAppContainer","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"showSideNav","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"smallMenu","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"supplierHelpCenterUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"tabItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTab>","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"termsOfServiceUrl","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"toolItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<IUiSubHeaderTool>","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"tooltipDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"userEmailFirstLetter","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":49,"modifierKind":[123]}],"methodsClass":[{"name":"disableTooltip","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":388,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isShowAlertTrue","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":333,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isUserInternal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":323,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":411,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":275,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":280,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onLogoutClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":299,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onManageAssentAccountClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":295,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":286,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"onRouterEvent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":419,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"onScroll","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":415,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openModalFeedback","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":317,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"openSupportModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":312,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setFirstLoginFalse","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":342,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setPilotAlert","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":407,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setProfile","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":348,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setTooltipText","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":397,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpen","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":303,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavOpenWhenDropdownClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":381,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toggleSideNavSize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":307,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":286}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, HostListener, OnDestroy, OnInit, TemplateRef } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\nimport { NavigationEnd, Router } from \'@angular/router\';\\n// RxJS\\nimport { forkJoin, Observable, of, Subject, switchMap, take } from \'rxjs\';\\nimport { map, takeUntil } from \'rxjs/operators\';\\n// Ngx Translate\\nimport { TranslateService } from \'@ngx-translate/core\';\\n// Services\\nimport { IUiMenuItem, UiMenuService } from \'@lib/services/menu/menu.service\';\\nimport { UiUserService } from \'@lib/services/user/user.service\';\\nimport { UiHeaderService, IUiSubHeaderTab, IUiSubHeaderTool } from \'@lib//services/layout/header/header.service\';\\nimport { UiLayoutService } from \'@lib/services/layout\';\\nimport { UiAuthenticationService } from \'@lib/services/authentication/authentication.service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiModalService } from \'@lib/modules/modal/services/modal.service\';\\n// Enums\\nimport { UiEnvironmentNameEnum } from \'@lib/enums\';\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiSupportModalComponent } from \'./components/support-modal/support-modal.component\';\\nimport { UiFeedbackModalComponent } from \'./components/feedback-modal/feedback-modal.component\';\\nimport { UiPendoService } from \'@lib/services/analytics/pendo\';\\nimport { UiPageHeaderService } from \'./services/page-header-service/page-header.service\';\\nimport { UiPermissionsEnum } from \'@lib/services/user\';\\nimport { AcpConsentService } from \'@app/services/consent/consent.service\';\\nimport { UiPageFooterService } from \'./services/page-footer-service/page-footer.service\';\\n\\n@Component({\\n    selector: \'ui-layout\',\\n    templateUrl: \'./layout.component.html\',\\n    styleUrls: [\'./layout.component.scss\'],\\n})\\nexport class UiLayoutComponent implements OnInit, OnDestroy, AfterViewInit {\\n    public actionBtnsRef: TemplateRef<any>;\\n    public preToolsRef: TemplateRef<any>;\\n    public pageTitle = \'\';\\n    public menuItems$: Observable<IUiMenuItem[]>;\\n    public authenticatedUser$ = this._userService.authenticatedUser$;\\n    public isHandset = false;\\n    public showSideNav = true;\\n    public smallMenu = false;\\n    public forceMenuClose = false;\\n    public showAppContainer = false;\\n    public tooltipDisabled = false;\\n    public menuButtonTooltipText = \'\';\\n    public userEmailFirstLetter = \'\';\\n    public email;\\n    public isSupplier = false;\\n    public isFirstLogin = false;\\n    public supplierHelpCenterUrl = \'\';\\n    public isUserInternalRole = false;\\n    public showAlert = false;\\n    public termsOfServiceUrl = \'\';\\n    public profileManager = false;\\n\\n    public tabItems: Array<IUiSubHeaderTab> = [];\\n    public toolItems: Array<IUiSubHeaderTool> = [];\\n    public ActionItems: Array<IUiSubHeaderTool> = [];\\n    public currentUser;\\n    public currentEnv;\\n    public currentLang;\\n    public loading = false;\\n\\n    public environmentVariables: { production: boolean; devhub: boolean; devhubonly: boolean };\\n    public hasSubheader = false;\\n\\n    private readonly _ngUnsubscribe$ = new Subject();\\n\\n    // eslint-disable-next-line @typescript-eslint/member-ordering\\n    public constructor(\\n        public layoutService: UiLayoutService,\\n        public pageHeaderService: UiPageHeaderService,\\n        public pageFooterService: UiPageFooterService,\\n        public modalService: UiModalService,\\n        private _translateService: TranslateService,\\n        private _headerService: UiHeaderService,\\n        private _userService: UiUserService,\\n        private _breakpointObserver: BreakpointObserver,\\n        private _router: Router,\\n        private _menuService: UiMenuService,\\n        private _location: Location,\\n        private _authenticationService: UiAuthenticationService,\\n        private _configurationService: UiConfigurationService,\\n        private _modalService: NgbModal,\\n        private _pendoService: UiPendoService,\\n    ) {\\n        this._breakpointObserver.observe([Breakpoints.XSmall]).subscribe((result) => {\\n            this.isHandset = result.matches;\\n        });\\n\\n        this._breakpointObserver.observe([Breakpoints.XSmall]).subscribe((result) => {\\n            this.smallMenu = result.matches;\\n        });\\n    }\\n\\n    public ngOnInit() {\\n        this.setProfile();\\n        this.environmentVariables = this._configurationService.environmentVariables;\\n        this.currentEnv = this._configurationService.appConfig.environmentName;\\n        this.profileManager = this._configurationService.appConfig.profileManager;\\n\\n        // Translation Service Events\\n        this._translateService.onLangChange.subscribe(() => {\\n            this.currentLang = this._translateService.currentLang;\\n            //This is to localize the grid if it is available in the page\\n            this.layoutService.updateGridLocalization();\\n        });\\n\\n        // Header Service Events START\\n        this._headerService.actionBtnsChange.subscribe((tlpRef) => {\\n            this.actionBtnsRef = tlpRef;\\n        });\\n        this._headerService.loading$.subscribe((loading) => {\\n            this.loading = loading;\\n        });\\n        this._headerService.preToolsChange.subscribe((tlpRef) => {\\n            this.preToolsRef = tlpRef;\\n        });\\n\\n        this._headerService.subHeaderChange.subscribe((items) => {\\n            this.tabItems = items.tabItem;\\n            this.toolItems = items.toolItems;\\n\\n            if (this.tabItems.length !== 0) {\\n                this.hasSubheader = true;\\n            } else {\\n                this.hasSubheader = false;\\n            }\\n        });\\n\\n        this._headerService.titleChange.subscribe((title: string) => {\\n            this.pageTitle = title;\\n        });\\n        // Header Service Events END\\n\\n        // Layout Service Events START\\n        this.layoutService.onCloseSideNav.subscribe(() => {\\n            this.forceMenuClose = true;\\n            this.showSideNav = false;\\n        });\\n\\n        this.layoutService.onOpenSideNav.subscribe(() => {\\n            this.forceMenuClose = false;\\n            this.showSideNav = true;\\n        });\\n        // Layout Service Events END\\n\\n        this.setPilotAlert();\\n\\n        this._userService.isSupplierUser().subscribe((isSupplier) => (this.isSupplier = isSupplier));\\n\\n        this.supplierHelpCenterUrl = this.layoutService.supplierHelpCenterUrl;\\n        this.termsOfServiceUrl = this.layoutService.termsOfServiceUrl;\\n\\n        if (\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopsprod ||\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopssandbox\\n        ) {\\n            if (window.location.pathname === \'/\') {\\n                this._router.navigate([\'/meridian/hub/dashboard\']);\\n            }\\n        }\\n\\n        // Menu Service Events START\\n        if (\\n            this._configurationService.environmentVariables.devhubonly === true ||\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopsprod ||\\n            this._configurationService.appConfig.environmentName === UiEnvironmentNameEnum.devopssandbox\\n        ) {\\n            this.menuItems$ = this._menuService.getLeftSideMenuDevHub();\\n        } else {\\n            this.menuItems$ = this._menuService.getLeftSideMenu().pipe(\\n                switchMap((menus) => {\\n                    // Array to hold all the observables for each menu item\\n                    const menuPermissionChecks = menus.map((menu) => {\\n                        if (menu.children && menu.children.length > 0) {\\n                            // Array to hold observables for each child menu item\\n                            const childPermissionChecks = menu.children.map((child) => {\\n                                if (child.permission) {\\n                                    return this._userService.hasPermission([UiPermissionsEnum[child.permission]]).pipe(take(1));\\n                                }\\n                                // Always return true if permission is null\\n                                return of(true);\\n                            });\\n\\n                            return forkJoin(childPermissionChecks).pipe(\\n                                map((permissions) => {\\n                                    // Filter out child items that don\'t have permissions\\n                                    const permittedChildren = menu.children.filter((_, index) => permissions[index]);\\n\\n                                    if (permittedChildren.length === 1) {\\n                                        // Update main menu\'s route and clear children if only one permitted child\\n                                        menu.route = permittedChildren[0].route;\\n                                        menu.children = [];\\n                                        return menu;\\n                                    } else if (permittedChildren.length > 1) {\\n                                        // Otherwise, just update the children list\\n                                        menu.children = permittedChildren;\\n                                        return menu;\\n                                    } else {\\n                                        // If there are no permitted children, don\'t display the parent either\\n                                        return null;\\n                                    }\\n                                })\\n                            );\\n                        }\\n\\n                        if (menu.permission === null) {\\n                            return of(menu);\\n                        }\\n\\n                        if (menu.permission) {\\n                            return this._userService.hasPermission([UiPermissionsEnum[menu.permission]]).pipe(\\n                                take(1),\\n                                map((permission) => {\\n                                    if (permission) {\\n                                        return menu;\\n                                    }\\n                                    // Don\'t return the menu if the user doesn\'t have permission\\n                                    return null;\\n                                })\\n                            );\\n                        }\\n\\n                        return of(null);\\n                    });\\n\\n                    return forkJoin(menuPermissionChecks).pipe(\\n                        map((items) =>\\n                            items.filter((item) => {\\n                                // Filter out null menu items (menus that the user doesn\'t have permission to view)\\n                                if (!item) {\\n                                    return false;\\n                                }\\n\\n                                let isVisible = true;\\n\\n                                // If Environment is AcpEnvironmentNameEnum.localdev\\n                                // Show only Developer Hub\\n\\n                                // Show Developer Hub only on AcpEnvironmentNameEnum.localdev\\n                                if (\\n                                    this.currentEnv === UiEnvironmentNameEnum.localdev &&\\n                                    this._configurationService.environmentVariables.devhub === true\\n                                ) {\\n                                    if (item.name === \'APP_MODULES.DEVELOPER_HUB.APP_NAME\') {\\n                                        isVisible = true;\\n                                    }\\n                                }\\n                                // If Environment is NOT AcpEnvironmentNameEnum.localdev\\n                                // Don\'t show Developer Hub\\n                                else {\\n                                    isVisible = item.name !== \'APP_MODULES.DEVELOPER_HUB.APP_NAME\';\\n                                }\\n                                return isVisible;\\n                            })\\n                        )\\n                    );\\n                })\\n            );\\n        }\\n\\n        // Menu Service Events END\\n        // Router Events\\n        setTimeout(() => {\\n            this.onResize(); // Note: This make sure the scroll bars is updated after page load\\n        }, 1);\\n\\n        this.onRouterEvent();\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.layoutService.updateGridLocalization();\\n        this.onResize();\\n    }\\n\\n    public ngOnDestroy(): void {\\n        this._ngUnsubscribe$.next(null);\\n        this._ngUnsubscribe$.complete();\\n    }\\n\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        const mainContentWrapper = document.getElementsByClassName(\'main-content-wrapper\')[0] as HTMLDivElement;\\n        if (mainContentWrapper.scrollHeight > mainContentWrapper.clientHeight) {\\n            this.layoutService.scrollBarIsVisible = true;\\n        } else {\\n            this.layoutService.scrollBarIsVisible = false;\\n        }\\n    }\\n\\n    public onManageAssentAccountClick() {\\n        this._router.navigate([\'/acp/profile-manager\']);\\n    }\\n\\n    public onLogoutClick() {\\n        this._authenticationService.logout(true);\\n    }\\n\\n    public toggleSideNavOpen() {\\n        this.layoutService.toogleSideNav();\\n    }\\n\\n    public toggleSideNavSize() {\\n        this.smallMenu = !this.smallMenu;\\n        this.layoutService.onOpenSideNav.emit(this.smallMenu);\\n    }\\n\\n    public openSupportModal() {\\n        // NOTE: this is using the NgbModal, not the UiModalService\\n        this._modalService.open(UiSupportModalComponent, new UiModalConfig());\\n    }\\n\\n    public openModalFeedback() {\\n        // NOTE: this is using the NgbModal, not the UiModalService\\n        this._modalService.open(UiFeedbackModalComponent, new UiModalConfig());\\n    }\\n\\n    // Checks if user is internal based on the end of the email - if true will not show feedback alert\\n    public isUserInternal() {\\n        this.authenticatedUser$.pipe(takeUntil(this._ngUnsubscribe$)).subscribe((data) => {\\n            if (data && data.email && (data.email.endsWith(\'@assent.com\') || data.email.endsWith(\'@assentcompliance.com\'))) {\\n                this.isUserInternalRole = true;\\n            } else {\\n                this.isUserInternalRole = false;\\n            }\\n        });\\n    }\\n\\n    public isShowAlertTrue() {\\n        if (this.isUserInternalRole === false && this.isFirstLogin === true && !this.layoutService.isDeveloperHub) {\\n            this.showAlert = true;\\n        } else {\\n            this.showAlert = false;\\n        }\\n    }\\n\\n    //Sets the first login to false after pilot alert is dismissed - alert will not show again\\n    public setFirstLoginFalse() {\\n        this.isFirstLogin = false;\\n        localStorage.setItem(\'isFirstLogin\', \'false\');\\n        this.layoutService.updateLayout();\\n    }\\n\\n    public setProfile() {\\n        this.authenticatedUser$.pipe(takeUntil(this._ngUnsubscribe$)).subscribe((data) => {\\n            if (data !== null && data.email !== null && data.email !== undefined) {\\n                this.userEmailFirstLetter = data.email.charAt(0);\\n\\n                // Checks if user is internal based on the end of the email - if true will not show feedback alert\\n                if (data && data.email && (data.email.includes(\'assent.com\') || data.email.includes(\'assentcompliance.com\'))) {\\n                    this.isUserInternalRole = true;\\n                } else {\\n                    this.isUserInternalRole = false;\\n                }\\n                this.isShowAlertTrue();\\n\\n                // If user authenticated, inititlize Pendo\\n                if (this._configurationService.appConfig.enablePendoAcpUi) {\\n                    // Initialize Pendo\\n                    this._pendoService.initializePendo(\\n                        data.email,\\n                        this._configurationService.appConfig.pendoApiKey,\\n                        this._configurationService.appConfig.environmentName\\n                    );\\n                }\\n            } else {\\n                this.userEmailFirstLetter = \'\';\\n            }\\n\\n            if (data !== null && data.preferredLanguage !== null && data.preferredLanguage !== undefined) {\\n                this.currentLang = data.preferredLanguage;\\n            }\\n        });\\n    }\\n\\n    // When sidenav is collapsed, child items are hidden. When dropdown icon is clicked, sidenav expands to show children\\n    public toggleSideNavOpenWhenDropdownClicked() {\\n        if (this.smallMenu) {\\n            this.smallMenu = !this.smallMenu;\\n        }\\n    }\\n\\n    // Only enable tooltips when sidenav is collapsed\\n    public disableTooltip() {\\n        if (this.smallMenu) {\\n            this.tooltipDisabled = false;\\n        } else {\\n            this.tooltipDisabled = true;\\n        }\\n        return this.tooltipDisabled;\\n    }\\n\\n    public setTooltipText() {\\n        if (this.smallMenu) {\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.EXPAND_MENU\');\\n        } else {\\n            this.menuButtonTooltipText = this._translateService.instant(\'COMMON.COLLAPSE_MENU\');\\n        }\\n        return this.menuButtonTooltipText;\\n    }\\n\\n    // Will only show pilot alert if it is users first time logging in\\n    public setPilotAlert() {\\n        this.isFirstLogin = this.layoutService.isFirstTimeLogin();\\n    }\\n\\n    public navigateBack() {\\n        this._location.back();\\n    }\\n\\n    public onScroll($event) {\\n        this.layoutService.onScroll.emit($event);\\n    }\\n\\n    private onRouterEvent() {\\n        this._router.events.subscribe((evt) => {\\n            if (evt instanceof NavigationEnd) {\\n                const contentContainer = document.querySelector(\'.main-content-wrapper\');\\n                if (contentContainer) {\\n                    document.querySelector(\'.main-content-wrapper\').scroll({ top: 0, left: 0, behavior: \'auto\' });\\n                } else {\\n                    window.scroll({ top: 0, left: 0, behavior: \'auto\' });\\n                }\\n            }\\n            // This is to localize the grid if it is available in the page\\n            setTimeout(() => {\\n                this.layoutService.updateGridLocalization();\\n                this.onResize();\\n            });\\n        });\\n\\n        // Always Open Side Nav by default\\n        // Page that don\'t need Side Nav can close it on ngOnInit()\\n        this.layoutService.openSideNav();\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../assets/styles/custom-variables.scss\';\\n\\n\\n#footer {\\n    position: fixed; \\n    bottom: 0;\\n    width: calc(100% - 280px);    \\n    z-index: 100;\\n\\n    &.scrollbar-is-visible\\n    {\\n        width: calc(100% - 280px - 8px);\\n    }    \\n    \\n    &.hide-overflow {    \\n        // No scrollbar    \\n        width: calc(100% - 280px);\\n    }\\n    \\n    &.small-side-nav {   \\n            \\n        // Small side menu     \\n        width: calc(100% - 52px);\\n        &.scrollbar-is-visible\\n        {\\n            width: calc(100% - 52px - 8px);\\n        }\\n        &.hide-overflow{                  \\n            // No scrollbar      \\n            width: calc(100% - 52px);\\n        }\\n    }\\n}\\n\\n.toasts-container {\\n    left: calc(50% - 80px);\\n    width: $toast-width;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.5rem;\\n    margin-top: 24px;\\n\\n    &.small {\\n        left: calc(50% - 180px);\\n    }\\n}\\n\\n\\n.sidenav {\\n    width: 280px;\\n    background: $secondary-primary-90-subtle !important;\\n    //overflow: hidden;\\n\\n    //-moz-box-shadow: inset 0 5px 5px $gray-500;\\n    //-webkit-box-shadow: inset 0 5px 5px $gray-500;\\n    //box-shadow: inset 0 5px 5px $gray-500;\\n\\n    .item-div {\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        gap: 8px;\\n        padding-top: 8px;\\n        padding-bottom: 8px;\\n        justify-content: center;\\n\\n        .bi {\\n            font-size: 16px;\\n        }\\n    }\\n\\n    .item-child {\\n        padding: 8px;\\n        margin-bottom: 4px;\\n        margin-left: 28px;\\n        font-size: 14px;\\n        width: 139px;\\n    }\\n\\n    &.small {\\n        width: 52px;\\n\\n        .item-div {\\n            text-align: center;\\n            align-items: center;\\n            flex-direction: column;\\n            gap: 8px;\\n            width: 32px;\\n\\n            .bi {\\n                font-size: 22px;\\n            }\\n        }\\n\\n        .parent {\\n            .item-div {\\n                padding-bottom: 0px;\\n            }\\n        }\\n\\n        .item-child {\\n            padding-left: 0 !important;\\n            justify-content: center;\\n        }\\n\\n        .nav-children {\\n            text-align: center;\\n            justify-content: center;\\n            height: auto;\\n        }\\n    }\\n\\n\\n}\\n\\n.nav-head {\\n    gap: 24px;\\n    width: 248px;\\n    height: 52px;\\n\\n    &.small {\\n        width: 36px;\\n        height: 124px;\\n        padding-right: 0px;\\n        padding-left: 8px;\\n    }\\n}\\n\\n.left-nav-divider {\\n    color: $gray-500;\\n    border: 0.5px;\\n    opacity: 0.25;\\n\\n    &.small {\\n        width: 34px;\\n    }\\n}\\n\\n.app-logo {\\n    height: 26px;\\n    margin-top: 32px;\\n    margin-bottom: 24px;\\n    padding-right: 117px;\\n}\\n\\n.app-logo-small {\\n    height: 32px;\\n    width: 32px;\\n    margin-top: 16px;\\n    margin-bottom: 16px;\\n}\\n\\n.left-side-menu {\\n    height: calc(100vh - 150px);\\n    width: 100%;\\n    // overflow-x: hidden;\\n    overflow-y: auto;\\n    margin-top: 30px;\\n    margin-bottom: 66px;\\n    padding-bottom: 117px;\\n    padding-top: 16px;\\n\\n    .nav {\\n        gap: 4px;\\n    }\\n\\n    &::-webkit-scrollbar {\\n        width: 8px;\\n        background-color: transparent;\\n        border: none;\\n        box-shadow: none;\\n        z-index: 0;\\n    }\\n\\n    &::-webkit-scrollbar-thumb {\\n        background: $gray-400;\\n        border-radius: 8px;\\n    }\\n\\n    &::-webkit-scrollbar-thumb:hover {\\n        background: $gray-600;\\n    }\\n\\n    &.small {\\n        height: calc(100vh - 298px);\\n        margin-top: 4px;\\n        margin-bottom: 88px;\\n\\n        .row>* {\\n            padding-left: 2px;\\n        }\\n    }\\n}\\n\\n.help-group {\\n    position: fixed;\\n    bottom: 0;\\n    display: flex;\\n    flex-direction: column;\\n    padding-right: 16px;\\n    padding-bottom: 32px;\\n    width: $side-nav-width;\\n    //overflow: hidden;\\n\\n    &.small {\\n        width: 50px;\\n        padding: 0px;\\n        margin-left: -2px;\\n        align-items: center;\\n\\n        .row>* {\\n            padding-left: 0px;\\n        }\\n    }\\n\\n    .left-nav-bottom-divider {\\n        color: $gray-500;\\n        border: 0.5px;\\n        width: 248px;\\n        display: flex;\\n        align-items: center;\\n        align-content: center;\\n        opacity: 0.25;\\n\\n        &.small {\\n            width: 34px;\\n            margin-left: 4px !important;\\n\\n            .row>* {\\n                padding-left: 0px;\\n            }\\n        }\\n    }\\n\\n    .help-item {\\n        color: $gray-500 !important;\\n        font-weight: normal !important;\\n        background-color: transparent;\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        padding: 8px 16px;\\n        gap: 8px;\\n\\n        &.small {\\n            padding: 0px 7px 7px 7px;\\n            flex-direction: row;\\n            justify-content: flex-start;\\n            align-items: center;\\n            gap: 10px;\\n\\n            &.bottom {\\n                padding: 0px 7px 32px 7px;\\n            }\\n\\n            .bi {\\n                padding: 9px 7px;\\n                font-size: 22px;\\n            }\\n        }\\n    }\\n\\n    a {\\n        color: $gray-500;\\n        text-decoration: none;\\n        cursor: pointer;\\n\\n        &:hover {\\n            color: $gray-200 !important;\\n        }\\n    }\\n}\\n\\n.nav-link {\\n    color: $gray-500;\\n    font-size: 16px;\\n    height: auto;\\n    padding: 4px 8px 4px 16px;\\n    width: 95%;\\n    text-decoration: none;\\n\\n    .is-active {\\n        background-color: $secondary-700 ;\\n        color: $white !important;\\n        font-weight: bold !important;\\n        border-radius: 4px;\\n    }\\n\\n    &:hover {\\n        background-color: $secondary-700;\\n        color: $gray-500;\\n        border-radius: 4px;\\n        cursor: pointer;\\n    }\\n\\n    &.small {\\n        display: flex;\\n        color: $gray-500;\\n        margin-left: 6px;\\n        padding: 4px 8px 4px 8px;\\n        width: 36px;\\n        height: 40px;\\n\\n        .is-active {\\n            color: $white;\\n        }\\n\\n        &:hover {\\n            background-color: $secondary-700 ;\\n            color: $gray-500 !important;\\n            font-weight: bold !important;\\n            border-radius: 4px;\\n        }\\n\\n        &.parent {\\n            height: fit-content;\\n        }\\n    }\\n}\\n\\n.is-active {\\n    background-color: $secondary-700;\\n    color: $white !important;\\n    font-weight: bold !important;\\n    border-radius: 4px;\\n}\\n\\n.menu-button {\\n    transition: 300ms ease-in-out;\\n    transform: rotate(0deg);\\n}\\n\\n.menu-button.rotated {\\n    transform: rotate(180deg);\\n}\\n\\n.main-container {\\n    height: 100%;\\n    overflow: hidden;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    position: absolute;\\n\\n    .row>* {\\n        padding-right: 2px;\\n        padding-left: 16px;\\n    }\\n\\n    &.small {\\n        .row>* {\\n            padding-left: 0px;\\n        }\\n    }\\n}\\n\\n.main-content-wrapper {\\n    width: calc(100% - $side-nav-width); // Second operant must be the width of the side bar\\n    height: 100vh;\\n    overflow-y: auto;\\n\\n    &.small-side-nav {\\n        width: calc(100% - $side-nav-sm-width); // Second operant must be the width of the small side bar\\n    }\\n\\n    &.no-side-nav {\\n        width: 100%;\\n    }\\n\\n    &.hide-overflow {\\n        overflow-y: inherit;\\n    }\\n}\\n\\n.main-content {\\n    position: relative;\\n\\n    &.calc-top{\\n        height: calc(100% - 104px); // Note: This is causing scrollbar issue that will need to be adressed.\\n    }\\n\\n    &.has-subheader {\\n        padding-top: 0px;\\n    }\\n}\\n\\n.alert-info {\\n    margin: 20px 20px 0px 20px;\\n}\\n\\n.feedback-text-wrapper {\\n    display: inline;\\n    flex-wrap: wrap;\\n    text-align: justify;\\n}\\n\\n.toolbar {\\n    background-color: $white;\\n    min-height: 56px;\\n    position: sticky;\\n    top: 0;\\n    z-index: 3;\\n    display: flex;\\n    box-sizing: border-box;\\n    flex-direction: column;\\n    width: 100%;\\n}\\n\\n.main-header {\\n    display: flex;\\n    box-sizing: border-box;\\n    width: 100%;\\n    flex-direction: row;\\n    align-items: center;\\n    white-space: nowrap;\\n    min-height: 56px;\\n    height: 56px;\\n    box-shadow: 0px 0px 5px $gray-500;\\n    background-color: $white;\\n    border-top-left-radius: 12px;\\n    padding-left: 16px;\\n}\\n\\n.title-bar-button {\\n    border-radius: 0;\\n    border: 0;\\n    background: transparent;\\n    padding: 0;\\n    min-width: 0;\\n    width: 30px;\\n    height: 30px;\\n    flex-shrink: 0;\\n    line-height: 40px;\\n\\n    &.small {\\n        margin-top: 32px;\\n    }\\n\\n    .title-bar-icon {\\n        width: 30px;\\n        height: 30px;\\n\\n    }\\n}\\n\\n.menu-icon {\\n    border-radius: 50px;\\n    background: transparent;\\n    border-color: $secondary-600;\\n    background-color: $secondary-600;\\n    color: $white;\\n    flex-direction: row;\\n    display: flex;\\n    place-content: center;\\n    align-items: center;\\n\\n    &:active {\\n        background-color: $secondary-800;\\n    }\\n\\n    &:hover {\\n        background-color: $secondary-700;\\n    }\\n}\\n\\n.spacer {\\n    flex: 1 1 auto;\\n}\\n\\n.screen-size-badge {\\n    font-weight: bold;\\n    font-size: 13px;\\n}\\n\\n.user-info {\\n    cursor: pointer;\\n    margin: 12px 32px 12px 0px;\\n\\n    //Profile image on top bar\\n    .avatar-header-image {\\n        border-radius: 50%;\\n        height: 32px;\\n        width: 32px;\\n        border: solid 2px $white;\\n        background-color: $tertiary-500;\\n        font-size: 14px;\\n        color: $white;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-evenly;\\n        align-items: center;\\n    }\\n\\n    .username {\\n        color: $primary;\\n        text-decoration: none;\\n        font-weight: bold;\\n        cursor: pointer;\\n    }\\n}\\n\\n.username {\\n    text-decoration: none;\\n    font-weight: 700;\\n    font-size: 14px;\\n    line-height: 21px;\\n    padding-bottom: 16px;\\n}\\n\\n.text-uppercase {\\n    padding: 0;\\n\\n    &:hover {\\n        color: $white;\\n    }\\n}\\n\\n//Dropdown menu\\n.dropdown-menu {\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.15);\\n    top: 8px !important;\\n}\\n\\n//Content of dropdown menu\\n.profile-dropdown {\\n    width: 350px;\\n    height: 240px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n\\n    //Profile image inside of dropdown menu\\n    .avatar-header-image {\\n        height: 48px;\\n        width: 48px;\\n        border: solid 3px $white;\\n        font-size: 20px;\\n        color: $white;\\n        align-items: center;\\n        border-radius: 50%;\\n        background-color: $tertiary-500;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-evenly;\\n        margin-bottom: 10px;\\n    }\\n}\\n\\n.profile-dropdown-divider {\\n    margin-top: 16px;\\n    margin-bottom: 8px;\\n    width: 300px;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.profile-log-out {\\n    margin: 15px;\\n    width: fit-content;\\n}\\n\\n.statement-links {\\n    display: flex;\\n    align-items: center;\\n    text-align: center;\\n    font-size: 12px;\\n\\n    //The dot icon between \'Privacy policy\' and \'Terms of service\'\\n    .bi-dot {\\n        size: 12px;\\n        color: $gray-700;\\n        font-weight: 400;\\n    }\\n\\n    a {\\n        margin-right: 8px;\\n        margin-left: 8px;\\n    }\\n}\\n\\n// Removes NgbDropdown arrow\\n.dropdown-toggle::after {\\n    display: none;\\n}\\n\\n.tools-navigation-container {\\n    margin-top: 5px;\\n}\\n\\n.sub-header {\\n    // min-height: 56px;\\n    height: 56px;\\n    // padding-top: 5px;\\n    // box-shadow: 0px 0px 2px $gray-500;\\n    background-color: $gray-100;\\n    z-index: -1;\\n    // padding: 0 0;\\n    padding-left: 24px;\\n    display: flex;\\n    box-sizing: border-box;\\n    width: 100%;\\n    flex-direction: row;\\n    align-items: center;\\n    white-space: nowrap;\\n\\n    .row {\\n        --bs-gutter-x: 0;\\n    }\\n}\\n\\n.tools-navigation-container {\\n    flex-direction: row;\\n    box-sizing: border-box;\\n    display: flex;\\n    place-content: center flex-end;\\n    align-items: center;\\n    height: 40px;\\n}\\n\\n\\n.hide-alert {\\n    animation: fade-anim 0.3s 1;\\n    -webkit-animation: fade-anim 0.3s 1;\\n    animation-fill-mode: forwards;\\n\\n    animation-delay: 0s;\\n    -webkit-animation-delay: 0s;\\n    /* Safari and Chrome */\\n    -webkit-animation-fill-mode: forwards;\\n}\\n\\n.btn:focus {\\n    box-shadow: none;\\n}\\n\\n@keyframes fade-anim {\\n    from {\\n        opacity: 1;\\n    }\\n\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\\n@-webkit-keyframes fade-anim {\\n    from {\\n        opacity: 1;\\n    }\\n\\n    to {\\n        opacity: 0;\\n    }\\n}\\n\\n.pendo-resource-center {\\n    position: absolute; \\n    bottom: 10px; \\n    left: 10px; \\n    max-height: 50px; \\n    max-width: 50px; \\n    z-index: 18999;\\n}","styleUrl":"./layout.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"modalService","type":"UiModalService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":""},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_menuService","type":"UiMenuService","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_authenticationService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""}],"line":70,"modifierKind":[123],"jsdoctags":[{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"modalService","type":"UiModalService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_userService","type":"UiUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_menuService","type":"UiMenuService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authenticationService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy","AfterViewInit"],"templateData":"\x3c!-- Application Container --\x3e\\n<div class=\\"container-fluid main-container\\" [ngClass]=\\"{\'small\': smallMenu === true, \'bg-gray-100\': layoutService.showGrayBackground === true}\\">\\n    \x3c!--  --\x3e\\n    <div class=\\"row flex-xl-nowrap h-100\\">\\n        \x3c!-- Left Side Nav --\x3e\\n        <div *ngIf=\\"showSideNav === true\\" class=\\"sidenav\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n            <div class=\\"nav-head\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                <div class=\\"app-logo-container\\">\\n                    <ng-container *ngIf=\\"smallMenu === false\\">\\n                        <img\\n                            class=\\"app-logo\\"\\n                            src=\\"assets/images/Assent-Logo.svg\\"\\n                            alt=\\"Assent Logo\\"\\n                            [ngClass]=\\"{ small: smallMenu === true }\\"\\n                        />\\n                    </ng-container>\\n\\n                    \x3c!-- Sidenav Button START--\x3e\\n                    <button\\n                        class=\\"text-primary title-bar-button\\"\\n                        type=\\"button\\"\\n                        aria-label=\\"Toggle sidenav\\"\\n                        (click)=\\"toggleSideNavOpen()\\"\\n                        *ngIf=\\"(showSideNav === false && isHandset) || forceMenuClose\\"\\n                    >\\n                        <div class=\\"title-bar-icon menu-icon\\">\\n                            <i class=\\"bi bi-list\\" aria-hidden=\\"true\\"></i>\\n                        </div>\\n                    </button>\\n                    <button\\n                        [ngbTooltip]=\\"setTooltipText()\\"\\n                        placement=\\"end\\"\\n                        class=\\"text-primary title-bar-button\\"\\n                        [ngClass]=\\"{ small: smallMenu === true }\\"\\n                        type=\\"button\\"\\n                        aria-label=\\"Toggle Size\\"\\n                        (click)=\\"toggleSideNavSize()\\"\\n                        *ngIf=\\"showSideNav === true\\"\\n                    >\\n                        <div class=\\"title-bar-icon menu-icon\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                            <i *ngIf=\\"smallMenu === true\\" class=\\"bi bi-chevron-double-right\\" aria-hidden=\\"true\\"></i>\\n                            <i *ngIf=\\"smallMenu === false\\" class=\\"bi bi-chevron-double-left\\" aria-hidden=\\"true\\"></i>\\n                        </div>\\n                    </button>\\n                    \x3c!-- Sidenav Button END--\x3e\\n                    <ng-container *ngIf=\\"smallMenu === true\\">\\n                        <img class=\\"app-logo-small\\" src=\\"assets/images/Assent-favicon.svg\\" alt=\\"Assent Logo\\" />\\n                    </ng-container>\\n                    <hr class=\\"left-nav-divider\\" [ngClass]=\\"{ small: smallMenu === true }\\" />\\n                </div>\\n            </div>\\n\\n            <div class=\\"left-side-menu\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                <nav class=\\"nav flex-column\\">\\n                    <ng-container *ngFor=\\"let item of menuItems$ | async\\">\\n                        \x3c!-- Without children elements --\x3e\\n                        <ng-container *ngIf=\\"item.children.length === 0\\">\\n                            <a\\n                                ngbTooltip=\\"{{ item.name | translate }}\\"\\n                                placement=\\"end\\"\\n                                [disableTooltip]=\\"disableTooltip()\\"\\n                                class=\\"nav-link\\"\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                [routerLink]=\\"\'/\' + item.route\\"\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\n                                [routerLinkActiveOptions]=\\"{ exact: false }\\"\\n                            >\\n                                <div class=\\"item-div w-100\\">\\n                                    <i class=\\"bi bi-lg\\" [ngClass]=\\"item.icon\\" aria-hidden=\\"true\\"></i>\\n                                    \x3c!--Only adds text to side nav if it isn\'t small--\x3e\\n                                    <ng-container *ngIf=\\"smallMenu === false\\">\\n                                        <span class=\\"w-100\\" *ngIf=\\"item.children.length === 0\\">{{ item.name | translate }}</span>\\n                                    </ng-container>\\n                                    <i\\n                                        class=\\"bi bi-chevron-down menu-button\\"\\n                                        [ngClass]=\\"{ rotated: item.isOpen }\\"\\n                                        *ngIf=\\"item.children.length > 0\\"\\n                                        aria-hidden=\\"true\\"\\n                                    ></i>\\n                                </div>\\n                            </a>\\n                        </ng-container>\\n\\n                        \x3c!-- With children elements --\x3e\\n                        <ng-container *ngIf=\\"item.children.length !== 0 && item.permission\\">\\n                            <a\\n                                ngbTooltip=\\"{{ item.name | translate }}\\"\\n                                placement=\\"end\\"\\n                                [disableTooltip]=\\"disableTooltip()\\"\\n                                class=\\"nav-link parent\\"\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                (click)=\\"item.isOpen = !item.isOpen; toggleSideNavOpenWhenDropdownClicked()\\"\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\n                            >\\n                                <div class=\\"item-div w-100\\">\\n                                    <i\\n                                        class=\\"bi bi-lg\\"\\n                                        [ngClass]=\\"item.icon\\"\\n                                        aria-hidden=\\"true\\"\\n                                        (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\n                                    ></i>\\n                                    <ng-container *ngIf=\\"smallMenu === false\\">\\n                                        <span class=\\"w-100\\">{{ item.name | translate }}</span>\\n                                    </ng-container>\\n                                    <ng-container *ngIf=\\"ngClass === small\\"> </ng-container>\\n                                    <i\\n                                        class=\\"bi bi-chevron-down menu-button\\"\\n                                        [ngClass]=\\"{ rotated: item.isOpen }\\"\\n                                        *ngIf=\\"item.children.length > 0\\"\\n                                        (click)=\\"toggleSideNavOpenWhenDropdownClicked()\\"\\n                                        aria-hidden=\\"true\\"\\n                                    ></i>\\n                                </div>\\n                            </a>\\n                        </ng-container>\\n\\n                        \x3c!-- Children elements --\x3e\\n                        <ng-container *uiHasPermission=\\"[]\\">\\n                            <div *ngIf=\\"item.children.length !== 0\\" [style.display]=\\"item.isOpen ? \'block\' : \'none\'\\">\\n                                <div class=\\"nav w-100 nav-children\\" *ngFor=\\"let itemChild of item.children\\">\\n                                    <ng-container *ngIf=\\"smallMenu === false\\">\\n                                        <a\\n                                            class=\\"nav-link item-child\\"\\n                                            [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                            [routerLink]=\\"\'/\' + itemChild.route\\"\\n                                            [routerLinkActive]=\\"[\'is-active\']\\"\\n                                            [routerLinkActiveOptions]=\\"{exact: true}\\"\\n                                        >\\n                                            {{ itemChild.name | translate }}\\n                                        </a>\\n                                    </ng-container>\\n                                </div>\\n                            </div>\\n                        </ng-container>\\n                    </ng-container>\\n                    \x3c!-- Note: Keep commented code for now.\\n                    <div class=\\"help-group\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                        <hr class=\\"left-nav-bottom-divider\\" [ngClass]=\\"{ small: smallMenu === true }\\" />\\n\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\n                            <a class=\\"help-item\\" (click)=\\"openModalFeedback()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\n                                    <i\\n                                        class=\\"bi bi-star-fill\\"\\n                                        aria-hidden=\\"true\\"\\n                                        ngbTooltip=\\"{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        container=\\"body\\"\\n                                    ></i>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\n                                    <i class=\\"bi bi-star-fill\\" aria-hidden=\\"true\\"></i>\\n                                </ng-container>\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.SUBMIT_FEEDBACK\' | translate }}</span>\\n                            </a>\\n                        </div>\\n\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\" class=\\"mb-1\\">\\n                            <a class=\\"help-item\\" (click)=\\"openSupportModal()\\" [ngClass]=\\"{ small: smallMenu === true }\\">\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\n                                    <i\\n                                        class=\\"bi bi-headset\\"\\n                                        aria-hidden=\\"true\\"\\n                                        ngbTooltip=\\"{{ \'COMMON.GET_SUPPORT\' | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        container=\\"body\\"\\n                                    ></i>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\n                                    <i class=\\"bi bi-headset\\" aria-hidden=\\"true\\"></i>\\n                                </ng-container>\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.GET_SUPPORT\' | translate }}</span>\\n                            </a>\\n                        </div>\\n\\n                        <div [ngClass]=\\"{ small: smallMenu === true }\\">\\n                            <a\\n                                class=\\"help-item\\"\\n                                target=\\"_blank\\"\\n                                [href]=\\"supplierHelpCenterUrl\\"\\n                                [ngClass]=\\"{ small: smallMenu === true }\\"\\n                                [routerLinkActive]=\\"[\'is-active\']\\"\\n                                [routerLinkActiveOptions]=\\"{ exact: false }\\"\\n                            >\\n                                <ng-container *ngIf=\\"smallMenu === true\\">\\n                                    <i\\n                                        class=\\"bi bi-question-circle-fill bottom\\"\\n                                        aria-hidden=\\"true\\"\\n                                        ngbTooltip=\\"{{ \'COMMON.HELP_CENTER\' | translate }}\\"\\n                                        placement=\\"end\\"\\n                                        container=\\"body\\"\\n                                    ></i>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\"smallMenu === false\\">\\n                                    <i class=\\"bi bi-question-circle-fill\\" aria-hidden=\\"true\\"></i>\\n                                </ng-container>\\n                                <span *ngIf=\\"smallMenu === false\\">{{ \'COMMON.HELP_CENTER\' | translate }}</span>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    --\x3e\\n                </nav>\\n            </div>\\n        </div>\\n\\n\\n        \x3c!-- Main Wrapper --\x3e\\n        <div\\n            (scroll)=\\"onScroll($event)\\"\\n            class=\\"main-content-wrapper px-0\\"\\n\\n            [ngClass]=\\"{\\n                \'small-side-nav\': smallMenu === true,\\n                \'no-side-nav\': showSideNav === false,\\n                \'hide-overflow\': layoutService.hideOverflow\\n            }\\"\\n        >\\n\\n            \x3c!-- Application Toolbar and Page Header --\x3e\\n            <div class=\\"toolbar\\">\\n                \x3c!-- App Header --\x3e\\n                <div class=\\"main-header\\">\\n                    \x3c!-- Global Search --\x3e\\n                    <ng-container *ngIf=\\"!isSupplier\\">\\n                        <ui-global-search></ui-global-search>\\n                    </ng-container>\\n\\n                    <span class=\\"spacer\\"></span>\\n\\n                    \x3c!-- Current UI Breakpoint (Only visible in Developer Hub enviroment deployment) --\x3e\\n                    <ng-container *ngIf=\\"environmentVariables.devhub === true\\">\\n                        \x3c!-- Screen size widget START --\x3e\\n                        <div class=\\"disable-select\\">\\n                            <span class=\\"badge bg-dark d-xl-inline d-none me-3 screen-size-badge\\">XL</span>\\n                            <span class=\\"badge bg-success d-lg-inline d-xl-none d-none me-3 screen-size-badge\\">LG</span>\\n                            <span class=\\"badge bg-warning d-md-inline d-lg-none d-none me-3 screen-size-badge\\">MD</span>\\n                            <span class=\\"badge bg-info d-sm-inline d-md-none d-none me-3 screen-size-badge\\">SM</span>\\n                            <span class=\\"badge bg-danger d-inline d-sm-none me-3 screen-size-badge\\">XS</span>\\n                        </div>\\n                        \x3c!--Screen size widget END --\x3e\\n                    </ng-container>\\n\\n                    \x3c!-- Language Switcher --\x3e\\n                    <ui-language-switcher class=\\"me-3\\" [ngClass]=\\"{\'me-5\': this.userEmailFirstLetter === \'\'}\\" [selectedLang]=\\"currentLang\\"></ui-language-switcher>\\n\\n                    \x3c!-- User Widget START --\x3e\\n                    <div\\n                        *ngIf=\\"this.userEmailFirstLetter !== \'\'\\"\\n                        ngbDropdown\\n                        #settingsDropdown=\\"ngbDropdown\\"\\n                        placement=\\"bottom-right\\"\\n                        class=\\"d-inline-block\\"\\n                    >\\n                        <div\\n                            ngbDropdownAnchor\\n                            class=\\"user-info\\"\\n                            id=\\"settingsDropdown\\"\\n                            (click)=\\"$event.stopPropagation(); settingsDropdown.open()\\"\\n                        >\\n                            <div class=\\"text-end\\"></div>\\n                            <div class=\\"profile-box\\">\\n                                <div class=\\"avatar-header-image\\" ngbTooltip=\\"{{ \'MENU.PROFILE\' | translate }}\\" placement=\\"bottom\\">\\n                                    {{ userEmailFirstLetter | uppercase }}\\n                                </div>\\n                            </div>\\n                        </div>\\n                        \x3c!--Dropdown Card START--\x3e\\n                        <div ngbDropdownMenu aria-labelledby=\\"settingsDropdown\\">\\n                            <div class=\\"profile-dropdown\\">\\n                                <div class=\\"avatar-header-image\\">{{ userEmailFirstLetter | uppercase }}</div>\\n                                <span id=\\"username\\" class=\\"username\\">\\n                                    {{ (authenticatedUser$ | async)?.email }}\\n                                </span>\\n                                <button type=\\"button\\" class=\\"btn btn-outline-primary btn-sm profile-manage-account-dropdown\\" (click)=\\"onManageAssentAccountClick()\\" *ngIf=\\"profileManager\\">\\n                                {{ \'COMMON.MANAGE_YOUR_ASSENT_ACCOUNT\' | translate }}\\n                                </button>\\n                                <button type=\\"button\\" class=\\"btn btn-outline-primary btn-sm profile-log-out\\" (click)=\\"onLogoutClick()\\">\\n                                    {{ \'COMMON.LOG_OUT\' | translate }}\\n                                </button>\\n                                <hr class=\\"profile-dropdown-divider\\" />\\n                                <div class=\\"statement-links\\">\\n                                    <a [href]=\\"\'https://www.assent.com/privacy\'\\" target=\\"_blank\\">{{ \'MENU.PRIVACY_POLICY\' | translate }}</a>\\n                                    <i class=\\"bi bi-dot\\"></i>\\n                                    \x3c!--TODO add ToS link when it\'s been made--\x3e\\n                                    <a [href]=\\"termsOfServiceUrl\\" target=\\"_blank\\">{{\\n                                        \'MENU.TERMS_OF_SERVICE\' | translate\\n                                    }}</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        \x3c!--Dropdown Card END--\x3e\\n\\n                        \x3c!-- User Widget END --\x3e\\n                        \x3c!--Top nav profile sections END--\x3e\\n                    </div>\\n                </div>\\n\\n                \x3c!-- Page Header Component (Using page header service) --\x3e\\n                <div *ngIf=\\"pageHeaderService.showPageHeader === true\\" class=\\"w-100 border-bottom\\">\\n                    <ui-page-header></ui-page-header>\\n                </div>\\n\\n                \x3c!-- Page Footer Component (Using page footer service) --\x3e\\n                <div id=\\"footer\\" [ngClass]=\\"{\\n                    \'small-side-nav\': smallMenu === true,\\n                    \'no-side-nav\': showSideNav === false,\\n                    \'hide-overflow\': layoutService.hideOverflow,\\n                    \'scrollbar-is-visible\': layoutService.scrollBarIsVisible === true\\n                }\\"  *ngIf=\\"pageFooterService.showPageFooter === true\\">\\n                    <ui-page-footer></ui-page-footer>\\n                </div>\\n            </div>\\n\\n            \x3c!-- Main Application Router Outlet --\x3e\\n            \x3c!-- Entry point for Feature Module --\x3e\\n            <div\\n                (scroll)=\\"onScroll($event)\\"\\n                class=\\"main-content\\"\\n                [ngClass]=\\"{\'m-4\': (layoutService.showMargins$ | async) === true, \'calc-top\': (layoutService.calcTop$ | async) === true}\\"\\n            >\\n                <router-outlet></router-outlet>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n<div class=\\"pendo-resource-center\\">\\n    <a href=\\"https://assentcompliance.my.site.com/SupplierCustomerPortal/s/?language=en_US\\" target=\\"_blank\\">\\n        <img style=\\"height: 50px; width: 50px\\" class=\\"reference-logo\\" src=\\"assets/images/pendo-resource-center.svg\\" alt=\\"Meridian logo\\" />\\n    </a>\\n</div>\\n\\n<ui-toasts-container\\n    class=\\"toasts-container\\"\\n    aria-live=\\"polite\\"\\n    aria-atomic=\\"true\\"\\n    [ngClass]=\\"{ small: smallMenu === true }\\"\\n></ui-toasts-container>\\n"},{"name":"UiModalBaseComponent","id":"component-UiModalBaseComponent-c925e06148ad4fa54fa2d263bc5351e7b539e3af3867b305998bfa63103e7877d6d7708e04e4be63ea2d7fecf2e541f5b9f269df837bb7ac3132a203fbd39ce8","file":"libs/ui/src/lib/modules/modal/components/modal-base/modal-base.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-modal-base","styleUrls":["./modal-base.component.scss"],"styles":[],"templateUrl":["./modal-base.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123]},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123]}],"methodsClass":[{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1749,"end":1753,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1743,"end":1748,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1939,"end":1943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1933,"end":1938,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}]},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123]}],"deprecated":true,"deprecationMessage":"Use `UiModalComponent` instead","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48}],"description":"<p>Modal Base Component</p>\\n","rawdescription":"\\n\\nModal Base Component\\n\\n","type":"component","sourceCode":"import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from \'@angular/core\';\\n// Ngx\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\n// Services\\n//TODO-remove import { UiModalService } from \'@lib/modules/modal/services/modal.service\';\\n\\n/**\\n * Modal Base Component\\n *\\n * @deprecated Use `UiModalComponent` instead\\n */\\n@Component({\\n    selector: \'ui-modal-base\',\\n    templateUrl: \'./modal-base.component.html\',\\n    styleUrls: [\'./modal-base.component.scss\'],\\n})\\nexport class UiModalBaseComponent implements AfterViewInit {\\n    /**\\n     * Reference to the modal body\\n     */\\n    @ViewChild(\'modalBody\') public myNameElem: ElementRef;\\n\\n    /**\\n     * Data to be passed to the modal\\n     */\\n    @Input() public data: any = null;\\n\\n    /**\\n     * Flag to show/hide the border in the modal\\n     */\\n    public noBorder = false;\\n\\n    constructor(public activeModal: NgbActiveModal) {}\\n\\n    /**\\n     * On window resize event\\n     */\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        this.updateBorder();\\n    }\\n\\n    public ngAfterViewInit(): void {\\n        setTimeout(() => {\\n            this.updateBorder();\\n        });\\n    }\\n\\n    /**\\n     * Update the border of the modal\\n     */\\n    public updateBorder() {\\n        // Show Header and Footer border only when the vertical scrollbar is activated.\\n        if (this.myNameElem.nativeElement.scrollHeight <= this.myNameElem.nativeElement.offsetHeight) {\\n            this.noBorder = true;\\n        } else {\\n            this.noBorder = false;\\n        }\\n    }\\n\\n    /**\\n     * Dismiss the modal\\n     *\\n     * @param data - Data to be passed to the parent component\\n     */\\n    public dismiss(data?: any) {\\n        this.activeModal.dismiss(data);\\n    }\\n\\n    /**\\n     * Submit the modal\\n     *\\n     * @param data - Data to be passed to the parent component\\n     */\\n    public submit(data?: any) {\\n        this.activeModal.close(data);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./modal-base.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"templateData":""},{"name":"UiModalComponent","id":"component-UiModalComponent-0f5c4a36b79db04e56534bfcf29449af4a47821b5864d6becdae5f303a6d0d47607ee3135e95eeeee308593d1ce20611854b3be13366d8b24930cd2a1ff70bc3","file":"libs/ui/src/lib/modules/modal/components/modal/modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-modal","styleUrls":["./modal.component.scss"],"styles":[],"templateUrl":["./modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"actionButtons","deprecated":false,"deprecationMessage":"","line":18,"type":"Array<IUiActionButton>","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"showCloseButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"showFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"showHeader","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"titleText","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]},{"name":"type","defaultValue":"UiModalTypeEnum.Modal","deprecated":false,"deprecationMessage":"","line":19,"type":"UiModalTypeEnum","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"card","deprecated":false,"deprecationMessage":"","type":"UiCardComponent","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'card\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, ViewChild } from \'@angular/core\';\\nimport { UiModalTypeEnum } from \'@lib/enums/modal-type.enum\';\\nimport { IUiActionButton } from \'@lib/modules/button/interfaces/action-button.interface\';\\nimport { UiCardComponent } from \'@lib/modules/card/components/card/card.component\';\\nimport { UiModalService } from \'@lib/modules/modal/services/modal.service\';\\n\\n@Component({\\n    selector: \'ui-modal\',\\n    templateUrl: \'./modal.component.html\',\\n    styleUrls: [\'./modal.component.scss\'],\\n})\\nexport class UiModalComponent implements OnInit {\\n    @Input() public id: string;\\n    @Input() public showHeader = false;\\n    @Input() public showFooter = false;\\n    @Input() public showCloseButton = true;\\n    @Input() public titleText;\\n    @Input() public actionButtons: Array<IUiActionButton>;\\n    @Input() public type: UiModalTypeEnum = UiModalTypeEnum.Modal;\\n    @ViewChild(\'card\') public card: UiCardComponent;\\n\\n    constructor(private _modalService: UiModalService) {}\\n\\n    public ngOnInit(): void {}\\n\\n    public onCloseBtnClick(){\\n        this._modalService.dismiss(\'This modal was dismissed\');\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_modalService","type":"UiModalService","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"_modalService","type":"UiModalService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<ui-card \\n    #card \\n    id=\\"{{id}}_card\\" \\n    [showHeader]=\\"showHeader\\" \\n    [showFooter]=\\"showFooter\\" \\n    [titleText]=\\"titleText\\" \\n    [showCloseButton]=\\"showCloseButton\\" \\n    [actionButtons]=\\"actionButtons\\" \\n    (closeButtonClick)=\\"onCloseBtnClick()\\"\\n>\\n    <ng-content></ng-content>\\n</ui-card>\\n"},{"name":"UiMultiPillComponent","id":"component-UiMultiPillComponent-b3404ce21813829d7e7cf738992ec1dd21c5b961ba77eee26a94756903c463d04e109a68b576966f7391ef35a19b7b951121d67e0d0f05dc23e161bad5b79702","file":"libs/ui/src/lib/modules/form-controls/pills/components/multi-pill/multi-pill.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-multi-pill","styleUrls":["./multi-pill.component.scss"],"styles":[],"templateUrl":["./multi-pill.component.html"],"viewProviders":[],"inputsClass":[{"name":"isAggregated","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]},{"name":"pills","defaultValue":"new Array<UiPillComponent>()","deprecated":false,"deprecationMessage":"","line":12,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"aggregatePillColor","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"aggregatePillCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"aggregatePillTextArray","defaultValue":"new Array<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"aggregatePillWidth","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"container","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":13,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'container\'"}],"modifierKind":[123]},{"name":"pillEle","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"size","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"sizeArray","defaultValue":"new Array<any>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"uiPill","deprecated":false,"deprecationMessage":"","type":"QueryList<ElementRef>","optional":false,"description":"","line":14,"decorators":[{"name":"ViewChildren","stringifiedArguments":"\'uiPill\', {read: ElementRef}"}],"modifierKind":[123]},{"name":"uiPillArray","defaultValue":"new Array<any>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]}],"methodsClass":[{"name":"addPill","args":[{"name":"newPills","type":"Array<any>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"newPills","type":"Array<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addPillWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"checkColumnWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getPillData","args":[{"name":"id","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"id","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]},{"name":"pillConfig","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"removePill","args":[{"name":"pill","type":"UiPillComponent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"pill","type":"UiPillComponent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setPillId","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":128}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, QueryList, ViewChild, ViewChildren } from \'@angular/core\';\\nimport { UiPillComponent } from \'../pill/pill.component\';\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\n\\n@Component({\\n    selector: \'ui-multi-pill\',\\n    templateUrl: \'./multi-pill.component.html\',\\n    styleUrls: [\'./multi-pill.component.scss\'],\\n})\\nexport class UiMultiPillComponent implements OnInit, AfterViewInit {\\n    @Input() public isAggregated = true;\\n    @Input() public pills = new Array<UiPillComponent>();\\n    @ViewChild(\'container\') public container: ElementRef;\\n    @ViewChildren(\'uiPill\', { read: ElementRef }) public uiPill: QueryList<ElementRef>;\\n\\n    public pillEle;\\n    public aggregatePillCount = 0;\\n    public aggregatePillTextArray = new Array<string>();\\n    public aggregatePillWidth;\\n    public aggregatePillColor;\\n    public size;\\n    public sizeArray = new Array<any>();\\n    public uiPillArray = new Array<any>();\\n\\n    constructor() {}\\n\\n    public ngOnInit() {\\n        this.sizeArray = new Array<any>();\\n        this.pillConfig();\\n    }\\n\\n    public pillConfig() {\\n        this.setPillId();\\n\\n        if (this.isAggregated) {\\n            setTimeout(() => {\\n                this.aggregatePillCount = 0;\\n                this.checkColumnWidth();\\n            }, 10);\\n        }\\n        //If any pill has close button configured, all will contain close button\\n        //If pills have aggregated configuration set to true, close button config will be ignored\\n        if (this.isAggregated === true) {\\n            for (let i = 0; i < this.pills.length; i++) {\\n                this.pills[i].hasCloseButton = false;\\n            }\\n        } else if (this.isAggregated === false) {\\n            if (this.pills.some((e) => e.hasCloseButton === true)) {\\n                for (let i = 0; i < this.pills.length; i++) {\\n                    this.pills[i].hasCloseButton = true;\\n                }\\n            }\\n        }\\n\\n        //All pills must have the same size\\n        //If more than one size is provided, all pills will be set to medium\\n        if (new Set(this.pills).size === this.pills.length) {\\n            for (let i = 0; i < this.pills.length; i++) {\\n                this.pills[i].size = UiPillSizeEnum.md;\\n            }\\n        }\\n        //The color of the aggregated pill will be the color of the last pill\\n        this.aggregatePillColor = this.pills[this.pills.length - 1].color;\\n    }\\n\\n    public removePill(pill: UiPillComponent) {\\n        this.pills.splice(this.pills.indexOf(pill), 1);\\n    }\\n\\n    public ngAfterViewInit() {\\n        this.addPillWidth();\\n    }\\n\\n    //Saves the width of each pill - when \'hidden\' class is applied, width = 0\\n    //This way, we can still use the pills width to calculate against the width of the container for aggregate state\\n    public addPillWidth() {\\n        this.sizeArray = new Array<any>();\\n\\n        for (let i = 0; i < this.pills.length; i++) {\\n            if (this.container !== null) {\\n                this.sizeArray.push(this.uiPill.toArray()[i].nativeElement.offsetWidth);\\n            }\\n        }\\n    }\\n\\n    public checkColumnWidth() {\\n        this.size = 0;\\n        if (this.isAggregated === true) {\\n            for (let i = 0; i < this.uiPill.length; i++) {\\n                //size is the sum of all pill widths\\n                this.size += this.sizeArray[i];\\n                if (this.size < this.container.nativeElement.clientWidth - 50) {\\n                    this.uiPill.toArray()[i].nativeElement.classList.remove(\'hidden-pill\');\\n                    this.uiPill.toArray()[i].nativeElement.querySelector(\'.rounded-pill\').classList.remove(\'hidden\');\\n                } else {\\n                    this.uiPill.toArray()[i].nativeElement.classList.add(\'hidden-pill\');\\n                    this.uiPill.toArray()[i].nativeElement.querySelector(\'.rounded-pill\').classList.add(\'hidden\');\\n                    this.aggregatePillCount++;\\n                    this.aggregatePillTextArray.push(\' \' + this.uiPill.toArray()[i].nativeElement.textContent);\\n                }\\n            }\\n        }\\n    }\\n\\n    public setPillId() {\\n        for (let i = 0; i < this.pills.length; i++) {\\n            this.pills[i].id = \'pills\' + \'-\' + i;\\n        }\\n    }\\n\\n    public addPill(newPills: Array<any>) {\\n        this.aggregatePillTextArray = new Array<any>();\\n\\n        for (let i = 0; i < newPills.length; i++) {\\n            this.pills.push(newPills[i]);\\n        }\\n        setTimeout(() => {\\n            this.addPillWidth();\\n        }, 10);\\n        this.pillConfig();\\n    }\\n\\n    public getPillData(id) {\\n        return this.pills[id];\\n    }\\n\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        this.aggregatePillCount = 0;\\n        this.aggregatePillTextArray = new Array<any>();\\n        this.checkColumnWidth();\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".multi-pill-container {\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: flex-start;\\n    justify-content: flex-start;\\n    flex-direction: row;\\n    flex-wrap: nowrap;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    gap: 0.3rem;\\n\\n    .hidden-pill {\\n        display: none;\\n    }\\n}\\n","styleUrl":"./multi-pill.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":23},"implements":["OnInit","AfterViewInit"],"templateData":"\\n<div [ngClass]=\\"{ \'multi-pill-container\': isAggregated === true }\\" id=\\"multi-pill-container\\" #container>\\n    <ui-pill\\n    #uiPill\\n        *ngFor=\\"let pill of pills\\"\\n        [pillText]=\\"pill.pillText\\"\\n        [hasCloseButton]=\\"pill.hasCloseButton\\"\\n        [color]=\\"pill.color\\"\\n        [icon]=\\"pill.icon\\"\\n        [size]=\\"pill.size\\"\\n        [value]=\\"pill.value\\"\\n        [id]=\\"pill.id\\"\\n        [isAggregated]=\\"isAggregated\\"\\n        [ngClass]=\\"{ \'is-aggregated\': isAggregated === true }\\"\\n        (xButtonClick)=\\"removePill(pill)\\"\\n    >\\n    </ui-pill>\\n    <span\\n        *ngIf=\\"isAggregated && aggregatePillCount > 0\\"\\n        id=\\"aggregate-pill\\"\\n        class=\\"badge {{ aggregatePillColor }} rounded-pill float-start noHover {{ pills.size }}\\"\\n        [ngbTooltip]=\\"aggregatePillTextArray\\"\\n        tooltipClass=\\"pill-tooltip\\"\\n    >\\n        +{{ aggregatePillCount }}\\n    </span>\\n</div>\\n"},{"name":"UiOffcanvasComponent","id":"component-UiOffcanvasComponent-db1a48bf8167691c2692dcac68ed83d3e5a1ef8c0d60fc043d42b5f5c38b30aad185f067c0df68df1e71a450eb67c91963b9a8c4b7e983f72f45daf435849948","file":"libs/ui/src/lib/modules/user-auth-manager/components/offcanvas/offcanvas.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-offcanvas","styleUrls":[],"styles":[],"templateUrl":["./offcanvas.component.html"],"viewProviders":[],"inputsClass":[{"name":"cancelButtonLabel","defaultValue":"\'COMMON.CANCEL\'","deprecated":false,"deprecationMessage":"","line":33,"type":"string","decorators":[]},{"name":"domId","defaultValue":"\'offcanvasComponentId\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe id of the offcanvas component\\nThis is used to be able to open it from other components.\\n\\"data-bs-toggle\\"=\\"\'#\' + domId\\" attribute has to be added to <button> or <a> element that opens the offcanvas\\nExample: <button type=\\"button\\" [attr.data-bs-target]=\\"\'#\' + domId\\">Open Offcanvas</button>\\n\\n","description":"<p>The id of the offcanvas component\\nThis is used to be able to open it from other components.\\n&quot;data-bs-toggle&quot;=&quot;&#39;#&#39; + domId&quot; attribute has to be added to <button> or <a> element that opens the offcanvas\\nExample: &lt;button type=&quot;button&quot; [attr.data-bs-target]=&quot;&#39;#&#39; + domId&quot;&gt;Open Offcanvas</button></p>\\n","line":24,"type":"string","decorators":[]},{"name":"saveButtonLabel","defaultValue":"\'COMMON.SAVE\'","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"showFooter","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis configuration is used to show the footer section of the offcanvas\\nWhen it\'s disabled, the following configurations are not in use\\n\\n","description":"<p>This configuration is used to show the footer section of the offcanvas\\nWhen it&#39;s disabled, the following configurations are not in use</p>\\n","line":31,"type":"boolean","decorators":[]},{"name":"title","defaultValue":"\'COMMON.TITLE\'","deprecated":false,"deprecationMessage":"","line":25,"type":"string","decorators":[]}],"outputsClass":[{"name":"saveClicked","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":34,"type":"EventEmitter<void>"}],"propertiesClass":[],"methodsClass":[{"name":"onSaveClicked","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \'@angular/core\';\\n\\n@Component({\\n    selector: \'ui-offcanvas\',\\n    templateUrl: \'./offcanvas.component.html\',\\n})\\n\\n/**\\n * Offcanvas component\\n * This component is based on Bootstrap 5 offcanvas component\\n * https://getbootstrap.com/docs/5.3/components/offcanvas/\\n * The offcanvas element is always placed on the right of the viewport\\n *\\n */\\nexport class UiOffcanvasComponent {\\n    /**\\n     * The id of the offcanvas component\\n     * This is used to be able to open it from other components.\\n     * \\"data-bs-toggle\\"=\\"\'#\' + domId\\" attribute has to be added to <button> or <a> element that opens the offcanvas\\n     * Example: <button type=\\"button\\" [attr.data-bs-target]=\\"\'#\' + domId\\">Open Offcanvas</button>\\n     *\\n     */\\n    @Input() public domId = \'offcanvasComponentId\';\\n    @Input() public title = \'COMMON.TITLE\';\\n    /**\\n     * This configuration is used to show the footer section of the offcanvas\\n     * When it\'s disabled, the following configurations are not in use\\n     *\\n     */\\n    @Input() public showFooter = false;\\n    @Input() public saveButtonLabel = \'COMMON.SAVE\';\\n    @Input() public cancelButtonLabel = \'COMMON.CANCEL\';\\n    @Output() public saveClicked: EventEmitter<void> = new EventEmitter<void>();\\n\\n    constructor() {}\\n\\n    public onSaveClicked() {\\n        this.saveClicked.emit();\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":34},"templateData":"<div class=\\"offcanvas offcanvas-end vh-100 d-flex flex-column overflow-hidden\\" tabindex=\\"-1\\" [id]=\\"domId\\"\\n    aria-labelledby=\\"offcanvasRegulationsLabel\\">\\n    <div class=\\"modal-header offcanvas-header flex-shrink-1\\">\\n        <h5 class=\\"offcanvas-title\\" [id]=\\"domId + \'Title\'\\">\\n            {{ title | translate }}\\n        </h5>\\n        <button type=\\"button\\" class=\\"btn-close\\" data-bs-dismiss=\\"offcanvas\\" aria-label=\\"Close\\"></button>\\n    </div>\\n    <div class=\\"offcanvas-body d-flex flex-row overflow-auto\\">\\n        <div class=\\"d-flex flex-column\\">\\n            <ng-content></ng-content>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"showFooter\\" class=\\"modal-footer flex-shrink-1\\">\\n        <button [id]=\\"domId + \'CloseButton\'\\" type=\\"button\\" class=\\"btn btn-outline-primary\\" data-bs-dismiss=\\"offcanvas\\"\\n            aria-label=\\"Close\\">\\n            {{ cancelButtonLabel | translate }}\\n        </button>\\n        <button [id]=\\"domId + \'SaveButton\'\\" type=\\"button\\" class=\\"btn btn-primary\\" data-bs-dismiss=\\"offcanvas\\"\\n            (click)=\\"onSaveClicked()\\">\\n            {{ saveButtonLabel | translate }}\\n        </button>\\n    </div>\\n</div>"},{"name":"UiOneTimePinComponent","id":"component-UiOneTimePinComponent-ce1c69222792d98b0568e8ef3d288079fc9d435d51700be6ba4119ff1cabfb7d574401d7c82c0139797f0462ddc1c83777158a5668810147755476bf3f1e8d5f","file":"libs/ui/src/lib/modules/authentification/components/login/one-time-pin.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-one-time-pin","styleUrls":["./one-time-pin.component.scss"],"styles":[],"templateUrl":["./one-time-pin.component.html"],"viewProviders":[],"inputsClass":[{"name":"state","deprecated":false,"deprecationMessage":"","line":48,"type":"UiOneTimePinComponentStateEnum","decorators":[]},{"name":"editMode","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":39,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"_acpDashboardPath","defaultValue":"\'acp/corrective-actions/tasks/open-tasks\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51,"modifierKind":[121]},{"name":"_assenteeLoginPath","defaultValue":"\'/login\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":53,"modifierKind":[121]},{"name":"_cookieDomain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":55,"modifierKind":[121]},{"name":"_enterPinPath","defaultValue":"\'/passcode\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52,"modifierKind":[121]},{"name":"_secureFlag","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[121]},{"name":"allStates","defaultValue":"UiOneTimePinComponentStateEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"buttonText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"currentYear","defaultValue":"new Date().getFullYear()","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":40,"modifierKind":[123]},{"name":"email","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"errorMessage","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"hasErrors","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"hidePassword","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"isModalOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"loading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"mainTitle","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":41,"modifierKind":[123]},{"name":"passcodeClass","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"subTitle","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"displayUserLogoutNotification","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":353,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"generatePin","args":[{"name":"redirect","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":396,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"redirect","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getConsentErrorMessage","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":339,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getUsernameValue","args":[{"name":"rememberMe","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":329,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"rememberMe","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"numberOnly","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":374,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSubmit","args":[{"name":"buttonType","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"buttonType","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openSupportModal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":320,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"redirectAssentees","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":383,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { HttpErrorResponse } from \'@angular/common/http\';\\n// Bootstrap\\nimport { NgbModal } from \'@ng-bootstrap/ng-bootstrap\';\\n// Classes\\nimport { UiModalConfig } from \'@lib/modules/modal/configuration/modal-config.class\';\\n// RxJS\\nimport { of } from \'rxjs\';\\nimport { catchError, take, takeUntil, tap } from \'rxjs/operators\';\\n// Ngx\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { CookieService } from \'ngx-cookie-service\';\\n// enum\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\nimport { UiToastTypesEnum } from \'@lib/services/toast-notification/enums\';\\n// const\\nimport { REGEX_CONST } from \'@app/shared/constants/common.const\';\\n// Services\\nimport { UiAuthenticationService } from \'@lib/services/authentication/authentication.service\';\\nimport { UiConfigurationService } from \'@lib/services/configuration/configuration.service\';\\nimport { UiPasswordlessLoginService } from \'@lib/modules/authentification/services/passwordless-login.service\';\\nimport { UiToastService } from \'@lib/services/toast-notification/toast.service\';\\n// Component\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\nimport { UiSupportModalComponent } from \'@lib/modules/layout/components/support-modal/support-modal.component\';\\nimport { UiPendoService } from \'@lib/services/analytics/pendo\';\\n\\n@Component({\\n    selector: \'ui-one-time-pin\',\\n    templateUrl: \'./one-time-pin.component.html\',\\n    styleUrls: [\'./one-time-pin.component.scss\'],\\n})\\nexport class UiOneTimePinComponent extends UiFormBaseComponent implements OnInit {\\n    public loading = false;\\n    public hasErrors = false;\\n    public hidePassword = true;\\n    public currentYear: number = new Date().getFullYear();\\n    public mainTitle: string;\\n    public subTitle: string;\\n    public buttonText: string;\\n    public errorMessage: string;\\n    public passcodeClass: string;\\n    public allStates = UiOneTimePinComponentStateEnum;\\n    public email = \'\';\\n    @Input() public state: UiOneTimePinComponentStateEnum;\\n    public isModalOpen = false;\\n\\n    private _acpDashboardPath = \'acp/corrective-actions/tasks/open-tasks\';\\n    private _enterPinPath = \'/passcode\';\\n    private _assenteeLoginPath = \'/login\';\\n    private _secureFlag = false;\\n    private _cookieDomain: string;\\n\\n    constructor(\\n        private _router: Router,\\n        private _authService: UiAuthenticationService,\\n        private _passwordlessLoginService: UiPasswordlessLoginService,\\n        private _configurationService: UiConfigurationService,\\n        private _translateService: TranslateService,\\n        private _cookieService: CookieService,\\n        private _route: ActivatedRoute,\\n        private _toastService: UiToastService,\\n        private _modalService: NgbModal,\\n        private _pendoService: UiPendoService,\\n    ) {\\n        super();\\n        // this language will be used as a fallback when a translation isn\'t found in the current language\\n        this._translateService.setDefaultLang(\'en\');\\n        // the lang to use, if the lang isn\'t available, it will use the current loader to get them\\n        this._translateService.use(\'en\');\\n    }\\n\\n    public ngOnInit() {\\n        this._cookieDomain = this._passwordlessLoginService.getCookieDomain();\\n        if (this._authService.isLoggedIn()) {\\n            this._router.navigate([this._acpDashboardPath]);\\n        }\\n\\n        // If supplier login is not enabled, then enable only acp login mode\\n        if (this._configurationService.appConfig.supplierLoginEnabled) {\\n            const navigatorLanguageSmallCode = window.navigator.language.slice(0, 2);\\n            this._translateService.use(navigatorLanguageSmallCode);\\n        } else {\\n            this.state = UiOneTimePinComponentStateEnum.acp;\\n        }\\n        // Initialize the form group\\n        this.form = new FormGroup({\\n            username: new FormControl(\'\'),\\n        });\\n\\n        switch (this.state) {\\n            case UiOneTimePinComponentStateEnum.generatePin:\\n                const rememberMe = this._cookieService.get(this._configurationService.appConfig.rememberMe);\\n                // Form setup\\n                this.formControls = {\\n                    username: {\\n                        value: this.getUsernameValue(rememberMe),\\n                        validators: [Validators.required, Validators.pattern(REGEX_CONST.EMAIL)],\\n                    },\\n                    rememberMe: {\\n                        value: rememberMe === \'true\' ? \'true\' : null,\\n                        validators: [],\\n                    },\\n                    passcode: {\\n                        value: \'\',\\n                        validators: [Validators.required, Validators.pattern(\'[0-9]{6}\')],\\n                    },\\n                };\\n                this.createForm(this.formControls);\\n\\n                // Get resource strings\\n                this._translateService.get(\'COMMON.ASSENT_SUSTAINABILITY_PLATFORM\').subscribe((res: string) => {\\n                    this.mainTitle = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.CONFIRM_EMAIL\').subscribe((res: string) => {\\n                    this.subTitle = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.NEXT\').subscribe((res: string) => {\\n                    this.buttonText = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\n                    this.errorMessage = res;\\n                });\\n\\n                this.displayUserLogoutNotification();\\n                break;\\n            case UiOneTimePinComponentStateEnum.enterPin:\\n                // Check if the user\'s email has been set on the previous step (generate PIN). If not, redirect to the root page.\\n                if (!this._cookieService.get(this._configurationService.appConfig.emailCookieId)) {\\n                    // No email cookie found. Redirecting to the root page.\\n                    this._router.navigate([\'\']);\\n                }\\n\\n                this.formControls = {\\n                    passcode: {\\n                        value: \'\',\\n                        validators: [Validators.required, Validators.pattern(\'[0-9]{6}\')],\\n                    },\\n                };\\n                this.createForm(this.formControls);\\n\\n                this._translateService.get(\'AUTHENTICATION.ENTER_YOUR_CODE\').subscribe((res: string) => {\\n                    this.mainTitle = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.SIGN_IN_BELOW_PIN\').subscribe((res: string) => {\\n                    this.subTitle = res + \' \' + this._cookieService.get(this._configurationService.appConfig.emailCookieId);\\n                });\\n                this._translateService.get(\'COMMON.CONTINUE\').subscribe((res: string) => {\\n                    this.buttonText = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.SOMETHING_WRONG\').subscribe((res: string) => {\\n                    this.errorMessage = res;\\n                });\\n\\n                this.form.get(\'passcode\').valueChanges.subscribe((x) => {\\n                    if (x.length === 6) {\\n                        this.passcodeClass = \'no-cursor\';\\n                    } else {\\n                        this.passcodeClass = \'\';\\n                    }\\n                });\\n                break;\\n            default:\\n                this.formControls = {\\n                    username: {\\n                        value: \'\',\\n                        validators: [Validators.required, Validators.pattern(REGEX_CONST.EMAIL)],\\n                    },\\n                    password: {\\n                        value: \'\',\\n                        validators: [Validators.required],\\n                    },\\n                };\\n                this.createForm(this.formControls);\\n\\n                if (this._configurationService.environmentVariables.devhub) {\\n                    this._acpDashboardPath = \'/acp/developer-hub/dashboard\';\\n                }\\n\\n                this._translateService.get(\'COMMON.WELCOME\').subscribe((res: string) => {\\n                    this.mainTitle = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.SIGN_IN_BELOW_TEXT\').subscribe((res: string) => {\\n                    this.subTitle = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.NEXT\').subscribe((res: string) => {\\n                    this.buttonText = res;\\n                });\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.INVALID_CREDENTIALS\').subscribe((res: string) => {\\n                    this.errorMessage = res;\\n                });\\n\\n                this.displayUserLogoutNotification();\\n        }\\n        this.editMode = true;\\n        this.loading = false;\\n    }\\n\\n    public onSubmit(buttonType) {\\n        this.loading = true;\\n        this.hasErrors = false;\\n        this.errorMessage = \'\';\\n\\n        switch (this.state) {\\n            case UiOneTimePinComponentStateEnum.generatePin: {\\n                const userName = this.form.controls.username.value.trim().toLowerCase();\\n                this.form.controls.username.setValue(userName);\\n                if (this.form.controls.username.invalid) {\\n                    this.loading = false;\\n                    return;\\n                }\\n                this.form.controls.username.markAsTouched();\\n\\n                const expiryDate = new Date();\\n                expiryDate.setFullYear(expiryDate.getFullYear() + 1);\\n                const rememberMe = this.form.controls.rememberMe.value === true;\\n\\n                this._cookieService.set(\\n                    this._configurationService.appConfig.rememberMe,\\n                    rememberMe.toString(),\\n                    expiryDate,\\n                    \'\',\\n                    this._cookieDomain,\\n                    this._secureFlag\\n                );\\n\\n                this._cookieService.set(\\n                    this._configurationService.appConfig.emailCookieId,\\n                    userName,\\n                    expiryDate,\\n                    \'\',\\n                    this._cookieDomain,\\n                    this._secureFlag\\n                );\\n\\n                if (!this.redirectAssentees()) {\\n                    if (this._configurationService.appConfig.enablePendoAcpUi) {\\n                        this._pendoService.initializePendo(\\n                            userName,\\n                            this._configurationService.appConfig.pendoApiKey,\\n                            this._configurationService.appConfig.environmentName\\n                        );\\n                    }\\n                    // generate OTP\\n                    this.generatePin(true);\\n                }\\n\\n                break;\\n            }\\n            case UiOneTimePinComponentStateEnum.enterPin: {\\n                if (buttonType === \'codeBtn\') {\\n                    this.form.controls.passcode.setValue(\'\');\\n                    this.generatePin(false);\\n                    return;\\n                }\\n\\n                if (this.form.invalid) {\\n                    this.loading = false;\\n                    return;\\n                }\\n\\n                this._passwordlessLoginService\\n                    .verifyToken(\\n                        this._cookieService.get(this._configurationService.appConfig.emailCookieId),\\n                        this._passwordlessLoginService.sessionKey,\\n                        this.form.controls.passcode.value,\\n                        navigator.language.substring(0, 2)\\n                    )\\n                    .pipe(take(1), takeUntil(this._ngUnsubscribe))\\n                    .subscribe(\\n                        (res) => {\\n                            if (!res.session) {\\n                                this.hasErrors = true;\\n                                this.loading = false;\\n                            } else {\\n                                this.loading = false;\\n                                this._cookieService.set(this._configurationService.appConfig.isSupplier, \'true\');\\n                                if (res.session.consentGiven) {\\n                                    this._cookieService.set(this._configurationService.appConfig.isConsentGiven, \'true\');\\n                                }\\n                                this._toastService.clear();\\n                                this._router.navigate([this._acpDashboardPath]);\\n                            }\\n                        },\\n                        (err) => {\\n                            this.hasErrors = true;\\n                            this.errorMessage = err;\\n                            this.loading = false;\\n                        }\\n                    );\\n                break;\\n            }\\n            default: {\\n                // Assentee\\n                if (this.form.controls.username.invalid || this.form.controls.password.invalid) {\\n                    this.loading = false;\\n                    return;\\n                }\\n\\n                this._authService\\n                    .loginCoreAuth(this.form.controls.username.value, this.form.controls.password.value)\\n                    .pipe(take(1), takeUntil(this._ngUnsubscribe))\\n                    .subscribe(\\n                        () => {\\n                            this.loading = false;\\n                            this._router.navigate([this._acpDashboardPath]);\\n                        },\\n                        () => {\\n                            this.hasErrors = true;\\n                            this.loading = false;\\n                        }\\n                    );\\n            }\\n        }\\n    }\\n\\n    public openSupportModal() {\\n        const modalRef = this._modalService.open(UiSupportModalComponent, new UiModalConfig());\\n\\n        modalRef.result.then(\\n            (result?: any) => {},\\n            (dismiss?) => {}\\n        );\\n    }\\n\\n    private getUsernameValue(rememberMe: string): any {\\n        if (this._route.snapshot.queryParams.email) {\\n            return this._route.snapshot.queryParams.email.trim().toLowerCase();\\n        } else if (rememberMe === \'true\') {\\n            return this._cookieService.get(this._configurationService.appConfig.emailCookieId);\\n        } else {\\n            return \'\';\\n        }\\n    }\\n\\n    private getConsentErrorMessage(error: HttpErrorResponse): string {\\n        let message: string;\\n        switch (error.status) {\\n            // TODO - add error states\\n            case 500:\\n            default: {\\n                this._translateService.get(\'AUTHENTICATION.ERRORS.CODE_INCORRECT\').subscribe((res: string) => {\\n                    message = res;\\n                });\\n            }\\n        }\\n        return message;\\n    }\\n\\n    private displayUserLogoutNotification() {\\n        if (this._cookieService.get(this._configurationService.appConfig.manualLogoutCookieName)\\n        && (!this._cookieService.get(this._configurationService.appConfig.forceAllSessionsLogoutCookieName))) {\\n            this._cookieService.delete(this._configurationService.appConfig.manualLogoutCookieName);\\n            this._translateService\\n                .get(\'AUTHENTICATION.MANUAL_LOGOUT\')\\n                .pipe(take(1), takeUntil(this._ngUnsubscribe))\\n                .subscribe((res: string) => {\\n                    this._toastService.show(res, UiToastTypesEnum.success);\\n                });\\n        } else if (this._cookieService.get(this._configurationService.appConfig.manualLogoutCookieName)\\n            && (this._cookieService.get(this._configurationService.appConfig.forceAllSessionsLogoutCookieName))) {\\n            this._cookieService.delete(this._configurationService.appConfig.manualLogoutCookieName);\\n            this._cookieService.delete(this._configurationService.appConfig.forceAllSessionsLogoutCookieName);\\n            this._translateService.get(\'AUTHENTICATION.MANUAL_LOGOUT_FROM_ALL_SESSIONS\')\\n                .subscribe((text: string) => {\\n                    this._toastService.show(text, UiToastTypesEnum.success);\\n                });\\n        }\\n    }\\n\\n    private numberOnly(event): boolean {\\n        const charCode = event.which ? event.which : event.keyCode;\\n        if (charCode > 31 && (charCode < 48 || charCode > 57)) {\\n            return false;\\n        }\\n        return true;\\n    }\\n\\n    // if the user has an assent domain email then redirect to the acm login page\\n    private redirectAssentees(): boolean {\\n        if (\\n            (this.form.controls.username.value.endsWith(\'assent.com\') ||\\n                this.form.controls.username.value.endsWith(\'assentcompliance.com\')) &&\\n            !this._route.snapshot.queryParams.external\\n        ) {\\n            this._assenteeLoginPath = this._configurationService.appConfig.coreAuthenticationLogin;\\n            window.location.href = this._assenteeLoginPath;\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    private generatePin(redirect: boolean): void {\\n        const username = this._cookieService.get(this._configurationService.appConfig.emailCookieId);\\n        this._passwordlessLoginService\\n            .signIn(username, navigator.language.substring(0, 2))\\n            .pipe(take(1), takeUntil(this._ngUnsubscribe))\\n            .pipe(\\n                catchError((error) => {\\n                    this.hasErrors = true;\\n                    this.form.controls.username.setErrors({ incorrect: true });\\n                    this.loading = false;\\n                    return of([]);\\n                })\\n            )\\n            .subscribe(\\n                (res) => {\\n                    if (res !== 220) {\\n                        this.loading = false;\\n                        if (!this.hasErrors && redirect) {\\n                            this._router.navigate([this._enterPinPath]);\\n                        }\\n                    }\\n                },\\n                (err) => {\\n                    this.hasErrors = true;\\n                    this.errorMessage = err;\\n                    this.loading = false;\\n                }\\n            );\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"// The login pages are cards with fixed pixel-based dimentions. It was agreed not to use relative units for desktop.\\n@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n// wraps the whole page\\n.wrapper {\\n  height: 100vh;\\n  overflow: auto;\\n}\\n\\n// login pages background image\\n.login-background {\\n  background-image: url(/assets/images/login-background-top-right.svg),\\n  url(/assets/images/login-background-bottom-left.svg),\\n  $blue-to-green;\\n  background-position: left top, right bottom, left;\\n  background-repeat: no-repeat, no-repeat, no-repeat;\\n}\\n\\n// login card wrapper mobile\\n.login-wrapper {  \\n  width: 100%;  \\n}  \\n\\n// login card wrapper desktop\\n@include media-breakpoint-up(sm) {\\n  .login-wrapper {\\n    margin-top: 10px;\\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.12), 0px 1px 4px rgba(0, 0, 0, 0.2);  \\n    width: 450px;\\n  }\\n}\\n\\n// login card face mobile\\n.login-panel {\\n  background-color: $white;    \\n  padding: 1em;\\n}\\n\\n// login card face desktop\\n@include media-breakpoint-up(sm) {\\n  .login-panel {\\n    background-color: $white;    \\n    padding: 64px 64px 5px 64px;\\n    border-radius: 4px 4px 0 0;\\n  }\\n}\\n\\n// form elements\\n.form-group {\\n    input[type=checkbox] {\\n        margin-right: ($spacer * .5) !important; \\n    }\\n}\\n\\n#loginPasswordInput {\\n    padding-right: calc(1.5em + 1rem);\\n}\\n\\n// Pin container styling\\n.pin-container {    \\n    overflow: hidden;\\n    display: grid;\\n    text-align: left;\\n    width: 110%;   \\n    \\n    svg {\\n      z-index: -1;\\n      stroke: $gray-500;\\n    }\\n      \\n    &.is-invalid svg {\\n      stroke: $danger;\\n    }\\n    \\n    .layer {\\n      grid-column: 1;\\n      grid-row: 1;    \\n    }\\n\\n    .feedback {\\n        padding-top: 5px;\\n        text-align: left;\\n    }\\n  }\\n  \\n.pin-container input {\\n  z-index: 1;\\n  letter-spacing: 44px;\\n  font-family: $font-family-monospace;\\n  font-size: 130%;\\n  font-weight: bold;\\n  height: 46px;  \\n  border: 0;\\n  background-color: transparent;\\n  outline: 0;  \\n  padding-left: 16px;\\n  width: 450px;\\n}\\n\\n// generic classes for the login pages\\n.no-cursor {\\n  caret-color: transparent;\\n}\\n\\n// copyright section\\n.copyright {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;  \\n  height: 43px;\\n  background-color: $gray-200;\\n  font-size: $font-size-xs;\\n}\\n  \\n@include media-breakpoint-up(sm) {\\n  .copyright {\\n    border-radius: 0 0 4px 4px;\\n  }\\n}\\n\\n.font-md {\\n  font-size: $font-size-md;\\n}\\n\\n.app-logo {\\n  width: 200px;\\n  height: auto;\\n}","styleUrl":"./one-time-pin.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":""},{"name":"_passwordlessLoginService","type":"UiPasswordlessLoginService","deprecated":false,"deprecationMessage":""},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":""},{"name":"_route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":""},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":""}],"line":55,"jsdoctags":[{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_authService","type":"UiAuthenticationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_passwordlessLoginService","type":"UiPasswordlessLoginService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_configurationService","type":"UiConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_cookieService","type":"CookieService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_modalService","type":"NgbModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_pendoService","type":"UiPendoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiFormBaseComponent","implements":["OnInit"],"templateData":"<div class=\\"wrapper d-flex flex-column login-background\\">\\n    <div class=\\"mx-auto my-auto\\">\\n        <div *ngIf=\\"!this.isModalOpen\\" class=\\"login-wrapper\\">\\n            <div class=\\"login-panel\\">\\n                <div class=\\"text-center mb-5\\">\\n                    <img class=\\"app-logo\\" src=\\"assets/images/Assent-Logo-Colored.svg\\" alt=\\"Assent Logo\\" />\\n                </div>\\n                <h4 class=\\"text-center mb-1\\">{{ this.mainTitle }}</h4>\\n                <div class=\\"text-center mb-4\\">{{ this.subTitle }}</div>\\n                <form class=\\"form-group\\" [formGroup]=\\"form\\" (ngSubmit)=\\"onSubmit($event.submitter.id)\\">\\n                    \x3c!-- Enter email controls --\x3e\\n                    <div *ngIf=\\"this.state !== allStates.enterPin\\">\\n                        <ui-text-input                            \\n                            [label]=\\"\'AUTHENTICATION.EMAIL_ADDRESS\' | translate\\"\\n                            [id]=\\"\'username\'\\"\\n                            [formControlName]=\\"\'username\'\\"\\n                            [form]=\\"form\\"\\n                            [required]=\\"true\\"\\n                            [email]=\\"true\\"\\n                        >\\n                        </ui-text-input>\\n                        <div *ngIf=\\"this.hasErrors\\" class=\\"error-text\\">{{ \'AUTHENTICATION.ERRORS.SOMETHING_WRONG\' | translate }}</div>    \\n                    </div>\\n                    \x3c!-- Assentee password --\x3e\\n                    <div *ngIf=\\"this.state === allStates.acp\\" class=\\"pb-5\\">\\n                        <ui-text-input\\n                            [label]=\\"\'AUTHENTICATION.PASSWORD\' | translate\\"\\n                            [id]=\\"\'password\'\\"\\n                            [formControlName]=\\"\'password\'\\"\\n                            [form]=\\"form\\"\\n                            [required]=\\"true\\"\\n                            [type]=\\"\'password\'\\"\\n                        >\\n                        </ui-text-input>\\n                    </div>\\n                    \x3c!-- Passcode --\x3e\\n                    <div *ngIf=\\"this.state === allStates.enterPin\\" class=\\"pb-3\\">\\n                        <div class=\\"text-center pb-1\\">\\n                            <p [id]=\\"\'passcode_Label\'\\" class=\\"fw-bold\\" innerHtml=\\"{{ \'AUTHENTICATION.ENTER_CODE\' | translate }}\\"></p>\\n                        </div>\\n                        <div class=\\"pin-container\\" [ngClass]=\\"{ \'is-invalid\': form.touched && form.controls.passcode.errors }\\">\\n                            <div class=\\"layer\\">\\n                                <svg width=\\"322\\" height=\\"47\\" viewBox=\\"0 0 322 47\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n                                    <rect x=\\"0.5\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\n                                    <rect x=\\"56.1\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\n                                    <rect x=\\"111.7\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\n                                    <rect x=\\"167.3\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\n                                    <rect x=\\"222.9\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\n                                    <rect x=\\"278.5\\" y=\\"0.8\\" width=\\"43\\" height=\\"45\\" rx=\\"3.5\\" />\\n                                </svg>\\n                            </div>\\n                            <div class=\\"layer\\">\\n                                <input\\n                                    id=\\"passcode\\"\\n                                    type=\\"text\\"\\n                                    formControlName=\\"passcode\\"\\n                                    pattern=\\"\\\\d*\\"\\n                                    minlength=\\"6\\"\\n                                    maxlength=\\"6\\"\\n                                    [class]=\\"this.passcodeClass\\"\\n                                    autocomplete=\\"off\\"\\n                                    (keypress)=\\"numberOnly($event)\\"\\n                                    autofocus\\n                                />\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\"(form.touched && form.controls.passcode.errors) || this.hasErrors\\" class=\\"feedback error-text\\">\\n                            {{ \'AUTHENTICATION.ERRORS.INVALID_CODE\' | translate }}\\n                        </div>\\n                    </div>\\n                    \x3c!-- Remember me checkbox --\x3e\\n                    <div *ngIf=\\"this.state === allStates.generatePin\\" class=\\"pb-2\\">\\n                        <ui-checkbox\\n                            [label]=\\"\'AUTHENTICATION.REMEMBER_ME\' | translate\\"\\n                            [id]=\\"\'rememberMe\'\\"\\n                            [formControlName]=\\"\'rememberMe\'\\"\\n                            [form]=\\"form\\"\\n                            [showHelpText]=\\"false\\"\\n                        >\\n                        </ui-checkbox>\\n                    </div>\\n                    \x3c!-- Submit button --\x3e\\n                    <div class=\\"d-flex justify-content-center pb-4\\">\\n                        <button id=\\"loginBtn\\" class=\\"btn btn-primary col-12\\" [disabled]=\\"loading\\">\\n                            <span *ngIf=\\"loading\\" class=\\"spinner-border spinner-border-sm me-1\\"></span>\\n                            {{ this.buttonText }}\\n                        </button>\\n                    </div>\\n                    <div class=\\"text-center pb-1\\" *ngIf=\\"this.state === allStates.enterPin\\">\\n                        <p class=\\"font-md\\" innerHtml=\\"{{ \'AUTHENTICATION.CODE_NOT_RECEIVED\' | translate }}\\"></p>\\n                    </div>\\n                    \x3c!-- Send Another Code --\x3e\\n                    <div class=\\"d-flex justify-content-center pb-4\\" *ngIf=\\"this.state === allStates.enterPin\\">\\n                        <button id=\\"codeBtn\\" class=\\"btn btn btn-outline-primary col-12\\" [disabled]=\\"loading\\">\\n                            <span *ngIf=\\"loading\\" class=\\"spinner-border spinner-border-sm me-1\\"></span>\\n                            {{ \'AUTHENTICATION.SEND_ANOTHER_CODE\' | translate }}\\n                        </button>\\n                    </div>\\n                    \x3c!-- Terms of service --\x3e\\n                    <p *ngIf=\\"this.state === allStates.generatePin\\" innerHtml=\\"{{ \'AUTHENTICATION.TERMS_OF_SERVICE\' | translate }}\\" class=\\"text-center pb-5\\"></p>\\n                </form>\\n            </div>\\n            \x3c!-- Copyright --\x3e\\n            <div class=\\"copyright\\">© {{ this.currentYear }} Assent Inc.</div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiOneTimePinGenerationComponent","id":"component-UiOneTimePinGenerationComponent-ffa3ddb5ca5871578c2e1204ef0dd7b2fc5117ff6cb133020da08630553309b30a210a6a390441c678259b0dded178619101567fc5c3fcc6551453be13a92988","file":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-generation/one-time-pin-generation.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./one-time-pin-generation.component.scss"],"styles":[],"templateUrl":["./one-time-pin-generation.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"state","deprecated":false,"deprecationMessage":"","type":"UiOneTimePinComponentStateEnum","optional":false,"description":"","line":9,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\n\\n@Component({\\n    templateUrl: \'./one-time-pin-generation.component.html\',\\n    styleUrls: [\'./one-time-pin-generation.component.scss\']\\n})\\nexport class UiOneTimePinGenerationComponent implements OnInit {\\n  public state: UiOneTimePinComponentStateEnum;\\n\\n  public ngOnInit(): void {\\n      this.state = UiOneTimePinComponentStateEnum.generatePin;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".toasts-container {\\n    left: calc(50% - 168px);\\n    width: 324px !important;\\n}\\n\\n.ngb-toasts {\\n    top: 20px !important;\\n    right: 20px !important;\\n}\\n","styleUrl":"./one-time-pin-generation.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<ui-toasts-container class=\\"toasts-container\\" aria-live=\\"polite\\" aria-atomic=\\"true\\"></ui-toasts-container>\\n<ui-one-time-pin [state]=\\"state\\"></ui-one-time-pin>"},{"name":"UiOneTimePinInputComponent","id":"component-UiOneTimePinInputComponent-882082a27598e5ab188fd9bfbbc822783891b66fa63adc47a0e93350089abcb63fdc18facad4298c91eaa8a88c72e9d78a422c2ecac017cf4e0734e00b253235","file":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-input/one-time-pin-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./one-time-pin-input.component.scss"],"styles":[],"templateUrl":["./one-time-pin-input.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"state","deprecated":false,"deprecationMessage":"","type":"UiOneTimePinComponentStateEnum","optional":false,"description":"","line":9,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { UiOneTimePinComponentStateEnum } from \'../../enums/OneTimePinComponentStateEnum\';\\n\\n@Component({\\n    templateUrl: \'./one-time-pin-input.component.html\',\\n    styleUrls: [\'./one-time-pin-input.component.scss\'],\\n})\\nexport class UiOneTimePinInputComponent implements OnInit {\\n    public state: UiOneTimePinComponentStateEnum;\\n\\n    public ngOnInit(): void {\\n        this.state = UiOneTimePinComponentStateEnum.enterPin;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./one-time-pin-input.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<ui-one-time-pin [state]=\\"state\\"></ui-one-time-pin>"},{"name":"UiPageFooterComponent","id":"component-UiPageFooterComponent-2608efbd063f86d7551984ad22f308bfa362cafbb6d501dd73b290e686b3a71c51c506f80e5060bd3428166599cff963c3bd622d6f5d87a0d8f6ddbd9af2246d","file":"libs/ui/src/lib/modules/layout/components/page-footer/page-footer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-footer","styleUrls":["./page-footer.component.scss"],"styles":[],"templateUrl":["./page-footer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"scrollBarIsVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostListener, OnInit } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { UiLayoutService } from \'../../../../services/layout/layout.service\';\\n\\nimport { UiPageFooterService } from \'../../services/page-footer-service/page-footer.service\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\n\\n@Component({\\n    selector: \'ui-page-footer\',\\n    templateUrl: \'./page-footer.component.html\',\\n    styleUrls: [\'./page-footer.component.scss\'],\\n})\\nexport class UiPageFooterComponent implements OnInit {\\n    public active: any;\\n    public scrollBarIsVisible = false;\\n\\n    constructor(\\n        public pageFooterService: UiPageFooterService,\\n        public activatedRoute: ActivatedRoute,\\n        public layoutService: UiLayoutService,\\n        private _location: Location,\\n        private _router: Router\\n    ) {}\\n\\n    public ngOnInit(): void {}\\n\\n    public goBack() {\\n        this._location.back();\\n    }\\n\\n    public navigate(link: string) {\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\n    }\\n\\n    public onActionButtonClick(e: any) {\\n        if (e.clicked !== undefined) {\\n            e.clicked(e);\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\n@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.page-footer{\\n     background-color: $white;\\n \\n}","styleUrl":"./page-footer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"page-footer border-top w-100 ps-4\\">\\n    <div class=\\"row w-100\\">\\n        <div class=\\"col-6 d-flex flex-column justify-content-left mt-3 mb-3\\">\\n            \x3c!-- //<div>{{ this.pageFooterService.titleText$.getValue() }}</div> --\x3e\\n        </div>\\n        \x3c!-- right side --\x3e\\n        <div class=\\"col-6 d-flex flex-column flex-row-reverse mt-3 mb-3\\">\\n            <ui-action-buttons-new [actionButtons]=\\"pageFooterService.actionButtons\\"></ui-action-buttons-new>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiPageFooterComponent","id":"component-UiPageFooterComponent-59333f903b330791a25bc152c5925f57c47a43553bede4cc45068cf1a187402a9e575be41627fb91a94ad456eed93e6d6b19274948f4c9721b1defa179e304b2-1","file":"libs/ui/src/lib/modules/layout2/components/page-footer/page-footer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-footer","styleUrls":["./page-footer.component.scss"],"styles":[],"templateUrl":["./page-footer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"layoutService","deprecated":false,"deprecationMessage":"","type":"UiLayoutService","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"pageFooterService","deprecated":false,"deprecationMessage":"","type":"UiPageFooterService","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"scrollBarIsVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, HostListener, OnInit } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { UiLayoutService } from \'../../../../services/layout/layout.service\';\\nimport { UiPageFooterService } from \'../../services/page-footer-service/page-footer.service\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\n\\n@Component({\\n    selector: \'ui-page-footer\',\\n    templateUrl: \'./page-footer.component.html\',\\n    styleUrls: [\'./page-footer.component.scss\'],\\n})\\nexport class UiPageFooterComponent implements OnInit {\\n    public active: any;\\n    public scrollBarIsVisible = false;\\n\\n    constructor(\\n        public pageFooterService: UiPageFooterService,\\n        public activatedRoute: ActivatedRoute,\\n        public layoutService: UiLayoutService,\\n        private _location: Location,\\n        private _router: Router\\n    ) {}\\n\\n    public ngOnInit(): void {}\\n\\n    public goBack() {\\n        this._location.back();\\n    }\\n\\n    public navigate(link: string) {\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\n    }\\n\\n    public onActionButtonClick(e: any) {\\n        if (e.clicked !== undefined) {\\n            e.clicked(e);\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"\\n@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.page-footer{\\n     background-color: $white;\\n \\n}","styleUrl":"./page-footer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"pageFooterService","type":"UiPageFooterService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageFooterComponent-1","templateData":"<div class=\\"page-footer border-top w-100 ps-4\\">\\n    <div class=\\"row w-100\\">\\n        <div class=\\"col-6 d-flex flex-column justify-content-left mt-3 mb-3\\">\\n            \x3c!-- //<div>{{ this.pageFooterService.titleText$.getValue() }}</div> --\x3e\\n        </div>\\n        \x3c!-- right side --\x3e\\n        <div class=\\"col-6 d-flex flex-column flex-row-reverse mt-3 mb-3\\">\\n            <ui-action-buttons-new [actionButtons]=\\"pageFooterService.actionButtons\\"></ui-action-buttons-new>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiPageHeaderComponent","id":"component-UiPageHeaderComponent-c637638532dc4f9177aa6e3e9f4e49c72f3a4ded24eb8ae11de45890ca3c0f5af08458987fe41e4310a617a19c5406f2382699e8dd690144abe3bf57f6d91e60","file":"libs/ui/src/lib/modules/layout/components/page-header/page-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-header","styleUrls":["./page-header.component.scss"],"styles":[],"templateUrl":["./page-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { UiPageHeaderService } from \'../../services/page-header-service/page-header.service\';\\n\\n@Component({\\n    selector: \'ui-page-header\',\\n    templateUrl: \'./page-header.component.html\',\\n    styleUrls: [\'./page-header.component.scss\'],\\n})\\nexport class UiPageHeaderComponent implements OnInit {\\n\\n    public active: any;\\n\\n    constructor(\\n        public pageHeaderService: UiPageHeaderService,\\n        public activatedRoute: ActivatedRoute,\\n        private _location: Location,\\n        private _router: Router\\n    ) {}\\n\\n    public ngOnInit(): void { }\\n\\n    public goBack() {\\n        this._location.back();\\n    }\\n\\n    public navigate(link: string){\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\n    }\\n\\n    public onActionButtonClick(e: any){\\n        if(e.clicked !== undefined){\\n            e.clicked(e);\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".breadcrumb {\\n    margin-bottom: 0.3rem;\\n}\\n.row {\\n    --bs-gutter-x: 0rem;\\n}\\n.actions.dropdown-toggle::after {\\n    display: none;\\n}\\n\\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\\n    margin: 0;\\n}\\n\\n.nav-tabs {\\n    border-bottom: 0px;\\n}\\n","styleUrl":"./page-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div *ngIf=\\"\\n    (pageHeaderService !== undefined && pageHeaderService.showPageHeader === true)\\n    && (pageHeaderService.pageTitle !== \'\'\\n    || pageHeaderService.pageSubTitle !== \'\'\\n    || pageHeaderService.showBackButton === true\\n    || pageHeaderService.pills.length !== 0\\n    || pageHeaderService.status.length !== 0\\n    || pageHeaderService.dropdowns.length !== 0\\n    || pageHeaderService.tabsets.length !== 0\\n    || pageHeaderService.subNavs.length !== 0 && pageHeaderService.showSubNav === true\\n    || pageHeaderService.feedbackText !== \'\'\\n    || pageHeaderService.actionButtons.length !== 0\\n    || pageHeaderService.actionDropdowns.length !== 0\\n    )\\"\\n    class=\\"ms-4 me-4\\"\\n    >\\n\\n    <div *ngIf=\\"\\n        pageHeaderService.pageTitle !== \'\'\\n        || pageHeaderService.pageSubTitle !== \'\'\\n        || pageHeaderService.showBackButton === true\\n        || pageHeaderService.pills.length !== 0\\n        || pageHeaderService.status.length !== 0\\n        || pageHeaderService.dropdowns.length !== 0\\n        || pageHeaderService.feedbackText !== \'\'\\n        || pageHeaderService.actionButtons.length !== 0\\n        || pageHeaderService.actionDropdowns.length !== 0\\"\\n        class=\\"row w-100\\"\\n        style=\\"min-height: 85px\\"\\n    >\\n\\n        \x3c!-- Left Side --\x3e\\n        <div class=\\"col-6 d-flex flex-column justify-content-center mt-3 mb-3\\" >\\n            \x3c!-- Back Button / Breadcrumb --\x3e\\n            <div *ngIf=\\"pageHeaderService.showBackButton === true || pageHeaderService.showBreadcrumb === true\\">\\n                \x3c!-- Back button --\x3e\\n                <button\\n                    *ngIf=\\"pageHeaderService.showBackButton === true\\"\\n                    type=\\"button\\"\\n                    class=\\"btn btn-link m-0 p-0\\"\\n                    (click)=\\"goBack()\\">\\n                    <i class=\\"bi bi-chevron-left me-1\\"></i>\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText === \'\'\\">{{pageHeaderService.backButtonText | translate}}</span>\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText !== \'\'\\">Back to {{pageHeaderService.backToButtonText | translate}}</span>\\n                </button>\\n                \x3c!-- Breadcrumbs --\x3e\\n                <nav class=\\"mt-2\\"\\n                    *ngIf=\\"pageHeaderService.showBreadcrumb === true\\n                    && pageHeaderService.breadcrumbString !== \'\'\\"\\n                    aria-label=\\"breadcrumb\\">\\n                    <ol class=\\"breadcrumb\\">\\n                        <li class=\\"breadcrumb-item\\"><a href=\\"#\\">{{pageHeaderService.breadcrumbString | translate}}</a></li>\\n                        \x3c!-- Keep for future implemetation of Breadcrumbs --\x3e\\n                        \x3c!-- <li *ngFor=\\"let item of pageHeaderService.breadcrumbs\\" class=\\"breadcrumb-item\\"><a [routerLink]=\\"item.link\\">{{item.title | translate}}</a></li> --\x3e\\n                        \x3c!-- <li class=\\"breadcrumb-item\\"><a href=\\"#\\">Library</a></li>\\n                        <li class=\\"breadcrumb-item active\\" aria-current=\\"page\\">Data</li> --\x3e\\n                    </ol>\\n                </nav>\\n            </div>\\n\\n            \x3c!-- Page Title --\x3e\\n            <h2 *ngIf=\\"pageHeaderService.pageTitle !== \'\'\\" class=\\"pb-2 pt-2\\">{{pageHeaderService.pageTitle | translate: pageHeaderService.pageTitleParams}}</h2>\\n\\n            \x3c!-- Description / Subtitle --\x3e\\n            <small *ngIf=\\"pageHeaderService.pageSubTitle !== \'\'\\" class=\\"\\">{{pageHeaderService.pageSubTitle | translate: pageHeaderService.pageSubTitleParams}}</small>\\n\\n            \x3c!-- Pills --\x3e\\n            <div *ngIf=\\"pageHeaderService.pills.length !== 0\\" class=\\"d-flex mt-3 mb-2\\">\\n                <span *ngFor=\\"let item of pageHeaderService.pills\\" class=\\"badge rounded-pill noHover me-1\\" [ngClass]=\\"item.type!\\">{{item.label | translate}}</span>\\n            </div>\\n\\n            \x3c!-- Status --\x3e\\n            <div *ngIf=\\"pageHeaderService.status.length !== 0\\" class=\\"d-flex gap-10 mt-2 mb-3\\">\\n                <span *ngFor=\\"let item of pageHeaderService.status\\" class=\\"dot sm\\" [ngClass]=\\"item.type!\\">\\n                    <span class=\\"dot-text sm\\">{{item.label! | translate}}</span>\\n                </span>\\n            </div>\\n\\n            \x3c!-- Dropdowns --\x3e\\n            <div *ngIf=\\"pageHeaderService.showDropdowns === true && pageHeaderService.dropdowns.length !== 0\\" class=\\"d-flex gap-10 mt-3 mb-1\\">\\n                \x3c!-- <ui-drop-down *ngFor=\\"let item of pageHeaderService.dropdowns\\" [config]=\\"item\\"></ui-drop-down> --\x3e\\n            </div>\\n        </div>\\n\\n        \x3c!-- Right Side --\x3e\\n        <div class=\\"col-6 mt-3 mb-3 d-flex align-items-center justify-content-end \\">\\n            \x3c!-- Action Buttons --\x3e\\n            <div class=\\"d-flex justify-content-between align-items-end flex-column gap-10\\">\\n                \x3c!-- Feedback --\x3e\\n                <div *ngIf=\\"pageHeaderService.feedbackText !== \'\'\\" class=\\"d-flex justify-content-end align-items-center\\">\\n                    <i *ngIf=\\"pageHeaderService.feedbackIcon !== \'\'\\" class=\\"bi default me-1\\" [ngClass]=\\"[pageHeaderService.feedbackIcon, pageHeaderService.feedbackIconColor]\\"></i>\\n                    <span class=\\"small\\">{{pageHeaderService.feedbackText | translate: pageHeaderService.feedbackTextParams}}</span>\\n                </div>\\n                \x3c!-- Action Buttons and More Action Dropdown --\x3e\\n                <div *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0 || pageHeaderService.actionButtons.length !== 0\\" class=\\"d-flex justify-content-end gap-10\\">\\n                    \x3c!-- More Dropdown --\x3e\\n                    <ng-container *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0\\">\\n                        <div ngbDropdown  placement=\\"bottom-end\\">\\n                            <button\\n                            type=\\"button\\"\\n                            class=\\"btn btn-outline-primary btn-md actions\\"\\n                            container=\\"body\\"\\n                            id=\\"dotButton\\"\\n                            ngbDropdownToggle\\n                            >\\n                                <i class=\\"bi bi-three-dots-vertical\\"></i>\\n                            </button>\\n                            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\n                                <button [id]=\\"item.id\\" *ngFor=\\"let item of pageHeaderService.actionDropdowns; let i = index;\\" ngbDropdownItem (click)=\\"onActionButtonClick(item)\\" [disabled]=\\"item.disabled!\\">\\n                                    {{item.text | translate}}\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </ng-container>\\n                    \x3c!-- Action Buttons --\x3e                     \\n                    <ui-action-buttons-new [actionButtons]=\\"pageHeaderService.actionButtons\\"></ui-action-buttons-new>                    \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    \x3c!-- Sub Nav Buttons --\x3e\\n    <div class=\\"row pt-3\\" *ngIf=\\"pageHeaderService.showSubNav && pageHeaderService.subNavs.length !== 0\\">\\n        <div class=\\"col-12\\">\\n            <div class=\\"d-flex flex-wrap mb-2\\">\\n                <button\\n                    (click)=\\"navigate(item.routerLink!)\\"\\n                    [routerLinkActive]=\\"[\'active\']\\"\\n                    *ngFor=\\"let item of pageHeaderService.subNavs\\"\\n                    type=\\"button\\"\\n                    class=\\"btn btn-sm me-2 mb-1\\"\\n                    [ngClass]=\\"item.type!\\">\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\">{{item.label | translate}}</ng-container>\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\">{{item.label | translate: item.labelParams}}</ng-container>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    \x3c!-- Tabset --\x3e\\n    <div *ngIf=\\"pageHeaderService.showTabsets === true && pageHeaderService.tabsets.length !== 0\\" class=\\"row mt-2\\">\\n        <div class=\\"col-12\\">\\n            <ul ngbNav #nav=\\"ngbNav\\" [(activeId)]=\\"active\\" class=\\"nav-tabs\\">\\n                <li *ngFor=\\"let item of pageHeaderService.tabsets; let i = index;\\" [ngbNavItem]=\\"i\\">\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate}}</a></ng-container>\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate: item.labelParams}}</a></ng-container>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiPageHeaderComponent","id":"component-UiPageHeaderComponent-c637638532dc4f9177aa6e3e9f4e49c72f3a4ded24eb8ae11de45890ca3c0f5af08458987fe41e4310a617a19c5406f2382699e8dd690144abe3bf57f6d91e60-1","file":"libs/ui/src/lib/modules/layout2/components/page-header/page-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-page-header","styleUrls":["./page-header.component.scss"],"styles":[],"templateUrl":["./page-header.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activatedRoute","deprecated":false,"deprecationMessage":"","type":"ActivatedRoute","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"active","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":13,"modifierKind":[123]},{"name":"pageHeaderService","deprecated":false,"deprecationMessage":"","type":"UiPageHeaderService","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"goBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"link","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onActionButtonClick","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { UiPageHeaderService } from \'../../services/page-header-service/page-header.service\';\\n\\n@Component({\\n    selector: \'ui-page-header\',\\n    templateUrl: \'./page-header.component.html\',\\n    styleUrls: [\'./page-header.component.scss\'],\\n})\\nexport class UiPageHeaderComponent implements OnInit {\\n\\n    public active: any;\\n\\n    constructor(\\n        public pageHeaderService: UiPageHeaderService,\\n        public activatedRoute: ActivatedRoute,\\n        private _location: Location,\\n        private _router: Router\\n    ) {}\\n\\n    public ngOnInit(): void { }\\n\\n    public goBack() {\\n        this._location.back();\\n    }\\n\\n    public navigate(link: string){\\n        this._router.navigate([link], { relativeTo: this.activatedRoute.firstChild });\\n    }\\n\\n    public onActionButtonClick(e: any){\\n        if(e.clicked !== undefined){\\n            e.clicked(e);\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".breadcrumb {\\n    margin-bottom: 0.3rem;\\n}\\n.row {\\n    --bs-gutter-x: 0rem;\\n}\\n.actions.dropdown-toggle::after {\\n    display: none;\\n}\\n\\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\\n    margin: 0;\\n}\\n\\n.nav-tabs {\\n    border-bottom: 0px;\\n}\\n","styleUrl":"./page-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":""},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"pageHeaderService","type":"UiPageHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activatedRoute","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiPageHeaderComponent-1","templateData":"<div *ngIf=\\"\\n    (pageHeaderService !== undefined && pageHeaderService.showPageHeader === true)\\n    && (pageHeaderService.pageTitle !== \'\'\\n    || pageHeaderService.pageSubTitle !== \'\'\\n    || pageHeaderService.showBackButton === true\\n    || pageHeaderService.pills.length !== 0\\n    || pageHeaderService.status.length !== 0\\n    || pageHeaderService.dropdowns.length !== 0\\n    || pageHeaderService.tabsets.length !== 0\\n    || pageHeaderService.subNavs.length !== 0 && pageHeaderService.showSubNav === true\\n    || pageHeaderService.feedbackText !== \'\'\\n    || pageHeaderService.actionButtons.length !== 0\\n    || pageHeaderService.actionDropdowns.length !== 0\\n    )\\"\\n    class=\\"ms-4 me-4\\"\\n    >\\n\\n    <div *ngIf=\\"\\n        pageHeaderService.pageTitle !== \'\'\\n        || pageHeaderService.pageSubTitle !== \'\'\\n        || pageHeaderService.showBackButton === true\\n        || pageHeaderService.pills.length !== 0\\n        || pageHeaderService.status.length !== 0\\n        || pageHeaderService.dropdowns.length !== 0\\n        || pageHeaderService.feedbackText !== \'\'\\n        || pageHeaderService.actionButtons.length !== 0\\n        || pageHeaderService.actionDropdowns.length !== 0\\"\\n        class=\\"row w-100\\"\\n        style=\\"min-height: 85px\\"\\n    >\\n\\n        \x3c!-- Left Side --\x3e\\n        <div class=\\"col-6 d-flex flex-column justify-content-center mt-3 mb-3\\" >\\n            \x3c!-- Back Button / Breadcrumb --\x3e\\n            <div *ngIf=\\"pageHeaderService.showBackButton === true || pageHeaderService.showBreadcrumb === true\\">\\n                \x3c!-- Back button --\x3e\\n                <button\\n                    *ngIf=\\"pageHeaderService.showBackButton === true\\"\\n                    type=\\"button\\"\\n                    class=\\"btn btn-link m-0 p-0\\"\\n                    (click)=\\"goBack()\\">\\n                    <i class=\\"bi bi-chevron-left me-1\\"></i>\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText === \'\'\\">{{pageHeaderService.backButtonText | translate}}</span>\\n                    <span *ngIf=\\"pageHeaderService.backToButtonText !== \'\'\\">Back to {{pageHeaderService.backToButtonText | translate}}</span>\\n                </button>\\n                \x3c!-- Breadcrumbs --\x3e\\n                <nav class=\\"mt-2\\"\\n                    *ngIf=\\"pageHeaderService.showBreadcrumb === true\\n                    && pageHeaderService.breadcrumbString !== \'\'\\"\\n                    aria-label=\\"breadcrumb\\">\\n                    <ol class=\\"breadcrumb\\">\\n                        <li class=\\"breadcrumb-item\\"><a href=\\"#\\">{{pageHeaderService.breadcrumbString | translate}}</a></li>\\n                        \x3c!-- Keep for future implemetation of Breadcrumbs --\x3e\\n                        \x3c!-- <li *ngFor=\\"let item of pageHeaderService.breadcrumbs\\" class=\\"breadcrumb-item\\"><a [routerLink]=\\"item.link\\">{{item.title | translate}}</a></li> --\x3e\\n                        \x3c!-- <li class=\\"breadcrumb-item\\"><a href=\\"#\\">Library</a></li>\\n                        <li class=\\"breadcrumb-item active\\" aria-current=\\"page\\">Data</li> --\x3e\\n                    </ol>\\n                </nav>\\n            </div>\\n\\n            \x3c!-- Page Title --\x3e\\n            <h2 *ngIf=\\"pageHeaderService.pageTitle !== \'\'\\" class=\\"pb-2 pt-2\\">{{pageHeaderService.pageTitle | translate: pageHeaderService.pageTitleParams}}</h2>\\n\\n            \x3c!-- Description / Subtitle --\x3e\\n            <small *ngIf=\\"pageHeaderService.pageSubTitle !== \'\'\\" class=\\"\\">{{pageHeaderService.pageSubTitle | translate: pageHeaderService.pageSubTitleParams}}</small>\\n\\n            \x3c!-- Pills --\x3e\\n            <div *ngIf=\\"pageHeaderService.pills.length !== 0\\" class=\\"d-flex mt-3 mb-2\\">\\n                <span *ngFor=\\"let item of pageHeaderService.pills\\" class=\\"badge rounded-pill noHover me-1\\" [ngClass]=\\"item.type!\\">{{item.label | translate}}</span>\\n            </div>\\n\\n            \x3c!-- Status --\x3e\\n            <div *ngIf=\\"pageHeaderService.status.length !== 0\\" class=\\"d-flex gap-10 mt-2 mb-3\\">\\n                <span *ngFor=\\"let item of pageHeaderService.status\\" class=\\"dot sm\\" [ngClass]=\\"item.type!\\">\\n                    <span class=\\"dot-text sm\\">{{item.label! | translate}}</span>\\n                </span>\\n            </div>\\n\\n            \x3c!-- Dropdowns --\x3e\\n            <div *ngIf=\\"pageHeaderService.showDropdowns === true && pageHeaderService.dropdowns.length !== 0\\" class=\\"d-flex gap-10 mt-3 mb-1\\">\\n                \x3c!-- <ui-drop-down *ngFor=\\"let item of pageHeaderService.dropdowns\\" [config]=\\"item\\"></ui-drop-down> --\x3e\\n            </div>\\n        </div>\\n\\n        \x3c!-- Right Side --\x3e\\n        <div class=\\"col-6 mt-3 mb-3 d-flex align-items-center justify-content-end \\">\\n            \x3c!-- Action Buttons --\x3e\\n            <div class=\\"d-flex justify-content-between align-items-end flex-column gap-10\\">\\n                \x3c!-- Feedback --\x3e\\n                <div *ngIf=\\"pageHeaderService.feedbackText !== \'\'\\" class=\\"d-flex justify-content-end align-items-center\\">\\n                    <i *ngIf=\\"pageHeaderService.feedbackIcon !== \'\'\\" class=\\"bi default me-1\\" [ngClass]=\\"[pageHeaderService.feedbackIcon, pageHeaderService.feedbackIconColor]\\"></i>\\n                    <span class=\\"small\\">{{pageHeaderService.feedbackText | translate: pageHeaderService.feedbackTextParams}}</span>\\n                </div>\\n                \x3c!-- Action Buttons and More Action Dropdown --\x3e\\n                <div *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0 || pageHeaderService.actionButtons.length !== 0\\" class=\\"d-flex justify-content-end gap-10\\">\\n                    \x3c!-- More Dropdown --\x3e\\n                    <ng-container *ngIf=\\"pageHeaderService.actionDropdowns.length !== 0\\">\\n                        <div ngbDropdown  placement=\\"bottom-end\\">\\n                            <button\\n                            type=\\"button\\"\\n                            class=\\"btn btn-outline-primary btn-md actions\\"\\n                            container=\\"body\\"\\n                            id=\\"dotButton\\"\\n                            ngbDropdownToggle\\n                            >\\n                                <i class=\\"bi bi-three-dots-vertical\\"></i>\\n                            </button>\\n                            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\n                                <button [id]=\\"item.id\\" *ngFor=\\"let item of pageHeaderService.actionDropdowns; let i = index;\\" ngbDropdownItem (click)=\\"onActionButtonClick(item)\\" [disabled]=\\"item.disabled!\\">\\n                                    <ng-container>{{item.text | translate}}</ng-container>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </ng-container>\\n                    \x3c!-- Action Buttons --\x3e                     \\n                    <ui-action-buttons-new [actionButtons]=\\"pageHeaderService.actionButtons\\"></ui-action-buttons-new>   \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    \x3c!-- Sub Nav Buttons --\x3e\\n    <div class=\\"row pt-3\\" *ngIf=\\"pageHeaderService.showSubNav && pageHeaderService.subNavs.length !== 0\\">\\n        <div class=\\"col-12\\">\\n            <div class=\\"d-flex flex-wrap mb-2\\">\\n                <button\\n                    (click)=\\"navigate(item.routerLink!)\\"\\n                    [routerLinkActive]=\\"[\'active\']\\"\\n                    *ngFor=\\"let item of pageHeaderService.subNavs\\"\\n                    type=\\"button\\"\\n                    class=\\"btn btn-sm me-2 mb-1\\"\\n                    [ngClass]=\\"item.type!\\">\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\">{{item.label | translate}}</ng-container>\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\">{{item.label | translate: item.labelParams}}</ng-container>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    \x3c!-- Tabset --\x3e\\n    <div *ngIf=\\"pageHeaderService.showTabsets === true && pageHeaderService.tabsets.length !== 0\\" class=\\"row mt-2\\">\\n        <div class=\\"col-12\\">\\n            <ul ngbNav #nav=\\"ngbNav\\" [(activeId)]=\\"active\\" class=\\"nav-tabs\\">\\n                <li *ngFor=\\"let item of pageHeaderService.tabsets; let i = index;\\" [ngbNavItem]=\\"i\\">\\n                    <ng-container *ngIf=\\"item.labelParams === undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate}}</a></ng-container>\\n                    <ng-container *ngIf=\\"item.labelParams !== undefined\\"><a ngbNavLink [routerLink]=\\"item.routerLink\\" [state]=\\"{ keepTabsets: true }\\" routerLinkActive #rla=\\"routerLinkActive\\" [class.active]=\\"rla.isActive\\">{{item.label | translate: item.labelParams}}</a></ng-container>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiPillComponent","id":"component-UiPillComponent-744601a7b4d0a5e50f55b73b9c1806d305754f8cea53c7ba4ae72218f82be576af413e751917c4bf9189ce8ea1829984f2bc53761e89e38ae638d162b7d2424e","file":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-pill","styleUrls":["./pill.component.scss"],"styles":[],"templateUrl":["./pill.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","defaultValue":"UiPillColorEnum.neutral","deprecated":false,"deprecationMessage":"","line":25,"type":"UiPillColorEnum","decorators":[]},{"name":"hasCloseButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","line":29,"type":"any","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":31,"type":"any","decorators":[]},{"name":"noHover","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"pillText","deprecated":false,"deprecationMessage":"","line":24,"type":"any","decorators":[]},{"name":"size","defaultValue":"UiPillSizeEnum.md","deprecated":false,"deprecationMessage":"","line":26,"type":"UiPillSizeEnum","decorators":[]},{"name":"value","deprecated":false,"deprecationMessage":"","line":30,"type":"any","decorators":[]}],"outputsClass":[{"name":"xButtonClick","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":22,"type":"EventEmitter"}],"propertiesClass":[{"name":"generatedId","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"isTooltipDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":34,"modifierKind":[123]},{"name":"pill","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'pill\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"checkColumnWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":59}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from \'@angular/core\';\\nimport { UiPillColorEnum } from \'@lib/modules/form-controls/pills/enums/pill-color.enum\';\\nimport { UiPillSizeEnum } from \'@lib/modules/form-controls/pills/enums/pill-size.enum\';\\n\\nexport interface IUiPillComponent {\\n    pillText: string;\\n    color: UiPillColorEnum;\\n    size: UiPillSizeEnum;\\n    icon: string;\\n    value: number;\\n    hasCloseButton: boolean;\\n}\\n\\n@Component({\\n    selector: \'ui-pill\',\\n    templateUrl: \'./pill.component.html\',\\n    styleUrls: [\'./pill.component.scss\'],\\n})\\nexport class UiPillComponent implements OnInit, AfterViewInit {\\n    @ViewChild(\'pill\') public pill: ElementRef;\\n\\n    @Output() public xButtonClick = new EventEmitter<any>();\\n\\n    @Input() public pillText; //Text is required\\n    @Input() public color: UiPillColorEnum = UiPillColorEnum.neutral;\\n    @Input() public size: UiPillSizeEnum = UiPillSizeEnum.md;\\n    @Input() public hasCloseButton = false;\\n    @Input() public noHover = true;\\n    @Input() public icon;\\n    @Input() public value; //Optional\\n    @Input() public id;\\n\\n    public generatedId;\\n    public isTooltipDisabled = true;\\n\\n    public constructor() {}\\n\\n    public ngOnInit(): void {\\n        //Need a unique ID for inner div of pill to check if tooltip is enabled for each pill\\n        this.generatedId = \'pill-inner-\' + this.id;\\n    }\\n\\n    public ngAfterViewInit(): void {\\n        setTimeout(() => {\\n            this.checkColumnWidth();\\n        }, 100);\\n    }\\n\\n    //Checks width of inner div of pill to determine if tooltip is needed\\n    public checkColumnWidth() {\\n        if (this.pill && this.pill.nativeElement.firstChild.offsetWidth >= this.pill.nativeElement.firstChild.scrollWidth) {\\n            this.isTooltipDisabled = true;\\n        } else {\\n            this.isTooltipDisabled = false;\\n        }\\n    }\\n\\n    @HostListener(\'window:resize\')\\n    public onResize() {\\n        this.checkColumnWidth();\\n    }\\n\\n    public onCloseClick() {\\n        this.pill.nativeElement.remove();\\n        this.xButtonClick.emit(this);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./pill.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":34,"modifierKind":[123]},"implements":["OnInit","AfterViewInit"],"templateData":"<span class=\\"pill\\">\\n    <span\\n        #pill\\n        class=\\"badge {{ color }} rounded-pill {{ size }} float-start\\"\\n        [ngClass]=\\"{ noHover: noHover === true }\\"\\n        *ngIf=\\"pillText !== undefined || null\\"\\n        [id]=\\"id\\"\\n        [ngbTooltip]=\\"pillText\\"\\n        [disableTooltip]=\\"isTooltipDisabled\\"\\n    >\\n        <span class=\\"pill-inner\\" [id]=\\"generatedId\\">\\n            <i *ngIf=\\"icon !== undefined\\" class=\\"bi {{ icon }}\\"></i>\\n            <span class=\\"pill-text\\">{{ pillText }}</span>\\n        </span>\\n        <i *ngIf=\\"hasCloseButton === true\\" class=\\"bi bi-x-lg\\" (click)=\\"onCloseClick()\\"></i>\\n    </span>\\n</span>\\n"},{"name":"UiPillRendererComponent","id":"component-UiPillRendererComponent-ae5254a0f114e7d19db053731498176c4491ebd92f69dfc853dc898ed92b443330d1edeff0d562fda4f08d106163f4f8c9a17a4f93dabe0da441dddbab27e51b","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-pill-renderer","styleUrls":["./pill-renderer.component.scss"],"styles":[],"templateUrl":["./pill-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"cls","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":110,"modifierKind":[123]},{"name":"color","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":108,"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":104,"modifierKind":[123]},{"name":"pillClasses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":105,"modifierKind":[123]},{"name":"pillText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":106,"modifierKind":[123]},{"name":"pillTextTranslationId","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":107,"modifierKind":[123]},{"name":"type","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":109,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clickedHandler","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"update","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\nimport { ICellRendererParams } from \'ag-grid-community\';\\n\\nexport enum UiBadgeTypeEnum {\\n    status = \'status\',\\n    package = \'package\',\\n    notification = \'notification\',\\n    identifier = \'identifier\',\\n    pill = \'pill\'\\n}\\n\\nexport enum UiPackageEnum {\\n    gold = \'gold\',\\n    silver = \'silver\',\\n    platinum = \'platinum\'\\n}\\n\\nexport enum UiPackageClassEnum {\\n    gold = \'dot-gold\',\\n    silver = \'dot-silver\',\\n    platinum = \'dot-platinum\',\\n}\\n\\nexport enum UiStatusEnum {\\n    neutral = \'neutral\',\\n    success = \'success\',\\n    info = \'info\',\\n    danger = \'danger\',\\n    caution = \'caution\',\\n    warning = \'warning\',\\n    tertiary = \'tertiary\',\\n    dimgrey = \'dimgrey\'\\n}\\n\\nexport enum UiStatusClassEnum {\\n    neutral = \'dot-neutral\',\\n    success = \'dot-success\',\\n    caution = \'dot-caution\',\\n    warning = \'dot-warning\',\\n    danger = \'dot-danger\',\\n    info = \'dot-info\',\\n    tertiary = \'dot-tertiary\',\\n    dimgrey = \'dot-dimgrey\'\\n}\\n\\nexport enum UiIdentifierEnum {\\n    neutral = \'neutral\',\\n    category1 = \'category1\',\\n    category2 = \'category2\',\\n    category3 = \'category3\',\\n    category4 = \'category4\',\\n    category5 = \'category5\',\\n    category6 = \'category6\'\\n}\\n\\nexport enum UiIdentifierClassEnum {\\n    Neutral = \'identifier-neutral\',\\n    category1 = \'identifier-category-1\',\\n    category2 = \'identifier-category-2\',\\n    category3 = \'identifier-category-3\',\\n    category4 = \'identifier-category-4\',\\n    category5 = \'identifier-category-5\',\\n    category6 = \'identifier-category-6\',\\n}\\n\\nexport enum UiPillEnum {\\n    neutral = \'neutral\',\\n    category1 = \'category1\',\\n    category2 = \'category2\',\\n    category3 = \'category3\',\\n    category4 = \'category4\',\\n    category5 = \'category5\',\\n    category6 = \'category6\',\\n    success = \'success\',\\n    warning = \'warning\',\\n    danger = \'danger\',\\n    info = \'info\',\\n    extreme = \'extreme\',\\n}\\n\\nexport enum UiPillClassEnum {\\n    neutral = \'badge-neutral\',\\n    category1 = \'badge-category-1\',\\n    category2 = \'badge-category-2\',\\n    category3 = \'badge-category-3\',\\n    category4 = \'badge-category-4\',\\n    category5 = \'badge-category-5\',\\n    category6 = \'badge-category-6\',\\n    success = \'badge-success\',\\n    warning = \'badge-warning\',\\n    danger = \'badge-danger\',\\n    info = \'badge-info\',\\n    extreme = \'badge-extreme\',\\n}\\n\\n@Component({\\n    selector: \'ui-pill-renderer\',\\n    templateUrl: \'./pill-renderer.component.html\',\\n    styleUrls: [\'./pill-renderer.component.scss\'],\\n})\\nexport class UiPillRendererComponent implements OnInit, ICellRendererAngularComp, OnDestroy {\\n\\n    public params: any;\\n    public pillClasses = [];\\n    public pillText = \'\';\\n    public pillTextTranslationId = \'\';\\n    public color = \'\';\\n    public type = \'\';\\n    public cls = \'\';\\n\\n    constructor() {}\\n\\n    public refresh(params: ICellRendererParams): boolean {\\n        this.update(params);\\n        return true;\\n    }\\n\\n    public ngOnInit(): void {}\\n\\n    public agInit(params: any): void {\\n        this.update(params);\\n    }\\n\\n    public ngOnDestroy() {\\n        // no need to remove the button click handler as angular does this under the hood\\n    }\\n\\n    public clickedHandler(e) {\\n        if(this.params.clicked !== undefined) {\\n            this.params.clicked(this.params.value);\\n        }\\n    }\\n\\n    private update(params: any) {\\n        this.params = params;\\n\\n        this.pillClasses = params.pillClasses;\\n        this.pillText = params.pillText;\\n        this.pillTextTranslationId = params.pillTextTranslationId;\\n        this.type = params.type;\\n        this.color = params.color;\\n        this.cls = \'\';\\n\\n        if(this.type === UiBadgeTypeEnum.status){\\n            this.cls = UiStatusClassEnum[this.color];\\n        }\\n\\n        if(this.type === UiBadgeTypeEnum.package){\\n            this.cls = UiPackageClassEnum[this.color];\\n        }\\n\\n        if(this.type === UiBadgeTypeEnum.pill){\\n            this.cls = UiPillClassEnum[this.color];\\n        }\\n\\n        if(this.type === UiBadgeTypeEnum.notification){\\n            // this.cls = PillClassEnum[this.color];\\n        }\\n        if(this.type === UiBadgeTypeEnum.identifier){\\n            // this.cls = PillClassEnum[this.color];\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./pill-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":110},"implements":["OnInit","ICellRendererAngularComp","OnDestroy"],"templateData":"\x3c!-- Status --\x3e\\n<div class=\\"\\" (click)=\\"clickedHandler($event)\\" *ngIf=\\"type=== \'status\'\\">\\n    <span class=\\"dot sm\\" [ngClass]=\\"cls\\"></span>\\n    <span class=\\"dot-text sm\\">\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\n            {{pillText | translate}}\\n        </ng-container>\\n    </span>\\n</div>\\n\\n\x3c!-- Pill --\x3e\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type=== \'pill\'\\">\\n    <span class=\\"badge rounded-pill noHover sm\\" [ngClass]=\\"cls\\">\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\n            {{pillText | translate}}\\n        </ng-container>\\n    </span>\\n</div>\\n\\n\x3c!-- Package --\x3e\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type=== \'package\'\\">\\n    <span class=\\"dot md\\" [ngClass]=\\"cls\\"></span>\\n    <span class=\\"package-text\\">\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\n            {{pillText | translate}}\\n        </ng-container>\\n    </span>\\n</div>\\n\\n\x3c!-- Notification --\x3e\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type === \'notification\'\\">\\n    <span class=\\"dot-notification sm\\">\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\n            {{pillText | translate}}\\n        </ng-container>\\n    </span>\\n</div>\\n\\n\x3c!-- Identifier --\x3e\\n<div (click)=\\"clickedHandler($event)\\" *ngIf=\\"type === \'identifier\'\\">\\n    <span class=\\"identifier identifier-neutral sm\\">\\n        <ng-container *ngIf=\\"pillText !== \'\'\\">\\n            {{pillText | translate}}\\n        </ng-container>\\n    </span>\\n</div>"},{"name":"UiPrivacyAgreementModalComponent","id":"component-UiPrivacyAgreementModalComponent-a72b018be779a70d1cda0b32eb9adba9163113b07187c68c091189ab55b12b1598634e662fa940f6f60bb607d5b6a831b095ae708e5acade4391094a4d915a04","file":"libs/ui/src/lib/modules/authentification/components/modals/privacy-agreement-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":["./privacy-agreement-modal.component.scss"],"styles":[],"templateUrl":["./privacy-agreement-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":13,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"onAgreeClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onDisagreeClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1749,"end":1753,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1743,"end":1748,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1939,"end":1943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1933,"end":1938,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { UiModalBaseComponent } from \'@lib/modules/modal/components/modal-base/modal-base.component\';\\n// Ngb\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\n\\n@Component({\\n    templateUrl: \'./privacy-agreement-modal.component.html\',\\n    styleUrls: [\'./privacy-agreement-modal.component.scss\']\\n})\\nexport class UiPrivacyAgreementModalComponent extends UiModalBaseComponent {\\n\\n    public constructor(public activeModal: NgbActiveModal) {\\n        super(activeModal);\\n    }\\n\\n    public onDisagreeClick() {\\n        this.dismiss(\'disagree\');\\n    }\\n\\n    public onAgreeClick() {\\n        this.submit(\'agree\');\\n    }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".termsandconditions {\\n    font-size: 14px;\\n    margin: 16px 16px;\\n}\\n","styleUrl":"./privacy-agreement-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":11,"modifierKind":[123],"jsdoctags":[{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","templateData":"\x3c!-- Header START --\x3e\\n<div class=\\"modal-header\\" [ngClass]=\\"{ \'border-0\': noBorder === true }\\">\\n    <div class=\\"d-flex justify-content-between w-100\\">\\n        <div>\\n            \x3c!-- Optional Title --\x3e\\n            <h3 class=\\"modal-title\\">{{ \'AUTHENTICATION.CONSENT_TITLE\' | translate }}</h3>\\n        </div>\\n    </div>\\n</div>\\n\x3c!-- Header END --\x3e\\n\\n\x3c!-- Body START --\x3e\\n<div #modalBody class=\\"modal-body\\">\\n    <section id=\\"overview\\" class=\\"ac-privacy-info-section\\">\\n        <p>By using this platform you may receive compliance related requests to your email from Assent Inc. excluding materials for marketing or sales purposes unless you have opted-in to those requests separately.</p>\\n        <p><u><b>PRIVACY AND TERMS</b></u></p>\\n        <p>To use the supplier portal you&rsquo;ll need to agree to the Terms of Service and Privacy Policy below.&nbsp;</p>\\n        <p><b>Your Obligations</b></p>\\n        <p>By accessing the Assent website and Supplier Portal you consent to the collection and use of certain information about you as specified in the Privacy Policy.</p>\\n        <p>You must fully comply with the Code of Conduct as outlined in the Terms of Use.</p>\\n        <p><b>Data We Process and Why</b></p>\\n        <p>Assent has no control over your use of information obtained from the Supplier Portal or website. You shall not access the Website or Services for any purposes or in any manner that is illegal or improper, including, without limitation as outlined in the Terms of Use.</p>\\n        <p>Detailed information about the Personally Identifiable Information (PII) collected is outlined in the Privacy Policy. Information collected includes (but may not be limited to): name, email address, username and password, IP address, location data, use of the service, payment information, usage data in relation to the services, and other information.</p>\\n    </section>\\n</div>\\n\x3c!-- Body END--\x3e\\n\\n<div class=\\"termsandconditions\\">\\n    {{ \'AUTHENTICATION.ACCEPTANCE.BEGINNING\' | translate }} <a href=\\"https://www.assent.com/privacy\\" target=\\"_blank\\">{{ \'AUTHENTICATION.ACCEPTANCE.PRIVACY_POLICY\' | translate }}</a>\\n    {{ \'AUTHENTICATION.ACCEPTANCE.AND\' | translate }} <a href=\\"https://www.assent.com/terms-of-use-supplier-portal/\\" target=\\"_blank\\">{{ \'AUTHENTICATION.ACCEPTANCE.TERMS_OF_USE\' | translate }}</a>\\n    {{ \'AUTHENTICATION.ACCEPTANCE.ENDING\' | translate }}\\n</div>\\n\\n\x3c!-- Footer START --\x3e\\n<div class=\\"modal-footer\\" [ngClass]=\\"{ \'border-0\': noBorder === true }\\">\\n    <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primary\\" (click)=\\"onDisagreeClick()\\">\\n        {{ \'COMMON.I_DISAGREE\' | translate }}\\n    </button>\\n    <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary\\" (click)=\\"onAgreeClick()\\">\\n        {{ \'COMMON.I_AGREE\' | translate }}\\n    </button>\\n</div>\\n\x3c!-- Footer END --\x3e\\n"},{"name":"UiProgressIndicatorComponent","id":"component-UiProgressIndicatorComponent-93c58a013f731503dca93da19f5063600ea14a106d9b465d4b4ef98e5fab14ea290f0af1e8df0c464803a656ea254676b6849fd8815ae12183a2e53d911cc106","file":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-progress-indicator","styleUrls":["./progress-indicator.component.scss"],"styles":[],"templateUrl":["./progress-indicator.component.html"],"viewProviders":[],"inputsClass":[{"name":"steps","defaultValue":"new Array<IUiStep>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nArray includes title and description for each step\\nStep status is set by default\\nTitle is required\\n","description":"<p>Array includes title and description for each step\\nStep status is set by default\\nTitle is required</p>\\n","line":29,"type":"any","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"progressIndicator","deprecated":false,"deprecationMessage":"","type":"UiProgressIndicatorComponent","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'progress\'"}],"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setLastStepComplete","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse this to set final step as complete before submitting form / doing final action\\nOnly available if last step is current\\n","description":"<p>Use this to set final step as complete before submitting form / doing final action\\nOnly available if last step is current</p>\\n","modifierKind":[123]},{"name":"setNextStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse this to set the next step as current and the current step as complete\\n","description":"<p>Use this to set the next step as current and the current step as complete</p>\\n","modifierKind":[123]},{"name":"setPreviousStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse this to set the previous step as current\\n","description":"<p>Use this to set the previous step as current</p>\\n","modifierKind":[123]},{"name":"stepSetup","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, ViewChild } from \'@angular/core\';\\n\\nexport interface IUiStep {\\n    title: string;\\n    description: string;\\n    stepStatus: \'incomplete\' | \'complete\' | \'current\';\\n}\\n@Component({\\n    selector: \'ui-progress-indicator\',\\n    templateUrl: \'./progress-indicator.component.html\',\\n    styleUrls: [\'./progress-indicator.component.scss\'],\\n})\\n\\n/**\\n * Progress Indicator Component\\n *\\n * @description Can be used to show the progress of a multi-step process\\n * Can have up to 6 steps\\n * First step is always \'current\'\\n * Can only go up or down one step at a time\\n */\\nexport class UiProgressIndicatorComponent implements OnInit {\\n    @ViewChild(\'progress\') public progressIndicator: UiProgressIndicatorComponent;\\n    /**\\n     * Array includes title and description for each step\\n     * Step status is set by default\\n     * Title is required\\n     */\\n    @Input() public steps = new Array<IUiStep>();\\n\\n    public ngOnInit() {\\n        this.stepSetup();\\n    }\\n\\n    public stepSetup() {\\n        //Check if steps are more than 6\\n        //If more than 6, remove the extra steps and throw console error\\n        if (this.steps.length > 6) {\\n            console.error(\'Progress Indicator can only have up to 6 steps\');\\n            this.steps = this.steps.slice(0, 6);\\n            throw new Error(\'Progress Indicator can only have up to 6 steps\');\\n        }\\n        //Check if title is empty\\n        //If empty, throw console error\\n        this.steps.forEach((step, index) => {\\n            if (!step.title) {\\n                console.error(`Title is required for step ${index + 1}`);\\n                throw new Error(`Title is required for step ${index + 1}`);\\n            }\\n            //First step always current by default\\n            step.stepStatus = index === 0 ? \'current\' : \'incomplete\';\\n        });\\n    }\\n\\n    /**\\n     * Use this to set the next step as current and the current step as complete\\n     */\\n    public setNextStep() {\\n        const currentIndex = this.steps.findIndex((step) => step.stepStatus === \'current\');\\n        if (currentIndex >= 0) {\\n            this.steps[currentIndex].stepStatus = \'complete\';\\n            //If current step is not the last step, set the next step as current\\n            if (currentIndex !== this.steps.length - 1) {\\n                this.steps[currentIndex + 1].stepStatus = \'current\';\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Use this to set the previous step as current\\n     */\\n    public setPreviousStep() {\\n        for (let i = 0; i < this.steps.length; i++) {\\n            if (this.steps[i].stepStatus === \'current\' && i !== 0) {\\n                this.steps[i].stepStatus = \'incomplete\';\\n                this.steps[i - 1].stepStatus = \'current\';\\n                break;\\n            }\\n            //If final step is complete, set it as current\\n            if (this.steps[i].stepStatus === \'complete\' && i === this.steps.length - 1) {\\n                this.steps[i].stepStatus = \'current\';\\n                break;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Use this to set final step as complete before submitting form / doing final action\\n     * Only available if last step is current\\n     */\\n    public setLastStepComplete() {\\n        if (this.steps[this.steps.length - 1].stepStatus === \'current\') {\\n            this.steps[this.steps.length - 1].stepStatus = \'complete\';\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./progress-indicator.component.scss"}],"stylesData":"","implements":["OnInit"],"templateData":"<div class=\\"progress-indicator ms-4\\">\\n    <div class=\\"progress-border\\">\\n        <div class=\\"progress-indicator-step\\" *ngFor=\\"let step of steps; let i = index\\" #progress>\\n            <div *ngIf=\\"step.title\\" class=\\"progress-step {{ step.stepStatus }}\\">\\n                <div class=\\"progress-main\\">\\n                    <div class=\\"step-row\\">\\n                        <span class=\\"icon\\">\\n                            <i [ngClass]=\\"{\\n                                    \'bi bi-check-circle-fill\': step.stepStatus === \'complete\',\\n                                    \'bi bi-circle\': step.stepStatus === \'incomplete\',\\n                                    \'bi bi-circle-half\': step.stepStatus === \'current\'\\n                                }\\"></i></span>\\n                        <div class=\\"progress-title\\">{{ i + 1 }}. {{ step.title }}</div>\\n                    </div>\\n                    <div class=\\"progress-description\\">\\n                        {{ step.description }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiQuickFilterComponent","id":"component-UiQuickFilterComponent-c247d54cd943a92ed218e50ec9912eb4366edebf786d84a3f85713321f9fbb1f7b435000f3c514eed493225b5ad195876717b69b3b515208f561a4bae0bf558a","file":"libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-quick-filter","styleUrls":["./quick-filter.component.scss"],"styles":[],"templateUrl":["./quick-filter.component.html"],"viewProviders":[],"inputsClass":[{"name":"disabled","deprecated":false,"deprecationMessage":"","line":29,"type":"boolean","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"multiSelect","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]},{"name":"setOptions","deprecated":false,"deprecationMessage":"","line":39,"type":"IUiDropdownPlusOption[]","decorators":[]},{"name":"showSearch","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"showSelectClearBtns","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]},{"name":"small","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"openChange","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":49,"type":"EventEmitter<literal type>"},{"name":"searchChange","defaultValue":"new EventEmitter<{ id: string; options: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":55,"type":"EventEmitter<literal type>"},{"name":"selectionChange","defaultValue":"new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":46,"type":"EventEmitter<literal type>"},{"name":"triggerClicked","defaultValue":"new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>()","deprecated":false,"deprecationMessage":"","line":52,"type":"EventEmitter<literal type>"}],"propertiesClass":[{"name":"_disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[121]},{"name":"_label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":63,"modifierKind":[121]},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":64,"modifierKind":[121]},{"name":"dropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":58,"decorators":[{"name":"ViewChild","stringifiedArguments":"UiDropdownPlusComponent"}],"modifierKind":[123]},{"name":"menuOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption[]","optional":false,"description":"","line":60,"modifierKind":[123]},{"name":"selectedOptions","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"triggerLabel","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"triggerLabelParams","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]}],"methodsClass":[{"name":"clearSelection","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onOpenChange","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSearchChange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelectionChange","args":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTriggerClicked","args":[{"name":"event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"unSelectItem","args":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"itemId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateTriggerLabel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from \'@angular/core\';\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\nimport { LangChangeEvent, TranslateService } from \'@ngx-translate/core\';\\nimport { Subscription } from \'rxjs\';\\n\\n@Component({\\n    selector: \'ui-quick-filter\',\\n    templateUrl: \'./quick-filter.component.html\',\\n    styleUrls: [\'./quick-filter.component.scss\'],\\n})\\nexport class UiQuickFilterComponent implements OnInit, OnDestroy {\\n    @Input() public id: string;\\n    // @Input() public disabled = false;\\n    @Input() public small = false;\\n    @Input() public showSearch = false;\\n    @Input() public multiSelect = true;\\n    @Input() public showSelectClearBtns = false;\\n\\n    @Input() public set label(label: string) {\\n        this._label = label;\\n        this.triggerLabel = label;\\n    };\\n    public get label() {\\n        return this._label;\\n    }\\n    public triggerLabel = \'\';\\n    public triggerLabelParams: unknown;\\n\\n    @Input() public set disabled(val: boolean) {\\n        this._disabled = val;\\n    };\\n\\n    public get disabled() {\\n        return this._disabled;\\n    }\\n\\n    public selectedOptions: any = [];\\n\\n    @Input() public set setOptions(options: IUiDropdownPlusOption[]) {\\n        this.options = options;\\n        setTimeout(() => {\\n            this.onSelectionChange({ id: this.id, selectedOptions: this.options.filter((option) => { return option.value === true; }) });\\n        });\\n    };\\n\\n    @Output() public selectionChange: EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public openChange: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public triggerClicked: EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; open: boolean; selectedOptions: IUiDropdownPlusOption[] }>();\\n\\n    @Output() public searchChange: EventEmitter<{ id: string; options: IUiDropdownPlusOption[] }> =\\n        new EventEmitter<{ id: string; options: IUiDropdownPlusOption[] }>();\\n\\n    @ViewChild(UiDropdownPlusComponent) public dropdownRef: UiDropdownPlusComponent;\\n\\n    public options: IUiDropdownPlusOption[] = [];\\n    public menuOpen = false;\\n\\n    private _label = \'\';\\n    private _subscription: Subscription;\\n    private _disabled = false;\\n\\n    constructor(private _translateService: TranslateService) { }\\n\\n    public ngOnInit(): void {\\n        this._subscription = this._translateService.onLangChange.subscribe((event: LangChangeEvent) => {\\n            this.updateTriggerLabel();\\n        });\\n    }\\n\\n    public ngOnDestroy() {\\n        this._subscription.unsubscribe();\\n    }\\n\\n    public onSelectionChange(event: { id: string; selectedOptions: IUiDropdownPlusOption[] }) {\\n        this.selectedOptions = event.selectedOptions;\\n        this.updateTriggerLabel();\\n        this.selectionChange.emit(event);\\n    }\\n\\n    public updateTriggerLabel() {\\n\\n        if (this.selectedOptions.length === 0) {\\n            this.triggerLabel = this._label;\\n        }\\n        else if (this.selectedOptions.length === 1) {\\n            this.triggerLabel = this.selectedOptions[0].label;\\n        }\\n        else {\\n            this.triggerLabel = this._label;\\n        }\\n    }\\n\\n    public clearSelection() {\\n        this.dropdownRef.clearSelection();\\n    }\\n\\n    public unSelectItem(itemId: string) {\\n        this.dropdownRef.unSelectItem(itemId);\\n    }\\n\\n    public onOpenChange(event) {\\n        this.menuOpen = event.open;\\n        this.openChange.emit(event);\\n    }\\n\\n    public onTriggerClicked(event) {\\n        this.triggerClicked.emit(event);\\n    }\\n\\n    public onSearchChange() { }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\n\\n// Trigger Styles\\n.quick-filter {\\n    cursor: pointer;\\n    font-weight: bold;\\n\\n    &.open {\\n        color: $primary;\\n        border-bottom: 1px solid $primary;\\n        margin-bottom: -1px;\\n    }\\n\\n    &:hover {\\n        color: $primary;\\n        border-bottom: 1px solid $primary;\\n        margin-bottom: -1px;\\n    }\\n\\n    &.option-selected {\\n        color: $primary;\\n\\n        &.disabled {\\n            color: $gray-600;\\n            cursor: default;\\n        }\\n    }\\n\\n    &.disabled {\\n        color: $gray-600;\\n        cursor: default;\\n\\n        &:hover {\\n            border-bottom: none;\\n            margin-bottom: 0;\\n        }\\n    }\\n\\n    &.open {\\n        .bi {\\n            // transition: 150ms ease-in-out;\\n            transform: rotate(180deg);\\n            &.anim {\\n                transition: 150ms ease-in-out;\\n            }\\n            margin-bottom: 4px;\\n        }\\n    }\\n\\n    .bi {\\n        &.anim{\\n            transition: 150ms ease-in-out;\\n        }\\n        transform: rotate(0deg);\\n    }\\n\\n    .btn {\\n        &.trigger {\\n            &.no-border {\\n                border: none;\\n                box-shadow: none !important;\\n                padding-left: 0px;\\n                padding-right: 0px;\\n            }\\n        }\\n\\n        &.hi-lite {\\n            border: 1px solid $primary;\\n        }\\n\\n        &.btn-link {\\n\\n            padding: 0;\\n            &:hover {\\n                text-decoration: underline;\\n            }\\n\\n            &:focus {\\n                text-decoration: underline;\\n                color: $primary-600;\\n            }\\n        }\\n    }\\n}\\n\\n","styleUrl":"./quick-filter.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":65,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"accessors":{"label":{"name":"label","setSignature":{"name":"label","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":19,"jsdoctags":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"label","type":"","returnType":"","line":23}},"disabled":{"name":"disabled","setSignature":{"name":"disabled","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"jsdoctags":[{"name":"val","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"disabled","type":"","returnType":"","line":33}},"setOptions":{"name":"setOptions","setSignature":{"name":"setOptions","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"jsdoctags":[{"name":"options","type":"IUiDropdownPlusOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}},"templateData":"<div\\n    class=\\"d-flex align-items-center quick-filter\\"\\n    [id]=\\"id + \'_trigger\'\\"\\n    [ngClass]=\\"{ open: menuOpen === true, \'option-selected\': selectedOptions?.length !== 0, disabled: disabled, small: small === true }\\"\\n    (click)=\\"dropdownRef.triggerClick()\\"\\n>\\n    <div [id]=\\"id + \'_triggerLabel\'\\" class=\\"label d-inline-block text-truncate\\">\\n        <span *ngIf=\\"this.selectedOptions.length === 0\\">{{ \'COMMON.ALL\' | translate }}</span>\\n        {{ triggerLabel | translate: triggerLabelParams }}\\n        <span *ngIf=\\"this.selectedOptions.length > 1\\"> ({{ this.selectedOptions.length }})</span>\\n    </div>\\n    <div>\\n        <i\\n            class=\\"bi ms-1 d-inline-block anim\\"\\n            [id]=\\"id + \'_triggerIcon\'\\"\\n            [ngClass]=\\"{ \'bi-caret-down-fill\': selectedOptions.length === 0, \'bi-filter\': selectedOptions.length !== 0 }\\"\\n        >\\n        </i>\\n    </div>\\n</div>\\n<ui-dropdown-plus\\n    #dropdownRef\\n    [id]=\\"id\\"\\n    [view]=\\"\'none\'\\"\\n    [externalTriggerEleId]=\\"id + \'_trigger\'\\"\\n    [animIcon]=\\"true\\"\\n    [setOptions]=\\"options\\"\\n    [disabled]=\\"disabled\\"\\n    [small]=\\"small\\"\\n    [paddingTop]=\\"3\\"\\n    [showSearch]=\\"showSearch\\"\\n    [multiSelect]=\\"multiSelect\\"\\n    [showSelectClearBtns]=\\"showSelectClearBtns\\"\\n    (selectionChange)=\\"onSelectionChange($event)\\"\\n    (openChange)=\\"onOpenChange($event)\\"\\n    (triggerClicked)=\\"onTriggerClicked($event)\\"\\n    (searchChange)=\\"onSearchChange()\\"\\n>\\n</ui-dropdown-plus>\\n"},{"name":"UiRadioButtonComponent","id":"component-UiRadioButtonComponent-776ee59d3418018c8364bf4f1973e5a8b12254d536e719d65c5638f8595bb5c55ab53b63bf67c8341f18df97f9da2ef9bc250c140800f343b1153f82b39c9fc2","file":"libs/ui/src/lib/modules/form/radio-button/radio-button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-radio-button-new","styleUrls":["./radio-button.component.scss"],"styles":[],"templateUrl":["./radio-button.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":16,"type":"literal type[]","decorators":[]},{"name":"radioButtons","defaultValue":"new Array<UiRadioButtonComponent>()","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n@Component({\\n    selector: \'ui-radio-button-new\',\\n    templateUrl: \'./radio-button.component.html\',\\n    styleUrls: [\'./radio-button.component.scss\'],\\n})\\n/**\\n * Radio button component\\n *\\n * @description This component is used to display a radio button group\\n */\\nexport class UiRadioButtonComponent extends UiFormControlBaseComponent implements OnInit {\\n    @Input() public inline = false;\\n    @Input() public options: { name: string; label: string; value: string; required: boolean }[];\\n\\n    @Input() public radioButtons = new Array<UiRadioButtonComponent>();\\n\\n    public ngOnInit(): void {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"ui-radio-button-new .form-check-inline {\\n    display: flex;\\n    flex-direction: row;\\n}","styleUrl":"./radio-button.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"templateData":"<ng-container [formGroup]=\\"form\\"\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\n    <div>\\n        <ui-form-control-base\\n            [label]=\\"label\\"\\n            [placeholder]=\\"placeholder\\"\\n            [formControlName]=\\"formControlName\\"\\n            [form]=\\"form\\"\\n            [showHelpText]=\\"showHelpText\\"\\n            [showSuccessValidation]=\\"showSuccessValidation\\"\\n            [showInfoIcon]=\\"showInfoIcon\\"\\n            [infoText]=\\"infoText\\"\\n            [helpText]=\\"helpText\\" \\n        >\\n            <div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\n                <div\\n                    *ngFor=\\"let radio of radioButtons\\"\\n                    class=\\"form-check\\"\\n                    [ngClass]=\\"{ \'form-check-inline radio-inline\': radio.inline === true }\\"\\n                >\\n                    <input\\n                        [id]=\\"radio.id + \'_Radio\'\\"\\n                        type=\\"radio\\"\\n                        class=\\"form-check-input\\"\\n                        [name]=\\"formControlName\\"\\n                        [formControlName]=\\"formControlName\\"\\n                        [value]=\\"radio.value\\"\\n                        [checked]=\\"value === radio.value\\"\\n                        [placeholder]=\\"placeholder\\"\\n                        [required]=\\"true\\"\\n                    />\\n                    <label\\n                        [id]=\\"radio.id + \'_Label\'\\"\\n                        [for]=\\"radio.id + \'_Radio\'\\"\\n                        class=\\"form-check-label\\"\\n                        [ngClass]=\\"{ \'radio-inline\': radio.inline === true }\\"\\n                    >\\n                        {{ radio.label }}\\n                    </label>\\n                    <i\\n                        *ngIf=\\"radio.showInfoIcon && radio.infoText !== \'\'\\"\\n                        class=\\"bi bi-question-circle-fill d-inline-block\\"\\n                        placement=\\"top\\"\\n                        [ngbTooltip]=\\"radio.infoText\\"\\n                    ></i>\\n                </div>\\n            </div>\\n        </ui-form-control-base>\\n    </div>\\n</ng-container>"},{"name":"UiRichTextEditorComponent","id":"component-UiRichTextEditorComponent-7a8bab42ea559913d0f3f304a5b0f55af91f8be9074fc3ff0e94e4fd926aa32698f08f14e4e94e16314b5fd2d6ad1e65241d7112aeeecafd38d2aa8733dbf3b7","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor-old","styleUrls":["./rich-text-editor.component.scss"],"styles":[],"templateUrl":["./rich-text-editor.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","type":"QuillEditorComponent","optional":false,"description":"","line":21,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'editor\'"}],"modifierKind":[123]},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"modules","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24,"modifierKind":[123]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ViewChild, OnInit } from \'@angular/core\';\\n// Quill\\nimport { QuillEditorComponent } from \'ngx-quill\';\\nimport * as QuillNamespace from \'quill\';\\nconst Quill: any = QuillNamespace;\\n// Classes\\nimport UiPasteClipboard from \'./classes/paste.class\';\\n// Components\\nimport { UiFormControlBaseComponent } from \'@lib/modules/form-controls/form-control-base/form-control-base.component\';\\n\\n@Component({\\n    selector: \'ui-rich-text-editor-old\',\\n    templateUrl: \'./rich-text-editor.component.html\',\\n    styleUrls: [\'./rich-text-editor.component.scss\'],\\n})\\n/**\\n * @deprecated [Use ..form/rich-text-editor/rich-text-editor.component.ts\']\\n */\\nexport class UiRichTextEditorComponent extends UiFormControlBaseComponent implements OnInit {\\n    @ViewChild(\'editor\') public editor: QuillEditorComponent;\\n\\n    public format;\\n    public modules;\\n\\n    public ngOnInit(): void {\\n        this.modules = {\\n            toolbar: false,\\n        };\\n\\n        Quill.register(\'modules/clipboard\', UiPasteClipboard);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"templateData":"<div *ngIf=\\"form !== undefined\\">\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\n        {{ label }}\\n        \x3c!-- Required Asterix --\x3e\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\n    </label>\\n    <i\\n        [id]=\\"id + \'_InfoIcon\'\\"\\n        *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\n        class=\\"bi bi-question-circle-fill\\"\\n        placement=\\"top\\"\\n        [ngbTooltip]=\\"infoText\\"\\n    ></i>\\n\\n    <div class=\\"input-group\\">\\n        \x3c!-- Prefix Icon --\x3e\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Prefix Text --\x3e\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\"> </span>\\n        <div class=\\"rich-text-editor-container\\">\\n        <ui-rich-text-editor-toolbar-old [editor]=\\"editor\\"></ui-rich-text-editor-toolbar-old>\\n        <quill-editor\\n            #editor\\n            id=\\"editor\\"\\n            label=\\"edit\\"\\n            [ngClass]=\\"{\\n                \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\n                \'is-valid\': form.controls[formControlName].valid && showSuccessValidation\\n            }\\"\\n            (input)=\\"onChange($event.target.value)\\"\\n            [value]=\\"d\\"\\n            [disabled]=\\"false\\"\\n            [placeholder]=\\"\'COMMON.TEXT_EDITOR.TYPE_IMPORTANT_INFO_HERE\' | translate\\"\\n            [modules]=\\"modules\\"\\n        >\\n        </quill-editor>\\n    </div>\\n        \x3c!-- Suffix Icon --\x3e\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Suffix Text --\x3e\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{ suffixText }}\\n        </span>\\n    </div>\\n\\n    <div class=\\"feedback\\">\\n        \x3c!-- Success Feedback Text --\x3e\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\n        </div>\\n\\n        \x3c!-- Error Feedback Text --\x3e\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && showErrorValidation\\">\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.required\\">\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\n            </div>\\n        </div>\\n\\n        \x3c!-- Help Text --\x3e\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{ helpText }}</div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiRichTextEditorComponent","id":"component-UiRichTextEditorComponent-9e065bf745009060a4f91ee2120931c07530600c29864cdfaab27d64befa4fa3f5753730ded81cea81b18f67c429c65f421f9c70de19295b2d5e7b5d8917e5e9-1","file":"libs/ui/src/lib/modules/form/rich-text-editor/rich-text-editor.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor","styleUrls":["./rich-text-editor.component.scss"],"styles":[],"templateUrl":["./rich-text-editor.component.html"],"viewProviders":[],"inputsClass":[{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","type":"QuillEditorComponent","optional":false,"description":"","line":17,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'editor\'"}],"modifierKind":[123]},{"name":"modules","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"Quill","defaultValue":"QuillNamespace","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"sanitizedValue","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"UiFormValidators","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"getSanitizedValue","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChangeEditor","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ViewChild, OnInit } from \'@angular/core\';\\n// Quill\\nimport { QuillEditorComponent } from \'ngx-quill\';\\nimport * as QuillNamespace from \'quill\';\\n// Classes\\nimport UiPasteClipboard from \'./classes/paste.class\';\\n// Components\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n@Component({\\n    selector: \'ui-rich-text-editor\',\\n    templateUrl: \'./rich-text-editor.component.html\',\\n    styleUrls: [\'./rich-text-editor.component.scss\'],\\n})\\nexport class UiRichTextEditorComponent extends UiFormControlBaseComponent implements OnInit {\\n    @ViewChild(\'editor\') public editor: QuillEditorComponent;\\n    public Quill: any = QuillNamespace;\\n\\n    public modules;\\n    public sanitizedValue;\\n    public UiFormValidators: any;\\n\\n    public ngOnInit(): void {\\n        this.showSuccessValidation = false;\\n        this.modules = {\\n            toolbar: false,\\n        };\\n        this.Quill.register(\'modules/clipboard\', UiPasteClipboard);\\n    }\\n\\n    public getSanitizedValue() {\\n        return this.sanitizedValue;\\n    }\\n\\n    public onChangeEditor($event) {\\n        this.sanitizedValue = $event.text.trim();\\n        this.valueChange.emit($event);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiRichTextEditorComponent-1","templateData":"<ng-container [formGroup]=\\"form\\"\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\n    <ui-form-control-base\\n        [label]=\\"label\\"\\n        [formControlName]=\\"formControlName\\"\\n        [form]=\\"form\\"\\n        [placeholder]=\\"placeholder\\"\\n        [showHelpText]=\\"showHelpText\\"\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\n        [showInfoIcon]=\\"showInfoIcon\\"\\n        [infoText]=\\"infoText\\"\\n        [helpText]=\\"helpText\\"\\n        [setValueOnChange]=\\"false\\"\\n    >\\n        <div class=\\"rich-text-editor-container\\">\\n            <ui-rich-text-editor-toolbar [editor]=\\"editor\\"></ui-rich-text-editor-toolbar>\\n            <quill-editor\\n                #editor\\n                id=\\"editor\\"\\n                [formControlName]=\\"formControlName\\"\\n                [ngClass]=\\"{\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation\\n                }\\"\\n                [placeholder]=\\"\'COMMON.TEXT_EDITOR.TYPE_IMPORTANT_INFO_HERE\' | translate\\"\\n                [modules]=\\"modules\\"\\n                (onContentChanged)=\\"onChangeEditor($event)\\"\\n            >\\n            </quill-editor>\\n        </div>\\n    </ui-form-control-base>\\n</ng-container>\\n"},{"name":"UiRichTextEditorToolbarComponent","id":"component-UiRichTextEditorToolbarComponent-0c2811bb73a65fd8c118f03461d46894b40b9b074d8d0d4a0316d773d085b9619667733d4528f58af9c408226452e367f3470bf20b6d5113927d55527e9ba731","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor-toolbar-old","styleUrls":["./rich-text-editor-toolbar.component.scss"],"styles":[],"templateUrl":["./rich-text-editor-toolbar.component.html"],"viewProviders":[],"inputsClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","line":23,"type":"QuillEditorComponent","decorators":[]},{"name":"editMode","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":39,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"buttons","defaultValue":"{\\n        bold: new UiButtonObject(),\\n        italic: new UiButtonObject(),\\n        underline: new UiButtonObject(),\\n        sub: new UiButtonObject(),\\n        super: new UiButtonObject(),\\n        ordered: new UiButtonObject(),\\n        bullet: new UiButtonObject(),\\n        link: new UiButtonObject(),\\n        clearFormatting: new UiButtonObject(),\\n    }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"dropdownComp","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdown\'"}],"modifierKind":[123]},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"linkText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"linkURL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"popover","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":21,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'popover\', {static: false}"}],"modifierKind":[123]},{"name":"selectedSize","defaultValue":"this.sizeList[1].label","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"sizeList","defaultValue":"[\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"urlPattern","defaultValue":"REGEX_CONST.URL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"changeDropdownItem","args":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":197,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":225,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChanged","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":232,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"populateLinkInput","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":186,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"submitLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild, Input, AfterViewInit } from \'@angular/core\';\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { QuillEditorComponent } from \'ngx-quill\';\\nimport { UiButtonObject } from \'../../classes/buttonObject.class\';\\nimport { REGEX_CONST } from \'@app/shared/constants/common.const\';\\n\\n@Component({\\n    selector: \'ui-rich-text-editor-toolbar-old\',\\n    templateUrl: \'./rich-text-editor-toolbar.component.html\',\\n    styleUrls: [\'./rich-text-editor-toolbar.component.scss\'],\\n})\\nexport class UiRichTextEditorToolbarComponent extends UiFormBaseComponent implements OnInit, AfterViewInit {\\n    public format;\\n    public linkText;\\n    public linkURL;\\n    public urlPattern = REGEX_CONST.URL;\\n\\n    @ViewChild(\'dropdown\') public dropdownComp: NgbDropdown;\\n    @ViewChild(\'popover\', { static: false }) public popover: any;\\n\\n    @Input() public editor: QuillEditorComponent;\\n\\n    public buttons = {\\n        bold: new UiButtonObject(),\\n        italic: new UiButtonObject(),\\n        underline: new UiButtonObject(),\\n        sub: new UiButtonObject(),\\n        super: new UiButtonObject(),\\n        ordered: new UiButtonObject(),\\n        bullet: new UiButtonObject(),\\n        link: new UiButtonObject(),\\n        clearFormatting: new UiButtonObject(),\\n    };\\n\\n    public sizeList = [\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\n    ];\\n\\n    public selectedSize = this.sizeList[1].label;\\n\\n    constructor(private _translateService: TranslateService) {\\n        super();\\n    }\\n\\n    public onChange(e) {\\n        const range = this.editor.quillEditor.getSelection();\\n        if (range) {\\n            switch (e) {\\n                case \'small\': {\\n                    if (this.sizeList[0].selected === false) {\\n                        this.sizeList[0].selected = true;\\n                        this.editor.quillEditor.format(\'size\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'size\', false);\\n                        this.sizeList[0].selected = false;\\n                    }\\n                    break;\\n                }\\n                //Normal will format full line when header is applied\\n                case false: {\\n                    this.editor.quillEditor.format(\'header\', false);\\n                    if (this.sizeList[1].selected === true) {\\n                        this.sizeList[1].selected = true;\\n                        this.editor.quillEditor.format(\'size\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'size\', false);\\n                    }\\n                    break;\\n                }\\n                case \'4\': {\\n                    if (this.sizeList[2].selected === false) {\\n                        this.sizeList[2].selected = true;\\n                        this.editor.quillEditor.format(\'header\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'header\', false);\\n                        this.sizeList[2].selected = false;\\n                    }\\n                    break;\\n                }\\n                case \'5\': {\\n                    if (this.sizeList[3].selected === false) {\\n                        this.sizeList[3].selected = true;\\n                        this.editor.quillEditor.format(\'header\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'header\', false);\\n                        this.sizeList[3].selected = false;\\n                    }\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    public changeDropdownItem(selectedLabel) {\\n        this.selectedSize = selectedLabel;\\n        const index = this.sizeList.findIndex((x) => x.label === selectedLabel);\\n        const item = this.sizeList[index].value;\\n\\n        this.onChange(item);\\n    }\\n\\n    public ngOnInit() {\\n        this.formControls = {\\n            link: { value: \'\', validators: [] },\\n        };\\n        this.createForm(this.formControls);\\n        this.editMode = true;\\n        this.onSaveBtnClick = this.submitLink;\\n\\n        //onclick, check if bold button is already selected. If false, will change to true and format to bold.\\n        //If already selected, will change to false and remove format\\n        this.buttons.bold.onClick = (e) => {\\n            if (this.buttons.bold.selected === false) {\\n                this.buttons.bold.selected = true;\\n                this.editor.quillEditor.format(e, true);\\n            } else {\\n                this.editor.quillEditor.format(e, false);\\n                this.buttons.bold.selected = false;\\n            }\\n        };\\n\\n        this.buttons.italic.onClick = (e) => {\\n            if (this.buttons.italic.selected === false) {\\n                this.buttons.italic.selected = true;\\n                this.editor.quillEditor.format(e, true);\\n            } else {\\n                this.editor.quillEditor.format(e, false);\\n                this.buttons.italic.selected = false;\\n            }\\n        };\\n\\n        this.buttons.underline.onClick = (e) => {\\n            if (this.buttons.underline.selected === false) {\\n                this.buttons.underline.selected = true;\\n                this.editor.quillEditor.format(e, true);\\n            } else {\\n                this.editor.quillEditor.format(e, false);\\n                this.buttons.underline.selected = false;\\n            }\\n        };\\n\\n        this.buttons.sub.onClick = (e) => {\\n            if (this.buttons.sub.selected === false) {\\n                this.buttons.sub.selected = true;\\n                this.editor.quillEditor.format(\'script\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'script\', false);\\n                this.buttons.sub.selected = false;\\n            }\\n        };\\n\\n        this.buttons.super.onClick = (e) => {\\n            if (this.buttons.super.selected === false) {\\n                this.buttons.super.selected = true;\\n                this.editor.quillEditor.format(\'script\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'script\', false);\\n                this.buttons.super.selected = false;\\n            }\\n        };\\n        this.buttons.ordered.onClick = (e) => {\\n            if (this.buttons.ordered.selected === false) {\\n                this.buttons.ordered.selected = true;\\n                this.editor.quillEditor.format(\'list\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'list\', false);\\n                this.buttons.ordered.selected = false;\\n            }\\n        };\\n        this.buttons.bullet.onClick = (e) => {\\n            if (this.buttons.bullet.selected === false) {\\n                this.buttons.bullet.selected = true;\\n                this.editor.quillEditor.format(\'list\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'list\', false);\\n                this.buttons.bullet.selected = false;\\n            }\\n        };\\n    }\\n\\n    public populateLinkInput() {\\n        const selection = this.editor.quillEditor.getSelection(true);\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\n\\n        if (this.urlPattern.test(this.linkText)) {\\n            this.form.controls.link.setValue(this.linkText);\\n        } else {\\n            this.form.controls.link.setValue(\'\');\\n        }\\n    }\\n\\n    public editLink() {\\n        const range = this.editor.quillEditor.getSelection();\\n        const selection = this.editor.quillEditor.getSelection(true);\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\n        const format = this.editor.quillEditor.getFormat(range.index, range.length);\\n        if (range && format.link) {\\n            this.form.controls.link.setValue(format.link);\\n        }\\n    }\\n\\n    //Submits link, formats it and places it where cursor is\\n    //If no value is inputted when save button is clicked, exits modal\\n    public submitLink() {\\n        if (!!this.form.get(\'link\').value) {\\n            const link = this.submitForm();\\n            const selection = this.editor.quillEditor.getSelection(true);\\n            const text = this.editor.quillEditor.getText(selection.index, selection.length);\\n            this.editor.quillEditor.deleteText(selection.index, selection.length);\\n            // eslint-disable-next-line dot-notation\\n            this.linkURL = link[\'link\'];\\n            this.editor.quillEditor.insertText(selection.index, text, \'link\', this.linkURL);\\n        }\\n\\n        this.form.controls.link.enable();\\n        this.popover.close();\\n        this.onClearBtnClick();\\n    }\\n\\n    public ngAfterViewInit() {\\n        //NOTE: This delay allows the editor to completely load before using it.\\n        setTimeout(() => {\\n            this.editor.quillEditor.on(\'selection-change\', (e) => this.onSelectionChanged(e));\\n        }, 500);\\n    }\\n\\n    public onSelectionChanged($event) {\\n        const bounds = this.editor.quillEditor.getSelection($event);\\n        //If selection is inside editor\\n        if (bounds) {\\n            this.format = this.editor.quillEditor.getFormat($event.range);\\n\\n            //Highlights correct button when text with specified format is selected\\n            this.buttons.bold.selected = !!this.format.bold;\\n\\n            this.buttons.italic.selected = !!this.format.italic;\\n\\n            this.buttons.underline.selected = !!this.format.underline;\\n\\n            this.buttons.sub.selected = this.format.script === \'sub\';\\n\\n            this.buttons.super.selected = this.format.script === \'super\';\\n\\n            this.buttons.ordered.selected = this.format.list === \'ordered\';\\n\\n            this.buttons.bullet.selected = this.format.list === \'bullet\';\\n\\n            this.buttons.link.selected = !!this.format.link;\\n\\n            if (!!this.format.link) {\\n                this.popover.open();\\n\\n                this.editLink();\\n            }\\n\\n            this.buttons.clearFormatting.onClick = () => {\\n                this.editor.quillEditor.removeFormat(bounds.index, bounds.length);\\n            };\\n        }\\n\\n        if (this.format.size === \'small\') {\\n            this.sizeList[0].selected = true;\\n            this.selectedSize = this.sizeList[0].label;\\n        } else {\\n            this.sizeList[0].selected = false;\\n        }\\n\\n        if (this.format.size === false) {\\n            this.sizeList[1].selected = true;\\n            this.selectedSize = this.sizeList[1].label;\\n        } else {\\n            this.sizeList[1].selected = false;\\n        }\\n\\n        if (this.format.header === 4) {\\n            this.sizeList[2].selected = true;\\n            this.selectedSize = this.sizeList[2].label;\\n        } else {\\n            this.sizeList[2].selected = false;\\n        }\\n\\n        if (this.format.header === 5) {\\n            this.sizeList[3].selected = true;\\n            this.selectedSize = this.sizeList[3].label;\\n        } else {\\n            this.sizeList[3].selected = false;\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor-toolbar.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":44,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiFormBaseComponent","implements":["OnInit","AfterViewInit"],"templateData":"<div class=\\"toolbar\\">\\n    <div>\\n        <div ngbDropdown class=\\"d-inline-block size-dropdown\\" placement=\\"bottom-start\\" #dropdown=\\"ngbDropdown\\">\\n            <button type=\\"button\\" class=\\"acp-form-control small btn-select size-dropdown\\" id=\\"dropdownBasic1\\" ngbDropdownToggle>\\n                <span> {{ selectedSize }} <i class=\\"bi bi-chevron-expand\\"></i></span>\\n            </button>\\n            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\n                <button\\n                    ngbDropdownItem\\n                    *ngFor=\\"let size of sizeList\\"\\n                    value=\\"{{ size.value }}\\"\\n                    (click)=\\"this.changeDropdownItem(size.label)\\"\\n                >\\n                    {{ size.label }}\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\"text-editor-toolbar-buttons\\">\\n    <div class=\\"button-group-1\\">\\n        <button\\n            value=\\"bold\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BOLD\' | translate\\"\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngClass]=\\"{ selected: buttons.bold.selected }\\"\\n            (click)=\\"buttons.bold.onClick(\'bold\')\\"\\n        >\\n            <i class=\\"bi bi-type-bold\\"></i>\\n        </button>\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ITALIC\' | translate\\"\\n            [ngClass]=\\"{ selected: buttons.italic.selected }\\"\\n            (click)=\\"buttons.italic.onClick(\'italic\')\\"\\n        >\\n            <i class=\\"bi bi-type-italic\\"></i>\\n        </button>\\n\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.UNDERLINE\' | translate\\"\\n            [ngClass]=\\"{ selected: buttons.underline.selected }\\"\\n            (click)=\\"buttons.underline.onClick(\'underline\')\\"\\n        >\\n            <i class=\\"bi bi-type-underline\\"></i>\\n        </button>\\n\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUBSCRIPT\' | translate\\"\\n            value=\\"sub\\"\\n            [ngClass]=\\"{ selected: buttons.sub.selected }\\"\\n            (click)=\\"buttons.sub.onClick(\'sub\')\\"\\n        >\\n            <i class=\\"bi bi-subscript\\"></i>\\n        </button>\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUPERSCRIPT\' | translate\\"\\n            value=\\"super\\"\\n            [ngClass]=\\"{ selected: buttons.super.selected }\\"\\n            (click)=\\"buttons.super.onClick(\'super\')\\"\\n        >\\n            <i class=\\"bi bi-superscript\\"></i>\\n        </button>\\n    </div>\\n\\n    <div class=\\"button-group-2\\">\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ORDERED_LIST\' | translate\\"\\n            value=\\"ordered\\"\\n            [ngClass]=\\"{ selected: buttons.ordered.selected }\\"\\n            (click)=\\"buttons.ordered.onClick(\'ordered\')\\"\\n        >\\n            <i class=\\"bi bi-list-ol\\"></i>\\n        </button>\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BULLET_LIST\' | translate\\"\\n            value=\\"bullet\\"\\n            [ngClass]=\\"{ selected: buttons.bullet.selected }\\"\\n            (click)=\\"buttons.bullet.onClick(\'bullet\')\\"\\n        >\\n            <i class=\\"bi bi-list-ul\\"></i>\\n        </button>\\n    \\n    <div [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.LINK\' | translate\\" placement=\\"top\\">\\n        <button\\n            id=\\"popover\\"\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            placement=\\"bottom\\"\\n            value=\\"link\\"\\n            [ngClass]=\\"{ selected: buttons.link.selected }\\"\\n            data-toggle=\\"popover\\"\\n            [ngbPopover]=\\"popContent\\"\\n            #popover=\\"ngbPopover\\"\\n            [autoClose]=\\"\'outside\'\\"\\n            popoverClass=\\"popover-class\\"\\n            (click)=\\"populateLinkInput()\\"\\n        >\\n            <i class=\\"bi bi-link-45deg\\"></i>\\n        </button>\\n    </div>\\n    <button\\n        class=\\"btn btn-link btn-md toolbarButton\\"\\n        [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.CLEAR_FORMATTING\' | translate\\"\\n        value=\\"false\\"\\n        [ngClass]=\\"{ selected: buttons.clearFormatting.selected }\\"\\n        (click)=\\"buttons.clearFormatting.onClick(\'false\')\\"\\n    >\\n        <i class=\\"bi bi-eraser-fill\\"></i>\\n    </button>\\n</div>\\n</div>\\n\\n    <div class=\\"body link-pop\\">\\n        <ng-template #popContent class=\\"popstyle\\">\\n            <form [formGroup]=\\"form\\">\\n                <div class=\\"row popover-row\\">\\n                    <p class=\\"col-auto link-text\\">{{ \'COMMON.ENTER_LINK\' | translate }}</p>\\n                    <div class=\\"col-auto pop-url\\">\\n                        <input class=\\"url form-control\\" id=\\"link\\" formControlName=\\"link\\" form=\\"form\\" value=\\"{{ linkText }}\\" />\\n                    </div>\\n                    <div class=\\"col-auto pop-button\\">\\n                        <button type=\\"button\\" class=\\"btn btn-link btn-sm col-2\\" (click)=\\"submitLink()\\">\\n                            {{ \'COMMON.SAVE\' | translate }}\\n                        </button>\\n                    </div>\\n                </div>\\n            </form>\\n        </ng-template>\\n    </div>\\n</div>\\n"},{"name":"UiRichTextEditorToolbarComponent","id":"component-UiRichTextEditorToolbarComponent-25f31e1f73e8625a8d9287b2c68a46c9734c991b048f068556875dc322d3ce5cf53727b3d64385ffcbac20a8b41fe9908833dca32135a154f2b02f08c924e572-1","file":"libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-rich-text-editor-toolbar","styleUrls":["./rich-text-editor-toolbar.component.scss"],"styles":[],"templateUrl":["./rich-text-editor-toolbar.component.html"],"viewProviders":[],"inputsClass":[{"name":"editor","deprecated":false,"deprecationMessage":"","line":23,"type":"QuillEditorComponent","decorators":[]},{"name":"editMode","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"quillValueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":24,"type":"EventEmitter<any>"},{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":39,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"buttons","defaultValue":"{\\n        bold: new UiButtonObject(),\\n        italic: new UiButtonObject(),\\n        underline: new UiButtonObject(),\\n        sub: new UiButtonObject(),\\n        super: new UiButtonObject(),\\n        ordered: new UiButtonObject(),\\n        bullet: new UiButtonObject(),\\n        link: new UiButtonObject(),\\n        clearFormatting: new UiButtonObject(),\\n    }","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"dropdownComp","deprecated":false,"deprecationMessage":"","type":"NgbDropdown","optional":false,"description":"","line":20,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdown\'"}],"modifierKind":[123]},{"name":"format","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[123]},{"name":"linkText","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"linkURL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"popover","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":21,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'popover\', {static: false}"}],"modifierKind":[123]},{"name":"selectedSize","defaultValue":"this.sizeList[1].label","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"sizeList","defaultValue":"[\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\n    ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"urlPattern","defaultValue":"REGEX_CONST.URL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"changeDropdownItem","args":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedLabel","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"editLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":226,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onSelectionChanged","args":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":233,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"populateLinkInput","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"submitLink","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":210,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild, Input, AfterViewInit, EventEmitter, Output } from \'@angular/core\';\\nimport { UiFormBaseComponent } from \'@lib/modules/form/form-base/form-base.component\';\\nimport { NgbDropdown } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { QuillEditorComponent } from \'ngx-quill\';\\nimport { UiButtonObject } from \'../../classes/buttonObject.class\';\\nimport { REGEX_CONST } from \'@app/shared/constants/common.const\';\\n\\n@Component({\\n    selector: \'ui-rich-text-editor-toolbar\',\\n    templateUrl: \'./rich-text-editor-toolbar.component.html\',\\n    styleUrls: [\'./rich-text-editor-toolbar.component.scss\'],\\n})\\nexport class UiRichTextEditorToolbarComponent extends UiFormBaseComponent implements OnInit, AfterViewInit {\\n    public format;\\n    public linkText;\\n    public linkURL;\\n    public urlPattern = REGEX_CONST.URL;\\n\\n    @ViewChild(\'dropdown\') public dropdownComp: NgbDropdown;\\n    @ViewChild(\'popover\', { static: false }) public popover: any;\\n\\n    @Input() public editor: QuillEditorComponent;\\n    @Output() public quillValueChange: EventEmitter<any> = new EventEmitter<any>();\\n\\n    public buttons = {\\n        bold: new UiButtonObject(),\\n        italic: new UiButtonObject(),\\n        underline: new UiButtonObject(),\\n        sub: new UiButtonObject(),\\n        super: new UiButtonObject(),\\n        ordered: new UiButtonObject(),\\n        bullet: new UiButtonObject(),\\n        link: new UiButtonObject(),\\n        clearFormatting: new UiButtonObject(),\\n    };\\n\\n    public sizeList = [\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SMALL\'), value: \'small\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.NORMAL\'), value: false, selected: true },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.HEADER\'), value: \'4\', selected: false },\\n        { label: this._translateService.instant(\'COMMON.TEXT_EDITOR.SUBHEADER\'), value: \'5\', selected: false },\\n    ];\\n\\n    public selectedSize = this.sizeList[1].label;\\n\\n    constructor(private _translateService: TranslateService) {\\n        super();\\n    }\\n\\n    public onChange(e) {\\n        const range = this.editor.quillEditor.getSelection();\\n        if (range) {\\n            switch (e) {\\n                case \'small\': {\\n                    if (this.sizeList[0].selected === false) {\\n                        this.sizeList[0].selected = true;\\n                        this.editor.quillEditor.format(\'size\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'size\', false);\\n                        this.sizeList[0].selected = false;\\n                    }\\n                    break;\\n                }\\n                //Normal will format full line when header is applied\\n                case false: {\\n                    this.editor.quillEditor.format(\'header\', false);\\n                    if (this.sizeList[1].selected === true) {\\n                        this.sizeList[1].selected = true;\\n                        this.editor.quillEditor.format(\'size\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'size\', false);\\n                    }\\n                    break;\\n                }\\n                case \'4\': {\\n                    if (this.sizeList[2].selected === false) {\\n                        this.sizeList[2].selected = true;\\n                        this.editor.quillEditor.format(\'header\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'header\', false);\\n                        this.sizeList[2].selected = false;\\n                    }\\n                    break;\\n                }\\n                case \'5\': {\\n                    if (this.sizeList[3].selected === false) {\\n                        this.sizeList[3].selected = true;\\n                        this.editor.quillEditor.format(\'header\', e);\\n                    } else {\\n                        this.editor.quillEditor.format(\'header\', false);\\n                        this.sizeList[3].selected = false;\\n                    }\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    public changeDropdownItem(selectedLabel) {\\n        this.selectedSize = selectedLabel;\\n        const index = this.sizeList.findIndex((x) => x.label === selectedLabel);\\n        const item = this.sizeList[index].value;\\n\\n        this.onChange(item);\\n    }\\n\\n    public ngOnInit() {\\n        this.formControls = {\\n            link: { value: \'\', validators: [] },\\n        };\\n        this.createForm(this.formControls);\\n        this.editMode = true;\\n        this.onSaveBtnClick = this.submitLink;\\n\\n        //onclick, check if bold button is already selected. If false, will change to true and format to bold.\\n        //If already selected, will change to false and remove format\\n        this.buttons.bold.onClick = (e) => {\\n            if (this.buttons.bold.selected === false) {\\n                this.buttons.bold.selected = true;\\n                this.editor.quillEditor.format(e, true);\\n            } else {\\n                this.editor.quillEditor.format(e, false);\\n                this.buttons.bold.selected = false;\\n            }\\n        };\\n\\n        this.buttons.italic.onClick = (e) => {\\n            if (this.buttons.italic.selected === false) {\\n                this.buttons.italic.selected = true;\\n                this.editor.quillEditor.format(e, true);\\n            } else {\\n                this.editor.quillEditor.format(e, false);\\n                this.buttons.italic.selected = false;\\n            }\\n        };\\n\\n        this.buttons.underline.onClick = (e) => {\\n            if (this.buttons.underline.selected === false) {\\n                this.buttons.underline.selected = true;\\n                this.editor.quillEditor.format(e, true);\\n            } else {\\n                this.editor.quillEditor.format(e, false);\\n                this.buttons.underline.selected = false;\\n            }\\n        };\\n\\n        this.buttons.sub.onClick = (e) => {\\n            if (this.buttons.sub.selected === false) {\\n                this.buttons.sub.selected = true;\\n                this.editor.quillEditor.format(\'script\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'script\', false);\\n                this.buttons.sub.selected = false;\\n            }\\n        };\\n\\n        this.buttons.super.onClick = (e) => {\\n            if (this.buttons.super.selected === false) {\\n                this.buttons.super.selected = true;\\n                this.editor.quillEditor.format(\'script\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'script\', false);\\n                this.buttons.super.selected = false;\\n            }\\n        };\\n        this.buttons.ordered.onClick = (e) => {\\n            if (this.buttons.ordered.selected === false) {\\n                this.buttons.ordered.selected = true;\\n                this.editor.quillEditor.format(\'list\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'list\', false);\\n                this.buttons.ordered.selected = false;\\n            }\\n        };\\n        this.buttons.bullet.onClick = (e) => {\\n            if (this.buttons.bullet.selected === false) {\\n                this.buttons.bullet.selected = true;\\n                this.editor.quillEditor.format(\'list\', e);\\n            } else {\\n                this.editor.quillEditor.format(\'list\', false);\\n                this.buttons.bullet.selected = false;\\n            }\\n        };\\n    }\\n\\n    public populateLinkInput() {\\n        const selection = this.editor.quillEditor.getSelection(true);\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\n\\n        if (this.urlPattern.test(this.linkText)) {\\n            this.form.controls.link.setValue(this.linkText);\\n        } else {\\n            this.form.controls.link.setValue(\'\');\\n        }\\n    }\\n\\n    public editLink() {\\n        const range = this.editor.quillEditor.getSelection();\\n        const selection = this.editor.quillEditor.getSelection(true);\\n        this.linkText = this.editor.quillEditor.getText(selection.index, selection.length);\\n        const format = this.editor.quillEditor.getFormat(range.index, range.length);\\n        if (range && format.link) {\\n            this.form.controls.link.setValue(format.link);\\n        }\\n    }\\n\\n    //Submits link, formats it and places it where cursor is\\n    //If no value is inputted when save button is clicked, exits modal\\n    public submitLink() {\\n        if (!!this.form.get(\'link\').value) {\\n            const link = this.submitForm();\\n            const selection = this.editor.quillEditor.getSelection(true);\\n            const text = this.editor.quillEditor.getText(selection.index, selection.length);\\n            this.editor.quillEditor.deleteText(selection.index, selection.length);\\n            // eslint-disable-next-line dot-notation\\n            this.linkURL = link[\'link\'];\\n            this.editor.quillEditor.insertText(selection.index, text, \'link\', this.linkURL);\\n        }\\n\\n        this.form.controls.link.enable();\\n        this.popover.close();\\n        this.onClearBtnClick();\\n    }\\n\\n    public ngAfterViewInit() {\\n        //NOTE: This delay allows the editor to completely load before using it.\\n        setTimeout(() => {\\n            this.editor.quillEditor.on(\'selection-change\', (e) => this.onSelectionChanged(e));\\n        }, 500);\\n    }\\n\\n    public onSelectionChanged($event) {\\n        const bounds = this.editor.quillEditor.getSelection($event);\\n        //If selection is inside editor\\n        if (bounds) {\\n            this.format = this.editor.quillEditor.getFormat($event.range);\\n\\n            //Highlights correct button when text with specified format is selected\\n            this.buttons.bold.selected = !!this.format.bold;\\n\\n            this.buttons.italic.selected = !!this.format.italic;\\n\\n            this.buttons.underline.selected = !!this.format.underline;\\n\\n            this.buttons.sub.selected = this.format.script === \'sub\';\\n\\n            this.buttons.super.selected = this.format.script === \'super\';\\n\\n            this.buttons.ordered.selected = this.format.list === \'ordered\';\\n\\n            this.buttons.bullet.selected = this.format.list === \'bullet\';\\n\\n            this.buttons.link.selected = !!this.format.link;\\n\\n            if (!!this.format.link) {\\n                this.popover.open();\\n\\n                this.editLink();\\n            }\\n\\n            this.buttons.clearFormatting.onClick = () => {\\n                this.editor.quillEditor.removeFormat(bounds.index, bounds.length);\\n            };\\n        }\\n\\n        if (this.format.size === \'small\') {\\n            this.sizeList[0].selected = true;\\n            this.selectedSize = this.sizeList[0].label;\\n        } else {\\n            this.sizeList[0].selected = false;\\n        }\\n\\n        if (this.format.size === false) {\\n            this.sizeList[1].selected = true;\\n            this.selectedSize = this.sizeList[1].label;\\n        } else {\\n            this.sizeList[1].selected = false;\\n        }\\n\\n        if (this.format.header === 4) {\\n            this.sizeList[2].selected = true;\\n            this.selectedSize = this.sizeList[2].label;\\n        } else {\\n            this.sizeList[2].selected = false;\\n        }\\n\\n        if (this.format.header === 5) {\\n            this.sizeList[3].selected = true;\\n            this.selectedSize = this.sizeList[3].label;\\n        } else {\\n            this.sizeList[3].selected = false;\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./rich-text-editor-toolbar.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":45,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiFormBaseComponent","implements":["OnInit","AfterViewInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"UiRichTextEditorToolbarComponent-1","templateData":"<div class=\\"toolbar\\">\\n    <div>\\n        <div ngbDropdown class=\\"d-inline-block size-dropdown\\" placement=\\"bottom-start\\" #dropdown=\\"ngbDropdown\\">\\n            <button type=\\"button\\" class=\\"acp-form-control small btn-select size-dropdown\\" id=\\"dropdownBasic1\\" ngbDropdownToggle>\\n                <span> {{ selectedSize }} <i class=\\"bi bi-chevron-expand\\"></i></span>\\n            </button>\\n            <div ngbDropdownMenu aria-labelledby=\\"dropdownBasic1\\">\\n                <button\\n                    ngbDropdownItem\\n                    *ngFor=\\"let size of sizeList\\"\\n                    value=\\"{{ size.value }}\\"\\n                    (click)=\\"this.changeDropdownItem(size.label)\\"\\n                >\\n                    {{ size.label }}\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\"text-editor-toolbar-buttons\\">\\n    <div class=\\"button-group-1\\">\\n        <button\\n            value=\\"bold\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BOLD\' | translate\\"\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngClass]=\\"{ selected: buttons.bold.selected }\\"\\n            (click)=\\"buttons.bold.onClick(\'bold\')\\"\\n        >\\n            <i class=\\"bi bi-type-bold\\"></i>\\n        </button>\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ITALIC\' | translate\\"\\n            [ngClass]=\\"{ selected: buttons.italic.selected }\\"\\n            (click)=\\"buttons.italic.onClick(\'italic\')\\"\\n        >\\n            <i class=\\"bi bi-type-italic\\"></i>\\n        </button>\\n\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.UNDERLINE\' | translate\\"\\n            [ngClass]=\\"{ selected: buttons.underline.selected }\\"\\n            (click)=\\"buttons.underline.onClick(\'underline\')\\"\\n        >\\n            <i class=\\"bi bi-type-underline\\"></i>\\n        </button>\\n\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUBSCRIPT\' | translate\\"\\n            value=\\"sub\\"\\n            [ngClass]=\\"{ selected: buttons.sub.selected }\\"\\n            (click)=\\"buttons.sub.onClick(\'sub\')\\"\\n        >\\n            <i class=\\"bi bi-subscript\\"></i>\\n        </button>\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.SUPERSCRIPT\' | translate\\"\\n            value=\\"super\\"\\n            [ngClass]=\\"{ selected: buttons.super.selected }\\"\\n            (click)=\\"buttons.super.onClick(\'super\')\\"\\n        >\\n            <i class=\\"bi bi-superscript\\"></i>\\n        </button>\\n    </div>\\n\\n    <div class=\\"button-group-2\\">\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.ORDERED_LIST\' | translate\\"\\n            value=\\"ordered\\"\\n            [ngClass]=\\"{ selected: buttons.ordered.selected }\\"\\n            (click)=\\"buttons.ordered.onClick(\'ordered\')\\"\\n        >\\n            <i class=\\"bi bi-list-ol\\"></i>\\n        </button>\\n        <button\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.BULLET_LIST\' | translate\\"\\n            value=\\"bullet\\"\\n            [ngClass]=\\"{ selected: buttons.bullet.selected }\\"\\n            (click)=\\"buttons.bullet.onClick(\'bullet\')\\"\\n        >\\n            <i class=\\"bi bi-list-ul\\"></i>\\n        </button>\\n    \\n    <div [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.LINK\' | translate\\" placement=\\"top\\">\\n        <button\\n            id=\\"popover\\"\\n            class=\\"btn btn-link btn-md toolbarButton\\"\\n            placement=\\"bottom\\"\\n            value=\\"link\\"\\n            [ngClass]=\\"{ selected: buttons.link.selected }\\"\\n            data-toggle=\\"popover\\"\\n            [ngbPopover]=\\"popContent\\"\\n            #popover=\\"ngbPopover\\"\\n            [autoClose]=\\"\'outside\'\\"\\n            popoverClass=\\"popover-class\\"\\n            (click)=\\"populateLinkInput()\\"\\n        >\\n            <i class=\\"bi bi-link-45deg\\"></i>\\n        </button>\\n    </div>\\n    <button\\n        class=\\"btn btn-link btn-md toolbarButton\\"\\n        [ngbTooltip]=\\"\'COMMON.TEXT_EDITOR.CLEAR_FORMATTING\' | translate\\"\\n        value=\\"false\\"\\n        [ngClass]=\\"{ selected: buttons.clearFormatting.selected }\\"\\n        (click)=\\"buttons.clearFormatting.onClick(\'false\')\\"\\n    >\\n        <i class=\\"bi bi-eraser-fill\\"></i>\\n    </button>\\n</div>\\n</div>\\n\\n    <div class=\\"body link-pop\\">\\n        <ng-template #popContent class=\\"popstyle\\">\\n            <form [formGroup]=\\"form\\">\\n                <div class=\\"row popover-row\\">\\n                    <p class=\\"col-auto link-text\\">{{ \'COMMON.ENTER_LINK\' | translate }}</p>\\n                    <div class=\\"col-auto pop-url\\">\\n                        <input class=\\"url form-control\\" id=\\"link\\" formControlName=\\"link\\" form=\\"form\\" value=\\"{{ linkText }}\\" />\\n                    </div>\\n                    <div class=\\"col-auto pop-button\\">\\n                        <button type=\\"button\\" class=\\"btn btn-link btn-sm col-2\\" (click)=\\"submitLink()\\">\\n                            {{ \'COMMON.SAVE\' | translate }}\\n                        </button>\\n                    </div>\\n                </div>\\n            </form>\\n        </ng-template>\\n    </div>\\n</div>\\n"},{"name":"UiSubsidiarySelectorComponent","id":"component-UiSubsidiarySelectorComponent-de0f303bb7b386cba0415e86aadf6bfaa4a495c48270fffb916f13cc8a2f92ee813d7ff6ec5cb95ac8a7ff4517f3ddd9c02c91e7a81ad24bef8f59b69c4138b4","file":"libs/ui/src/lib/modules/layout2/components/subsidiary-selector/subsidiary-selector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-subsidiary-selector","styleUrls":["./subsidiary-selector.component.scss"],"styles":[],"templateUrl":["./subsidiary-selector.component.html"],"viewProviders":[],"inputsClass":[{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":12,"type":"IUiDropdownPlusOption[]","decorators":[]},{"name":"small","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"selectionChanged","defaultValue":"new EventEmitter<IUiDropdownPlusOption>()","deprecated":false,"deprecationMessage":"","line":14,"type":"EventEmitter<IUiDropdownPlusOption>"}],"propertiesClass":[{"name":"companiesDropdownRef","deprecated":false,"deprecationMessage":"","type":"UiDropdownPlusComponent","optional":false,"description":"","line":11,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'companiesDropdownRef\', {static: false}"}],"modifierKind":[123]},{"name":"selectedOption","deprecated":false,"deprecationMessage":"","type":"IUiDropdownPlusOption","optional":false,"description":"","line":18,"modifierKind":[123]},{"name":"subsidiaryDescription","defaultValue":"this._translateService.instant(\'COMMON.SUBSIDIARY_SELECT\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"subsidiaryName","defaultValue":"this._translateService.instant(\'COMMON.SUBSIDIARY_LIST\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123]}],"methodsClass":[{"name":"_selectOption","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onSelectionChange","args":[{"name":"$event","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectOptionById","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectOptionByIndex","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from \'@angular/core\';\\nimport { IUiDropdownPlusOption, UiDropdownPlusComponent } from \'@lib/modules/form-controls/dropdown-plus/dropdown-plus.component\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\n\\n@Component({\\n    selector: \'ui-subsidiary-selector\',\\n    templateUrl: \'./subsidiary-selector.component.html\',\\n    styleUrls: [\'./subsidiary-selector.component.scss\'],\\n})\\nexport class UiSubsidiarySelectorComponent implements OnInit {\\n    @ViewChild(\'companiesDropdownRef\', { static: false }) public companiesDropdownRef: UiDropdownPlusComponent;\\n    @Input() public options: IUiDropdownPlusOption[] = [];\\n    @Input() public small = false;\\n    @Output() public selectionChanged: EventEmitter<IUiDropdownPlusOption> = new EventEmitter<IUiDropdownPlusOption>();\\n\\n    public subsidiaryName = this._translateService.instant(\'COMMON.SUBSIDIARY_LIST\');\\n    public subsidiaryDescription = this._translateService.instant(\'COMMON.SUBSIDIARY_SELECT\');\\n    public selectedOption: IUiDropdownPlusOption;\\n\\n    constructor(private _translateService: TranslateService) {}\\n\\n    public ngOnInit(): void { }\\n\\n    public onSelectionChange($event: { id: string; selectedOptions: IUiDropdownPlusOption[] }) {\\n        if ($event.selectedOptions.length > 0) {\\n            this.selectOptionById($event.selectedOptions[0].id);\\n        }\\n    }\\n\\n    public selectOptionByIndex(index: number) {\\n        this.selectedOption = this.options[index];\\n        this._selectOption();\\n    }\\n\\n    public selectOptionById(id: string) {\\n        this.selectedOption = this.options.find((o) => o.id === id);\\n        this._selectOption();\\n    }\\n\\n    private _selectOption() {\\n        if (this.selectedOption !== undefined) {\\n            const data: { description: string } = this.selectedOption.data as { description: string };\\n            this.selectedOption.value = true;\\n            this.subsidiaryName = this.selectedOption.label;\\n            this.subsidiaryDescription = data.description;\\n\\n            // Emit the selected option\\n            this.selectionChanged.emit(this.selectedOption);\\n        } else {\\n            console.error(\'Invalid option selected\');\\n        }\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.subsidary-selector {\\n    \\n    display: flex;\\n    color: $white;\\n    background-color: $secondary-600;\\n    outline: 1px solid white;\\n    border-radius: 0.25rem;;\\n    \\n    &:hover {\\n        background-color: $secondary-700;\\n        outline: 2px solid $primary-200;        \\n        outline-offset: -1px;  \\n    }\\n}\\n\\na {\\n    text-decoration: none; \\n    &:link,:visited,:hover,:active\\n    { \\n        text-decoration: none; \\n    }     \\n}\\n\\n\\n.cursor-pointer { cursor: pointer; }\\n\\n.icon-text {\\n    height: 34px;\\n    text-transform: capitalize;\\n}\\n\\n.caret {\\n    transition: 300ms ease-in-out;\\n    transform: rotate(0deg);\\n}\\n\\n.caret.rotated {\\n    transform: rotate(180deg); \\n}","styleUrl":"./subsidiary-selector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div id=\\"subsidary-selector-trigger\\" class=\\"subsidary-selector cursor-pointer mt-3 mb-3\\" [ngClass]=\\"{small: small === true}\\" (click)=\\"companiesDropdownRef.triggerClick()\\">\\n\\n    \x3c!-- Button --\x3e\\n    <div *ngIf=\\"small === false\\" class=\\"d-flex justify-content-between w-100 ms-2 me-2\\">\\n        <div class=\\"mr-auto mt-2 mb-2 ms-2\\">\\n            <div class=\\"strong\\">{{subsidiaryName}}</div>\\n            <div class=\\"small\\">{{subsidiaryDescription}}</div>\\n        </div>\\n        <div class=\\"h-100 d-flex align-items-center\\">\\n            <i class=\\"bi bi-chevron-down caret me-1\\" [ngClass]=\\"{ rotated: companiesDropdownRef.menuOpen }\\"></i>\\n        </div>\\n    </div>\\n\\n    \x3c!-- Icon --\x3e\\n    <div class=\\"w-100\\" *ngIf=\\"small === true\\">\\n        <a [ngbTooltip]=\\"subsidiaryName\\" class=\\"icon-text text-white d-flex justify-content-center align-items-center w-100\\">\\n            \x3c!-- Display first letter --\x3e\\n            {{subsidiaryName[0]}}\\n        </a>\\n    </div>\\n\\n    \x3c!-- Dropdown Select Panel --\x3e\\n    <ui-dropdown-plus\\n        [externalTriggerEleId]=\\"\'subsidary-selector-trigger\'\\"\\n        #companiesDropdownRef\\n        [id]=\\"\'companiesDropdown\'\\"\\n        [setOptions]=\\"options\\"\\n        [showSearch]=\\"true\\"\\n        [multiSelect]=\\"false\\"\\n        [singleSelectAutoClose]=\\"true\\"\\n        [view]=\\"\'none\'\\"\\n        (selectionChange)=\\"onSelectionChange($event)\\"\\n    >\\n    </ui-dropdown-plus>\\n</div>\\n"},{"name":"UiSupportFormComponent","id":"component-UiSupportFormComponent-bc4e372a8d727b529b624d88b81fc70e42a56cc8abd91581e0c2a08ddcff86e13f4224febb607992d301fdf2d59604bcb43ba567d2180bfe647f3c0d025077ac","file":"libs/ui/src/lib/modules/layout/components/support-form/support-form.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-support-form","styleUrls":["./support-form.component.scss"],"styles":[],"templateUrl":["./support-form.component.html"],"viewProviders":[],"inputsClass":[{"name":"editMode","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormBaseComponent"}}],"outputsClass":[{"name":"formClosed","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":38,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formStatusChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":37,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}},{"name":"formSubmitted","defaultValue":"new EventEmitter<FormData>()","deprecated":false,"deprecationMessage":"","line":39,"type":"EventEmitter","inheritance":{"file":"UiFormBaseComponent"}}],"propertiesClass":[{"name":"_editMode","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_initialValues","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"_ngUnsubscribe","defaultValue":"new Subject()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[122],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"actionBtnsRef","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"","line":35,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'actionBtnsRef\'"}],"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"formControls","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":58,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"modeChanged","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"payload","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":55,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65,"modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"cancelForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"clearForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"closeForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"createForm","args":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControls","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"disableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"editForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"enableAllInputs","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCancelBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onClearBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onCloseBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onEditBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onFormOptionsChanged","args":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"onSaveBtnClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"setValues","args":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"FormValues","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"submitForm","args":[],"optional":false,"returnType":"FormData","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}},{"name":"viewForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Validators } from \'@angular/forms\';\\nimport { UiFormBaseComponent } from \'@lib/modules/form-controls/form-base/form-base.component\';\\n\\n@Component({\\n    selector: \'ui-support-form\',\\n    templateUrl: \'./support-form.component.html\',\\n    styleUrls: [\'./support-form.component.scss\'],\\n})\\nexport class UiSupportFormComponent extends UiFormBaseComponent implements OnInit {\\n    public ngOnInit(): void {\\n        this.formControls = {\\n            name: {\\n                value: \'\',\\n                validators: [Validators.required, Validators.minLength(2), Validators.maxLength(80)],\\n            },\\n            email: {\\n                value: \'\',\\n                validators: [Validators.required, Validators.email, Validators.maxLength(80)],\\n            },\\n            companyName: {\\n                value: \'\',\\n                validators: [Validators.required, Validators.maxLength(55)],\\n            },\\n            subject: {\\n                value: \'\',\\n                validators: [Validators.required, , Validators.maxLength(80)],\\n            },\\n            description: { value: \'\', validators: [Validators.required] },\\n            type: { value: \'ESG Support\', validators: [] },\\n            recordType: { value: \'0128X000001Im9Y\', validators: [] }, // Supplier Success\\n        };\\n\\n        this.createForm(this.formControls);\\n        this.editMode = true;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n","styleUrl":"./support-form.component.scss"}],"stylesData":"","extends":"UiFormBaseComponent","implements":["OnInit"],"templateData":"<form [formGroup]=\\"form\\" autocomplete=\\"off\\">\\n    <div class=\\"row form-group\\">\\n        \x3c!-- Text input START --\x3e\\n        <div class=\\"col-12\\">\\n            <ui-text-input\\n                [id]=\\"\'fullName\'\\"\\n                [label]=\\"\'COMMON.FULL_NAME\' | translate\\"\\n                [formControlName]=\\"\'name\'\\"\\n                [form]=\\"form\\"\\n                [showHelpText]=\\"showHelpText\\"\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\n                [showInfoIcon]=\\"false\\"\\n                [infoText]=\\"\'Tooltip for extra information when required.\'\\"\\n            >\\n            </ui-text-input>\\n        </div>\\n\\n        <div class=\\"col-12\\">\\n            <ui-text-input\\n                [id]=\\"\'address\'\\"\\n                [label]=\\"\'COMMON.EMAIL_ADDRESS\' | translate\\"\\n                [formControlName]=\\"\'email\'\\"\\n                [form]=\\"form\\"\\n                [showHelpText]=\\"showHelpText\\"\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\n                [showInfoIcon]=\\"false\\"\\n                [infoText]=\\"\'Tooltip for extra information when required.\'\\"\\n            >\\n            </ui-text-input>\\n        </div>\\n\\n        <div class=\\"col-12\\">\\n            <ui-text-input\\n                [id]=\\"\'companyName\'\\"\\n                [label]=\\"\'COMMON.COMPANY_NAME\' | translate\\"\\n                [formControlName]=\\"\'companyName\'\\"\\n                [form]=\\"form\\"\\n                [showHelpText]=\\"showHelpText\\"\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\n                [showInfoIcon]=\\"false\\"\\n                [infoText]=\\"\'Tooltip for extra information when required.\'\\"\\n            >\\n            </ui-text-input>\\n        </div>\\n\\n        <div class=\\"col-12\\">\\n            <ui-text-input\\n                [id]=\\"\'subject\'\\"\\n                [label]=\\"\'COMMON.SUBJECT\' | translate\\"\\n                [formControlName]=\\"\'subject\'\\"\\n                [form]=\\"form\\"\\n                [placeholder]=\\"\'COMMON.SUBJECT_PLACEHOLDER\' | translate\\"\\n                [showHelpText]=\\"showHelpText\\"\\n                [showSuccessValidation]=\\"showSuccessValidation\\"\\n                [showInfoIcon]=\\"false\\"\\n                [infoText]=\\"false\\"\\n            >\\n            </ui-text-input>\\n        </div>\\n        \x3c!-- Text input END --\x3e\\n        \x3c!-- Text Area 1 START --\x3e\\n        <div class=\\"col-12\\">\\n            <ui-text-area\\n                [id]=\\"\'description\'\\"\\n                [formControlName]=\\"\'description\'\\"\\n                [label]=\\"\'COMMON.DETAILS\' | translate\\"\\n                [placeholder]=\\"\'COMMON.DETAILS_PLACEHOLDER\' | translate\\"\\n                [form]=\\"form\\"\\n                [showHelpText]=\\"false\\"\\n                [showInfoIcon]=\\"false\\"\\n                [rows]=\\"5\\"\\n            >\\n            </ui-text-area>\\n        </div>\\n        \x3c!--  Text Area 1 END --\x3e\\n    </div>\\n</form>\\n\\n\\n"},{"name":"UiSupportModalComponent","id":"component-UiSupportModalComponent-315acf7ae2a6942e20f2713b57757098bb14e62810792afb174bcd78784d44129b09b5073cc4dbde15fc184dea5ff41278fe005b47fff3e79bd85a2c8650de3e","file":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-support-modal","styleUrls":["./support-modal.component.scss"],"styles":[],"templateUrl":["./support-modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"data","defaultValue":"null","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nData to be passed to the modal\\n","description":"<p>Data to be passed to the modal</p>\\n","line":35,"type":"any","decorators":[],"inheritance":{"file":"UiModalBaseComponent"}}],"outputsClass":[],"propertiesClass":[{"name":"activeModal","deprecated":false,"deprecationMessage":"","type":"NgbActiveModal","optional":false,"description":"","line":25,"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"formState","defaultValue":"UiFormState.notSubmitted","deprecated":false,"deprecationMessage":"","type":"UiFormState","optional":false,"description":"","line":22,"modifierKind":[123]},{"name":"FormState","defaultValue":"UiFormState","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23,"modifierKind":[123]},{"name":"saveBtnDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":20,"modifierKind":[123]},{"name":"supportForm","deprecated":false,"deprecationMessage":"","type":"UiSupportFormComponent","optional":false,"description":"","line":19,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'supportForm\'"}],"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"<p>Reference to the modal body</p>\\n","line":30,"rawdescription":"\\n\\nReference to the modal body\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalBody\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"noBorder","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Flag to show/hide the border in the modal</p>\\n","line":40,"rawdescription":"\\n\\nFlag to show/hide the border in the modal\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onformSubmitted","args":[{"name":"data","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dismiss","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDismiss the modal\\n\\n","description":"<p>Dismiss the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1749,"end":1753,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1743,"end":1748,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"onResize","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","decorators":[{"name":"HostListener","stringifiedArguments":"\'window:resize\'"}],"modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"submit","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSubmit the modal\\n\\n","description":"<p>Submit the modal</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1939,"end":1943,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"data"},"type":"any","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1933,"end":1938,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<ul>\\n<li>Data to be passed to the parent component</li>\\n</ul>\\n"}],"inheritance":{"file":"UiModalBaseComponent"}},{"name":"updateBorder","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate the border of the modal\\n","description":"<p>Update the border of the modal</p>\\n","modifierKind":[123],"inheritance":{"file":"UiModalBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"window:resize","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn window resize event\\n","description":"<p>On window resize event</p>\\n","line":48,"inheritance":{"file":"UiModalBaseComponent"}}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { AfterViewInit, Component, OnInit, ViewChild } from \'@angular/core\';\\nimport { NgbActiveModal } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiModalBaseComponent } from \'../../../modal/components/modal-base/modal-base.component\';\\nimport { HttpClient, HttpContext, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { UiSupportFormComponent } from \'../support-form/support-form.component\';\\nimport { UiLayoutService } from \'@lib/services/layout\';\\n\\nexport enum UiFormState{\\n    notSubmitted = 0,\\n    waiting = 1,\\n    submitted = 2\\n}\\n@Component({\\n    selector: \'ui-support-modal\',\\n    templateUrl: \'./support-modal.component.html\',\\n    styleUrls: [\'./support-modal.component.scss\'],\\n})\\nexport class UiSupportModalComponent extends UiModalBaseComponent implements AfterViewInit {\\n    @ViewChild(\'supportForm\') public supportForm: UiSupportFormComponent;\\n    public saveBtnDisabled = true;\\n\\n    public formState: UiFormState = UiFormState.notSubmitted;\\n    public FormState = UiFormState;\\n\\n    public constructor(private _layoutService: UiLayoutService, public activeModal: NgbActiveModal) {\\n        super(activeModal);\\n    }\\n\\n    public ngAfterViewInit(): void {\\n        super.ngAfterViewInit();\\n\\n        this.supportForm.form.valueChanges.subscribe((d) => {\\n            this.saveBtnDisabled = !this.supportForm.form.valid;\\n        });\\n    }\\n\\n    public onformSubmitted(data) {\\n\\n        this._layoutService.salesforceWebToCase(data);\\n        this.formState = UiFormState.waiting;\\n\\n        setTimeout(() => {\\n            this.updateBorder();\\n        });\\n\\n        // Simulate loading time\\n        setTimeout(() => {\\n            this.formState = UiFormState.submitted;\\n        }, 2000);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../assets/styles/custom-variables.scss\';\\n\\n.action-buttons {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: flex-end;\\n    align-items: center;\\n    gap: 10px;\\n}\\n\\n.spinner-page {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 20px;\\n    gap: 8px;\\n    width: 450px;\\n    height: 300px;\\n}\\n\\n.submitted-page {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 20px;\\n    gap: 16px;\\n\\n    width: 450px;\\n    height: 300px;\\n}\\n\\n.help-text {\\n    font-style: normal;\\n    font-weight: 400;\\n    font-size: 16px;\\n    line-height: 150%;\\n    text-align: center;\\n    color: $gray-800;\\n}","styleUrl":"./support-modal.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":""},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":""}],"line":23,"modifierKind":[123],"jsdoctags":[{"name":"_layoutService","type":"UiLayoutService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"activeModal","type":"NgbActiveModal","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"UiModalBaseComponent","implements":["AfterViewInit"],"templateData":"<div class=\\"modal-header\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\n        <div>\\n            <h3 class=\\"modal-title\\">{{ \'COMMON.GET_SUPPORT\' | translate }}</h3>\\n            <div>{{ \'COMMON.SUBMIT_REQUEST\' | translate }}</div>\\n        </div>\\n    </ng-container>\\n    <button type=\\"button\\" class=\\"btn-close\\" aria-label=\\"Close\\" (click)=\\"dismiss()\\"></button>\\n</div>\\n<div #modalBody class=\\"modal-body\\">\\n    <ng-container *ngIf=\\"formState === FormState.notSubmitted\\">\\n        \x3c!--Form START--\x3e\\n        <ui-support-form #supportForm (formSubmitted)=\\"onformSubmitted($event)\\"></ui-support-form>\\n        \x3c!--Form END--\x3e\\n    </ng-container>\\n\\n    \x3c!--SPINNER PAGE START--\x3e\\n    <div class=\\"spinner-page\\" *ngIf=\\"formState === FormState.waiting\\">\\n        <div class=\\"spinner-border spinner-border-lg\\" role=\\"status\\">\\n            <span class=\\"visually-hidden\\">Loading...</span>\\n        </div>\\n        <div>{{ \'COMMON.SUBMITTING\' | translate }}</div>\\n    </div>\\n    \x3c!--SPINNER PAGE END--\x3e\\n\\n    \x3c!--Submitted page START--\x3e\\n    <div class=\\"submitted-page\\" *ngIf=\\"formState === FormState.submitted\\">\\n        <i class=\\"bi bi-check-circle-fill bi-3x text-success\\"></i>\\n        <h3>{{ \'COMMON.SUBMITTED_REQUEST\' | translate }}</h3>\\n        <div class=\\"help-text\\" innerHTML=\\"{{ \'COMMON.EXPERT_CONTACT_SHORTLY\' | translate }}\\"></div>\\n    </div>\\n    \x3c!--Submitted page END--\x3e\\n</div>\\n\\n\x3c!-- Footer START --\x3e\\n<div class=\\"modal-footer\\" [ngClass]=\\"{\'border-0\': noBorder === true}\\">\\n\\n    <div class=\\"action-buttons w-100\\">\\n        \x3c!--Action buttons footer START--\x3e\\n        <button id=\\"btnDismiss\\" ngbAutofocus type=\\"button\\" class=\\"btn btn-outline-primarybtn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"dismiss()\\">\\n            {{ \'COMMON.CLOSE\' | translate }}\\n        </button>\\n        <button id=\\"btnSubmit\\" type=\\"button\\" class=\\"btn btn-primary btn-md\\" *ngIf=\\"formState === FormState.notSubmitted\\" (click)=\\"supportForm.submitForm()\\" [disabled]=\\"saveBtnDisabled\\">\\n            {{ \'COMMON.SUBMIT\' | translate }}\\n        </button>\\n        <button  type=\\"button\\" class=\\"btn btn-primary w-100\\" *ngIf=\\"formState === FormState.submitted\\" (click)=\\"dismiss()\\">{{ \'COMMON.OK_THANKS\' | translate }}</button>\\n        \x3c!--Action buttons footer END--\x3e\\n    </div>\\n</div>\\n\\n\x3c!-- Footer END --\x3e\\n"},{"name":"UiTabNavComponent","id":"component-UiTabNavComponent-175c160df21fbf977cf63b11fdec9394eab3b18bfe3d66b61b26f48d887d62b2d862fc5861f3768fde4ea00a36909660d5efcf8f2f7d194f27e97b4caabb24e4","file":"libs/ui/src/lib/modules/layout/components/tab-nav/tab-nav.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tab-nav","styleUrls":["./tab-nav.component.scss"],"styles":[],"templateUrl":["./tab-nav.component.html"],"viewProviders":[],"inputsClass":[{"name":"tabItems","deprecated":false,"deprecationMessage":"","line":10,"type":"Array<IUiSubHeaderTab>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"headerService","deprecated":false,"deprecationMessage":"","type":"UiHeaderService","optional":false,"description":"","line":14,"modifierKind":[123]},{"name":"tabClass","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"tabItemClick","args":[{"name":"item","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"IUiSubHeaderTab","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiHeaderService, IUiSubHeaderTab } from \'@lib/services/layout/header/header.service\';\\n\\n@Component({\\n    selector: \'ui-tab-nav\',\\n    templateUrl: \'./tab-nav.component.html\',\\n    styleUrls: [\'./tab-nav.component.scss\'],\\n})\\nexport class UiTabNavComponent implements OnInit {\\n    @Input() public tabItems: Array<IUiSubHeaderTab>;\\n\\n    public tabClass = \'\';\\n\\n    constructor(public headerService: UiHeaderService) {}\\n\\n    public ngOnInit(): void {\\n        this.headerService.subHeaderSelectedTabChange.subscribe((tab: IUiSubHeaderTab) => {\\n            this.tabClass = tab.tabClassColor;\\n        });\\n    }\\n\\n    public tabItemClick(item: IUiSubHeaderTab) {\\n        this.tabClass = item.tabClassColor;\\n        item.onClickEvent(item);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".nav-tabs {\\n    border-bottom: none;\\n    padding-top: 10px;\\n    margin-bottom: -4px;\\n}\\n","styleUrl":"./tab-nav.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<ul class=\\"nav nav-tabs\\">\\n    \x3c!-- ToDo --\x3e\\n    \x3c!-- tabClass --\x3e\\n    \x3c!-- Should tabClass be applied and how it should look --\x3e\\n    <li class=\\"nav-item\\" *ngFor=\\"let tab of tabItems\\">\\n        <a class=\\"nav-link\\" [id]=\\"\'tab_\' + tab.id\\"\\n            (click)=\\"this.headerService.selectedTabId = tab.id; tabItemClick(tab)\\"\\n            [class.active]=\\"this.headerService.selectedTabId === tab.id\\" href=\\"javascript:;\\">\\n            <div *ngIf=\\"tab.label !== undefined\\">\\n                {{ tab.label | translate }}\\n            </div>\\n            <div *ngIf=\\"tab.label2 !== undefined\\">\\n                {{ tab.label2.txt | translate: tab.label2.params }}\\n            </div>\\n        </a>\\n    </li>\\n</ul>\\n"},{"name":"UiTabNavContainerComponent","id":"component-UiTabNavContainerComponent-3fc0a72808cb0d7406322180341480e1396a32edbb7ea67287957a39515b3ddbec17a029633e18beb6690e26cb8d443cf1d523fe6503b6eed4ae914ef5de3d8d","file":"libs/ui/src/lib/modules/layout/components/tab-nav-container/tab-nav-container.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tab-nav-container","styleUrls":[],"styles":[],"templateUrl":["./tab-nav-container.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"headerService","deprecated":false,"deprecationMessage":"","type":"UiHeaderService","optional":false,"description":"","line":10,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":11,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { UiHeaderService } from \'@lib/services/layout/header/header.service\';\\n\\n@Component({\\n    selector: \'ui-tab-nav-container\',\\n    templateUrl: \'./tab-nav-container.component.html\',\\n})\\nexport class UiTabNavContainerComponent implements OnInit {\\n\\n    constructor(public headerService: UiHeaderService) { }\\n    public ngOnInit(): void {}\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div *ngIf=\\"headerService.subHeaderTabs !== undefined && headerService.subHeaderTabs.length !== 0\\" class=\\"p-3\\">\\n    <div *ngFor=\\"let tab of headerService.subHeaderTabs\\">\\n        <div>\\n            <div *ngIf=\\"headerService.selectedTabId === tab.id || tab.cacheTabContent !== false\\" [ngClass]=\\"{ \'d-none\': this.headerService.selectedTabId !== tab.id }\\">\\n                <ng-container *ngTemplateOutlet=\\"tab.contentTpl\\"></ng-container>\\n            </div>           \\n        </div>\\n    </div>\\n</div>"},{"name":"UiTagsInputComponent","id":"component-UiTagsInputComponent-96732107ee415ff157c50bac655b4313d059127a646acdd4ee728d07775a2399f9b904d75322d5f6785c5268980c9fc80576a8ee3f2239fd40d7d9fba4254efa","file":"libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: UiTagsInputComponent,\\n}","type":"component"},{"name":"{\\n    provide: NG_VALIDATORS, multi: true, useExisting: UiTagsInputComponent,\\n}","type":"component"}],"selector":"ui-tags-input","styleUrls":["./tags-input.component.scss"],"styles":[],"templateUrl":["./tags-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"api","defaultValue":"{\\n        keyField: \'id\',\\n        labelField: \'text\',\\n    }","deprecated":false,"deprecationMessage":"","line":42,"type":"IUiTagsInputObject","decorators":[]},{"name":"emptyStatePlaceholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":39,"type":"string","decorators":[]},{"name":"enableFreeTextAdding","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":40,"type":"boolean","decorators":[]},{"name":"enableMultipleSelect","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":41,"type":"boolean","decorators":[]},{"name":"maxLength","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":31,"type":"any","decorators":[]},{"name":"minLength","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":32,"type":"any","decorators":[]},{"name":"optionItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":33,"type":"{}","decorators":[]},{"name":"optionItemsLimit","defaultValue":"10","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse 0 or null for no option items limit.\\n","description":"<p>Use 0 or null for no option items limit.</p>\\n","line":37,"type":"number","decorators":[]},{"name":"searchPlaceholder","defaultValue":"\'Search...\'","deprecated":false,"deprecationMessage":"","line":38,"type":"string","decorators":[]},{"name":"typeaheadContainer","deprecated":false,"deprecationMessage":"","line":47,"type":"string","decorators":[]},{"name":"validateItemCallback","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":48,"type":"function","decorators":[]}],"outputsClass":[{"name":"itemsChanged","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":49,"type":"EventEmitter"}],"propertiesClass":[{"name":"_customErrorKey","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":66,"modifierKind":[121]},{"name":"_defaultColorClass","defaultValue":"\'bg-primary\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":65,"modifierKind":[121,144]},{"name":"click$","defaultValue":"new Subject<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63,"modifierKind":[123]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":52,"modifierKind":[123]},{"name":"focus$","defaultValue":"new Subject<string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[123]},{"name":"formField","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":59,"modifierKind":[123]},{"name":"instance","deprecated":false,"deprecationMessage":"","type":"NgbTypeahead","optional":false,"description":"","line":51,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'instance\', {static: true}"}],"modifierKind":[123]},{"name":"isFocus","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71,"modifierKind":[123]},{"name":"onClick","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":72,"modifierKind":[123]},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70,"modifierKind":[123]},{"name":"optionItemsBackup","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"selectedItems","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"selectedItemsBackup","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"touched","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"typeaheadFormatter","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":119,"modifierKind":[123]},{"name":"typeaheadModel","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"typeaheadSearch","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"OperatorFunction<string | string[]>","optional":false,"description":"","line":80,"modifierKind":[123]}],"methodsClass":[{"name":"getNextAvailableItemId","args":[{"name":"optionItems","type":"any[]","deprecated":false,"deprecationMessage":""},{"name":"selectedItems","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":308,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCalculates next available id for a new item\\nWhen optionItems are provided - it returns their length (preexisting behavior)\\nWhen optionItems are not provided - it returns max id from the selectedItems + 1\\nThis is needed for the case when optionItems are not provided and we need to add new item\\n(enableFreeTextAdding = true and optionItems = [])\\n\\n","description":"<p>Calculates next available id for a new item\\nWhen optionItems are provided - it returns their length (preexisting behavior)\\nWhen optionItems are not provided - it returns max id from the selectedItems + 1\\nThis is needed for the case when optionItems are not provided and we need to add new item\\n(enableFreeTextAdding = true and optionItems = [])</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":9650,"end":9661,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"optionItems"},"type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":9644,"end":9649,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>all available predefined items</p>\\n"},{"name":{"pos":9707,"end":9720,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"selectedItems"},"type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":9701,"end":9706,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>only selected items</p>\\n"},{"tagName":{"pos":9749,"end":9756,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>next available id</p>\\n"}]},{"name":"hasCustomValidationError","args":[{"name":"inputTagText","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":279,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"inputTagText","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onModelChange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":186,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onTypeaheadEnterPress","args":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":236,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTypeaheadSelectItem","args":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":214,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"$event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnChange","args":[{"name":"onChange","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"onChange","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"onTouched","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"onTouched","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeItem","args":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectItem","args":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":192,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"disabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"disabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"typeaheadOnBlur","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":274,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"validate","args":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidationErrors | null","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"control","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit, Output, ViewChild, EventEmitter } from \'@angular/core\';\\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from \'@angular/forms\';\\n// RxJS\\nimport { merge, Observable, OperatorFunction, Subject } from \'rxjs\';\\nimport { debounceTime, distinctUntilChanged, filter, map, tap } from \'rxjs/operators\';\\n// Ng Bootstrap\\nimport { NgbTypeahead } from \'@ng-bootstrap/ng-bootstrap\';\\n// Interfaces\\nimport { IUiTagsInputObject } from \'./interfaces\';\\n\\n@Component({\\n    selector: \'ui-tags-input\',\\n    templateUrl: \'./tags-input.component.html\',\\n    styleUrls: [\'./tags-input.component.scss\'],\\n    // encapsulation: ViewEncapsulation.None, // Needed for the custom tooltip\\n    providers: [\\n        {\\n            provide: NG_VALUE_ACCESSOR,\\n            multi: true,\\n            useExisting: UiTagsInputComponent,\\n        },\\n        {\\n            provide: NG_VALIDATORS,\\n            multi: true,\\n            useExisting: UiTagsInputComponent,\\n        },\\n    ],\\n})\\nexport class UiTagsInputComponent implements OnInit, ControlValueAccessor, Validator {\\n    @Input() public maxLength = null;\\n    @Input() public minLength = null;\\n    @Input() public optionItems = [];\\n    /**\\n     * Use 0 or null for no option items limit.\\n     */\\n    @Input() public optionItemsLimit = 10;\\n    @Input() public searchPlaceholder = \'Search...\';\\n    @Input() public emptyStatePlaceholder = \'\';\\n    @Input() public enableFreeTextAdding = true;\\n    @Input() public enableMultipleSelect = false;\\n    @Input() public api?: IUiTagsInputObject = {\\n        keyField: \'id\',\\n        labelField: \'text\',\\n    };\\n    // Hint: use \'body\' value, when UiTagsInputComponent is used in modal dialog\\n    @Input() public typeaheadContainer: string;\\n    @Input() public validateItemCallback: (text: string) => ValidationErrors | null = null;\\n    @Output() public itemsChanged = new EventEmitter();\\n\\n    @ViewChild(\'instance\', { static: true }) public instance: NgbTypeahead;\\n    public disabled = false;\\n    public isFocus = false;\\n    public touched = false;\\n    public selectedItems = [];\\n    public selectedItemsBackup = [];\\n    public optionItemsBackup = [];\\n\\n    public formField: AbstractControl;\\n\\n    public typeaheadModel = {};\\n    public focus$ = new Subject<string>();\\n    public click$ = new Subject<string>();\\n\\n    private readonly _defaultColorClass = \'bg-primary\';\\n    private _customErrorKey = \'\';\\n\\n    constructor() {}\\n\\n    public onTouched = () => {};\\n    public onChange = (quantity) => {};\\n    public onClick = ($event: any) => {\\n        if (this.enableMultipleSelect) {\\n            this.click$.next($event.target.value);\\n        }\\n    };\\n\\n    public ngOnInit() {}\\n\\n    public typeaheadSearch: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) => {\\n        const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\\n        const clicksWithClosedPopup$ = this.enableMultipleSelect\\n            ? this.click$\\n            : this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\\n        const inputFocus$ = this.focus$.pipe(tap(() => {\\n            this.isFocus = true;\\n            this.markAsTouched();\\n        }));\\n\\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\\n            tap((term) => {\\n                if (term === \'\') {\\n                    this.hasCustomValidationError(term);\\n                }\\n            }),\\n            map((term) => {\\n                let options = this.optionItems\\n                    .filter((v) => {\\n                        // ToDo\\n                        // Add ability to have more filtering options\\n                        return (\\n                            !this.disabled &&\\n                            v &&\\n                            v[this.api.labelField] &&\\n                            (!term || v[this.api.labelField].toLowerCase().indexOf(term.toLowerCase()) > -1) &&\\n                            !this.selectedItems.some((s) => s[this.api.keyField] === v[this.api.keyField])\\n                        );\\n                    });\\n\\n                if (this.optionItemsLimit) {\\n                    options = options.slice(0, this.optionItemsLimit);\\n                }\\n\\n                return options;\\n            })\\n        );\\n    };\\n\\n    public typeaheadFormatter = (result: any) => {\\n        return result[this.api.labelField];\\n    };\\n\\n    public writeValue(value: []) {\\n        this.selectedItems = [];\\n        if (value !== null) {\\n            value.forEach((item) => {\\n                this.selectItem(item);\\n            });\\n        }\\n    }\\n\\n    public registerOnChange(onChange: any) {\\n        this.onChange = onChange;\\n    }\\n\\n    public registerOnTouched(onTouched: any) {\\n        this.onTouched = onTouched;\\n    }\\n\\n    public markAsTouched() {\\n        if (!this.touched) {\\n            this.onTouched();\\n            this.touched = true;\\n        }\\n    }\\n\\n    public setDisabledState(disabled: boolean) {\\n        this.disabled = disabled;\\n\\n        if (!disabled) {\\n            this.optionItemsBackup = JSON.parse(JSON.stringify(this.optionItems));\\n        }\\n    }\\n\\n    public validate(control: AbstractControl): ValidationErrors | null {\\n        const min = this.minLength;\\n        const max = this.maxLength;\\n\\n        this.formField = control;\\n\\n        if (min !== null && this.selectedItems.length < min) {\\n            return {\\n                minLength: {\\n                    min,\\n                },\\n            };\\n        }\\n\\n        if (max !== null && this.selectedItems.length > max) {\\n            return {\\n                maxLength: {\\n                    max,\\n                },\\n            };\\n        }\\n\\n        if (!this.enableFreeTextAdding) {\\n            if (typeof this.typeaheadModel === \'string\' && this.typeaheadModel.length > 0) {\\n                return {\\n                    valid: false\\n                };\\n            }\\n        }\\n    }\\n\\n    public onModelChange() {\\n        if (!this.enableFreeTextAdding) {\\n            this.formField.updateValueAndValidity();\\n        }\\n    }\\n\\n    public selectItem(item: any) {\\n        if (!item) {\\n            return;\\n        }\\n\\n        item.disabled = item.disabled || false;\\n        item.colorClass = item.colorClass || this._defaultColorClass;\\n        this.selectedItems.push(item);\\n    }\\n\\n    public removeItem(item: any) {\\n        if (this.disabled || item.disabled) {\\n            return;\\n        }\\n        item.disabled = false;\\n        this.selectedItems = this.selectedItems.filter((selectedItem) => selectedItem !== item);\\n\\n        this.markAsTouched();\\n        this.itemsChanged.emit(this.selectedItems);\\n        this.onChange(this.selectedItems);\\n    }\\n\\n    public onTypeaheadSelectItem($event: any): void {\\n        if (this.disabled || !$event.item) {\\n            return;\\n        }\\n\\n        $event.preventDefault();\\n        const key = this.api.keyField;\\n        const label = this.api.labelField;\\n        this.selectedItems.push({\\n            [key]: $event.item[key],\\n            [label]: $event.item[label],\\n            disabled: typeof $event.item.disabled === \'boolean\' ? $event.item.disabled : false,\\n            colorClass: $event.item.colorClass || this._defaultColorClass,\\n        });\\n        this.itemsChanged.emit(this.selectedItems);\\n        this.onChange(this.selectedItems);\\n        this.markAsTouched();\\n\\n        this.typeaheadModel = {};\\n        this.onModelChange();\\n    }\\n\\n    public onTypeaheadEnterPress($event: any): void {\\n        if (this.disabled || !this.enableFreeTextAdding) {\\n            return;\\n        }\\n\\n        const text: string = $event.target.value;\\n\\n        if (this.hasCustomValidationError(text)) {\\n            return;\\n        }\\n\\n        if (!text || !text.trim()) {\\n            return;\\n        }\\n\\n        if (this.selectedItems.some((s) => text.toLowerCase() === s[this.api.labelField].toLowerCase())) {\\n            return;\\n        }\\n\\n        // ToDo\\n        // What id is needed\\n        const newId = this.getNextAvailableItemId(this.optionItems, this.selectedItems);\\n        const key = this.api.keyField;\\n        const label = this.api.labelField;\\n        this.selectedItems.push({\\n            [key]: newId,\\n            [label]: text,\\n            disabled: false,\\n            colorClass: this._defaultColorClass,\\n        });\\n        this.itemsChanged.emit(this.selectedItems);\\n        this.onChange(this.selectedItems);\\n        this.markAsTouched();\\n\\n        this.typeaheadModel = {};\\n        this.onModelChange();\\n    }\\n\\n    public typeaheadOnBlur() {\\n        this.isFocus = false;\\n    }\\n\\n    // Applies custom validation and sets error if such exist\\n    private hasCustomValidationError(inputTagText: string): boolean {\\n        if (typeof this.validateItemCallback === \'function\') {\\n            const customError = this.validateItemCallback(inputTagText);\\n\\n            if (customError) {\\n                this._customErrorKey = Object.keys(customError)[0];\\n                this.formField.setErrors(customError);\\n\\n                return true;\\n            } else {\\n                this.formField.setErrors({ [this._customErrorKey]: null });\\n                this.formField.updateValueAndValidity();\\n            }\\n        }\\n\\n        return false;\\n    }\\n\\n    /**\\n     * Calculates next available id for a new item\\n     * When optionItems are provided - it returns their length (preexisting behavior)\\n     * When optionItems are not provided - it returns max id from the selectedItems + 1\\n     * This is needed for the case when optionItems are not provided and we need to add new item\\n     * (enableFreeTextAdding = true and optionItems = [])\\n     *\\n     * @param optionItems all available predefined items\\n     * @param selectedItems only selected items\\n     * @returns next available id\\n     */\\n    private getNextAvailableItemId(optionItems: any[], selectedItems: any[]): number {\\n        return optionItems.length || (Math.max(...selectedItems.map((item) => item.id)) + 1);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../assets/styles/custom-variables.scss\';\\n\\n.grid-item {\\n    flex-grow: 1;\\n    min-width: 10%;\\n}\\n\\n// Removing the arrow\\n.dropdown-toggle::after {\\n    display: none;\\n}\\n\\n.dropdown-menu {\\n    width: 100%;\\n    padding-left: 0.025em;\\n}\\n\\n.badge {\\n    align-items: center;\\n    box-sizing: border-box;\\n    display: flex;\\n    flex-direction: row;\\n    height: 24px;\\n    place-content: center;\\n}\\n\\n.tag-container {\\n    align-items: center;\\n    background-color: $white;\\n    border-radius: 5px;\\n    border: 1px solid $gray-400;\\n    box-sizing: border-box;\\n    display: flex;\\n    flex-flow: row wrap;\\n    gap: 0.25rem;\\n    place-content: center flex-start;\\n\\n    &.disabled {\\n        // background-color: $warning;\\n        // .form-control:disabled, .form-control[readonly] {\\n        background-color: $gray-200;\\n        opacity: 1;\\n        // }\\n    }\\n\\n    &:invalid,\\n    &.is-invalid {\\n        border-color: $danger;\\n        padding-right: calc(1.5em + 0.75rem);\\n        background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23ff4d4f\' viewBox=\'0 0 12 12\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23ff4d4f\' stroke=\'none\'/%3e%3c/svg%3e\\");\\n        background-repeat: no-repeat;\\n        // background-position: right calc(0.375em + 0.1875rem) center;\\n        background-position: right 10px center;\\n        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\n\\n        &.container-focus {\\n            border-color: $danger;\\n            box-shadow: 0px 0px 0px 3px rgba($danger, 0.2); //inset | offset-x | offset-y | blur-radius | spread-radius | color\\n        }\\n    }\\n\\n    &:valid,\\n    &.is-valid {\\n        border-color: $success;\\n        padding-right: calc(1.5em + 0.75rem);\\n        background-image: url(\\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%2350955b\' d=\'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\\");\\n\\n        background-repeat: no-repeat;\\n        // background-position: right calc(0.375em + 0.1875rem) top;\\n        background-position: right 10px top 10px;\\n        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);\\n\\n        &.container-focus {\\n            border-color: $success;\\n            box-shadow: 0px 0px 0px 3px rgba($success, 0.2); //inset | offset-x | offset-y | blur-radius | spread-radius | color\\n        }\\n    }\\n\\n    input {\\n        border: none;\\n        box-shadow: none;\\n        outline: none;\\n        background-color: transparent;\\n        padding: 0 6px;\\n        margin: 0;\\n        flex: 1;\\n        width: auto;\\n        max-width: inherit;\\n    }\\n}\\n\\n.bs-tooltip-top .arrow,\\n.bs-tooltip-auto[x-placement^=\'top\'] .arrow {\\n    bottom: 2px;\\n}\\n\\n.tooltip-inner {\\n    max-width: 200px;\\n    padding: 0.25rem 0.5rem;\\n    color: $white;\\n    text-align: center;\\n    background-color: $black;\\n    border-radius: 0.25rem;\\n}\\n","styleUrl":"./tags-input.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":66},"implements":["OnInit","ControlValueAccessor","Validator"],"templateData":"<div\\n    #container\\n    (click)=\\"$event.stopPropagation()\\"\\n    [ngClass]=\\"{\\n        \'disabled\': disabled,\\n        \'is-invalid\': !disabled && formField !== undefined && formField.invalid && (formField.touched || formField.dirty),\\n        \'is-valid\': !disabled && formField !== undefined && !formField.pristine && formField.valid,\\n        \'container-focus\': !disabled && isFocus\\n    }\\"\\n    class=\\"tag-container disable-select form-control\\"\\n    >\\n    <div\\n        [openDelay]=\\"600\\"\\n        [closeDelay]=\\"500\\"\\n        placement=\\"top\\"\\n        [ngbTooltip]=\\"item[api.labelField]\\"\\n        *ngFor=\\"let item of selectedItems\\"\\n        [ngClass]=\\"item.colorClass\\"\\n        class=\\"badge pe-1 ps-1 disable-select\\">\\n        <span>{{item[api.labelField] | truncate:[20, \'...\']}}</span>\\n        <span *ngIf=\\"!disabled && !item.disabled\\" class=\\"ps-1 pointer\\" (click)=\\"$event.stopPropagation(); removeItem(item)\\">\\n            <i class=\\"bi bi-x-circle-fill\\"></i>\\n        </span>\\n    </div>\\n    <input\\n        *ngIf=\\"!disabled\\"\\n        type=\\"text\\"\\n        class=\\"form-control\\"\\n        [container]=\\"typeaheadContainer\\"\\n        [placeholder]=\\"searchPlaceholder\\"\\n        [(ngModel)]=\\"typeaheadModel\\"\\n        (ngModelChange)=\\"onModelChange()\\"\\n        [ngbTypeahead]=\\"typeaheadSearch\\"\\n        [inputFormatter]=\\"typeaheadFormatter\\"\\n        [resultFormatter]=\\"typeaheadFormatter\\"\\n        (focus)=\\"focus$.next($any($event).target.value)\\"\\n        (click)=\\"onClick($event)\\"\\n        (blur)=\\"typeaheadOnBlur($event)\\"\\n        (selectItem)=\\"onTypeaheadSelectItem($event)\\"\\n        (keydown.enter)=\\"onTypeaheadEnterPress($event)\\"/>\\n    \x3c!-- Empty state placeholder --\x3e\\n    <input *ngIf=\\"disabled && selectedItems.length === 0\\" class=\\"form-control\\" [placeholder]=\\"emptyStatePlaceholder\\" disabled/>\\n</div>\\n"},{"name":"UiTextAreaComponent","id":"component-UiTextAreaComponent-185cdc0d49c8007f684b5e6bc78f529c865d1136c9b5f8611705be8e537890743ec4e0d6415db7896ab062107e38491a30af58929e698f4a19e157d6e8dcb14b","file":"libs/ui/src/lib/modules/form-controls/text-area/text-area.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-area","styleUrls":["./text-area.component.scss"],"styles":[],"templateUrl":["./text-area.component.html"],"viewProviders":[],"inputsClass":[{"name":"rows","defaultValue":"10","deprecated":false,"deprecationMessage":"","line":13,"type":"number","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":true,"deprecationMessage":"Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form\\\\text-area\\\\text-area.component.ts","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n/**\\n * @deprecated Use platform\\\\libs\\\\ui\\\\src\\\\lib\\\\modules\\\\form\\\\text-area\\\\text-area.component.ts\\n */\\n@Component({\\n    selector: \'ui-text-area\',\\n    templateUrl: \'./text-area.component.html\',\\n    styleUrls: [\'./text-area.component.scss\'],\\n})\\nexport class UiTextAreaComponent extends UiFormControlBaseComponent {\\n    @Input() public rows = 10;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-area.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"<div *ngIf=\\"form !== undefined\\">\\n\\n    \x3c!-- Label --\x3e\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\n        {{label}}\\n        \x3c!-- Required Asterix --\x3e\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\n    </label>\\n\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\n\\n    <div class=\\"input-group\\">\\n\\n        \x3c!-- Prefix Icon --\x3e\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Prefix Text --\x3e\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{prefixText}}\\n        </span>\\n\\n        \x3c!-- Basic Textarea --\x3e\\n        <textarea\\n            [id]=\\"id + \'_TextArea\'\\"\\n            [rows]=\\"rows\\"\\n            [ngClass]=\\"{ \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation }\\"\\n            [placeholder]=\\"placeholder\\"\\n            [value]=\\"value\\"\\n            [disabled]=\\"disabled\\"\\n            (input)=\\"onChange($event.target.value)\\"\\n            (blur)=\\"onTouched()\\"\\n            class=\\"form-control\\"\\n            autocomplete=\\"off\\"\\n        ></textarea>\\n\\n        \x3c!-- Suffix Icon --\x3e\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Suffix Text --\x3e\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{suffixText}}\\n        </span>\\n    </div>\\n\\n    <div class=\\"feedback\\">\\n\\n        \x3c!-- Success Feedback Text --\x3e\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\n        </div>\\n\\n        \x3c!-- Error Feedback Text --\x3e\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\n            <div [id]=\\"id + \'_MinLengthErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.minlength\\">\\n                {{ \'COMMON.MIN_LENGTH_OF\' | translate: { requiredLength: form.controls[formControlName].errors.minlength.requiredLength } }}\\n            </div>\\n            <div [id]=\\"id + \'_MaxLengthErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.maxlength\\">\\n                {{ \'COMMON.MAX_LENGTH_OF\' | translate: { requiredLength: form.controls[formControlName].errors.maxlength.requiredLength } }}\\n            </div>\\n\\n            <div [id]=\\"id + \'_RequiredErrorText\'\\"  *ngIf=\\"form.controls[formControlName].errors.required\\">\\n                {{ \'COMMON.REQUIRED_FIELD\' | translate }}\\n            </div>\\n\\n            <div [id]=\\"id + \'_ValidEmailErrorText\'\\" *ngIf=\\"form.controls[formControlName].errors.email\\">\\n                {{ \'COMMON.ENTER_VALID_EMAIL\' | translate }}\\n            </div>\\n        </div>\\n\\n        \x3c!-- Help Text --\x3e\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\n        </div>\\n    </div>\\n\\n</div>\\n"},{"name":"UiTextAreaComponent","id":"component-UiTextAreaComponent-8e7ee78d7b03300ebd3bc70ea84f0a92e7a423cc4690f3b79e83e513b7f1682f20a075f4943eca8c2696295052fc7dc394701e3d821b490dc0102a76542f5dff-1","file":"libs/ui/src/lib/modules/form/text-area/text-area.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-area-new","styleUrls":["./text-area.component.scss"],"styles":[],"templateUrl":["./text-area.component.html"],"viewProviders":[],"inputsClass":[{"name":"rows","defaultValue":"10","deprecated":false,"deprecationMessage":"","line":10,"type":"number","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n@Component({\\n    selector: \'ui-text-area-new\',\\n    templateUrl: \'./text-area.component.html\',\\n    styleUrls: [\'./text-area.component.scss\'],\\n})\\nexport class UiTextAreaComponent extends UiFormControlBaseComponent {\\n    @Input() public rows = 10;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-area.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","isDuplicate":true,"duplicateId":1,"duplicateName":"UiTextAreaComponent-1","templateData":"<ng-container [formGroup]=\\"form\\">\\n    \x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\n    <ui-form-control-base\\n        [label]=\\"label\\"\\n        [formControlName]=\\"formControlName\\"\\n        [form]=\\"form\\"\\n        [placeholder]=\\"placeholder\\"\\n        [showHelpText]=\\"showHelpText\\"\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\n        [showInfoIcon]=\\"showInfoIcon\\"\\n        [infoText]=\\"infoText\\"\\n        [helpText]=\\"helpText\\"\\n    >\\n        \x3c!-- Basic Textarea --\x3e\\n        <textarea\\n            [id]=\\"id + \'_TextArea\'\\"\\n            [rows]=\\"rows\\"\\n            [ngClass]=\\"{\\n                \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\n            }\\"\\n            [placeholder]=\\"placeholder\\"\\n            [value]=\\"value\\"\\n            [disabled]=\\"disabled\\"\\n            (input)=\\"onChange($event.target.value)\\"\\n            (blur)=\\"onTouched()\\"\\n            class=\\"form-control\\"\\n            autocomplete=\\"off\\">\\n        </textarea>\\n    </ui-form-control-base>\\n</ng-container>\\n"},{"name":"UiTextCellRendererComponent","id":"component-UiTextCellRendererComponent-8ca7162e64e3cdf61cb159e3706c59d34d282d016df7551f3b8045a073f520b47e7edef7989618a84de5929bac08c5d5f4cd376479079ed20c03501ba0b948fd","file":"libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-cell-renderer","styleUrls":["./text-cell-renderer.component.scss"],"styles":[],"templateUrl":["./text-cell-renderer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_subscriptions","defaultValue":"new Subscription()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21,"modifierKind":[121]},{"name":"disableTooltip","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":17,"modifierKind":[123]},{"name":"itemId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19,"modifierKind":[123]},{"name":"myNameElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":13,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'myNameElem\'"}],"modifierKind":[123]},{"name":"params","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":16,"modifierKind":[123]},{"name":"rulerElem","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":14,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'ruler\'"}],"modifierKind":[123]},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[123]}],"methodsClass":[{"name":"agInit","args":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"checkColumnWidth","args":[{"name":"data","type":"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refresh","args":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"params","type":"ICellRendererParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component,ElementRef, ViewChild } from \'@angular/core\';\\nimport { AfterViewInit, OnDestroy } from \'@angular/core/core\';\\nimport { ICellRendererAngularComp } from \'ag-grid-angular\';\\nimport { ICellRendererParams } from \'ag-grid-community\';\\nimport { Subscription } from \'rxjs\';\\n\\n@Component({\\n    selector: \'ui-text-cell-renderer\',\\n    templateUrl: \'./text-cell-renderer.component.html\',\\n    styleUrls: [\'./text-cell-renderer.component.scss\'],\\n})\\nexport class UiTextCellRendererComponent implements AfterViewInit, OnDestroy, ICellRendererAngularComp {\\n    @ViewChild(\'myNameElem\') public myNameElem: ElementRef;\\n    @ViewChild(\'ruler\') public rulerElem: ElementRef;\\n\\n    public params: any;\\n    public disableTooltip = true;\\n    public value: string;\\n    public itemId: string;\\n\\n    private _subscriptions = new Subscription();\\n\\n    constructor() {}\\n\\n    public refresh(params: ICellRendererParams): boolean {\\n        return true;\\n    }\\n\\n    public ngAfterViewInit(): void {\\n\\n        // Note: Using setTimeout to let the time to the cell content to be render before calculation\\n        setTimeout(() => {this.checkColumnWidth(this.params);});\\n\\n        this._subscriptions.add(\\n            this.params.column.eventService.addEventListener(\'widthChanged\', (data) => {\\n                this.checkColumnWidth(data);\\n            })\\n        );\\n    }\\n\\n    public ngOnDestroy(): void {\\n        this._subscriptions.unsubscribe();\\n    }\\n\\n    public checkColumnWidth(data){\\n\\n        if(data !== undefined){\\n\\n            if(data.column.actualWidth >= (this.myNameElem.nativeElement.scrollWidth + 48)){\\n                this.disableTooltip = true;\\n            }\\n            else{\\n                this.disableTooltip = false;\\n            }\\n        }\\n    }\\n\\n    public agInit(params: any): void {\\n        this.params = params;\\n        this.value = params.value;\\n        this.itemId = params.itemId;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"::ng-deep .tooltip-inner {\\n     max-width: 500px;\\n}\\n\\na:link {\\n     text-decoration: none;\\n}\\n\\n.ellipsis {\\n     white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\\n}","styleUrl":"./text-cell-renderer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":21},"implements":["AfterViewInit","OnDestroy","ICellRendererAngularComp"],"templateData":"<div #myNameElem\\n    class=\\"ellipsis\\"\\n    container=\\"body\\"\\n    ngbTooltip=\\"{{ value }}\\"\\n    [disableTooltip] = \\"disableTooltip\\"\\n    [placement]=\\"\'top\'\\"\\n    [tooltipClass]=\\"\'tooltip-lg\'\\"\\n    (click)=\\"params.clicked(itemId)\\"\\n    >\\n    <span *ngIf=\\"params.isLink !== true\\">\\n        {{ value }}\\n    </span>\\n    <a *ngIf=\\"params.isLink === true\\" class=\\"strong\\" href=\\"javascript: void(0);\\">{{ value }}</a>\\n</div>\\n"},{"name":"UiTextInputComponent","id":"component-UiTextInputComponent-bdf6b8833319ddb509c06cdf8fc983df00cc612dc26b64f5ad6394d349f8ad52005064dbf41d9342cb1d1da97b770bca18ee43823e3bed2d88b16e8d2ff038e1","file":"libs/ui/src/lib/modules/form-controls/text-input/text-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-input","styleUrls":["./text-input.component.scss"],"styles":[],"templateUrl":["./text-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","line":10,"type":"\\"text\\" | \\"email\\" | \\"password\\"","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n@Component({\\n    selector: \'ui-text-input\',\\n    templateUrl: \'./text-input.component.html\',\\n    styleUrls: [\'./text-input.component.scss\'],\\n})\\nexport class UiTextInputComponent extends UiFormControlBaseComponent {\\n    @Input() public type: \'text\' | \'email\' | \'password\' = \'text\';\\n\\n    public concatErrors(arr1: object, arr2: object){\\n        return {...arr1, ...arr2};\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-input.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","templateData":"<div *ngIf=\\"form !== undefined\\">\\n\\n    \x3c!-- Label --\x3e\\n    <label [id]=\\"id + \'_Label\'\\" for=\\"formControlName\\">\\n        {{label}}\\n        \x3c!-- Required Asterix --\x3e\\n        <span [id]=\\"id + \'_RequiredAsterisk\'\\" *ngIf=\\"form.controls[formControlName].hasValidator(Validators.required)\\">*</span>\\n    </label>\\n\\n    \x3c!-- Info Icon with Tooltip (infoText) --\x3e\\n    <i [id]=\\"id + \'_InfoIcon\'\\" *ngIf=\\"showInfoIcon && infoText !== \'\'\\" class=\\"bi bi-question-circle-fill\\" placement=\\"top\\" [ngbTooltip]=\\"infoText\\"></i>\\n\\n    <div class=\\"input-group\\">\\n\\n        \x3c!-- Prefix Icon --\x3e\\n        <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Prefix Text --\x3e\\n        <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{prefixText}}\\n        </span>\\n\\n        \x3c!-- Basic Input --\x3e\\n        <input\\n            [id]=\\"id + \'_TextInput\'\\"\\n            [type]=\\"type\\"\\n            [ngClass]=\\"{ \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation, \'is-valid\': form.controls[formControlName].valid && showSuccessValidation }\\"\\n            [placeholder]=\\"placeholder\\"\\n            [value]=\\"value\\"\\n            [disabled]=\\"disabled\\"\\n            (input)=\\"onChange($event.target.value)\\"\\n            (blur)=\\"onTouched()\\"\\n            class=\\"form-control\\"\\n            autocomplete=\\"off\\"\\n        />\\n\\n        \x3c!-- Suffix Icon --\x3e\\n        <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\n            <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\n        </span>\\n\\n        \x3c!-- Suffix Text --\x3e\\n        <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\n            {{suffixText}}\\n        </span>\\n    </div>\\n\\n    <div class=\\"feedback\\">\\n\\n        \x3c!-- Success Feedback Text --\x3e\\n        <div [id]=\\"id + \'_SuccessText\'\\" class=\\"success-text\\" *ngIf=\\"form.controls[formControlName].valid && showSuccessValidation\\">\\n            {{ \'COMMON.LOOKS_GOOD\' | translate }}\\n        </div>\\n\\n        \x3c!-- Error Feedback Text --\x3e\\n        <div class=\\"error-text\\" *ngIf=\\"form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation\\">\\n\\n            <div *ngFor=\\"let item of form.controls[formControlName].errors | keyvalue\\">\\n                \x3c!-- If errorString have NO parameters --\x3e\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams === undefined\\">\\n                    {{errorStrings[item.key].stringCode | translate: form.controls[formControlName].errors[item.key] }}\\n                </ng-container>\\n                \x3c!-- If errorString HAVE parameters --\x3e\\n                <ng-container *ngIf=\\"errorStrings[item.key] !== undefined && errorStrings[item.key].stringParams !== undefined\\">\\n                    {{errorStrings[item.key].stringCode | translate: concatErrors(form.controls[formControlName].errors[item.key], errorStrings[item.key].stringParams) }}\\n                </ng-container>\\n            </div>\\n        </div>\\n\\n        \x3c!-- Help Text --\x3e\\n        \x3c!-- Show only if Error Feedback Text is hidden  --\x3e\\n        <div *ngIf=\\"!(form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation)\\">\\n            <div [id]=\\"id + \'_HelpText\'\\" *ngIf=\\"showHelpText && helpText !== \'\'\\" class=\\"help-text\\">{{helpText}}</div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"UiTextInputComponent","id":"component-UiTextInputComponent-c9533d15247d469fffcb545a3aeba5d5784f1578522b2958a1e847ba777bd225dcbab18f0d9202edf46d1a195d0612da7426dc8ecc341139d4ae259d70462dea-1","file":"libs/ui/src/lib/modules/form/text-input/text-input.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-text-input-new","styleUrls":["./text-input.component.scss"],"styles":[],"templateUrl":["./text-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","line":11,"type":"\\"text\\" | \\"email\\" | \\"password\\"","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"concatErrors","args":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":""},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"arr1","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"arr2","type":"object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, Optional, Self } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\nimport { ControlValueAccessor, NgControl } from \'@angular/forms\';\\n\\n@Component({\\n    selector: \'ui-text-input-new\',\\n    templateUrl: \'./text-input.component.html\',\\n    styleUrls: [\'./text-input.component.scss\'],\\n})\\nexport class UiTextInputComponent extends UiFormControlBaseComponent {\\n    @Input() public type: \'text\' | \'email\' | \'password\' = \'text\';\\n\\n    public concatErrors(arr1: object, arr2: object) {\\n        return { ...arr1, ...arr2 };\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./text-input.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","isDuplicate":true,"duplicateId":1,"duplicateName":"UiTextInputComponent-1","templateData":"<ng-container [formGroup]=\\"form\\"\\n    >\x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\n    <ui-form-control-base\\n        [label]=\\"label\\"\\n        [formControlName]=\\"formControlName\\"\\n        [form]=\\"form\\"\\n        [placeholder]=\\"placeholder\\"\\n        [showHelpText]=\\"showHelpText\\"\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\n        [showInfoIcon]=\\"showInfoIcon\\"\\n        [infoText]=\\"infoText\\"\\n        [helpText]=\\"helpText\\"\\n        [patternErrorText]=\\"patternErrorText\\"\\n        [id]=\\"id\\"\\n        [config]=\\"config\\"\\n    >\\n        <div class=\\"input-group\\">\\n            \x3c!-- Prefix Icon --\x3e\\n            <span *ngIf=\\"prefixIcon !== \'\'\\" class=\\"input-group-text\\">\\n                <i [id]=\\"id + \'_PrefixIcon\'\\" class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"prefixIcon\\"></i>\\n            </span>\\n\\n            \x3c!-- Prefix Text --\x3e\\n            <span [id]=\\"id + \'_PrefixText\'\\" *ngIf=\\"prefixText !== \'\'\\" class=\\"input-group-text\\">\\n                {{ prefixText }}\\n            </span>\\n\\n            \x3c!-- Basic Input --\x3e\\n            <input\\n                [id]=\\"id + \'_TextInput\'\\"\\n                [type]=\\"type\\"\\n                [ngClass]=\\"{\\n                    \'is-invalid\': form.controls[formControlName].invalid && form.controls[formControlName].touched && showErrorValidation,\\n                    \'is-valid\': form.controls[formControlName].valid && showSuccessValidation\\n                }\\"\\n                [placeholder]=\\"placeholder\\"\\n                [value]=\\"value\\"\\n                [disabled]=\\"disabled\\"\\n                (input)=\\"onChange($event.target.value)\\"\\n                (blur)=\\"onTouched()\\"\\n                class=\\"form-control w-100\\"\\n                autocomplete=\\"off\\"\\n            />\\n            \x3c!-- Suffix Icon --\x3e\\n            <span [id]=\\"id + \'_SuffixIcon\'\\" *ngIf=\\"suffixIcon !== \'\'\\" class=\\"input-group-text\\">\\n                <i class=\\"bi\\" aria-hidden=\\"true\\" [ngClass]=\\"suffixIcon\\"></i>\\n            </span>\\n\\n            \x3c!-- Suffix Text --\x3e\\n            <span [id]=\\"id + \'_SuffixText\'\\" *ngIf=\\"suffixText !== \'\'\\" class=\\"input-group-text\\">\\n                {{ suffixText }}\\n            </span>\\n        </div>\\n    </ui-form-control-base>\\n</ng-container>\\n"},{"name":"UiToastsContainerComponent","id":"component-UiToastsContainerComponent-5236a13aa6947f746844f08d686311dac53a8d68ddbb267344400161230970f73a3739672a23f126d34b49923b397650c8c7e264deb08e5b0b9eb348193723ca","file":"libs/ui/src/lib/services/toast-notification/toast-container/toasts-container.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-toasts-container","styleUrls":["./toasts-container.component.scss"],"styles":[],"templateUrl":["./toasts-container.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"sticky","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"decorators":[{"name":"HostBinding","stringifiedArguments":"\'class.ngb-toasts\'"}],"modifierKind":[123]},{"name":"toasts$","deprecated":false,"deprecationMessage":"","type":"Observable<IUiToast[]>","optional":false,"description":"","line":26,"modifierKind":[123]},{"name":"toastTypes","defaultValue":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]},{"name":"UiAlertLayoutEnum","defaultValue":"UiAlertLayoutEnum","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[123]}],"methodsClass":[{"name":"mapType","args":[{"name":"type","type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"UiAlertTypeEnum","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"type","type":"UiToastTypesEnum","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onCloseClick","args":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onHidden","args":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"toast","type":"IUiToast","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class.ngb-toasts","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]}],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, ElementRef, HostBinding, Input, OnInit, ViewChild } from \'@angular/core\';\\n// RxJs\\nimport { Observable } from \'rxjs/internal/Observable\';\\n// Services\\nimport { UiToastService } from \'../toast.service\';\\n// Interfaces\\nimport { IUiToast } from \'../interfaces\';\\n// Enums\\nimport { UiToastTypesEnum } from \'../enums\';\\nimport { UiAlertTypeEnum } from \'@lib/modules/alert/enums/alert-type.enum\';\\nimport { UiAlertLayoutEnum } from \'@lib/modules/alert/enums/alert-layout.enum\';\\n\\n@Component({\\n    selector: \'ui-toasts-container\',\\n    templateUrl: \'./toasts-container.component.html\',\\n    styleUrls: [\'./toasts-container.component.scss\'],\\n})\\n/**\\n * Toasts container\\n * This component is responsible for displaying toasts\\n * It listens to the toast service and displays toasts using the alert component and styles them as toasts\\n */\\nexport class UiToastsContainerComponent implements OnInit {\\n    @HostBinding(\'class.ngb-toasts\') public sticky = true;\\n    public toasts$: Observable<IUiToast[]>;\\n    public toastTypes = UiToastTypesEnum;\\n    public UiAlertLayoutEnum = UiAlertLayoutEnum;\\n\\n    constructor(private _toastService: UiToastService) {\\n        this.toasts$ = this._toastService.toasts$;\\n    }\\n    public ngOnInit() {\\n        // Auto hide toasts after 5 seconds\\n        // Since we use alerts, we can\'t use NgbToastConfig.autohide. This is a workaround\\n        this.toasts$.subscribe((toasts) => {\\n            toasts.forEach((toast) => {\\n                if (toast.options.autoHide === true || toast.options.autoHide === undefined) {\\n                    setTimeout(() => {\\n                        this.onHidden(toast);\\n                    }, 5000);\\n                }\\n            });\\n        });\\n    }\\n\\n    // Map the toast type to the alert type\\n    //Toasts and alerts use different enums with the same values\\n    public mapType(type: UiToastTypesEnum): UiAlertTypeEnum {\\n        switch (type) {\\n            case UiToastTypesEnum.info:\\n                return UiAlertTypeEnum.info;\\n            case UiToastTypesEnum.success:\\n                return UiAlertTypeEnum.success;\\n            case UiToastTypesEnum.warning:\\n                return UiAlertTypeEnum.warning;\\n            case UiToastTypesEnum.danger:\\n                return UiAlertTypeEnum.danger;\\n            default:\\n                return UiAlertTypeEnum.info;\\n        }\\n    }\\n\\n    public onHidden(toast: IUiToast) {\\n        this._toastService.remove(toast);\\n    }\\n\\n    public onCloseClick(toast: IUiToast) {\\n        this._toastService.remove(toast);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'../../../../../../ui/src/assets/styles/custom-variables.scss\';\\n\\n:host {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    z-index: 1200;\\n}\\n\\n\\n.alert .alert-container {\\n    max-width: 400px;\\n    @extend .toast;\\n}\\n\\n.toast {\\n    box-sizing: border-box;\\n    color: $gray-900;\\n    font-size: 14px;\\n    width: $toast-width;\\n    word-break: break-word;\\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\\n    border-radius: 4px;\\n    border: 1px solid $info;\\n    background-color: $info-100;\\n\\n    &.toast-info {\\n        border: 1px solid $info;\\n        background-color: $info-100;\\n\\n        .type-icon {\\n            color: $info;\\n            font-size: 20px;\\n        }\\n    }\\n\\n    &.toast-success {\\n        border-color: $success;\\n        background-color: $success-100;\\n\\n        .type-icon {\\n            color: $success;\\n            font-size: 20px;\\n        }\\n    }\\n\\n    &.toast-warning {\\n        border-color: $warning-600;\\n        background-color: $warning-100;\\n\\n        .type-icon {\\n            color: $warning-600;\\n            font-size: 20px;\\n        }\\n    }\\n\\n    &.toast-danger {\\n        border-color: $danger-600;\\n        background-color: $danger-100;\\n\\n        .type-icon {\\n            color: $danger-600;\\n            font-size: 20px;\\n        }\\n    }\\n\\n    .text-message {\\n        margin: 0 1rem 0 1rem;\\n    }\\n\\n    .btn-close {\\n        color: $gray-900;\\n        margin-left: 1rem;\\n        position: absolute;\\n        right: 0;\\n        top: 0.5rem;\\n\\n        &:focus {\\n            outline: none;\\n            box-shadow: none;\\n        }\\n    }\\n}","styleUrl":"./toasts-container.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"_toastService","type":"UiToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<ng-container *ngFor=\\"let toast of toasts$ | async\\">\\n    <ui-alert\\n        (hidden)=\\"onHidden(toast)\\"\\n        [id]=\\"\'toast-id-\' + toast.id\\"\\n        [text]=\\"toast.text\\"\\n        [type]=\\"mapType(toast.type)\\"\\n        [dismissible]=\\"toast.options.autoHide === false\\"\\n        [layout]=\\"UiAlertLayoutEnum.STACKED\\"\\n    >\\n    </ui-alert>\\n</ng-container>"},{"name":"UiToggleComponent","id":"component-UiToggleComponent-f30356650cbacd19c2202bef15bbe13337e7ccdd4823c53aa93f0519f851ac47df1e5603176de26e92539221690d87a8563a4b12acafb318215c0c5113f70b0a","file":"libs/ui/src/lib/modules/form/toggle/toggle.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-toggle","styleUrls":["./toggle.component.scss"],"styles":[],"templateUrl":["./toggle.component.html"],"viewProviders":[],"inputsClass":[{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":10,"type":"literal type[]","decorators":[]},{"name":"text","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"config","deprecated":false,"deprecationMessage":"","line":33,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"errorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","line":31,"type":"{}","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"forceDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"form","deprecated":false,"deprecationMessage":"","line":18,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formComponent","deprecated":false,"deprecationMessage":"","line":19,"type":"UiFormBaseComponent","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"formControlName","deprecated":false,"deprecationMessage":"","line":11,"type":"any","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"helpText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"id","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"infoText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"patternErrorText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"prefixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showErrorValidation","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showHelpText","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showInfoIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"showSuccessValidation","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixIcon","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"suffixText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"type","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[],"inheritance":{"file":"UiFormControlBaseComponent"}}],"outputsClass":[{"name":"valueChange","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":50,"type":"EventEmitter<any>","inheritance":{"file":"UiFormControlBaseComponent"}}],"propertiesClass":[{"name":"_config","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":56,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"_subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[121],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"defaultErrorStrings","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":53,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"Validators","defaultValue":"Validators","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"value","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":52,"modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onChange","args":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"e","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"onTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element value changes (view => model)\\n","description":"<p>Update form when DOM element value changes (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdate form when DOM element is blurred (view => model)\\n","description":"<p>Update form when DOM element is blurred (view =&gt; model)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form disabled state to the DOM element (model => view)\\n","description":"<p>Write form disabled state to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"setErrorString","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"inheritance":{"file":"UiFormControlBaseComponent"}},{"name":"writeValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWrite form value to the DOM element (model => view)\\n","description":"<p>Write form value to the DOM element (model =&gt; view)</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"UiFormControlBaseComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiFormControlBaseComponent } from \'../form-control-base/form-control-base.component\';\\n\\n@Component({\\n    selector: \'ui-toggle\',\\n    templateUrl: \'./toggle.component.html\',\\n    styleUrls: [\'./toggle.component.scss\'],\\n})\\nexport class UiToggleComponent extends UiFormControlBaseComponent implements OnInit {\\n    @Input() public options: { label: string; value: string; disabled: boolean; required: boolean }[];\\n    @Input() public inline = false;\\n\\n    @Input() public text: string;\\n\\n    public ngOnInit(): void {}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-check-inline {\\n    width: max-content;\\n    margin-right: 0.5rem;\\n}","styleUrl":"./toggle.component.scss"}],"stylesData":"","extends":"UiFormControlBaseComponent","implements":["OnInit"],"templateData":"<ng-container [formGroup]=\\"form\\">\\n    \x3c!-- This formGroup is required to remove formGroup missing error--\x3e\\n    <ui-form-control-base\\n        [formControlName]=\\"formControlName\\"\\n        [form]=\\"form\\"\\n        [label]=\\"label\\"\\n        [showHelpText]=\\"showHelpText\\"\\n        [showSuccessValidation]=\\"showSuccessValidation\\"\\n        [showInfoIcon]=\\"false\\"\\n        [infoText]=\\"infoText\\"\\n        [helpText]=\\"helpText\\"\\n    >\\n        <div *ngIf=\\"form !== undefined\\" class=\\"pt-1\\">\\n            <div class=\\"form-switch form-check\\" [ngClass]=\\"{ \'form-check-inline \': inline === true }\\">\\n                <input\\n                    class=\\"form-check-input\\"\\n                    type=\\"checkbox\\"\\n                    role=\\"switch\\"\\n                    [value]=\\"value\\"\\n                    [id]=\\"id + \'_Toggle\'\\"\\n                    [name]=\\"formControlName\\"\\n                    [formControlName]=\\"formControlName\\"\\n                />\\n                <label class=\\"form-check-label\\" [id]=\\"id + \'_Label\'\\" [for]=\\"id + \'_Toggle\'\\">\\n                    {{ text }}<span *ngIf=\\"form.controls[formControlName].hasValidator(Validators.requiredTrue)\\">&nbsp;*</span>\\n                </label>\\n                <i\\n                    *ngIf=\\"showInfoIcon && infoText !== \'\'\\"\\n                    class=\\"bi bi-question-circle-fill d-inline-block\\"\\n                    placement=\\"top\\"\\n                    [ngbTooltip]=\\"infoText\\"\\n                ></i>\\n            </div>\\n        </div>\\n    </ui-form-control-base>\\n</ng-container>"},{"name":"UiToolNavComponent","id":"component-UiToolNavComponent-f430a66ecb2f8ff70ff553ec3db2c0ce44c97acd41c27b9160f0cd53a0d094c73ad3d69136cd0730882ad7a4a0b31e1c1998ebc18104dc31c9b5253b05397777","file":"libs/ui/src/lib/modules/layout/components/tool-nav/tool-nav.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tool-nav","styleUrls":["./tool-nav.component.scss"],"styles":[],"templateUrl":["./tool-nav.component.html"],"viewProviders":[],"inputsClass":[{"name":"toolItems","deprecated":false,"deprecationMessage":"","line":10,"type":"Array<IUiSubHeaderTool>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"headerService","deprecated":false,"deprecationMessage":"","type":"UiHeaderService","optional":false,"description":"","line":12,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"toolItemClick","args":[{"name":"item","type":"IUiSubHeaderTool","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"item","type":"IUiSubHeaderTool","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { UiHeaderService, IUiSubHeaderTool } from \'@lib/services/layout/header/header.service\';\\n\\n@Component({\\n    selector: \'ui-tool-nav\',\\n    templateUrl: \'./tool-nav.component.html\',\\n    styleUrls: [\'./tool-nav.component.scss\'],\\n})\\nexport class UiToolNavComponent implements OnInit {\\n    @Input() public toolItems: Array<IUiSubHeaderTool>;\\n\\n    constructor(public headerService: UiHeaderService) {}\\n\\n    public ngOnInit(): void {}\\n\\n    public toolItemClick(item: IUiSubHeaderTool) {\\n        item.onClickEvent(item);\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".tool-nav-container {\\n    align-items: center;\\n    box-sizing: border-box;\\n    display: flex;\\n    flex-direction: row;\\n    place-content: center flex-end;\\n    width: 100%;\\n}\\n","styleUrl":"./tool-nav.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"headerService","type":"UiHeaderService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"tool-nav-container\\">\\n    <ng-container *ngFor=\\"let tool of toolItems\\">\\n        <button class=\\"ms-2 me-2\\" *ngIf=\\"tool.type === \'button\'\\" [ngClass]=\\"tool.class\\" (click)=\\"toolItemClick(tool)\\" [disabled]=\\"tool.disabled\\">{{ tool.label | translate }}</button>\\n        <div *ngIf=\\"tool.type === \'divider\'\\" class=\\"v-line\\" [ngClass]=\\"tool.class\\"></div>\\n        <i\\n            *ngIf=\\"tool.type === \'icon\'\\"\\n            class=\\"fa pointer pe-1 ps-1\\"\\n            [ngClass]=\\"tool.class\\"\\n            style=\\"font-size: 20px;\\"\\n            aria-hidden=\\"true\\"\\n            (click)=\\"toolItemClick(tool)\\"\\n        ></i>\\n        <input *ngIf=\\"tool.type === \'search\'\\" [ngClass]=\\"tool.class\\" autocomplete=\\"off\\" class=\\"form-control\\" id=\\"companyName\\" [placeholder]=\\"tool.label | translate\\" style=\\"max-width: 200px; min-width: 200px;\\" />\\n    </ng-container>\\n</div>"},{"name":"UiTreeViewComponent","id":"component-UiTreeViewComponent-a56aa0a11262277a1aa3e355c5c911770fdd083966e511b6b31980a3280d8f8c625b85a69c86941fbf171f1ef95eca831ed6f80169d0eb6d859fa79d8df8f793","file":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/tree-view.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ui-tree-view","styleUrls":["./tree-view.component.scss"],"styles":[],"templateUrl":["./tree-view.component.html"],"viewProviders":[],"inputsClass":[{"name":"collapsedLevels","defaultValue":"[]","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nArray of levels that should be collapsed on init (starting from 0)\\nBy default all levels are expanded\\n","description":"<p>Array of levels that should be collapsed on init (starting from 0)\\nBy default all levels are expanded</p>\\n","line":25,"type":"number[]","decorators":[]},{"name":"treeData","deprecated":false,"deprecationMessage":"","line":12,"type":"IUiTreeData","decorators":[]}],"outputsClass":[{"name":"treeUpdated","defaultValue":"new EventEmitter<IUiTreeData>()","deprecated":false,"deprecationMessage":"","line":27,"type":"EventEmitter<IUiTreeData>"}],"propertiesClass":[{"name":"_treeData","deprecated":false,"deprecationMessage":"","type":"IUiTreeData","optional":false,"description":"","line":29,"modifierKind":[121]}],"methodsClass":[{"name":"assignNodeUid","args":[{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAssigns a unique identifier to each node in the tree for every instance\\nWe need this to track the nodes in the tree\\n\\n","description":"<p>Assigns a unique identifier to each node in the tree for every instance\\nWe need this to track the nodes in the tree</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":1264,"end":1268,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"node"},"type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"pos":1258,"end":1263,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""},{"tagName":{"pos":1277,"end":1284,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":""}]},{"name":"generateNodeUid","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"getParentNode","args":[{"name":"nodeUid","type":"string","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""},{"name":"parent","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","defaultValue":"null"}],"optional":false,"returnType":"IUiTreeNode","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"nodeUid","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"parent","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","defaultValue":"null","tagName":{"text":"param"}}]},{"name":"onNodeChange","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"selectNode","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateParentNode","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":""},{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"node","type":"IUiTreeNode","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tree","type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \'@angular/core\';\\n// Interfaces\\nimport { IUiTreeData, IUiTreeNode } from \'./interfaces\';\\n\\n@Component({\\n    selector: \'ui-tree-view\',\\n    templateUrl: \'./tree-view.component.html\',\\n    styleUrls: [\'./tree-view.component.scss\'],\\n})\\nexport class UiTreeViewComponent {\\n    @Input() public set treeData(value: IUiTreeData) {\\n        this._treeData = value;\\n        this.assignNodeUid(this._treeData?.root);\\n    }\\n\\n    public get treeData(): IUiTreeData {\\n        return this._treeData;\\n    }\\n\\n    /**\\n     * Array of levels that should be collapsed on init (starting from 0)\\n     * By default all levels are expanded\\n     */\\n    @Input() public collapsedLevels: number[] = [];\\n\\n    @Output() public treeUpdated: EventEmitter<IUiTreeData> = new EventEmitter<IUiTreeData>();\\n\\n    private _treeData: IUiTreeData;\\n\\n    constructor() {}\\n\\n    public onNodeChange(value: boolean, node: IUiTreeNode) {\\n        this.selectNode(value, node);\\n        this.updateParentNode(value, node, this.treeData);\\n\\n        this.treeUpdated.emit(this.treeData);\\n    }\\n\\n    /**\\n     * Assigns a unique identifier to each node in the tree for every instance\\n     * We need this to track the nodes in the tree\\n     *\\n     * @param node\\n     * @returns\\n     */\\n    private assignNodeUid(node: IUiTreeNode) {\\n        if (!node) {\\n            return;\\n        }\\n\\n        node.nodeUid = this.generateNodeUid();\\n        node.children?.forEach((n: IUiTreeNode) => {\\n            this.assignNodeUid(n);\\n        });\\n    }\\n\\n    private generateNodeUid(): string {\\n        // UUIDv4 pattern: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\n        // where x is any hexadecimal digit and y is one of 8, 9, A, or B\\n        return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, (c) => {\\n            const r = (Math.random() * 16) | 0;\\n            const v = c === \'x\' ? r : (r & 0x3) | 0x8;\\n            return v.toString(16);\\n        });\\n    }\\n\\n    private selectNode(value: boolean, node: IUiTreeNode) {\\n        node.checked = value;\\n        node.indeterminate = false;\\n        node.children?.forEach((n: IUiTreeNode) => {\\n            this.selectNode(value, n);\\n        });\\n    }\\n\\n    private updateParentNode(value: boolean, node: IUiTreeNode, tree: IUiTreeData) {\\n        const parentNode = this.getParentNode(node.nodeUid, tree.root);\\n        if (!parentNode) {\\n            return;\\n        }\\n\\n        const allChildrenHasEqualValue = parentNode.children.every((child: IUiTreeNode) => !!child.checked === value);\\n        const hasIndeterminate = parentNode.children.some((child: IUiTreeNode) => child.indeterminate === true);\\n\\n        parentNode.checked = (allChildrenHasEqualValue && !hasIndeterminate && value) || false;\\n        parentNode.indeterminate = !allChildrenHasEqualValue || hasIndeterminate;\\n\\n        this.updateParentNode(value, parentNode, tree);\\n    }\\n\\n    private getParentNode(nodeUid: string, node: IUiTreeNode, parent: IUiTreeNode = null): IUiTreeNode {\\n        if (node.nodeUid === nodeUid) {\\n            return parent;\\n        }\\n\\n        if (node.children) {\\n            for (const child of node.children) {\\n                const foundParent = this.getParentNode(nodeUid, child, node);\\n                if (foundParent) {\\n                    return foundParent;\\n                }\\n            }\\n        }\\n\\n        return null;\\n    }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".chevron-btn {\\n    padding-right: 1.25rem;\\n    width: 1rem;\\n\\n    &:focus {\\n        outline: none;\\n        box-shadow: none;\\n    }\\n}\\n\\n.chevron-icon {\\n    transition: transform 300ms;\\n}\\n\\n.chevron-expanded {\\n    transform: rotate(90deg);\\n}","styleUrl":"./tree-view.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":29},"accessors":{"treeData":{"name":"treeData","setSignature":{"name":"treeData","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IUiTreeData","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":12,"jsdoctags":[{"name":"value","type":"IUiTreeData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"treeData","type":"","returnType":"IUiTreeData","line":17}}},"templateData":"\x3c!-- Define the recursive template. --\x3e\\n<ng-template #nodeTemplateRef let-node=\\"node\\" let-level=\\"level\\" let-expanded=\\"expanded\\"\\n    let-childrenCount=\\"node.children?.length\\">\\n    <div class=\\"d-flex\\">\\n        <button #chevronButton [id]=\\"node.nodeUid + \'_chevronBtn\'\\" class=\\"btn chevron-btn\\" type=\\"button\\"\\n            data-bs-toggle=\\"collapse\\" [attr.data-bs-target]=\\"\'#node_\' + node.nodeUid + \'_children\'\\"\\n            [attr.aria-expanded]=\\"expanded\\" aria-controls=\\"collapseNode\\" [disabled]=\\"!childrenCount\\">\\n            \x3c!-- Hint: This approach is used to manage the chevron state\\n            because Bootstrap doesn\'t add \\"collapsed\\" class on init.\\n            This could lead to a wrong default state for the chevron --\x3e\\n            <i *ngIf=\\"childrenCount\\" class=\\"bi bi-chevron-right d-inline-block chevron-icon\\"\\n                [ngClass]=\\"{ \'chevron-expanded\': chevronButton?.attributes[\'aria-expanded\']?.nodeValue === \'true\' }\\"></i>\\n        </button>\\n\\n        <div class=\\"form-check my-2\\">\\n            <input class=\\"form-check-input\\" [id]=\\"node.nodeUid + \'_checkbox\'\\" type=\\"checkbox\\" [ngModel]=\\"node.checked\\"\\n                [indeterminate]=\\"node.indeterminate\\" (ngModelChange)=\\"onNodeChange($event, node)\\" />\\n            <label class=\\"form-check-label\\" [id]=\\"node.nodeUid + \'_checkboxLabel\'\\" [for]=\\"node.nodeUid + \'_checkbox\'\\">\\n                {{ node.label }}\\n            </label>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\"childrenCount\\" class=\\"ms-4 collapse\\" [ngClass]=\\"{ \'show\': expanded }\\"\\n        [id]=\\"\'node_\' + node.nodeUid + \'_children\'\\">\\n        <ng-template ngFor let-child [ngForOf]=\\"node.children\\">\\n            \x3c!-- Invoke the recursive template. --\x3e\\n            <ng-template [ngTemplateOutlet]=\\"nodeTemplateRef\\" [ngTemplateOutletContext]=\\"{\\n                    node: child,\\n                    level: level + 1,\\n                    expanded: !collapsedLevels?.includes(level + 1)\\n                    }\\">\\n            </ng-template>\\n        </ng-template>\\n    </div>\\n</ng-template>\\n\x3c!-- Initiate the recursive template rendering. --\x3e\\n<ng-template *ngIf=\\"treeData?.root\\" [ngTemplateOutlet]=\\"nodeTemplateRef\\"\\n    [ngTemplateOutletContext]=\\"{ node: treeData.root, level: 0, expanded: !collapsedLevels?.includes(0) }\\">\\n</ng-template>"}],"modules":[{"name":"UiAcpProfileManagerModule","id":"module-UiAcpProfileManagerModule-ddb3af13a712770ff251d40c5c65ec0973b197ead4155ddbc7c7da4ab82928fad2518fc3f3625c465ca3859dcdde39bc1ceabcea30fded43061a8a2fab8a40c9","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/user-auth-manager/profile-manager.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\n// Modules\\nimport { UiPipesModule } from \'../pipes/pipe.module\';\\nimport { AcpFeatureManagementModule } from \'@app/modules/shared/feature-management/feature-management.module\';\\n// Components\\nimport { UiAcpProfileManagerComponent } from \'./profile-manager.component\';\\nimport { UiAcpSessionListComponent } from \'./components/session-list/session-list.component\';\\nimport { UiAcpSessionItemComponent } from \'./components/session-item/session-item.component\';\\nimport { UiAcpUserDetailsComponent } from \'./components/user-details/user-details.component\';\\nimport { UiAcpProfileSectionComponent } from \'./components/profile-section/profile-section.component\';\\nimport { UiAcpContactInformationSectionComponent } from \'./components/contact-information-section/contact-information-section.component\';\\nimport { UiAcpOrganizationSectionComponent } from \'./components/organizations-section/organizations-section.component\';\\nimport { UiTreeViewComponent } from \'./components/tree-view/tree-view.component\';\\nimport { UiOffcanvasComponent } from \'./components/offcanvas/offcanvas.component\';\\n// Services\\nimport { AcpHttpUtilsService } from \'@app/core/_base/crud\';\\nimport { UiPersonService } from \'./services/person.service\';\\n// Enums\\nimport { UiAcpAuthUserEnum } from \'./enums/auth-route.enum\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiAcpConfirmDeleteSessionModalComponent } from\\n    \'./components/confirm-delete-session-modal/confirm-delete-session-modal.component\';\\n\\nconst routes: Routes = [\\n    {\\n        path: \'\',\\n        component: UiAcpProfileManagerComponent,\\n    },\\n];\\n\\n@NgModule({\\n    declarations: [\\n        UiAcpProfileManagerComponent,\\n        UiAcpSessionListComponent,\\n        UiAcpSessionItemComponent,\\n        UiAcpUserDetailsComponent,\\n        UiAcpProfileSectionComponent,\\n        UiAcpContactInformationSectionComponent,\\n        UiAcpOrganizationSectionComponent,\\n        UiAcpConfirmDeleteSessionModalComponent,\\n        UiTreeViewComponent,\\n        UiOffcanvasComponent,\\n    ],\\n    providers: [AcpHttpUtilsService],\\n    imports: [\\n        CommonModule,\\n        RouterModule.forChild(routes),\\n        FormsModule,\\n        HttpClientModule,\\n        ReactiveFormsModule,\\n        ReactiveFormsModule,\\n        TranslateModule.forChild(),\\n        NgbModule,\\n        UiPipesModule,\\n        AcpFeatureManagementModule,\\n    ],\\n    exports: [UiOffcanvasComponent, UiTreeViewComponent],\\n})\\nexport class UiAcpProfileManagerModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAcpConfirmDeleteSessionModalComponent"},{"name":"UiAcpContactInformationSectionComponent"},{"name":"UiAcpOrganizationSectionComponent"},{"name":"UiAcpProfileManagerComponent"},{"name":"UiAcpProfileSectionComponent"},{"name":"UiAcpSessionItemComponent"},{"name":"UiAcpSessionListComponent"},{"name":"UiAcpUserDetailsComponent"},{"name":"UiOffcanvasComponent"},{"name":"UiTreeViewComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiOffcanvasComponent"},{"name":"UiTreeViewComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAlertModule","id":"module-UiAlertModule-710638355747f0c8fd4a893fcf8548a5297c21554bb136831da98fbfa4ad05acfa4b26b8a49422bc97bc0ed06a1691910e1845099a7ac27cdf0ee7a1ad147953","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/alert/alert.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { UiAlertComponent } from \'./alert.component\';\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiFormModule } from \'../form/form.module\';\\nimport { UiButtonModule } from \'../button/button.module\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\n@NgModule({\\n    declarations: [UiAlertComponent],\\n    imports: [CommonModule, NgbModule, UiFormModule, UiButtonModule, TranslateModule],\\n    exports: [UiAlertComponent, TranslateModule],\\n})\\nexport class UiAlertModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAlertComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiFormModule"}]},{"type":"exports","elements":[{"name":"UiAlertComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAnalyticsModule","id":"module-UiAnalyticsModule-3d9f6fdfc9ab5e7f736807d88ea6a61e89431097aff453b017a5799db75ba7e2b338ceed174229ff38763c4005331d7663d32c4632c5fc2e5e4d99baf017862f","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/services/analytics/analytics.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\n\\n@NgModule({\\n    imports: [],\\n    exports: [],\\n    declarations: [],\\n    providers: [],\\n})\\n/**\\n * @deprecated\\n */\\nexport class UiAnalyticsModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuth0Module","id":"module-UiAuth0Module-827fa0c196be99dec7380e04096a732708ea5ae3ad89d765c59c7b65a00c4b96def82ad2ea46099b3832922a5b635d239e9480ee32aafe3fae2ffb53a7fa67c0","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/auth0/auth0.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { UiAuth0CallbackComponent } from \'./components/callback.component\';\\nimport { UiAuth0RoutingModule } from \'./auth0-routing.module\';\\n\\n@NgModule({\\n    declarations: [UiAuth0CallbackComponent],\\n    imports: [\\n        CommonModule,\\n        UiAuth0RoutingModule,\\n    ]\\n})\\nexport class UiAuth0Module { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAuth0CallbackComponent"}]},{"type":"imports","elements":[{"name":"UiAuth0RoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuth0RoutingModule","id":"module-UiAuth0RoutingModule-6706f17ce9460f2cbc24fff13414c3bdd255736da4986ae4c8bdd23bdf5b5375c3458c985b82cc2fec220ebe745ef5b7266f8ad5ed374d79fc3cdc47d2a0908d","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/auth0/auth0-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { UiAuth0CallbackComponent } from \'./components/callback.component\';\\n\\nconst routes: Routes = [\\n    { path: \'\', component: UiAuth0CallbackComponent }\\n];\\n\\n@NgModule({\\n    imports: [\\n        RouterModule.forChild(routes)],\\n    exports: [RouterModule],\\n})\\nexport class UiAuth0RoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuthentificationModule","id":"module-UiAuthentificationModule-524ac5e2be3e4e633fd131f0b43f1cfbba4b7df9a39205e607663e35092fa58fb41a6c1017ee4e30a810ba087a857a12eacba404eac4d82947412a3d05c6e4de","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/authentification.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { UiAuthentificationRoutingModule } from \'./authentification-routing.module\';\\nimport { TranslateLoader, TranslateModule, TranslatePipe } from \'@ngx-translate/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { TranslateHttpLoader } from \'@ngx-translate/http-loader\';\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\n\\nimport { UiOneTimePinComponent } from \'./components/login/one-time-pin.component\';\\nimport { UiOneTimePinGenerationComponent } from \'./pages/one-time-pin-generation/one-time-pin-generation.component\';\\nimport { UiOneTimePinInputComponent } from \'./pages/one-time-pin-input/one-time-pin-input.component\';\\nimport { UiAssenteeLoginComponent } from \'./pages/ascentee-login/ascentee-login.component\';\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\nimport { AcpComponentsModule } from \'@app/modules/developer-hub/components/components.module\';\\nimport { UiToastNotificationModule } from \'@lib/services/toast-notification/toast-notification.module\';\\nimport { UiPrivacyAgreementModalComponent } from \'./components/modals/privacy-agreement-modal.component\';\\nimport { UiAreYouSureModalComponent } from \'./components/modals/are-you-sure-modal.component\';\\n\\n// AoT requires an exported function for factories\\nexport const uiHttpLoaderFactory = (httpClient: HttpClient) => {\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\n};\\n\\n@NgModule({\\n    declarations: [\\n        UiOneTimePinComponent,\\n        UiOneTimePinGenerationComponent,\\n        UiOneTimePinInputComponent,\\n        UiAssenteeLoginComponent,\\n        UiPrivacyAgreementModalComponent,\\n        UiAreYouSureModalComponent\\n    ],\\n    imports: [\\n        AcpComponentsModule,\\n        CommonModule,\\n        FlexLayoutModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        UiAuthentificationRoutingModule,\\n        UiFormControlsModule,\\n        TranslateModule.forChild(),\\n        // TranslateModule.forChild({\\n        //     loader: {\\n        //         provide: TranslateLoader,\\n        //         useFactory: uiHttpLoaderFactory,\\n        //         deps: [HttpClient],\\n        //     },\\n        //     isolate: true,\\n        //     extend: true,\\n        // }),\\n        UiToastNotificationModule\\n    ],\\n    exports: [TranslateModule, UiOneTimePinComponent, UiPrivacyAgreementModalComponent, UiAreYouSureModalComponent],\\n    providers: [TranslatePipe],\\n})\\nexport class UiAuthentificationModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiAreYouSureModalComponent"},{"name":"UiAssenteeLoginComponent"},{"name":"UiOneTimePinComponent"},{"name":"UiOneTimePinGenerationComponent"},{"name":"UiOneTimePinInputComponent"},{"name":"UiPrivacyAgreementModalComponent"}]},{"type":"imports","elements":[{"name":"UiAuthentificationRoutingModule"},{"name":"UiFormControlsModule"},{"name":"UiToastNotificationModule"}]},{"type":"exports","elements":[{"name":"UiAreYouSureModalComponent"},{"name":"UiOneTimePinComponent"},{"name":"UiPrivacyAgreementModalComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiAuthentificationRoutingModule","id":"module-UiAuthentificationRoutingModule-6d06bf3e806c864954963c51557a8cdb0bb35fa66832a490e9b35ff2143719ba98bd3192a3bec6f6fae31cd14a12eb218abfbb2814e34517f0e2a37ffb2121ab","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/authentification/authentification-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { UiAssenteeLoginComponent } from \'./pages/ascentee-login/ascentee-login.component\';\\nimport { UiOneTimePinGenerationComponent } from \'./pages/one-time-pin-generation/one-time-pin-generation.component\';\\nimport { UiOneTimePinInputComponent } from \'./pages/one-time-pin-input/one-time-pin-input.component\';\\n\\nconst routes: Routes = [\\n    { path: \'\', component: UiOneTimePinGenerationComponent },\\n    { path: \'passcode\', component: UiOneTimePinInputComponent },\\n    { path: \'login\', component: UiAssenteeLoginComponent }\\n];\\n\\n@NgModule({\\n    imports: [RouterModule.forChild(routes)],\\n    exports: [RouterModule],\\n})\\nexport class UiAuthentificationRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiButtonModule","id":"module-UiButtonModule-de878cdcd916ea32675265da748e54563c163738caa49e4b661cdfc0b58e9f6fe6d0f724312884b6e8e57d379d6dea9f04238a09c325ad262e40ee50a513dede","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/button/button.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { UiButtonComponent } from \'./components/button/button.component\';\\nimport { UiActionButtonsNewComponent } from \'./components/action-buttons/action-buttons.component\';\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\n\\n@NgModule({\\n    declarations: [UiButtonComponent, UiActionButtonsNewComponent],\\n    imports: [CommonModule, NgbModule, TranslateModule.forChild()],\\n    exports: [UiButtonComponent, UiActionButtonsNewComponent],\\n})\\nexport class UiButtonModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiActionButtonsNewComponent"},{"name":"UiButtonComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiActionButtonsNewComponent"},{"name":"UiButtonComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiCardModule","id":"module-UiCardModule-af20af8636da242dd562b5409cc821597f05f97609c2c5f2d9d37c4f0f1ea55168c51a10dc2a0aaa1ca921bffae63e547a4a07741960e77e0dea340bdac0471f","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/card/card.module.ts","methods":[],"sourceCode":"\\nimport { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { UiCardComponent } from \'./components/card/card.component\';\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiButtonModule } from \'../button/button.module\';\\n\\n@NgModule({\\n    declarations: [UiCardComponent],\\n    imports: [CommonModule, NgbModule, TranslateModule, UiButtonModule],\\n    exports: [TranslateModule, UiCardComponent],\\n})\\nexport class UiCardModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiCardComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"}]},{"type":"exports","elements":[{"name":"UiCardComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiConsentModule","id":"module-UiConsentModule-45b4c8b8684815c64c70433c0ee65dee6dc49f9bb49ae187892d9f5312b11be338605f50caf14c507fa9a9df9c7b4df0a15d85551685d2e02a7b1647ca643531","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/consent/user-consent.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { UiConsentPageComponent } from \'./pages/user-consent-page/user-consent-page.component\';\\nimport { UiConsentRoutingModule } from \'./user-consent-routing\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { UiAuthentificationModule } from \'../authentification\';\\n\\n@NgModule({\\n    declarations: [UiConsentPageComponent],\\n    imports: [CommonModule, TranslateModule, UiConsentRoutingModule, UiAuthentificationModule],\\n    exports: [TranslateModule, UiConsentPageComponent],\\n})\\nexport class UiConsentModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiConsentPageComponent"}]},{"type":"imports","elements":[{"name":"UiAuthentificationModule"},{"name":"UiConsentRoutingModule"}]},{"type":"exports","elements":[{"name":"UiConsentPageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiConsentRoutingModule","id":"module-UiConsentRoutingModule-a6bd29099fdb024ed5b6f729baa894b146d8e6b4f18a0e8bf5205a4d80fddfe1d843456d5e4ae8f03352457010608968bdd15c7230ee4e5a3201813c8eaed335","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/consent/user-consent-routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\n\\nimport { UiConsentPageComponent } from \'./pages/user-consent-page/user-consent-page.component\';\\n\\nconst routes: Routes = [{ path: \'\', component: UiConsentPageComponent}];\\n\\n@NgModule({\\n    imports: [RouterModule.forChild(routes)],\\n    exports: [RouterModule],\\n})\\nexport class UiConsentRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiDashboardModule","id":"module-UiDashboardModule-4be6d6f7ba7c17af197a2b29f8111fe8dfdeff9cafd7c1d1ef8d710723cadd72aaa5eeee7d63700e6f3b65bc7c229120693db7d61bf9b28a1a2e0dac2842bf3f","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/dashboard/dashboard.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { UiDashboardRoutingModule } from \'./dashboard-routing.module\';\\nimport { UiDashboardComponent } from \'./dashboard.component\';\\nimport { UiButtonModule } from \'../button/button.module\';\\nimport { UiCardModule } from \'../card/card.module\';\\nimport { UiFormModule } from \'../form/form.module\';\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\n\\n@NgModule({\\n    declarations: [UiDashboardComponent],\\n    imports: [CommonModule, UiDashboardRoutingModule, TranslateModule, UiCardModule, UiFormModule, UiButtonModule, UiFormControlsModule],\\n    exports: [UiDashboardComponent, TranslateModule],\\n})\\nexport class UiDashboardModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiDashboardComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiCardModule"},{"name":"UiDashboardRoutingModule"},{"name":"UiFormControlsModule"},{"name":"UiFormModule"}]},{"type":"exports","elements":[{"name":"UiDashboardComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiDashboardRoutingModule","id":"module-UiDashboardRoutingModule-6dd72aec7c1480d32e9ceba64cba122359eb93df1fc1035f6597be840b2410509bfda11620eebd8c555aae01d03d9c3a8737811c5ce101fcb43260f4cb76f029","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/dashboard/dashboard-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { UiDashboardComponent } from \'./dashboard.component\';\\n\\nconst routes: Routes = [\\n    {\\n        path: \'\',\\n        component: UiDashboardComponent,\\n    }\\n];\\n\\n@NgModule({\\n    imports: [RouterModule.forChild(routes)],\\n    exports: [RouterModule],\\n})\\nexport class UiDashboardRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiErrorModule","id":"module-UiErrorModule-9a3b829d8e84b744efaade6cdf6aab3a1a1b35c03340611199d82d79f73f40d42b56b5962ed8ac234d808a45b10656aff89b0d6e64e446e71cb67c57b3da7f50","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/error/error.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { UiErrorRoutingModule } from \'./error-routing.module\';\\nimport { UiErrorComponent } from \'./error.component\';\\n\\n@NgModule({\\n    declarations: [UiErrorComponent],\\n    imports: [CommonModule, UiErrorRoutingModule, TranslateModule],\\n    exports: [UiErrorComponent, TranslateModule],\\n})\\nexport class UiErrorModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiErrorComponent"}]},{"type":"imports","elements":[{"name":"UiErrorRoutingModule"}]},{"type":"exports","elements":[{"name":"UiErrorComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiErrorRoutingModule","id":"module-UiErrorRoutingModule-79b7edc69d60e118e24e00b734651ff68f113656c9e5e9078bfb91330ae0152016fa5aca0659c2b7b6fb2e00b7cedf917c0c287497987c2c9ae1785931367be3","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/error/error-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { UiErrorComponent } from \'./error.component\';\\n\\nconst routes: Routes = [\\n    {\\n        path: \'\',\\n        component: UiErrorComponent,\\n    }\\n];\\n\\n@NgModule({\\n    imports: [RouterModule.forChild(routes)],\\n    exports: [RouterModule],\\n})\\nexport class UiErrorRoutingModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFeatureFlagModule","id":"module-UiFeatureFlagModule-09d3a9906fe16f518994084948e4d488744ab6d8e7f81aa00dd825c72003c2f112866a384de9e77142c7f6d7f672984a95f6c7a6a1f3502be2fa44a8e288c167","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/feature-flags/feature-flag.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { UiIsFlagOnDirective } from \'./directives/is-flag-on.directive\';\\nimport { UiIsFlagOffDirective } from \'./directives/is-flag-off.directive\';\\nimport { CommonModule } from \'@angular/common\';\\n\\n@NgModule({\\n    declarations: [UiIsFlagOnDirective, UiIsFlagOffDirective],\\n    imports: [CommonModule],\\n    exports: [UiIsFlagOnDirective, UiIsFlagOffDirective],\\n})\\nexport class UiFeatureFlagModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiIsFlagOffDirective"},{"name":"UiIsFlagOnDirective"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiIsFlagOffDirective"},{"name":"UiIsFlagOnDirective"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFileUploadModule","id":"module-UiFileUploadModule-a03bede11231ae6528a6bd05dfadc4ec1f7b259fd7a420524f052349de0fa67288a44f63e2b2c4f6b2c67da2c64c9fae9b82eedd202685f7dab3f029994ab370","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/file-upload/file-upload.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { NgbTooltipModule } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiFormModule } from \'../form/form.module\';\\nimport { UiFileUploadComponent } from \'./components/file-upload/file-upload.component\';\\nimport { UiDragDropDirective } from \'./directives/drag-drop.directive\';\\n\\n@NgModule({\\n    declarations: [UiFileUploadComponent, UiDragDropDirective],\\n    imports: [CommonModule, NgbTooltipModule, UiFormModule, TranslateModule],\\n    exports: [UiFileUploadComponent, UiDragDropDirective, TranslateModule],\\n})\\nexport class UiFileUploadModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiDragDropDirective"},{"name":"UiFileUploadComponent"}]},{"type":"imports","elements":[{"name":"UiFormModule"}]},{"type":"exports","elements":[{"name":"UiDragDropDirective"},{"name":"UiFileUploadComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFilterModule","id":"module-UiFilterModule-da9a40e51047f1d6195bd4c5d281ab8d84769ae246c29e70439278b773e19953460b8ab03d70dc86f248a6ab1299cfa390b59a3fa11d044fd26fc6fe5b42b399","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/filter/filter.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { UiQuickFilterComponent } from \'./quick-filter/quick-filter.component\';\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\nimport { UiGridFilterComponent } from \'./grid-filter/grid-filter.component\';\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { UiGridModule } from \'../grid/grid.module\';\\n\\n@NgModule({\\n    declarations: [UiQuickFilterComponent, UiGridFilterComponent],\\n    imports: [CommonModule, UiFormControlsModule, TranslateModule, NgbModule, UiGridModule],\\n    exports: [UiQuickFilterComponent, UiGridFilterComponent],\\n})\\nexport class UiFilterModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiGridFilterComponent"},{"name":"UiQuickFilterComponent"}]},{"type":"imports","elements":[{"name":"UiFormControlsModule"},{"name":"UiGridModule"}]},{"type":"exports","elements":[{"name":"UiGridFilterComponent"},{"name":"UiQuickFilterComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFormControlsModule","id":"module-UiFormControlsModule-de7830de48f226d046c0b42d438ea0c79ff32c020ca9ddb8d76b54aac156ae67759a648371f5cd329abf17fac72031f9c868fbbfd9f14c5b1dbb6c146cb0e49e","description":"","deprecationMessage":"Use `UiFormModule` for ASP","deprecated":true,"file":"libs/ui/src/lib/modules/form-controls/form-controls.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\n// Ng Bootstrap\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\n// Ngx Translate\\nimport { TranslateModule } from \'@ngx-translate/core\';\\n// Quill\\nimport { QuillModule } from \'ngx-quill\';\\n// Modules\\nimport { ClickOutsideModule } from \'ng-click-outside\';\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\n// Pipes\\nimport { UiTruncatePipe } from \'./pipes/truncate.pipe\';\\nimport { UiMonthNamePipe } from \'./pipes/month-name.pipe\';\\n// Components\\nimport { UiActionButtonsComponent } from \'./action-buttons/action-buttons.component\';\\nimport { UiCheckboxComponent } from \'./checkbox/checkbox.component\';\\nimport { UiDatepickerComponent } from \'./datepicker/datepicker.component\';\\nimport { UiDatePickerPlusComponent } from \'./date-picker-plus/ui-date-picker-plus.component\';\\nimport { UiDropdownPlusComponent } from \'./dropdown-plus/dropdown-plus.component\';\\nimport { UiFormBaseComponent } from \'./form-base/form-base.component\';\\nimport { UiFormControlBaseComponent } from \'./form-control-base/form-control-base.component\';\\nimport { UiMultiPillComponent } from \'./pills/components/multi-pill/multi-pill.component\';\\nimport { UiPillComponent } from \'./pills/components/pill/pill.component\';\\nimport { UiProgressIndicatorComponent } from \'./progress-indicator/progress-indicator.component\';\\nimport { UiRichTextEditorComponent } from \'./rich-text-editor/rich-text-editor.component\';\\nimport { UiRichTextEditorToolbarComponent } from \'./rich-text-editor/components/toolbar/rich-text-editor-toolbar.component\';\\nimport { UiTagsInputComponent } from \'./tags-input/tags-input.component\';\\nimport { UiTextAreaComponent } from \'./text-area/text-area.component\';\\nimport { UiTextInputComponent } from \'./text-input/text-input.component\';\\nimport { UiDropdownComponent } from \'./dropdown-multi-select/dropdown-multi-select.component\';\\n\\n// Deprecated - Will be removed in the future\\nimport { UiDropdownOldFormControlsComponent } from \'./dropdown/dropdown.component\';\\n\\n/**\\n * @deprecated Use `UiFormModule` for ASP\\n */\\n@NgModule({\\n    declarations: [\\n        UiActionButtonsComponent,\\n        UiCheckboxComponent,\\n        UiDatepickerComponent,\\n        UiDatePickerPlusComponent,\\n        UiDropdownOldFormControlsComponent, // use UiDropdownComponent instead\\n        UiDropdownPlusComponent,\\n        UiFormBaseComponent,\\n        UiFormControlBaseComponent,\\n        UiMonthNamePipe,\\n        UiMultiPillComponent,\\n        UiPillComponent,\\n        UiProgressIndicatorComponent,\\n        UiRichTextEditorComponent,\\n        UiRichTextEditorToolbarComponent,\\n        UiTagsInputComponent,\\n        UiTextAreaComponent,\\n        UiTextInputComponent,\\n        UiTruncatePipe,\\n        UiDropdownComponent, // This is the new dropdown component\\n    ],\\n    imports: [\\n        ClickOutsideModule,\\n        CommonModule,\\n        FlexLayoutModule,\\n        FormsModule,\\n        NgbModule,\\n        QuillModule,\\n        ReactiveFormsModule,\\n        TranslateModule,\\n    ],\\n    exports: [\\n        UiActionButtonsComponent,\\n        UiCheckboxComponent,\\n        UiDatepickerComponent,\\n        UiDatePickerPlusComponent,\\n        UiDropdownOldFormControlsComponent, // use UiDropdownComponent instead\\n        UiDropdownPlusComponent,\\n        UiMultiPillComponent,\\n        UiPillComponent,\\n        UiProgressIndicatorComponent,\\n        UiRichTextEditorComponent,\\n        UiRichTextEditorToolbarComponent,\\n        UiTagsInputComponent,\\n        UiTextAreaComponent,\\n        UiTextInputComponent,\\n        UiTruncatePipe,\\n        UiDropdownComponent, // This is the new dropdown component\\n    ],\\n})\\nexport class UiFormControlsModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiActionButtonsComponent"},{"name":"UiCheckboxComponent"},{"name":"UiDatePickerPlusComponent"},{"name":"UiDatepickerComponent"},{"name":"UiDropdownComponent"},{"name":"UiDropdownOldFormControlsComponent"},{"name":"UiDropdownPlusComponent"},{"name":"UiFormBaseComponent"},{"name":"UiFormControlBaseComponent"},{"name":"UiMonthNamePipe"},{"name":"UiMultiPillComponent"},{"name":"UiPillComponent"},{"name":"UiProgressIndicatorComponent"},{"name":"UiRichTextEditorComponent"},{"name":"UiRichTextEditorToolbarComponent"},{"name":"UiTagsInputComponent"},{"name":"UiTextAreaComponent"},{"name":"UiTextInputComponent"},{"name":"UiTruncatePipe"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiActionButtonsComponent"},{"name":"UiCheckboxComponent"},{"name":"UiDatePickerPlusComponent"},{"name":"UiDatepickerComponent"},{"name":"UiDropdownComponent"},{"name":"UiDropdownOldFormControlsComponent"},{"name":"UiDropdownPlusComponent"},{"name":"UiMultiPillComponent"},{"name":"UiPillComponent"},{"name":"UiProgressIndicatorComponent"},{"name":"UiRichTextEditorComponent"},{"name":"UiRichTextEditorToolbarComponent"},{"name":"UiTagsInputComponent"},{"name":"UiTextAreaComponent"},{"name":"UiTextInputComponent"},{"name":"UiTruncatePipe"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiFormModule","id":"module-UiFormModule-46c5f220d7c55778ca8720d6455f1a285bc11f7f909352ca4f23d2b0465efd81bbd40898a4e37c28324a429e99e1254bb0f30c3d2127a53b12ccaec53bc6636e","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/form/form.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\n// Ng Bootstrap\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\n// Ngx Translate\\nimport { TranslateModule } from \'@ngx-translate/core\';\\n// Quill\\nimport { QuillModule } from \'ngx-quill\';\\n// Click Outside\\nimport { ClickOutsideModule } from \'ng-click-outside\';\\n// Components\\nimport { UiFormControlBaseComponent } from \'./form-control-base/form-control-base.component\';\\nimport { UiRadioButtonComponent } from \'./radio-button/radio-button.component\';\\nimport { UiRichTextEditorComponent } from \'./rich-text-editor/rich-text-editor.component\';\\nimport { UiRichTextEditorToolbarComponent } from \'./rich-text-editor/components/toolbar/rich-text-editor-toolbar.component\';\\nimport { UiTextAreaComponent } from \'./text-area/text-area.component\';\\nimport { UiTextInputComponent } from \'./text-input/text-input.component\';\\nimport { UiToggleComponent } from \'./toggle/toggle.component\';\\n\\n@NgModule({\\n    declarations: [\\n        UiFormControlBaseComponent,\\n        UiRadioButtonComponent,\\n        UiRichTextEditorComponent,\\n        UiRichTextEditorToolbarComponent,\\n        UiTextAreaComponent,\\n        UiTextInputComponent,\\n        UiToggleComponent,\\n    ],\\n    imports: [\\n        ClickOutsideModule,\\n        CommonModule,\\n        FlexLayoutModule,\\n        FormsModule,\\n        NgbModule,\\n        QuillModule,\\n        ReactiveFormsModule,\\n        TranslateModule,\\n    ],\\n    exports: [\\n        UiFormControlBaseComponent,\\n        UiRadioButtonComponent,\\n        UiRichTextEditorComponent,\\n        UiRichTextEditorToolbarComponent,\\n        UiTextAreaComponent,\\n        UiTextInputComponent,\\n        UiToggleComponent,\\n    ],\\n})\\nexport class UiFormModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiRadioButtonComponent"},{"name":"UiToggleComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiRadioButtonComponent"},{"name":"UiToggleComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiGlobalSearchModule","id":"module-UiGlobalSearchModule-f8335a2334ae0bf912d4c6a4251c200ffdd4629267d3bec65003ce6a1d44049bebc2ed9581915656fe6dd7a21ef94e2d36816f5a478a435171d624c849f2580e","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/global-search/global-search.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { ScrollingModule } from \'@angular/cdk/scrolling\';\\n// Translate\\nimport { TranslateModule } from \'@ngx-translate/core\';\\n// Modules\\nimport { UiPipesModule } from \'@lib/modules/pipes/pipe.module\';\\n// Ng Bootstrap\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\n// Components\\nimport { UiGlobalSearchComponent } from \'./global-search.component\';\\nimport {\\n    UiGlobalSearchResultsPageComponent\\n} from \'./components/global-search-results-page/global-search-results-page.component\';\\nimport {\\n    UiGlobalSearchResultsItemComponent\\n} from \'./components/global-search-results-item/global-search-results-item.component\';\\n\\nconst routes: Routes = [{ path: \'\', component: UiGlobalSearchResultsPageComponent }];\\n\\n@NgModule({\\n    declarations: [UiGlobalSearchComponent, UiGlobalSearchResultsPageComponent, UiGlobalSearchResultsItemComponent],\\n    imports: [\\n        CommonModule,\\n        NgbModule,\\n        FormsModule,\\n        TranslateModule,\\n        RouterModule.forChild(routes),\\n        ScrollingModule,\\n        UiPipesModule,\\n    ],\\n    exports: [UiGlobalSearchComponent, UiGlobalSearchResultsPageComponent],\\n})\\nexport class UiGlobalSearchModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiGlobalSearchComponent"},{"name":"UiGlobalSearchResultsItemComponent"},{"name":"UiGlobalSearchResultsPageComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiGlobalSearchComponent"},{"name":"UiGlobalSearchResultsPageComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiGridModule","id":"module-UiGridModule-d0988e94b93ec97bcf0fb286de477ef1e5959e45733cff06926e59647e35c04f12f7eea6669203cd0edd754a6d528c80ecd906d78c08676d53022f1885149887","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/grid/grid.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n// NGX Translate\\nimport { TranslateModule } from \'@ngx-translate/core\';\\n// NG Bootstrap\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\n// Ag-Grid\\nimport { AgGridModule } from \'ag-grid-angular\';\\n// Components\\nimport { UiActionButtonsRendererComponent } from \'./components/action-buttons-renderer/action-buttons-renderer.component\';\\nimport { UiComboboxRendererComponent } from \'./components/combobox-renderer/combobox-renderer.component\';\\nimport { UiCustomHeaderComponent } from \'./components/custom-header/custom-header.component\';\\nimport { UiCustomMultiSelectHeaderComponent } from \'./components/custom-multiselect-header/custom-multiselect-header.component\';\\nimport { UiDropdownRendererComponent } from \'./components/dropdown-renderer/dropdown-renderer.component\';\\nimport { UiGridComponent } from \'./components/grid/grid.component\';\\nimport { UiGridHeaderButtonsComponent } from \'./components/grid-header-buttons/grid-header-buttons.component\';\\nimport { UiGridHeaderComponent } from \'./components/grid-header/grid-header.component\';\\nimport { UiPillRendererComponent } from \'./components/pill-renderer/pill-renderer.component\';\\nimport { UiTextCellRendererComponent } from \'./components/text-cell-renderer/text-cell-renderer.component\';\\nimport { UiCustomLoadingCellRendererComponent } from \'./components/custom-loading-cell-renderer/custom-loading-cell-renderer.component\';\\n\\n@NgModule({\\n    declarations: [\\n        UiActionButtonsRendererComponent,\\n        UiComboboxRendererComponent,\\n        UiCustomHeaderComponent,\\n        UiCustomMultiSelectHeaderComponent,\\n        UiDropdownRendererComponent,\\n        UiGridComponent,\\n        UiGridHeaderButtonsComponent,\\n        UiGridHeaderComponent,\\n        UiPillRendererComponent,\\n        UiTextCellRendererComponent,\\n        UiCustomLoadingCellRendererComponent\\n    ],\\n    imports: [CommonModule, TranslateModule, NgbModule, AgGridModule],\\n    exports: [\\n        UiActionButtonsRendererComponent,\\n        UiCustomHeaderComponent,\\n        UiCustomMultiSelectHeaderComponent,\\n        UiGridComponent,\\n        UiGridHeaderButtonsComponent,\\n        UiGridHeaderComponent,\\n        UiPillRendererComponent,\\n        UiTextCellRendererComponent,\\n        UiCustomLoadingCellRendererComponent\\n    ],\\n})\\nexport class UiGridModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiActionButtonsRendererComponent"},{"name":"UiComboboxRendererComponent"},{"name":"UiCustomHeaderComponent"},{"name":"UiCustomLoadingCellRendererComponent"},{"name":"UiCustomMultiSelectHeaderComponent"},{"name":"UiDropdownRendererComponent"},{"name":"UiGridComponent"},{"name":"UiGridHeaderButtonsComponent"},{"name":"UiGridHeaderComponent"},{"name":"UiPillRendererComponent"},{"name":"UiTextCellRendererComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiActionButtonsRendererComponent"},{"name":"UiCustomHeaderComponent"},{"name":"UiCustomLoadingCellRendererComponent"},{"name":"UiCustomMultiSelectHeaderComponent"},{"name":"UiGridComponent"},{"name":"UiGridHeaderButtonsComponent"},{"name":"UiGridHeaderComponent"},{"name":"UiPillRendererComponent"},{"name":"UiTextCellRendererComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiLayout2Module","id":"module-UiLayout2Module-f5daee02de3dade94fc5b484b0d2dc094473cfc4b3bf0eee5d45cfc4462f7fa9d51dc3edbaacf3a326a8af5e74da46421b5e3ac09c101b1289d0232459f7f395","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/layout2/layout2.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { RouterModule } from \'@angular/router\';\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\nimport { UiLayout2Component } from \'./components/layout2/layout2.component\';\\nimport { UiPageHeaderComponent } from \'./components/page-header/page-header.component\';\\nimport { UiToastNotificationModule } from \'@lib/services/toast-notification/toast-notification.module\';\\nimport { UiLayoutModule } from \'../layout/layout.module\';\\nimport { UiPageFooterComponent } from \'./components/page-footer/page-footer.component\';\\nimport { UiFormModule } from \'../form/form.module\';\\nimport { UiSubsidiarySelectorComponent } from \'./components/subsidiary-selector/subsidiary-selector.component\';\\nimport { UiFormControlsModule } from \'../form-controls/form-controls.module\';\\nimport { UiButtonModule } from \'../button/button.module\';\\nimport { UiFeatureFlagModule } from \'../feature-flags/feature-flag.module\';\\n\\n@NgModule({\\n    declarations: [UiLayout2Component, UiPageHeaderComponent, UiPageFooterComponent, UiSubsidiarySelectorComponent],\\n    imports: [\\n        CommonModule,\\n        RouterModule,\\n        TranslateModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        FlexLayoutModule,\\n        NgbModule,\\n        UiToastNotificationModule,\\n        UiFeatureFlagModule,\\n        UiLayoutModule,\\n        UiFormModule,\\n        UiFormControlsModule,\\n        UiButtonModule\\n    ],\\n    exports: [TranslateModule, UiLayout2Component],\\n})\\nexport class UiLayout2Module {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiLayout2Component"},{"name":"UiPageHeaderComponent"},{"name":"UiSubsidiarySelectorComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiFeatureFlagModule"},{"name":"UiFormControlsModule"},{"name":"UiFormModule"},{"name":"UiLayoutModule"},{"name":"UiToastNotificationModule"}]},{"type":"exports","elements":[{"name":"UiLayout2Component"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiLayoutModule","id":"module-UiLayoutModule-c0ed21a998144f0014f477d2c626b5eecddce535be27056dc626067aca9aeaffce15feb7894753b887ee18758af1aa88012e8c250dab050aaa20a6789d2b27bc","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/layout/layout.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { FlexLayoutModule } from \'@angular/flex-layout\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { RouterModule } from \'@angular/router\';\\n// Ngb\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\n// Ngx Translate\\nimport { TranslateModule } from \'@ngx-translate/core\';\\n// Modules\\nimport { UiPermissionsModule } from \'@lib/modules/permissions/permissions.module\';\\nimport { UiGlobalSearchModule } from \'@lib/modules/global-search/global-search.module\';\\nimport { UiToastNotificationModule } from \'@lib/services/toast-notification/toast-notification.module\';\\nimport { UiPipesModule } from \'../pipes/pipe.module\';\\n// Components\\nimport { UiLayoutComponent } from \'./layout.component\';\\nimport { UiTabNavContainerComponent } from \'./components/tab-nav-container/tab-nav-container.component\';\\nimport { UiTabNavComponent } from \'./components/tab-nav/tab-nav.component\';\\nimport { UiToolNavComponent } from \'./components/tool-nav/tool-nav.component\';\\nimport { UiLanguageSwitcherComponent } from \'./components/language-switcher/language-switcher.component\';\\nimport { UiFormControlsModule } from \'@lib/modules/form-controls/form-controls.module\';\\n//TODO-remove: import { UiModalBaseComponent } from \'../modal/components/modal-base/modal-base.component\';\\nimport { UiSupportModalComponent } from \'./components/support-modal/support-modal.component\';\\nimport { UiSupportFormComponent } from \'./components/support-form/support-form.component\';\\nimport { UiFeedbackFormComponent } from \'./components/feedback-form/feedback-form.component\';\\nimport { UiFeedbackModalComponent } from \'./components/feedback-modal/feedback-modal.component\';\\nimport { UiPageHeaderComponent } from \'./components/page-header/page-header.component\';\\nimport { UiPageFooterComponent } from \'./components/page-footer/page-footer.component\';\\nimport { UiFormModule } from \'../form/form.module\';\\nimport { UiButtonModule } from \'../button/button.module\';\\n\\n@NgModule({\\n    declarations: [\\n        UiLayoutComponent,\\n        UiTabNavContainerComponent,\\n        UiTabNavComponent,\\n        UiToolNavComponent,\\n        UiLanguageSwitcherComponent,\\n        //TODO-remove: UiModalBaseComponent,\\n        UiSupportFormComponent,\\n        UiSupportModalComponent,\\n        UiFeedbackFormComponent,\\n        UiFeedbackModalComponent,\\n        UiPageHeaderComponent,\\n        UiPageFooterComponent,\\n    ],\\n    imports: [\\n        CommonModule,\\n        RouterModule,\\n        TranslateModule,\\n        FormsModule,\\n        ReactiveFormsModule,\\n        FlexLayoutModule,\\n        NgbModule,\\n        UiPermissionsModule,\\n        UiGlobalSearchModule,\\n        UiToastNotificationModule,\\n        UiPipesModule,\\n        UiFormControlsModule,\\n        UiFormControlsModule,\\n        UiFormModule,\\n        UiButtonModule,\\n    ],\\n    exports: [\\n        TranslateModule,\\n        UiLayoutComponent,\\n        UiTabNavContainerComponent,\\n        UiLanguageSwitcherComponent,\\n        //TODO-remove: UiModalBaseComponent,\\n        UiTabNavComponent,\\n    ],\\n})\\nexport class UiLayoutModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiFeedbackFormComponent"},{"name":"UiFeedbackModalComponent"},{"name":"UiLanguageSwitcherComponent"},{"name":"UiLayoutComponent"},{"name":"UiPageFooterComponent"},{"name":"UiPageHeaderComponent"},{"name":"UiSupportFormComponent"},{"name":"UiSupportModalComponent"},{"name":"UiTabNavComponent"},{"name":"UiTabNavContainerComponent"},{"name":"UiToolNavComponent"}]},{"type":"imports","elements":[{"name":"UiButtonModule"},{"name":"UiFormControlsModule"},{"name":"UiFormControlsModule"},{"name":"UiFormModule"},{"name":"UiGlobalSearchModule"},{"name":"UiPermissionsModule"},{"name":"UiToastNotificationModule"}]},{"type":"exports","elements":[{"name":"UiLanguageSwitcherComponent"},{"name":"UiLayoutComponent"},{"name":"UiTabNavComponent"},{"name":"UiTabNavContainerComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiModalModule","id":"module-UiModalModule-7d31f499f473109e5e88d060062dc357ece557af34127c8a0d89e2ad4e9adc090bd8f0e6252581378b5a32796f55613e489b4ba88f49b8e50c4f8adb215cc621","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/modal/modal.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n// Components\\nimport { UiCardModule } from \'../card/card.module\';\\nimport { UiModalComponent } from \'./components/modal/modal.component\';\\nimport { UiModalBaseComponent } from \'./components/modal-base/modal-base.component\';\\n\\n@NgModule({\\n    declarations: [\\n        UiModalComponent,\\n        UiModalBaseComponent\\n    ],\\n    imports: [\\n        CommonModule,\\n        UiCardModule\\n    ],\\n    exports: [\\n        UiModalComponent,\\n        UiModalBaseComponent\\n    ],\\n})\\nexport class UiModalModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiModalBaseComponent"},{"name":"UiModalComponent"}]},{"type":"imports","elements":[{"name":"UiCardModule"}]},{"type":"exports","elements":[{"name":"UiModalBaseComponent"},{"name":"UiModalComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiModule","id":"module-UiModule-ac8ba4bf66ee67295b6e1421c89e0d8b7462324073535112845895bcee09786b22a861e699cc3d770340a9e5bbab4e0d16a5280e1505ee09bd04d180488c3d32","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/ui.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { HttpClient, HttpClientModule } from \'@angular/common/http\';\\n// Ngx\\nimport { TranslateModule, TranslateLoader } from \'@ngx-translate/core\';\\nimport { TranslateHttpLoader } from \'@ngx-translate/http-loader\';\\n\\n// AoT requires an exported function for factories\\nexport const uiHttpLoaderFactory = (httpClient: HttpClient) => {\\n    // return new TranslateHttpLoader(httpClient);\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\n};\\n\\n@NgModule({\\n    declarations: [],\\n    imports: [\\n        CommonModule,\\n        TranslateModule.forChild({\\n            loader: {\\n                provide: TranslateLoader,\\n                useFactory: uiHttpLoaderFactory,\\n                deps: [HttpClient],\\n            },\\n            isolate: true,\\n            extend: false,\\n        }),\\n        HttpClientModule,\\n    ],\\n    exports: [],\\n})\\nexport class UiModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiPermissionsModule","id":"module-UiPermissionsModule-e59c95cc77fd9db8d3d21b2450776e8e94fee21af8e81b7063eb63578f07a493699cdb22f9bc689e641c20adbbc20a1522a85d67d05604b8cf4c4196e89cbe37","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/permissions/permissions.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { UiHasPermissionDirective } from \'./directives/has-permission.directive\';\\n\\n@NgModule({\\n    declarations: [UiHasPermissionDirective],\\n    imports: [CommonModule],\\n    exports: [UiHasPermissionDirective],\\n})\\nexport class UiPermissionsModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiHasPermissionDirective"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiHasPermissionDirective"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiPipesModule","id":"module-UiPipesModule-4ad204024a5a08bb01c6e16debb032a6f7bd3a9ad620eea86b327c65cdf9448d2884edfdbec6bc2a58e36a8c3376043cf9f681d309fa3d0ede8a25dc4abc4d8f","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/modules/pipes/pipe.module.ts","methods":[],"sourceCode":"// Angular\\nimport { NgModule } from \'@angular/core\';\\n// Array pipes\\nimport { UiJoinPipe, UiPluckPipe } from \'./array\';\\nimport { UiNoSanitizePipe } from \'./nosanitizerpipe\';\\n\\nconst PIPES = [UiJoinPipe, UiPluckPipe, UiNoSanitizePipe];\\n\\n@NgModule({\\n    declarations: PIPES,\\n    exports: PIPES,\\n})\\nexport class UiPipesModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiJoinPipe"},{"name":"UiNoSanitizePipe"},{"name":"UiPluckPipe"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"UiJoinPipe"},{"name":"UiNoSanitizePipe"},{"name":"UiPluckPipe"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiToastNotificationModule","id":"module-UiToastNotificationModule-1d9c4e75f868a9d45f3c385cc9d7250c49065044570af8550bc096a8ee8855e91fe868ebcba9a25893a562441c9dff13c6e7da9c0e6d5e442d4157ee1f25e5ca","description":"","deprecationMessage":"","deprecated":false,"file":"libs/ui/src/lib/services/toast-notification/toast-notification.module.ts","methods":[],"sourceCode":"// Angular\\nimport { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\n// Ngb\\nimport { NgbModule } from \'@ng-bootstrap/ng-bootstrap\';\\n// Components\\nimport { UiToastsContainerComponent } from \'./toast-container/toasts-container.component\';\\nimport { TranslateModule } from \'@ngx-translate/core\';\\nimport { UiAlertModule } from \'../../modules/alert/alert.module\';\\n\\n@NgModule({\\n    imports: [CommonModule, NgbModule, UiAlertModule],\\n    declarations: [UiToastsContainerComponent],\\n    exports: [UiToastsContainerComponent],\\n})\\nexport class UiToastNotificationModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"UiToastsContainerComponent"}]},{"type":"imports","elements":[{"name":"UiAlertModule"}]},{"type":"exports","elements":[{"name":"UiToastsContainerComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"},{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"},{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"ConsentService","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/consent/consent-service.token.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<IUiConsentService>(\'IUIConsentService\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"pendo","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"pendoFunc","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/pipes/pipe.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[UiJoinPipe, UiPluckPipe, UiNoSanitizePipe]"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"},{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/ui.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\n    // return new TranslateHttpLoader(httpClient);\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\n}"},{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/authentification.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\n}"},{"name":"UiSortingIconsConst","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    sortAscending: \'<i class=\\"bi bi-caret-up-fill\\"/>\',\\n    sortDescending: \'<i class=\\"bi bi-caret-down-fill\\"/>\',\\n    sortUnSort: \'<div class=\\"bi-caret-up-down-fill\\"><i class=\\"bi bi-caret-up-fill\\"/><br><i class=\\"bi bi-caret-down-fill\\"/></div>\',\\n}"}],"functions":[],"typealiases":[],"enumerations":[{"name":"UiAcceptFileTypes","childs":[{"name":"csv","deprecated":false,"deprecationMessage":"","value":"text/csv"},{"name":"doc","deprecated":false,"deprecationMessage":"","value":"application/msword"},{"name":"docx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.wordprocessingml.document"},{"name":"jpg","deprecated":false,"deprecationMessage":"","value":"image/jpeg"},{"name":"json","deprecated":false,"deprecationMessage":"","value":"application/json"},{"name":"pdf","deprecated":false,"deprecationMessage":"","value":"application/pdf"},{"name":"png","deprecated":false,"deprecationMessage":"","value":"image/png"},{"name":"rtf","deprecated":false,"deprecationMessage":"","value":"application/rtf"},{"name":"txt","deprecated":false,"deprecationMessage":"","value":"text/plain"},{"name":"applicationXml","deprecated":false,"deprecationMessage":"","value":"application/xml"},{"name":"textXml","deprecated":false,"deprecationMessage":"","value":"text/xml"},{"name":"xls","deprecated":false,"deprecationMessage":"","value":"application/vnd.ms-excel"},{"name":"xlsx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},{"name":"zip","deprecated":false,"deprecationMessage":"","value":"application/zip"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/file-upload/enums/accept-file-types.ts"},{"name":"UiAcpAuthUserEnum","childs":[{"name":"home","deprecated":false,"deprecationMessage":"","value":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/auth-route.enum.ts"},{"name":"UiAlertLayoutEnum","childs":[{"name":"STACKED","deprecated":false,"deprecationMessage":"","value":"actionsStacked"},{"name":"INLINE","deprecated":false,"deprecationMessage":"","value":"actionsInline"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts"},{"name":"UiAlertSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"small"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"medium"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-size.enum.ts"},{"name":"UiAlertTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts"},{"name":"UiBadgeTypeEnum","childs":[{"name":"status","deprecated":false,"deprecationMessage":"","value":"status"},{"name":"package","deprecated":false,"deprecationMessage":"","value":"package"},{"name":"notification","deprecated":false,"deprecationMessage":"","value":"notification"},{"name":"identifier","deprecated":false,"deprecationMessage":"","value":"identifier"},{"name":"pill","deprecated":false,"deprecationMessage":"","value":"pill"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiButtonIconLocationEnum","childs":[{"name":"suffix","deprecated":false,"deprecationMessage":"","value":"suffix"},{"name":"prefix","deprecated":false,"deprecationMessage":"","value":"prefix"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-icon-location.enum.ts"},{"name":"UiButtonSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"btn-sm"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"btn-md"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts"},{"name":"UiButtonTypeEnum","childs":[{"name":"PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-primary"},{"name":"OUTLINE_PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-outline-primary"},{"name":"LINK","deprecated":false,"deprecationMessage":"","value":"btn-link"},{"name":"LINK_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-link-danger"},{"name":"DANGER","deprecated":false,"deprecationMessage":"","value":"btn-danger"},{"name":"OUTLINE_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-outline-danger"},{"name":"SEPERATOR","deprecated":false,"deprecationMessage":"","value":"btn-seperator"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts"},{"name":"UiCardTitleSizeEnum","childs":[{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/card/enums/card-title-size-enum.ts"},{"name":"UiColorEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/color.enum.ts"},{"name":"UiEnvironmentNameEnum","childs":[{"name":"localdev","deprecated":false,"deprecationMessage":"","value":"localdev"},{"name":"production","deprecated":false,"deprecationMessage":"","value":"production"},{"name":"eucloudprod","deprecated":false,"deprecationMessage":"","value":"eucloud-prod"},{"name":"qa","deprecated":false,"deprecationMessage":"","value":"qa"},{"name":"qa2","deprecated":false,"deprecationMessage":"","value":"qa2"},{"name":"qa3","deprecated":false,"deprecationMessage":"","value":"qa3"},{"name":"staging","deprecated":false,"deprecationMessage":"","value":"staging"},{"name":"uat","deprecated":false,"deprecationMessage":"","value":"uat"},{"name":"dev112","deprecated":false,"deprecationMessage":"","value":"dev112"},{"name":"devopsprod","deprecated":false,"deprecationMessage":"","value":"devops-prod"},{"name":"devopssandbox","deprecated":false,"deprecationMessage":"","value":"devops-sandbox"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/environment-name.enum.ts"},{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts"},{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts"},{"name":"UiIconTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"bi bi-check-circle-fill bi-lg text-success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-triangle-fill bi-lg text-danger-600"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-circle-fill bi-lg text-warning-600"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"bi bi-dash-circle-fill bi-lg text-gray-600"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/icon-type.enum.ts"},{"name":"UiIdentifierClassEnum","childs":[{"name":"Neutral","deprecated":false,"deprecationMessage":"","value":"identifier-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"identifier-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"identifier-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"identifier-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"identifier-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"identifier-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"identifier-category-6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiIdentifierEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiMenuNamesEnum","childs":[{"name":"devHub","deprecated":false,"deprecationMessage":"","value":"devHub"},{"name":"dev","deprecated":false,"deprecationMessage":"","value":"dev"},{"name":"sin","deprecated":false,"deprecationMessage":"","value":"sin"},{"name":"contactsManager","deprecated":false,"deprecationMessage":"","value":"contactsManager"},{"name":"declarationSearch","deprecated":false,"deprecationMessage":"","value":"declarationSearch"},{"name":"segmentation","deprecated":false,"deprecationMessage":"","value":"segmentation"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/menu/menu.service.ts"},{"name":"UiModalDialogSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"xl","deprecated":false,"deprecationMessage":"","value":"xl"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-dialog-size.enum.ts"},{"name":"UiModalTypeEnum","childs":[{"name":"Modal","deprecated":false,"deprecationMessage":"","value":"modal"},{"name":"Drawer","deprecated":false,"deprecationMessage":"","value":"offcanvas"},{"name":"Offcanvas","deprecated":false,"deprecationMessage":"","value":"offcanvas"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-type.enum.ts"},{"name":"UiOneTimePinComponentStateEnum","childs":[{"name":"acp","deprecated":false,"deprecationMessage":""},{"name":"generatePin","deprecated":false,"deprecationMessage":""},{"name":"enterPin","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/authentification/enums/OneTimePinComponentStateEnum.ts"},{"name":"UiPackageClassEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"dot-gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"dot-silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"dot-platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPackageEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"userManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"exceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"segmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"editCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"viewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"viewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"editContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"accessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"accessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"accessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"accessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"fullViewCorrectiveActionRecords"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"viewAssignedCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"addCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"editCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"deleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"respondToCorrectiveActions"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionsRulesSet"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionTemplates"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"createCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"viewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"viewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"viewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"accessEvidenceReview"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"modifyReview"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"manageEvidenceType"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"manageReviewCriteria"},{"name":"userAuthManager","deprecated":false,"deprecationMessage":"","value":"userAuthManager"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"viewEvidenceReview"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"manageEvidenceTypeMapping"},{"name":"profileManager","deprecated":false,"deprecationMessage":"","value":"profileManager"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessPartLevelCustomerRequests"},{"name":"supplierConsent","deprecated":false,"deprecationMessage":"","value":"supplierConsent"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/permissions.enum.ts"},{"name":"UiPillClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillColorEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts"},{"name":"UiPillEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-size.enum.ts"},{"name":"UiRegulationTierEnum","childs":[{"name":"program","deprecated":false,"deprecationMessage":"","value":1},{"name":"group","deprecated":false,"deprecationMessage":"","value":2},{"name":"topic","deprecated":false,"deprecationMessage":"","value":3},{"name":"all","deprecated":false,"deprecationMessage":"","value":4}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/regulation-tier.enum.ts"},{"name":"UiRolesEnum","childs":[{"name":"sysAdmin","deprecated":false,"deprecationMessage":"","value":1},{"name":"assentee","deprecated":false,"deprecationMessage":"","value":6},{"name":"correctiveActionAdmin","deprecated":false,"deprecationMessage":"","value":10},{"name":"correctiveActionsCreatorEditor","deprecated":false,"deprecationMessage":"","value":11},{"name":"correctiveActionsResponder","deprecated":false,"deprecationMessage":"","value":12},{"name":"correctiveActionsViewer","deprecated":false,"deprecationMessage":"","value":13}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/roles.enum.ts"},{"name":"UiRowModelTypeEnum","childs":[{"name":"clientSide","deprecated":false,"deprecationMessage":"","value":"clientSide"},{"name":"serverSide","deprecated":false,"deprecationMessage":"","value":"serverSide"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-model-type.enum.ts"},{"name":"UiRowSelectTypeEnum","childs":[{"name":"single","deprecated":false,"deprecationMessage":"","value":"single"},{"name":"multiple","deprecated":false,"deprecationMessage":"","value":"multiple"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-selection-type.enum.ts"},{"name":"UiStatusClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"dot-neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"dot-success"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"dot-caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"dot-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"dot-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"dot-info"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"dot-tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dot-dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiStatusEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiTemplateNamesEnum","childs":[{"name":"loading","deprecated":false,"deprecationMessage":"","value":"loading"},{"name":"noResults","deprecated":false,"deprecationMessage":"","value":"noResults"},{"name":"results","deprecated":false,"deprecationMessage":"","value":"results"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/global-search/enums/template-names.enum.ts"},{"name":"UiToastTypesEnum","childs":[{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/toast-notification/enums/toast-types.enum.ts"},{"name":"UiTokenKeyPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessUserManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessExceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"ACP.AccessSegmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.EditCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.ViewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.ViewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.EditContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"ACP.AccessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"ACP.AccessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"ACP.AccessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.FullViewCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.RespondToCorrectiveActions"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionTemplates"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewAssignedCorrectiveActionRecords"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"ACP.CreateCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Access"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Review.Modify"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"ACP.ER.EvidenceType.Manage"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"ACP.ER.ReviewCriteria.Manage"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionsRulesSet"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.View"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"ER.EvidenceTypeMap.Manage"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessPartLevelCustomerRequests"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/token-key-permissions.enum.ts"}],"groupedVariables":{"libs/ui/src/lib/services/authentication/authentication.service.ts":[{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/authentication/authentication.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"}],"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts":[{"name":"Assent","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","deprecated":false,"deprecationMessage":"","type":"IUiAciSharedSession"}],"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts":[{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"}],"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts":[{"name":"Clipboard","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'modules/clipboard\')"},{"name":"Delta","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Quill.import(\'delta\')"},{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"}],"libs/ui/src/lib/services/consent/consent-service.token.ts":[{"name":"ConsentService","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/consent/consent-service.token.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<IUiConsentService>(\'IUIConsentService\')"}],"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts":[{"name":"pendo","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"},{"name":"pendoFunc","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","deprecated":false,"deprecationMessage":"","type":"any"}],"libs/ui/src/lib/modules/pipes/pipe.module.ts":[{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/pipes/pipe.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[UiJoinPipe, UiPluckPipe, UiNoSanitizePipe]"}],"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts":[{"name":"Quill","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","deprecated":false,"deprecationMessage":"","type":"any","defaultValue":"QuillNamespace"}],"libs/ui/src/lib/ui.module.ts":[{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/ui.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\n    // return new TranslateHttpLoader(httpClient);\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\n}"}],"libs/ui/src/lib/modules/authentification/authentification.module.ts":[{"name":"uiHttpLoaderFactory","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/authentification/authentification.module.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(httpClient: HttpClient) => {\\n    return new TranslateHttpLoader(httpClient, \'./assets/i18n/\', \'.json\');\\n}"}],"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts":[{"name":"UiSortingIconsConst","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    sortAscending: \'<i class=\\"bi bi-caret-up-fill\\"/>\',\\n    sortDescending: \'<i class=\\"bi bi-caret-down-fill\\"/>\',\\n    sortUnSort: \'<div class=\\"bi-caret-up-down-fill\\"><i class=\\"bi bi-caret-up-fill\\"/><br><i class=\\"bi bi-caret-down-fill\\"/></div>\',\\n}"}]},"groupedFunctions":{},"groupedEnumerations":{"libs/ui/src/lib/modules/file-upload/enums/accept-file-types.ts":[{"name":"UiAcceptFileTypes","childs":[{"name":"csv","deprecated":false,"deprecationMessage":"","value":"text/csv"},{"name":"doc","deprecated":false,"deprecationMessage":"","value":"application/msword"},{"name":"docx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.wordprocessingml.document"},{"name":"jpg","deprecated":false,"deprecationMessage":"","value":"image/jpeg"},{"name":"json","deprecated":false,"deprecationMessage":"","value":"application/json"},{"name":"pdf","deprecated":false,"deprecationMessage":"","value":"application/pdf"},{"name":"png","deprecated":false,"deprecationMessage":"","value":"image/png"},{"name":"rtf","deprecated":false,"deprecationMessage":"","value":"application/rtf"},{"name":"txt","deprecated":false,"deprecationMessage":"","value":"text/plain"},{"name":"applicationXml","deprecated":false,"deprecationMessage":"","value":"application/xml"},{"name":"textXml","deprecated":false,"deprecationMessage":"","value":"text/xml"},{"name":"xls","deprecated":false,"deprecationMessage":"","value":"application/vnd.ms-excel"},{"name":"xlsx","deprecated":false,"deprecationMessage":"","value":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},{"name":"zip","deprecated":false,"deprecationMessage":"","value":"application/zip"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/file-upload/enums/accept-file-types.ts"}],"libs/ui/src/lib/modules/user-auth-manager/enums/auth-route.enum.ts":[{"name":"UiAcpAuthUserEnum","childs":[{"name":"home","deprecated":false,"deprecationMessage":"","value":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/auth-route.enum.ts"}],"libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts":[{"name":"UiAlertLayoutEnum","childs":[{"name":"STACKED","deprecated":false,"deprecationMessage":"","value":"actionsStacked"},{"name":"INLINE","deprecated":false,"deprecationMessage":"","value":"actionsInline"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-layout.enum.ts"}],"libs/ui/src/lib/modules/alert/enums/alert-size.enum.ts":[{"name":"UiAlertSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"small"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"medium"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-size.enum.ts"}],"libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts":[{"name":"UiAlertTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/alert/enums/alert-type.enum.ts"}],"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts":[{"name":"UiBadgeTypeEnum","childs":[{"name":"status","deprecated":false,"deprecationMessage":"","value":"status"},{"name":"package","deprecated":false,"deprecationMessage":"","value":"package"},{"name":"notification","deprecated":false,"deprecationMessage":"","value":"notification"},{"name":"identifier","deprecated":false,"deprecationMessage":"","value":"identifier"},{"name":"pill","deprecated":false,"deprecationMessage":"","value":"pill"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiIdentifierClassEnum","childs":[{"name":"Neutral","deprecated":false,"deprecationMessage":"","value":"identifier-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"identifier-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"identifier-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"identifier-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"identifier-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"identifier-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"identifier-category-6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiIdentifierEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPackageClassEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"dot-gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"dot-silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"dot-platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPackageEnum","childs":[{"name":"gold","deprecated":false,"deprecationMessage":"","value":"gold"},{"name":"silver","deprecated":false,"deprecationMessage":"","value":"silver"},{"name":"platinum","deprecated":false,"deprecationMessage":"","value":"platinum"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiPillEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"category1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"category2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"category3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"category4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"category5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"category6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiStatusClassEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"dot-neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"dot-success"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"dot-caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"dot-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"dot-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"dot-info"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"dot-tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dot-dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"},{"name":"UiStatusEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"caution","deprecated":false,"deprecationMessage":"","value":"caution"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"tertiary","deprecated":false,"deprecationMessage":"","value":"tertiary"},{"name":"dimgrey","deprecated":false,"deprecationMessage":"","value":"dimgrey"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts"}],"libs/ui/src/lib/modules/button/enums/action-button-icon-location.enum.ts":[{"name":"UiButtonIconLocationEnum","childs":[{"name":"suffix","deprecated":false,"deprecationMessage":"","value":"suffix"},{"name":"prefix","deprecated":false,"deprecationMessage":"","value":"prefix"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-icon-location.enum.ts"}],"libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts":[{"name":"UiButtonSizeEnum","childs":[{"name":"SMALL","deprecated":false,"deprecationMessage":"","value":"btn-sm"},{"name":"MEDIUM","deprecated":false,"deprecationMessage":"","value":"btn-md"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-size.enum.ts"}],"libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts":[{"name":"UiButtonTypeEnum","childs":[{"name":"PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-primary"},{"name":"OUTLINE_PRIMARY","deprecated":false,"deprecationMessage":"","value":"btn-outline-primary"},{"name":"LINK","deprecated":false,"deprecationMessage":"","value":"btn-link"},{"name":"LINK_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-link-danger"},{"name":"DANGER","deprecated":false,"deprecationMessage":"","value":"btn-danger"},{"name":"OUTLINE_DANGER","deprecated":false,"deprecationMessage":"","value":"btn-outline-danger"},{"name":"SEPERATOR","deprecated":false,"deprecationMessage":"","value":"btn-seperator"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/button/enums/action-button-type.enum.ts"}],"libs/ui/src/lib/modules/card/enums/card-title-size-enum.ts":[{"name":"UiCardTitleSizeEnum","childs":[{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/card/enums/card-title-size-enum.ts"}],"libs/ui/src/lib/enums/color.enum.ts":[{"name":"UiColorEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/color.enum.ts"}],"libs/ui/src/lib/enums/environment-name.enum.ts":[{"name":"UiEnvironmentNameEnum","childs":[{"name":"localdev","deprecated":false,"deprecationMessage":"","value":"localdev"},{"name":"production","deprecated":false,"deprecationMessage":"","value":"production"},{"name":"eucloudprod","deprecated":false,"deprecationMessage":"","value":"eucloud-prod"},{"name":"qa","deprecated":false,"deprecationMessage":"","value":"qa"},{"name":"qa2","deprecated":false,"deprecationMessage":"","value":"qa2"},{"name":"qa3","deprecated":false,"deprecationMessage":"","value":"qa3"},{"name":"staging","deprecated":false,"deprecationMessage":"","value":"staging"},{"name":"uat","deprecated":false,"deprecationMessage":"","value":"uat"},{"name":"dev112","deprecated":false,"deprecationMessage":"","value":"dev112"},{"name":"devopsprod","deprecated":false,"deprecationMessage":"","value":"devops-prod"},{"name":"devopssandbox","deprecated":false,"deprecationMessage":"","value":"devops-sandbox"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/environment-name.enum.ts"}],"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts":[{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts"}],"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts":[{"name":"UiFormState","childs":[{"name":"notSubmitted","deprecated":false,"deprecationMessage":"","value":0},{"name":"waiting","deprecated":false,"deprecationMessage":"","value":1},{"name":"submitted","deprecated":false,"deprecationMessage":"","value":2}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts"}],"libs/ui/src/lib/enums/icon-type.enum.ts":[{"name":"UiIconTypeEnum","childs":[{"name":"success","deprecated":false,"deprecationMessage":"","value":"bi bi-check-circle-fill bi-lg text-success"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-triangle-fill bi-lg text-danger-600"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"bi bi-exclamation-circle-fill bi-lg text-warning-600"},{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"bi bi-dash-circle-fill bi-lg text-gray-600"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/icon-type.enum.ts"}],"libs/ui/src/lib/services/menu/menu.service.ts":[{"name":"UiMenuNamesEnum","childs":[{"name":"devHub","deprecated":false,"deprecationMessage":"","value":"devHub"},{"name":"dev","deprecated":false,"deprecationMessage":"","value":"dev"},{"name":"sin","deprecated":false,"deprecationMessage":"","value":"sin"},{"name":"contactsManager","deprecated":false,"deprecationMessage":"","value":"contactsManager"},{"name":"declarationSearch","deprecated":false,"deprecationMessage":"","value":"declarationSearch"},{"name":"segmentation","deprecated":false,"deprecationMessage":"","value":"segmentation"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/menu/menu.service.ts"}],"libs/ui/src/lib/enums/modal-dialog-size.enum.ts":[{"name":"UiModalDialogSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"},{"name":"xl","deprecated":false,"deprecationMessage":"","value":"xl"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-dialog-size.enum.ts"}],"libs/ui/src/lib/enums/modal-type.enum.ts":[{"name":"UiModalTypeEnum","childs":[{"name":"Modal","deprecated":false,"deprecationMessage":"","value":"modal"},{"name":"Drawer","deprecated":false,"deprecationMessage":"","value":"offcanvas"},{"name":"Offcanvas","deprecated":false,"deprecationMessage":"","value":"offcanvas"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/enums/modal-type.enum.ts"}],"libs/ui/src/lib/modules/authentification/enums/OneTimePinComponentStateEnum.ts":[{"name":"UiOneTimePinComponentStateEnum","childs":[{"name":"acp","deprecated":false,"deprecationMessage":""},{"name":"generatePin","deprecated":false,"deprecationMessage":""},{"name":"enterPin","deprecated":false,"deprecationMessage":""}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/authentification/enums/OneTimePinComponentStateEnum.ts"}],"libs/ui/src/lib/services/user/enums/permissions.enum.ts":[{"name":"UiPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"userManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"exceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"segmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"editCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"viewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"viewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"editContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"accessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"accessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"accessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"viewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"addIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"editIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"deleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"accessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"fullViewCorrectiveActionRecords"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"viewAssignedCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"addCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"editCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"deleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"respondToCorrectiveActions"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionsRulesSet"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"manageCorrectiveActionTemplates"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"createCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"viewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"viewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"viewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"accessEvidenceReview"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"modifyReview"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"manageEvidenceType"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"manageReviewCriteria"},{"name":"userAuthManager","deprecated":false,"deprecationMessage":"","value":"userAuthManager"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"viewEvidenceReview"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"manageEvidenceTypeMapping"},{"name":"profileManager","deprecated":false,"deprecationMessage":"","value":"profileManager"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"accessPartLevelCustomerRequests"},{"name":"supplierConsent","deprecated":false,"deprecationMessage":"","value":"supplierConsent"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/permissions.enum.ts"}],"libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts":[{"name":"UiPillColorEnum","childs":[{"name":"neutral","deprecated":false,"deprecationMessage":"","value":"badge-neutral"},{"name":"category1","deprecated":false,"deprecationMessage":"","value":"badge-category-1"},{"name":"category2","deprecated":false,"deprecationMessage":"","value":"badge-category-2"},{"name":"category3","deprecated":false,"deprecationMessage":"","value":"badge-category-3"},{"name":"category4","deprecated":false,"deprecationMessage":"","value":"badge-category-4"},{"name":"category5","deprecated":false,"deprecationMessage":"","value":"badge-category-5"},{"name":"category6","deprecated":false,"deprecationMessage":"","value":"badge-category-6"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"badge-success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"badge-warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"badge-danger"},{"name":"info","deprecated":false,"deprecationMessage":"","value":"badge-info"},{"name":"extreme","deprecated":false,"deprecationMessage":"","value":"badge-extreme"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-color.enum.ts"}],"libs/ui/src/lib/modules/form-controls/pills/enums/pill-size.enum.ts":[{"name":"UiPillSizeEnum","childs":[{"name":"sm","deprecated":false,"deprecationMessage":"","value":"sm"},{"name":"md","deprecated":false,"deprecationMessage":"","value":"md"},{"name":"lg","deprecated":false,"deprecationMessage":"","value":"lg"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/form-controls/pills/enums/pill-size.enum.ts"}],"libs/ui/src/lib/modules/user-auth-manager/enums/regulation-tier.enum.ts":[{"name":"UiRegulationTierEnum","childs":[{"name":"program","deprecated":false,"deprecationMessage":"","value":1},{"name":"group","deprecated":false,"deprecationMessage":"","value":2},{"name":"topic","deprecated":false,"deprecationMessage":"","value":3},{"name":"all","deprecated":false,"deprecationMessage":"","value":4}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/user-auth-manager/enums/regulation-tier.enum.ts"}],"libs/ui/src/lib/services/user/enums/roles.enum.ts":[{"name":"UiRolesEnum","childs":[{"name":"sysAdmin","deprecated":false,"deprecationMessage":"","value":1},{"name":"assentee","deprecated":false,"deprecationMessage":"","value":6},{"name":"correctiveActionAdmin","deprecated":false,"deprecationMessage":"","value":10},{"name":"correctiveActionsCreatorEditor","deprecated":false,"deprecationMessage":"","value":11},{"name":"correctiveActionsResponder","deprecated":false,"deprecationMessage":"","value":12},{"name":"correctiveActionsViewer","deprecated":false,"deprecationMessage":"","value":13}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/roles.enum.ts"}],"libs/ui/src/lib/modules/grid/components/grid/enums/row-model-type.enum.ts":[{"name":"UiRowModelTypeEnum","childs":[{"name":"clientSide","deprecated":false,"deprecationMessage":"","value":"clientSide"},{"name":"serverSide","deprecated":false,"deprecationMessage":"","value":"serverSide"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-model-type.enum.ts"}],"libs/ui/src/lib/modules/grid/components/grid/enums/row-selection-type.enum.ts":[{"name":"UiRowSelectTypeEnum","childs":[{"name":"single","deprecated":false,"deprecationMessage":"","value":"single"},{"name":"multiple","deprecated":false,"deprecationMessage":"","value":"multiple"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/grid/components/grid/enums/row-selection-type.enum.ts"}],"libs/ui/src/lib/modules/global-search/enums/template-names.enum.ts":[{"name":"UiTemplateNamesEnum","childs":[{"name":"loading","deprecated":false,"deprecationMessage":"","value":"loading"},{"name":"noResults","deprecated":false,"deprecationMessage":"","value":"noResults"},{"name":"results","deprecated":false,"deprecationMessage":"","value":"results"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/modules/global-search/enums/template-names.enum.ts"}],"libs/ui/src/lib/services/toast-notification/enums/toast-types.enum.ts":[{"name":"UiToastTypesEnum","childs":[{"name":"info","deprecated":false,"deprecationMessage":"","value":"info"},{"name":"success","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"warning","deprecated":false,"deprecationMessage":"","value":"warning"},{"name":"danger","deprecated":false,"deprecationMessage":"","value":"danger"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/toast-notification/enums/toast-types.enum.ts"}],"libs/ui/src/lib/services/user/enums/token-key-permissions.enum.ts":[{"name":"UiTokenKeyPermissionsEnum","childs":[{"name":"userManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessUserManagement"},{"name":"exceptionManagement","deprecated":false,"deprecationMessage":"","value":"ACP.AccessExceptionManagement"},{"name":"segmentationReport","deprecated":false,"deprecationMessage":"","value":"ACP.AccessSegmentationReport"},{"name":"editCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.EditCompanyProfile"},{"name":"viewCompanyProfile","deprecated":false,"deprecationMessage":"","value":"ACP.ViewCompanyProfile"},{"name":"viewContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.ViewContactManagement"},{"name":"editContactManagement","deprecated":false,"deprecationMessage":"","value":"ACP.EditContactManagement"},{"name":"accessDeclarationSearch","deprecated":false,"deprecationMessage":"","value":"ACP.AccessDeclarationSearch"},{"name":"accessTransactionLogs","deprecated":false,"deprecationMessage":"","value":"ACP.AccessTransactionLogs"},{"name":"accessIndirectMonitoring","deprecated":false,"deprecationMessage":"","value":"ACP.AccessIndirectMonitoring"},{"name":"viewIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringRecords"},{"name":"addIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringRecords"},{"name":"editIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringRecords"},{"name":"deleteIndirectMonitoringRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringRecords"},{"name":"viewIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.ViewIndirectMonitoringKeywordsList"},{"name":"addIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.AddIndirectMonitoringKeywordsList"},{"name":"editIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.EditIndirectMonitoringKeywordsList"},{"name":"deleteIndirectMonitoringKeywordsList","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteIndirectMonitoringKeywordsList"},{"name":"accessCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCorrectiveActions"},{"name":"fullViewCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.FullViewCorrectiveActionRecords"},{"name":"addCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.AddCorrectiveActionRecords"},{"name":"editCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.EditCorrectiveActionRecords"},{"name":"deleteCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.DeleteCorrectiveActionRecords"},{"name":"respondToCorrectiveActions","deprecated":false,"deprecationMessage":"","value":"ACP.RespondToCorrectiveActions"},{"name":"manageCorrectiveActionTemplates","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionTemplates"},{"name":"viewAssignedCorrectiveActionRecords","deprecated":false,"deprecationMessage":"","value":"ACP.ViewAssignedCorrectiveActionRecords"},{"name":"createCoreOrganization","deprecated":false,"deprecationMessage":"","value":"ACP.CreateCoreOrganization"},{"name":"viewNoMatchSuppliers","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNoMatchSuppliers"},{"name":"viewDraftOrganizations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewDraftOrganizations"},{"name":"viewNetworkDeclarations","deprecated":false,"deprecationMessage":"","value":"ACP.ViewNetworkDeclarations"},{"name":"accessEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Access"},{"name":"modifyReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.Review.Modify"},{"name":"manageEvidenceType","deprecated":false,"deprecationMessage":"","value":"ACP.ER.EvidenceType.Manage"},{"name":"manageReviewCriteria","deprecated":false,"deprecationMessage":"","value":"ACP.ER.ReviewCriteria.Manage"},{"name":"manageCorrectiveActionsRulesSet","deprecated":false,"deprecationMessage":"","value":"ACP.ManageCorrectiveActionsRulesSet"},{"name":"viewEvidenceReview","deprecated":false,"deprecationMessage":"","value":"ACP.ER.View"},{"name":"manageEvidenceTypeMapping","deprecated":false,"deprecationMessage":"","value":"ER.EvidenceTypeMap.Manage"},{"name":"accessCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessCustomerRequests"},{"name":"accessPartLevelCustomerRequests","deprecated":false,"deprecationMessage":"","value":"ACP.AccessPartLevelCustomerRequests"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"libs/ui/src/lib/services/user/enums/token-key-permissions.enum.ts"}]},"groupedTypeAliases":{}},"routes":[],"coverage":{"count":6,"status":"low","files":[{"filePath":"libs/ui/src/lib/classes/form-validators.class.ts","type":"class","linktype":"classe","name":"UiFormValidators","coveragePercent":100,"coverageCount":"4/4","status":"very-good"},{"filePath":"libs/ui/src/lib/classes/utils.class.ts","type":"class","linktype":"classe","name":"UiUtils","coveragePercent":58,"coverageCount":"7/12","status":"good"},{"filePath":"libs/ui/src/lib/extensions/observable.extensions.ts","type":"interface","linktype":"interface","name":"Observable","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/interfaces/IUiConsentResponse.ts","type":"interface","linktype":"interface","name":"IUiConsentResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/interfaces/app-config.interface.ts","type":"interface","linktype":"interface","name":"IUiAspAppConfig","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/interfaces/consent-service.interface.ts","type":"interface","linktype":"interface","name":"IUiConsentService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/alert/alert.component.ts","type":"component","linktype":"component","name":"UiAlertComponent","coveragePercent":93,"coverageCount":"15/16","status":"very-good"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","type":"interface","linktype":"interface","name":"IUiAudienceConfig","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/auth0-config.ts","type":"interface","linktype":"interface","name":"IUiAuth0Config","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/components/callback.component.ts","type":"component","linktype":"component","name":"UiAuth0CallbackComponent","coveragePercent":12,"coverageCount":"1/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/interceptors/auth.interceptor.ts","type":"interceptor","linktype":"interceptor","name":"UiAuthInterceptor","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","type":"injectable","linktype":"injectable","name":"UiAuthService","coveragePercent":61,"coverageCount":"22/36","status":"good"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","type":"interface","linktype":"interface","name":"IUiAudience","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/auth.service.ts","type":"interface","linktype":"interface","name":"IUiAuthSubsidiary","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"libs/ui/src/lib/modules/authentification/auth0/services/user.service.ts","type":"injectable","linktype":"injectable","name":"UiAuth0UserService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/authentification.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"uiHttpLoaderFactory","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/components/login/one-time-pin.component.ts","type":"component","linktype":"component","name":"UiOneTimePinComponent","coveragePercent":0,"coverageCount":"0/63","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/components/modals/are-you-sure-modal.component.ts","type":"component","linktype":"component","name":"UiAreYouSureModalComponent","coveragePercent":57,"coverageCount":"8/14","status":"good"},{"filePath":"libs/ui/src/lib/modules/authentification/components/modals/privacy-agreement-modal.component.ts","type":"component","linktype":"component","name":"UiPrivacyAgreementModalComponent","coveragePercent":57,"coverageCount":"8/14","status":"good"},{"filePath":"libs/ui/src/lib/modules/authentification/guards/environment.guard.ts","type":"guard","linktype":"guard","name":"UiAcpEnvironmentGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/pages/ascentee-login/ascentee-login.component.ts","type":"component","linktype":"component","name":"UiAssenteeLoginComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-generation/one-time-pin-generation.component.ts","type":"component","linktype":"component","name":"UiOneTimePinGenerationComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/pages/one-time-pin-input/one-time-pin-input.component.ts","type":"component","linktype":"component","name":"UiOneTimePinInputComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"injectable","linktype":"injectable","name":"UiPasswordlessLoginService","coveragePercent":4,"coverageCount":"1/23","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"interface","linktype":"interface","name":"IUiOtpConfirmationResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"interface","linktype":"interface","name":"IUiPasswordLessSignInResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/authentification/services/passwordless-login.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Assent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/button/components/action-buttons/action-buttons.component.ts","type":"component","linktype":"component","name":"UiActionButtonsNewComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/button/components/button/button.component.ts","type":"component","linktype":"component","name":"UiButtonComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/button/interfaces/action-button.interface.ts","type":"interface","linktype":"interface","name":"IUiActionButton","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/card/components/card/card.component.ts","type":"component","linktype":"component","name":"UiCardComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"libs/ui/src/lib/modules/card/interfaces/card.interface.ts","type":"interface","linktype":"interface","name":"IUiActionButton","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/consent/pages/user-consent-page/user-consent-page.component.ts","type":"component","linktype":"component","name":"UiConsentPageComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/dashboard/dashboard.component.ts","type":"component","linktype":"component","name":"UiDashboardComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/error/error.component.ts","type":"component","linktype":"component","name":"UiErrorComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-off.directive.ts","type":"directive","linktype":"directive","name":"UiIsFlagOffDirective","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/directives/is-flag-on.directive.ts","type":"directive","linktype":"directive","name":"UiIsFlagOnDirective","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","type":"injectable","linktype":"injectable","name":"UiFeatureFlagService","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","type":"interface","linktype":"interface","name":"IUiFeatureFlagConfig","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/feature-flags/services/feature-flag.service.ts","type":"interface","linktype":"interface","name":"IUiLocalFlagsData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/components/file-upload/file-upload.component.ts","type":"component","linktype":"component","name":"UiFileUploadComponent","coveragePercent":0,"coverageCount":"0/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/components/models/document.model.ts","type":"class","linktype":"classe","name":"UiDocumentModel","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/components/models/file-item.model.ts","type":"class","linktype":"classe","name":"UiFileItemModel","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/directives/drag-drop.directive.ts","type":"directive","linktype":"directive","name":"UiDragDropDirective","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","type":"injectable","linktype":"injectable","name":"UiFileScanService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/file-upload/services/file-scan.service.ts","type":"interface","linktype":"interface","name":"IUiFileScanResult","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/grid-filter/grid-filter.component.ts","type":"component","linktype":"component","name":"UiGridFilterComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","type":"injectable","linktype":"injectable","name":"UiTestService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/grid-filter/services/test.service.ts","type":"interface","linktype":"interface","name":"IUiOldGridPayload","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","type":"interface","linktype":"interface","name":"IUiClientSideFilter","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","type":"interface","linktype":"interface","name":"IUiFilterModel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter-model.interface.ts","type":"interface","linktype":"interface","name":"IUiServerSideFilter","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","type":"interface","linktype":"interface","name":"IUiQuickFilter","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/interfaces/filter.interface.ts","type":"interface","linktype":"interface","name":"IUiQuickFilterOption","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/filter/quick-filter/quick-filter.component.ts","type":"component","linktype":"component","name":"UiQuickFilterComponent","coveragePercent":0,"coverageCount":"0/32","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/action-buttons/action-buttons.component.ts","type":"component","linktype":"component","name":"UiActionButtonsComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"UiCheckboxComponent","coveragePercent":9,"coverageCount":"4/41","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/date-picker-plus/ui-date-picker-plus.component.ts","type":"component","linktype":"component","name":"UiDatePickerPlusComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/datepicker/datepicker.component.ts","type":"component","linktype":"component","name":"UiDatepickerComponent","coveragePercent":46,"coverageCount":"18/39","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/dropdown-multi-select.component.ts","type":"component","linktype":"component","name":"UiDropdownComponent","coveragePercent":37,"coverageCount":"16/43","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-multi-select/interfaces/dropdown.interface.ts","type":"interface","linktype":"interface","name":"IUiDropdownOption","coveragePercent":33,"coverageCount":"2/6","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","type":"component","linktype":"component","name":"UiDropdownPlusComponent","coveragePercent":1,"coverageCount":"1/66","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown-plus/dropdown-plus.component.ts","type":"interface","linktype":"interface","name":"IUiDropdownPlusOption","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/dropdown/dropdown.component.ts","type":"component","linktype":"component","name":"UiDropdownOldFormControlsComponent","coveragePercent":8,"coverageCount":"4/48","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","type":"component","linktype":"component","name":"UiFormBaseComponent","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/form-base/form-base.component.ts","type":"class","linktype":"classe","name":"UiFormControlConfigObsolete","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/form-control-base/form-control-base.component.ts","type":"component","linktype":"component","name":"UiFormControlBaseComponent","coveragePercent":10,"coverageCount":"4/39","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pills/components/multi-pill/multi-pill.component.ts","type":"component","linktype":"component","name":"UiMultiPillComponent","coveragePercent":0,"coverageCount":"0/25","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","type":"component","linktype":"component","name":"UiPillComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pills/components/pill/pill.component.ts","type":"interface","linktype":"interface","name":"IUiPillComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pipes/month-name.pipe.ts","type":"pipe","linktype":"pipe","name":"UiMonthNamePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/pipes/truncate.pipe.ts","type":"pipe","linktype":"pipe","name":"UiTruncatePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","type":"component","linktype":"component","name":"UiProgressIndicatorComponent","coveragePercent":50,"coverageCount":"4/8","status":"medium"},{"filePath":"libs/ui/src/lib/modules/form-controls/progress-indicator/progress-indicator.component.ts","type":"interface","linktype":"interface","name":"IUiStep","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/buttonObject.class.ts","type":"class","linktype":"classe","name":"UiButtonObject","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"class","linktype":"classe","name":"UiPasteClipboard","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Clipboard","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Delta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Quill","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorToolbarComponent","coveragePercent":0,"coverageCount":"0/54","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorComponent","coveragePercent":9,"coverageCount":"4/41","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/rich-text-editor/rich-text-editor.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Quill","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-item-default.interface.ts","type":"interface","linktype":"interface","name":"IUiTagsInputItemDefault","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/tags-input/interfaces/tags-input-object.interface.ts","type":"interface","linktype":"interface","name":"IUiTagsInputObject","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/tags-input/tags-input.component.ts","type":"component","linktype":"component","name":"UiTagsInputComponent","coveragePercent":4,"coverageCount":"2/47","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/text-area/text-area.component.ts","type":"component","linktype":"component","name":"UiTextAreaComponent","coveragePercent":10,"coverageCount":"4/39","status":"low"},{"filePath":"libs/ui/src/lib/modules/form-controls/text-input/text-input.component.ts","type":"component","linktype":"component","name":"UiTextInputComponent","coveragePercent":10,"coverageCount":"4/39","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"UiCheckboxComponent","coveragePercent":9,"coverageCount":"4/41","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","type":"component","linktype":"component","name":"UiFormBaseComponent","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/form-base/form-base.component.ts","type":"class","linktype":"classe","name":"UiFormControlConfig","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/form-control-base/form-control-base.component.ts","type":"component","linktype":"component","name":"UiFormControlBaseComponent","coveragePercent":9,"coverageCount":"4/43","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/radio-button/radio-button.component.ts","type":"component","linktype":"component","name":"UiRadioButtonComponent","coveragePercent":9,"coverageCount":"4/41","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/buttonObject.class.ts","type":"class","linktype":"classe","name":"UiButtonObject","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"class","linktype":"classe","name":"UiPasteClipboard","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Clipboard","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Delta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/classes/paste.class.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Quill","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/components/toolbar/rich-text-editor-toolbar.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorToolbarComponent","coveragePercent":0,"coverageCount":"0/55","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/rich-text-editor/rich-text-editor.component.ts","type":"component","linktype":"component","name":"UiRichTextEditorComponent","coveragePercent":8,"coverageCount":"4/45","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/text-area/text-area.component.ts","type":"component","linktype":"component","name":"UiTextAreaComponent","coveragePercent":10,"coverageCount":"4/39","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/text-input/text-input.component.ts","type":"component","linktype":"component","name":"UiTextInputComponent","coveragePercent":10,"coverageCount":"4/39","status":"low"},{"filePath":"libs/ui/src/lib/modules/form/toggle/toggle.component.ts","type":"component","linktype":"component","name":"UiToggleComponent","coveragePercent":9,"coverageCount":"4/41","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/components/global-search-results-item/global-search-results-item.component.ts","type":"component","linktype":"component","name":"UiGlobalSearchResultsItemComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/components/global-search-results-page/global-search-results-page.component.ts","type":"component","linktype":"component","name":"UiGlobalSearchResultsPageComponent","coveragePercent":0,"coverageCount":"0/26","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/global-search.component.ts","type":"component","linktype":"component","name":"UiGlobalSearchComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/interfaces/company-search-item.interface.ts","type":"interface","linktype":"interface","name":"IUiCompanySearchItem","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/interfaces/company-search-response.interface.ts","type":"interface","linktype":"interface","name":"IUiCompanySearchResponse","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/interfaces/no-result-search.interface.ts","type":"interface","linktype":"interface","name":"IUiNoResultSearch","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/global-search/services/global-search.service.ts","type":"injectable","linktype":"injectable","name":"UiSearchService","coveragePercent":30,"coverageCount":"3/10","status":"medium"},{"filePath":"libs/ui/src/lib/modules/grid/components/action-buttons-renderer/action-buttons-renderer.component.ts","type":"component","linktype":"component","name":"UiActionButtonsRendererComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/combobox-renderer/combobox-renderer.component.ts","type":"component","linktype":"component","name":"UiComboboxRendererComponent","coveragePercent":45,"coverageCount":"10/22","status":"medium"},{"filePath":"libs/ui/src/lib/modules/grid/components/combobox-renderer/interface/combobox-renderer-params.interface.ts","type":"interface","linktype":"interface","name":"IUiComboboxRendererParams","coveragePercent":12,"coverageCount":"1/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/custom-header/custom-header.component.ts","type":"component","linktype":"component","name":"UiCustomHeaderComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/custom-loading-cell-renderer/custom-loading-cell-renderer.component.ts","type":"component","linktype":"component","name":"UiCustomLoadingCellRendererComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/custom-loading-cell-renderer/custom-loading-cell-renderer.component.ts","type":"interface","linktype":"interface","name":"IUiLoadingCellRendererParams","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/custom-multiselect-header/custom-multiselect-header.component.ts","type":"component","linktype":"component","name":"UiCustomMultiSelectHeaderComponent","coveragePercent":3,"coverageCount":"1/29","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/dropdown-renderer/dropdown-renderer.component.ts","type":"component","linktype":"component","name":"UiDropdownRendererComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","type":"component","linktype":"component","name":"UiGridHeaderButtonsComponent","coveragePercent":60,"coverageCount":"3/5","status":"good"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid-header-buttons/grid-header-buttons.component.ts","type":"interface","linktype":"interface","name":"IUiHeaderButton","coveragePercent":8,"coverageCount":"1/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid-header/grid-header.component.ts","type":"component","linktype":"component","name":"UiGridHeaderComponent","coveragePercent":10,"coverageCount":"2/20","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/grid.component.ts","type":"component","linktype":"component","name":"UiGridComponent","coveragePercent":1,"coverageCount":"1/76","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionBtn","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionBtnConfig","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionCellRendererParams","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiActionDivider","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiCustomHeaderParams","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiMultiSelectHeaderParams","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/grid/interfaces/grid.interface.ts","type":"interface","linktype":"interface","name":"IUiSelectionChangeParams","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/pill-renderer/pill-renderer.component.ts","type":"component","linktype":"component","name":"UiPillRendererComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/components/text-cell-renderer/text-cell-renderer.component.ts","type":"component","linktype":"component","name":"UiTextCellRendererComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/grid/constants/sorting-icons.const.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"UiSortingIconsConst","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/feedback-form/feedback-form.component.ts","type":"component","linktype":"component","name":"UiFeedbackFormComponent","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/feedback-modal/feedback-modal.component.ts","type":"component","linktype":"component","name":"UiFeedbackModalComponent","coveragePercent":47,"coverageCount":"8/17","status":"medium"},{"filePath":"libs/ui/src/lib/modules/layout/components/language-switcher/language-switcher.component.ts","type":"component","linktype":"component","name":"UiLanguageSwitcherComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/page-footer/page-footer.component.ts","type":"component","linktype":"component","name":"UiPageFooterComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/page-header/page-header.component.ts","type":"component","linktype":"component","name":"UiPageHeaderComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/support-form/support-form.component.ts","type":"component","linktype":"component","name":"UiSupportFormComponent","coveragePercent":0,"coverageCount":"0/36","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/support-modal/support-modal.component.ts","type":"component","linktype":"component","name":"UiSupportModalComponent","coveragePercent":47,"coverageCount":"8/17","status":"medium"},{"filePath":"libs/ui/src/lib/modules/layout/components/tab-nav-container/tab-nav-container.component.ts","type":"component","linktype":"component","name":"UiTabNavContainerComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/tab-nav/tab-nav.component.ts","type":"component","linktype":"component","name":"UiTabNavComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/components/tool-nav/tool-nav.component.ts","type":"component","linktype":"component","name":"UiToolNavComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/layout.component.ts","type":"component","linktype":"component","name":"UiLayoutComponent","coveragePercent":0,"coverageCount":"0/59","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","type":"injectable","linktype":"injectable","name":"UiPageFooterService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-footer-service/page-footer.service.ts","type":"interface","linktype":"interface","name":"IUiPageFooterItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","type":"injectable","linktype":"injectable","name":"UiPageHeaderService","coveragePercent":0,"coverageCount":"0/34","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout/services/page-header-service/page-header.service.ts","type":"interface","linktype":"interface","name":"IUiPageHeaderItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/layout2/layout2.component.ts","type":"component","linktype":"component","name":"UiLayout2Component","coveragePercent":0,"coverageCount":"0/62","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-footer/page-footer.component.ts","type":"component","linktype":"component","name":"UiPageFooterComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","type":"component","linktype":"component","name":"UiHeaderDropDownComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-header/components/drop-down/drop-down.component.ts","type":"interface","linktype":"interface","name":"IUiDropdownConfig","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/page-header/page-header.component.ts","type":"component","linktype":"component","name":"UiPageHeaderComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/components/subsidiary-selector/subsidiary-selector.component.ts","type":"component","linktype":"component","name":"UiSubsidiarySelectorComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","type":"injectable","linktype":"injectable","name":"UiPageFooterService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-footer-service/page-footer.service.ts","type":"interface","linktype":"interface","name":"IUiPageFooterItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","type":"injectable","linktype":"injectable","name":"UiPageHeaderService","coveragePercent":0,"coverageCount":"0/34","status":"low"},{"filePath":"libs/ui/src/lib/modules/layout2/services/page-header-service/page-header.service.ts","type":"interface","linktype":"interface","name":"IUiPageHeaderItem","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/modal/components/modal-base/modal-base.component.ts","type":"component","linktype":"component","name":"UiModalBaseComponent","coveragePercent":75,"coverageCount":"9/12","status":"good"},{"filePath":"libs/ui/src/lib/modules/modal/components/modal/modal.component.ts","type":"component","linktype":"component","name":"UiModalComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/modal/configuration/modal-config.class.ts","type":"class","linktype":"classe","name":"UiModalConfig","coveragePercent":90,"coverageCount":"10/11","status":"very-good"},{"filePath":"libs/ui/src/lib/modules/modal/services/modal.service.ts","type":"injectable","linktype":"injectable","name":"UiModalService","coveragePercent":87,"coverageCount":"7/8","status":"very-good"},{"filePath":"libs/ui/src/lib/modules/permissions/directives/has-permission.directive.ts","type":"directive","linktype":"directive","name":"UiHasPermissionDirective","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/permissions/guards/permission.guard.ts","type":"guard","linktype":"guard","name":"UiPermissionGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/array/join.pipe.ts","type":"pipe","linktype":"pipe","name":"UiJoinPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/array/pluck.pipe.ts","type":"pipe","linktype":"pipe","name":"UiPluckPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/nosanitizerpipe.ts","type":"pipe","linktype":"pipe","name":"UiNoSanitizePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/pipes/pipe.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PIPES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/confirm-delete-session-modal/confirm-delete-session-modal.component.ts","type":"component","linktype":"component","name":"UiAcpConfirmDeleteSessionModalComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/contact-information-section/contact-information-section.component.ts","type":"component","linktype":"component","name":"UiAcpContactInformationSectionComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/offcanvas/offcanvas.component.ts","type":"component","linktype":"component","name":"UiOffcanvasComponent","coveragePercent":22,"coverageCount":"2/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/organizations-section/organizations-section.component.ts","type":"component","linktype":"component","name":"UiAcpOrganizationSectionComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/profile-section/profile-section.component.ts","type":"component","linktype":"component","name":"UiAcpProfileSectionComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/session-item/session-item.component.ts","type":"component","linktype":"component","name":"UiAcpSessionItemComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/session-list/session-list.component.ts","type":"component","linktype":"component","name":"UiAcpSessionListComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-data.interface.ts","type":"interface","linktype":"interface","name":"IUiTreeData","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/interfaces/tree-node.interface.ts","type":"interface","linktype":"interface","name":"IUiTreeNode","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/tree-view/tree-view.component.ts","type":"component","linktype":"component","name":"UiTreeViewComponent","coveragePercent":16,"coverageCount":"2/12","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/components/user-details/user-details.component.ts","type":"component","linktype":"component","name":"UiAcpUserDetailsComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/address-details.interface.ts","type":"interface","linktype":"interface","name":"IUiAddressDetails","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-relationship.interface.ts","type":"interface","linktype":"interface","name":"IUiContactRelationship","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/contact-role.interface.ts","type":"interface","linktype":"interface","name":"IUiContactRole","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/language.interface.ts","type":"interface","linktype":"interface","name":"IUiLanguage","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/organization.interface.ts","type":"interface","linktype":"interface","name":"IUiOrganization","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/person-details.interface.ts","type":"interface","linktype":"interface","name":"IUiPersonDetails","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulation-short.interface.ts","type":"interface","linktype":"interface","name":"IUiRegulationShort","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","type":"interface","linktype":"interface","name":"IUiRegulationLeaf","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/interfaces/regulations-tree.interface.ts","type":"interface","linktype":"interface","name":"IUiRegulationsTree","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","type":"class","linktype":"classe","name":"UiAcpUserSession","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/models/session.model.ts","type":"class","linktype":"classe","name":"UiAcpUserSessionItem","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/profile-manager.component.ts","type":"component","linktype":"component","name":"UiAcpProfileManagerComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/services/person.service.ts","type":"injectable","linktype":"injectable","name":"UiPersonService","coveragePercent":40,"coverageCount":"4/10","status":"medium"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/services/profile-manager-service.ts","type":"injectable","linktype":"injectable","name":"UiAcpProfileManagerService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/modules/user-auth-manager/services/regulation.service.ts","type":"injectable","linktype":"injectable","name":"UiRegulationService","coveragePercent":27,"coverageCount":"3/11","status":"medium"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo-config.ts","type":"interface","linktype":"interface","name":"IUiPendoService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","type":"interface","linktype":"interface","name":"IUiPendoAccountInfo","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.interface.ts","type":"interface","linktype":"interface","name":"IUiPendoVisitorInfo","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","type":"injectable","linktype":"injectable","name":"UiPendoService","coveragePercent":81,"coverageCount":"13/16","status":"very-good"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"pendo","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/analytics/pendo/pendo.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"pendoFunc","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"injectable","linktype":"injectable","name":"UiAuthenticationService","coveragePercent":23,"coverageCount":"5/21","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"interface","linktype":"interface","name":"IUiAuthResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"interface","linktype":"interface","name":"IUiSession","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/services/authentication/authentication.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Assent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/communication/local-communication/local-communication.service.ts","type":"injectable","linktype":"injectable","name":"UiLocalCommunicationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/communication/remote-communication/remote-communication.service.ts","type":"injectable","linktype":"injectable","name":"UiRemoteCommunicationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/communication/socket-communication/socket-communication.service.ts","type":"injectable","linktype":"injectable","name":"UiSocketCommunicationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/configuration/configuration.service.ts","type":"injectable","linktype":"injectable","name":"UiConfigurationService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/services/configuration/configuration.service.ts","type":"interface","linktype":"interface","name":"IUiAppConfig","coveragePercent":0,"coverageCount":"0/48","status":"low"},{"filePath":"libs/ui/src/lib/services/consent/consent-service.token.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ConsentService","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","type":"injectable","linktype":"injectable","name":"UiCsvParserService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"libs/ui/src/lib/services/csv-parser/csv-parser.service.ts","type":"interface","linktype":"interface","name":"IUiCsvParserConfig","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","type":"injectable","linktype":"injectable","name":"UiFileScanService","coveragePercent":12,"coverageCount":"1/8","status":"low"},{"filePath":"libs/ui/src/lib/services/file-scan/file-scan.service.ts","type":"interface","linktype":"interface","name":"IUiFileScanResult","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/footer/footer.service.ts","type":"injectable","linktype":"injectable","name":"UiFooterService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header-sub/header-sub.service.ts","type":"injectable","linktype":"injectable","name":"UiHeaderSubService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header/header.service.ts","type":"injectable","linktype":"injectable","name":"UiHeaderService","coveragePercent":0,"coverageCount":"0/25","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header/header.service.ts","type":"interface","linktype":"interface","name":"IUiSubHeaderTab","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/header/header.service.ts","type":"interface","linktype":"interface","name":"IUiSubHeaderTool","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/services/layout/layout.service.ts","type":"injectable","linktype":"injectable","name":"UiLayoutService","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"libs/ui/src/lib/services/localization/localization.service.ts","type":"injectable","linktype":"injectable","name":"UiLocalizationService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/menu/menu.service.ts","type":"injectable","linktype":"injectable","name":"UiMenuService","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"libs/ui/src/lib/services/menu/menu.service.ts","type":"interface","linktype":"interface","name":"IUiMenuItem","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"libs/ui/src/lib/services/menu/menu.service.ts","type":"interface","linktype":"interface","name":"IUiMenus","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/navigation/interfaces/navigation.service.interface.ts","type":"interface","linktype":"interface","name":"IUiNavigationService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"libs/ui/src/lib/services/navigation/navigation.service.ts","type":"injectable","linktype":"injectable","name":"UiNavigationService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/notification/notification.service.ts","type":"injectable","linktype":"injectable","name":"UiNotificationService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/storage/session/session.service.ts","type":"injectable","linktype":"injectable","name":"UiSessionService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/interfaces/toast-options.interface.ts","type":"interface","linktype":"interface","name":"IUiToastOptions","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/interfaces/toast.interface.ts","type":"interface","linktype":"interface","name":"IUiToast","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/toast-container/toasts-container.component.ts","type":"component","linktype":"component","name":"UiToastsContainerComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"libs/ui/src/lib/services/toast-notification/toast.service.ts","type":"injectable","linktype":"injectable","name":"UiToastService","coveragePercent":50,"coverageCount":"3/6","status":"medium"},{"filePath":"libs/ui/src/lib/services/user/interfaces/permissions.interface.ts","type":"interface","linktype":"interface","name":"IUiPermissions","coveragePercent":0,"coverageCount":"0/39","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/role.interface.ts","type":"interface","linktype":"interface","name":"IUiRole","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/user.interface.ts","type":"interface","linktype":"interface","name":"IUiUser","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","type":"interface","linktype":"interface","name":"IUiUserPreference","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/lib/services/user/interfaces/user.preferences.interface.ts","type":"interface","linktype":"interface","name":"IUiUserPreferences","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"libs/ui/src/lib/services/user/models/permissions.model.ts","type":"class","linktype":"classe","name":"UiPermissionsModel","coveragePercent":0,"coverageCount":"0/39","status":"low"},{"filePath":"libs/ui/src/lib/services/user/user.service.ts","type":"injectable","linktype":"injectable","name":"UiUserService","coveragePercent":16,"coverageCount":"3/18","status":"low"},{"filePath":"libs/ui/src/lib/ui.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"uiHttpLoaderFactory","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}')}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[2780],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./libs/ui/src/assets/styles/styles.scss"),__webpack_exec__("./node_modules/bootstrap/scss/bootstrap.scss"),__webpack_exec__("./node_modules/bootstrap/dist/css/bootstrap.min.css"),__webpack_exec__("./node_modules/bootstrap-icons/font/bootstrap-icons.css"),__webpack_exec__("./node_modules/ag-grid-community/dist/styles/ag-grid.min.css"),__webpack_exec__("./node_modules/@angular-devkit/build-angular/node_modules/core-js/proposals/reflect-metadata.js"))));__webpack_require__.O()}]);